; ModuleID = '../bcout/drivers/dma/dmaengine.llvm.bc'
source_filename = "drivers/dma/dmaengine.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall3.init\22, \22a\22\09"
module asm "__initcall_dma_channel_table_init3:\09\09\09"
module asm ".long\09dma_channel_table_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"
module asm ".section\09\22.initcall3.init\22, \22a\22\09"
module asm "__initcall_dma_bus_init3:\09\09\09"
module asm ".long\09dma_bus_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.dma_chan_tbl_ent = type { %struct.dma_chan* }
%struct.dma_chan = type { %struct.dma_device*, %struct.device*, i32, i32, i32, %struct.dma_chan_dev*, i8*, %struct.list_head, %struct.dma_chan_percpu*, i32, i32, %struct.dma_router*, i8*, i8* }
%struct.dma_device = type { %struct.kref, i32, i32, %struct.list_head, %struct.list_head, %struct.dma_filter, %struct.dma_cap_mask_t, i32, i16, i16, i32, i32, i32, i32, i32, %struct.device*, %struct.module*, %struct.ida, %struct.mutex, i32, i32, i32, i32, i32, i32, i8, i32, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64*, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i32, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64)*, void (%struct.dma_chan*, %struct.dma_slave_caps*)*, i32 (%struct.dma_chan*, %struct.dma_slave_config*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)*, void (%struct.dma_chan*)*, void (%struct.dma_device*)* }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.dma_filter = type { i1 (%struct.dma_chan*, i8*)*, i32, %struct.dma_slave_map* }
%struct.dma_slave_map = type { i8*, i8*, i8* }
%struct.dma_cap_mask_t = type { [1 x i64] }
%struct.module = type opaque
%struct.ida = type { %struct.xarray }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.dma_async_tx_descriptor = type { i32, i32, i64, %struct.dma_chan*, i32 (%struct.dma_async_tx_descriptor*)*, i32 (%struct.dma_async_tx_descriptor*)*, void (i8*)*, void (i8*, %struct.dmaengine_result*)*, i8*, %struct.dmaengine_unmap_data*, i32, %struct.dma_descriptor_metadata_ops* }
%struct.dmaengine_result = type { i32, i32 }
%struct.dmaengine_unmap_data = type { i8, i8, i8, i8, %struct.device*, %struct.kref, i64, [0 x i64] }
%struct.dma_descriptor_metadata_ops = type { i32 (%struct.dma_async_tx_descriptor*, i8*, i64)*, i8* (%struct.dma_async_tx_descriptor*, i64*, i64*)*, i32 (%struct.dma_async_tx_descriptor*, i64)* }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.dma_interleaved_template = type { i64, i64, i32, i8, i8, i8, i8, i64, i64, [0 x %struct.data_chunk] }
%struct.data_chunk = type { i64, i64, i64, i64 }
%struct.dma_slave_caps = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8 }
%struct.dma_slave_config = type { i32, i64, i64, i32, i32, i32, i32, i32, i32, i8, i32 }
%struct.dma_tx_state = type { i32, i32, i32, i32 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.67, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.67 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.65, %struct.list_head, %struct.list_head, %union.anon.66 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.63 }
%union.anon.63 = type { %struct.anon.64 }
%struct.anon.64 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.55, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.55 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.56, i32 }
%union.anon.56 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.48, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.34, %union.anon.35, i32 }
%struct.request_queue = type opaque
%union.anon.34 = type { %struct.list_head }
%union.anon.35 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.36 }
%struct.anon.36 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.40 }
%struct.anon.40 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.47, i32, [12 x i8] }
%union.anon.47 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.48 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.49, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.52 }
%union.anon.49 = type { %struct.anon.50 }
%struct.anon.50 = type { i64, i64 }
%union.anon.52 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.65 = type { %struct.list_head }
%union.anon.66 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.57, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.58, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.59, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.62, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.57 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.58 = type { %struct.callback_head }
%union.anon.59 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.62 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.60 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.60 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.33 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.33 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.dma_chan_dev = type { %struct.dma_chan*, %struct.device, i32 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.dma_chan_percpu = type { i64, i64 }
%struct.dma_router = type { %struct.device*, void (%struct.device*, i8*)* }
%struct.kmem_cache = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.dmaengine_unmap_pool = type { %struct.kmem_cache*, i8*, %struct.mempool_s*, i64 }
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }

@__UNIQUE_ID___addressable_dma_channel_table_init244 = internal global i8* bitcast (i32 ()* @dma_channel_table_init to i8*), section ".discard.addressable", align 8, !dbg !0
@jiffies = external dso_local global i64, align 8
@.str = private unnamed_addr constant [14 x i8] c"%s: timeout!\0A\00", align 1
@__func__.dma_sync_wait = private unnamed_addr constant [14 x i8] c"dma_sync_wait\00", align 1
@channel_table = internal global [16 x %struct.dma_chan_tbl_ent*] zeroinitializer, align 16, !dbg !4310
@dma_device_list = internal global %struct.list_head { %struct.list_head* @dma_device_list, %struct.list_head* @dma_device_list }, align 8, !dbg !4315
@dma_list_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @dma_list_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @dma_list_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4317
@.str.1 = private unnamed_addr constant [7 x i8] c"dma:%s\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"slave\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"Cannot create DMA %s symlink\0A\00", align 1
@dma_release_channel.__warned = internal global i8 0, section ".data.once", align 1, !dbg !4298
@.str.4 = private unnamed_addr constant [30 x i8] c"chan reference count %d != 1\0A\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"drivers/dma/dmaengine.c\00", align 1
@dmaengine_ref_count = internal global i64 0, align 8, !dbg !4308
@.str.6 = private unnamed_addr constant [38 x i8] c"\013dmaengine: DMAdevice must have dev\0A\00", align 1
@.str.7 = private unnamed_addr constant [52 x i8] c"Device claims capability %s, but op is not defined\0A\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"DMA_MEMCPY\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"DMA_XOR\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"DMA_XOR_VAL\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"DMA_PQ\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"DMA_PQ_VAL\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"DMA_MEMSET\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"DMA_INTERRUPT\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"DMA_CYCLIC\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"DMA_INTERLEAVE\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"Device tx_status is not defined\0A\00", align 1
@.str.18 = private unnamed_addr constant [37 x i8] c"Device issue_pending is not defined\0A\00", align 1
@dma_async_device_register.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4301
@.str.19 = private unnamed_addr constant [20 x i8] c"&device->chan_mutex\00", align 1
@dma_ida = internal global %struct.ida { %struct.xarray { %struct.spinlock undef, i32 8388613, i8* null } }, align 8, !dbg !4352
@.str.20 = private unnamed_addr constant [46 x i8] c"%s timeout waiting for descriptor submission\0A\00", align 1
@__func__.dma_wait_for_async_tx = private unnamed_addr constant [22 x i8] c"dma_wait_for_async_tx\00", align 1
@__UNIQUE_ID___addressable_dma_bus_init294 = internal global i8* bitcast (i32 ()* @dma_bus_init to i8*), section ".discard.addressable", align 8, !dbg !4306
@dma_cap_mask_all = internal global %struct.dma_cap_mask_t zeroinitializer, align 8, !dbg !4313
@.str.21 = private unnamed_addr constant [59 x i8] c"\013dmaengine: dmaengine dma_channel_table_init failure: %d\0A\00", align 1
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 8
@__cpu_online_mask = external dso_local global %struct.cpumask, align 8
@.str.22 = private unnamed_addr constant [51 x i8] c"\013dmaengine: %s: unable to alloc ida for chan: %d\0A\00", align 1
@__func__.__dma_async_device_channel_register = private unnamed_addr constant [36 x i8] c"__dma_async_device_channel_register\00", align 1
@dma_devclass = internal global %struct.class { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), %struct.module* null, %struct.attribute_group** null, %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @dma_dev_groups, i32 0, i32 0), %struct.kobject* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*)* null, void (%struct.class*)* null, void (%struct.device*)* @chan_dev_release, i32 (%struct.device*)* null, %struct.kobj_ns_type_operations* null, i8* (%struct.device*)* null, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)* null, %struct.dev_pm_ops* null, %struct.subsys_private* null }, align 8, !dbg !4319
@.str.23 = private unnamed_addr constant [12 x i8] c"dma%dchan%d\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.24 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"dma\00", align 1
@dma_dev_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @dma_dev_group, %struct.attribute_group* null], align 16, !dbg !4321
@dma_dev_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([4 x %struct.attribute*], [4 x %struct.attribute*]* @dma_dev_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4324
@dma_dev_attrs = internal global [4 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_memcpy_count, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_bytes_transferred, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_in_use, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4326
@dev_attr_memcpy_count = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @memcpy_count_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4329
@dev_attr_bytes_transferred = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @bytes_transferred_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4343
@dev_attr_in_use = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @in_use_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4345
@.str.26 = private unnamed_addr constant [13 x i8] c"memcpy_count\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"%lu\0A\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"bytes_transferred\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"in_use\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@__dma_async_device_channel_unregister.__warned = internal global i8 0, section ".data.once", align 1, !dbg !4347
@.str.31 = private unnamed_addr constant [45 x i8] c"%s called while %d clients hold a reference\0A\00", align 1
@__func__.__dma_async_device_channel_unregister = private unnamed_addr constant [38 x i8] c"__dma_async_device_channel_unregister\00", align 1
@unmap_pool = internal global [1 x %struct.dmaengine_unmap_pool] [%struct.dmaengine_unmap_pool { %struct.kmem_cache* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i32 0, i32 0), %struct.mempool_s* null, i64 2 }], align 16, !dbg !4354
@.str.32 = private unnamed_addr constant [18 x i8] c"dmaengine-unmap-2\00", align 1
@dma_bus_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4384
@llvm.used = appending global [2 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_dma_channel_table_init244 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_dma_bus_init294 to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_channel_table_init() #0 section ".init.text" !dbg !4394 {
entry:
  %cap = alloca i32, align 4
  %err = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !4395, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4397, metadata !DIExpression()), !dbg !4398
  store i32 0, i32* %err, align 4, !dbg !4398
  call void @bitmap_fill(i64* getelementptr inbounds (%struct.dma_cap_mask_t, %struct.dma_cap_mask_t* @dma_cap_mask_all, i32 0, i32 0, i64 0), i32 16) #9, !dbg !4399
  call void @clear_bit(i64 7, i64* getelementptr inbounds (%struct.dma_cap_mask_t, %struct.dma_cap_mask_t* @dma_cap_mask_all, i32 0, i32 0, i64 0)) #9, !dbg !4400
  call void @clear_bit(i64 8, i64* getelementptr inbounds (%struct.dma_cap_mask_t, %struct.dma_cap_mask_t* @dma_cap_mask_all, i32 0, i32 0, i64 0)) #9, !dbg !4401
  call void @clear_bit(i64 10, i64* getelementptr inbounds (%struct.dma_cap_mask_t, %struct.dma_cap_mask_t* @dma_cap_mask_all, i32 0, i32 0, i64 0)) #9, !dbg !4402
  %call = call i64 @find_first_bit(i64* getelementptr inbounds (%struct.dma_cap_mask_t, %struct.dma_cap_mask_t* @dma_cap_mask_all, i32 0, i32 0, i64 0), i64 16) #9, !dbg !4403
  %conv = trunc i64 %call to i32, !dbg !4403
  store i32 %conv, i32* %cap, align 4, !dbg !4403
  br label %for.cond, !dbg !4403

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %cap, align 4, !dbg !4405
  %cmp = icmp ult i32 %0, 16, !dbg !4405
  br i1 %cmp, label %for.body, label %for.end, !dbg !4403

for.body:                                         ; preds = %for.cond
  %call2 = call i8* @__alloc_percpu(i64 8, i64 8) #9, !dbg !4407
  %1 = bitcast i8* %call2 to %struct.dma_chan_tbl_ent*, !dbg !4407
  %2 = load i32, i32* %cap, align 4, !dbg !4409
  %idxprom = zext i32 %2 to i64, !dbg !4410
  %arrayidx = getelementptr [16 x %struct.dma_chan_tbl_ent*], [16 x %struct.dma_chan_tbl_ent*]* @channel_table, i64 0, i64 %idxprom, !dbg !4410
  store %struct.dma_chan_tbl_ent* %1, %struct.dma_chan_tbl_ent** %arrayidx, align 8, !dbg !4411
  %3 = load i32, i32* %cap, align 4, !dbg !4412
  %idxprom3 = zext i32 %3 to i64, !dbg !4414
  %arrayidx4 = getelementptr [16 x %struct.dma_chan_tbl_ent*], [16 x %struct.dma_chan_tbl_ent*]* @channel_table, i64 0, i64 %idxprom3, !dbg !4414
  %4 = load %struct.dma_chan_tbl_ent*, %struct.dma_chan_tbl_ent** %arrayidx4, align 8, !dbg !4414
  %tobool = icmp ne %struct.dma_chan_tbl_ent* %4, null, !dbg !4414
  br i1 %tobool, label %if.end, label %if.then, !dbg !4415

if.then:                                          ; preds = %for.body
  store i32 -12, i32* %err, align 4, !dbg !4416
  br label %for.end, !dbg !4418

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4419

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %cap, align 4, !dbg !4405
  %add = add i32 %5, 1, !dbg !4405
  %conv5 = zext i32 %add to i64, !dbg !4405
  %call6 = call i64 @find_next_bit(i64* getelementptr inbounds (%struct.dma_cap_mask_t, %struct.dma_cap_mask_t* @dma_cap_mask_all, i32 0, i32 0, i64 0), i64 16, i64 %conv5) #9, !dbg !4405
  %conv7 = trunc i64 %call6 to i32, !dbg !4405
  store i32 %conv7, i32* %cap, align 4, !dbg !4405
  br label %for.cond, !dbg !4405, !llvm.loop !4420

for.end:                                          ; preds = %if.then, %for.cond
  %6 = load i32, i32* %err, align 4, !dbg !4422
  %tobool8 = icmp ne i32 %6, 0, !dbg !4422
  br i1 %tobool8, label %if.then9, label %if.end25, !dbg !4424

if.then9:                                         ; preds = %for.end
  %7 = load i32, i32* %err, align 4, !dbg !4425
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 %7) #10, !dbg !4425
  %call11 = call i64 @find_first_bit(i64* getelementptr inbounds (%struct.dma_cap_mask_t, %struct.dma_cap_mask_t* @dma_cap_mask_all, i32 0, i32 0, i64 0), i64 16) #9, !dbg !4427
  %conv12 = trunc i64 %call11 to i32, !dbg !4427
  store i32 %conv12, i32* %cap, align 4, !dbg !4427
  br label %for.cond13, !dbg !4427

for.cond13:                                       ; preds = %for.inc19, %if.then9
  %8 = load i32, i32* %cap, align 4, !dbg !4429
  %cmp14 = icmp ult i32 %8, 16, !dbg !4429
  br i1 %cmp14, label %for.body16, label %for.end24, !dbg !4427

for.body16:                                       ; preds = %for.cond13
  %9 = load i32, i32* %cap, align 4, !dbg !4431
  %idxprom17 = zext i32 %9 to i64, !dbg !4432
  %arrayidx18 = getelementptr [16 x %struct.dma_chan_tbl_ent*], [16 x %struct.dma_chan_tbl_ent*]* @channel_table, i64 0, i64 %idxprom17, !dbg !4432
  %10 = load %struct.dma_chan_tbl_ent*, %struct.dma_chan_tbl_ent** %arrayidx18, align 8, !dbg !4432
  %11 = bitcast %struct.dma_chan_tbl_ent* %10 to i8*, !dbg !4432
  call void @free_percpu(i8* %11) #9, !dbg !4433
  br label %for.inc19, !dbg !4433

for.inc19:                                        ; preds = %for.body16
  %12 = load i32, i32* %cap, align 4, !dbg !4429
  %add20 = add i32 %12, 1, !dbg !4429
  %conv21 = zext i32 %add20 to i64, !dbg !4429
  %call22 = call i64 @find_next_bit(i64* getelementptr inbounds (%struct.dma_cap_mask_t, %struct.dma_cap_mask_t* @dma_cap_mask_all, i32 0, i32 0, i64 0), i64 16, i64 %conv21) #9, !dbg !4429
  %conv23 = trunc i64 %call22 to i32, !dbg !4429
  store i32 %conv23, i32* %cap, align 4, !dbg !4429
  br label %for.cond13, !dbg !4429, !llvm.loop !4434

for.end24:                                        ; preds = %for.cond13
  br label %if.end25, !dbg !4436

if.end25:                                         ; preds = %for.end24, %for.end
  %13 = load i32, i32* %err, align 4, !dbg !4437
  ret i32 %13, !dbg !4438
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dma_sync_wait(%struct.dma_chan* %chan, i32 %cookie) #1 !dbg !4439 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4442, metadata !DIExpression()), !dbg !4447
  %retval = alloca i32, align 4
  %chan.addr = alloca %struct.dma_chan*, align 8
  %cookie.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %dma_sync_wait_timeout = alloca i64, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !4449, metadata !DIExpression()), !dbg !4450
  store i32 %cookie, i32* %cookie.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cookie.addr, metadata !4451, metadata !DIExpression()), !dbg !4452
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4453, metadata !DIExpression()), !dbg !4454
  call void @llvm.dbg.declare(metadata i64* %dma_sync_wait_timeout, metadata !4455, metadata !DIExpression()), !dbg !4456
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !4457
  store i32 5000, i32* %m.addr.i, align 4
  %1 = load i32, i32* %m.addr.i, align 4, !dbg !4458
  %2 = call i1 @llvm.is.constant.i32(i32 %1) #11, !dbg !4460
  br i1 %2, label %if.then.i, label %if.else.i, !dbg !4461

if.then.i:                                        ; preds = %entry
  %3 = load i32, i32* %m.addr.i, align 4, !dbg !4462
  %cmp.i = icmp slt i32 %3, 0, !dbg !4465
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4466

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !4467
  br label %msecs_to_jiffies.exit, !dbg !4467

if.end.i:                                         ; preds = %if.then.i
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !4468
  %call.i = call i64 @_msecs_to_jiffies(i32 %4) #12, !dbg !4469
  store i64 %call.i, i64* %retval.i, align 8, !dbg !4470
  br label %msecs_to_jiffies.exit, !dbg !4470

if.else.i:                                        ; preds = %entry
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !4471
  %call2.i = call i64 @__msecs_to_jiffies(i32 %5) #12, !dbg !4473
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !4474
  br label %msecs_to_jiffies.exit, !dbg !4474

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %6 = load i64, i64* %retval.i, align 8, !dbg !4475
  %add = add i64 %0, %6, !dbg !4476
  store i64 %add, i64* %dma_sync_wait_timeout, align 8, !dbg !4456
  %7 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4477
  call void @dma_async_issue_pending(%struct.dma_chan* %7) #9, !dbg !4478
  br label %do.body, !dbg !4479

do.body:                                          ; preds = %do.cond, %msecs_to_jiffies.exit
  %8 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4480
  %9 = load i32, i32* %cookie.addr, align 4, !dbg !4482
  %call1 = call i32 @dma_async_is_tx_complete(%struct.dma_chan* %8, i32 %9, i32* null, i32* null) #9, !dbg !4483
  store i32 %call1, i32* %status, align 4, !dbg !4484
  %10 = load volatile i64, i64* @jiffies, align 8, !dbg !4485
  %11 = load i64, i64* %dma_sync_wait_timeout, align 8, !dbg !4485
  %sub = sub i64 %10, %11, !dbg !4485
  %cmp = icmp sge i64 %sub, 0, !dbg !4485
  br i1 %cmp, label %if.then, label %if.end, !dbg !4487

if.then:                                          ; preds = %do.body
  %12 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4488
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %12, i32 0, i32 0, !dbg !4488
  %13 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4488
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %13, i32 0, i32 15, !dbg !4488
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4488
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %14, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.dma_sync_wait, i64 0, i64 0)) #10, !dbg !4488
  store i32 3, i32* %retval, align 4, !dbg !4490
  br label %return, !dbg !4490

if.end:                                           ; preds = %do.body
  %15 = load i32, i32* %status, align 4, !dbg !4491
  %cmp2 = icmp ne i32 %15, 1, !dbg !4493
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4494

if.then3:                                         ; preds = %if.end
  br label %do.end, !dbg !4495

if.end4:                                          ; preds = %if.end
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !4496, !srcloc !4502
  br label %do.cond, !dbg !4503

do.cond:                                          ; preds = %if.end4
  br i1 true, label %do.body, label %do.end, !dbg !4503, !llvm.loop !4504

do.end:                                           ; preds = %do.cond, %if.then3
  %16 = load i32, i32* %status, align 4, !dbg !4506
  store i32 %16, i32* %retval, align 4, !dbg !4507
  br label %return, !dbg !4507

return:                                           ; preds = %do.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !4508
  ret i32 %17, !dbg !4508
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_async_issue_pending(%struct.dma_chan* %chan) #1 !dbg !4509 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !4510, metadata !DIExpression()), !dbg !4511
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4512
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !4513
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4513
  %device_issue_pending = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 48, !dbg !4514
  %2 = load void (%struct.dma_chan*)*, void (%struct.dma_chan*)** %device_issue_pending, align 8, !dbg !4514
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4515
  call void %2(%struct.dma_chan* %3) #9, !dbg !4512
  ret void, !dbg !4516
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_async_is_tx_complete(%struct.dma_chan* %chan, i32 %cookie, i32* %last, i32* %used) #1 !dbg !4517 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %cookie.addr = alloca i32, align 4
  %last.addr = alloca i32*, align 8
  %used.addr = alloca i32*, align 8
  %state = alloca %struct.dma_tx_state, align 4
  %status = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !4521, metadata !DIExpression()), !dbg !4522
  store i32 %cookie, i32* %cookie.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cookie.addr, metadata !4523, metadata !DIExpression()), !dbg !4524
  store i32* %last, i32** %last.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %last.addr, metadata !4525, metadata !DIExpression()), !dbg !4526
  store i32* %used, i32** %used.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %used.addr, metadata !4527, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.declare(metadata %struct.dma_tx_state* %state, metadata !4529, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4531, metadata !DIExpression()), !dbg !4532
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4533
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !4534
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4534
  %device_tx_status = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 47, !dbg !4535
  %2 = load i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)*, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)** %device_tx_status, align 8, !dbg !4535
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4536
  %4 = load i32, i32* %cookie.addr, align 4, !dbg !4537
  %call = call i32 %2(%struct.dma_chan* %3, i32 %4, %struct.dma_tx_state* %state) #9, !dbg !4533
  store i32 %call, i32* %status, align 4, !dbg !4538
  %5 = load i32*, i32** %last.addr, align 8, !dbg !4539
  %tobool = icmp ne i32* %5, null, !dbg !4539
  br i1 %tobool, label %if.then, label %if.end, !dbg !4541

if.then:                                          ; preds = %entry
  %last1 = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %state, i32 0, i32 0, !dbg !4542
  %6 = load i32, i32* %last1, align 4, !dbg !4542
  %7 = load i32*, i32** %last.addr, align 8, !dbg !4543
  store i32 %6, i32* %7, align 4, !dbg !4544
  br label %if.end, !dbg !4545

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32*, i32** %used.addr, align 8, !dbg !4546
  %tobool2 = icmp ne i32* %8, null, !dbg !4546
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !4548

if.then3:                                         ; preds = %if.end
  %used4 = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %state, i32 0, i32 1, !dbg !4549
  %9 = load i32, i32* %used4, align 4, !dbg !4549
  %10 = load i32*, i32** %used.addr, align 8, !dbg !4550
  store i32 %9, i32* %10, align 4, !dbg !4551
  br label %if.end5, !dbg !4552

if.end5:                                          ; preds = %if.then3, %if.end
  %11 = load i32, i32* %status, align 4, !dbg !4553
  ret i32 %11, !dbg !4554
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dma_chan* @dma_find_channel(i32 %tx_type) #1 !dbg !4555 {
entry:
  %tx_type.addr = alloca i32, align 4
  %pscr_ret__ = alloca %struct.dma_chan*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pfo_val__ = alloca i64, align 8
  %tmp = alloca %struct.dma_chan*, align 8
  %tmp1 = alloca %struct.dma_chan*, align 8
  store i32 %tx_type, i32* %tx_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tx_type.addr, metadata !4558, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %pscr_ret__, metadata !4560, metadata !DIExpression()), !dbg !4562
  br label %do.body, !dbg !4562

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !4563, metadata !DIExpression()), !dbg !4565
  store i8* null, i8** %__vpp_verify, align 8, !dbg !4565
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !4565
  br label %do.end, !dbg !4565

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %pfo_val__, metadata !4566, metadata !DIExpression()), !dbg !4568
  %1 = load i32, i32* %tx_type.addr, align 4, !dbg !4568
  %idxprom = zext i32 %1 to i64, !dbg !4568
  %arrayidx = getelementptr [16 x %struct.dma_chan_tbl_ent*], [16 x %struct.dma_chan_tbl_ent*]* @channel_table, i64 0, i64 %idxprom, !dbg !4568
  %2 = load %struct.dma_chan_tbl_ent*, %struct.dma_chan_tbl_ent** %arrayidx, align 8, !dbg !4568
  %chan = getelementptr inbounds %struct.dma_chan_tbl_ent, %struct.dma_chan_tbl_ent* %2, i32 0, i32 0, !dbg !4568
  %3 = call i64 asm sideeffect "movq $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(%struct.dma_chan** %chan) #11, !dbg !4568, !srcloc !4569
  store i64 %3, i64* %pfo_val__, align 8, !dbg !4568
  %4 = load i64, i64* %pfo_val__, align 8, !dbg !4568
  %5 = inttoptr i64 %4 to %struct.dma_chan*, !dbg !4568
  store %struct.dma_chan* %5, %struct.dma_chan** %tmp, align 8, !dbg !4568
  %6 = load %struct.dma_chan*, %struct.dma_chan** %tmp, align 8, !dbg !4568
  store %struct.dma_chan* %6, %struct.dma_chan** %pscr_ret__, align 8, !dbg !4562
  %7 = load %struct.dma_chan*, %struct.dma_chan** %pscr_ret__, align 8, !dbg !4562
  store %struct.dma_chan* %7, %struct.dma_chan** %tmp1, align 8, !dbg !4562
  %8 = load %struct.dma_chan*, %struct.dma_chan** %tmp1, align 8, !dbg !4562
  ret %struct.dma_chan* %8, !dbg !4570
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dma_issue_pending_all() #1 !dbg !4571 {
entry:
  %device = alloca %struct.dma_device*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp3 = alloca %struct.dma_device*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp7 = alloca %struct.dma_chan*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.dma_chan*, align 8
  %__mptr24 = alloca i8*, align 8
  %tmp27 = alloca %struct.list_head*, align 8
  %tmp32 = alloca %struct.dma_device*, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device, metadata !4572, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !4574, metadata !DIExpression()), !dbg !4575
  call void @__rcu_read_lock() #12, !dbg !4576
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4580, metadata !DIExpression()), !dbg !4583
  br label %do.body, !dbg !4584

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4586

do.end:                                           ; preds = %do.body
  %0 = load volatile %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @dma_device_list, i32 0, i32 0), align 8, !dbg !4584
  store %struct.list_head* %0, %struct.list_head** %tmp, align 8, !dbg !4586
  %1 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !4584
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !4583
  store i8* %2, i8** %__mptr, align 8, !dbg !4583
  br label %do.body1, !dbg !4583

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !4588

do.end2:                                          ; preds = %do.body1
  %3 = load i8*, i8** %__mptr, align 8, !dbg !4583
  %add.ptr = getelementptr i8, i8* %3, i64 -32, !dbg !4583
  %4 = bitcast i8* %add.ptr to %struct.dma_device*, !dbg !4583
  store %struct.dma_device* %4, %struct.dma_device** %tmp3, align 8, !dbg !4588
  %5 = load %struct.dma_device*, %struct.dma_device** %tmp3, align 8, !dbg !4583
  store %struct.dma_device* %5, %struct.dma_device** %device, align 8, !dbg !4590
  br label %for.cond, !dbg !4590

for.cond:                                         ; preds = %do.end31, %do.end2
  %6 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4591
  %global_node = getelementptr inbounds %struct.dma_device, %struct.dma_device* %6, i32 0, i32 4, !dbg !4591
  %cmp = icmp ne %struct.list_head* %global_node, @dma_device_list, !dbg !4591
  br i1 %cmp, label %for.body, label %for.end34, !dbg !4590

for.body:                                         ; preds = %for.cond
  %7 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4593
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %7, i32 0, i32 6, !dbg !4593
  %call = call i32 @__dma_has_cap(i32 8, %struct.dma_cap_mask_t* %cap_mask) #9, !dbg !4593
  %tobool = icmp ne i32 %call, 0, !dbg !4593
  br i1 %tobool, label %if.then, label %if.end, !dbg !4596

if.then:                                          ; preds = %for.body
  br label %for.inc23, !dbg !4597

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !4598, metadata !DIExpression()), !dbg !4601
  %8 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4601
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %8, i32 0, i32 3, !dbg !4601
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %channels, i32 0, i32 0, !dbg !4601
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4601
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !4601
  store i8* %10, i8** %__mptr4, align 8, !dbg !4601
  br label %do.body5, !dbg !4601

do.body5:                                         ; preds = %if.end
  br label %do.end6, !dbg !4602

do.end6:                                          ; preds = %do.body5
  %11 = load i8*, i8** %__mptr4, align 8, !dbg !4601
  %add.ptr8 = getelementptr i8, i8* %11, i64 -48, !dbg !4601
  %12 = bitcast i8* %add.ptr8 to %struct.dma_chan*, !dbg !4601
  store %struct.dma_chan* %12, %struct.dma_chan** %tmp7, align 8, !dbg !4602
  %13 = load %struct.dma_chan*, %struct.dma_chan** %tmp7, align 8, !dbg !4601
  store %struct.dma_chan* %13, %struct.dma_chan** %chan, align 8, !dbg !4604
  br label %for.cond9, !dbg !4604

for.cond9:                                        ; preds = %do.end20, %do.end6
  %14 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !4605
  %device_node = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %14, i32 0, i32 7, !dbg !4605
  %15 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4605
  %channels10 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %15, i32 0, i32 3, !dbg !4605
  %cmp11 = icmp eq %struct.list_head* %device_node, %channels10, !dbg !4605
  %lnot = xor i1 %cmp11, true, !dbg !4605
  br i1 %lnot, label %for.body12, label %for.end, !dbg !4604

for.body12:                                       ; preds = %for.cond9
  %16 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !4607
  %client_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %16, i32 0, i32 9, !dbg !4609
  %17 = load i32, i32* %client_count, align 8, !dbg !4609
  %tobool13 = icmp ne i32 %17, 0, !dbg !4607
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !4610

if.then14:                                        ; preds = %for.body12
  %18 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4611
  %device_issue_pending = getelementptr inbounds %struct.dma_device, %struct.dma_device* %18, i32 0, i32 48, !dbg !4612
  %19 = load void (%struct.dma_chan*)*, void (%struct.dma_chan*)** %device_issue_pending, align 8, !dbg !4612
  %20 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !4613
  call void %19(%struct.dma_chan* %20) #9, !dbg !4611
  br label %if.end15, !dbg !4611

if.end15:                                         ; preds = %if.then14, %for.body12
  br label %for.inc, !dbg !4609

for.inc:                                          ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !4614, metadata !DIExpression()), !dbg !4616
  %21 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !4616
  %device_node17 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %21, i32 0, i32 7, !dbg !4616
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node17, i32 0, i32 0, !dbg !4616
  %22 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !4616
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !4616
  store i8* %23, i8** %__mptr16, align 8, !dbg !4616
  br label %do.body19, !dbg !4616

do.body19:                                        ; preds = %for.inc
  br label %do.end20, !dbg !4617

do.end20:                                         ; preds = %do.body19
  %24 = load i8*, i8** %__mptr16, align 8, !dbg !4616
  %add.ptr22 = getelementptr i8, i8* %24, i64 -48, !dbg !4616
  %25 = bitcast i8* %add.ptr22 to %struct.dma_chan*, !dbg !4616
  store %struct.dma_chan* %25, %struct.dma_chan** %tmp21, align 8, !dbg !4617
  %26 = load %struct.dma_chan*, %struct.dma_chan** %tmp21, align 8, !dbg !4616
  store %struct.dma_chan* %26, %struct.dma_chan** %chan, align 8, !dbg !4605
  br label %for.cond9, !dbg !4605, !llvm.loop !4619

for.end:                                          ; preds = %for.cond9
  br label %for.inc23, !dbg !4621

for.inc23:                                        ; preds = %for.end, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr24, metadata !4622, metadata !DIExpression()), !dbg !4624
  br label %do.body25, !dbg !4625

do.body25:                                        ; preds = %for.inc23
  br label %do.end26, !dbg !4627

do.end26:                                         ; preds = %do.body25
  %27 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4625
  %global_node28 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %27, i32 0, i32 4, !dbg !4625
  %next29 = getelementptr inbounds %struct.list_head, %struct.list_head* %global_node28, i32 0, i32 0, !dbg !4625
  %28 = load volatile %struct.list_head*, %struct.list_head** %next29, align 8, !dbg !4625
  store %struct.list_head* %28, %struct.list_head** %tmp27, align 8, !dbg !4627
  %29 = load %struct.list_head*, %struct.list_head** %tmp27, align 8, !dbg !4625
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !4624
  store i8* %30, i8** %__mptr24, align 8, !dbg !4624
  br label %do.body30, !dbg !4624

do.body30:                                        ; preds = %do.end26
  br label %do.end31, !dbg !4629

do.end31:                                         ; preds = %do.body30
  %31 = load i8*, i8** %__mptr24, align 8, !dbg !4624
  %add.ptr33 = getelementptr i8, i8* %31, i64 -32, !dbg !4624
  %32 = bitcast i8* %add.ptr33 to %struct.dma_device*, !dbg !4624
  store %struct.dma_device* %32, %struct.dma_device** %tmp32, align 8, !dbg !4629
  %33 = load %struct.dma_device*, %struct.dma_device** %tmp32, align 8, !dbg !4624
  store %struct.dma_device* %33, %struct.dma_device** %device, align 8, !dbg !4591
  br label %for.cond, !dbg !4591, !llvm.loop !4631

for.end34:                                        ; preds = %for.cond
  call void @rcu_read_unlock() #9, !dbg !4633
  ret void, !dbg !4634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__dma_has_cap(i32 %tx_type, %struct.dma_cap_mask_t* %srcp) #1 !dbg !4635 {
entry:
  %tx_type.addr = alloca i32, align 4
  %srcp.addr = alloca %struct.dma_cap_mask_t*, align 8
  store i32 %tx_type, i32* %tx_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tx_type.addr, metadata !4639, metadata !DIExpression()), !dbg !4640
  store %struct.dma_cap_mask_t* %srcp, %struct.dma_cap_mask_t** %srcp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %srcp.addr, metadata !4641, metadata !DIExpression()), !dbg !4642
  %0 = load i32, i32* %tx_type.addr, align 4, !dbg !4643
  %conv = zext i32 %0 to i64, !dbg !4643
  %1 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %srcp.addr, align 8, !dbg !4644
  %bits = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %1, i32 0, i32 0, !dbg !4645
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !4644
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %arraydecay) #9, !dbg !4646
  %conv1 = zext i1 %call to i32, !dbg !4646
  ret i32 %conv1, !dbg !4647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rcu_read_unlock() #1 !dbg !4648 {
entry:
  br label %do.body, !dbg !4649

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4650

do.end:                                           ; preds = %do.body
  call void @__rcu_read_unlock() #9, !dbg !4652
  br label %do.body1, !dbg !4653

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !4654

do.end2:                                          ; preds = %do.body1
  ret void, !dbg !4656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dma_get_slave_caps(%struct.dma_chan* %chan, %struct.dma_slave_caps* %caps) #1 !dbg !4657 {
entry:
  %retval = alloca i32, align 4
  %chan.addr = alloca %struct.dma_chan*, align 8
  %caps.addr = alloca %struct.dma_slave_caps*, align 8
  %device = alloca %struct.dma_device*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !4660, metadata !DIExpression()), !dbg !4661
  store %struct.dma_slave_caps* %caps, %struct.dma_slave_caps** %caps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_slave_caps** %caps.addr, metadata !4662, metadata !DIExpression()), !dbg !4663
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device, metadata !4664, metadata !DIExpression()), !dbg !4665
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4666
  %tobool = icmp ne %struct.dma_chan* %0, null, !dbg !4666
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4668

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4669
  %tobool1 = icmp ne %struct.dma_slave_caps* %1, null, !dbg !4669
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4670

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !4671
  br label %return, !dbg !4671

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4672
  %device2 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %2, i32 0, i32 0, !dbg !4673
  %3 = load %struct.dma_device*, %struct.dma_device** %device2, align 8, !dbg !4673
  store %struct.dma_device* %3, %struct.dma_device** %device, align 8, !dbg !4674
  %4 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4675
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %4, i32 0, i32 6, !dbg !4677
  %bits = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %cap_mask, i32 0, i32 0, !dbg !4678
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !4675
  %call = call zeroext i1 @test_bit(i64 10, i64* %arraydecay) #9, !dbg !4679
  br i1 %call, label %if.end9, label %lor.lhs.false3, !dbg !4680

lor.lhs.false3:                                   ; preds = %if.end
  %5 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4681
  %cap_mask4 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %5, i32 0, i32 6, !dbg !4682
  %bits5 = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %cap_mask4, i32 0, i32 0, !dbg !4683
  %arraydecay6 = getelementptr inbounds [1 x i64], [1 x i64]* %bits5, i64 0, i64 0, !dbg !4681
  %call7 = call zeroext i1 @test_bit(i64 11, i64* %arraydecay6) #9, !dbg !4684
  br i1 %call7, label %if.end9, label %if.then8, !dbg !4685

if.then8:                                         ; preds = %lor.lhs.false3
  store i32 -6, i32* %retval, align 4, !dbg !4686
  br label %return, !dbg !4686

if.end9:                                          ; preds = %lor.lhs.false3, %if.end
  %6 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4687
  %directions = getelementptr inbounds %struct.dma_device, %struct.dma_device* %6, i32 0, i32 21, !dbg !4689
  %7 = load i32, i32* %directions, align 8, !dbg !4689
  %tobool10 = icmp ne i32 %7, 0, !dbg !4687
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !4690

if.then11:                                        ; preds = %if.end9
  store i32 -6, i32* %retval, align 4, !dbg !4691
  br label %return, !dbg !4691

if.end12:                                         ; preds = %if.end9
  %8 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4692
  %src_addr_widths = getelementptr inbounds %struct.dma_device, %struct.dma_device* %8, i32 0, i32 19, !dbg !4693
  %9 = load i32, i32* %src_addr_widths, align 8, !dbg !4693
  %10 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4694
  %src_addr_widths13 = getelementptr inbounds %struct.dma_slave_caps, %struct.dma_slave_caps* %10, i32 0, i32 0, !dbg !4695
  store i32 %9, i32* %src_addr_widths13, align 4, !dbg !4696
  %11 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4697
  %dst_addr_widths = getelementptr inbounds %struct.dma_device, %struct.dma_device* %11, i32 0, i32 20, !dbg !4698
  %12 = load i32, i32* %dst_addr_widths, align 4, !dbg !4698
  %13 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4699
  %dst_addr_widths14 = getelementptr inbounds %struct.dma_slave_caps, %struct.dma_slave_caps* %13, i32 0, i32 1, !dbg !4700
  store i32 %12, i32* %dst_addr_widths14, align 4, !dbg !4701
  %14 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4702
  %directions15 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %14, i32 0, i32 21, !dbg !4703
  %15 = load i32, i32* %directions15, align 8, !dbg !4703
  %16 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4704
  %directions16 = getelementptr inbounds %struct.dma_slave_caps, %struct.dma_slave_caps* %16, i32 0, i32 2, !dbg !4705
  store i32 %15, i32* %directions16, align 4, !dbg !4706
  %17 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4707
  %min_burst = getelementptr inbounds %struct.dma_device, %struct.dma_device* %17, i32 0, i32 22, !dbg !4708
  %18 = load i32, i32* %min_burst, align 4, !dbg !4708
  %19 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4709
  %min_burst17 = getelementptr inbounds %struct.dma_slave_caps, %struct.dma_slave_caps* %19, i32 0, i32 3, !dbg !4710
  store i32 %18, i32* %min_burst17, align 4, !dbg !4711
  %20 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4712
  %max_burst = getelementptr inbounds %struct.dma_device, %struct.dma_device* %20, i32 0, i32 23, !dbg !4713
  %21 = load i32, i32* %max_burst, align 8, !dbg !4713
  %22 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4714
  %max_burst18 = getelementptr inbounds %struct.dma_slave_caps, %struct.dma_slave_caps* %22, i32 0, i32 4, !dbg !4715
  store i32 %21, i32* %max_burst18, align 4, !dbg !4716
  %23 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4717
  %max_sg_burst = getelementptr inbounds %struct.dma_device, %struct.dma_device* %23, i32 0, i32 24, !dbg !4718
  %24 = load i32, i32* %max_sg_burst, align 4, !dbg !4718
  %25 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4719
  %max_sg_burst19 = getelementptr inbounds %struct.dma_slave_caps, %struct.dma_slave_caps* %25, i32 0, i32 5, !dbg !4720
  store i32 %24, i32* %max_sg_burst19, align 4, !dbg !4721
  %26 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4722
  %residue_granularity = getelementptr inbounds %struct.dma_device, %struct.dma_device* %26, i32 0, i32 26, !dbg !4723
  %27 = load i32, i32* %residue_granularity, align 4, !dbg !4723
  %28 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4724
  %residue_granularity20 = getelementptr inbounds %struct.dma_slave_caps, %struct.dma_slave_caps* %28, i32 0, i32 9, !dbg !4725
  store i32 %27, i32* %residue_granularity20, align 4, !dbg !4726
  %29 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4727
  %descriptor_reuse = getelementptr inbounds %struct.dma_device, %struct.dma_device* %29, i32 0, i32 25, !dbg !4728
  %30 = load i8, i8* %descriptor_reuse, align 8, !dbg !4728
  %tobool21 = trunc i8 %30 to i1, !dbg !4728
  %31 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4729
  %descriptor_reuse22 = getelementptr inbounds %struct.dma_slave_caps, %struct.dma_slave_caps* %31, i32 0, i32 10, !dbg !4730
  %frombool = zext i1 %tobool21 to i8, !dbg !4731
  store i8 %frombool, i8* %descriptor_reuse22, align 4, !dbg !4731
  %32 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4732
  %device_pause = getelementptr inbounds %struct.dma_device, %struct.dma_device* %32, i32 0, i32 43, !dbg !4733
  %33 = load i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)** %device_pause, align 8, !dbg !4733
  %tobool23 = icmp ne i32 (%struct.dma_chan*)* %33, null, !dbg !4734
  %lnot = xor i1 %tobool23, true, !dbg !4734
  %lnot24 = xor i1 %lnot, true, !dbg !4735
  %34 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4736
  %cmd_pause = getelementptr inbounds %struct.dma_slave_caps, %struct.dma_slave_caps* %34, i32 0, i32 6, !dbg !4737
  %frombool25 = zext i1 %lnot24 to i8, !dbg !4738
  store i8 %frombool25, i8* %cmd_pause, align 4, !dbg !4738
  %35 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4739
  %device_resume = getelementptr inbounds %struct.dma_device, %struct.dma_device* %35, i32 0, i32 44, !dbg !4740
  %36 = load i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)** %device_resume, align 8, !dbg !4740
  %tobool26 = icmp ne i32 (%struct.dma_chan*)* %36, null, !dbg !4741
  %lnot27 = xor i1 %tobool26, true, !dbg !4741
  %lnot28 = xor i1 %lnot27, true, !dbg !4742
  %37 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4743
  %cmd_resume = getelementptr inbounds %struct.dma_slave_caps, %struct.dma_slave_caps* %37, i32 0, i32 7, !dbg !4744
  %frombool29 = zext i1 %lnot28 to i8, !dbg !4745
  store i8 %frombool29, i8* %cmd_resume, align 1, !dbg !4745
  %38 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4746
  %device_terminate_all = getelementptr inbounds %struct.dma_device, %struct.dma_device* %38, i32 0, i32 45, !dbg !4747
  %39 = load i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)** %device_terminate_all, align 8, !dbg !4747
  %tobool30 = icmp ne i32 (%struct.dma_chan*)* %39, null, !dbg !4748
  %lnot31 = xor i1 %tobool30, true, !dbg !4748
  %lnot32 = xor i1 %lnot31, true, !dbg !4749
  %40 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4750
  %cmd_terminate = getelementptr inbounds %struct.dma_slave_caps, %struct.dma_slave_caps* %40, i32 0, i32 8, !dbg !4751
  %frombool33 = zext i1 %lnot32 to i8, !dbg !4752
  store i8 %frombool33, i8* %cmd_terminate, align 2, !dbg !4752
  %41 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4753
  %device_caps = getelementptr inbounds %struct.dma_device, %struct.dma_device* %41, i32 0, i32 41, !dbg !4755
  %42 = load void (%struct.dma_chan*, %struct.dma_slave_caps*)*, void (%struct.dma_chan*, %struct.dma_slave_caps*)** %device_caps, align 8, !dbg !4755
  %tobool34 = icmp ne void (%struct.dma_chan*, %struct.dma_slave_caps*)* %42, null, !dbg !4753
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !4756

if.then35:                                        ; preds = %if.end12
  %43 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4757
  %device_caps36 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %43, i32 0, i32 41, !dbg !4758
  %44 = load void (%struct.dma_chan*, %struct.dma_slave_caps*)*, void (%struct.dma_chan*, %struct.dma_slave_caps*)** %device_caps36, align 8, !dbg !4758
  %45 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4759
  %46 = load %struct.dma_slave_caps*, %struct.dma_slave_caps** %caps.addr, align 8, !dbg !4760
  call void %44(%struct.dma_chan* %45, %struct.dma_slave_caps* %46) #9, !dbg !4757
  br label %if.end37, !dbg !4757

if.end37:                                         ; preds = %if.then35, %if.end12
  store i32 0, i32* %retval, align 4, !dbg !4761
  br label %return, !dbg !4761

return:                                           ; preds = %if.end37, %if.then11, %if.then8, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !4762
  ret i32 %47, !dbg !4762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #1 !dbg !4763 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !4770, metadata !DIExpression()), !dbg !4773
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !4775, metadata !DIExpression()), !dbg !4776
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !4777, metadata !DIExpression()), !dbg !4778
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !4779, metadata !DIExpression()), !dbg !4781
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !4783, metadata !DIExpression()), !dbg !4784
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !4785, metadata !DIExpression()), !dbg !4793
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4795, metadata !DIExpression()), !dbg !4796
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !4797, metadata !DIExpression()), !dbg !4798
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !4799, metadata !DIExpression()), !dbg !4800
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !4801
  %1 = load i64, i64* %nr.addr, align 8, !dbg !4802
  %div = sdiv i64 %1, 64, !dbg !4802
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !4803
  %2 = bitcast i64* %add.ptr to i8*, !dbg !4801
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !4804
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4805
  %conv.i = trunc i64 %4 to i32, !dbg !4805
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !4806
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !4807
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !4807
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !4807
  %7 = load i64, i64* %nr.addr, align 8, !dbg !4808
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !4808
  br i1 %8, label %cond.true, label %cond.false, !dbg !4808

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !4808
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !4808
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !4809
  %and.i = and i64 %11, 63, !dbg !4810
  %shl.i = shl i64 1, %and.i, !dbg !4811
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !4812
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !4813
  %shr.i = ashr i64 %13, 6, !dbg !4814
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !4812
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !4812
  %and1.i = and i64 %shl.i, %14, !dbg !4815
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !4816
  %conv = zext i1 %cmp.i to i32, !dbg !4808
  br label %cond.end, !dbg !4808

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !4808
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !4808
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !4817
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !4818
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #11, !dbg !4819, !srcloc !4820
  store i8 %19, i8* %oldbit.i, align 1, !dbg !4819
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !4821
  %tobool.i = trunc i8 %20 to i1, !dbg !4821
  %conv2 = zext i1 %tobool.i to i32, !dbg !4808
  br label %cond.end, !dbg !4808

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !4808
  %tobool = icmp ne i32 %cond, 0, !dbg !4808
  ret i1 %tobool, !dbg !4822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dma_chan* @dma_get_slave_channel(%struct.dma_chan* %chan) #1 !dbg !4823 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %err = alloca i32, align 4
  %device = alloca %struct.dma_device*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !4826, metadata !DIExpression()), !dbg !4827
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4828, metadata !DIExpression()), !dbg !4829
  store i32 -16, i32* %err, align 4, !dbg !4829
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !4830
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4831
  %client_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 9, !dbg !4833
  %1 = load i32, i32* %client_count, align 8, !dbg !4833
  %cmp = icmp eq i32 %1, 0, !dbg !4834
  br i1 %cmp, label %if.then, label %if.else, !dbg !4835

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device, metadata !4836, metadata !DIExpression()), !dbg !4838
  %2 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4839
  %device1 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %2, i32 0, i32 0, !dbg !4840
  %3 = load %struct.dma_device*, %struct.dma_device** %device1, align 8, !dbg !4840
  store %struct.dma_device* %3, %struct.dma_device** %device, align 8, !dbg !4838
  %4 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4841
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %4, i32 0, i32 6, !dbg !4841
  call void @__dma_cap_set(i32 8, %struct.dma_cap_mask_t* %cap_mask) #9, !dbg !4841
  %5 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4842
  %privatecnt = getelementptr inbounds %struct.dma_device, %struct.dma_device* %5, i32 0, i32 2, !dbg !4843
  %6 = load i32, i32* %privatecnt, align 8, !dbg !4844
  %inc = add i32 %6, 1, !dbg !4844
  store i32 %inc, i32* %privatecnt, align 8, !dbg !4844
  %7 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4845
  %call = call i32 @dma_chan_get(%struct.dma_chan* %7) #9, !dbg !4846
  store i32 %call, i32* %err, align 4, !dbg !4847
  %8 = load i32, i32* %err, align 4, !dbg !4848
  %tobool = icmp ne i32 %8, 0, !dbg !4848
  br i1 %tobool, label %if.then2, label %if.end7, !dbg !4850

if.then2:                                         ; preds = %if.then
  store %struct.dma_chan* null, %struct.dma_chan** %chan.addr, align 8, !dbg !4851
  %9 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4853
  %privatecnt3 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %9, i32 0, i32 2, !dbg !4855
  %10 = load i32, i32* %privatecnt3, align 8, !dbg !4856
  %dec = add i32 %10, -1, !dbg !4856
  store i32 %dec, i32* %privatecnt3, align 8, !dbg !4856
  %cmp4 = icmp eq i32 %dec, 0, !dbg !4857
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !4858

if.then5:                                         ; preds = %if.then2
  %11 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4859
  %cap_mask6 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %11, i32 0, i32 6, !dbg !4859
  call void @__dma_cap_clear(i32 8, %struct.dma_cap_mask_t* %cap_mask6) #9, !dbg !4859
  br label %if.end, !dbg !4859

if.end:                                           ; preds = %if.then5, %if.then2
  br label %if.end7, !dbg !4860

if.end7:                                          ; preds = %if.end, %if.then
  br label %if.end8, !dbg !4861

if.else:                                          ; preds = %entry
  store %struct.dma_chan* null, %struct.dma_chan** %chan.addr, align 8, !dbg !4862
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.end7
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !4863
  %12 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4864
  ret %struct.dma_chan* %12, !dbg !4865
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dma_cap_set(i32 %tx_type, %struct.dma_cap_mask_t* %dstp) #1 !dbg !4866 {
entry:
  %tx_type.addr = alloca i32, align 4
  %dstp.addr = alloca %struct.dma_cap_mask_t*, align 8
  store i32 %tx_type, i32* %tx_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tx_type.addr, metadata !4869, metadata !DIExpression()), !dbg !4870
  store %struct.dma_cap_mask_t* %dstp, %struct.dma_cap_mask_t** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %dstp.addr, metadata !4871, metadata !DIExpression()), !dbg !4872
  %0 = load i32, i32* %tx_type.addr, align 4, !dbg !4873
  %conv = zext i32 %0 to i64, !dbg !4873
  %1 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %dstp.addr, align 8, !dbg !4874
  %bits = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %1, i32 0, i32 0, !dbg !4875
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !4874
  call void @set_bit(i64 %conv, i64* %arraydecay) #9, !dbg !4876
  ret void, !dbg !4877
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_chan_get(%struct.dma_chan* %chan) #1 !dbg !4878 {
entry:
  %retval = alloca i32, align 4
  %chan.addr = alloca %struct.dma_chan*, align 8
  %owner = alloca %struct.module*, align 8
  %ret = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !4879, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.declare(metadata %struct.module** %owner, metadata !4881, metadata !DIExpression()), !dbg !4882
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4883
  %call = call %struct.module* @dma_chan_to_owner(%struct.dma_chan* %0) #9, !dbg !4884
  store %struct.module* %call, %struct.module** %owner, align 8, !dbg !4882
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4885, metadata !DIExpression()), !dbg !4886
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4887
  %client_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %1, i32 0, i32 9, !dbg !4889
  %2 = load i32, i32* %client_count, align 8, !dbg !4889
  %tobool = icmp ne i32 %2, 0, !dbg !4887
  br i1 %tobool, label %if.then, label %if.end, !dbg !4890

if.then:                                          ; preds = %entry
  %3 = load %struct.module*, %struct.module** %owner, align 8, !dbg !4891
  call void @__module_get(%struct.module* %3) #9, !dbg !4893
  br label %out, !dbg !4894

if.end:                                           ; preds = %entry
  %4 = load %struct.module*, %struct.module** %owner, align 8, !dbg !4895
  %call1 = call zeroext i1 @try_module_get(%struct.module* %4) #9, !dbg !4897
  br i1 %call1, label %if.end3, label %if.then2, !dbg !4898

if.then2:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !4899
  br label %return, !dbg !4899

if.end3:                                          ; preds = %if.end
  %5 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4900
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %5, i32 0, i32 0, !dbg !4901
  %6 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !4901
  %ref = getelementptr inbounds %struct.dma_device, %struct.dma_device* %6, i32 0, i32 0, !dbg !4902
  %call4 = call i32 @kref_get_unless_zero(%struct.kref* %ref) #9, !dbg !4903
  store i32 %call4, i32* %ret, align 4, !dbg !4904
  %7 = load i32, i32* %ret, align 4, !dbg !4905
  %tobool5 = icmp ne i32 %7, 0, !dbg !4905
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !4907

if.then6:                                         ; preds = %if.end3
  store i32 -19, i32* %ret, align 4, !dbg !4908
  br label %module_put_out, !dbg !4910

if.end7:                                          ; preds = %if.end3
  %8 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4911
  %device8 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %8, i32 0, i32 0, !dbg !4913
  %9 = load %struct.dma_device*, %struct.dma_device** %device8, align 8, !dbg !4913
  %device_alloc_chan_resources = getelementptr inbounds %struct.dma_device, %struct.dma_device* %9, i32 0, i32 27, !dbg !4914
  %10 = load i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)** %device_alloc_chan_resources, align 8, !dbg !4914
  %tobool9 = icmp ne i32 (%struct.dma_chan*)* %10, null, !dbg !4911
  br i1 %tobool9, label %if.then10, label %if.end16, !dbg !4915

if.then10:                                        ; preds = %if.end7
  %11 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4916
  %device11 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %11, i32 0, i32 0, !dbg !4918
  %12 = load %struct.dma_device*, %struct.dma_device** %device11, align 8, !dbg !4918
  %device_alloc_chan_resources12 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %12, i32 0, i32 27, !dbg !4919
  %13 = load i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)** %device_alloc_chan_resources12, align 8, !dbg !4919
  %14 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4920
  %call13 = call i32 %13(%struct.dma_chan* %14) #9, !dbg !4916
  store i32 %call13, i32* %ret, align 4, !dbg !4921
  %15 = load i32, i32* %ret, align 4, !dbg !4922
  %cmp = icmp slt i32 %15, 0, !dbg !4924
  br i1 %cmp, label %if.then14, label %if.end15, !dbg !4925

if.then14:                                        ; preds = %if.then10
  br label %err_out, !dbg !4926

if.end15:                                         ; preds = %if.then10
  br label %if.end16, !dbg !4927

if.end16:                                         ; preds = %if.end15, %if.end7
  %16 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4928
  %device17 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %16, i32 0, i32 0, !dbg !4928
  %17 = load %struct.dma_device*, %struct.dma_device** %device17, align 8, !dbg !4928
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %17, i32 0, i32 6, !dbg !4928
  %call18 = call i32 @__dma_has_cap(i32 8, %struct.dma_cap_mask_t* %cap_mask) #9, !dbg !4928
  %tobool19 = icmp ne i32 %call18, 0, !dbg !4928
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !4930

if.then20:                                        ; preds = %if.end16
  %18 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4931
  call void @balance_ref_count(%struct.dma_chan* %18) #9, !dbg !4932
  br label %if.end21, !dbg !4932

if.end21:                                         ; preds = %if.then20, %if.end16
  br label %out, !dbg !4928

out:                                              ; preds = %if.end21, %if.then
  call void @llvm.dbg.label(metadata !4933), !dbg !4934
  %19 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4935
  %client_count22 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %19, i32 0, i32 9, !dbg !4936
  %20 = load i32, i32* %client_count22, align 8, !dbg !4937
  %inc = add i32 %20, 1, !dbg !4937
  store i32 %inc, i32* %client_count22, align 8, !dbg !4937
  store i32 0, i32* %retval, align 4, !dbg !4938
  br label %return, !dbg !4938

err_out:                                          ; preds = %if.then14
  call void @llvm.dbg.label(metadata !4939), !dbg !4940
  %21 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !4941
  %device23 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %21, i32 0, i32 0, !dbg !4942
  %22 = load %struct.dma_device*, %struct.dma_device** %device23, align 8, !dbg !4942
  call void @dma_device_put(%struct.dma_device* %22) #9, !dbg !4943
  br label %module_put_out, !dbg !4943

module_put_out:                                   ; preds = %err_out, %if.then6
  call void @llvm.dbg.label(metadata !4944), !dbg !4945
  %23 = load %struct.module*, %struct.module** %owner, align 8, !dbg !4946
  call void @module_put(%struct.module* %23) #9, !dbg !4947
  %24 = load i32, i32* %ret, align 4, !dbg !4948
  store i32 %24, i32* %retval, align 4, !dbg !4949
  br label %return, !dbg !4949

return:                                           ; preds = %module_put_out, %out, %if.then2
  %25 = load i32, i32* %retval, align 4, !dbg !4950
  ret i32 %25, !dbg !4950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dma_cap_clear(i32 %tx_type, %struct.dma_cap_mask_t* %dstp) #1 !dbg !4951 {
entry:
  %tx_type.addr = alloca i32, align 4
  %dstp.addr = alloca %struct.dma_cap_mask_t*, align 8
  store i32 %tx_type, i32* %tx_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tx_type.addr, metadata !4952, metadata !DIExpression()), !dbg !4953
  store %struct.dma_cap_mask_t* %dstp, %struct.dma_cap_mask_t** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %dstp.addr, metadata !4954, metadata !DIExpression()), !dbg !4955
  %0 = load i32, i32* %tx_type.addr, align 4, !dbg !4956
  %conv = zext i32 %0 to i64, !dbg !4956
  %1 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %dstp.addr, align 8, !dbg !4957
  %bits = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %1, i32 0, i32 0, !dbg !4958
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !4957
  call void @clear_bit(i64 %conv, i64* %arraydecay) #9, !dbg !4959
  ret void, !dbg !4960
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dma_chan* @dma_get_any_slave_channel(%struct.dma_device* %device) #1 !dbg !4961 {
entry:
  %device.addr = alloca %struct.dma_device*, align 8
  %mask = alloca %struct.dma_cap_mask_t, align 8
  %chan = alloca %struct.dma_chan*, align 8
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !4964, metadata !DIExpression()), !dbg !4965
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t* %mask, metadata !4966, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !4968, metadata !DIExpression()), !dbg !4969
  call void @__dma_cap_zero(%struct.dma_cap_mask_t* %mask) #9, !dbg !4970
  call void @__dma_cap_set(i32 10, %struct.dma_cap_mask_t* %mask) #9, !dbg !4971
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !4972
  %0 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !4973
  %call = call %struct.dma_chan* @find_candidate(%struct.dma_device* %0, %struct.dma_cap_mask_t* %mask, i1 (%struct.dma_chan*, i8*)* null, i8* null) #9, !dbg !4974
  store %struct.dma_chan* %call, %struct.dma_chan** %chan, align 8, !dbg !4975
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !4976
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !4977
  %2 = bitcast %struct.dma_chan* %1 to i8*, !dbg !4977
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #9, !dbg !4978
  br i1 %call1, label %cond.true, label %cond.false, !dbg !4978

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4978

cond.false:                                       ; preds = %entry
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !4979
  br label %cond.end, !dbg !4978

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.dma_chan* [ null, %cond.true ], [ %3, %cond.false ], !dbg !4978
  ret %struct.dma_chan* %cond, !dbg !4980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dma_cap_zero(%struct.dma_cap_mask_t* %dstp) #1 !dbg !4981 {
entry:
  %dstp.addr = alloca %struct.dma_cap_mask_t*, align 8
  store %struct.dma_cap_mask_t* %dstp, %struct.dma_cap_mask_t** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %dstp.addr, metadata !4984, metadata !DIExpression()), !dbg !4985
  %0 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %dstp.addr, align 8, !dbg !4986
  %bits = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %0, i32 0, i32 0, !dbg !4987
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !4986
  call void @bitmap_zero(i64* %arraydecay, i32 16) #9, !dbg !4988
  ret void, !dbg !4989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_chan* @find_candidate(%struct.dma_device* %device, %struct.dma_cap_mask_t* %mask, i1 (%struct.dma_chan*, i8*)* %fn, i8* %fn_param) #1 !dbg !4990 {
entry:
  %device.addr = alloca %struct.dma_device*, align 8
  %mask.addr = alloca %struct.dma_cap_mask_t*, align 8
  %fn.addr = alloca i1 (%struct.dma_chan*, i8*)*, align 8
  %fn_param.addr = alloca i8*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %err = alloca i32, align 4
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !4995, metadata !DIExpression()), !dbg !4996
  store %struct.dma_cap_mask_t* %mask, %struct.dma_cap_mask_t** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %mask.addr, metadata !4997, metadata !DIExpression()), !dbg !4998
  store i1 (%struct.dma_chan*, i8*)* %fn, i1 (%struct.dma_chan*, i8*)** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (%struct.dma_chan*, i8*)** %fn.addr, metadata !4999, metadata !DIExpression()), !dbg !5000
  store i8* %fn_param, i8** %fn_param.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fn_param.addr, metadata !5001, metadata !DIExpression()), !dbg !5002
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !5003, metadata !DIExpression()), !dbg !5004
  %0 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %mask.addr, align 8, !dbg !5005
  %1 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5006
  %2 = load i1 (%struct.dma_chan*, i8*)*, i1 (%struct.dma_chan*, i8*)** %fn.addr, align 8, !dbg !5007
  %3 = load i8*, i8** %fn_param.addr, align 8, !dbg !5008
  %call = call %struct.dma_chan* @private_candidate(%struct.dma_cap_mask_t* %0, %struct.dma_device* %1, i1 (%struct.dma_chan*, i8*)* %2, i8* %3) #9, !dbg !5009
  store %struct.dma_chan* %call, %struct.dma_chan** %chan, align 8, !dbg !5004
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5010, metadata !DIExpression()), !dbg !5011
  %4 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5012
  %tobool = icmp ne %struct.dma_chan* %4, null, !dbg !5012
  br i1 %tobool, label %if.then, label %if.end12, !dbg !5014

if.then:                                          ; preds = %entry
  %5 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5015
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %5, i32 0, i32 6, !dbg !5015
  call void @__dma_cap_set(i32 8, %struct.dma_cap_mask_t* %cap_mask) #9, !dbg !5015
  %6 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5017
  %privatecnt = getelementptr inbounds %struct.dma_device, %struct.dma_device* %6, i32 0, i32 2, !dbg !5018
  %7 = load i32, i32* %privatecnt, align 8, !dbg !5019
  %inc = add i32 %7, 1, !dbg !5019
  store i32 %inc, i32* %privatecnt, align 8, !dbg !5019
  %8 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5020
  %call1 = call i32 @dma_chan_get(%struct.dma_chan* %8) #9, !dbg !5021
  store i32 %call1, i32* %err, align 4, !dbg !5022
  %9 = load i32, i32* %err, align 4, !dbg !5023
  %tobool2 = icmp ne i32 %9, 0, !dbg !5023
  br i1 %tobool2, label %if.then3, label %if.end11, !dbg !5025

if.then3:                                         ; preds = %if.then
  %10 = load i32, i32* %err, align 4, !dbg !5026
  %cmp = icmp eq i32 %10, -19, !dbg !5029
  br i1 %cmp, label %if.then4, label %if.else, !dbg !5030

if.then4:                                         ; preds = %if.then3
  %11 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5031
  %global_node = getelementptr inbounds %struct.dma_device, %struct.dma_device* %11, i32 0, i32 4, !dbg !5033
  call void @list_del_rcu(%struct.list_head* %global_node) #9, !dbg !5034
  br label %if.end, !dbg !5035

if.else:                                          ; preds = %if.then3
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %12 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5036
  %privatecnt5 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %12, i32 0, i32 2, !dbg !5038
  %13 = load i32, i32* %privatecnt5, align 8, !dbg !5039
  %dec = add i32 %13, -1, !dbg !5039
  store i32 %dec, i32* %privatecnt5, align 8, !dbg !5039
  %cmp6 = icmp eq i32 %dec, 0, !dbg !5040
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !5041

if.then7:                                         ; preds = %if.end
  %14 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5042
  %cap_mask8 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %14, i32 0, i32 6, !dbg !5042
  call void @__dma_cap_clear(i32 8, %struct.dma_cap_mask_t* %cap_mask8) #9, !dbg !5042
  br label %if.end9, !dbg !5042

if.end9:                                          ; preds = %if.then7, %if.end
  %15 = load i32, i32* %err, align 4, !dbg !5043
  %conv = sext i32 %15 to i64, !dbg !5043
  %call10 = call i8* @ERR_PTR(i64 %conv) #9, !dbg !5044
  %16 = bitcast i8* %call10 to %struct.dma_chan*, !dbg !5044
  store %struct.dma_chan* %16, %struct.dma_chan** %chan, align 8, !dbg !5045
  br label %if.end11, !dbg !5046

if.end11:                                         ; preds = %if.end9, %if.then
  br label %if.end12, !dbg !5047

if.end12:                                         ; preds = %if.end11, %entry
  %17 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5048
  %tobool13 = icmp ne %struct.dma_chan* %17, null, !dbg !5048
  br i1 %tobool13, label %cond.true, label %cond.false, !dbg !5048

cond.true:                                        ; preds = %if.end12
  %18 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5049
  %19 = bitcast %struct.dma_chan* %18 to i8*, !dbg !5049
  br label %cond.end, !dbg !5048

cond.false:                                       ; preds = %if.end12
  %call14 = call i8* @ERR_PTR(i64 -517) #9, !dbg !5050
  br label %cond.end, !dbg !5048

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %19, %cond.true ], [ %call14, %cond.false ], !dbg !5048
  %20 = bitcast i8* %cond to %struct.dma_chan*, !dbg !5048
  ret %struct.dma_chan* %20, !dbg !5051
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #1 !dbg !5052 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5056, metadata !DIExpression()), !dbg !5057
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5058
  %1 = ptrtoint i8* %0 to i64, !dbg !5058
  %2 = inttoptr i64 %1 to i8*, !dbg !5058
  %3 = ptrtoint i8* %2 to i64, !dbg !5058
  %cmp = icmp uge i64 %3, -4095, !dbg !5058
  %lnot = xor i1 %cmp, true, !dbg !5058
  %lnot1 = xor i1 %lnot, true, !dbg !5058
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5058
  %conv = sext i32 %lnot.ext to i64, !dbg !5058
  %tobool = icmp ne i64 %conv, 0, !dbg !5058
  ret i1 %tobool, !dbg !5059
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dma_chan* @__dma_request_channel(%struct.dma_cap_mask_t* %mask, i1 (%struct.dma_chan*, i8*)* %fn, i8* %fn_param, %struct.device_node* %np) #1 !dbg !5060 {
entry:
  %mask.addr = alloca %struct.dma_cap_mask_t*, align 8
  %fn.addr = alloca i1 (%struct.dma_chan*, i8*)*, align 8
  %fn_param.addr = alloca i8*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  %device = alloca %struct.dma_device*, align 8
  %_d = alloca %struct.dma_device*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dma_device*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.dma_device*, align 8
  %__mptr15 = alloca i8*, align 8
  %tmp20 = alloca %struct.dma_device*, align 8
  %tmp22 = alloca i32, align 4
  store %struct.dma_cap_mask_t* %mask, %struct.dma_cap_mask_t** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %mask.addr, metadata !5063, metadata !DIExpression()), !dbg !5064
  store i1 (%struct.dma_chan*, i8*)* %fn, i1 (%struct.dma_chan*, i8*)** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (%struct.dma_chan*, i8*)** %fn.addr, metadata !5065, metadata !DIExpression()), !dbg !5066
  store i8* %fn_param, i8** %fn_param.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fn_param.addr, metadata !5067, metadata !DIExpression()), !dbg !5068
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !5069, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device, metadata !5071, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.declare(metadata %struct.dma_device** %_d, metadata !5073, metadata !DIExpression()), !dbg !5074
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !5075, metadata !DIExpression()), !dbg !5076
  store %struct.dma_chan* null, %struct.dma_chan** %chan, align 8, !dbg !5076
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !5077
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5078, metadata !DIExpression()), !dbg !5081
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @dma_device_list, i32 0, i32 0), align 8, !dbg !5081
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !5081
  store i8* %1, i8** %__mptr, align 8, !dbg !5081
  br label %do.body, !dbg !5081

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5082

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5081
  %add.ptr = getelementptr i8, i8* %2, i64 -32, !dbg !5081
  %3 = bitcast i8* %add.ptr to %struct.dma_device*, !dbg !5081
  store %struct.dma_device* %3, %struct.dma_device** %tmp, align 8, !dbg !5082
  %4 = load %struct.dma_device*, %struct.dma_device** %tmp, align 8, !dbg !5081
  store %struct.dma_device* %4, %struct.dma_device** %device, align 8, !dbg !5084
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !5085, metadata !DIExpression()), !dbg !5087
  %5 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5087
  %global_node = getelementptr inbounds %struct.dma_device, %struct.dma_device* %5, i32 0, i32 4, !dbg !5087
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %global_node, i32 0, i32 0, !dbg !5087
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5087
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !5087
  store i8* %7, i8** %__mptr1, align 8, !dbg !5087
  br label %do.body2, !dbg !5087

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !5088

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr1, align 8, !dbg !5087
  %add.ptr5 = getelementptr i8, i8* %8, i64 -32, !dbg !5087
  %9 = bitcast i8* %add.ptr5 to %struct.dma_device*, !dbg !5087
  store %struct.dma_device* %9, %struct.dma_device** %tmp4, align 8, !dbg !5088
  %10 = load %struct.dma_device*, %struct.dma_device** %tmp4, align 8, !dbg !5087
  store %struct.dma_device* %10, %struct.dma_device** %_d, align 8, !dbg !5084
  br label %for.cond, !dbg !5084

for.cond:                                         ; preds = %do.end19, %do.end3
  %11 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5090
  %global_node6 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %11, i32 0, i32 4, !dbg !5090
  %cmp = icmp eq %struct.list_head* %global_node6, @dma_device_list, !dbg !5090
  %lnot = xor i1 %cmp, true, !dbg !5090
  br i1 %lnot, label %for.body, label %for.end, !dbg !5084

for.body:                                         ; preds = %for.cond
  %12 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !5092
  %tobool = icmp ne %struct.device_node* %12, null, !dbg !5092
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5095

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5096
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %13, i32 0, i32 15, !dbg !5097
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5097
  %of_node = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 23, !dbg !5098
  %15 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !5098
  %tobool7 = icmp ne %struct.device_node* %15, null, !dbg !5096
  br i1 %tobool7, label %land.lhs.true8, label %if.end, !dbg !5099

land.lhs.true8:                                   ; preds = %land.lhs.true
  %16 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !5100
  %17 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5101
  %dev9 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %17, i32 0, i32 15, !dbg !5102
  %18 = load %struct.device*, %struct.device** %dev9, align 8, !dbg !5102
  %of_node10 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 23, !dbg !5103
  %19 = load %struct.device_node*, %struct.device_node** %of_node10, align 8, !dbg !5103
  %cmp11 = icmp ne %struct.device_node* %16, %19, !dbg !5104
  br i1 %cmp11, label %if.then, label %if.end, !dbg !5105

if.then:                                          ; preds = %land.lhs.true8
  br label %for.inc, !dbg !5106

if.end:                                           ; preds = %land.lhs.true8, %land.lhs.true, %for.body
  %20 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5107
  %21 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %mask.addr, align 8, !dbg !5108
  %22 = load i1 (%struct.dma_chan*, i8*)*, i1 (%struct.dma_chan*, i8*)** %fn.addr, align 8, !dbg !5109
  %23 = load i8*, i8** %fn_param.addr, align 8, !dbg !5110
  %call = call %struct.dma_chan* @find_candidate(%struct.dma_device* %20, %struct.dma_cap_mask_t* %21, i1 (%struct.dma_chan*, i8*)* %22, i8* %23) #9, !dbg !5111
  store %struct.dma_chan* %call, %struct.dma_chan** %chan, align 8, !dbg !5112
  %24 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5113
  %25 = bitcast %struct.dma_chan* %24 to i8*, !dbg !5113
  %call12 = call zeroext i1 @IS_ERR(i8* %25) #9, !dbg !5115
  br i1 %call12, label %if.end14, label %if.then13, !dbg !5116

if.then13:                                        ; preds = %if.end
  br label %for.end, !dbg !5117

if.end14:                                         ; preds = %if.end
  store %struct.dma_chan* null, %struct.dma_chan** %chan, align 8, !dbg !5118
  br label %for.inc, !dbg !5119

for.inc:                                          ; preds = %if.end14, %if.then
  %26 = load %struct.dma_device*, %struct.dma_device** %_d, align 8, !dbg !5090
  store %struct.dma_device* %26, %struct.dma_device** %device, align 8, !dbg !5090
  call void @llvm.dbg.declare(metadata i8** %__mptr15, metadata !5120, metadata !DIExpression()), !dbg !5122
  %27 = load %struct.dma_device*, %struct.dma_device** %_d, align 8, !dbg !5122
  %global_node16 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %27, i32 0, i32 4, !dbg !5122
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %global_node16, i32 0, i32 0, !dbg !5122
  %28 = load %struct.list_head*, %struct.list_head** %next17, align 8, !dbg !5122
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !5122
  store i8* %29, i8** %__mptr15, align 8, !dbg !5122
  br label %do.body18, !dbg !5122

do.body18:                                        ; preds = %for.inc
  br label %do.end19, !dbg !5123

do.end19:                                         ; preds = %do.body18
  %30 = load i8*, i8** %__mptr15, align 8, !dbg !5122
  %add.ptr21 = getelementptr i8, i8* %30, i64 -32, !dbg !5122
  %31 = bitcast i8* %add.ptr21 to %struct.dma_device*, !dbg !5122
  store %struct.dma_device* %31, %struct.dma_device** %tmp20, align 8, !dbg !5123
  %32 = load %struct.dma_device*, %struct.dma_device** %tmp20, align 8, !dbg !5122
  store %struct.dma_device* %32, %struct.dma_device** %_d, align 8, !dbg !5090
  br label %for.cond, !dbg !5090, !llvm.loop !5125

for.end:                                          ; preds = %if.then13, %for.cond
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !5127
  store i32 0, i32* %tmp22, align 4, !dbg !5128
  %33 = load i32, i32* %tmp22, align 4, !dbg !5131
  %34 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5132
  ret %struct.dma_chan* %34, !dbg !5133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dma_chan* @dma_request_chan(%struct.device* %dev, i8* %name) #1 !dbg !5134 {
entry:
  %retval = alloca %struct.dma_chan*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %name.addr = alloca i8*, align 8
  %d = alloca %struct.dma_device*, align 8
  %_d = alloca %struct.dma_device*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dma_device*, align 8
  %__mptr13 = alloca i8*, align 8
  %tmp16 = alloca %struct.dma_device*, align 8
  %mask = alloca %struct.dma_cap_mask_t, align 8
  %map = alloca %struct.dma_slave_map*, align 8
  %__mptr28 = alloca i8*, align 8
  %tmp33 = alloca %struct.dma_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5137, metadata !DIExpression()), !dbg !5138
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5139, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.declare(metadata %struct.dma_device** %d, metadata !5141, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.declare(metadata %struct.dma_device** %_d, metadata !5143, metadata !DIExpression()), !dbg !5144
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !5145, metadata !DIExpression()), !dbg !5146
  store %struct.dma_chan* null, %struct.dma_chan** %chan, align 8, !dbg !5146
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5147
  %of_node = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 23, !dbg !5149
  %1 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !5149
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !5147
  br i1 %tobool, label %if.then, label %if.end, !dbg !5150

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5151
  %of_node1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 23, !dbg !5152
  %3 = load %struct.device_node*, %struct.device_node** %of_node1, align 8, !dbg !5152
  %4 = load i8*, i8** %name.addr, align 8, !dbg !5153
  %call = call %struct.dma_chan* @of_dma_request_slave_channel(%struct.device_node* %3, i8* %4) #9, !dbg !5154
  store %struct.dma_chan* %call, %struct.dma_chan** %chan, align 8, !dbg !5155
  br label %if.end, !dbg !5156

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5157
  %call2 = call zeroext i1 @has_acpi_companion(%struct.device* %5) #9, !dbg !5159
  br i1 %call2, label %land.lhs.true, label %if.end6, !dbg !5160

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5161
  %tobool3 = icmp ne %struct.dma_chan* %6, null, !dbg !5161
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !5162

if.then4:                                         ; preds = %land.lhs.true
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5163
  %8 = load i8*, i8** %name.addr, align 8, !dbg !5164
  %call5 = call %struct.dma_chan* @acpi_dma_request_slave_chan_by_name(%struct.device* %7, i8* %8) #9, !dbg !5165
  store %struct.dma_chan* %call5, %struct.dma_chan** %chan, align 8, !dbg !5166
  br label %if.end6, !dbg !5167

if.end6:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %9 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5168
  %10 = bitcast %struct.dma_chan* %9 to i8*, !dbg !5168
  %call7 = call i64 @PTR_ERR(i8* %10) #9, !dbg !5170
  %cmp = icmp eq i64 %call7, -517, !dbg !5171
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !5172

if.then8:                                         ; preds = %if.end6
  %11 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5173
  store %struct.dma_chan* %11, %struct.dma_chan** %retval, align 8, !dbg !5174
  br label %return, !dbg !5174

if.end9:                                          ; preds = %if.end6
  %12 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5175
  %13 = bitcast %struct.dma_chan* %12 to i8*, !dbg !5175
  %call10 = call zeroext i1 @IS_ERR_OR_NULL(i8* %13) #9, !dbg !5177
  br i1 %call10, label %if.end12, label %if.then11, !dbg !5178

if.then11:                                        ; preds = %if.end9
  br label %found, !dbg !5179

if.end12:                                         ; preds = %if.end9
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !5180
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5181, metadata !DIExpression()), !dbg !5184
  %14 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @dma_device_list, i32 0, i32 0), align 8, !dbg !5184
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !5184
  store i8* %15, i8** %__mptr, align 8, !dbg !5184
  br label %do.body, !dbg !5184

do.body:                                          ; preds = %if.end12
  br label %do.end, !dbg !5185

do.end:                                           ; preds = %do.body
  %16 = load i8*, i8** %__mptr, align 8, !dbg !5184
  %add.ptr = getelementptr i8, i8* %16, i64 -32, !dbg !5184
  %17 = bitcast i8* %add.ptr to %struct.dma_device*, !dbg !5184
  store %struct.dma_device* %17, %struct.dma_device** %tmp, align 8, !dbg !5185
  %18 = load %struct.dma_device*, %struct.dma_device** %tmp, align 8, !dbg !5184
  store %struct.dma_device* %18, %struct.dma_device** %d, align 8, !dbg !5187
  call void @llvm.dbg.declare(metadata i8** %__mptr13, metadata !5188, metadata !DIExpression()), !dbg !5190
  %19 = load %struct.dma_device*, %struct.dma_device** %d, align 8, !dbg !5190
  %global_node = getelementptr inbounds %struct.dma_device, %struct.dma_device* %19, i32 0, i32 4, !dbg !5190
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %global_node, i32 0, i32 0, !dbg !5190
  %20 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5190
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !5190
  store i8* %21, i8** %__mptr13, align 8, !dbg !5190
  br label %do.body14, !dbg !5190

do.body14:                                        ; preds = %do.end
  br label %do.end15, !dbg !5191

do.end15:                                         ; preds = %do.body14
  %22 = load i8*, i8** %__mptr13, align 8, !dbg !5190
  %add.ptr17 = getelementptr i8, i8* %22, i64 -32, !dbg !5190
  %23 = bitcast i8* %add.ptr17 to %struct.dma_device*, !dbg !5190
  store %struct.dma_device* %23, %struct.dma_device** %tmp16, align 8, !dbg !5191
  %24 = load %struct.dma_device*, %struct.dma_device** %tmp16, align 8, !dbg !5190
  store %struct.dma_device* %24, %struct.dma_device** %_d, align 8, !dbg !5187
  br label %for.cond, !dbg !5187

for.cond:                                         ; preds = %do.end32, %do.end15
  %25 = load %struct.dma_device*, %struct.dma_device** %d, align 8, !dbg !5193
  %global_node18 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %25, i32 0, i32 4, !dbg !5193
  %cmp19 = icmp eq %struct.list_head* %global_node18, @dma_device_list, !dbg !5193
  %lnot = xor i1 %cmp19, true, !dbg !5193
  br i1 %lnot, label %for.body, label %for.end, !dbg !5187

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t* %mask, metadata !5195, metadata !DIExpression()), !dbg !5197
  call void @llvm.dbg.declare(metadata %struct.dma_slave_map** %map, metadata !5198, metadata !DIExpression()), !dbg !5199
  %26 = load %struct.dma_device*, %struct.dma_device** %d, align 8, !dbg !5200
  %27 = load i8*, i8** %name.addr, align 8, !dbg !5201
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5202
  %call20 = call %struct.dma_slave_map* @dma_filter_match(%struct.dma_device* %26, i8* %27, %struct.device* %28) #9, !dbg !5203
  store %struct.dma_slave_map* %call20, %struct.dma_slave_map** %map, align 8, !dbg !5199
  %29 = load %struct.dma_slave_map*, %struct.dma_slave_map** %map, align 8, !dbg !5204
  %tobool21 = icmp ne %struct.dma_slave_map* %29, null, !dbg !5204
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !5206

if.then22:                                        ; preds = %for.body
  br label %for.inc, !dbg !5207

if.end23:                                         ; preds = %for.body
  call void @__dma_cap_zero(%struct.dma_cap_mask_t* %mask) #9, !dbg !5208
  call void @__dma_cap_set(i32 10, %struct.dma_cap_mask_t* %mask) #9, !dbg !5209
  %30 = load %struct.dma_device*, %struct.dma_device** %d, align 8, !dbg !5210
  %31 = load %struct.dma_device*, %struct.dma_device** %d, align 8, !dbg !5211
  %filter = getelementptr inbounds %struct.dma_device, %struct.dma_device* %31, i32 0, i32 5, !dbg !5212
  %fn = getelementptr inbounds %struct.dma_filter, %struct.dma_filter* %filter, i32 0, i32 0, !dbg !5213
  %32 = load i1 (%struct.dma_chan*, i8*)*, i1 (%struct.dma_chan*, i8*)** %fn, align 8, !dbg !5213
  %33 = load %struct.dma_slave_map*, %struct.dma_slave_map** %map, align 8, !dbg !5214
  %param = getelementptr inbounds %struct.dma_slave_map, %struct.dma_slave_map* %33, i32 0, i32 2, !dbg !5215
  %34 = load i8*, i8** %param, align 8, !dbg !5215
  %call24 = call %struct.dma_chan* @find_candidate(%struct.dma_device* %30, %struct.dma_cap_mask_t* %mask, i1 (%struct.dma_chan*, i8*)* %32, i8* %34) #9, !dbg !5216
  store %struct.dma_chan* %call24, %struct.dma_chan** %chan, align 8, !dbg !5217
  %35 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5218
  %36 = bitcast %struct.dma_chan* %35 to i8*, !dbg !5218
  %call25 = call zeroext i1 @IS_ERR(i8* %36) #9, !dbg !5220
  br i1 %call25, label %if.end27, label %if.then26, !dbg !5221

if.then26:                                        ; preds = %if.end23
  br label %for.end, !dbg !5222

if.end27:                                         ; preds = %if.end23
  br label %for.inc, !dbg !5223

for.inc:                                          ; preds = %if.end27, %if.then22
  %37 = load %struct.dma_device*, %struct.dma_device** %_d, align 8, !dbg !5193
  store %struct.dma_device* %37, %struct.dma_device** %d, align 8, !dbg !5193
  call void @llvm.dbg.declare(metadata i8** %__mptr28, metadata !5224, metadata !DIExpression()), !dbg !5226
  %38 = load %struct.dma_device*, %struct.dma_device** %_d, align 8, !dbg !5226
  %global_node29 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %38, i32 0, i32 4, !dbg !5226
  %next30 = getelementptr inbounds %struct.list_head, %struct.list_head* %global_node29, i32 0, i32 0, !dbg !5226
  %39 = load %struct.list_head*, %struct.list_head** %next30, align 8, !dbg !5226
  %40 = bitcast %struct.list_head* %39 to i8*, !dbg !5226
  store i8* %40, i8** %__mptr28, align 8, !dbg !5226
  br label %do.body31, !dbg !5226

do.body31:                                        ; preds = %for.inc
  br label %do.end32, !dbg !5227

do.end32:                                         ; preds = %do.body31
  %41 = load i8*, i8** %__mptr28, align 8, !dbg !5226
  %add.ptr34 = getelementptr i8, i8* %41, i64 -32, !dbg !5226
  %42 = bitcast i8* %add.ptr34 to %struct.dma_device*, !dbg !5226
  store %struct.dma_device* %42, %struct.dma_device** %tmp33, align 8, !dbg !5227
  %43 = load %struct.dma_device*, %struct.dma_device** %tmp33, align 8, !dbg !5226
  store %struct.dma_device* %43, %struct.dma_device** %_d, align 8, !dbg !5193
  br label %for.cond, !dbg !5193, !llvm.loop !5229

for.end:                                          ; preds = %if.then26, %for.cond
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !5231
  %44 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5232
  %45 = bitcast %struct.dma_chan* %44 to i8*, !dbg !5232
  %call35 = call zeroext i1 @IS_ERR(i8* %45) #9, !dbg !5234
  br i1 %call35, label %if.then36, label %if.end37, !dbg !5235

if.then36:                                        ; preds = %for.end
  %46 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5236
  store %struct.dma_chan* %46, %struct.dma_chan** %retval, align 8, !dbg !5237
  br label %return, !dbg !5237

if.end37:                                         ; preds = %for.end
  %47 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5238
  %tobool38 = icmp ne %struct.dma_chan* %47, null, !dbg !5238
  br i1 %tobool38, label %if.end41, label %if.then39, !dbg !5240

if.then39:                                        ; preds = %if.end37
  %call40 = call i8* @ERR_PTR(i64 -517) #9, !dbg !5241
  %48 = bitcast i8* %call40 to %struct.dma_chan*, !dbg !5241
  store %struct.dma_chan* %48, %struct.dma_chan** %retval, align 8, !dbg !5242
  br label %return, !dbg !5242

if.end41:                                         ; preds = %if.end37
  br label %found, !dbg !5238

found:                                            ; preds = %if.end41, %if.then11
  call void @llvm.dbg.label(metadata !5243), !dbg !5244
  %49 = load i8*, i8** %name.addr, align 8, !dbg !5245
  %call42 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* %49) #9, !dbg !5246
  %50 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5247
  %name43 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %50, i32 0, i32 6, !dbg !5248
  store i8* %call42, i8** %name43, align 8, !dbg !5249
  %51 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5250
  %name44 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %51, i32 0, i32 6, !dbg !5252
  %52 = load i8*, i8** %name44, align 8, !dbg !5252
  %tobool45 = icmp ne i8* %52, null, !dbg !5250
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !5253

if.then46:                                        ; preds = %found
  %53 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5254
  store %struct.dma_chan* %53, %struct.dma_chan** %retval, align 8, !dbg !5255
  br label %return, !dbg !5255

if.end47:                                         ; preds = %found
  %54 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5256
  %55 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5257
  %slave = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %55, i32 0, i32 1, !dbg !5258
  store %struct.device* %54, %struct.device** %slave, align 8, !dbg !5259
  %56 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5260
  %dev48 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %56, i32 0, i32 5, !dbg !5262
  %57 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev48, align 8, !dbg !5262
  %device = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %57, i32 0, i32 1, !dbg !5263
  %kobj = getelementptr inbounds %struct.device, %struct.device* %device, i32 0, i32 0, !dbg !5264
  %58 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5265
  %kobj49 = getelementptr inbounds %struct.device, %struct.device* %58, i32 0, i32 0, !dbg !5266
  %call50 = call i32 @sysfs_create_link(%struct.kobject* %kobj, %struct.kobject* %kobj49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !5267
  %tobool51 = icmp ne i32 %call50, 0, !dbg !5267
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !5268

if.then52:                                        ; preds = %if.end47
  %59 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5269
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %59, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !5269
  br label %if.end53, !dbg !5269

if.end53:                                         ; preds = %if.then52, %if.end47
  %60 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5270
  %kobj54 = getelementptr inbounds %struct.device, %struct.device* %60, i32 0, i32 0, !dbg !5272
  %61 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5273
  %dev55 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %61, i32 0, i32 5, !dbg !5274
  %62 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev55, align 8, !dbg !5274
  %device56 = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %62, i32 0, i32 1, !dbg !5275
  %kobj57 = getelementptr inbounds %struct.device, %struct.device* %device56, i32 0, i32 0, !dbg !5276
  %63 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5277
  %name58 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %63, i32 0, i32 6, !dbg !5278
  %64 = load i8*, i8** %name58, align 8, !dbg !5278
  %call59 = call i32 @sysfs_create_link(%struct.kobject* %kobj54, %struct.kobject* %kobj57, i8* %64) #9, !dbg !5279
  %tobool60 = icmp ne i32 %call59, 0, !dbg !5279
  br i1 %tobool60, label %if.then61, label %if.end63, !dbg !5280

if.then61:                                        ; preds = %if.end53
  %65 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5281
  %66 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5281
  %name62 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %66, i32 0, i32 6, !dbg !5281
  %67 = load i8*, i8** %name62, align 8, !dbg !5281
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %65, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i8* %67) #10, !dbg !5281
  br label %if.end63, !dbg !5281

if.end63:                                         ; preds = %if.then61, %if.end53
  %68 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5282
  store %struct.dma_chan* %68, %struct.dma_chan** %retval, align 8, !dbg !5283
  br label %return, !dbg !5283

return:                                           ; preds = %if.end63, %if.then46, %if.then39, %if.then36, %if.then8
  %69 = load %struct.dma_chan*, %struct.dma_chan** %retval, align 8, !dbg !5284
  ret %struct.dma_chan* %69, !dbg !5284
}

; Function Attrs: noredzone
declare dso_local %struct.dma_chan* @of_dma_request_slave_channel(%struct.device_node*, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @has_acpi_companion(%struct.device* %dev) #1 !dbg !5285 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5289, metadata !DIExpression()), !dbg !5290
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5291
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 24, !dbg !5292
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !5292
  %call = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %1) #9, !dbg !5293
  ret i1 %call, !dbg !5294
}

; Function Attrs: noredzone
declare dso_local %struct.dma_chan* @acpi_dma_request_slave_chan_by_name(%struct.device*, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #1 !dbg !5295 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5298, metadata !DIExpression()), !dbg !5299
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5300
  %1 = ptrtoint i8* %0 to i64, !dbg !5301
  ret i64 %1, !dbg !5302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #1 !dbg !5303 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5304, metadata !DIExpression()), !dbg !5305
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5306
  %tobool = icmp ne i8* %0, null, !dbg !5306
  %lnot = xor i1 %tobool, true, !dbg !5306
  %lnot1 = xor i1 %lnot, true, !dbg !5306
  %lnot2 = xor i1 %lnot1, true, !dbg !5306
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5306
  %conv = sext i32 %lnot.ext to i64, !dbg !5306
  %tobool3 = icmp ne i64 %conv, 0, !dbg !5306
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !5307

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !5308
  %2 = ptrtoint i8* %1 to i64, !dbg !5308
  %3 = inttoptr i64 %2 to i8*, !dbg !5308
  %4 = ptrtoint i8* %3 to i64, !dbg !5308
  %cmp = icmp uge i64 %4, -4095, !dbg !5308
  %lnot5 = xor i1 %cmp, true, !dbg !5308
  %lnot7 = xor i1 %lnot5, true, !dbg !5308
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !5308
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !5308
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !5307
  br label %lor.end, !dbg !5307

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !5309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_slave_map* @dma_filter_match(%struct.dma_device* %device, i8* %name, %struct.device* %dev) #1 !dbg !5310 {
entry:
  %retval = alloca %struct.dma_slave_map*, align 8
  %device.addr = alloca %struct.dma_device*, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  %map = alloca %struct.dma_slave_map*, align 8
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !5313, metadata !DIExpression()), !dbg !5314
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5315, metadata !DIExpression()), !dbg !5316
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5317, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5319, metadata !DIExpression()), !dbg !5320
  %0 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5321
  %filter = getelementptr inbounds %struct.dma_device, %struct.dma_device* %0, i32 0, i32 5, !dbg !5323
  %mapcnt = getelementptr inbounds %struct.dma_filter, %struct.dma_filter* %filter, i32 0, i32 1, !dbg !5324
  %1 = load i32, i32* %mapcnt, align 8, !dbg !5324
  %tobool = icmp ne i32 %1, 0, !dbg !5321
  br i1 %tobool, label %if.end, label %if.then, !dbg !5325

if.then:                                          ; preds = %entry
  store %struct.dma_slave_map* null, %struct.dma_slave_map** %retval, align 8, !dbg !5326
  br label %return, !dbg !5326

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !5327
  br label %for.cond, !dbg !5329

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !5330
  %3 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5332
  %filter1 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %3, i32 0, i32 5, !dbg !5333
  %mapcnt2 = getelementptr inbounds %struct.dma_filter, %struct.dma_filter* %filter1, i32 0, i32 1, !dbg !5334
  %4 = load i32, i32* %mapcnt2, align 8, !dbg !5334
  %cmp = icmp slt i32 %2, %4, !dbg !5335
  br i1 %cmp, label %for.body, label %for.end, !dbg !5336

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.dma_slave_map** %map, metadata !5337, metadata !DIExpression()), !dbg !5339
  %5 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5340
  %filter3 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %5, i32 0, i32 5, !dbg !5341
  %map4 = getelementptr inbounds %struct.dma_filter, %struct.dma_filter* %filter3, i32 0, i32 2, !dbg !5342
  %6 = load %struct.dma_slave_map*, %struct.dma_slave_map** %map4, align 8, !dbg !5342
  %7 = load i32, i32* %i, align 4, !dbg !5343
  %idxprom = sext i32 %7 to i64, !dbg !5340
  %arrayidx = getelementptr %struct.dma_slave_map, %struct.dma_slave_map* %6, i64 %idxprom, !dbg !5340
  store %struct.dma_slave_map* %arrayidx, %struct.dma_slave_map** %map, align 8, !dbg !5339
  %8 = load %struct.dma_slave_map*, %struct.dma_slave_map** %map, align 8, !dbg !5344
  %devname = getelementptr inbounds %struct.dma_slave_map, %struct.dma_slave_map* %8, i32 0, i32 0, !dbg !5346
  %9 = load i8*, i8** %devname, align 8, !dbg !5346
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5347
  %call = call i8* @dev_name(%struct.device* %10) #9, !dbg !5348
  %call5 = call i32 @strcmp(i8* %9, i8* %call) #9, !dbg !5349
  %tobool6 = icmp ne i32 %call5, 0, !dbg !5349
  br i1 %tobool6, label %if.end10, label %land.lhs.true, !dbg !5350

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.dma_slave_map*, %struct.dma_slave_map** %map, align 8, !dbg !5351
  %slave = getelementptr inbounds %struct.dma_slave_map, %struct.dma_slave_map* %11, i32 0, i32 1, !dbg !5352
  %12 = load i8*, i8** %slave, align 8, !dbg !5352
  %13 = load i8*, i8** %name.addr, align 8, !dbg !5353
  %call7 = call i32 @strcmp(i8* %12, i8* %13) #9, !dbg !5354
  %tobool8 = icmp ne i32 %call7, 0, !dbg !5354
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !5355

if.then9:                                         ; preds = %land.lhs.true
  %14 = load %struct.dma_slave_map*, %struct.dma_slave_map** %map, align 8, !dbg !5356
  store %struct.dma_slave_map* %14, %struct.dma_slave_map** %retval, align 8, !dbg !5357
  br label %return, !dbg !5357

if.end10:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !5358

for.inc:                                          ; preds = %if.end10
  %15 = load i32, i32* %i, align 4, !dbg !5359
  %inc = add i32 %15, 1, !dbg !5359
  store i32 %inc, i32* %i, align 4, !dbg !5359
  br label %for.cond, !dbg !5360, !llvm.loop !5361

for.end:                                          ; preds = %for.cond
  store %struct.dma_slave_map* null, %struct.dma_slave_map** %retval, align 8, !dbg !5363
  br label %return, !dbg !5363

return:                                           ; preds = %for.end, %if.then9, %if.then
  %16 = load %struct.dma_slave_map*, %struct.dma_slave_map** %retval, align 8, !dbg !5364
  ret %struct.dma_slave_map* %16, !dbg !5364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #1 !dbg !5365 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !5368, metadata !DIExpression()), !dbg !5369
  %0 = load i64, i64* %error.addr, align 8, !dbg !5370
  %1 = inttoptr i64 %0 to i8*, !dbg !5371
  ret i8* %1, !dbg !5372
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kasprintf(i32, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_link(%struct.kobject*, %struct.kobject*, i8*) #4

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dma_chan* @dma_request_chan_by_mask(%struct.dma_cap_mask_t* %mask) #1 !dbg !5373 {
entry:
  %retval = alloca %struct.dma_chan*, align 8
  %mask.addr = alloca %struct.dma_cap_mask_t*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  store %struct.dma_cap_mask_t* %mask, %struct.dma_cap_mask_t** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %mask.addr, metadata !5376, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !5378, metadata !DIExpression()), !dbg !5379
  %0 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %mask.addr, align 8, !dbg !5380
  %tobool = icmp ne %struct.dma_cap_mask_t* %0, null, !dbg !5380
  br i1 %tobool, label %if.end, label %if.then, !dbg !5382

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -19) #9, !dbg !5383
  %1 = bitcast i8* %call to %struct.dma_chan*, !dbg !5383
  store %struct.dma_chan* %1, %struct.dma_chan** %retval, align 8, !dbg !5384
  br label %return, !dbg !5384

if.end:                                           ; preds = %entry
  %2 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %mask.addr, align 8, !dbg !5385
  %call1 = call %struct.dma_chan* @__dma_request_channel(%struct.dma_cap_mask_t* %2, i1 (%struct.dma_chan*, i8*)* null, i8* null, %struct.device_node* null) #9, !dbg !5386
  store %struct.dma_chan* %call1, %struct.dma_chan** %chan, align 8, !dbg !5387
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5388
  %tobool2 = icmp ne %struct.dma_chan* %3, null, !dbg !5388
  br i1 %tobool2, label %if.end10, label %if.then3, !dbg !5390

if.then3:                                         ; preds = %if.end
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !5391
  %call4 = call i32 @list_empty(%struct.list_head* @dma_device_list) #9, !dbg !5393
  %tobool5 = icmp ne i32 %call4, 0, !dbg !5393
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !5395

if.then6:                                         ; preds = %if.then3
  %call7 = call i8* @ERR_PTR(i64 -517) #9, !dbg !5396
  %4 = bitcast i8* %call7 to %struct.dma_chan*, !dbg !5396
  store %struct.dma_chan* %4, %struct.dma_chan** %chan, align 8, !dbg !5397
  br label %if.end9, !dbg !5398

if.else:                                          ; preds = %if.then3
  %call8 = call i8* @ERR_PTR(i64 -19) #9, !dbg !5399
  %5 = bitcast i8* %call8 to %struct.dma_chan*, !dbg !5399
  store %struct.dma_chan* %5, %struct.dma_chan** %chan, align 8, !dbg !5400
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !5401
  br label %if.end10, !dbg !5402

if.end10:                                         ; preds = %if.end9, %if.end
  %6 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5403
  store %struct.dma_chan* %6, %struct.dma_chan** %retval, align 8, !dbg !5404
  br label %return, !dbg !5404

return:                                           ; preds = %if.end10, %if.then
  %7 = load %struct.dma_chan*, %struct.dma_chan** %retval, align 8, !dbg !5405
  ret %struct.dma_chan* %7, !dbg !5405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #1 !dbg !5406 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !5412, metadata !DIExpression()), !dbg !5413
  br label %do.body, !dbg !5414

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5416

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !5414
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !5414
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5414
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !5416
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !5414
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !5418
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !5419
  %conv = zext i1 %cmp to i32, !dbg !5419
  ret i32 %conv, !dbg !5420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dma_release_channel(%struct.dma_chan* %chan) #1 !dbg !4300 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp38 = alloca i64, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !5421, metadata !DIExpression()), !dbg !5422
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !5423
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !5424, metadata !DIExpression()), !dbg !5426
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5426
  %client_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 9, !dbg !5426
  %1 = load i32, i32* %client_count, align 8, !dbg !5426
  %cmp = icmp ne i32 %1, 1, !dbg !5426
  %lnot = xor i1 %cmp, true, !dbg !5426
  %lnot1 = xor i1 %lnot, true, !dbg !5426
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5426
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !5426
  %2 = load i32, i32* %__ret_warn_once, align 4, !dbg !5427
  %tobool = icmp ne i32 %2, 0, !dbg !5427
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5427

land.rhs:                                         ; preds = %entry
  %3 = load i8, i8* @dma_release_channel.__warned, align 1, !dbg !5427
  %tobool2 = trunc i8 %3 to i1, !dbg !5427
  %lnot3 = xor i1 %tobool2, true, !dbg !5427
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !5429
  %lnot5 = xor i1 %4, true, !dbg !5427
  %lnot7 = xor i1 %lnot5, true, !dbg !5427
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !5427
  %conv = sext i32 %lnot.ext8 to i64, !dbg !5427
  %tobool9 = icmp ne i64 %conv, 0, !dbg !5427
  br i1 %tobool9, label %if.then, label %if.end37, !dbg !5426

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_release_channel.__warned, align 1, !dbg !5430
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5432, metadata !DIExpression()), !dbg !5434
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !5434
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !5435
  %tobool10 = icmp ne i32 %5, 0, !dbg !5435
  %lnot11 = xor i1 %tobool10, true, !dbg !5435
  %lnot13 = xor i1 %lnot11, true, !dbg !5435
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !5435
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !5435
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !5435
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !5434

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !5435

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !5437

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !5439

do.end:                                           ; preds = %do.body18
  %6 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5437
  %client_count19 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %6, i32 0, i32 9, !dbg !5437
  %7 = load i32, i32* %client_count19, align 8, !dbg !5437
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0), i32 %7) #9, !dbg !5437
  br label %do.body20, !dbg !5437

do.body20:                                        ; preds = %do.end
  br label %do.body21, !dbg !5441

do.body21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !5443

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !5441

do.body23:                                        ; preds = %do.end22
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 907, i32 2313, i64 12) #11, !dbg !5445, !srcloc !5447
  br label %do.end24, !dbg !5445

do.end24:                                         ; preds = %do.body23
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 270) #11, !dbg !5448, !srcloc !5450
  br label %do.body25, !dbg !5441

do.body25:                                        ; preds = %do.end24
  br label %do.end26, !dbg !5451

do.end26:                                         ; preds = %do.body25
  br label %do.end27, !dbg !5441

do.end27:                                         ; preds = %do.end26
  br label %do.body28, !dbg !5437

do.body28:                                        ; preds = %do.end27
  br label %do.end29, !dbg !5453

do.end29:                                         ; preds = %do.body28
  br label %do.end30, !dbg !5437

do.end30:                                         ; preds = %do.end29
  br label %if.end, !dbg !5437

if.end:                                           ; preds = %do.end30, %if.then
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !5434
  %tobool31 = icmp ne i32 %8, 0, !dbg !5434
  %lnot32 = xor i1 %tobool31, true, !dbg !5434
  %lnot34 = xor i1 %lnot32, true, !dbg !5434
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !5434
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !5434
  store i64 %conv36, i64* %tmp, align 8, !dbg !5435
  %9 = load i64, i64* %tmp, align 8, !dbg !5434
  br label %if.end37, !dbg !5430

if.end37:                                         ; preds = %if.end, %land.end
  %10 = load i32, i32* %__ret_warn_once, align 4, !dbg !5426
  %tobool39 = icmp ne i32 %10, 0, !dbg !5426
  %lnot40 = xor i1 %tobool39, true, !dbg !5426
  %lnot42 = xor i1 %lnot40, true, !dbg !5426
  %lnot.ext43 = zext i1 %lnot42 to i32, !dbg !5426
  %conv44 = sext i32 %lnot.ext43 to i64, !dbg !5426
  store i64 %conv44, i64* %tmp38, align 8, !dbg !5427
  %11 = load i64, i64* %tmp38, align 8, !dbg !5426
  %12 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5455
  call void @dma_chan_put(%struct.dma_chan* %12) #9, !dbg !5456
  %13 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5457
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %13, i32 0, i32 0, !dbg !5459
  %14 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5459
  %privatecnt = getelementptr inbounds %struct.dma_device, %struct.dma_device* %14, i32 0, i32 2, !dbg !5460
  %15 = load i32, i32* %privatecnt, align 8, !dbg !5461
  %dec = add i32 %15, -1, !dbg !5461
  store i32 %dec, i32* %privatecnt, align 8, !dbg !5461
  %cmp45 = icmp eq i32 %dec, 0, !dbg !5462
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !5463

if.then47:                                        ; preds = %if.end37
  %16 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5464
  %device48 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %16, i32 0, i32 0, !dbg !5464
  %17 = load %struct.dma_device*, %struct.dma_device** %device48, align 8, !dbg !5464
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %17, i32 0, i32 6, !dbg !5464
  call void @__dma_cap_clear(i32 8, %struct.dma_cap_mask_t* %cap_mask) #9, !dbg !5464
  br label %if.end49, !dbg !5464

if.end49:                                         ; preds = %if.then47, %if.end37
  %18 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5465
  %slave = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %18, i32 0, i32 1, !dbg !5467
  %19 = load %struct.device*, %struct.device** %slave, align 8, !dbg !5467
  %tobool50 = icmp ne %struct.device* %19, null, !dbg !5465
  br i1 %tobool50, label %if.then51, label %if.end58, !dbg !5468

if.then51:                                        ; preds = %if.end49
  %20 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5469
  %dev = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %20, i32 0, i32 5, !dbg !5471
  %21 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev, align 8, !dbg !5471
  %device52 = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %21, i32 0, i32 1, !dbg !5472
  %kobj = getelementptr inbounds %struct.device, %struct.device* %device52, i32 0, i32 0, !dbg !5473
  call void @sysfs_remove_link(%struct.kobject* %kobj, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !5474
  %22 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5475
  %slave53 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %22, i32 0, i32 1, !dbg !5476
  %23 = load %struct.device*, %struct.device** %slave53, align 8, !dbg !5476
  %kobj54 = getelementptr inbounds %struct.device, %struct.device* %23, i32 0, i32 0, !dbg !5477
  %24 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5478
  %name = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %24, i32 0, i32 6, !dbg !5479
  %25 = load i8*, i8** %name, align 8, !dbg !5479
  call void @sysfs_remove_link(%struct.kobject* %kobj54, i8* %25) #9, !dbg !5480
  %26 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5481
  %name55 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %26, i32 0, i32 6, !dbg !5482
  %27 = load i8*, i8** %name55, align 8, !dbg !5482
  call void @kfree(i8* %27) #9, !dbg !5483
  %28 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5484
  %name56 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %28, i32 0, i32 6, !dbg !5485
  store i8* null, i8** %name56, align 8, !dbg !5486
  %29 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5487
  %slave57 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %29, i32 0, i32 1, !dbg !5488
  store %struct.device* null, %struct.device** %slave57, align 8, !dbg !5489
  br label %if.end58, !dbg !5490

if.end58:                                         ; preds = %if.then51, %if.end49
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !5491
  ret void, !dbg !5492
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_chan_put(%struct.dma_chan* %chan) #1 !dbg !5493 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !5494, metadata !DIExpression()), !dbg !5495
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5496
  %client_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 9, !dbg !5498
  %1 = load i32, i32* %client_count, align 8, !dbg !5498
  %tobool = icmp ne i32 %1, 0, !dbg !5496
  br i1 %tobool, label %if.end, label %if.then, !dbg !5499

if.then:                                          ; preds = %entry
  br label %return, !dbg !5500

if.end:                                           ; preds = %entry
  %2 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5501
  %client_count1 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %2, i32 0, i32 9, !dbg !5502
  %3 = load i32, i32* %client_count1, align 8, !dbg !5503
  %dec = add i32 %3, -1, !dbg !5503
  store i32 %dec, i32* %client_count1, align 8, !dbg !5503
  %4 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5504
  %client_count2 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %4, i32 0, i32 9, !dbg !5506
  %5 = load i32, i32* %client_count2, align 8, !dbg !5506
  %tobool3 = icmp ne i32 %5, 0, !dbg !5504
  br i1 %tobool3, label %if.end8, label %land.lhs.true, !dbg !5507

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5508
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %6, i32 0, i32 0, !dbg !5509
  %7 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5509
  %device_free_chan_resources = getelementptr inbounds %struct.dma_device, %struct.dma_device* %7, i32 0, i32 28, !dbg !5510
  %8 = load void (%struct.dma_chan*)*, void (%struct.dma_chan*)** %device_free_chan_resources, align 8, !dbg !5510
  %tobool4 = icmp ne void (%struct.dma_chan*)* %8, null, !dbg !5508
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !5511

if.then5:                                         ; preds = %land.lhs.true
  %9 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5512
  call void @dmaengine_synchronize(%struct.dma_chan* %9) #9, !dbg !5514
  %10 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5515
  %device6 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %10, i32 0, i32 0, !dbg !5516
  %11 = load %struct.dma_device*, %struct.dma_device** %device6, align 8, !dbg !5516
  %device_free_chan_resources7 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %11, i32 0, i32 28, !dbg !5517
  %12 = load void (%struct.dma_chan*)*, void (%struct.dma_chan*)** %device_free_chan_resources7, align 8, !dbg !5517
  %13 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5518
  call void %12(%struct.dma_chan* %13) #9, !dbg !5515
  br label %if.end8, !dbg !5519

if.end8:                                          ; preds = %if.then5, %land.lhs.true, %if.end
  %14 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5520
  %router = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %14, i32 0, i32 11, !dbg !5522
  %15 = load %struct.dma_router*, %struct.dma_router** %router, align 8, !dbg !5522
  %tobool9 = icmp ne %struct.dma_router* %15, null, !dbg !5520
  br i1 %tobool9, label %land.lhs.true10, label %if.end19, !dbg !5523

land.lhs.true10:                                  ; preds = %if.end8
  %16 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5524
  %router11 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %16, i32 0, i32 11, !dbg !5525
  %17 = load %struct.dma_router*, %struct.dma_router** %router11, align 8, !dbg !5525
  %route_free = getelementptr inbounds %struct.dma_router, %struct.dma_router* %17, i32 0, i32 1, !dbg !5526
  %18 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %route_free, align 8, !dbg !5526
  %tobool12 = icmp ne void (%struct.device*, i8*)* %18, null, !dbg !5524
  br i1 %tobool12, label %if.then13, label %if.end19, !dbg !5527

if.then13:                                        ; preds = %land.lhs.true10
  %19 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5528
  %router14 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %19, i32 0, i32 11, !dbg !5530
  %20 = load %struct.dma_router*, %struct.dma_router** %router14, align 8, !dbg !5530
  %route_free15 = getelementptr inbounds %struct.dma_router, %struct.dma_router* %20, i32 0, i32 1, !dbg !5531
  %21 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %route_free15, align 8, !dbg !5531
  %22 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5532
  %router16 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %22, i32 0, i32 11, !dbg !5533
  %23 = load %struct.dma_router*, %struct.dma_router** %router16, align 8, !dbg !5533
  %dev = getelementptr inbounds %struct.dma_router, %struct.dma_router* %23, i32 0, i32 0, !dbg !5534
  %24 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5534
  %25 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5535
  %route_data = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %25, i32 0, i32 12, !dbg !5536
  %26 = load i8*, i8** %route_data, align 8, !dbg !5536
  call void %21(%struct.device* %24, i8* %26) #9, !dbg !5528
  %27 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5537
  %router17 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %27, i32 0, i32 11, !dbg !5538
  store %struct.dma_router* null, %struct.dma_router** %router17, align 8, !dbg !5539
  %28 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5540
  %route_data18 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %28, i32 0, i32 12, !dbg !5541
  store i8* null, i8** %route_data18, align 8, !dbg !5542
  br label %if.end19, !dbg !5543

if.end19:                                         ; preds = %if.then13, %land.lhs.true10, %if.end8
  %29 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5544
  %device20 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %29, i32 0, i32 0, !dbg !5545
  %30 = load %struct.dma_device*, %struct.dma_device** %device20, align 8, !dbg !5545
  call void @dma_device_put(%struct.dma_device* %30) #9, !dbg !5546
  %31 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5547
  %call = call %struct.module* @dma_chan_to_owner(%struct.dma_chan* %31) #9, !dbg !5548
  call void @module_put(%struct.module* %call) #9, !dbg !5549
  br label %return, !dbg !5550

return:                                           ; preds = %if.end19, %if.then
  ret void, !dbg !5550
}

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_link(%struct.kobject*, i8*) #4

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dmaengine_get() #1 !dbg !5551 {
entry:
  %device = alloca %struct.dma_device*, align 8
  %_d = alloca %struct.dma_device*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dma_device*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.dma_device*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp11 = alloca %struct.dma_chan*, align 8
  %__mptr26 = alloca i8*, align 8
  %tmp31 = alloca %struct.dma_chan*, align 8
  %__mptr34 = alloca i8*, align 8
  %tmp39 = alloca %struct.dma_device*, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device, metadata !5552, metadata !DIExpression()), !dbg !5553
  call void @llvm.dbg.declare(metadata %struct.dma_device** %_d, metadata !5554, metadata !DIExpression()), !dbg !5555
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !5556, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5558, metadata !DIExpression()), !dbg !5559
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !5560
  %0 = load i64, i64* @dmaengine_ref_count, align 8, !dbg !5561
  %inc = add i64 %0, 1, !dbg !5561
  store i64 %inc, i64* @dmaengine_ref_count, align 8, !dbg !5561
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5562, metadata !DIExpression()), !dbg !5565
  %1 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @dma_device_list, i32 0, i32 0), align 8, !dbg !5565
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !5565
  store i8* %2, i8** %__mptr, align 8, !dbg !5565
  br label %do.body, !dbg !5565

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5566

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5565
  %add.ptr = getelementptr i8, i8* %3, i64 -32, !dbg !5565
  %4 = bitcast i8* %add.ptr to %struct.dma_device*, !dbg !5565
  store %struct.dma_device* %4, %struct.dma_device** %tmp, align 8, !dbg !5566
  %5 = load %struct.dma_device*, %struct.dma_device** %tmp, align 8, !dbg !5565
  store %struct.dma_device* %5, %struct.dma_device** %device, align 8, !dbg !5568
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !5569, metadata !DIExpression()), !dbg !5571
  %6 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5571
  %global_node = getelementptr inbounds %struct.dma_device, %struct.dma_device* %6, i32 0, i32 4, !dbg !5571
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %global_node, i32 0, i32 0, !dbg !5571
  %7 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5571
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !5571
  store i8* %8, i8** %__mptr1, align 8, !dbg !5571
  br label %do.body2, !dbg !5571

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !5572

do.end3:                                          ; preds = %do.body2
  %9 = load i8*, i8** %__mptr1, align 8, !dbg !5571
  %add.ptr5 = getelementptr i8, i8* %9, i64 -32, !dbg !5571
  %10 = bitcast i8* %add.ptr5 to %struct.dma_device*, !dbg !5571
  store %struct.dma_device* %10, %struct.dma_device** %tmp4, align 8, !dbg !5572
  %11 = load %struct.dma_device*, %struct.dma_device** %tmp4, align 8, !dbg !5571
  store %struct.dma_device* %11, %struct.dma_device** %_d, align 8, !dbg !5568
  br label %for.cond, !dbg !5568

for.cond:                                         ; preds = %do.end38, %do.end3
  %12 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5574
  %global_node6 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %12, i32 0, i32 4, !dbg !5574
  %cmp = icmp eq %struct.list_head* %global_node6, @dma_device_list, !dbg !5574
  %lnot = xor i1 %cmp, true, !dbg !5574
  br i1 %lnot, label %for.body, label %for.end41, !dbg !5568

for.body:                                         ; preds = %for.cond
  %13 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5576
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %13, i32 0, i32 6, !dbg !5576
  %call = call i32 @__dma_has_cap(i32 8, %struct.dma_cap_mask_t* %cap_mask) #9, !dbg !5576
  %tobool = icmp ne i32 %call, 0, !dbg !5576
  br i1 %tobool, label %if.then, label %if.end, !dbg !5579

if.then:                                          ; preds = %for.body
  br label %for.inc33, !dbg !5580

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !5581, metadata !DIExpression()), !dbg !5584
  %14 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5584
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %14, i32 0, i32 3, !dbg !5584
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %channels, i32 0, i32 0, !dbg !5584
  %15 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !5584
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !5584
  store i8* %16, i8** %__mptr7, align 8, !dbg !5584
  br label %do.body9, !dbg !5584

do.body9:                                         ; preds = %if.end
  br label %do.end10, !dbg !5585

do.end10:                                         ; preds = %do.body9
  %17 = load i8*, i8** %__mptr7, align 8, !dbg !5584
  %add.ptr12 = getelementptr i8, i8* %17, i64 -48, !dbg !5584
  %18 = bitcast i8* %add.ptr12 to %struct.dma_chan*, !dbg !5584
  store %struct.dma_chan* %18, %struct.dma_chan** %tmp11, align 8, !dbg !5585
  %19 = load %struct.dma_chan*, %struct.dma_chan** %tmp11, align 8, !dbg !5584
  store %struct.dma_chan* %19, %struct.dma_chan** %chan, align 8, !dbg !5587
  br label %for.cond13, !dbg !5587

for.cond13:                                       ; preds = %do.end30, %do.end10
  %20 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5588
  %device_node = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %20, i32 0, i32 7, !dbg !5588
  %21 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5588
  %channels14 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %21, i32 0, i32 3, !dbg !5588
  %cmp15 = icmp eq %struct.list_head* %device_node, %channels14, !dbg !5588
  %lnot16 = xor i1 %cmp15, true, !dbg !5588
  br i1 %lnot16, label %for.body17, label %for.end, !dbg !5587

for.body17:                                       ; preds = %for.cond13
  %22 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5590
  %call18 = call i32 @dma_chan_get(%struct.dma_chan* %22) #9, !dbg !5592
  store i32 %call18, i32* %err, align 4, !dbg !5593
  %23 = load i32, i32* %err, align 4, !dbg !5594
  %cmp19 = icmp eq i32 %23, -19, !dbg !5596
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !5597

if.then20:                                        ; preds = %for.body17
  %24 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5598
  %global_node21 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %24, i32 0, i32 4, !dbg !5600
  call void @list_del_rcu(%struct.list_head* %global_node21) #9, !dbg !5601
  br label %for.end, !dbg !5602

if.else:                                          ; preds = %for.body17
  %25 = load i32, i32* %err, align 4, !dbg !5603
  %tobool22 = icmp ne i32 %25, 0, !dbg !5603
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5605

if.then23:                                        ; preds = %if.else
  br label %if.end24, !dbg !5606

if.end24:                                         ; preds = %if.then23, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24
  br label %for.inc, !dbg !5607

for.inc:                                          ; preds = %if.end25
  call void @llvm.dbg.declare(metadata i8** %__mptr26, metadata !5608, metadata !DIExpression()), !dbg !5610
  %26 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5610
  %device_node27 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %26, i32 0, i32 7, !dbg !5610
  %next28 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node27, i32 0, i32 0, !dbg !5610
  %27 = load %struct.list_head*, %struct.list_head** %next28, align 8, !dbg !5610
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !5610
  store i8* %28, i8** %__mptr26, align 8, !dbg !5610
  br label %do.body29, !dbg !5610

do.body29:                                        ; preds = %for.inc
  br label %do.end30, !dbg !5611

do.end30:                                         ; preds = %do.body29
  %29 = load i8*, i8** %__mptr26, align 8, !dbg !5610
  %add.ptr32 = getelementptr i8, i8* %29, i64 -48, !dbg !5610
  %30 = bitcast i8* %add.ptr32 to %struct.dma_chan*, !dbg !5610
  store %struct.dma_chan* %30, %struct.dma_chan** %tmp31, align 8, !dbg !5611
  %31 = load %struct.dma_chan*, %struct.dma_chan** %tmp31, align 8, !dbg !5610
  store %struct.dma_chan* %31, %struct.dma_chan** %chan, align 8, !dbg !5588
  br label %for.cond13, !dbg !5588, !llvm.loop !5613

for.end:                                          ; preds = %if.then20, %for.cond13
  br label %for.inc33, !dbg !5615

for.inc33:                                        ; preds = %for.end, %if.then
  %32 = load %struct.dma_device*, %struct.dma_device** %_d, align 8, !dbg !5574
  store %struct.dma_device* %32, %struct.dma_device** %device, align 8, !dbg !5574
  call void @llvm.dbg.declare(metadata i8** %__mptr34, metadata !5616, metadata !DIExpression()), !dbg !5618
  %33 = load %struct.dma_device*, %struct.dma_device** %_d, align 8, !dbg !5618
  %global_node35 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %33, i32 0, i32 4, !dbg !5618
  %next36 = getelementptr inbounds %struct.list_head, %struct.list_head* %global_node35, i32 0, i32 0, !dbg !5618
  %34 = load %struct.list_head*, %struct.list_head** %next36, align 8, !dbg !5618
  %35 = bitcast %struct.list_head* %34 to i8*, !dbg !5618
  store i8* %35, i8** %__mptr34, align 8, !dbg !5618
  br label %do.body37, !dbg !5618

do.body37:                                        ; preds = %for.inc33
  br label %do.end38, !dbg !5619

do.end38:                                         ; preds = %do.body37
  %36 = load i8*, i8** %__mptr34, align 8, !dbg !5618
  %add.ptr40 = getelementptr i8, i8* %36, i64 -32, !dbg !5618
  %37 = bitcast i8* %add.ptr40 to %struct.dma_device*, !dbg !5618
  store %struct.dma_device* %37, %struct.dma_device** %tmp39, align 8, !dbg !5619
  %38 = load %struct.dma_device*, %struct.dma_device** %tmp39, align 8, !dbg !5618
  store %struct.dma_device* %38, %struct.dma_device** %_d, align 8, !dbg !5574
  br label %for.cond, !dbg !5574, !llvm.loop !5621

for.end41:                                        ; preds = %for.cond
  %39 = load i64, i64* @dmaengine_ref_count, align 8, !dbg !5623
  %cmp42 = icmp eq i64 %39, 1, !dbg !5625
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !5626

if.then43:                                        ; preds = %for.end41
  call void @dma_channel_rebalance() #9, !dbg !5627
  br label %if.end44, !dbg !5627

if.end44:                                         ; preds = %if.then43, %for.end41
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !5628
  ret void, !dbg !5629
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_rcu(%struct.list_head* %entry1) #1 !dbg !5630 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !5634, metadata !DIExpression()), !dbg !5635
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5636
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !5637
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5638
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !5639
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !5640
  ret void, !dbg !5641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_channel_rebalance() #1 !dbg !5642 {
entry:
  %chan = alloca %struct.dma_chan*, align 8
  %device = alloca %struct.dma_device*, align 8
  %cpu = alloca i32, align 4
  %cap = alloca i32, align 4
  %tmp = alloca %struct.dma_chan_tbl_ent*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp6 = alloca %struct.dma_chan_tbl_ent*, align 8
  %__mptr = alloca i8*, align 8
  %tmp15 = alloca %struct.dma_device*, align 8
  %__mptr21 = alloca i8*, align 8
  %tmp24 = alloca %struct.dma_chan*, align 8
  %__mptr33 = alloca i8*, align 8
  %tmp38 = alloca %struct.dma_chan*, align 8
  %__mptr42 = alloca i8*, align 8
  %tmp47 = alloca %struct.dma_device*, align 8
  %tmp64 = alloca %struct.dma_chan_tbl_ent*, align 8
  %__vpp_verify66 = alloca i8*, align 8
  %tmp68 = alloca %struct.dma_chan_tbl_ent*, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !5643, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device, metadata !5645, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !5647, metadata !DIExpression()), !dbg !5648
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !5649, metadata !DIExpression()), !dbg !5650
  %call = call i64 @find_first_bit(i64* getelementptr inbounds (%struct.dma_cap_mask_t, %struct.dma_cap_mask_t* @dma_cap_mask_all, i32 0, i32 0, i64 0), i64 16) #9, !dbg !5651
  %conv = trunc i64 %call to i32, !dbg !5651
  store i32 %conv, i32* %cap, align 4, !dbg !5651
  br label %for.cond, !dbg !5651

for.cond:                                         ; preds = %for.inc8, %entry
  %0 = load i32, i32* %cap, align 4, !dbg !5653
  %cmp = icmp slt i32 %0, 16, !dbg !5653
  br i1 %cmp, label %for.body, label %for.end12, !dbg !5651

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cpu, align 4, !dbg !5655
  br label %for.cond2, !dbg !5655

for.cond2:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %cpu, align 4, !dbg !5657
  %cmp3 = icmp slt i32 %1, 1, !dbg !5657
  br i1 %cmp3, label %for.body5, label %for.end, !dbg !5655

for.body5:                                        ; preds = %for.cond2
  %2 = load i32, i32* %cpu, align 4, !dbg !5659
  br label %do.body, !dbg !5661

do.body:                                          ; preds = %for.body5
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !5663, metadata !DIExpression()), !dbg !5665
  store i8* null, i8** %__vpp_verify, align 8, !dbg !5665
  %3 = load i8*, i8** %__vpp_verify, align 8, !dbg !5665
  br label %do.end, !dbg !5665

do.end:                                           ; preds = %do.body
  %4 = load i32, i32* %cap, align 4, !dbg !5661
  %idxprom = sext i32 %4 to i64, !dbg !5661
  %arrayidx = getelementptr [16 x %struct.dma_chan_tbl_ent*], [16 x %struct.dma_chan_tbl_ent*]* @channel_table, i64 0, i64 %idxprom, !dbg !5661
  %5 = load %struct.dma_chan_tbl_ent*, %struct.dma_chan_tbl_ent** %arrayidx, align 8, !dbg !5661
  store %struct.dma_chan_tbl_ent* %5, %struct.dma_chan_tbl_ent** %tmp6, align 8, !dbg !5665
  %6 = load %struct.dma_chan_tbl_ent*, %struct.dma_chan_tbl_ent** %tmp6, align 8, !dbg !5661
  store %struct.dma_chan_tbl_ent* %6, %struct.dma_chan_tbl_ent** %tmp, align 8, !dbg !5659
  %7 = load %struct.dma_chan_tbl_ent*, %struct.dma_chan_tbl_ent** %tmp, align 8, !dbg !5659
  %chan7 = getelementptr inbounds %struct.dma_chan_tbl_ent, %struct.dma_chan_tbl_ent* %7, i32 0, i32 0, !dbg !5666
  store %struct.dma_chan* null, %struct.dma_chan** %chan7, align 8, !dbg !5667
  br label %for.inc, !dbg !5668

for.inc:                                          ; preds = %do.end
  %8 = load i32, i32* %cpu, align 4, !dbg !5657
  %inc = add i32 %8, 1, !dbg !5657
  store i32 %inc, i32* %cpu, align 4, !dbg !5657
  br label %for.cond2, !dbg !5657, !llvm.loop !5669

for.end:                                          ; preds = %for.cond2
  br label %for.inc8, !dbg !5670

for.inc8:                                         ; preds = %for.end
  %9 = load i32, i32* %cap, align 4, !dbg !5653
  %add = add i32 %9, 1, !dbg !5653
  %conv9 = sext i32 %add to i64, !dbg !5653
  %call10 = call i64 @find_next_bit(i64* getelementptr inbounds (%struct.dma_cap_mask_t, %struct.dma_cap_mask_t* @dma_cap_mask_all, i32 0, i32 0, i64 0), i64 16, i64 %conv9) #9, !dbg !5653
  %conv11 = trunc i64 %call10 to i32, !dbg !5653
  store i32 %conv11, i32* %cap, align 4, !dbg !5653
  br label %for.cond, !dbg !5653, !llvm.loop !5671

for.end12:                                        ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5673, metadata !DIExpression()), !dbg !5676
  %10 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @dma_device_list, i32 0, i32 0), align 8, !dbg !5676
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !5676
  store i8* %11, i8** %__mptr, align 8, !dbg !5676
  br label %do.body13, !dbg !5676

do.body13:                                        ; preds = %for.end12
  br label %do.end14, !dbg !5677

do.end14:                                         ; preds = %do.body13
  %12 = load i8*, i8** %__mptr, align 8, !dbg !5676
  %add.ptr = getelementptr i8, i8* %12, i64 -32, !dbg !5676
  %13 = bitcast i8* %add.ptr to %struct.dma_device*, !dbg !5676
  store %struct.dma_device* %13, %struct.dma_device** %tmp15, align 8, !dbg !5677
  %14 = load %struct.dma_device*, %struct.dma_device** %tmp15, align 8, !dbg !5676
  store %struct.dma_device* %14, %struct.dma_device** %device, align 8, !dbg !5679
  br label %for.cond16, !dbg !5679

for.cond16:                                       ; preds = %do.end46, %do.end14
  %15 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5680
  %global_node = getelementptr inbounds %struct.dma_device, %struct.dma_device* %15, i32 0, i32 4, !dbg !5680
  %cmp17 = icmp eq %struct.list_head* %global_node, @dma_device_list, !dbg !5680
  %lnot = xor i1 %cmp17, true, !dbg !5680
  br i1 %lnot, label %for.body19, label %for.end49, !dbg !5679

for.body19:                                       ; preds = %for.cond16
  %16 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5682
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %16, i32 0, i32 6, !dbg !5682
  %call20 = call i32 @__dma_has_cap(i32 8, %struct.dma_cap_mask_t* %cap_mask) #9, !dbg !5682
  %tobool = icmp ne i32 %call20, 0, !dbg !5682
  br i1 %tobool, label %if.then, label %if.end, !dbg !5685

if.then:                                          ; preds = %for.body19
  br label %for.inc41, !dbg !5686

if.end:                                           ; preds = %for.body19
  call void @llvm.dbg.declare(metadata i8** %__mptr21, metadata !5687, metadata !DIExpression()), !dbg !5690
  %17 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5690
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %17, i32 0, i32 3, !dbg !5690
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %channels, i32 0, i32 0, !dbg !5690
  %18 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5690
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !5690
  store i8* %19, i8** %__mptr21, align 8, !dbg !5690
  br label %do.body22, !dbg !5690

do.body22:                                        ; preds = %if.end
  br label %do.end23, !dbg !5691

do.end23:                                         ; preds = %do.body22
  %20 = load i8*, i8** %__mptr21, align 8, !dbg !5690
  %add.ptr25 = getelementptr i8, i8* %20, i64 -48, !dbg !5690
  %21 = bitcast i8* %add.ptr25 to %struct.dma_chan*, !dbg !5690
  store %struct.dma_chan* %21, %struct.dma_chan** %tmp24, align 8, !dbg !5691
  %22 = load %struct.dma_chan*, %struct.dma_chan** %tmp24, align 8, !dbg !5690
  store %struct.dma_chan* %22, %struct.dma_chan** %chan, align 8, !dbg !5693
  br label %for.cond26, !dbg !5693

for.cond26:                                       ; preds = %do.end37, %do.end23
  %23 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5694
  %device_node = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %23, i32 0, i32 7, !dbg !5694
  %24 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5694
  %channels27 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %24, i32 0, i32 3, !dbg !5694
  %cmp28 = icmp eq %struct.list_head* %device_node, %channels27, !dbg !5694
  %lnot30 = xor i1 %cmp28, true, !dbg !5694
  br i1 %lnot30, label %for.body31, label %for.end40, !dbg !5693

for.body31:                                       ; preds = %for.cond26
  %25 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5696
  %table_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %25, i32 0, i32 10, !dbg !5697
  store i32 0, i32* %table_count, align 4, !dbg !5698
  br label %for.inc32, !dbg !5696

for.inc32:                                        ; preds = %for.body31
  call void @llvm.dbg.declare(metadata i8** %__mptr33, metadata !5699, metadata !DIExpression()), !dbg !5701
  %26 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5701
  %device_node34 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %26, i32 0, i32 7, !dbg !5701
  %next35 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node34, i32 0, i32 0, !dbg !5701
  %27 = load %struct.list_head*, %struct.list_head** %next35, align 8, !dbg !5701
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !5701
  store i8* %28, i8** %__mptr33, align 8, !dbg !5701
  br label %do.body36, !dbg !5701

do.body36:                                        ; preds = %for.inc32
  br label %do.end37, !dbg !5702

do.end37:                                         ; preds = %do.body36
  %29 = load i8*, i8** %__mptr33, align 8, !dbg !5701
  %add.ptr39 = getelementptr i8, i8* %29, i64 -48, !dbg !5701
  %30 = bitcast i8* %add.ptr39 to %struct.dma_chan*, !dbg !5701
  store %struct.dma_chan* %30, %struct.dma_chan** %tmp38, align 8, !dbg !5702
  %31 = load %struct.dma_chan*, %struct.dma_chan** %tmp38, align 8, !dbg !5701
  store %struct.dma_chan* %31, %struct.dma_chan** %chan, align 8, !dbg !5694
  br label %for.cond26, !dbg !5694, !llvm.loop !5704

for.end40:                                        ; preds = %for.cond26
  br label %for.inc41, !dbg !5706

for.inc41:                                        ; preds = %for.end40, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr42, metadata !5707, metadata !DIExpression()), !dbg !5709
  %32 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5709
  %global_node43 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %32, i32 0, i32 4, !dbg !5709
  %next44 = getelementptr inbounds %struct.list_head, %struct.list_head* %global_node43, i32 0, i32 0, !dbg !5709
  %33 = load %struct.list_head*, %struct.list_head** %next44, align 8, !dbg !5709
  %34 = bitcast %struct.list_head* %33 to i8*, !dbg !5709
  store i8* %34, i8** %__mptr42, align 8, !dbg !5709
  br label %do.body45, !dbg !5709

do.body45:                                        ; preds = %for.inc41
  br label %do.end46, !dbg !5710

do.end46:                                         ; preds = %do.body45
  %35 = load i8*, i8** %__mptr42, align 8, !dbg !5709
  %add.ptr48 = getelementptr i8, i8* %35, i64 -32, !dbg !5709
  %36 = bitcast i8* %add.ptr48 to %struct.dma_device*, !dbg !5709
  store %struct.dma_device* %36, %struct.dma_device** %tmp47, align 8, !dbg !5710
  %37 = load %struct.dma_device*, %struct.dma_device** %tmp47, align 8, !dbg !5709
  store %struct.dma_device* %37, %struct.dma_device** %device, align 8, !dbg !5680
  br label %for.cond16, !dbg !5680, !llvm.loop !5712

for.end49:                                        ; preds = %for.cond16
  %38 = load i64, i64* @dmaengine_ref_count, align 8, !dbg !5714
  %tobool50 = icmp ne i64 %38, 0, !dbg !5714
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !5716

if.then51:                                        ; preds = %for.end49
  br label %for.end80, !dbg !5717

if.end52:                                         ; preds = %for.end49
  %call53 = call i64 @find_first_bit(i64* getelementptr inbounds (%struct.dma_cap_mask_t, %struct.dma_cap_mask_t* @dma_cap_mask_all, i32 0, i32 0, i64 0), i64 16) #9, !dbg !5718
  %conv54 = trunc i64 %call53 to i32, !dbg !5718
  store i32 %conv54, i32* %cap, align 4, !dbg !5718
  br label %for.cond55, !dbg !5718

for.cond55:                                       ; preds = %for.inc75, %if.end52
  %39 = load i32, i32* %cap, align 4, !dbg !5720
  %cmp56 = icmp slt i32 %39, 16, !dbg !5720
  br i1 %cmp56, label %for.body58, label %for.end80, !dbg !5718

for.body58:                                       ; preds = %for.cond55
  store i32 0, i32* %cpu, align 4, !dbg !5722
  br label %for.cond59, !dbg !5722

for.cond59:                                       ; preds = %for.inc72, %for.body58
  %40 = load i32, i32* %cpu, align 4, !dbg !5724
  %cmp60 = icmp slt i32 %40, 1, !dbg !5724
  br i1 %cmp60, label %for.body62, label %for.end74, !dbg !5722

for.body62:                                       ; preds = %for.cond59
  %41 = load i32, i32* %cap, align 4, !dbg !5726
  %42 = load i32, i32* %cpu, align 4, !dbg !5728
  %call63 = call %struct.dma_chan* @min_chan(i32 %41, i32 %42) #9, !dbg !5729
  store %struct.dma_chan* %call63, %struct.dma_chan** %chan, align 8, !dbg !5730
  %43 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5731
  %44 = load i32, i32* %cpu, align 4, !dbg !5732
  br label %do.body65, !dbg !5734

do.body65:                                        ; preds = %for.body62
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify66, metadata !5736, metadata !DIExpression()), !dbg !5738
  store i8* null, i8** %__vpp_verify66, align 8, !dbg !5738
  %45 = load i8*, i8** %__vpp_verify66, align 8, !dbg !5738
  br label %do.end67, !dbg !5738

do.end67:                                         ; preds = %do.body65
  %46 = load i32, i32* %cap, align 4, !dbg !5734
  %idxprom69 = sext i32 %46 to i64, !dbg !5734
  %arrayidx70 = getelementptr [16 x %struct.dma_chan_tbl_ent*], [16 x %struct.dma_chan_tbl_ent*]* @channel_table, i64 0, i64 %idxprom69, !dbg !5734
  %47 = load %struct.dma_chan_tbl_ent*, %struct.dma_chan_tbl_ent** %arrayidx70, align 8, !dbg !5734
  store %struct.dma_chan_tbl_ent* %47, %struct.dma_chan_tbl_ent** %tmp68, align 8, !dbg !5738
  %48 = load %struct.dma_chan_tbl_ent*, %struct.dma_chan_tbl_ent** %tmp68, align 8, !dbg !5734
  store %struct.dma_chan_tbl_ent* %48, %struct.dma_chan_tbl_ent** %tmp64, align 8, !dbg !5732
  %49 = load %struct.dma_chan_tbl_ent*, %struct.dma_chan_tbl_ent** %tmp64, align 8, !dbg !5732
  %chan71 = getelementptr inbounds %struct.dma_chan_tbl_ent, %struct.dma_chan_tbl_ent* %49, i32 0, i32 0, !dbg !5739
  store %struct.dma_chan* %43, %struct.dma_chan** %chan71, align 8, !dbg !5740
  br label %for.inc72, !dbg !5741

for.inc72:                                        ; preds = %do.end67
  %50 = load i32, i32* %cpu, align 4, !dbg !5724
  %inc73 = add i32 %50, 1, !dbg !5724
  store i32 %inc73, i32* %cpu, align 4, !dbg !5724
  br label %for.cond59, !dbg !5724, !llvm.loop !5742

for.end74:                                        ; preds = %for.cond59
  br label %for.inc75, !dbg !5743

for.inc75:                                        ; preds = %for.end74
  %51 = load i32, i32* %cap, align 4, !dbg !5720
  %add76 = add i32 %51, 1, !dbg !5720
  %conv77 = sext i32 %add76 to i64, !dbg !5720
  %call78 = call i64 @find_next_bit(i64* getelementptr inbounds (%struct.dma_cap_mask_t, %struct.dma_cap_mask_t* @dma_cap_mask_all, i32 0, i32 0, i64 0), i64 16, i64 %conv77) #9, !dbg !5720
  %conv79 = trunc i64 %call78 to i32, !dbg !5720
  store i32 %conv79, i32* %cap, align 4, !dbg !5720
  br label %for.cond55, !dbg !5720, !llvm.loop !5744

for.end80:                                        ; preds = %if.then51, %for.cond55
  ret void, !dbg !5746
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dmaengine_put() #1 !dbg !5747 {
entry:
  %device = alloca %struct.dma_device*, align 8
  %_d = alloca %struct.dma_device*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dma_device*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp15 = alloca %struct.dma_device*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp29 = alloca %struct.dma_chan*, align 8
  %__mptr38 = alloca i8*, align 8
  %tmp43 = alloca %struct.dma_chan*, align 8
  %__mptr46 = alloca i8*, align 8
  %tmp51 = alloca %struct.dma_device*, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device, metadata !5748, metadata !DIExpression()), !dbg !5749
  call void @llvm.dbg.declare(metadata %struct.dma_device** %_d, metadata !5750, metadata !DIExpression()), !dbg !5751
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !5752, metadata !DIExpression()), !dbg !5753
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !5754
  %0 = load i64, i64* @dmaengine_ref_count, align 8, !dbg !5755
  %dec = add i64 %0, -1, !dbg !5755
  store i64 %dec, i64* @dmaengine_ref_count, align 8, !dbg !5755
  br label %do.body, !dbg !5756

do.body:                                          ; preds = %entry
  %1 = load i64, i64* @dmaengine_ref_count, align 8, !dbg !5757
  %cmp = icmp slt i64 %1, 0, !dbg !5757
  %lnot = xor i1 %cmp, true, !dbg !5757
  %lnot1 = xor i1 %lnot, true, !dbg !5757
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5757
  %conv = sext i32 %lnot.ext to i64, !dbg !5757
  %tobool = icmp ne i64 %conv, 0, !dbg !5757
  br i1 %tobool, label %if.then, label %if.end, !dbg !5760

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !5757

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !5761

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !5763

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !5761

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 978, i32 0, i64 12) #11, !dbg !5765, !srcloc !5767
  br label %do.end5, !dbg !5765

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !5761

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 276) #11, !dbg !5768, !srcloc !5771
  unreachable, !dbg !5772

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !5761

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !5761

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !5760

do.end9:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5773, metadata !DIExpression()), !dbg !5776
  %2 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @dma_device_list, i32 0, i32 0), align 8, !dbg !5776
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !5776
  store i8* %3, i8** %__mptr, align 8, !dbg !5776
  br label %do.body10, !dbg !5776

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !5777

do.end11:                                         ; preds = %do.body10
  %4 = load i8*, i8** %__mptr, align 8, !dbg !5776
  %add.ptr = getelementptr i8, i8* %4, i64 -32, !dbg !5776
  %5 = bitcast i8* %add.ptr to %struct.dma_device*, !dbg !5776
  store %struct.dma_device* %5, %struct.dma_device** %tmp, align 8, !dbg !5777
  %6 = load %struct.dma_device*, %struct.dma_device** %tmp, align 8, !dbg !5776
  store %struct.dma_device* %6, %struct.dma_device** %device, align 8, !dbg !5779
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !5780, metadata !DIExpression()), !dbg !5782
  %7 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5782
  %global_node = getelementptr inbounds %struct.dma_device, %struct.dma_device* %7, i32 0, i32 4, !dbg !5782
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %global_node, i32 0, i32 0, !dbg !5782
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5782
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !5782
  store i8* %9, i8** %__mptr12, align 8, !dbg !5782
  br label %do.body13, !dbg !5782

do.body13:                                        ; preds = %do.end11
  br label %do.end14, !dbg !5783

do.end14:                                         ; preds = %do.body13
  %10 = load i8*, i8** %__mptr12, align 8, !dbg !5782
  %add.ptr16 = getelementptr i8, i8* %10, i64 -32, !dbg !5782
  %11 = bitcast i8* %add.ptr16 to %struct.dma_device*, !dbg !5782
  store %struct.dma_device* %11, %struct.dma_device** %tmp15, align 8, !dbg !5783
  %12 = load %struct.dma_device*, %struct.dma_device** %tmp15, align 8, !dbg !5782
  store %struct.dma_device* %12, %struct.dma_device** %_d, align 8, !dbg !5779
  br label %for.cond, !dbg !5779

for.cond:                                         ; preds = %do.end50, %do.end14
  %13 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5785
  %global_node17 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %13, i32 0, i32 4, !dbg !5785
  %cmp18 = icmp eq %struct.list_head* %global_node17, @dma_device_list, !dbg !5785
  %lnot20 = xor i1 %cmp18, true, !dbg !5785
  br i1 %lnot20, label %for.body, label %for.end53, !dbg !5779

for.body:                                         ; preds = %for.cond
  %14 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5787
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %14, i32 0, i32 6, !dbg !5787
  %call = call i32 @__dma_has_cap(i32 8, %struct.dma_cap_mask_t* %cap_mask) #9, !dbg !5787
  %tobool22 = icmp ne i32 %call, 0, !dbg !5787
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5790

if.then23:                                        ; preds = %for.body
  br label %for.inc45, !dbg !5791

if.end24:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !5792, metadata !DIExpression()), !dbg !5795
  %15 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5795
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %15, i32 0, i32 3, !dbg !5795
  %next26 = getelementptr inbounds %struct.list_head, %struct.list_head* %channels, i32 0, i32 0, !dbg !5795
  %16 = load %struct.list_head*, %struct.list_head** %next26, align 8, !dbg !5795
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !5795
  store i8* %17, i8** %__mptr25, align 8, !dbg !5795
  br label %do.body27, !dbg !5795

do.body27:                                        ; preds = %if.end24
  br label %do.end28, !dbg !5796

do.end28:                                         ; preds = %do.body27
  %18 = load i8*, i8** %__mptr25, align 8, !dbg !5795
  %add.ptr30 = getelementptr i8, i8* %18, i64 -48, !dbg !5795
  %19 = bitcast i8* %add.ptr30 to %struct.dma_chan*, !dbg !5795
  store %struct.dma_chan* %19, %struct.dma_chan** %tmp29, align 8, !dbg !5796
  %20 = load %struct.dma_chan*, %struct.dma_chan** %tmp29, align 8, !dbg !5795
  store %struct.dma_chan* %20, %struct.dma_chan** %chan, align 8, !dbg !5798
  br label %for.cond31, !dbg !5798

for.cond31:                                       ; preds = %do.end42, %do.end28
  %21 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5799
  %device_node = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %21, i32 0, i32 7, !dbg !5799
  %22 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5799
  %channels32 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %22, i32 0, i32 3, !dbg !5799
  %cmp33 = icmp eq %struct.list_head* %device_node, %channels32, !dbg !5799
  %lnot35 = xor i1 %cmp33, true, !dbg !5799
  br i1 %lnot35, label %for.body37, label %for.end, !dbg !5798

for.body37:                                       ; preds = %for.cond31
  %23 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5801
  call void @dma_chan_put(%struct.dma_chan* %23) #9, !dbg !5802
  br label %for.inc, !dbg !5802

for.inc:                                          ; preds = %for.body37
  call void @llvm.dbg.declare(metadata i8** %__mptr38, metadata !5803, metadata !DIExpression()), !dbg !5805
  %24 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !5805
  %device_node39 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %24, i32 0, i32 7, !dbg !5805
  %next40 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node39, i32 0, i32 0, !dbg !5805
  %25 = load %struct.list_head*, %struct.list_head** %next40, align 8, !dbg !5805
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !5805
  store i8* %26, i8** %__mptr38, align 8, !dbg !5805
  br label %do.body41, !dbg !5805

do.body41:                                        ; preds = %for.inc
  br label %do.end42, !dbg !5806

do.end42:                                         ; preds = %do.body41
  %27 = load i8*, i8** %__mptr38, align 8, !dbg !5805
  %add.ptr44 = getelementptr i8, i8* %27, i64 -48, !dbg !5805
  %28 = bitcast i8* %add.ptr44 to %struct.dma_chan*, !dbg !5805
  store %struct.dma_chan* %28, %struct.dma_chan** %tmp43, align 8, !dbg !5806
  %29 = load %struct.dma_chan*, %struct.dma_chan** %tmp43, align 8, !dbg !5805
  store %struct.dma_chan* %29, %struct.dma_chan** %chan, align 8, !dbg !5799
  br label %for.cond31, !dbg !5799, !llvm.loop !5808

for.end:                                          ; preds = %for.cond31
  br label %for.inc45, !dbg !5810

for.inc45:                                        ; preds = %for.end, %if.then23
  %30 = load %struct.dma_device*, %struct.dma_device** %_d, align 8, !dbg !5785
  store %struct.dma_device* %30, %struct.dma_device** %device, align 8, !dbg !5785
  call void @llvm.dbg.declare(metadata i8** %__mptr46, metadata !5811, metadata !DIExpression()), !dbg !5813
  %31 = load %struct.dma_device*, %struct.dma_device** %_d, align 8, !dbg !5813
  %global_node47 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %31, i32 0, i32 4, !dbg !5813
  %next48 = getelementptr inbounds %struct.list_head, %struct.list_head* %global_node47, i32 0, i32 0, !dbg !5813
  %32 = load %struct.list_head*, %struct.list_head** %next48, align 8, !dbg !5813
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !5813
  store i8* %33, i8** %__mptr46, align 8, !dbg !5813
  br label %do.body49, !dbg !5813

do.body49:                                        ; preds = %for.inc45
  br label %do.end50, !dbg !5814

do.end50:                                         ; preds = %do.body49
  %34 = load i8*, i8** %__mptr46, align 8, !dbg !5813
  %add.ptr52 = getelementptr i8, i8* %34, i64 -32, !dbg !5813
  %35 = bitcast i8* %add.ptr52 to %struct.dma_device*, !dbg !5813
  store %struct.dma_device* %35, %struct.dma_device** %tmp51, align 8, !dbg !5814
  %36 = load %struct.dma_device*, %struct.dma_device** %tmp51, align 8, !dbg !5813
  store %struct.dma_device* %36, %struct.dma_device** %_d, align 8, !dbg !5785
  br label %for.cond, !dbg !5785, !llvm.loop !5816

for.end53:                                        ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !5818
  ret void, !dbg !5819
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dma_async_device_channel_register(%struct.dma_device* %device, %struct.dma_chan* %chan) #1 !dbg !5820 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.dma_device*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  %rc = alloca i32, align 4
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !5823, metadata !DIExpression()), !dbg !5824
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !5825, metadata !DIExpression()), !dbg !5826
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5827, metadata !DIExpression()), !dbg !5828
  %0 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5829
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5830
  %call = call i32 @__dma_async_device_channel_register(%struct.dma_device* %0, %struct.dma_chan* %1) #9, !dbg !5831
  store i32 %call, i32* %rc, align 4, !dbg !5832
  %2 = load i32, i32* %rc, align 4, !dbg !5833
  %cmp = icmp slt i32 %2, 0, !dbg !5835
  br i1 %cmp, label %if.then, label %if.end, !dbg !5836

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %rc, align 4, !dbg !5837
  store i32 %3, i32* %retval, align 4, !dbg !5838
  br label %return, !dbg !5838

if.end:                                           ; preds = %entry
  call void @dma_channel_rebalance() #9, !dbg !5839
  store i32 0, i32* %retval, align 4, !dbg !5840
  br label %return, !dbg !5840

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !5841
  ret i32 %4, !dbg !5841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__dma_async_device_channel_register(%struct.dma_device* %device, %struct.dma_chan* %chan) #1 !dbg !5842 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.dma_device*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  %rc = alloca i32, align 4
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !5843, metadata !DIExpression()), !dbg !5844
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !5845, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5847, metadata !DIExpression()), !dbg !5848
  %call = call i8* @__alloc_percpu(i64 16, i64 8) #9, !dbg !5849
  %0 = bitcast i8* %call to %struct.dma_chan_percpu*, !dbg !5849
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5850
  %local = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %1, i32 0, i32 8, !dbg !5851
  store %struct.dma_chan_percpu* %0, %struct.dma_chan_percpu** %local, align 8, !dbg !5852
  %2 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5853
  %local1 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %2, i32 0, i32 8, !dbg !5855
  %3 = load %struct.dma_chan_percpu*, %struct.dma_chan_percpu** %local1, align 8, !dbg !5855
  %tobool = icmp ne %struct.dma_chan_percpu* %3, null, !dbg !5853
  br i1 %tobool, label %if.end, label %if.then, !dbg !5856

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5857
  br label %return, !dbg !5857

if.end:                                           ; preds = %entry
  %call2 = call i8* @kzalloc(i64 712, i32 3264) #9, !dbg !5858
  %4 = bitcast i8* %call2 to %struct.dma_chan_dev*, !dbg !5858
  %5 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5859
  %dev = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %5, i32 0, i32 5, !dbg !5860
  store %struct.dma_chan_dev* %4, %struct.dma_chan_dev** %dev, align 8, !dbg !5861
  %6 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5862
  %dev3 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %6, i32 0, i32 5, !dbg !5864
  %7 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev3, align 8, !dbg !5864
  %tobool4 = icmp ne %struct.dma_chan_dev* %7, null, !dbg !5862
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !5865

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %rc, align 4, !dbg !5866
  br label %err_free_local, !dbg !5868

if.end6:                                          ; preds = %if.end
  %8 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5869
  %chan_mutex = getelementptr inbounds %struct.dma_device, %struct.dma_device* %8, i32 0, i32 18, !dbg !5870
  call void @mutex_lock(%struct.mutex* %chan_mutex) #9, !dbg !5871
  %9 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5872
  %chan_ida = getelementptr inbounds %struct.dma_device, %struct.dma_device* %9, i32 0, i32 17, !dbg !5873
  %call7 = call i32 @ida_alloc(%struct.ida* %chan_ida, i32 3264) #9, !dbg !5874
  %10 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5875
  %chan_id = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %10, i32 0, i32 4, !dbg !5876
  store i32 %call7, i32* %chan_id, align 8, !dbg !5877
  %11 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5878
  %chan_mutex8 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %11, i32 0, i32 18, !dbg !5879
  call void @mutex_unlock(%struct.mutex* %chan_mutex8) #9, !dbg !5880
  %12 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5881
  %chan_id9 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %12, i32 0, i32 4, !dbg !5883
  %13 = load i32, i32* %chan_id9, align 8, !dbg !5883
  %cmp = icmp slt i32 %13, 0, !dbg !5884
  br i1 %cmp, label %if.then10, label %if.end14, !dbg !5885

if.then10:                                        ; preds = %if.end6
  %14 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5886
  %chan_id11 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %14, i32 0, i32 4, !dbg !5886
  %15 = load i32, i32* %chan_id11, align 8, !dbg !5886
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__func__.__dma_async_device_channel_register, i64 0, i64 0), i32 %15) #10, !dbg !5886
  %16 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5888
  %chan_id13 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %16, i32 0, i32 4, !dbg !5889
  %17 = load i32, i32* %chan_id13, align 8, !dbg !5889
  store i32 %17, i32* %rc, align 4, !dbg !5890
  br label %err_free_dev, !dbg !5891

if.end14:                                         ; preds = %if.end6
  %18 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5892
  %dev15 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %18, i32 0, i32 5, !dbg !5893
  %19 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev15, align 8, !dbg !5893
  %device16 = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %19, i32 0, i32 1, !dbg !5894
  %class = getelementptr inbounds %struct.device, %struct.device* %device16, i32 0, i32 29, !dbg !5895
  store %struct.class* @dma_devclass, %struct.class** %class, align 8, !dbg !5896
  %20 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5897
  %dev17 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %20, i32 0, i32 15, !dbg !5898
  %21 = load %struct.device*, %struct.device** %dev17, align 8, !dbg !5898
  %22 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5899
  %dev18 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %22, i32 0, i32 5, !dbg !5900
  %23 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev18, align 8, !dbg !5900
  %device19 = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %23, i32 0, i32 1, !dbg !5901
  %parent = getelementptr inbounds %struct.device, %struct.device* %device19, i32 0, i32 1, !dbg !5902
  store %struct.device* %21, %struct.device** %parent, align 8, !dbg !5903
  %24 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5904
  %25 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5905
  %dev20 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %25, i32 0, i32 5, !dbg !5906
  %26 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev20, align 8, !dbg !5906
  %chan21 = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %26, i32 0, i32 0, !dbg !5907
  store %struct.dma_chan* %24, %struct.dma_chan** %chan21, align 8, !dbg !5908
  %27 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5909
  %dev_id = getelementptr inbounds %struct.dma_device, %struct.dma_device* %27, i32 0, i32 14, !dbg !5910
  %28 = load i32, i32* %dev_id, align 8, !dbg !5910
  %29 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5911
  %dev22 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %29, i32 0, i32 5, !dbg !5912
  %30 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev22, align 8, !dbg !5912
  %dev_id23 = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %30, i32 0, i32 2, !dbg !5913
  store i32 %28, i32* %dev_id23, align 8, !dbg !5914
  %31 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5915
  %dev24 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %31, i32 0, i32 5, !dbg !5916
  %32 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev24, align 8, !dbg !5916
  %device25 = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %32, i32 0, i32 1, !dbg !5917
  %33 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5918
  %dev_id26 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %33, i32 0, i32 14, !dbg !5919
  %34 = load i32, i32* %dev_id26, align 8, !dbg !5919
  %35 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5920
  %chan_id27 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %35, i32 0, i32 4, !dbg !5921
  %36 = load i32, i32* %chan_id27, align 8, !dbg !5921
  %call28 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %device25, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i32 %34, i32 %36) #9, !dbg !5922
  %37 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5923
  %dev29 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %37, i32 0, i32 5, !dbg !5924
  %38 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev29, align 8, !dbg !5924
  %device30 = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %38, i32 0, i32 1, !dbg !5925
  %call31 = call i32 @device_register(%struct.device* %device30) #9, !dbg !5926
  store i32 %call31, i32* %rc, align 4, !dbg !5927
  %39 = load i32, i32* %rc, align 4, !dbg !5928
  %tobool32 = icmp ne i32 %39, 0, !dbg !5928
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !5930

if.then33:                                        ; preds = %if.end14
  br label %err_out_ida, !dbg !5931

if.end34:                                         ; preds = %if.end14
  %40 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5932
  %client_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %40, i32 0, i32 9, !dbg !5933
  store i32 0, i32* %client_count, align 8, !dbg !5934
  %41 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5935
  %chancnt = getelementptr inbounds %struct.dma_device, %struct.dma_device* %41, i32 0, i32 1, !dbg !5936
  %42 = load i32, i32* %chancnt, align 4, !dbg !5937
  %inc = add i32 %42, 1, !dbg !5937
  store i32 %inc, i32* %chancnt, align 4, !dbg !5937
  store i32 0, i32* %retval, align 4, !dbg !5938
  br label %return, !dbg !5938

err_out_ida:                                      ; preds = %if.then33
  call void @llvm.dbg.label(metadata !5939), !dbg !5940
  %43 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5941
  %chan_mutex35 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %43, i32 0, i32 18, !dbg !5942
  call void @mutex_lock(%struct.mutex* %chan_mutex35) #9, !dbg !5943
  %44 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5944
  %chan_ida36 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %44, i32 0, i32 17, !dbg !5945
  %45 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5946
  %chan_id37 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %45, i32 0, i32 4, !dbg !5947
  %46 = load i32, i32* %chan_id37, align 8, !dbg !5947
  call void @ida_free(%struct.ida* %chan_ida36, i32 %46) #9, !dbg !5948
  %47 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5949
  %chan_mutex38 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %47, i32 0, i32 18, !dbg !5950
  call void @mutex_unlock(%struct.mutex* %chan_mutex38) #9, !dbg !5951
  br label %err_free_dev, !dbg !5951

err_free_dev:                                     ; preds = %err_out_ida, %if.then10
  call void @llvm.dbg.label(metadata !5952), !dbg !5953
  %48 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5954
  %dev39 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %48, i32 0, i32 5, !dbg !5955
  %49 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev39, align 8, !dbg !5955
  %50 = bitcast %struct.dma_chan_dev* %49 to i8*, !dbg !5954
  call void @kfree(i8* %50) #9, !dbg !5956
  br label %err_free_local, !dbg !5956

err_free_local:                                   ; preds = %err_free_dev, %if.then5
  call void @llvm.dbg.label(metadata !5957), !dbg !5958
  %51 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5959
  %local40 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %51, i32 0, i32 8, !dbg !5960
  %52 = load %struct.dma_chan_percpu*, %struct.dma_chan_percpu** %local40, align 8, !dbg !5960
  %53 = bitcast %struct.dma_chan_percpu* %52 to i8*, !dbg !5959
  call void @free_percpu(i8* %53) #9, !dbg !5961
  %54 = load i32, i32* %rc, align 4, !dbg !5962
  store i32 %54, i32* %retval, align 4, !dbg !5963
  br label %return, !dbg !5963

return:                                           ; preds = %err_free_local, %if.end34, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !5964
  ret i32 %55, !dbg !5964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dma_async_device_channel_unregister(%struct.dma_device* %device, %struct.dma_chan* %chan) #1 !dbg !5965 {
entry:
  %device.addr = alloca %struct.dma_device*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !5966, metadata !DIExpression()), !dbg !5967
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !5968, metadata !DIExpression()), !dbg !5969
  %0 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5970
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5971
  call void @__dma_async_device_channel_unregister(%struct.dma_device* %0, %struct.dma_chan* %1) #9, !dbg !5972
  call void @dma_channel_rebalance() #9, !dbg !5973
  ret void, !dbg !5974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dma_async_device_channel_unregister(%struct.dma_device* %device, %struct.dma_chan* %chan) #1 !dbg !4349 {
entry:
  %device.addr = alloca %struct.dma_device*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp42 = alloca i64, align 8
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !5975, metadata !DIExpression()), !dbg !5976
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !5977, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !5979, metadata !DIExpression()), !dbg !5981
  %0 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !5981
  %device_release = getelementptr inbounds %struct.dma_device, %struct.dma_device* %0, i32 0, i32 49, !dbg !5981
  %1 = load void (%struct.dma_device*)*, void (%struct.dma_device*)** %device_release, align 8, !dbg !5981
  %tobool = icmp ne void (%struct.dma_device*)* %1, null, !dbg !5981
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5981

land.rhs:                                         ; preds = %entry
  %2 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5981
  %client_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %2, i32 0, i32 9, !dbg !5981
  %3 = load i32, i32* %client_count, align 8, !dbg !5981
  %tobool1 = icmp ne i32 %3, 0, !dbg !5981
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !5982
  %lnot = xor i1 %4, true, !dbg !5981
  %lnot2 = xor i1 %lnot, true, !dbg !5981
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5981
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !5981
  %5 = load i32, i32* %__ret_warn_once, align 4, !dbg !5983
  %tobool3 = icmp ne i32 %5, 0, !dbg !5983
  br i1 %tobool3, label %land.rhs4, label %land.end8, !dbg !5983

land.rhs4:                                        ; preds = %land.end
  %6 = load i8, i8* @__dma_async_device_channel_unregister.__warned, align 1, !dbg !5983
  %tobool5 = trunc i8 %6 to i1, !dbg !5983
  %lnot6 = xor i1 %tobool5, true, !dbg !5983
  br label %land.end8

land.end8:                                        ; preds = %land.rhs4, %land.end
  %7 = phi i1 [ false, %land.end ], [ %lnot6, %land.rhs4 ], !dbg !5985
  %lnot9 = xor i1 %7, true, !dbg !5983
  %lnot11 = xor i1 %lnot9, true, !dbg !5983
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !5983
  %conv = sext i32 %lnot.ext12 to i64, !dbg !5983
  %tobool13 = icmp ne i64 %conv, 0, !dbg !5983
  br i1 %tobool13, label %if.then, label %if.end41, !dbg !5981

if.then:                                          ; preds = %land.end8
  store i8 1, i8* @__dma_async_device_channel_unregister.__warned, align 1, !dbg !5986
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5988, metadata !DIExpression()), !dbg !5990
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !5990
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !5991
  %tobool14 = icmp ne i32 %8, 0, !dbg !5991
  %lnot15 = xor i1 %tobool14, true, !dbg !5991
  %lnot17 = xor i1 %lnot15, true, !dbg !5991
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !5991
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !5991
  %tobool20 = icmp ne i64 %conv19, 0, !dbg !5991
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !5990

if.then21:                                        ; preds = %if.then
  br label %do.body, !dbg !5991

do.body:                                          ; preds = %if.then21
  br label %do.body22, !dbg !5993

do.body22:                                        ; preds = %do.body
  br label %do.end, !dbg !5995

do.end:                                           ; preds = %do.body22
  %9 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5993
  %client_count23 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %9, i32 0, i32 9, !dbg !5993
  %10 = load i32, i32* %client_count23, align 8, !dbg !5993
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__func__.__dma_async_device_channel_unregister, i64 0, i64 0), i32 %10) #9, !dbg !5993
  br label %do.body24, !dbg !5993

do.body24:                                        ; preds = %do.end
  br label %do.body25, !dbg !5997

do.body25:                                        ; preds = %do.body24
  br label %do.end26, !dbg !5999

do.end26:                                         ; preds = %do.body25
  br label %do.body27, !dbg !5997

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 1111, i32 2313, i64 12) #11, !dbg !6001, !srcloc !6003
  br label %do.end28, !dbg !6001

do.end28:                                         ; preds = %do.body27
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 282) #11, !dbg !6004, !srcloc !6006
  br label %do.body29, !dbg !5997

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !6007

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !5997

do.end31:                                         ; preds = %do.end30
  br label %do.body32, !dbg !5993

do.body32:                                        ; preds = %do.end31
  br label %do.end33, !dbg !6009

do.end33:                                         ; preds = %do.body32
  br label %do.end34, !dbg !5993

do.end34:                                         ; preds = %do.end33
  br label %if.end, !dbg !5993

if.end:                                           ; preds = %do.end34, %if.then
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !5990
  %tobool35 = icmp ne i32 %11, 0, !dbg !5990
  %lnot36 = xor i1 %tobool35, true, !dbg !5990
  %lnot38 = xor i1 %lnot36, true, !dbg !5990
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !5990
  %conv40 = sext i32 %lnot.ext39 to i64, !dbg !5990
  store i64 %conv40, i64* %tmp, align 8, !dbg !5991
  %12 = load i64, i64* %tmp, align 8, !dbg !5990
  br label %if.end41, !dbg !5986

if.end41:                                         ; preds = %if.end, %land.end8
  %13 = load i32, i32* %__ret_warn_once, align 4, !dbg !5981
  %tobool43 = icmp ne i32 %13, 0, !dbg !5981
  %lnot44 = xor i1 %tobool43, true, !dbg !5981
  %lnot46 = xor i1 %lnot44, true, !dbg !5981
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !5981
  %conv48 = sext i32 %lnot.ext47 to i64, !dbg !5981
  store i64 %conv48, i64* %tmp42, align 8, !dbg !5983
  %14 = load i64, i64* %tmp42, align 8, !dbg !5981
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !6011
  %15 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6012
  %device_node = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %15, i32 0, i32 7, !dbg !6013
  call void @list_del(%struct.list_head* %device_node) #9, !dbg !6014
  %16 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6015
  %chancnt = getelementptr inbounds %struct.dma_device, %struct.dma_device* %16, i32 0, i32 1, !dbg !6016
  %17 = load i32, i32* %chancnt, align 4, !dbg !6017
  %dec = add i32 %17, -1, !dbg !6017
  store i32 %dec, i32* %chancnt, align 4, !dbg !6017
  %18 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6018
  %dev = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %18, i32 0, i32 5, !dbg !6019
  %19 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev, align 8, !dbg !6019
  %chan49 = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %19, i32 0, i32 0, !dbg !6020
  store %struct.dma_chan* null, %struct.dma_chan** %chan49, align 8, !dbg !6021
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !6022
  %20 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6023
  %chan_mutex = getelementptr inbounds %struct.dma_device, %struct.dma_device* %20, i32 0, i32 18, !dbg !6024
  call void @mutex_lock(%struct.mutex* %chan_mutex) #9, !dbg !6025
  %21 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6026
  %chan_ida = getelementptr inbounds %struct.dma_device, %struct.dma_device* %21, i32 0, i32 17, !dbg !6027
  %22 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6028
  %chan_id = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %22, i32 0, i32 4, !dbg !6029
  %23 = load i32, i32* %chan_id, align 8, !dbg !6029
  call void @ida_free(%struct.ida* %chan_ida, i32 %23) #9, !dbg !6030
  %24 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6031
  %chan_mutex50 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %24, i32 0, i32 18, !dbg !6032
  call void @mutex_unlock(%struct.mutex* %chan_mutex50) #9, !dbg !6033
  %25 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6034
  %dev51 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %25, i32 0, i32 5, !dbg !6035
  %26 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev51, align 8, !dbg !6035
  %device52 = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %26, i32 0, i32 1, !dbg !6036
  call void @device_unregister(%struct.device* %device52) #9, !dbg !6037
  %27 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6038
  %local = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %27, i32 0, i32 8, !dbg !6039
  %28 = load %struct.dma_chan_percpu*, %struct.dma_chan_percpu** %local, align 8, !dbg !6039
  %29 = bitcast %struct.dma_chan_percpu* %28 to i8*, !dbg !6038
  call void @free_percpu(i8* %29) #9, !dbg !6040
  ret void, !dbg !6041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dma_async_device_register(%struct.dma_device* %device) #1 !dbg !4303 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.dma_device*, align 8
  %rc = alloca i32, align 4
  %chan = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dma_chan*, align 8
  %__mptr102 = alloca i8*, align 8
  %tmp107 = alloca %struct.dma_chan*, align 8
  %__mptr115 = alloca i8*, align 8
  %tmp120 = alloca %struct.dma_chan*, align 8
  %__mptr133 = alloca i8*, align 8
  %tmp138 = alloca %struct.dma_chan*, align 8
  %__mptr151 = alloca i8*, align 8
  %tmp156 = alloca %struct.dma_chan*, align 8
  %__mptr173 = alloca i8*, align 8
  %tmp178 = alloca %struct.dma_chan*, align 8
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !6042, metadata !DIExpression()), !dbg !6043
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6044, metadata !DIExpression()), !dbg !6045
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !6046, metadata !DIExpression()), !dbg !6047
  %0 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6048
  %tobool = icmp ne %struct.dma_device* %0, null, !dbg !6048
  br i1 %tobool, label %if.end, label %if.then, !dbg !6050

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !6051
  br label %return, !dbg !6051

if.end:                                           ; preds = %entry
  %1 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6052
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 15, !dbg !6054
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6054
  %tobool1 = icmp ne %struct.device* %2, null, !dbg !6052
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6055

if.then2:                                         ; preds = %if.end
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !6056
  store i32 -5, i32* %retval, align 4, !dbg !6058
  br label %return, !dbg !6058

if.end3:                                          ; preds = %if.end
  %3 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6059
  %dev4 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %3, i32 0, i32 15, !dbg !6060
  %4 = load %struct.device*, %struct.device** %dev4, align 8, !dbg !6060
  %driver = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 6, !dbg !6061
  %5 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !6061
  %owner = getelementptr inbounds %struct.device_driver, %struct.device_driver* %5, i32 0, i32 2, !dbg !6062
  %6 = load %struct.module*, %struct.module** %owner, align 8, !dbg !6062
  %7 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6063
  %owner5 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %7, i32 0, i32 16, !dbg !6064
  store %struct.module* %6, %struct.module** %owner5, align 8, !dbg !6065
  %8 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6066
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %8, i32 0, i32 6, !dbg !6066
  %call6 = call i32 @__dma_has_cap(i32 0, %struct.dma_cap_mask_t* %cap_mask) #9, !dbg !6066
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6066
  br i1 %tobool7, label %land.lhs.true, label %if.end11, !dbg !6068

land.lhs.true:                                    ; preds = %if.end3
  %9 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6069
  %device_prep_dma_memcpy = getelementptr inbounds %struct.dma_device, %struct.dma_device* %9, i32 0, i32 29, !dbg !6070
  %10 = load %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)** %device_prep_dma_memcpy, align 8, !dbg !6070
  %tobool8 = icmp ne %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)* %10, null, !dbg !6069
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !6071

if.then9:                                         ; preds = %land.lhs.true
  %11 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6072
  %dev10 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %11, i32 0, i32 15, !dbg !6072
  %12 = load %struct.device*, %struct.device** %dev10, align 8, !dbg !6072
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %12, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !6072
  store i32 -5, i32* %retval, align 4, !dbg !6074
  br label %return, !dbg !6074

if.end11:                                         ; preds = %land.lhs.true, %if.end3
  %13 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6075
  %cap_mask12 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %13, i32 0, i32 6, !dbg !6075
  %call13 = call i32 @__dma_has_cap(i32 1, %struct.dma_cap_mask_t* %cap_mask12) #9, !dbg !6075
  %tobool14 = icmp ne i32 %call13, 0, !dbg !6075
  br i1 %tobool14, label %land.lhs.true15, label %if.end19, !dbg !6077

land.lhs.true15:                                  ; preds = %if.end11
  %14 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6078
  %device_prep_dma_xor = getelementptr inbounds %struct.dma_device, %struct.dma_device* %14, i32 0, i32 30, !dbg !6079
  %15 = load %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64*, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64*, i32, i64, i64)** %device_prep_dma_xor, align 8, !dbg !6079
  %tobool16 = icmp ne %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64*, i32, i64, i64)* %15, null, !dbg !6078
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !6080

if.then17:                                        ; preds = %land.lhs.true15
  %16 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6081
  %dev18 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %16, i32 0, i32 15, !dbg !6081
  %17 = load %struct.device*, %struct.device** %dev18, align 8, !dbg !6081
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %17, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !6081
  store i32 -5, i32* %retval, align 4, !dbg !6083
  br label %return, !dbg !6083

if.end19:                                         ; preds = %land.lhs.true15, %if.end11
  %18 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6084
  %cap_mask20 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %18, i32 0, i32 6, !dbg !6084
  %call21 = call i32 @__dma_has_cap(i32 3, %struct.dma_cap_mask_t* %cap_mask20) #9, !dbg !6084
  %tobool22 = icmp ne i32 %call21, 0, !dbg !6084
  br i1 %tobool22, label %land.lhs.true23, label %if.end27, !dbg !6086

land.lhs.true23:                                  ; preds = %if.end19
  %19 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6087
  %device_prep_dma_xor_val = getelementptr inbounds %struct.dma_device, %struct.dma_device* %19, i32 0, i32 31, !dbg !6088
  %20 = load %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i32, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i32, i64, i32*, i64)** %device_prep_dma_xor_val, align 8, !dbg !6088
  %tobool24 = icmp ne %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i32, i64, i32*, i64)* %20, null, !dbg !6087
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !6089

if.then25:                                        ; preds = %land.lhs.true23
  %21 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6090
  %dev26 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %21, i32 0, i32 15, !dbg !6090
  %22 = load %struct.device*, %struct.device** %dev26, align 8, !dbg !6090
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %22, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !6090
  store i32 -5, i32* %retval, align 4, !dbg !6092
  br label %return, !dbg !6092

if.end27:                                         ; preds = %land.lhs.true23, %if.end19
  %23 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6093
  %cap_mask28 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %23, i32 0, i32 6, !dbg !6093
  %call29 = call i32 @__dma_has_cap(i32 2, %struct.dma_cap_mask_t* %cap_mask28) #9, !dbg !6093
  %tobool30 = icmp ne i32 %call29, 0, !dbg !6093
  br i1 %tobool30, label %land.lhs.true31, label %if.end35, !dbg !6095

land.lhs.true31:                                  ; preds = %if.end27
  %24 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6096
  %device_prep_dma_pq = getelementptr inbounds %struct.dma_device, %struct.dma_device* %24, i32 0, i32 32, !dbg !6097
  %25 = load %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i64)** %device_prep_dma_pq, align 8, !dbg !6097
  %tobool32 = icmp ne %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i64)* %25, null, !dbg !6096
  br i1 %tobool32, label %if.end35, label %if.then33, !dbg !6098

if.then33:                                        ; preds = %land.lhs.true31
  %26 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6099
  %dev34 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %26, i32 0, i32 15, !dbg !6099
  %27 = load %struct.device*, %struct.device** %dev34, align 8, !dbg !6099
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %27, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0)) #10, !dbg !6099
  store i32 -5, i32* %retval, align 4, !dbg !6101
  br label %return, !dbg !6101

if.end35:                                         ; preds = %land.lhs.true31, %if.end27
  %28 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6102
  %cap_mask36 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %28, i32 0, i32 6, !dbg !6102
  %call37 = call i32 @__dma_has_cap(i32 4, %struct.dma_cap_mask_t* %cap_mask36) #9, !dbg !6102
  %tobool38 = icmp ne i32 %call37, 0, !dbg !6102
  br i1 %tobool38, label %land.lhs.true39, label %if.end43, !dbg !6104

land.lhs.true39:                                  ; preds = %if.end35
  %29 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6105
  %device_prep_dma_pq_val = getelementptr inbounds %struct.dma_device, %struct.dma_device* %29, i32 0, i32 33, !dbg !6106
  %30 = load %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i32*, i64)** %device_prep_dma_pq_val, align 8, !dbg !6106
  %tobool40 = icmp ne %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i32*, i64)* %30, null, !dbg !6105
  br i1 %tobool40, label %if.end43, label %if.then41, !dbg !6107

if.then41:                                        ; preds = %land.lhs.true39
  %31 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6108
  %dev42 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %31, i32 0, i32 15, !dbg !6108
  %32 = load %struct.device*, %struct.device** %dev42, align 8, !dbg !6108
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %32, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !6108
  store i32 -5, i32* %retval, align 4, !dbg !6110
  br label %return, !dbg !6110

if.end43:                                         ; preds = %land.lhs.true39, %if.end35
  %33 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6111
  %cap_mask44 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %33, i32 0, i32 6, !dbg !6111
  %call45 = call i32 @__dma_has_cap(i32 5, %struct.dma_cap_mask_t* %cap_mask44) #9, !dbg !6111
  %tobool46 = icmp ne i32 %call45, 0, !dbg !6111
  br i1 %tobool46, label %land.lhs.true47, label %if.end51, !dbg !6113

land.lhs.true47:                                  ; preds = %if.end43
  %34 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6114
  %device_prep_dma_memset = getelementptr inbounds %struct.dma_device, %struct.dma_device* %34, i32 0, i32 34, !dbg !6115
  %35 = load %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i32, i64, i64)** %device_prep_dma_memset, align 8, !dbg !6115
  %tobool48 = icmp ne %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i32, i64, i64)* %35, null, !dbg !6114
  br i1 %tobool48, label %if.end51, label %if.then49, !dbg !6116

if.then49:                                        ; preds = %land.lhs.true47
  %36 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6117
  %dev50 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %36, i32 0, i32 15, !dbg !6117
  %37 = load %struct.device*, %struct.device** %dev50, align 8, !dbg !6117
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %37, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)) #10, !dbg !6117
  store i32 -5, i32* %retval, align 4, !dbg !6119
  br label %return, !dbg !6119

if.end51:                                         ; preds = %land.lhs.true47, %if.end43
  %38 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6120
  %cap_mask52 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %38, i32 0, i32 6, !dbg !6120
  %call53 = call i32 @__dma_has_cap(i32 7, %struct.dma_cap_mask_t* %cap_mask52) #9, !dbg !6120
  %tobool54 = icmp ne i32 %call53, 0, !dbg !6120
  br i1 %tobool54, label %land.lhs.true55, label %if.end59, !dbg !6122

land.lhs.true55:                                  ; preds = %if.end51
  %39 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6123
  %device_prep_dma_interrupt = getelementptr inbounds %struct.dma_device, %struct.dma_device* %39, i32 0, i32 36, !dbg !6124
  %40 = load %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64)** %device_prep_dma_interrupt, align 8, !dbg !6124
  %tobool56 = icmp ne %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64)* %40, null, !dbg !6123
  br i1 %tobool56, label %if.end59, label %if.then57, !dbg !6125

if.then57:                                        ; preds = %land.lhs.true55
  %41 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6126
  %dev58 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %41, i32 0, i32 15, !dbg !6126
  %42 = load %struct.device*, %struct.device** %dev58, align 8, !dbg !6126
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %42, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !6126
  store i32 -5, i32* %retval, align 4, !dbg !6128
  br label %return, !dbg !6128

if.end59:                                         ; preds = %land.lhs.true55, %if.end51
  %43 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6129
  %cap_mask60 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %43, i32 0, i32 6, !dbg !6129
  %call61 = call i32 @__dma_has_cap(i32 11, %struct.dma_cap_mask_t* %cap_mask60) #9, !dbg !6129
  %tobool62 = icmp ne i32 %call61, 0, !dbg !6129
  br i1 %tobool62, label %land.lhs.true63, label %if.end67, !dbg !6131

land.lhs.true63:                                  ; preds = %if.end59
  %44 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6132
  %device_prep_dma_cyclic = getelementptr inbounds %struct.dma_device, %struct.dma_device* %44, i32 0, i32 38, !dbg !6133
  %45 = load %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)** %device_prep_dma_cyclic, align 8, !dbg !6133
  %tobool64 = icmp ne %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)* %45, null, !dbg !6132
  br i1 %tobool64, label %if.end67, label %if.then65, !dbg !6134

if.then65:                                        ; preds = %land.lhs.true63
  %46 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6135
  %dev66 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %46, i32 0, i32 15, !dbg !6135
  %47 = load %struct.device*, %struct.device** %dev66, align 8, !dbg !6135
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %47, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !6135
  store i32 -5, i32* %retval, align 4, !dbg !6137
  br label %return, !dbg !6137

if.end67:                                         ; preds = %land.lhs.true63, %if.end59
  %48 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6138
  %cap_mask68 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %48, i32 0, i32 6, !dbg !6138
  %call69 = call i32 @__dma_has_cap(i32 12, %struct.dma_cap_mask_t* %cap_mask68) #9, !dbg !6138
  %tobool70 = icmp ne i32 %call69, 0, !dbg !6138
  br i1 %tobool70, label %land.lhs.true71, label %if.end75, !dbg !6140

land.lhs.true71:                                  ; preds = %if.end67
  %49 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6141
  %device_prep_interleaved_dma = getelementptr inbounds %struct.dma_device, %struct.dma_device* %49, i32 0, i32 39, !dbg !6142
  %50 = load %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)** %device_prep_interleaved_dma, align 8, !dbg !6142
  %tobool72 = icmp ne %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)* %50, null, !dbg !6141
  br i1 %tobool72, label %if.end75, label %if.then73, !dbg !6143

if.then73:                                        ; preds = %land.lhs.true71
  %51 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6144
  %dev74 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %51, i32 0, i32 15, !dbg !6144
  %52 = load %struct.device*, %struct.device** %dev74, align 8, !dbg !6144
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %52, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0)) #10, !dbg !6144
  store i32 -5, i32* %retval, align 4, !dbg !6146
  br label %return, !dbg !6146

if.end75:                                         ; preds = %land.lhs.true71, %if.end67
  %53 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6147
  %device_tx_status = getelementptr inbounds %struct.dma_device, %struct.dma_device* %53, i32 0, i32 47, !dbg !6149
  %54 = load i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)*, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)** %device_tx_status, align 8, !dbg !6149
  %tobool76 = icmp ne i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)* %54, null, !dbg !6147
  br i1 %tobool76, label %if.end79, label %if.then77, !dbg !6150

if.then77:                                        ; preds = %if.end75
  %55 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6151
  %dev78 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %55, i32 0, i32 15, !dbg !6151
  %56 = load %struct.device*, %struct.device** %dev78, align 8, !dbg !6151
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %56, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !6151
  store i32 -5, i32* %retval, align 4, !dbg !6153
  br label %return, !dbg !6153

if.end79:                                         ; preds = %if.end75
  %57 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6154
  %device_issue_pending = getelementptr inbounds %struct.dma_device, %struct.dma_device* %57, i32 0, i32 48, !dbg !6156
  %58 = load void (%struct.dma_chan*)*, void (%struct.dma_chan*)** %device_issue_pending, align 8, !dbg !6156
  %tobool80 = icmp ne void (%struct.dma_chan*)* %58, null, !dbg !6154
  br i1 %tobool80, label %if.end83, label %if.then81, !dbg !6157

if.then81:                                        ; preds = %if.end79
  %59 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6158
  %dev82 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %59, i32 0, i32 15, !dbg !6158
  %60 = load %struct.device*, %struct.device** %dev82, align 8, !dbg !6158
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %60, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !6158
  store i32 -5, i32* %retval, align 4, !dbg !6160
  br label %return, !dbg !6160

if.end83:                                         ; preds = %if.end79
  %61 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6161
  %device_release = getelementptr inbounds %struct.dma_device, %struct.dma_device* %61, i32 0, i32 49, !dbg !6163
  %62 = load void (%struct.dma_device*)*, void (%struct.dma_device*)** %device_release, align 8, !dbg !6163
  %tobool84 = icmp ne void (%struct.dma_device*)* %62, null, !dbg !6161
  br i1 %tobool84, label %if.end86, label %if.then85, !dbg !6164

if.then85:                                        ; preds = %if.end83
  br label %if.end86, !dbg !6165

if.end86:                                         ; preds = %if.then85, %if.end83
  %63 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6166
  %ref = getelementptr inbounds %struct.dma_device, %struct.dma_device* %63, i32 0, i32 0, !dbg !6167
  call void @kref_init(%struct.kref* %ref) #9, !dbg !6168
  %64 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6169
  %call87 = call zeroext i1 @device_has_all_tx_types(%struct.dma_device* %64) #9, !dbg !6171
  br i1 %call87, label %if.then88, label %if.end90, !dbg !6172

if.then88:                                        ; preds = %if.end86
  %65 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6173
  %cap_mask89 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %65, i32 0, i32 6, !dbg !6173
  call void @__dma_cap_set(i32 9, %struct.dma_cap_mask_t* %cap_mask89) #9, !dbg !6173
  br label %if.end90, !dbg !6173

if.end90:                                         ; preds = %if.then88, %if.end86
  %66 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6174
  %call91 = call i32 @get_dma_id(%struct.dma_device* %66) #9, !dbg !6175
  store i32 %call91, i32* %rc, align 4, !dbg !6176
  %67 = load i32, i32* %rc, align 4, !dbg !6177
  %cmp = icmp ne i32 %67, 0, !dbg !6179
  br i1 %cmp, label %if.then92, label %if.end93, !dbg !6180

if.then92:                                        ; preds = %if.end90
  %68 = load i32, i32* %rc, align 4, !dbg !6181
  store i32 %68, i32* %retval, align 4, !dbg !6182
  br label %return, !dbg !6182

if.end93:                                         ; preds = %if.end90
  br label %do.body, !dbg !6183

do.body:                                          ; preds = %if.end93
  %69 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6184
  %chan_mutex = getelementptr inbounds %struct.dma_device, %struct.dma_device* %69, i32 0, i32 18, !dbg !6184
  call void @__mutex_init(%struct.mutex* %chan_mutex, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i64 0, i64 0), %struct.lock_class_key* @dma_async_device_register.__key) #9, !dbg !6184
  br label %do.end, !dbg !6184

do.end:                                           ; preds = %do.body
  %70 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6186
  %chan_ida = getelementptr inbounds %struct.dma_device, %struct.dma_device* %70, i32 0, i32 17, !dbg !6187
  call void @ida_init(%struct.ida* %chan_ida) #9, !dbg !6188
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6189, metadata !DIExpression()), !dbg !6192
  %71 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6192
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %71, i32 0, i32 3, !dbg !6192
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %channels, i32 0, i32 0, !dbg !6192
  %72 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6192
  %73 = bitcast %struct.list_head* %72 to i8*, !dbg !6192
  store i8* %73, i8** %__mptr, align 8, !dbg !6192
  br label %do.body94, !dbg !6192

do.body94:                                        ; preds = %do.end
  br label %do.end95, !dbg !6193

do.end95:                                         ; preds = %do.body94
  %74 = load i8*, i8** %__mptr, align 8, !dbg !6192
  %add.ptr = getelementptr i8, i8* %74, i64 -48, !dbg !6192
  %75 = bitcast i8* %add.ptr to %struct.dma_chan*, !dbg !6192
  store %struct.dma_chan* %75, %struct.dma_chan** %tmp, align 8, !dbg !6193
  %76 = load %struct.dma_chan*, %struct.dma_chan** %tmp, align 8, !dbg !6192
  store %struct.dma_chan* %76, %struct.dma_chan** %chan, align 8, !dbg !6195
  br label %for.cond, !dbg !6195

for.cond:                                         ; preds = %do.end106, %do.end95
  %77 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6196
  %device_node = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %77, i32 0, i32 7, !dbg !6196
  %78 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6196
  %channels96 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %78, i32 0, i32 3, !dbg !6196
  %cmp97 = icmp eq %struct.list_head* %device_node, %channels96, !dbg !6196
  %lnot = xor i1 %cmp97, true, !dbg !6196
  br i1 %lnot, label %for.body, label %for.end, !dbg !6195

for.body:                                         ; preds = %for.cond
  %79 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6198
  %80 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6200
  %call98 = call i32 @__dma_async_device_channel_register(%struct.dma_device* %79, %struct.dma_chan* %80) #9, !dbg !6201
  store i32 %call98, i32* %rc, align 4, !dbg !6202
  %81 = load i32, i32* %rc, align 4, !dbg !6203
  %cmp99 = icmp slt i32 %81, 0, !dbg !6205
  br i1 %cmp99, label %if.then100, label %if.end101, !dbg !6206

if.then100:                                       ; preds = %for.body
  br label %err_out, !dbg !6207

if.end101:                                        ; preds = %for.body
  br label %for.inc, !dbg !6208

for.inc:                                          ; preds = %if.end101
  call void @llvm.dbg.declare(metadata i8** %__mptr102, metadata !6209, metadata !DIExpression()), !dbg !6211
  %82 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6211
  %device_node103 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %82, i32 0, i32 7, !dbg !6211
  %next104 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node103, i32 0, i32 0, !dbg !6211
  %83 = load %struct.list_head*, %struct.list_head** %next104, align 8, !dbg !6211
  %84 = bitcast %struct.list_head* %83 to i8*, !dbg !6211
  store i8* %84, i8** %__mptr102, align 8, !dbg !6211
  br label %do.body105, !dbg !6211

do.body105:                                       ; preds = %for.inc
  br label %do.end106, !dbg !6212

do.end106:                                        ; preds = %do.body105
  %85 = load i8*, i8** %__mptr102, align 8, !dbg !6211
  %add.ptr108 = getelementptr i8, i8* %85, i64 -48, !dbg !6211
  %86 = bitcast i8* %add.ptr108 to %struct.dma_chan*, !dbg !6211
  store %struct.dma_chan* %86, %struct.dma_chan** %tmp107, align 8, !dbg !6212
  %87 = load %struct.dma_chan*, %struct.dma_chan** %tmp107, align 8, !dbg !6211
  store %struct.dma_chan* %87, %struct.dma_chan** %chan, align 8, !dbg !6196
  br label %for.cond, !dbg !6196, !llvm.loop !6214

for.end:                                          ; preds = %for.cond
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !6216
  %88 = load i64, i64* @dmaengine_ref_count, align 8, !dbg !6217
  %tobool109 = icmp ne i64 %88, 0, !dbg !6217
  br i1 %tobool109, label %land.lhs.true110, label %if.end141, !dbg !6219

land.lhs.true110:                                 ; preds = %for.end
  %89 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6220
  %cap_mask111 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %89, i32 0, i32 6, !dbg !6220
  %call112 = call i32 @__dma_has_cap(i32 8, %struct.dma_cap_mask_t* %cap_mask111) #9, !dbg !6220
  %tobool113 = icmp ne i32 %call112, 0, !dbg !6220
  br i1 %tobool113, label %if.end141, label %if.then114, !dbg !6221

if.then114:                                       ; preds = %land.lhs.true110
  call void @llvm.dbg.declare(metadata i8** %__mptr115, metadata !6222, metadata !DIExpression()), !dbg !6225
  %90 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6225
  %channels116 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %90, i32 0, i32 3, !dbg !6225
  %next117 = getelementptr inbounds %struct.list_head, %struct.list_head* %channels116, i32 0, i32 0, !dbg !6225
  %91 = load %struct.list_head*, %struct.list_head** %next117, align 8, !dbg !6225
  %92 = bitcast %struct.list_head* %91 to i8*, !dbg !6225
  store i8* %92, i8** %__mptr115, align 8, !dbg !6225
  br label %do.body118, !dbg !6225

do.body118:                                       ; preds = %if.then114
  br label %do.end119, !dbg !6226

do.end119:                                        ; preds = %do.body118
  %93 = load i8*, i8** %__mptr115, align 8, !dbg !6225
  %add.ptr121 = getelementptr i8, i8* %93, i64 -48, !dbg !6225
  %94 = bitcast i8* %add.ptr121 to %struct.dma_chan*, !dbg !6225
  store %struct.dma_chan* %94, %struct.dma_chan** %tmp120, align 8, !dbg !6226
  %95 = load %struct.dma_chan*, %struct.dma_chan** %tmp120, align 8, !dbg !6225
  store %struct.dma_chan* %95, %struct.dma_chan** %chan, align 8, !dbg !6228
  br label %for.cond122, !dbg !6228

for.cond122:                                      ; preds = %do.end137, %do.end119
  %96 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6229
  %device_node123 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %96, i32 0, i32 7, !dbg !6229
  %97 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6229
  %channels124 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %97, i32 0, i32 3, !dbg !6229
  %cmp125 = icmp eq %struct.list_head* %device_node123, %channels124, !dbg !6229
  %lnot126 = xor i1 %cmp125, true, !dbg !6229
  br i1 %lnot126, label %for.body127, label %for.end140, !dbg !6228

for.body127:                                      ; preds = %for.cond122
  %98 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6231
  %call128 = call i32 @dma_chan_get(%struct.dma_chan* %98) #9, !dbg !6234
  %cmp129 = icmp eq i32 %call128, -19, !dbg !6235
  br i1 %cmp129, label %if.then130, label %if.end131, !dbg !6236

if.then130:                                       ; preds = %for.body127
  store i32 -19, i32* %rc, align 4, !dbg !6237
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !6239
  br label %err_out, !dbg !6240

if.end131:                                        ; preds = %for.body127
  br label %for.inc132, !dbg !6241

for.inc132:                                       ; preds = %if.end131
  call void @llvm.dbg.declare(metadata i8** %__mptr133, metadata !6242, metadata !DIExpression()), !dbg !6244
  %99 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6244
  %device_node134 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %99, i32 0, i32 7, !dbg !6244
  %next135 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node134, i32 0, i32 0, !dbg !6244
  %100 = load %struct.list_head*, %struct.list_head** %next135, align 8, !dbg !6244
  %101 = bitcast %struct.list_head* %100 to i8*, !dbg !6244
  store i8* %101, i8** %__mptr133, align 8, !dbg !6244
  br label %do.body136, !dbg !6244

do.body136:                                       ; preds = %for.inc132
  br label %do.end137, !dbg !6245

do.end137:                                        ; preds = %do.body136
  %102 = load i8*, i8** %__mptr133, align 8, !dbg !6244
  %add.ptr139 = getelementptr i8, i8* %102, i64 -48, !dbg !6244
  %103 = bitcast i8* %add.ptr139 to %struct.dma_chan*, !dbg !6244
  store %struct.dma_chan* %103, %struct.dma_chan** %tmp138, align 8, !dbg !6245
  %104 = load %struct.dma_chan*, %struct.dma_chan** %tmp138, align 8, !dbg !6244
  store %struct.dma_chan* %104, %struct.dma_chan** %chan, align 8, !dbg !6229
  br label %for.cond122, !dbg !6229, !llvm.loop !6247

for.end140:                                       ; preds = %for.cond122
  br label %if.end141, !dbg !6248

if.end141:                                        ; preds = %for.end140, %land.lhs.true110, %for.end
  %105 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6249
  %global_node = getelementptr inbounds %struct.dma_device, %struct.dma_device* %105, i32 0, i32 4, !dbg !6250
  call void @list_add_tail_rcu(%struct.list_head* %global_node, %struct.list_head* @dma_device_list) #9, !dbg !6251
  %106 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6252
  %cap_mask142 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %106, i32 0, i32 6, !dbg !6252
  %call143 = call i32 @__dma_has_cap(i32 8, %struct.dma_cap_mask_t* %cap_mask142) #9, !dbg !6252
  %tobool144 = icmp ne i32 %call143, 0, !dbg !6252
  br i1 %tobool144, label %if.then145, label %if.end146, !dbg !6254

if.then145:                                       ; preds = %if.end141
  %107 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6255
  %privatecnt = getelementptr inbounds %struct.dma_device, %struct.dma_device* %107, i32 0, i32 2, !dbg !6256
  %108 = load i32, i32* %privatecnt, align 8, !dbg !6257
  %inc = add i32 %108, 1, !dbg !6257
  store i32 %inc, i32* %privatecnt, align 8, !dbg !6257
  br label %if.end146, !dbg !6255

if.end146:                                        ; preds = %if.then145, %if.end141
  call void @dma_channel_rebalance() #9, !dbg !6258
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !6259
  %109 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6260
  %call147 = call i32 @dmaengine_debug_register(%struct.dma_device* %109) #9, !dbg !6261
  store i32 0, i32* %retval, align 4, !dbg !6262
  br label %return, !dbg !6262

err_out:                                          ; preds = %if.then130, %if.then100
  call void @llvm.dbg.label(metadata !6263), !dbg !6264
  %110 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6265
  %chancnt = getelementptr inbounds %struct.dma_device, %struct.dma_device* %110, i32 0, i32 1, !dbg !6267
  %111 = load i32, i32* %chancnt, align 4, !dbg !6267
  %tobool148 = icmp ne i32 %111, 0, !dbg !6265
  br i1 %tobool148, label %if.end150, label %if.then149, !dbg !6268

if.then149:                                       ; preds = %err_out
  %112 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6269
  %dev_id = getelementptr inbounds %struct.dma_device, %struct.dma_device* %112, i32 0, i32 14, !dbg !6271
  %113 = load i32, i32* %dev_id, align 8, !dbg !6271
  call void @ida_free(%struct.ida* @dma_ida, i32 %113) #9, !dbg !6272
  %114 = load i32, i32* %rc, align 4, !dbg !6273
  store i32 %114, i32* %retval, align 4, !dbg !6274
  br label %return, !dbg !6274

if.end150:                                        ; preds = %err_out
  call void @llvm.dbg.declare(metadata i8** %__mptr151, metadata !6275, metadata !DIExpression()), !dbg !6278
  %115 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6278
  %channels152 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %115, i32 0, i32 3, !dbg !6278
  %next153 = getelementptr inbounds %struct.list_head, %struct.list_head* %channels152, i32 0, i32 0, !dbg !6278
  %116 = load %struct.list_head*, %struct.list_head** %next153, align 8, !dbg !6278
  %117 = bitcast %struct.list_head* %116 to i8*, !dbg !6278
  store i8* %117, i8** %__mptr151, align 8, !dbg !6278
  br label %do.body154, !dbg !6278

do.body154:                                       ; preds = %if.end150
  br label %do.end155, !dbg !6279

do.end155:                                        ; preds = %do.body154
  %118 = load i8*, i8** %__mptr151, align 8, !dbg !6278
  %add.ptr157 = getelementptr i8, i8* %118, i64 -48, !dbg !6278
  %119 = bitcast i8* %add.ptr157 to %struct.dma_chan*, !dbg !6278
  store %struct.dma_chan* %119, %struct.dma_chan** %tmp156, align 8, !dbg !6279
  %120 = load %struct.dma_chan*, %struct.dma_chan** %tmp156, align 8, !dbg !6278
  store %struct.dma_chan* %120, %struct.dma_chan** %chan, align 8, !dbg !6281
  br label %for.cond158, !dbg !6281

for.cond158:                                      ; preds = %do.end177, %do.end155
  %121 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6282
  %device_node159 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %121, i32 0, i32 7, !dbg !6282
  %122 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6282
  %channels160 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %122, i32 0, i32 3, !dbg !6282
  %cmp161 = icmp eq %struct.list_head* %device_node159, %channels160, !dbg !6282
  %lnot162 = xor i1 %cmp161, true, !dbg !6282
  br i1 %lnot162, label %for.body163, label %for.end180, !dbg !6281

for.body163:                                      ; preds = %for.cond158
  %123 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6284
  %local = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %123, i32 0, i32 8, !dbg !6287
  %124 = load %struct.dma_chan_percpu*, %struct.dma_chan_percpu** %local, align 8, !dbg !6287
  %cmp164 = icmp eq %struct.dma_chan_percpu* %124, null, !dbg !6288
  br i1 %cmp164, label %if.then165, label %if.end166, !dbg !6289

if.then165:                                       ; preds = %for.body163
  br label %for.inc172, !dbg !6290

if.end166:                                        ; preds = %for.body163
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !6291
  %125 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6292
  %dev167 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %125, i32 0, i32 5, !dbg !6293
  %126 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev167, align 8, !dbg !6293
  %chan168 = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %126, i32 0, i32 0, !dbg !6294
  store %struct.dma_chan* null, %struct.dma_chan** %chan168, align 8, !dbg !6295
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !6296
  %127 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6297
  %dev169 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %127, i32 0, i32 5, !dbg !6298
  %128 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %dev169, align 8, !dbg !6298
  %device170 = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %128, i32 0, i32 1, !dbg !6299
  call void @device_unregister(%struct.device* %device170) #9, !dbg !6300
  %129 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6301
  %local171 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %129, i32 0, i32 8, !dbg !6302
  %130 = load %struct.dma_chan_percpu*, %struct.dma_chan_percpu** %local171, align 8, !dbg !6302
  %131 = bitcast %struct.dma_chan_percpu* %130 to i8*, !dbg !6301
  call void @free_percpu(i8* %131) #9, !dbg !6303
  br label %for.inc172, !dbg !6304

for.inc172:                                       ; preds = %if.end166, %if.then165
  call void @llvm.dbg.declare(metadata i8** %__mptr173, metadata !6305, metadata !DIExpression()), !dbg !6307
  %132 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6307
  %device_node174 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %132, i32 0, i32 7, !dbg !6307
  %next175 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node174, i32 0, i32 0, !dbg !6307
  %133 = load %struct.list_head*, %struct.list_head** %next175, align 8, !dbg !6307
  %134 = bitcast %struct.list_head* %133 to i8*, !dbg !6307
  store i8* %134, i8** %__mptr173, align 8, !dbg !6307
  br label %do.body176, !dbg !6307

do.body176:                                       ; preds = %for.inc172
  br label %do.end177, !dbg !6308

do.end177:                                        ; preds = %do.body176
  %135 = load i8*, i8** %__mptr173, align 8, !dbg !6307
  %add.ptr179 = getelementptr i8, i8* %135, i64 -48, !dbg !6307
  %136 = bitcast i8* %add.ptr179 to %struct.dma_chan*, !dbg !6307
  store %struct.dma_chan* %136, %struct.dma_chan** %tmp178, align 8, !dbg !6308
  %137 = load %struct.dma_chan*, %struct.dma_chan** %tmp178, align 8, !dbg !6307
  store %struct.dma_chan* %137, %struct.dma_chan** %chan, align 8, !dbg !6282
  br label %for.cond158, !dbg !6282, !llvm.loop !6310

for.end180:                                       ; preds = %for.cond158
  %138 = load i32, i32* %rc, align 4, !dbg !6312
  store i32 %138, i32* %retval, align 4, !dbg !6313
  br label %return, !dbg !6313

return:                                           ; preds = %for.end180, %if.then149, %if.end146, %if.then92, %if.then81, %if.then77, %if.then73, %if.then65, %if.then57, %if.then49, %if.then41, %if.then33, %if.then25, %if.then17, %if.then9, %if.then2, %if.then
  %139 = load i32, i32* %retval, align 4, !dbg !6314
  ret i32 %139, !dbg !6314
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_init(%struct.kref* %kref) #1 !dbg !6315 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !6319, metadata !DIExpression()), !dbg !6320
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !6321
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !6322
  call void @refcount_set(%struct.refcount_struct* %refcount, i32 1) #9, !dbg !6323
  ret void, !dbg !6324
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_has_all_tx_types(%struct.dma_device* %device) #1 !dbg !6325 {
entry:
  %device.addr = alloca %struct.dma_device*, align 8
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !6328, metadata !DIExpression()), !dbg !6329
  ret i1 true, !dbg !6330
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_dma_id(%struct.dma_device* %device) #1 !dbg !6331 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.dma_device*, align 8
  %rc = alloca i32, align 4
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !6332, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6334, metadata !DIExpression()), !dbg !6335
  %call = call i32 @ida_alloc(%struct.ida* @dma_ida, i32 3264) #9, !dbg !6336
  store i32 %call, i32* %rc, align 4, !dbg !6335
  %0 = load i32, i32* %rc, align 4, !dbg !6337
  %cmp = icmp slt i32 %0, 0, !dbg !6339
  br i1 %cmp, label %if.then, label %if.end, !dbg !6340

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %rc, align 4, !dbg !6341
  store i32 %1, i32* %retval, align 4, !dbg !6342
  br label %return, !dbg !6342

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %rc, align 4, !dbg !6343
  %3 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6344
  %dev_id = getelementptr inbounds %struct.dma_device, %struct.dma_device* %3, i32 0, i32 14, !dbg !6345
  store i32 %2, i32* %dev_id, align 8, !dbg !6346
  store i32 0, i32* %retval, align 4, !dbg !6347
  br label %return, !dbg !6347

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !6348
  ret i32 %4, !dbg !6348
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ida_init(%struct.ida* %ida) #1 !dbg !6349 {
entry:
  %ida.addr = alloca %struct.ida*, align 8
  store %struct.ida* %ida, %struct.ida** %ida.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ida** %ida.addr, metadata !6353, metadata !DIExpression()), !dbg !6354
  %0 = load %struct.ida*, %struct.ida** %ida.addr, align 8, !dbg !6355
  %xa = getelementptr inbounds %struct.ida, %struct.ida* %0, i32 0, i32 0, !dbg !6356
  call void @xa_init_flags(%struct.xarray* %xa, i32 8388613) #9, !dbg !6357
  ret void, !dbg !6358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail_rcu(%struct.list_head* %new, %struct.list_head* %head) #1 !dbg !6359 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6362, metadata !DIExpression()), !dbg !6363
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6364, metadata !DIExpression()), !dbg !6365
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6366
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6367
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6368
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !6368
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6369
  call void @__list_add_rcu(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #9, !dbg !6370
  ret void, !dbg !6371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dmaengine_debug_register(%struct.dma_device* %dma_dev) #1 !dbg !6372 {
entry:
  %dma_dev.addr = alloca %struct.dma_device*, align 8
  store %struct.dma_device* %dma_dev, %struct.dma_device** %dma_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %dma_dev.addr, metadata !6373, metadata !DIExpression()), !dbg !6374
  ret i32 0, !dbg !6375
}

; Function Attrs: noredzone
declare dso_local void @ida_free(%struct.ida*, i32) #4

; Function Attrs: noredzone
declare dso_local void @device_unregister(%struct.device*) #4

; Function Attrs: noredzone
declare dso_local void @free_percpu(i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dma_async_device_unregister(%struct.dma_device* %device) #1 !dbg !6376 {
entry:
  %device.addr = alloca %struct.dma_device*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %n = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dma_chan*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.dma_chan*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp14 = alloca %struct.dma_chan*, align 8
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !6377, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !6379, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %n, metadata !6381, metadata !DIExpression()), !dbg !6382
  %0 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6383
  call void @dmaengine_debug_unregister(%struct.dma_device* %0) #9, !dbg !6384
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6385, metadata !DIExpression()), !dbg !6388
  %1 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6388
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 3, !dbg !6388
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %channels, i32 0, i32 0, !dbg !6388
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6388
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !6388
  store i8* %3, i8** %__mptr, align 8, !dbg !6388
  br label %do.body, !dbg !6388

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6389

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !6388
  %add.ptr = getelementptr i8, i8* %4, i64 -48, !dbg !6388
  %5 = bitcast i8* %add.ptr to %struct.dma_chan*, !dbg !6388
  store %struct.dma_chan* %5, %struct.dma_chan** %tmp, align 8, !dbg !6389
  %6 = load %struct.dma_chan*, %struct.dma_chan** %tmp, align 8, !dbg !6388
  store %struct.dma_chan* %6, %struct.dma_chan** %chan, align 8, !dbg !6391
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !6392, metadata !DIExpression()), !dbg !6394
  %7 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6394
  %device_node = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %7, i32 0, i32 7, !dbg !6394
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node, i32 0, i32 0, !dbg !6394
  %8 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !6394
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !6394
  store i8* %9, i8** %__mptr1, align 8, !dbg !6394
  br label %do.body3, !dbg !6394

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !6395

do.end4:                                          ; preds = %do.body3
  %10 = load i8*, i8** %__mptr1, align 8, !dbg !6394
  %add.ptr6 = getelementptr i8, i8* %10, i64 -48, !dbg !6394
  %11 = bitcast i8* %add.ptr6 to %struct.dma_chan*, !dbg !6394
  store %struct.dma_chan* %11, %struct.dma_chan** %tmp5, align 8, !dbg !6395
  %12 = load %struct.dma_chan*, %struct.dma_chan** %tmp5, align 8, !dbg !6394
  store %struct.dma_chan* %12, %struct.dma_chan** %n, align 8, !dbg !6391
  br label %for.cond, !dbg !6391

for.cond:                                         ; preds = %do.end13, %do.end4
  %13 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6397
  %device_node7 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %13, i32 0, i32 7, !dbg !6397
  %14 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6397
  %channels8 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %14, i32 0, i32 3, !dbg !6397
  %cmp = icmp eq %struct.list_head* %device_node7, %channels8, !dbg !6397
  %lnot = xor i1 %cmp, true, !dbg !6397
  br i1 %lnot, label %for.body, label %for.end, !dbg !6391

for.body:                                         ; preds = %for.cond
  %15 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6399
  %16 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6400
  call void @__dma_async_device_channel_unregister(%struct.dma_device* %15, %struct.dma_chan* %16) #9, !dbg !6401
  br label %for.inc, !dbg !6401

for.inc:                                          ; preds = %for.body
  %17 = load %struct.dma_chan*, %struct.dma_chan** %n, align 8, !dbg !6397
  store %struct.dma_chan* %17, %struct.dma_chan** %chan, align 8, !dbg !6397
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !6402, metadata !DIExpression()), !dbg !6404
  %18 = load %struct.dma_chan*, %struct.dma_chan** %n, align 8, !dbg !6404
  %device_node10 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %18, i32 0, i32 7, !dbg !6404
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node10, i32 0, i32 0, !dbg !6404
  %19 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !6404
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !6404
  store i8* %20, i8** %__mptr9, align 8, !dbg !6404
  br label %do.body12, !dbg !6404

do.body12:                                        ; preds = %for.inc
  br label %do.end13, !dbg !6405

do.end13:                                         ; preds = %do.body12
  %21 = load i8*, i8** %__mptr9, align 8, !dbg !6404
  %add.ptr15 = getelementptr i8, i8* %21, i64 -48, !dbg !6404
  %22 = bitcast i8* %add.ptr15 to %struct.dma_chan*, !dbg !6404
  store %struct.dma_chan* %22, %struct.dma_chan** %tmp14, align 8, !dbg !6405
  %23 = load %struct.dma_chan*, %struct.dma_chan** %tmp14, align 8, !dbg !6404
  store %struct.dma_chan* %23, %struct.dma_chan** %n, align 8, !dbg !6397
  br label %for.cond, !dbg !6397, !llvm.loop !6407

for.end:                                          ; preds = %for.cond
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !6409
  %24 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6410
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %24, i32 0, i32 6, !dbg !6410
  call void @__dma_cap_set(i32 8, %struct.dma_cap_mask_t* %cap_mask) #9, !dbg !6410
  call void @dma_channel_rebalance() #9, !dbg !6411
  %25 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6412
  %dev_id = getelementptr inbounds %struct.dma_device, %struct.dma_device* %25, i32 0, i32 14, !dbg !6413
  %26 = load i32, i32* %dev_id, align 8, !dbg !6413
  call void @ida_free(%struct.ida* @dma_ida, i32 %26) #9, !dbg !6414
  %27 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6415
  call void @dma_device_put(%struct.dma_device* %27) #9, !dbg !6416
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !6417
  ret void, !dbg !6418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dmaengine_debug_unregister(%struct.dma_device* %dma_dev) #1 !dbg !6419 {
entry:
  %dma_dev.addr = alloca %struct.dma_device*, align 8
  store %struct.dma_device* %dma_dev, %struct.dma_device** %dma_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %dma_dev.addr, metadata !6420, metadata !DIExpression()), !dbg !6421
  ret void, !dbg !6422
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_device_put(%struct.dma_device* %device) #1 !dbg !6423 {
entry:
  %device.addr = alloca %struct.dma_device*, align 8
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !6424, metadata !DIExpression()), !dbg !6425
  br label %do.body, !dbg !6426

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6427

do.end:                                           ; preds = %do.body
  %0 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6429
  %ref = getelementptr inbounds %struct.dma_device, %struct.dma_device* %0, i32 0, i32 0, !dbg !6430
  %call = call i32 @kref_put(%struct.kref* %ref, void (%struct.kref*)* @dma_device_release) #9, !dbg !6431
  ret void, !dbg !6432
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dmaenginem_async_device_register(%struct.dma_device* %device) #1 !dbg !6433 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.dma_device*, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !6434, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6436, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6438, metadata !DIExpression()), !dbg !6439
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @dmam_device_release, i64 8, i32 3264) #9, !dbg !6440
  store i8* %call, i8** %p, align 8, !dbg !6441
  %0 = load i8*, i8** %p, align 8, !dbg !6442
  %tobool = icmp ne i8* %0, null, !dbg !6442
  br i1 %tobool, label %if.end, label %if.then, !dbg !6444

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6445
  br label %return, !dbg !6445

if.end:                                           ; preds = %entry
  %1 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6446
  %call1 = call i32 @dma_async_device_register(%struct.dma_device* %1) #9, !dbg !6447
  store i32 %call1, i32* %ret, align 4, !dbg !6448
  %2 = load i32, i32* %ret, align 4, !dbg !6449
  %tobool2 = icmp ne i32 %2, 0, !dbg !6449
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !6451

if.then3:                                         ; preds = %if.end
  %3 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6452
  %4 = load i8*, i8** %p, align 8, !dbg !6454
  %5 = bitcast i8* %4 to %struct.dma_device**, !dbg !6455
  store %struct.dma_device* %3, %struct.dma_device** %5, align 8, !dbg !6456
  %6 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !6457
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %6, i32 0, i32 15, !dbg !6458
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6458
  %8 = load i8*, i8** %p, align 8, !dbg !6459
  call void @devres_add(%struct.device* %7, i8* %8) #9, !dbg !6460
  br label %if.end4, !dbg !6461

if.else:                                          ; preds = %if.end
  %9 = load i8*, i8** %p, align 8, !dbg !6462
  call void @devres_free(i8* %9) #9, !dbg !6464
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then3
  %10 = load i32, i32* %ret, align 4, !dbg !6465
  store i32 %10, i32* %retval, align 4, !dbg !6466
  br label %return, !dbg !6466

return:                                           ; preds = %if.end4, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !6467
  ret i32 %11, !dbg !6467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devres_alloc(void (%struct.device*, i8*)* %release, i64 %size, i32 %gfp) #1 !dbg !6468 {
entry:
  %release.addr = alloca void (%struct.device*, i8*)*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store void (%struct.device*, i8*)* %release, void (%struct.device*, i8*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.device*, i8*)** %release.addr, metadata !6472, metadata !DIExpression()), !dbg !6473
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6474, metadata !DIExpression()), !dbg !6475
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !6476, metadata !DIExpression()), !dbg !6477
  %0 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %release.addr, align 8, !dbg !6478
  %1 = load i64, i64* %size.addr, align 8, !dbg !6479
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !6480
  %call = call noalias i8* @devres_alloc_node(void (%struct.device*, i8*)* %0, i64 %1, i32 %2, i32 -1) #9, !dbg !6481
  ret i8* %call, !dbg !6482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dmam_device_release(%struct.device* %dev, i8* %res) #1 !dbg !6483 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %device = alloca %struct.dma_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6484, metadata !DIExpression()), !dbg !6485
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !6486, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device, metadata !6488, metadata !DIExpression()), !dbg !6489
  %0 = load i8*, i8** %res.addr, align 8, !dbg !6490
  %1 = bitcast i8* %0 to %struct.dma_device**, !dbg !6491
  %2 = load %struct.dma_device*, %struct.dma_device** %1, align 8, !dbg !6492
  store %struct.dma_device* %2, %struct.dma_device** %device, align 8, !dbg !6493
  %3 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !6494
  call void @dma_async_device_unregister(%struct.dma_device* %3) #9, !dbg !6495
  ret void, !dbg !6496
}

; Function Attrs: noredzone
declare dso_local void @devres_add(%struct.device*, i8*) #4

; Function Attrs: noredzone
declare dso_local void @devres_free(i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dmaengine_unmap_put(%struct.dmaengine_unmap_data* %unmap) #1 !dbg !6497 {
entry:
  %unmap.addr = alloca %struct.dmaengine_unmap_data*, align 8
  store %struct.dmaengine_unmap_data* %unmap, %struct.dmaengine_unmap_data** %unmap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dmaengine_unmap_data** %unmap.addr, metadata !6500, metadata !DIExpression()), !dbg !6501
  %0 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap.addr, align 8, !dbg !6502
  %tobool = icmp ne %struct.dmaengine_unmap_data* %0, null, !dbg !6502
  br i1 %tobool, label %if.then, label %if.end, !dbg !6504

if.then:                                          ; preds = %entry
  %1 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap.addr, align 8, !dbg !6505
  %kref = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %1, i32 0, i32 5, !dbg !6506
  %call = call i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* @dmaengine_unmap) #9, !dbg !6507
  br label %if.end, !dbg !6507

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* %release) #1 !dbg !6509 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !6513, metadata !DIExpression()), !dbg !6514
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !6515, metadata !DIExpression()), !dbg !6516
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !6517
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !6519
  %call = call zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %refcount) #9, !dbg !6520
  br i1 %call, label %if.then, label %if.end, !dbg !6521

if.then:                                          ; preds = %entry
  %1 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !6522
  %2 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !6524
  call void %1(%struct.kref* %2) #9, !dbg !6522
  store i32 1, i32* %retval, align 4, !dbg !6525
  br label %return, !dbg !6525

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6526
  br label %return, !dbg !6526

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !6527
  ret i32 %3, !dbg !6527
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dmaengine_unmap(%struct.kref* %kref) #1 !dbg !6528 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %unmap = alloca %struct.dmaengine_unmap_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dmaengine_unmap_data*, align 8
  %dev = alloca %struct.device*, align 8
  %cnt = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !6529, metadata !DIExpression()), !dbg !6530
  call void @llvm.dbg.declare(metadata %struct.dmaengine_unmap_data** %unmap, metadata !6531, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6533, metadata !DIExpression()), !dbg !6535
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !6535
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !6535
  store i8* %1, i8** %__mptr, align 8, !dbg !6535
  br label %do.body, !dbg !6535

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6536

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6535
  %add.ptr = getelementptr i8, i8* %2, i64 -16, !dbg !6535
  %3 = bitcast i8* %add.ptr to %struct.dmaengine_unmap_data*, !dbg !6535
  store %struct.dmaengine_unmap_data* %3, %struct.dmaengine_unmap_data** %tmp, align 8, !dbg !6536
  %4 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %tmp, align 8, !dbg !6535
  store %struct.dmaengine_unmap_data* %4, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6532
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !6538, metadata !DIExpression()), !dbg !6539
  %5 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6540
  %dev1 = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %5, i32 0, i32 4, !dbg !6541
  %6 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !6541
  store %struct.device* %6, %struct.device** %dev, align 8, !dbg !6539
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !6542, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6544, metadata !DIExpression()), !dbg !6545
  %7 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6546
  %to_cnt = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %7, i32 0, i32 1, !dbg !6547
  %8 = load i8, i8* %to_cnt, align 1, !dbg !6547
  %conv = zext i8 %8 to i32, !dbg !6546
  store i32 %conv, i32* %cnt, align 4, !dbg !6548
  store i32 0, i32* %i, align 4, !dbg !6549
  br label %for.cond, !dbg !6551

for.cond:                                         ; preds = %for.inc, %do.end
  %9 = load i32, i32* %i, align 4, !dbg !6552
  %10 = load i32, i32* %cnt, align 4, !dbg !6554
  %cmp = icmp slt i32 %9, %10, !dbg !6555
  br i1 %cmp, label %for.body, label %for.end, !dbg !6556

for.body:                                         ; preds = %for.cond
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6557
  %12 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6557
  %addr = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %12, i32 0, i32 7, !dbg !6557
  %13 = load i32, i32* %i, align 4, !dbg !6557
  %idxprom = sext i32 %13 to i64, !dbg !6557
  %arrayidx = getelementptr [0 x i64], [0 x i64]* %addr, i64 0, i64 %idxprom, !dbg !6557
  %14 = load i64, i64* %arrayidx, align 8, !dbg !6557
  %15 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6557
  %len = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %15, i32 0, i32 6, !dbg !6557
  %16 = load i64, i64* %len, align 8, !dbg !6557
  call void @dma_unmap_page_attrs(%struct.device* %11, i64 %14, i64 %16, i32 1, i64 0) #9, !dbg !6557
  br label %for.inc, !dbg !6557

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !6558
  %inc = add i32 %17, 1, !dbg !6558
  store i32 %inc, i32* %i, align 4, !dbg !6558
  br label %for.cond, !dbg !6559, !llvm.loop !6560

for.end:                                          ; preds = %for.cond
  %18 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6562
  %from_cnt = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %18, i32 0, i32 2, !dbg !6563
  %19 = load i8, i8* %from_cnt, align 2, !dbg !6563
  %conv3 = zext i8 %19 to i32, !dbg !6562
  %20 = load i32, i32* %cnt, align 4, !dbg !6564
  %add = add i32 %20, %conv3, !dbg !6564
  store i32 %add, i32* %cnt, align 4, !dbg !6564
  br label %for.cond4, !dbg !6565

for.cond4:                                        ; preds = %for.inc12, %for.end
  %21 = load i32, i32* %i, align 4, !dbg !6566
  %22 = load i32, i32* %cnt, align 4, !dbg !6569
  %cmp5 = icmp slt i32 %21, %22, !dbg !6570
  br i1 %cmp5, label %for.body7, label %for.end14, !dbg !6571

for.body7:                                        ; preds = %for.cond4
  %23 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6572
  %24 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6572
  %addr8 = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %24, i32 0, i32 7, !dbg !6572
  %25 = load i32, i32* %i, align 4, !dbg !6572
  %idxprom9 = sext i32 %25 to i64, !dbg !6572
  %arrayidx10 = getelementptr [0 x i64], [0 x i64]* %addr8, i64 0, i64 %idxprom9, !dbg !6572
  %26 = load i64, i64* %arrayidx10, align 8, !dbg !6572
  %27 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6572
  %len11 = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %27, i32 0, i32 6, !dbg !6572
  %28 = load i64, i64* %len11, align 8, !dbg !6572
  call void @dma_unmap_page_attrs(%struct.device* %23, i64 %26, i64 %28, i32 2, i64 0) #9, !dbg !6572
  br label %for.inc12, !dbg !6572

for.inc12:                                        ; preds = %for.body7
  %29 = load i32, i32* %i, align 4, !dbg !6573
  %inc13 = add i32 %29, 1, !dbg !6573
  store i32 %inc13, i32* %i, align 4, !dbg !6573
  br label %for.cond4, !dbg !6574, !llvm.loop !6575

for.end14:                                        ; preds = %for.cond4
  %30 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6577
  %bidi_cnt = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %30, i32 0, i32 3, !dbg !6578
  %31 = load i8, i8* %bidi_cnt, align 1, !dbg !6578
  %conv15 = zext i8 %31 to i32, !dbg !6577
  %32 = load i32, i32* %cnt, align 4, !dbg !6579
  %add16 = add i32 %32, %conv15, !dbg !6579
  store i32 %add16, i32* %cnt, align 4, !dbg !6579
  br label %for.cond17, !dbg !6580

for.cond17:                                       ; preds = %for.inc30, %for.end14
  %33 = load i32, i32* %i, align 4, !dbg !6581
  %34 = load i32, i32* %cnt, align 4, !dbg !6584
  %cmp18 = icmp slt i32 %33, %34, !dbg !6585
  br i1 %cmp18, label %for.body20, label %for.end32, !dbg !6586

for.body20:                                       ; preds = %for.cond17
  %35 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6587
  %addr21 = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %35, i32 0, i32 7, !dbg !6590
  %36 = load i32, i32* %i, align 4, !dbg !6591
  %idxprom22 = sext i32 %36 to i64, !dbg !6587
  %arrayidx23 = getelementptr [0 x i64], [0 x i64]* %addr21, i64 0, i64 %idxprom22, !dbg !6587
  %37 = load i64, i64* %arrayidx23, align 8, !dbg !6587
  %cmp24 = icmp eq i64 %37, 0, !dbg !6592
  br i1 %cmp24, label %if.then, label %if.end, !dbg !6593

if.then:                                          ; preds = %for.body20
  br label %for.inc30, !dbg !6594

if.end:                                           ; preds = %for.body20
  %38 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6595
  %39 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6595
  %addr26 = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %39, i32 0, i32 7, !dbg !6595
  %40 = load i32, i32* %i, align 4, !dbg !6595
  %idxprom27 = sext i32 %40 to i64, !dbg !6595
  %arrayidx28 = getelementptr [0 x i64], [0 x i64]* %addr26, i64 0, i64 %idxprom27, !dbg !6595
  %41 = load i64, i64* %arrayidx28, align 8, !dbg !6595
  %42 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6595
  %len29 = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %42, i32 0, i32 6, !dbg !6595
  %43 = load i64, i64* %len29, align 8, !dbg !6595
  call void @dma_unmap_page_attrs(%struct.device* %38, i64 %41, i64 %43, i32 0, i64 0) #9, !dbg !6595
  br label %for.inc30, !dbg !6596

for.inc30:                                        ; preds = %if.end, %if.then
  %44 = load i32, i32* %i, align 4, !dbg !6597
  %inc31 = add i32 %44, 1, !dbg !6597
  store i32 %inc31, i32* %i, align 4, !dbg !6597
  br label %for.cond17, !dbg !6598, !llvm.loop !6599

for.end32:                                        ; preds = %for.cond17
  %45 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6601
  %map_cnt = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %45, i32 0, i32 0, !dbg !6602
  %46 = load i8, i8* %map_cnt, align 8, !dbg !6602
  %conv33 = zext i8 %46 to i32, !dbg !6601
  store i32 %conv33, i32* %cnt, align 4, !dbg !6603
  %47 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6604
  %48 = bitcast %struct.dmaengine_unmap_data* %47 to i8*, !dbg !6604
  %49 = load i32, i32* %cnt, align 4, !dbg !6605
  %call = call %struct.dmaengine_unmap_pool* @__get_unmap_pool(i32 %49) #9, !dbg !6606
  %pool = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %call, i32 0, i32 2, !dbg !6607
  %50 = load %struct.mempool_s*, %struct.mempool_s** %pool, align 8, !dbg !6607
  call void @mempool_free(i8* %48, %struct.mempool_s* %50) #9, !dbg !6608
  ret void, !dbg !6609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dmaengine_unmap_data* @dmaengine_get_unmap_data(%struct.device* %dev, i32 %nr, i32 %flags) #1 !dbg !6610 {
entry:
  %retval = alloca %struct.dmaengine_unmap_data*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %nr.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %unmap = alloca %struct.dmaengine_unmap_data*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6613, metadata !DIExpression()), !dbg !6614
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !6615, metadata !DIExpression()), !dbg !6616
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6617, metadata !DIExpression()), !dbg !6618
  call void @llvm.dbg.declare(metadata %struct.dmaengine_unmap_data** %unmap, metadata !6619, metadata !DIExpression()), !dbg !6620
  %0 = load i32, i32* %nr.addr, align 4, !dbg !6621
  %call = call %struct.dmaengine_unmap_pool* @__get_unmap_pool(i32 %0) #9, !dbg !6622
  %pool = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %call, i32 0, i32 2, !dbg !6623
  %1 = load %struct.mempool_s*, %struct.mempool_s** %pool, align 8, !dbg !6623
  %2 = load i32, i32* %flags.addr, align 4, !dbg !6624
  %call1 = call noalias i8* @mempool_alloc(%struct.mempool_s* %1, i32 %2) #9, !dbg !6625
  %3 = bitcast i8* %call1 to %struct.dmaengine_unmap_data*, !dbg !6625
  store %struct.dmaengine_unmap_data* %3, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6626
  %4 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6627
  %tobool = icmp ne %struct.dmaengine_unmap_data* %4, null, !dbg !6627
  br i1 %tobool, label %if.end, label %if.then, !dbg !6629

if.then:                                          ; preds = %entry
  store %struct.dmaengine_unmap_data* null, %struct.dmaengine_unmap_data** %retval, align 8, !dbg !6630
  br label %return, !dbg !6630

if.end:                                           ; preds = %entry
  %5 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6631
  %6 = bitcast %struct.dmaengine_unmap_data* %5 to i8*, !dbg !6632
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false), !dbg !6632
  %7 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6633
  %kref = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %7, i32 0, i32 5, !dbg !6634
  call void @kref_init(%struct.kref* %kref) #9, !dbg !6635
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6636
  %9 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6637
  %dev2 = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %9, i32 0, i32 4, !dbg !6638
  store %struct.device* %8, %struct.device** %dev2, align 8, !dbg !6639
  %10 = load i32, i32* %nr.addr, align 4, !dbg !6640
  %conv = trunc i32 %10 to i8, !dbg !6640
  %11 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6641
  %map_cnt = getelementptr inbounds %struct.dmaengine_unmap_data, %struct.dmaengine_unmap_data* %11, i32 0, i32 0, !dbg !6642
  store i8 %conv, i8* %map_cnt, align 8, !dbg !6643
  %12 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %unmap, align 8, !dbg !6644
  store %struct.dmaengine_unmap_data* %12, %struct.dmaengine_unmap_data** %retval, align 8, !dbg !6645
  br label %return, !dbg !6645

return:                                           ; preds = %if.end, %if.then
  %13 = load %struct.dmaengine_unmap_data*, %struct.dmaengine_unmap_data** %retval, align 8, !dbg !6646
  ret %struct.dmaengine_unmap_data* %13, !dbg !6646
}

; Function Attrs: noredzone
declare dso_local noalias i8* @mempool_alloc(%struct.mempool_s*, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dmaengine_unmap_pool* @__get_unmap_pool(i32 %nr) #1 !dbg !6647 {
entry:
  %retval = alloca %struct.dmaengine_unmap_pool*, align 8
  %nr.addr = alloca i32, align 4
  %order = alloca i32, align 4
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !6651, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.declare(metadata i32* %order, metadata !6653, metadata !DIExpression()), !dbg !6654
  %0 = load i32, i32* %nr.addr, align 4, !dbg !6655
  %call = call i32 @get_count_order(i32 %0) #9, !dbg !6656
  store i32 %call, i32* %order, align 4, !dbg !6654
  %1 = load i32, i32* %order, align 4, !dbg !6657
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
  ], !dbg !6658

sw.bb:                                            ; preds = %entry, %entry
  store %struct.dmaengine_unmap_pool* getelementptr inbounds ([1 x %struct.dmaengine_unmap_pool], [1 x %struct.dmaengine_unmap_pool]* @unmap_pool, i64 0, i64 0), %struct.dmaengine_unmap_pool** %retval, align 8, !dbg !6659
  br label %return, !dbg !6659

sw.default:                                       ; preds = %entry
  br label %do.body, !dbg !6661

do.body:                                          ; preds = %sw.default
  br label %do.body1, !dbg !6662

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !6664

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !6662

do.body2:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 1401, i32 0, i64 12) #11, !dbg !6666, !srcloc !6668
  br label %do.end3, !dbg !6666

do.end3:                                          ; preds = %do.body2
  br label %do.body4, !dbg !6662

do.body4:                                         ; preds = %do.end3
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 292) #11, !dbg !6669, !srcloc !6672
  unreachable, !dbg !6673

do.end5:                                          ; No predecessors!
  br label %do.end6, !dbg !6662

do.end6:                                          ; preds = %do.end5
  store %struct.dmaengine_unmap_pool* null, %struct.dmaengine_unmap_pool** %retval, align 8, !dbg !6674
  br label %return, !dbg !6674

return:                                           ; preds = %do.end6, %sw.bb
  %2 = load %struct.dmaengine_unmap_pool*, %struct.dmaengine_unmap_pool** %retval, align 8, !dbg !6675
  ret %struct.dmaengine_unmap_pool* %2, !dbg !6675
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dma_async_tx_descriptor_init(%struct.dma_async_tx_descriptor* %tx, %struct.dma_chan* %chan) #1 !dbg !6676 {
entry:
  %tx.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  store %struct.dma_async_tx_descriptor* %tx, %struct.dma_async_tx_descriptor** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %tx.addr, metadata !6679, metadata !DIExpression()), !dbg !6680
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !6681, metadata !DIExpression()), !dbg !6682
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6683
  %1 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !6684
  %chan1 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %1, i32 0, i32 3, !dbg !6685
  store %struct.dma_chan* %0, %struct.dma_chan** %chan1, align 8, !dbg !6686
  ret void, !dbg !6687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dmaengine_desc_attach_metadata(%struct.dma_async_tx_descriptor* %desc, i8* %data, i64 %len) #1 !dbg !6688 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.dma_async_tx_descriptor* %desc, %struct.dma_async_tx_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %desc.addr, metadata !6689, metadata !DIExpression()), !dbg !6690
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6691, metadata !DIExpression()), !dbg !6692
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6693, metadata !DIExpression()), !dbg !6694
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6695, metadata !DIExpression()), !dbg !6696
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6697
  %tobool = icmp ne %struct.dma_async_tx_descriptor* %0, null, !dbg !6697
  br i1 %tobool, label %if.end, label %if.then, !dbg !6699

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6700
  br label %return, !dbg !6700

if.end:                                           ; preds = %entry
  %1 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6701
  %call = call i32 @desc_check_and_set_metadata_mode(%struct.dma_async_tx_descriptor* %1, i32 1) #9, !dbg !6702
  store i32 %call, i32* %ret, align 4, !dbg !6703
  %2 = load i32, i32* %ret, align 4, !dbg !6704
  %tobool1 = icmp ne i32 %2, 0, !dbg !6704
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !6706

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %ret, align 4, !dbg !6707
  store i32 %3, i32* %retval, align 4, !dbg !6708
  br label %return, !dbg !6708

if.end3:                                          ; preds = %if.end
  %4 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6709
  %metadata_ops = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %4, i32 0, i32 11, !dbg !6711
  %5 = load %struct.dma_descriptor_metadata_ops*, %struct.dma_descriptor_metadata_ops** %metadata_ops, align 8, !dbg !6711
  %tobool4 = icmp ne %struct.dma_descriptor_metadata_ops* %5, null, !dbg !6709
  br i1 %tobool4, label %lor.lhs.false, label %if.then7, !dbg !6712

lor.lhs.false:                                    ; preds = %if.end3
  %6 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6713
  %metadata_ops5 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %6, i32 0, i32 11, !dbg !6714
  %7 = load %struct.dma_descriptor_metadata_ops*, %struct.dma_descriptor_metadata_ops** %metadata_ops5, align 8, !dbg !6714
  %attach = getelementptr inbounds %struct.dma_descriptor_metadata_ops, %struct.dma_descriptor_metadata_ops* %7, i32 0, i32 0, !dbg !6715
  %8 = load i32 (%struct.dma_async_tx_descriptor*, i8*, i64)*, i32 (%struct.dma_async_tx_descriptor*, i8*, i64)** %attach, align 8, !dbg !6715
  %tobool6 = icmp ne i32 (%struct.dma_async_tx_descriptor*, i8*, i64)* %8, null, !dbg !6713
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !6716

if.then7:                                         ; preds = %lor.lhs.false, %if.end3
  store i32 -524, i32* %retval, align 4, !dbg !6717
  br label %return, !dbg !6717

if.end8:                                          ; preds = %lor.lhs.false
  %9 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6718
  %metadata_ops9 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %9, i32 0, i32 11, !dbg !6719
  %10 = load %struct.dma_descriptor_metadata_ops*, %struct.dma_descriptor_metadata_ops** %metadata_ops9, align 8, !dbg !6719
  %attach10 = getelementptr inbounds %struct.dma_descriptor_metadata_ops, %struct.dma_descriptor_metadata_ops* %10, i32 0, i32 0, !dbg !6720
  %11 = load i32 (%struct.dma_async_tx_descriptor*, i8*, i64)*, i32 (%struct.dma_async_tx_descriptor*, i8*, i64)** %attach10, align 8, !dbg !6720
  %12 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6721
  %13 = load i8*, i8** %data.addr, align 8, !dbg !6722
  %14 = load i64, i64* %len.addr, align 8, !dbg !6723
  %call11 = call i32 %11(%struct.dma_async_tx_descriptor* %12, i8* %13, i64 %14) #9, !dbg !6718
  store i32 %call11, i32* %retval, align 4, !dbg !6724
  br label %return, !dbg !6724

return:                                           ; preds = %if.end8, %if.then7, %if.then2, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !6725
  ret i32 %15, !dbg !6725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @desc_check_and_set_metadata_mode(%struct.dma_async_tx_descriptor* %desc, i32 %mode) #1 !dbg !6726 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.dma_async_tx_descriptor* %desc, %struct.dma_async_tx_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %desc.addr, metadata !6729, metadata !DIExpression()), !dbg !6730
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6731, metadata !DIExpression()), !dbg !6732
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6733
  %desc_metadata_mode = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %0, i32 0, i32 10, !dbg !6735
  %1 = load i32, i32* %desc_metadata_mode, align 8, !dbg !6735
  %tobool = icmp ne i32 %1, 0, !dbg !6733
  br i1 %tobool, label %if.else3, label %if.then, !dbg !6736

if.then:                                          ; preds = %entry
  %2 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6737
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %2, i32 0, i32 3, !dbg !6740
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6740
  %4 = load i32, i32* %mode.addr, align 4, !dbg !6741
  %call = call zeroext i1 @dmaengine_is_metadata_mode_supported(%struct.dma_chan* %3, i32 %4) #9, !dbg !6742
  br i1 %call, label %if.then1, label %if.else, !dbg !6743

if.then1:                                         ; preds = %if.then
  %5 = load i32, i32* %mode.addr, align 4, !dbg !6744
  %6 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6745
  %desc_metadata_mode2 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %6, i32 0, i32 10, !dbg !6746
  store i32 %5, i32* %desc_metadata_mode2, align 8, !dbg !6747
  br label %if.end, !dbg !6745

if.else:                                          ; preds = %if.then
  store i32 -524, i32* %retval, align 4, !dbg !6748
  br label %return, !dbg !6748

if.end:                                           ; preds = %if.then1
  br label %if.end7, !dbg !6749

if.else3:                                         ; preds = %entry
  %7 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6750
  %desc_metadata_mode4 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %7, i32 0, i32 10, !dbg !6752
  %8 = load i32, i32* %desc_metadata_mode4, align 8, !dbg !6752
  %9 = load i32, i32* %mode.addr, align 4, !dbg !6753
  %cmp = icmp ne i32 %8, %9, !dbg !6754
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !6755

if.then5:                                         ; preds = %if.else3
  store i32 -22, i32* %retval, align 4, !dbg !6756
  br label %return, !dbg !6756

if.end6:                                          ; preds = %if.else3
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  store i32 0, i32* %retval, align 4, !dbg !6758
  br label %return, !dbg !6758

return:                                           ; preds = %if.end7, %if.then5, %if.else
  %10 = load i32, i32* %retval, align 4, !dbg !6759
  ret i32 %10, !dbg !6759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @dmaengine_desc_get_metadata_ptr(%struct.dma_async_tx_descriptor* %desc, i64* %payload_len, i64* %max_len) #1 !dbg !6760 {
entry:
  %retval = alloca i8*, align 8
  %desc.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  %payload_len.addr = alloca i64*, align 8
  %max_len.addr = alloca i64*, align 8
  %ret = alloca i32, align 4
  store %struct.dma_async_tx_descriptor* %desc, %struct.dma_async_tx_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %desc.addr, metadata !6761, metadata !DIExpression()), !dbg !6762
  store i64* %payload_len, i64** %payload_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %payload_len.addr, metadata !6763, metadata !DIExpression()), !dbg !6764
  store i64* %max_len, i64** %max_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %max_len.addr, metadata !6765, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6767, metadata !DIExpression()), !dbg !6768
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6769
  %tobool = icmp ne %struct.dma_async_tx_descriptor* %0, null, !dbg !6769
  br i1 %tobool, label %if.end, label %if.then, !dbg !6771

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -22) #9, !dbg !6772
  store i8* %call, i8** %retval, align 8, !dbg !6773
  br label %return, !dbg !6773

if.end:                                           ; preds = %entry
  %1 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6774
  %call1 = call i32 @desc_check_and_set_metadata_mode(%struct.dma_async_tx_descriptor* %1, i32 2) #9, !dbg !6775
  store i32 %call1, i32* %ret, align 4, !dbg !6776
  %2 = load i32, i32* %ret, align 4, !dbg !6777
  %tobool2 = icmp ne i32 %2, 0, !dbg !6777
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !6779

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* %ret, align 4, !dbg !6780
  %conv = sext i32 %3 to i64, !dbg !6780
  %call4 = call i8* @ERR_PTR(i64 %conv) #9, !dbg !6781
  store i8* %call4, i8** %retval, align 8, !dbg !6782
  br label %return, !dbg !6782

if.end5:                                          ; preds = %if.end
  %4 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6783
  %metadata_ops = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %4, i32 0, i32 11, !dbg !6785
  %5 = load %struct.dma_descriptor_metadata_ops*, %struct.dma_descriptor_metadata_ops** %metadata_ops, align 8, !dbg !6785
  %tobool6 = icmp ne %struct.dma_descriptor_metadata_ops* %5, null, !dbg !6783
  br i1 %tobool6, label %lor.lhs.false, label %if.then9, !dbg !6786

lor.lhs.false:                                    ; preds = %if.end5
  %6 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6787
  %metadata_ops7 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %6, i32 0, i32 11, !dbg !6788
  %7 = load %struct.dma_descriptor_metadata_ops*, %struct.dma_descriptor_metadata_ops** %metadata_ops7, align 8, !dbg !6788
  %get_ptr = getelementptr inbounds %struct.dma_descriptor_metadata_ops, %struct.dma_descriptor_metadata_ops* %7, i32 0, i32 1, !dbg !6789
  %8 = load i8* (%struct.dma_async_tx_descriptor*, i64*, i64*)*, i8* (%struct.dma_async_tx_descriptor*, i64*, i64*)** %get_ptr, align 8, !dbg !6789
  %tobool8 = icmp ne i8* (%struct.dma_async_tx_descriptor*, i64*, i64*)* %8, null, !dbg !6787
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !6790

if.then9:                                         ; preds = %lor.lhs.false, %if.end5
  %call10 = call i8* @ERR_PTR(i64 -524) #9, !dbg !6791
  store i8* %call10, i8** %retval, align 8, !dbg !6792
  br label %return, !dbg !6792

if.end11:                                         ; preds = %lor.lhs.false
  %9 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6793
  %metadata_ops12 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %9, i32 0, i32 11, !dbg !6794
  %10 = load %struct.dma_descriptor_metadata_ops*, %struct.dma_descriptor_metadata_ops** %metadata_ops12, align 8, !dbg !6794
  %get_ptr13 = getelementptr inbounds %struct.dma_descriptor_metadata_ops, %struct.dma_descriptor_metadata_ops* %10, i32 0, i32 1, !dbg !6795
  %11 = load i8* (%struct.dma_async_tx_descriptor*, i64*, i64*)*, i8* (%struct.dma_async_tx_descriptor*, i64*, i64*)** %get_ptr13, align 8, !dbg !6795
  %12 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6796
  %13 = load i64*, i64** %payload_len.addr, align 8, !dbg !6797
  %14 = load i64*, i64** %max_len.addr, align 8, !dbg !6798
  %call14 = call i8* %11(%struct.dma_async_tx_descriptor* %12, i64* %13, i64* %14) #9, !dbg !6793
  store i8* %call14, i8** %retval, align 8, !dbg !6799
  br label %return, !dbg !6799

return:                                           ; preds = %if.end11, %if.then9, %if.then3, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !6800
  ret i8* %15, !dbg !6800
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dmaengine_desc_set_metadata_len(%struct.dma_async_tx_descriptor* %desc, i64 %payload_len) #1 !dbg !6801 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  %payload_len.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.dma_async_tx_descriptor* %desc, %struct.dma_async_tx_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %desc.addr, metadata !6802, metadata !DIExpression()), !dbg !6803
  store i64 %payload_len, i64* %payload_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %payload_len.addr, metadata !6804, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6806, metadata !DIExpression()), !dbg !6807
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6808
  %tobool = icmp ne %struct.dma_async_tx_descriptor* %0, null, !dbg !6808
  br i1 %tobool, label %if.end, label %if.then, !dbg !6810

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6811
  br label %return, !dbg !6811

if.end:                                           ; preds = %entry
  %1 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6812
  %call = call i32 @desc_check_and_set_metadata_mode(%struct.dma_async_tx_descriptor* %1, i32 2) #9, !dbg !6813
  store i32 %call, i32* %ret, align 4, !dbg !6814
  %2 = load i32, i32* %ret, align 4, !dbg !6815
  %tobool1 = icmp ne i32 %2, 0, !dbg !6815
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !6817

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %ret, align 4, !dbg !6818
  store i32 %3, i32* %retval, align 4, !dbg !6819
  br label %return, !dbg !6819

if.end3:                                          ; preds = %if.end
  %4 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6820
  %metadata_ops = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %4, i32 0, i32 11, !dbg !6822
  %5 = load %struct.dma_descriptor_metadata_ops*, %struct.dma_descriptor_metadata_ops** %metadata_ops, align 8, !dbg !6822
  %tobool4 = icmp ne %struct.dma_descriptor_metadata_ops* %5, null, !dbg !6820
  br i1 %tobool4, label %lor.lhs.false, label %if.then7, !dbg !6823

lor.lhs.false:                                    ; preds = %if.end3
  %6 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6824
  %metadata_ops5 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %6, i32 0, i32 11, !dbg !6825
  %7 = load %struct.dma_descriptor_metadata_ops*, %struct.dma_descriptor_metadata_ops** %metadata_ops5, align 8, !dbg !6825
  %set_len = getelementptr inbounds %struct.dma_descriptor_metadata_ops, %struct.dma_descriptor_metadata_ops* %7, i32 0, i32 2, !dbg !6826
  %8 = load i32 (%struct.dma_async_tx_descriptor*, i64)*, i32 (%struct.dma_async_tx_descriptor*, i64)** %set_len, align 8, !dbg !6826
  %tobool6 = icmp ne i32 (%struct.dma_async_tx_descriptor*, i64)* %8, null, !dbg !6824
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !6827

if.then7:                                         ; preds = %lor.lhs.false, %if.end3
  store i32 -524, i32* %retval, align 4, !dbg !6828
  br label %return, !dbg !6828

if.end8:                                          ; preds = %lor.lhs.false
  %9 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6829
  %metadata_ops9 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %9, i32 0, i32 11, !dbg !6830
  %10 = load %struct.dma_descriptor_metadata_ops*, %struct.dma_descriptor_metadata_ops** %metadata_ops9, align 8, !dbg !6830
  %set_len10 = getelementptr inbounds %struct.dma_descriptor_metadata_ops, %struct.dma_descriptor_metadata_ops* %10, i32 0, i32 2, !dbg !6831
  %11 = load i32 (%struct.dma_async_tx_descriptor*, i64)*, i32 (%struct.dma_async_tx_descriptor*, i64)** %set_len10, align 8, !dbg !6831
  %12 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !6832
  %13 = load i64, i64* %payload_len.addr, align 8, !dbg !6833
  %call11 = call i32 %11(%struct.dma_async_tx_descriptor* %12, i64 %13) #9, !dbg !6829
  store i32 %call11, i32* %retval, align 4, !dbg !6834
  br label %return, !dbg !6834

return:                                           ; preds = %if.end8, %if.then7, %if.then2, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !6835
  ret i32 %14, !dbg !6835
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dma_wait_for_async_tx(%struct.dma_async_tx_descriptor* %tx) #1 !dbg !6836 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4442, metadata !DIExpression()), !dbg !6839
  %retval = alloca i32, align 4
  %tx.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  %dma_sync_wait_timeout = alloca i64, align 8
  store %struct.dma_async_tx_descriptor* %tx, %struct.dma_async_tx_descriptor** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %tx.addr, metadata !6841, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.declare(metadata i64* %dma_sync_wait_timeout, metadata !6843, metadata !DIExpression()), !dbg !6844
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !6845
  store i32 5000, i32* %m.addr.i, align 4
  %1 = load i32, i32* %m.addr.i, align 4, !dbg !6846
  %2 = call i1 @llvm.is.constant.i32(i32 %1) #11, !dbg !6847
  br i1 %2, label %if.then.i, label %if.else.i, !dbg !6848

if.then.i:                                        ; preds = %entry
  %3 = load i32, i32* %m.addr.i, align 4, !dbg !6849
  %cmp.i = icmp slt i32 %3, 0, !dbg !6850
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6851

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !6852
  br label %msecs_to_jiffies.exit, !dbg !6852

if.end.i:                                         ; preds = %if.then.i
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !6853
  %call.i = call i64 @_msecs_to_jiffies(i32 %4) #12, !dbg !6854
  store i64 %call.i, i64* %retval.i, align 8, !dbg !6855
  br label %msecs_to_jiffies.exit, !dbg !6855

if.else.i:                                        ; preds = %entry
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !6856
  %call2.i = call i64 @__msecs_to_jiffies(i32 %5) #12, !dbg !6857
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !6858
  br label %msecs_to_jiffies.exit, !dbg !6858

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %6 = load i64, i64* %retval.i, align 8, !dbg !6859
  %add = add i64 %0, %6, !dbg !6860
  store i64 %add, i64* %dma_sync_wait_timeout, align 8, !dbg !6844
  %7 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !6861
  %tobool = icmp ne %struct.dma_async_tx_descriptor* %7, null, !dbg !6861
  br i1 %tobool, label %if.end, label %if.then, !dbg !6863

if.then:                                          ; preds = %msecs_to_jiffies.exit
  store i32 0, i32* %retval, align 4, !dbg !6864
  br label %return, !dbg !6864

if.end:                                           ; preds = %msecs_to_jiffies.exit
  br label %while.cond, !dbg !6865

while.cond:                                       ; preds = %if.end3, %if.end
  %8 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !6866
  %cookie = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %8, i32 0, i32 0, !dbg !6867
  %9 = load i32, i32* %cookie, align 8, !dbg !6867
  %cmp = icmp eq i32 %9, -16, !dbg !6868
  br i1 %cmp, label %while.body, label %while.end, !dbg !6865

while.body:                                       ; preds = %while.cond
  %10 = load volatile i64, i64* @jiffies, align 8, !dbg !6869
  %11 = load i64, i64* %dma_sync_wait_timeout, align 8, !dbg !6869
  %sub = sub i64 %10, %11, !dbg !6869
  %cmp1 = icmp sge i64 %sub, 0, !dbg !6869
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6872

if.then2:                                         ; preds = %while.body
  %12 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !6873
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %12, i32 0, i32 3, !dbg !6873
  %13 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6873
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %13, i32 0, i32 0, !dbg !6873
  %14 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !6873
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %14, i32 0, i32 15, !dbg !6873
  %15 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6873
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %15, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.dma_wait_for_async_tx, i64 0, i64 0)) #10, !dbg !6873
  store i32 3, i32* %retval, align 4, !dbg !6875
  br label %return, !dbg !6875

if.end3:                                          ; preds = %while.body
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !6876, !srcloc !4502
  br label %while.cond, !dbg !6865, !llvm.loop !6879

while.end:                                        ; preds = %while.cond
  %16 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !6881
  %chan4 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %16, i32 0, i32 3, !dbg !6882
  %17 = load %struct.dma_chan*, %struct.dma_chan** %chan4, align 8, !dbg !6882
  %18 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !6883
  %cookie5 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %18, i32 0, i32 0, !dbg !6884
  %19 = load i32, i32* %cookie5, align 8, !dbg !6884
  %call6 = call i32 @dma_sync_wait(%struct.dma_chan* %17, i32 %19) #9, !dbg !6885
  store i32 %call6, i32* %retval, align 4, !dbg !6886
  br label %return, !dbg !6886

return:                                           ; preds = %while.end, %if.then2, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !6887
  ret i32 %20, !dbg !6887
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dma_run_dependencies(%struct.dma_async_tx_descriptor* %tx) #1 !dbg !6888 {
entry:
  %tx.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  %dep = alloca %struct.dma_async_tx_descriptor*, align 8
  %dep_next = alloca %struct.dma_async_tx_descriptor*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  store %struct.dma_async_tx_descriptor* %tx, %struct.dma_async_tx_descriptor** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %tx.addr, metadata !6891, metadata !DIExpression()), !dbg !6892
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %dep, metadata !6893, metadata !DIExpression()), !dbg !6894
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !6895
  %call = call %struct.dma_async_tx_descriptor* @txd_next(%struct.dma_async_tx_descriptor* %0) #9, !dbg !6896
  store %struct.dma_async_tx_descriptor* %call, %struct.dma_async_tx_descriptor** %dep, align 8, !dbg !6894
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %dep_next, metadata !6897, metadata !DIExpression()), !dbg !6898
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !6899, metadata !DIExpression()), !dbg !6900
  %1 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep, align 8, !dbg !6901
  %tobool = icmp ne %struct.dma_async_tx_descriptor* %1, null, !dbg !6901
  br i1 %tobool, label %if.end, label %if.then, !dbg !6903

if.then:                                          ; preds = %entry
  br label %return, !dbg !6904

if.end:                                           ; preds = %entry
  %2 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !6905
  call void @txd_clear_next(%struct.dma_async_tx_descriptor* %2) #9, !dbg !6906
  %3 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep, align 8, !dbg !6907
  %chan1 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %3, i32 0, i32 3, !dbg !6908
  %4 = load %struct.dma_chan*, %struct.dma_chan** %chan1, align 8, !dbg !6908
  store %struct.dma_chan* %4, %struct.dma_chan** %chan, align 8, !dbg !6909
  br label %for.cond, !dbg !6910

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep, align 8, !dbg !6911
  %tobool2 = icmp ne %struct.dma_async_tx_descriptor* %5, null, !dbg !6914
  br i1 %tobool2, label %for.body, label %for.end, !dbg !6914

for.body:                                         ; preds = %for.cond
  %6 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep, align 8, !dbg !6915
  call void @txd_lock(%struct.dma_async_tx_descriptor* %6) #9, !dbg !6917
  %7 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep, align 8, !dbg !6918
  call void @txd_clear_parent(%struct.dma_async_tx_descriptor* %7) #9, !dbg !6919
  %8 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep, align 8, !dbg !6920
  %call3 = call %struct.dma_async_tx_descriptor* @txd_next(%struct.dma_async_tx_descriptor* %8) #9, !dbg !6921
  store %struct.dma_async_tx_descriptor* %call3, %struct.dma_async_tx_descriptor** %dep_next, align 8, !dbg !6922
  %9 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep_next, align 8, !dbg !6923
  %tobool4 = icmp ne %struct.dma_async_tx_descriptor* %9, null, !dbg !6923
  br i1 %tobool4, label %land.lhs.true, label %if.else, !dbg !6925

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep_next, align 8, !dbg !6926
  %chan5 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %10, i32 0, i32 3, !dbg !6927
  %11 = load %struct.dma_chan*, %struct.dma_chan** %chan5, align 8, !dbg !6927
  %12 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6928
  %cmp = icmp eq %struct.dma_chan* %11, %12, !dbg !6929
  br i1 %cmp, label %if.then6, label %if.else, !dbg !6930

if.then6:                                         ; preds = %land.lhs.true
  %13 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep, align 8, !dbg !6931
  call void @txd_clear_next(%struct.dma_async_tx_descriptor* %13) #9, !dbg !6932
  br label %if.end7, !dbg !6932

if.else:                                          ; preds = %land.lhs.true, %for.body
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %dep_next, align 8, !dbg !6933
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  %14 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep, align 8, !dbg !6934
  call void @txd_unlock(%struct.dma_async_tx_descriptor* %14) #9, !dbg !6935
  %15 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep, align 8, !dbg !6936
  %tx_submit = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %15, i32 0, i32 4, !dbg !6937
  %16 = load i32 (%struct.dma_async_tx_descriptor*)*, i32 (%struct.dma_async_tx_descriptor*)** %tx_submit, align 8, !dbg !6937
  %17 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep, align 8, !dbg !6938
  %call8 = call i32 %16(%struct.dma_async_tx_descriptor* %17) #9, !dbg !6936
  br label %for.inc, !dbg !6939

for.inc:                                          ; preds = %if.end7
  %18 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %dep_next, align 8, !dbg !6940
  store %struct.dma_async_tx_descriptor* %18, %struct.dma_async_tx_descriptor** %dep, align 8, !dbg !6941
  br label %for.cond, !dbg !6942, !llvm.loop !6943

for.end:                                          ; preds = %for.cond
  %19 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6945
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %19, i32 0, i32 0, !dbg !6946
  %20 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !6946
  %device_issue_pending = getelementptr inbounds %struct.dma_device, %struct.dma_device* %20, i32 0, i32 48, !dbg !6947
  %21 = load void (%struct.dma_chan*)*, void (%struct.dma_chan*)** %device_issue_pending, align 8, !dbg !6947
  %22 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6948
  call void %21(%struct.dma_chan* %22) #9, !dbg !6945
  br label %return, !dbg !6949

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !6949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @txd_next(%struct.dma_async_tx_descriptor* %txd) #1 !dbg !6950 {
entry:
  %txd.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  store %struct.dma_async_tx_descriptor* %txd, %struct.dma_async_tx_descriptor** %txd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %txd.addr, metadata !6953, metadata !DIExpression()), !dbg !6954
  ret %struct.dma_async_tx_descriptor* null, !dbg !6955
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @txd_clear_next(%struct.dma_async_tx_descriptor* %txd) #1 !dbg !6956 {
entry:
  %txd.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  store %struct.dma_async_tx_descriptor* %txd, %struct.dma_async_tx_descriptor** %txd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %txd.addr, metadata !6957, metadata !DIExpression()), !dbg !6958
  ret void, !dbg !6959
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @txd_lock(%struct.dma_async_tx_descriptor* %txd) #1 !dbg !6960 {
entry:
  %txd.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  store %struct.dma_async_tx_descriptor* %txd, %struct.dma_async_tx_descriptor** %txd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %txd.addr, metadata !6961, metadata !DIExpression()), !dbg !6962
  ret void, !dbg !6963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @txd_clear_parent(%struct.dma_async_tx_descriptor* %txd) #1 !dbg !6964 {
entry:
  %txd.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  store %struct.dma_async_tx_descriptor* %txd, %struct.dma_async_tx_descriptor** %txd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %txd.addr, metadata !6965, metadata !DIExpression()), !dbg !6966
  ret void, !dbg !6967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @txd_unlock(%struct.dma_async_tx_descriptor* %txd) #1 !dbg !6968 {
entry:
  %txd.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  store %struct.dma_async_tx_descriptor* %txd, %struct.dma_async_tx_descriptor** %txd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %txd.addr, metadata !6969, metadata !DIExpression()), !dbg !6970
  ret void, !dbg !6971
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_bus_init() #0 section ".init.text" !dbg !4386 {
entry:
  %retval = alloca i32, align 4
  %err = alloca i32, align 4
  %tmp = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6972, metadata !DIExpression()), !dbg !6973
  %call = call i32 @dmaengine_init_unmap_pool() #10, !dbg !6974
  store i32 %call, i32* %err, align 4, !dbg !6973
  %0 = load i32, i32* %err, align 4, !dbg !6975
  %tobool = icmp ne i32 %0, 0, !dbg !6975
  br i1 %tobool, label %if.then, label %if.end, !dbg !6977

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %err, align 4, !dbg !6978
  store i32 %1, i32* %retval, align 4, !dbg !6979
  br label %return, !dbg !6979

if.end:                                           ; preds = %entry
  %call1 = call i32 @__class_register(%struct.class* @dma_devclass, %struct.lock_class_key* @dma_bus_init.__key) #9, !dbg !6980
  store i32 %call1, i32* %tmp, align 4, !dbg !6980
  %2 = load i32, i32* %tmp, align 4, !dbg !6980
  store i32 %2, i32* %err, align 4, !dbg !6982
  %3 = load i32, i32* %err, align 4, !dbg !6983
  %tobool2 = icmp ne i32 %3, 0, !dbg !6983
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6985

if.then3:                                         ; preds = %if.end
  call void @dmaengine_debugfs_init() #9, !dbg !6986
  br label %if.end4, !dbg !6986

if.end4:                                          ; preds = %if.then3, %if.end
  %4 = load i32, i32* %err, align 4, !dbg !6987
  store i32 %4, i32* %retval, align 4, !dbg !6988
  br label %return, !dbg !6988

return:                                           ; preds = %if.end4, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !6989
  ret i32 %5, !dbg !6989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_fill(i64* %dst, i32 %nbits) #1 !dbg !6990 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !6994, metadata !DIExpression()), !dbg !6995
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !6996, metadata !DIExpression()), !dbg !6997
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6998, metadata !DIExpression()), !dbg !6999
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !7000
  %conv = zext i32 %0 to i64, !dbg !7000
  %add = add i64 %conv, 64, !dbg !7000
  %sub = sub i64 %add, 1, !dbg !7000
  %div = udiv i64 %sub, 64, !dbg !7000
  %mul = mul i64 %div, 8, !dbg !7001
  %conv1 = trunc i64 %mul to i32, !dbg !7000
  store i32 %conv1, i32* %len, align 4, !dbg !6999
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !7002
  %2 = bitcast i64* %1 to i8*, !dbg !7003
  %3 = load i32, i32* %len, align 4, !dbg !7004
  %conv2 = zext i32 %3 to i64, !dbg !7004
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 -1, i64 %conv2, i1 false), !dbg !7003
  ret void, !dbg !7005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #1 !dbg !7006 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7011, metadata !DIExpression()), !dbg !7013
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7015, metadata !DIExpression()), !dbg !7016
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7017, metadata !DIExpression()), !dbg !7019
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7021, metadata !DIExpression()), !dbg !7022
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7023, metadata !DIExpression()), !dbg !7024
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7025, metadata !DIExpression()), !dbg !7026
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7027
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7028
  %div = sdiv i64 %1, 64, !dbg !7028
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7029
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7027
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7030
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7031
  %conv.i = trunc i64 %4 to i32, !dbg !7031
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !7032
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7033
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7033
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !7033
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7034
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7035
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7036
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #11, !dbg !7038
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7039

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7040
  %12 = bitcast i64* %11 to i8*, !dbg !7040
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7040
  %shr.i = ashr i64 %13, 3, !dbg !7040
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7040
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7042
  %and.i = and i64 %14, 7, !dbg !7042
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7042
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7042
  %neg.i = xor i32 %shl.i, -1, !dbg !7043
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #11, !dbg !7044, !srcloc !7045
  br label %arch_clear_bit.exit, !dbg !7046

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7047
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7049
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #11, !dbg !7050, !srcloc !7051
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7052
}

; Function Attrs: noredzone
declare dso_local i64 @find_first_bit(i64*, i64) #4

; Function Attrs: noredzone
declare dso_local i8* @__alloc_percpu(i64, i64) #4

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #1 !dbg !7053 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7057, metadata !DIExpression()), !dbg !7058
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7059, metadata !DIExpression()), !dbg !7060
  ret i1 true, !dbg !7061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #1 !dbg !7062 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7066, metadata !DIExpression()), !dbg !7067
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7068, metadata !DIExpression()), !dbg !7069
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7070, metadata !DIExpression()), !dbg !7071
  ret void, !dbg !7072
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #1 !dbg !7073 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !7074, metadata !DIExpression()), !dbg !7075
  %0 = load i32, i32* %m.addr, align 4, !dbg !7076
  %conv = zext i32 %0 to i64, !dbg !7076
  %add = add i64 %conv, 4, !dbg !7077
  %sub = sub i64 %add, 1, !dbg !7078
  %div = sdiv i64 %sub, 4, !dbg !7079
  ret i64 %div, !dbg !7080
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_lock() #1 !dbg !7081 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !7082, !srcloc !7083
  ret void, !dbg !7084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_unlock() #1 !dbg !7085 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !7086, !srcloc !7087
  br label %do.body, !dbg !7088

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7089

do.end:                                           ; preds = %do.body
  ret void, !dbg !7091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #1 !dbg !7092 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7093, metadata !DIExpression()), !dbg !7094
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7095, metadata !DIExpression()), !dbg !7096
  ret i1 true, !dbg !7097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #1 !dbg !7098 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7099, metadata !DIExpression()), !dbg !7101
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7103, metadata !DIExpression()), !dbg !7104
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7017, metadata !DIExpression()), !dbg !7105
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7021, metadata !DIExpression()), !dbg !7107
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7108, metadata !DIExpression()), !dbg !7109
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7110, metadata !DIExpression()), !dbg !7111
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7112
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7113
  %div = sdiv i64 %1, 64, !dbg !7113
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7114
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7112
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7115
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7116
  %conv.i = trunc i64 %4 to i32, !dbg !7116
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !7117
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7118
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7118
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !7118
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7119
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7120
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7121
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #11, !dbg !7123
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7124

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7125
  %12 = bitcast i64* %11 to i8*, !dbg !7125
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7125
  %shr.i = ashr i64 %13, 3, !dbg !7125
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7125
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7127
  %and.i = and i64 %14, 7, !dbg !7127
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7127
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7127
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #11, !dbg !7128, !srcloc !7129
  br label %arch_set_bit.exit, !dbg !7130

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7131
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7133
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #11, !dbg !7134, !srcloc !7135
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.module* @dma_chan_to_owner(%struct.dma_chan* %chan) #1 !dbg !7137 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !7140, metadata !DIExpression()), !dbg !7141
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7142
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !7143
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !7143
  %owner = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 16, !dbg !7144
  %2 = load %struct.module*, %struct.module** %owner, align 8, !dbg !7144
  ret %struct.module* %2, !dbg !7145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__module_get(%struct.module* %module) #1 !dbg !7146 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !7150, metadata !DIExpression()), !dbg !7151
  ret void, !dbg !7152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #1 !dbg !7153 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !7156, metadata !DIExpression()), !dbg !7157
  ret i1 true, !dbg !7158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_get_unless_zero(%struct.kref* %kref) #1 !dbg !7159 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7162, metadata !DIExpression()), !dbg !7163
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7164
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !7165
  %call = call zeroext i1 @refcount_inc_not_zero(%struct.refcount_struct* %refcount) #9, !dbg !7166
  %conv = zext i1 %call to i32, !dbg !7166
  ret i32 %conv, !dbg !7167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @balance_ref_count(%struct.dma_chan* %chan) #1 !dbg !7168 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %owner = alloca %struct.module*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !7169, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.declare(metadata %struct.module** %owner, metadata !7171, metadata !DIExpression()), !dbg !7172
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7173
  %call = call %struct.module* @dma_chan_to_owner(%struct.dma_chan* %0) #9, !dbg !7174
  store %struct.module* %call, %struct.module** %owner, align 8, !dbg !7172
  br label %while.cond, !dbg !7175

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7176
  %client_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %1, i32 0, i32 9, !dbg !7177
  %2 = load i32, i32* %client_count, align 8, !dbg !7177
  %conv = sext i32 %2 to i64, !dbg !7176
  %3 = load i64, i64* @dmaengine_ref_count, align 8, !dbg !7178
  %cmp = icmp slt i64 %conv, %3, !dbg !7179
  br i1 %cmp, label %while.body, label %while.end, !dbg !7175

while.body:                                       ; preds = %while.cond
  %4 = load %struct.module*, %struct.module** %owner, align 8, !dbg !7180
  call void @__module_get(%struct.module* %4) #9, !dbg !7182
  %5 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7183
  %client_count2 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %5, i32 0, i32 9, !dbg !7184
  %6 = load i32, i32* %client_count2, align 8, !dbg !7185
  %inc = add i32 %6, 1, !dbg !7185
  store i32 %inc, i32* %client_count2, align 8, !dbg !7185
  br label %while.cond, !dbg !7175, !llvm.loop !7186

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #1 !dbg !7189 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !7190, metadata !DIExpression()), !dbg !7191
  ret void, !dbg !7192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_inc_not_zero(%struct.refcount_struct* %r) #1 !dbg !7193 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7197, metadata !DIExpression()), !dbg !7198
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7199
  %call = call zeroext i1 @__refcount_inc_not_zero(%struct.refcount_struct* %0, i32* null) #9, !dbg !7200
  ret i1 %call, !dbg !7201
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_inc_not_zero(%struct.refcount_struct* %r, i32* %oldp) #1 !dbg !7202 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7205, metadata !DIExpression()), !dbg !7206
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !7207, metadata !DIExpression()), !dbg !7208
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7209
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !7210
  %call = call zeroext i1 @__refcount_add_not_zero(i32 1, %struct.refcount_struct* %0, i32* %1) #9, !dbg !7211
  ret i1 %call, !dbg !7212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_add_not_zero(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #1 !dbg !7213 {
entry:
  %v.addr.i5.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i, metadata !7216, metadata !DIExpression()), !dbg !7222
  %old.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i, metadata !7227, metadata !DIExpression()), !dbg !7228
  %new.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i, metadata !7229, metadata !DIExpression()), !dbg !7230
  %success.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i, metadata !7231, metadata !DIExpression()), !dbg !7233
  %_old.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i, metadata !7234, metadata !DIExpression()), !dbg !7233
  %__old.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i, metadata !7235, metadata !DIExpression()), !dbg !7233
  %__new.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i, metadata !7236, metadata !DIExpression()), !dbg !7233
  %__ptr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i, metadata !7237, metadata !DIExpression()), !dbg !7233
  %tmp.i.i = alloca i64, align 8
  %v.addr.i1.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i1.i, metadata !7238, metadata !DIExpression()), !dbg !7240
  %size.addr.i2.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i2.i, metadata !7242, metadata !DIExpression()), !dbg !7243
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7238, metadata !DIExpression()), !dbg !7244
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7242, metadata !DIExpression()), !dbg !7246
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7247, metadata !DIExpression()), !dbg !7248
  %old.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i, metadata !7249, metadata !DIExpression()), !dbg !7250
  %new.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i, metadata !7251, metadata !DIExpression()), !dbg !7252
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7253, metadata !DIExpression()), !dbg !7254
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7255, metadata !DIExpression()), !dbg !7256
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !7257, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.declare(metadata i32* %old, metadata !7259, metadata !DIExpression()), !dbg !7260
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7261
  %call = call i32 @refcount_read(%struct.refcount_struct* %0) #9, !dbg !7262
  store i32 %call, i32* %old, align 4, !dbg !7260
  br label %do.body, !dbg !7263

do.body:                                          ; preds = %atomic_try_cmpxchg_relaxed.exit, %entry
  %1 = load i32, i32* %old, align 4, !dbg !7264
  %tobool = icmp ne i32 %1, 0, !dbg !7264
  br i1 %tobool, label %if.end, label %if.then, !dbg !7267

if.then:                                          ; preds = %do.body
  br label %do.end, !dbg !7268

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !7269

do.cond:                                          ; preds = %if.end
  %2 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7270
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %2, i32 0, i32 0, !dbg !7271
  %3 = load i32, i32* %old, align 4, !dbg !7272
  %4 = load i32, i32* %i.addr, align 4, !dbg !7273
  %add = add i32 %3, %4, !dbg !7274
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32* %old, i32** %old.addr.i, align 8
  store i32 %add, i32* %new.addr.i, align 4
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7275
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !7275
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7276
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7277
  %conv.i.i = trunc i64 %8 to i32, !dbg !7277
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %7, i32 %conv.i.i) #12, !dbg !7278
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7279
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !7279
  call void @kcsan_check_access(i8* %9, i64 %10, i32 7) #12, !dbg !7279
  %11 = load i32*, i32** %old.addr.i, align 8, !dbg !7280
  %12 = bitcast i32* %11 to i8*, !dbg !7280
  store i8* %12, i8** %v.addr.i1.i, align 8
  store i64 4, i64* %size.addr.i2.i, align 8
  %13 = load i8*, i8** %v.addr.i1.i, align 8, !dbg !7281
  %14 = load i64, i64* %size.addr.i2.i, align 8, !dbg !7282
  %conv.i3.i = trunc i64 %14 to i32, !dbg !7282
  %call.i4.i = call zeroext i1 @kasan_check_write(i8* %13, i32 %conv.i3.i) #12, !dbg !7283
  %15 = load i8*, i8** %v.addr.i1.i, align 8, !dbg !7284
  %16 = load i64, i64* %size.addr.i2.i, align 8, !dbg !7284
  call void @kcsan_check_access(i8* %15, i64 %16, i32 7) #12, !dbg !7284
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7285
  %18 = load i32*, i32** %old.addr.i, align 8, !dbg !7286
  %19 = load i32, i32* %new.addr.i, align 4, !dbg !7287
  store %struct.atomic_t* %17, %struct.atomic_t** %v.addr.i5.i, align 8
  store i32* %18, i32** %old.addr.i.i, align 8
  store i32 %19, i32* %new.addr.i.i, align 4
  %20 = load i32*, i32** %old.addr.i.i, align 8, !dbg !7233
  store i32* %20, i32** %_old.i.i, align 8, !dbg !7233
  %21 = load i32*, i32** %_old.i.i, align 8, !dbg !7233
  %22 = load i32, i32* %21, align 4, !dbg !7233
  store i32 %22, i32* %__old.i.i, align 4, !dbg !7233
  %23 = load i32, i32* %new.addr.i.i, align 4, !dbg !7233
  store i32 %23, i32* %__new.i.i, align 4, !dbg !7233
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i, align 8, !dbg !7233
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %24, i32 0, i32 0, !dbg !7233
  store i32* %counter.i.i, i32** %__ptr.i.i, align 8, !dbg !7233
  %25 = load i32*, i32** %__ptr.i.i, align 8, !dbg !7233
  %26 = load i32, i32* %__old.i.i, align 4, !dbg !7233
  %27 = load i32, i32* %__new.i.i, align 4, !dbg !7233
  %28 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %25, i32 %27, i32* %25, i32 %26) #11, !dbg !7233, !srcloc !7288
  %asmresult.i.i = extractvalue { i8, i32 } %28, 0, !dbg !7233
  %asmresult1.i.i = extractvalue { i8, i32 } %28, 1, !dbg !7233
  store i8 %asmresult.i.i, i8* %success.i.i, align 1, !dbg !7233
  store i32 %asmresult1.i.i, i32* %__old.i.i, align 4, !dbg !7233
  %29 = load i8, i8* %success.i.i, align 1, !dbg !7289
  %tobool.i.i = trunc i8 %29 to i1, !dbg !7289
  %lnot.i.i = xor i1 %tobool.i.i, true, !dbg !7289
  %lnot3.i.i = xor i1 %tobool.i.i, true, !dbg !7289
  %lnot.ext.i.i = zext i1 %lnot3.i.i to i32, !dbg !7289
  %conv.i6.i = sext i32 %lnot.ext.i.i to i64, !dbg !7289
  br i1 %lnot3.i.i, label %if.then.i.i, label %atomic_try_cmpxchg_relaxed.exit, !dbg !7233

if.then.i.i:                                      ; preds = %do.cond
  %30 = load i32, i32* %__old.i.i, align 4, !dbg !7289
  %31 = load i32*, i32** %_old.i.i, align 8, !dbg !7289
  store i32 %30, i32* %31, align 4, !dbg !7289
  br label %atomic_try_cmpxchg_relaxed.exit, !dbg !7289

atomic_try_cmpxchg_relaxed.exit:                  ; preds = %do.cond, %if.then.i.i
  %32 = load i8, i8* %success.i.i, align 1, !dbg !7233
  %tobool5.i.i = trunc i8 %32 to i1, !dbg !7233
  %lnot6.i.i = xor i1 %tobool5.i.i, true, !dbg !7233
  %lnot.ext9.i.i = zext i1 %tobool5.i.i to i32, !dbg !7233
  %conv10.i.i = sext i32 %lnot.ext9.i.i to i64, !dbg !7233
  store i64 %conv10.i.i, i64* %tmp.i.i, align 8, !dbg !7289
  %33 = load i64, i64* %tmp.i.i, align 8, !dbg !7233
  %tobool11.i.i = icmp ne i64 %33, 0, !dbg !7291
  %lnot = xor i1 %tobool11.i.i, true, !dbg !7292
  br i1 %lnot, label %do.body, label %do.end, !dbg !7269, !llvm.loop !7293

do.end:                                           ; preds = %atomic_try_cmpxchg_relaxed.exit, %if.then
  %34 = load i32*, i32** %oldp.addr, align 8, !dbg !7295
  %tobool2 = icmp ne i32* %34, null, !dbg !7295
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7297

if.then3:                                         ; preds = %do.end
  %35 = load i32, i32* %old, align 4, !dbg !7298
  %36 = load i32*, i32** %oldp.addr, align 8, !dbg !7299
  store i32 %35, i32* %36, align 4, !dbg !7300
  br label %if.end4, !dbg !7301

if.end4:                                          ; preds = %if.then3, %do.end
  %37 = load i32, i32* %old, align 4, !dbg !7302
  %cmp = icmp slt i32 %37, 0, !dbg !7302
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7302

lor.rhs:                                          ; preds = %if.end4
  %38 = load i32, i32* %old, align 4, !dbg !7302
  %39 = load i32, i32* %i.addr, align 4, !dbg !7302
  %add5 = add i32 %38, %39, !dbg !7302
  %cmp6 = icmp slt i32 %add5, 0, !dbg !7302
  br label %lor.end, !dbg !7302

lor.end:                                          ; preds = %lor.rhs, %if.end4
  %40 = phi i1 [ true, %if.end4 ], [ %cmp6, %lor.rhs ]
  %lnot7 = xor i1 %40, true, !dbg !7302
  %lnot8 = xor i1 %lnot7, true, !dbg !7302
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !7302
  %conv = sext i32 %lnot.ext to i64, !dbg !7302
  %tobool9 = icmp ne i64 %conv, 0, !dbg !7302
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !7304

if.then10:                                        ; preds = %lor.end
  %41 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7305
  call void @refcount_warn_saturate(%struct.refcount_struct* %41, i32 0) #9, !dbg !7306
  br label %if.end11, !dbg !7306

if.end11:                                         ; preds = %if.then10, %lor.end
  %42 = load i32, i32* %old, align 4, !dbg !7307
  %tobool12 = icmp ne i32 %42, 0, !dbg !7307
  ret i1 %tobool12, !dbg !7308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @refcount_read(%struct.refcount_struct* %r) #1 !dbg !7309 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7314, metadata !DIExpression()), !dbg !7320
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4785, metadata !DIExpression()), !dbg !7324
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4795, metadata !DIExpression()), !dbg !7326
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7327, metadata !DIExpression()), !dbg !7328
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7329, metadata !DIExpression()), !dbg !7330
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7331
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !7332
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7333
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !7333
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7334
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !7335
  %conv.i.i = trunc i64 %4 to i32, !dbg !7335
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #12, !dbg !7336
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7337
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !7337
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !7337
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7338
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7339
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !7339
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !7339
  ret i32 %9, !dbg !7340
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_zero(i64* %dst, i32 %nbits) #1 !dbg !7341 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !7342, metadata !DIExpression()), !dbg !7343
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !7344, metadata !DIExpression()), !dbg !7345
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7346, metadata !DIExpression()), !dbg !7347
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !7348
  %conv = zext i32 %0 to i64, !dbg !7348
  %add = add i64 %conv, 64, !dbg !7348
  %sub = sub i64 %add, 1, !dbg !7348
  %div = udiv i64 %sub, 64, !dbg !7348
  %mul = mul i64 %div, 8, !dbg !7349
  %conv1 = trunc i64 %mul to i32, !dbg !7348
  store i32 %conv1, i32* %len, align 4, !dbg !7347
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !7350
  %2 = bitcast i64* %1 to i8*, !dbg !7351
  %3 = load i32, i32* %len, align 4, !dbg !7352
  %conv2 = zext i32 %3 to i64, !dbg !7352
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 %conv2, i1 false), !dbg !7351
  ret void, !dbg !7353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_chan* @private_candidate(%struct.dma_cap_mask_t* %mask, %struct.dma_device* %dev, i1 (%struct.dma_chan*, i8*)* %fn, i8* %fn_param) #1 !dbg !7354 {
entry:
  %retval = alloca %struct.dma_chan*, align 8
  %mask.addr = alloca %struct.dma_cap_mask_t*, align 8
  %dev.addr = alloca %struct.dma_device*, align 8
  %fn.addr = alloca i1 (%struct.dma_chan*, i8*)*, align 8
  %fn_param.addr = alloca i8*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dma_chan*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.dma_chan*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp24 = alloca %struct.dma_chan*, align 8
  %__mptr42 = alloca i8*, align 8
  %tmp47 = alloca %struct.dma_chan*, align 8
  store %struct.dma_cap_mask_t* %mask, %struct.dma_cap_mask_t** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %mask.addr, metadata !7357, metadata !DIExpression()), !dbg !7358
  store %struct.dma_device* %dev, %struct.dma_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %dev.addr, metadata !7359, metadata !DIExpression()), !dbg !7360
  store i1 (%struct.dma_chan*, i8*)* %fn, i1 (%struct.dma_chan*, i8*)** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (%struct.dma_chan*, i8*)** %fn.addr, metadata !7361, metadata !DIExpression()), !dbg !7362
  store i8* %fn_param, i8** %fn_param.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fn_param.addr, metadata !7363, metadata !DIExpression()), !dbg !7364
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !7365, metadata !DIExpression()), !dbg !7366
  %0 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %mask.addr, align 8, !dbg !7367
  %tobool = icmp ne %struct.dma_cap_mask_t* %0, null, !dbg !7367
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7369

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.dma_device*, %struct.dma_device** %dev.addr, align 8, !dbg !7370
  %2 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %mask.addr, align 8, !dbg !7371
  %call = call i32 @dma_device_satisfies_mask(%struct.dma_device* %1, %struct.dma_cap_mask_t* %2) #9, !dbg !7372
  %tobool1 = icmp ne i32 %call, 0, !dbg !7372
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7373

if.then:                                          ; preds = %land.lhs.true
  store %struct.dma_chan* null, %struct.dma_chan** %retval, align 8, !dbg !7374
  br label %return, !dbg !7374

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load %struct.dma_device*, %struct.dma_device** %dev.addr, align 8, !dbg !7376
  %chancnt = getelementptr inbounds %struct.dma_device, %struct.dma_device* %3, i32 0, i32 1, !dbg !7378
  %4 = load i32, i32* %chancnt, align 4, !dbg !7378
  %cmp = icmp ugt i32 %4, 1, !dbg !7379
  br i1 %cmp, label %land.lhs.true2, label %if.end18, !dbg !7380

land.lhs.true2:                                   ; preds = %if.end
  %5 = load %struct.dma_device*, %struct.dma_device** %dev.addr, align 8, !dbg !7381
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %5, i32 0, i32 6, !dbg !7381
  %call3 = call i32 @__dma_has_cap(i32 8, %struct.dma_cap_mask_t* %cap_mask) #9, !dbg !7381
  %tobool4 = icmp ne i32 %call3, 0, !dbg !7381
  br i1 %tobool4, label %if.end18, label %if.then5, !dbg !7382

if.then5:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7383, metadata !DIExpression()), !dbg !7386
  %6 = load %struct.dma_device*, %struct.dma_device** %dev.addr, align 8, !dbg !7386
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %6, i32 0, i32 3, !dbg !7386
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %channels, i32 0, i32 0, !dbg !7386
  %7 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7386
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !7386
  store i8* %8, i8** %__mptr, align 8, !dbg !7386
  br label %do.body, !dbg !7386

do.body:                                          ; preds = %if.then5
  br label %do.end, !dbg !7387

do.end:                                           ; preds = %do.body
  %9 = load i8*, i8** %__mptr, align 8, !dbg !7386
  %add.ptr = getelementptr i8, i8* %9, i64 -48, !dbg !7386
  %10 = bitcast i8* %add.ptr to %struct.dma_chan*, !dbg !7386
  store %struct.dma_chan* %10, %struct.dma_chan** %tmp, align 8, !dbg !7387
  %11 = load %struct.dma_chan*, %struct.dma_chan** %tmp, align 8, !dbg !7386
  store %struct.dma_chan* %11, %struct.dma_chan** %chan, align 8, !dbg !7389
  br label %for.cond, !dbg !7389

for.cond:                                         ; preds = %do.end15, %do.end
  %12 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7390
  %device_node = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %12, i32 0, i32 7, !dbg !7390
  %13 = load %struct.dma_device*, %struct.dma_device** %dev.addr, align 8, !dbg !7390
  %channels6 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %13, i32 0, i32 3, !dbg !7390
  %cmp7 = icmp eq %struct.list_head* %device_node, %channels6, !dbg !7390
  %lnot = xor i1 %cmp7, true, !dbg !7390
  br i1 %lnot, label %for.body, label %for.end, !dbg !7389

for.body:                                         ; preds = %for.cond
  %14 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7392
  %client_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %14, i32 0, i32 9, !dbg !7395
  %15 = load i32, i32* %client_count, align 8, !dbg !7395
  %tobool8 = icmp ne i32 %15, 0, !dbg !7392
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7396

if.then9:                                         ; preds = %for.body
  store %struct.dma_chan* null, %struct.dma_chan** %retval, align 8, !dbg !7397
  br label %return, !dbg !7397

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !7398

for.inc:                                          ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !7399, metadata !DIExpression()), !dbg !7401
  %16 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7401
  %device_node12 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %16, i32 0, i32 7, !dbg !7401
  %next13 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node12, i32 0, i32 0, !dbg !7401
  %17 = load %struct.list_head*, %struct.list_head** %next13, align 8, !dbg !7401
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !7401
  store i8* %18, i8** %__mptr11, align 8, !dbg !7401
  br label %do.body14, !dbg !7401

do.body14:                                        ; preds = %for.inc
  br label %do.end15, !dbg !7402

do.end15:                                         ; preds = %do.body14
  %19 = load i8*, i8** %__mptr11, align 8, !dbg !7401
  %add.ptr17 = getelementptr i8, i8* %19, i64 -48, !dbg !7401
  %20 = bitcast i8* %add.ptr17 to %struct.dma_chan*, !dbg !7401
  store %struct.dma_chan* %20, %struct.dma_chan** %tmp16, align 8, !dbg !7402
  %21 = load %struct.dma_chan*, %struct.dma_chan** %tmp16, align 8, !dbg !7401
  store %struct.dma_chan* %21, %struct.dma_chan** %chan, align 8, !dbg !7390
  br label %for.cond, !dbg !7390, !llvm.loop !7404

for.end:                                          ; preds = %for.cond
  br label %if.end18, !dbg !7405

if.end18:                                         ; preds = %for.end, %land.lhs.true2, %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !7406, metadata !DIExpression()), !dbg !7409
  %22 = load %struct.dma_device*, %struct.dma_device** %dev.addr, align 8, !dbg !7409
  %channels20 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %22, i32 0, i32 3, !dbg !7409
  %next21 = getelementptr inbounds %struct.list_head, %struct.list_head* %channels20, i32 0, i32 0, !dbg !7409
  %23 = load %struct.list_head*, %struct.list_head** %next21, align 8, !dbg !7409
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !7409
  store i8* %24, i8** %__mptr19, align 8, !dbg !7409
  br label %do.body22, !dbg !7409

do.body22:                                        ; preds = %if.end18
  br label %do.end23, !dbg !7410

do.end23:                                         ; preds = %do.body22
  %25 = load i8*, i8** %__mptr19, align 8, !dbg !7409
  %add.ptr25 = getelementptr i8, i8* %25, i64 -48, !dbg !7409
  %26 = bitcast i8* %add.ptr25 to %struct.dma_chan*, !dbg !7409
  store %struct.dma_chan* %26, %struct.dma_chan** %tmp24, align 8, !dbg !7410
  %27 = load %struct.dma_chan*, %struct.dma_chan** %tmp24, align 8, !dbg !7409
  store %struct.dma_chan* %27, %struct.dma_chan** %chan, align 8, !dbg !7412
  br label %for.cond26, !dbg !7412

for.cond26:                                       ; preds = %do.end46, %do.end23
  %28 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7413
  %device_node27 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %28, i32 0, i32 7, !dbg !7413
  %29 = load %struct.dma_device*, %struct.dma_device** %dev.addr, align 8, !dbg !7413
  %channels28 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %29, i32 0, i32 3, !dbg !7413
  %cmp29 = icmp eq %struct.list_head* %device_node27, %channels28, !dbg !7413
  %lnot30 = xor i1 %cmp29, true, !dbg !7413
  br i1 %lnot30, label %for.body31, label %for.end49, !dbg !7412

for.body31:                                       ; preds = %for.cond26
  %30 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7415
  %client_count32 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %30, i32 0, i32 9, !dbg !7418
  %31 = load i32, i32* %client_count32, align 8, !dbg !7418
  %tobool33 = icmp ne i32 %31, 0, !dbg !7415
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !7419

if.then34:                                        ; preds = %for.body31
  br label %for.inc41, !dbg !7420

if.end35:                                         ; preds = %for.body31
  %32 = load i1 (%struct.dma_chan*, i8*)*, i1 (%struct.dma_chan*, i8*)** %fn.addr, align 8, !dbg !7422
  %tobool36 = icmp ne i1 (%struct.dma_chan*, i8*)* %32, null, !dbg !7422
  br i1 %tobool36, label %land.lhs.true37, label %if.end40, !dbg !7424

land.lhs.true37:                                  ; preds = %if.end35
  %33 = load i1 (%struct.dma_chan*, i8*)*, i1 (%struct.dma_chan*, i8*)** %fn.addr, align 8, !dbg !7425
  %34 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7426
  %35 = load i8*, i8** %fn_param.addr, align 8, !dbg !7427
  %call38 = call zeroext i1 %33(%struct.dma_chan* %34, i8* %35) #9, !dbg !7425
  br i1 %call38, label %if.end40, label %if.then39, !dbg !7428

if.then39:                                        ; preds = %land.lhs.true37
  br label %for.inc41, !dbg !7429

if.end40:                                         ; preds = %land.lhs.true37, %if.end35
  %36 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7431
  store %struct.dma_chan* %36, %struct.dma_chan** %retval, align 8, !dbg !7432
  br label %return, !dbg !7432

for.inc41:                                        ; preds = %if.then39, %if.then34
  call void @llvm.dbg.declare(metadata i8** %__mptr42, metadata !7433, metadata !DIExpression()), !dbg !7435
  %37 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7435
  %device_node43 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %37, i32 0, i32 7, !dbg !7435
  %next44 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node43, i32 0, i32 0, !dbg !7435
  %38 = load %struct.list_head*, %struct.list_head** %next44, align 8, !dbg !7435
  %39 = bitcast %struct.list_head* %38 to i8*, !dbg !7435
  store i8* %39, i8** %__mptr42, align 8, !dbg !7435
  br label %do.body45, !dbg !7435

do.body45:                                        ; preds = %for.inc41
  br label %do.end46, !dbg !7436

do.end46:                                         ; preds = %do.body45
  %40 = load i8*, i8** %__mptr42, align 8, !dbg !7435
  %add.ptr48 = getelementptr i8, i8* %40, i64 -48, !dbg !7435
  %41 = bitcast i8* %add.ptr48 to %struct.dma_chan*, !dbg !7435
  store %struct.dma_chan* %41, %struct.dma_chan** %tmp47, align 8, !dbg !7436
  %42 = load %struct.dma_chan*, %struct.dma_chan** %tmp47, align 8, !dbg !7435
  store %struct.dma_chan* %42, %struct.dma_chan** %chan, align 8, !dbg !7413
  br label %for.cond26, !dbg !7413, !llvm.loop !7438

for.end49:                                        ; preds = %for.cond26
  store %struct.dma_chan* null, %struct.dma_chan** %retval, align 8, !dbg !7440
  br label %return, !dbg !7440

return:                                           ; preds = %for.end49, %if.end40, %if.then9, %if.then
  %43 = load %struct.dma_chan*, %struct.dma_chan** %retval, align 8, !dbg !7441
  ret %struct.dma_chan* %43, !dbg !7441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_device_satisfies_mask(%struct.dma_device* %device, %struct.dma_cap_mask_t* %want) #1 !dbg !7442 {
entry:
  %device.addr = alloca %struct.dma_device*, align 8
  %want.addr = alloca %struct.dma_cap_mask_t*, align 8
  %has = alloca %struct.dma_cap_mask_t, align 8
  store %struct.dma_device* %device, %struct.dma_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device.addr, metadata !7445, metadata !DIExpression()), !dbg !7446
  store %struct.dma_cap_mask_t* %want, %struct.dma_cap_mask_t** %want.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %want.addr, metadata !7447, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t* %has, metadata !7449, metadata !DIExpression()), !dbg !7450
  %bits = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %has, i32 0, i32 0, !dbg !7451
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !7452
  %0 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %want.addr, align 8, !dbg !7453
  %bits1 = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %0, i32 0, i32 0, !dbg !7454
  %arraydecay2 = getelementptr inbounds [1 x i64], [1 x i64]* %bits1, i64 0, i64 0, !dbg !7453
  %1 = load %struct.dma_device*, %struct.dma_device** %device.addr, align 8, !dbg !7455
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 6, !dbg !7456
  %bits3 = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %cap_mask, i32 0, i32 0, !dbg !7457
  %arraydecay4 = getelementptr inbounds [1 x i64], [1 x i64]* %bits3, i64 0, i64 0, !dbg !7455
  %call = call i32 @bitmap_and(i64* %arraydecay, i64* %arraydecay2, i64* %arraydecay4, i32 16) #9, !dbg !7458
  %2 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %want.addr, align 8, !dbg !7459
  %bits5 = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %2, i32 0, i32 0, !dbg !7460
  %arraydecay6 = getelementptr inbounds [1 x i64], [1 x i64]* %bits5, i64 0, i64 0, !dbg !7459
  %bits7 = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %has, i32 0, i32 0, !dbg !7461
  %arraydecay8 = getelementptr inbounds [1 x i64], [1 x i64]* %bits7, i64 0, i64 0, !dbg !7462
  %call9 = call i32 @bitmap_equal(i64* %arraydecay6, i64* %arraydecay8, i32 16) #9, !dbg !7463
  ret i32 %call9, !dbg !7464
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bitmap_and(i64* %dst, i64* %src1, i64* %src2, i32 %nbits) #1 !dbg !7465 {
entry:
  %retval = alloca i32, align 4
  %dst.addr = alloca i64*, align 8
  %src1.addr = alloca i64*, align 8
  %src2.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !7469, metadata !DIExpression()), !dbg !7470
  store i64* %src1, i64** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src1.addr, metadata !7471, metadata !DIExpression()), !dbg !7472
  store i64* %src2, i64** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src2.addr, metadata !7473, metadata !DIExpression()), !dbg !7474
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !7475, metadata !DIExpression()), !dbg !7476
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !7477
  %1 = call i1 @llvm.is.constant.i32(i32 %0), !dbg !7477
  br i1 %1, label %land.lhs.true, label %if.end, !dbg !7477

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %nbits.addr, align 4, !dbg !7477
  %cmp = icmp ule i32 %2, 64, !dbg !7477
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !7477

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !7477
  %cmp2 = icmp ugt i32 %3, 0, !dbg !7477
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7479

if.then:                                          ; preds = %land.lhs.true1
  %4 = load i64*, i64** %src1.addr, align 8, !dbg !7480
  %5 = load i64, i64* %4, align 8, !dbg !7481
  %6 = load i64*, i64** %src2.addr, align 8, !dbg !7482
  %7 = load i64, i64* %6, align 8, !dbg !7483
  %and = and i64 %5, %7, !dbg !7484
  %8 = load i32, i32* %nbits.addr, align 4, !dbg !7485
  %sub = sub i32 0, %8, !dbg !7485
  %and3 = and i32 %sub, 63, !dbg !7485
  %sh_prom = zext i32 %and3 to i64, !dbg !7485
  %shr = lshr i64 -1, %sh_prom, !dbg !7485
  %and4 = and i64 %and, %shr, !dbg !7486
  %9 = load i64*, i64** %dst.addr, align 8, !dbg !7487
  store i64 %and4, i64* %9, align 8, !dbg !7488
  %cmp5 = icmp ne i64 %and4, 0, !dbg !7489
  %conv = zext i1 %cmp5 to i32, !dbg !7489
  store i32 %conv, i32* %retval, align 4, !dbg !7490
  br label %return, !dbg !7490

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %10 = load i64*, i64** %dst.addr, align 8, !dbg !7491
  %11 = load i64*, i64** %src1.addr, align 8, !dbg !7492
  %12 = load i64*, i64** %src2.addr, align 8, !dbg !7493
  %13 = load i32, i32* %nbits.addr, align 4, !dbg !7494
  %call = call i32 @__bitmap_and(i64* %10, i64* %11, i64* %12, i32 %13) #9, !dbg !7495
  store i32 %call, i32* %retval, align 4, !dbg !7496
  br label %return, !dbg !7496

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !7497
  ret i32 %14, !dbg !7497
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bitmap_equal(i64* %src1, i64* %src2, i32 %nbits) #1 !dbg !7498 {
entry:
  %retval = alloca i32, align 4
  %src1.addr = alloca i64*, align 8
  %src2.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  store i64* %src1, i64** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src1.addr, metadata !7501, metadata !DIExpression()), !dbg !7502
  store i64* %src2, i64** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src2.addr, metadata !7503, metadata !DIExpression()), !dbg !7504
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !7505, metadata !DIExpression()), !dbg !7506
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !7507
  %1 = call i1 @llvm.is.constant.i32(i32 %0), !dbg !7507
  br i1 %1, label %land.lhs.true, label %if.end, !dbg !7507

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %nbits.addr, align 4, !dbg !7507
  %cmp = icmp ule i32 %2, 64, !dbg !7507
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !7507

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !7507
  %cmp2 = icmp ugt i32 %3, 0, !dbg !7507
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7509

if.then:                                          ; preds = %land.lhs.true1
  %4 = load i64*, i64** %src1.addr, align 8, !dbg !7510
  %5 = load i64, i64* %4, align 8, !dbg !7511
  %6 = load i64*, i64** %src2.addr, align 8, !dbg !7512
  %7 = load i64, i64* %6, align 8, !dbg !7513
  %xor = xor i64 %5, %7, !dbg !7514
  %8 = load i32, i32* %nbits.addr, align 4, !dbg !7515
  %sub = sub i32 0, %8, !dbg !7515
  %and = and i32 %sub, 63, !dbg !7515
  %sh_prom = zext i32 %and to i64, !dbg !7515
  %shr = lshr i64 -1, %sh_prom, !dbg !7515
  %and3 = and i64 %xor, %shr, !dbg !7516
  %tobool = icmp ne i64 %and3, 0, !dbg !7517
  %lnot = xor i1 %tobool, true, !dbg !7517
  %lnot.ext = zext i1 %lnot to i32, !dbg !7517
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !7518
  br label %return, !dbg !7518

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %9 = load i32, i32* %nbits.addr, align 4, !dbg !7519
  %and4 = and i32 %9, 7, !dbg !7521
  %10 = call i1 @llvm.is.constant.i32(i32 %and4), !dbg !7522
  br i1 %10, label %land.lhs.true5, label %if.end12, !dbg !7523

land.lhs.true5:                                   ; preds = %if.end
  %11 = load i32, i32* %nbits.addr, align 4, !dbg !7524
  %and6 = and i32 %11, 7, !dbg !7524
  %cmp7 = icmp eq i32 %and6, 0, !dbg !7524
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !7525

if.then8:                                         ; preds = %land.lhs.true5
  %12 = load i64*, i64** %src1.addr, align 8, !dbg !7526
  %13 = bitcast i64* %12 to i8*, !dbg !7526
  %14 = load i64*, i64** %src2.addr, align 8, !dbg !7527
  %15 = bitcast i64* %14 to i8*, !dbg !7527
  %16 = load i32, i32* %nbits.addr, align 4, !dbg !7528
  %div = udiv i32 %16, 8, !dbg !7529
  %conv = zext i32 %div to i64, !dbg !7528
  %call = call i32 @memcmp(i8* %13, i8* %15, i64 %conv) #9, !dbg !7530
  %tobool9 = icmp ne i32 %call, 0, !dbg !7531
  %lnot10 = xor i1 %tobool9, true, !dbg !7531
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !7531
  store i32 %lnot.ext11, i32* %retval, align 4, !dbg !7532
  br label %return, !dbg !7532

if.end12:                                         ; preds = %land.lhs.true5, %if.end
  %17 = load i64*, i64** %src1.addr, align 8, !dbg !7533
  %18 = load i64*, i64** %src2.addr, align 8, !dbg !7534
  %19 = load i32, i32* %nbits.addr, align 4, !dbg !7535
  %call13 = call i32 @__bitmap_equal(i64* %17, i64* %18, i32 %19) #9, !dbg !7536
  store i32 %call13, i32* %retval, align 4, !dbg !7537
  br label %return, !dbg !7537

return:                                           ; preds = %if.end12, %if.then8, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !7538
  ret i32 %20, !dbg !7538
}

; Function Attrs: noredzone
declare dso_local i32 @__bitmap_and(i64*, i64*, i64*, i32) #4

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: noredzone
declare dso_local i32 @__bitmap_equal(i64*, i64*, i32) #4

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_acpi_device_node(%struct.fwnode_handle*) #4

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #1 !dbg !7539 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7542, metadata !DIExpression()), !dbg !7543
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7544
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !7546
  %1 = load i8*, i8** %init_name, align 8, !dbg !7546
  %tobool = icmp ne i8* %1, null, !dbg !7544
  br i1 %tobool, label %if.then, label %if.end, !dbg !7547

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7548
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !7549
  %3 = load i8*, i8** %init_name1, align 8, !dbg !7549
  store i8* %3, i8** %retval, align 8, !dbg !7550
  br label %return, !dbg !7550

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7551
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !7552
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #9, !dbg !7553
  store i8* %call, i8** %retval, align 8, !dbg !7554
  br label %return, !dbg !7554

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !7555
  ret i8* %5, !dbg !7555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #1 !dbg !7556 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !7561, metadata !DIExpression()), !dbg !7562
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !7563
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !7564
  %1 = load i8*, i8** %name, align 8, !dbg !7564
  ret i8* %1, !dbg !7565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dmaengine_synchronize(%struct.dma_chan* %chan) #1 !dbg !7566 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !7567, metadata !DIExpression()), !dbg !7568
  br label %do.body, !dbg !7569

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7570

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7572

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !7570

do.end2:                                          ; preds = %do.end
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7574
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !7576
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !7576
  %device_synchronize = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 46, !dbg !7577
  %2 = load void (%struct.dma_chan*)*, void (%struct.dma_chan*)** %device_synchronize, align 8, !dbg !7577
  %tobool = icmp ne void (%struct.dma_chan*)* %2, null, !dbg !7574
  br i1 %tobool, label %if.then, label %if.end, !dbg !7578

if.then:                                          ; preds = %do.end2
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7579
  %device3 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %3, i32 0, i32 0, !dbg !7580
  %4 = load %struct.dma_device*, %struct.dma_device** %device3, align 8, !dbg !7580
  %device_synchronize4 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %4, i32 0, i32 46, !dbg !7581
  %5 = load void (%struct.dma_chan*)*, void (%struct.dma_chan*)** %device_synchronize4, align 8, !dbg !7581
  %6 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7582
  call void %5(%struct.dma_chan* %6) #9, !dbg !7579
  br label %if.end, !dbg !7579

if.end:                                           ; preds = %if.then, %do.end2
  ret void, !dbg !7583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #1 !dbg !7584 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7585, metadata !DIExpression()), !dbg !7586
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7587
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #9, !dbg !7589
  br i1 %call, label %if.end, label %if.then, !dbg !7590

if.then:                                          ; preds = %entry
  br label %return, !dbg !7591

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7592
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7593
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7593
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7594
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7595
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7595
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #9, !dbg !7596
  br label %return, !dbg !7597

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7597
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #1 !dbg !7598 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7601, metadata !DIExpression()), !dbg !7602
  ret i1 true, !dbg !7603
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !7604 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7605, metadata !DIExpression()), !dbg !7606
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7607, metadata !DIExpression()), !dbg !7608
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7609
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7610
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7611
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !7612
  br label %do.body, !dbg !7613

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !7614

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !7616

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !7614

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7618
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7618
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7618
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !7618
  br label %do.end5, !dbg !7618

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !7614

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !7620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_chan* @min_chan(i32 %cap, i32 %cpu) #1 !dbg !7621 {
entry:
  %cap.addr = alloca i32, align 4
  %cpu.addr = alloca i32, align 4
  %device = alloca %struct.dma_device*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %min = alloca %struct.dma_chan*, align 8
  %localmin = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dma_device*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp7 = alloca %struct.dma_chan*, align 8
  %__mptr33 = alloca i8*, align 8
  %tmp38 = alloca %struct.dma_chan*, align 8
  %__mptr41 = alloca i8*, align 8
  %tmp46 = alloca %struct.dma_device*, align 8
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !7624, metadata !DIExpression()), !dbg !7625
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !7626, metadata !DIExpression()), !dbg !7627
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device, metadata !7628, metadata !DIExpression()), !dbg !7629
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !7630, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %min, metadata !7632, metadata !DIExpression()), !dbg !7633
  store %struct.dma_chan* null, %struct.dma_chan** %min, align 8, !dbg !7633
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %localmin, metadata !7634, metadata !DIExpression()), !dbg !7635
  store %struct.dma_chan* null, %struct.dma_chan** %localmin, align 8, !dbg !7635
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7636, metadata !DIExpression()), !dbg !7639
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @dma_device_list, i32 0, i32 0), align 8, !dbg !7639
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !7639
  store i8* %1, i8** %__mptr, align 8, !dbg !7639
  br label %do.body, !dbg !7639

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7640

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7639
  %add.ptr = getelementptr i8, i8* %2, i64 -32, !dbg !7639
  %3 = bitcast i8* %add.ptr to %struct.dma_device*, !dbg !7639
  store %struct.dma_device* %3, %struct.dma_device** %tmp, align 8, !dbg !7640
  %4 = load %struct.dma_device*, %struct.dma_device** %tmp, align 8, !dbg !7639
  store %struct.dma_device* %4, %struct.dma_device** %device, align 8, !dbg !7642
  br label %for.cond, !dbg !7642

for.cond:                                         ; preds = %do.end45, %do.end
  %5 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !7643
  %global_node = getelementptr inbounds %struct.dma_device, %struct.dma_device* %5, i32 0, i32 4, !dbg !7643
  %cmp = icmp eq %struct.list_head* %global_node, @dma_device_list, !dbg !7643
  %lnot = xor i1 %cmp, true, !dbg !7643
  br i1 %lnot, label %for.body, label %for.end48, !dbg !7642

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %cap.addr, align 4, !dbg !7645
  %7 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !7645
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %7, i32 0, i32 6, !dbg !7645
  %call = call i32 @__dma_has_cap(i32 %6, %struct.dma_cap_mask_t* %cap_mask) #9, !dbg !7645
  %tobool = icmp ne i32 %call, 0, !dbg !7645
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7648

lor.lhs.false:                                    ; preds = %for.body
  %8 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !7649
  %cap_mask1 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %8, i32 0, i32 6, !dbg !7649
  %call2 = call i32 @__dma_has_cap(i32 8, %struct.dma_cap_mask_t* %cap_mask1) #9, !dbg !7649
  %tobool3 = icmp ne i32 %call2, 0, !dbg !7649
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7650

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc40, !dbg !7651

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !7652, metadata !DIExpression()), !dbg !7655
  %9 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !7655
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %9, i32 0, i32 3, !dbg !7655
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %channels, i32 0, i32 0, !dbg !7655
  %10 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7655
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !7655
  store i8* %11, i8** %__mptr4, align 8, !dbg !7655
  br label %do.body5, !dbg !7655

do.body5:                                         ; preds = %if.end
  br label %do.end6, !dbg !7656

do.end6:                                          ; preds = %do.body5
  %12 = load i8*, i8** %__mptr4, align 8, !dbg !7655
  %add.ptr8 = getelementptr i8, i8* %12, i64 -48, !dbg !7655
  %13 = bitcast i8* %add.ptr8 to %struct.dma_chan*, !dbg !7655
  store %struct.dma_chan* %13, %struct.dma_chan** %tmp7, align 8, !dbg !7656
  %14 = load %struct.dma_chan*, %struct.dma_chan** %tmp7, align 8, !dbg !7655
  store %struct.dma_chan* %14, %struct.dma_chan** %chan, align 8, !dbg !7658
  br label %for.cond9, !dbg !7658

for.cond9:                                        ; preds = %do.end37, %do.end6
  %15 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7659
  %device_node = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %15, i32 0, i32 7, !dbg !7659
  %16 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !7659
  %channels10 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %16, i32 0, i32 3, !dbg !7659
  %cmp11 = icmp eq %struct.list_head* %device_node, %channels10, !dbg !7659
  %lnot12 = xor i1 %cmp11, true, !dbg !7659
  br i1 %lnot12, label %for.body13, label %for.end, !dbg !7658

for.body13:                                       ; preds = %for.cond9
  %17 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7661
  %client_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %17, i32 0, i32 9, !dbg !7664
  %18 = load i32, i32* %client_count, align 8, !dbg !7664
  %tobool14 = icmp ne i32 %18, 0, !dbg !7661
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !7665

if.then15:                                        ; preds = %for.body13
  br label %for.inc, !dbg !7666

if.end16:                                         ; preds = %for.body13
  %19 = load %struct.dma_chan*, %struct.dma_chan** %min, align 8, !dbg !7667
  %tobool17 = icmp ne %struct.dma_chan* %19, null, !dbg !7667
  br i1 %tobool17, label %lor.lhs.false18, label %if.then21, !dbg !7669

lor.lhs.false18:                                  ; preds = %if.end16
  %20 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7670
  %table_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %20, i32 0, i32 10, !dbg !7671
  %21 = load i32, i32* %table_count, align 4, !dbg !7671
  %22 = load %struct.dma_chan*, %struct.dma_chan** %min, align 8, !dbg !7672
  %table_count19 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %22, i32 0, i32 10, !dbg !7673
  %23 = load i32, i32* %table_count19, align 4, !dbg !7673
  %cmp20 = icmp slt i32 %21, %23, !dbg !7674
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !7675

if.then21:                                        ; preds = %lor.lhs.false18, %if.end16
  %24 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7676
  store %struct.dma_chan* %24, %struct.dma_chan** %min, align 8, !dbg !7677
  br label %if.end22, !dbg !7678

if.end22:                                         ; preds = %if.then21, %lor.lhs.false18
  %25 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7679
  %26 = load i32, i32* %cpu.addr, align 4, !dbg !7681
  %call23 = call zeroext i1 @dma_chan_is_local(%struct.dma_chan* %25, i32 %26) #9, !dbg !7682
  br i1 %call23, label %if.then24, label %if.end32, !dbg !7683

if.then24:                                        ; preds = %if.end22
  %27 = load %struct.dma_chan*, %struct.dma_chan** %localmin, align 8, !dbg !7684
  %tobool25 = icmp ne %struct.dma_chan* %27, null, !dbg !7684
  br i1 %tobool25, label %lor.lhs.false26, label %if.then30, !dbg !7686

lor.lhs.false26:                                  ; preds = %if.then24
  %28 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7687
  %table_count27 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %28, i32 0, i32 10, !dbg !7688
  %29 = load i32, i32* %table_count27, align 4, !dbg !7688
  %30 = load %struct.dma_chan*, %struct.dma_chan** %localmin, align 8, !dbg !7689
  %table_count28 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %30, i32 0, i32 10, !dbg !7690
  %31 = load i32, i32* %table_count28, align 4, !dbg !7690
  %cmp29 = icmp slt i32 %29, %31, !dbg !7691
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !7692

if.then30:                                        ; preds = %lor.lhs.false26, %if.then24
  %32 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7693
  store %struct.dma_chan* %32, %struct.dma_chan** %localmin, align 8, !dbg !7694
  br label %if.end31, !dbg !7695

if.end31:                                         ; preds = %if.then30, %lor.lhs.false26
  br label %if.end32, !dbg !7690

if.end32:                                         ; preds = %if.end31, %if.end22
  br label %for.inc, !dbg !7696

for.inc:                                          ; preds = %if.end32, %if.then15
  call void @llvm.dbg.declare(metadata i8** %__mptr33, metadata !7697, metadata !DIExpression()), !dbg !7699
  %33 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7699
  %device_node34 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %33, i32 0, i32 7, !dbg !7699
  %next35 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node34, i32 0, i32 0, !dbg !7699
  %34 = load %struct.list_head*, %struct.list_head** %next35, align 8, !dbg !7699
  %35 = bitcast %struct.list_head* %34 to i8*, !dbg !7699
  store i8* %35, i8** %__mptr33, align 8, !dbg !7699
  br label %do.body36, !dbg !7699

do.body36:                                        ; preds = %for.inc
  br label %do.end37, !dbg !7700

do.end37:                                         ; preds = %do.body36
  %36 = load i8*, i8** %__mptr33, align 8, !dbg !7699
  %add.ptr39 = getelementptr i8, i8* %36, i64 -48, !dbg !7699
  %37 = bitcast i8* %add.ptr39 to %struct.dma_chan*, !dbg !7699
  store %struct.dma_chan* %37, %struct.dma_chan** %tmp38, align 8, !dbg !7700
  %38 = load %struct.dma_chan*, %struct.dma_chan** %tmp38, align 8, !dbg !7699
  store %struct.dma_chan* %38, %struct.dma_chan** %chan, align 8, !dbg !7659
  br label %for.cond9, !dbg !7659, !llvm.loop !7702

for.end:                                          ; preds = %for.cond9
  br label %for.inc40, !dbg !7704

for.inc40:                                        ; preds = %for.end, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr41, metadata !7705, metadata !DIExpression()), !dbg !7707
  %39 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !7707
  %global_node42 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %39, i32 0, i32 4, !dbg !7707
  %next43 = getelementptr inbounds %struct.list_head, %struct.list_head* %global_node42, i32 0, i32 0, !dbg !7707
  %40 = load %struct.list_head*, %struct.list_head** %next43, align 8, !dbg !7707
  %41 = bitcast %struct.list_head* %40 to i8*, !dbg !7707
  store i8* %41, i8** %__mptr41, align 8, !dbg !7707
  br label %do.body44, !dbg !7707

do.body44:                                        ; preds = %for.inc40
  br label %do.end45, !dbg !7708

do.end45:                                         ; preds = %do.body44
  %42 = load i8*, i8** %__mptr41, align 8, !dbg !7707
  %add.ptr47 = getelementptr i8, i8* %42, i64 -32, !dbg !7707
  %43 = bitcast i8* %add.ptr47 to %struct.dma_device*, !dbg !7707
  store %struct.dma_device* %43, %struct.dma_device** %tmp46, align 8, !dbg !7708
  %44 = load %struct.dma_device*, %struct.dma_device** %tmp46, align 8, !dbg !7707
  store %struct.dma_device* %44, %struct.dma_device** %device, align 8, !dbg !7643
  br label %for.cond, !dbg !7643, !llvm.loop !7710

for.end48:                                        ; preds = %for.cond
  %45 = load %struct.dma_chan*, %struct.dma_chan** %localmin, align 8, !dbg !7712
  %tobool49 = icmp ne %struct.dma_chan* %45, null, !dbg !7712
  br i1 %tobool49, label %cond.true, label %cond.false, !dbg !7712

cond.true:                                        ; preds = %for.end48
  %46 = load %struct.dma_chan*, %struct.dma_chan** %localmin, align 8, !dbg !7713
  br label %cond.end, !dbg !7712

cond.false:                                       ; preds = %for.end48
  %47 = load %struct.dma_chan*, %struct.dma_chan** %min, align 8, !dbg !7714
  br label %cond.end, !dbg !7712

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.dma_chan* [ %46, %cond.true ], [ %47, %cond.false ], !dbg !7712
  store %struct.dma_chan* %cond, %struct.dma_chan** %chan, align 8, !dbg !7715
  %48 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7716
  %tobool50 = icmp ne %struct.dma_chan* %48, null, !dbg !7716
  br i1 %tobool50, label %if.then51, label %if.end53, !dbg !7718

if.then51:                                        ; preds = %cond.end
  %49 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7719
  %table_count52 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %49, i32 0, i32 10, !dbg !7720
  %50 = load i32, i32* %table_count52, align 4, !dbg !7721
  %inc = add i32 %50, 1, !dbg !7721
  store i32 %inc, i32* %table_count52, align 4, !dbg !7721
  br label %if.end53, !dbg !7719

if.end53:                                         ; preds = %if.then51, %cond.end
  %51 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7722
  ret %struct.dma_chan* %51, !dbg !7723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @dma_chan_is_local(%struct.dma_chan* %chan, i32 %cpu) #1 !dbg !7724 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %cpu.addr = alloca i32, align 4
  %node = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !7727, metadata !DIExpression()), !dbg !7728
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !7729, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.declare(metadata i32* %node, metadata !7731, metadata !DIExpression()), !dbg !7732
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7733
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !7734
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !7734
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 15, !dbg !7735
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7735
  %call = call i32 @dev_to_node(%struct.device* %2) #9, !dbg !7736
  store i32 %call, i32* %node, align 4, !dbg !7732
  %3 = load i32, i32* %node, align 4, !dbg !7737
  %cmp = icmp eq i32 %3, -1, !dbg !7738
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7739

lor.rhs:                                          ; preds = %entry
  %4 = load i32, i32* %cpu.addr, align 4, !dbg !7740
  %5 = load i32, i32* %node, align 4, !dbg !7741
  %call1 = call i32 @cpumask_test_cpu(i32 %4, %struct.cpumask* @__cpu_online_mask) #9, !dbg !7742
  %tobool = icmp ne i32 %call1, 0, !dbg !7739
  br label %lor.end, !dbg !7739

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %tobool, %lor.rhs ]
  ret i1 %6, !dbg !7743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dev_to_node(%struct.device* %dev) #1 !dbg !7744 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7745, metadata !DIExpression()), !dbg !7746
  ret i32 -1, !dbg !7747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cpumask_test_cpu(i32 %cpu, %struct.cpumask* %cpumask) #1 !dbg !7748 {
entry:
  %cpu.addr = alloca i32, align 4
  %cpumask.addr = alloca %struct.cpumask*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !7751, metadata !DIExpression()), !dbg !7752
  store %struct.cpumask* %cpumask, %struct.cpumask** %cpumask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %cpumask.addr, metadata !7753, metadata !DIExpression()), !dbg !7754
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !7755
  %call = call i32 @cpumask_check(i32 %0) #9, !dbg !7756
  %conv = zext i32 %call to i64, !dbg !7756
  %1 = load %struct.cpumask*, %struct.cpumask** %cpumask.addr, align 8, !dbg !7757
  %bits = getelementptr inbounds %struct.cpumask, %struct.cpumask* %1, i32 0, i32 0, !dbg !7757
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !7757
  %call1 = call zeroext i1 @test_bit(i64 %conv, i64* %arraydecay) #9, !dbg !7758
  %conv2 = zext i1 %call1 to i32, !dbg !7758
  ret i32 %conv2, !dbg !7759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cpumask_check(i32 %cpu) #1 !dbg !7760 {
entry:
  %cpu.addr = alloca i32, align 4
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !7763, metadata !DIExpression()), !dbg !7764
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !7765
  call void @cpu_max_bits_warn(i32 %0, i32 1) #9, !dbg !7766
  %1 = load i32, i32* %cpu.addr, align 4, !dbg !7767
  ret i32 %1, !dbg !7768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cpu_max_bits_warn(i32 %cpu, i32 %bits) #1 !dbg !7769 {
entry:
  %cpu.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !7772, metadata !DIExpression()), !dbg !7773
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !7774, metadata !DIExpression()), !dbg !7775
  ret void, !dbg !7776
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #1 !dbg !7777 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7780, metadata !DIExpression()), !dbg !7784
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7790, metadata !DIExpression()), !dbg !7791
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7792, metadata !DIExpression()), !dbg !7793
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7794, metadata !DIExpression()), !dbg !7795
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7796, metadata !DIExpression()), !dbg !7800
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7802, metadata !DIExpression()), !dbg !7806
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7808, metadata !DIExpression()), !dbg !7812
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7817, metadata !DIExpression()), !dbg !7818
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7819, metadata !DIExpression()), !dbg !7820
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7821, metadata !DIExpression()), !dbg !7822
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7823, metadata !DIExpression()), !dbg !7824
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7825, metadata !DIExpression()), !dbg !7826
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7827, metadata !DIExpression()), !dbg !7828
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7829, metadata !DIExpression()), !dbg !7830
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7831, metadata !DIExpression()), !dbg !7832
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7833, metadata !DIExpression()), !dbg !7834
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7835, metadata !DIExpression()), !dbg !7836
  %0 = load i64, i64* %size.addr, align 8, !dbg !7837
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7838
  %or = or i32 %1, 256, !dbg !7839
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7840
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #11, !dbg !7841
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !7842

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7843
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !7844
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7845

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !7846
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !7847
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7848
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !7849
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7826
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7850
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7851
  %10 = load i32, i32* %order.i.i, align 4, !dbg !7852
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7853
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7854
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7855
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !7856
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7856
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7856
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7856
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !7856
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7857
  br label %kmalloc.exit, !dbg !7857

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !7858
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7859
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !7859
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7861

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7862
  br label %kmalloc_index.exit.i, !dbg !7862

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7863
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !7865
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7866

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7867
  br label %kmalloc_index.exit.i, !dbg !7867

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7868
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !7870
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7871

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7872
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !7873
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7874

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7875
  br label %kmalloc_index.exit.i, !dbg !7875

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7876
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !7878
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7879

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7880
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !7881
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7882

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7883
  br label %kmalloc_index.exit.i, !dbg !7883

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7884
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !7886
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7887

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7888
  br label %kmalloc_index.exit.i, !dbg !7888

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7889
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !7891
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7892

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7893
  br label %kmalloc_index.exit.i, !dbg !7893

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7894
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !7896
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7897

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7898
  br label %kmalloc_index.exit.i, !dbg !7898

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7899
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !7901
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7902

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7903
  br label %kmalloc_index.exit.i, !dbg !7903

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7904
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !7906
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7907

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7908
  br label %kmalloc_index.exit.i, !dbg !7908

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7909
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !7911
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7912

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7913
  br label %kmalloc_index.exit.i, !dbg !7913

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7914
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !7916
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7917

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7918
  br label %kmalloc_index.exit.i, !dbg !7918

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7919
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !7921
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7922

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7923
  br label %kmalloc_index.exit.i, !dbg !7923

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7924
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !7926
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7927

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7928
  br label %kmalloc_index.exit.i, !dbg !7928

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7929
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !7931
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7932

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7933
  br label %kmalloc_index.exit.i, !dbg !7933

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7934
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !7936
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7937

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7938
  br label %kmalloc_index.exit.i, !dbg !7938

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7939
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !7941
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7942

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7943
  br label %kmalloc_index.exit.i, !dbg !7943

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7944
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !7946
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7947

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7948
  br label %kmalloc_index.exit.i, !dbg !7948

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7949
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !7951
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7952

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7953
  br label %kmalloc_index.exit.i, !dbg !7953

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7954
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !7956
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7957

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7958
  br label %kmalloc_index.exit.i, !dbg !7958

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7959
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !7961
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7962

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7963
  br label %kmalloc_index.exit.i, !dbg !7963

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7964
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !7966
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7967

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7968
  br label %kmalloc_index.exit.i, !dbg !7968

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7969
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !7971
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7972

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7973
  br label %kmalloc_index.exit.i, !dbg !7973

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7974
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !7976
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7977

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7978
  br label %kmalloc_index.exit.i, !dbg !7978

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7979
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !7981
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7982

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7983
  br label %kmalloc_index.exit.i, !dbg !7983

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7984
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !7986
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7987

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7988
  br label %kmalloc_index.exit.i, !dbg !7988

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7989
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !7991
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7992

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7993
  br label %kmalloc_index.exit.i, !dbg !7993

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7994
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !7996
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7997

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7998
  br label %kmalloc_index.exit.i, !dbg !7998

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7999
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !8001
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8002

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8003
  br label %kmalloc_index.exit.i, !dbg !8003

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !8004, !srcloc !8007
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 234) #11, !dbg !8008, !srcloc !8011
  unreachable, !dbg !8012

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !8013
  store i32 %45, i32* %index.i, align 4, !dbg !8014
  %46 = load i32, i32* %index.i, align 4, !dbg !8015
  %tobool.i = icmp ne i32 %46, 0, !dbg !8015
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8017

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8018
  br label %kmalloc.exit, !dbg !8018

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !8019
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8020
  %and.i.i = and i32 %48, 17, !dbg !8020
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8020
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8020
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8020
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8020
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8022

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8023
  br label %kmalloc_type.exit.i, !dbg !8023

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8024
  %and2.i.i = and i32 %49, 1, !dbg !8025
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8024
  %50 = zext i1 %tobool3.i.i to i64, !dbg !8024
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8024
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8026
  br label %kmalloc_type.exit.i, !dbg !8026

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !8027
  %idxprom.i = zext i32 %51 to i64, !dbg !8028
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8028
  %52 = load i32, i32* %index.i, align 4, !dbg !8029
  %idxprom6.i = zext i32 %52 to i64, !dbg !8028
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8028
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8028
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !8030
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !8031
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8032
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8033
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !8034
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8034
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8034
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8034
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !8034
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7795
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8035
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !8036
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8037
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8038
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !8039
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8040
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !8041
  store i8* %62, i8** %retval.i, align 8, !dbg !8042
  br label %kmalloc.exit, !dbg !8042

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !8043
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !8044
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !8045
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8045
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8045
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8045
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !8045
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8046
  br label %kmalloc.exit, !dbg !8046

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !8047
  ret i8* %65, !dbg !8048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ida_alloc(%struct.ida* %ida, i32 %gfp) #1 !dbg !8049 {
entry:
  %ida.addr = alloca %struct.ida*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.ida* %ida, %struct.ida** %ida.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ida** %ida.addr, metadata !8052, metadata !DIExpression()), !dbg !8053
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !8054, metadata !DIExpression()), !dbg !8055
  %0 = load %struct.ida*, %struct.ida** %ida.addr, align 8, !dbg !8056
  %1 = load i32, i32* %gfp.addr, align 4, !dbg !8057
  %call = call i32 @ida_alloc_range(%struct.ida* %0, i32 0, i32 -1, i32 %1) #9, !dbg !8058
  ret i32 %call, !dbg !8059
}

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @device_register(%struct.device*) #4

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #4

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !8060 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8064, metadata !DIExpression()), !dbg !8068
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8070, metadata !DIExpression()), !dbg !8071
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8072, metadata !DIExpression()), !dbg !8073
  %0 = load i64, i64* %size.addr, align 8, !dbg !8074
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8076
  br i1 %1, label %if.then, label %if.end447, !dbg !8077

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8078
  %tobool = icmp ne i64 %2, 0, !dbg !8078
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8081

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8082
  br label %return, !dbg !8082

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8083
  %cmp = icmp ult i64 %3, 4096, !dbg !8085
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8086

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8087
  br label %return, !dbg !8087

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub = sub i64 %4, 1, !dbg !8088
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8088
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8088

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub4 = sub i64 %6, 1, !dbg !8088
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8088
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8088

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub6 = sub i64 %8, 1, !dbg !8088
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8088
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8088

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8088

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub9 = sub i64 %9, 1, !dbg !8088
  %and = and i64 %sub9, -9223372036854775808, !dbg !8088
  %tobool10 = icmp ne i64 %and, 0, !dbg !8088
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8088

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8088

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub13 = sub i64 %10, 1, !dbg !8088
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8088
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8088
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8088

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8088

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub18 = sub i64 %11, 1, !dbg !8088
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8088
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8088
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8088

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8088

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub23 = sub i64 %12, 1, !dbg !8088
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8088
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8088
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8088

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8088

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub28 = sub i64 %13, 1, !dbg !8088
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8088
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8088
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8088

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8088

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub33 = sub i64 %14, 1, !dbg !8088
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8088
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8088
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8088

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8088

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub38 = sub i64 %15, 1, !dbg !8088
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8088
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8088
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8088

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8088

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub43 = sub i64 %16, 1, !dbg !8088
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8088
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8088
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8088

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8088

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub48 = sub i64 %17, 1, !dbg !8088
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8088
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8088
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8088

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8088

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub53 = sub i64 %18, 1, !dbg !8088
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8088
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8088
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8088

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8088

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub58 = sub i64 %19, 1, !dbg !8088
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8088
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8088
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8088

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8088

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub63 = sub i64 %20, 1, !dbg !8088
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8088
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8088
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8088

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8088

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub68 = sub i64 %21, 1, !dbg !8088
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8088
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8088
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8088

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8088

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub73 = sub i64 %22, 1, !dbg !8088
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8088
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8088
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8088

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8088

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub78 = sub i64 %23, 1, !dbg !8088
  %and79 = and i64 %sub78, 562949953421312, !dbg !8088
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8088
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8088

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8088

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub83 = sub i64 %24, 1, !dbg !8088
  %and84 = and i64 %sub83, 281474976710656, !dbg !8088
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8088
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8088

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8088

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub88 = sub i64 %25, 1, !dbg !8088
  %and89 = and i64 %sub88, 140737488355328, !dbg !8088
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8088
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8088

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8088

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub93 = sub i64 %26, 1, !dbg !8088
  %and94 = and i64 %sub93, 70368744177664, !dbg !8088
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8088
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8088

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8088

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub98 = sub i64 %27, 1, !dbg !8088
  %and99 = and i64 %sub98, 35184372088832, !dbg !8088
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8088
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8088

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8088

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub103 = sub i64 %28, 1, !dbg !8088
  %and104 = and i64 %sub103, 17592186044416, !dbg !8088
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8088
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8088

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8088

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub108 = sub i64 %29, 1, !dbg !8088
  %and109 = and i64 %sub108, 8796093022208, !dbg !8088
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8088
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8088

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8088

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub113 = sub i64 %30, 1, !dbg !8088
  %and114 = and i64 %sub113, 4398046511104, !dbg !8088
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8088
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8088

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8088

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub118 = sub i64 %31, 1, !dbg !8088
  %and119 = and i64 %sub118, 2199023255552, !dbg !8088
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8088
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8088

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8088

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub123 = sub i64 %32, 1, !dbg !8088
  %and124 = and i64 %sub123, 1099511627776, !dbg !8088
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8088
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8088

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8088

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub128 = sub i64 %33, 1, !dbg !8088
  %and129 = and i64 %sub128, 549755813888, !dbg !8088
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8088
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8088

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8088

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub133 = sub i64 %34, 1, !dbg !8088
  %and134 = and i64 %sub133, 274877906944, !dbg !8088
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8088
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8088

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8088

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub138 = sub i64 %35, 1, !dbg !8088
  %and139 = and i64 %sub138, 137438953472, !dbg !8088
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8088
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8088

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8088

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub143 = sub i64 %36, 1, !dbg !8088
  %and144 = and i64 %sub143, 68719476736, !dbg !8088
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8088
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8088

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8088

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub148 = sub i64 %37, 1, !dbg !8088
  %and149 = and i64 %sub148, 34359738368, !dbg !8088
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8088
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8088

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8088

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub153 = sub i64 %38, 1, !dbg !8088
  %and154 = and i64 %sub153, 17179869184, !dbg !8088
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8088
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8088

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8088

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub158 = sub i64 %39, 1, !dbg !8088
  %and159 = and i64 %sub158, 8589934592, !dbg !8088
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8088
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8088

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8088

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub163 = sub i64 %40, 1, !dbg !8088
  %and164 = and i64 %sub163, 4294967296, !dbg !8088
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8088
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8088

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8088

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub168 = sub i64 %41, 1, !dbg !8088
  %and169 = and i64 %sub168, 2147483648, !dbg !8088
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8088
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8088

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8088

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub173 = sub i64 %42, 1, !dbg !8088
  %and174 = and i64 %sub173, 1073741824, !dbg !8088
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8088
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8088

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8088

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub178 = sub i64 %43, 1, !dbg !8088
  %and179 = and i64 %sub178, 536870912, !dbg !8088
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8088
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8088

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8088

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub183 = sub i64 %44, 1, !dbg !8088
  %and184 = and i64 %sub183, 268435456, !dbg !8088
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8088
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8088

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8088

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub188 = sub i64 %45, 1, !dbg !8088
  %and189 = and i64 %sub188, 134217728, !dbg !8088
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8088
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8088

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8088

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub193 = sub i64 %46, 1, !dbg !8088
  %and194 = and i64 %sub193, 67108864, !dbg !8088
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8088
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8088

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8088

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub198 = sub i64 %47, 1, !dbg !8088
  %and199 = and i64 %sub198, 33554432, !dbg !8088
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8088
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8088

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8088

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub203 = sub i64 %48, 1, !dbg !8088
  %and204 = and i64 %sub203, 16777216, !dbg !8088
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8088
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8088

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8088

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub208 = sub i64 %49, 1, !dbg !8088
  %and209 = and i64 %sub208, 8388608, !dbg !8088
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8088
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8088

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8088

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub213 = sub i64 %50, 1, !dbg !8088
  %and214 = and i64 %sub213, 4194304, !dbg !8088
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8088
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8088

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8088

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub218 = sub i64 %51, 1, !dbg !8088
  %and219 = and i64 %sub218, 2097152, !dbg !8088
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8088
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8088

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8088

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub223 = sub i64 %52, 1, !dbg !8088
  %and224 = and i64 %sub223, 1048576, !dbg !8088
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8088
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8088

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8088

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub228 = sub i64 %53, 1, !dbg !8088
  %and229 = and i64 %sub228, 524288, !dbg !8088
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8088
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8088

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8088

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub233 = sub i64 %54, 1, !dbg !8088
  %and234 = and i64 %sub233, 262144, !dbg !8088
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8088
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8088

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8088

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub238 = sub i64 %55, 1, !dbg !8088
  %and239 = and i64 %sub238, 131072, !dbg !8088
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8088
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8088

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8088

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub243 = sub i64 %56, 1, !dbg !8088
  %and244 = and i64 %sub243, 65536, !dbg !8088
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8088
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8088

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8088

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub248 = sub i64 %57, 1, !dbg !8088
  %and249 = and i64 %sub248, 32768, !dbg !8088
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8088
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8088

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8088

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub253 = sub i64 %58, 1, !dbg !8088
  %and254 = and i64 %sub253, 16384, !dbg !8088
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8088
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8088

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8088

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub258 = sub i64 %59, 1, !dbg !8088
  %and259 = and i64 %sub258, 8192, !dbg !8088
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8088
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8088

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8088

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub263 = sub i64 %60, 1, !dbg !8088
  %and264 = and i64 %sub263, 4096, !dbg !8088
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8088
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8088

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8088

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub268 = sub i64 %61, 1, !dbg !8088
  %and269 = and i64 %sub268, 2048, !dbg !8088
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8088
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8088

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8088

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub273 = sub i64 %62, 1, !dbg !8088
  %and274 = and i64 %sub273, 1024, !dbg !8088
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8088
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8088

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8088

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub278 = sub i64 %63, 1, !dbg !8088
  %and279 = and i64 %sub278, 512, !dbg !8088
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8088
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8088

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8088

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub283 = sub i64 %64, 1, !dbg !8088
  %and284 = and i64 %sub283, 256, !dbg !8088
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8088
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8088

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8088

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub288 = sub i64 %65, 1, !dbg !8088
  %and289 = and i64 %sub288, 128, !dbg !8088
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8088
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8088

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8088

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub293 = sub i64 %66, 1, !dbg !8088
  %and294 = and i64 %sub293, 64, !dbg !8088
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8088
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8088

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8088

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub298 = sub i64 %67, 1, !dbg !8088
  %and299 = and i64 %sub298, 32, !dbg !8088
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8088
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8088

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8088

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub303 = sub i64 %68, 1, !dbg !8088
  %and304 = and i64 %sub303, 16, !dbg !8088
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8088
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8088

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8088

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub308 = sub i64 %69, 1, !dbg !8088
  %and309 = and i64 %sub308, 8, !dbg !8088
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8088
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8088

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8088

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub313 = sub i64 %70, 1, !dbg !8088
  %and314 = and i64 %sub313, 4, !dbg !8088
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8088
  %71 = zext i1 %tobool315 to i64, !dbg !8088
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8088
  br label %cond.end, !dbg !8088

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8088
  br label %cond.end317, !dbg !8088

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8088
  br label %cond.end319, !dbg !8088

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8088
  br label %cond.end321, !dbg !8088

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8088
  br label %cond.end323, !dbg !8088

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8088
  br label %cond.end325, !dbg !8088

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8088
  br label %cond.end327, !dbg !8088

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8088
  br label %cond.end329, !dbg !8088

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8088
  br label %cond.end331, !dbg !8088

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8088
  br label %cond.end333, !dbg !8088

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8088
  br label %cond.end335, !dbg !8088

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8088
  br label %cond.end337, !dbg !8088

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8088
  br label %cond.end339, !dbg !8088

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8088
  br label %cond.end341, !dbg !8088

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8088
  br label %cond.end343, !dbg !8088

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8088
  br label %cond.end345, !dbg !8088

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8088
  br label %cond.end347, !dbg !8088

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8088
  br label %cond.end349, !dbg !8088

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8088
  br label %cond.end351, !dbg !8088

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8088
  br label %cond.end353, !dbg !8088

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8088
  br label %cond.end355, !dbg !8088

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8088
  br label %cond.end357, !dbg !8088

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8088
  br label %cond.end359, !dbg !8088

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8088
  br label %cond.end361, !dbg !8088

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8088
  br label %cond.end363, !dbg !8088

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8088
  br label %cond.end365, !dbg !8088

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8088
  br label %cond.end367, !dbg !8088

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8088
  br label %cond.end369, !dbg !8088

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8088
  br label %cond.end371, !dbg !8088

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8088
  br label %cond.end373, !dbg !8088

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8088
  br label %cond.end375, !dbg !8088

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8088
  br label %cond.end377, !dbg !8088

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8088
  br label %cond.end379, !dbg !8088

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8088
  br label %cond.end381, !dbg !8088

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8088
  br label %cond.end383, !dbg !8088

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8088
  br label %cond.end385, !dbg !8088

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8088
  br label %cond.end387, !dbg !8088

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8088
  br label %cond.end389, !dbg !8088

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8088
  br label %cond.end391, !dbg !8088

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8088
  br label %cond.end393, !dbg !8088

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8088
  br label %cond.end395, !dbg !8088

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8088
  br label %cond.end397, !dbg !8088

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8088
  br label %cond.end399, !dbg !8088

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8088
  br label %cond.end401, !dbg !8088

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8088
  br label %cond.end403, !dbg !8088

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8088
  br label %cond.end405, !dbg !8088

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8088
  br label %cond.end407, !dbg !8088

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8088
  br label %cond.end409, !dbg !8088

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8088
  br label %cond.end411, !dbg !8088

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8088
  br label %cond.end413, !dbg !8088

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8088
  br label %cond.end415, !dbg !8088

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8088
  br label %cond.end417, !dbg !8088

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8088
  br label %cond.end419, !dbg !8088

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8088
  br label %cond.end421, !dbg !8088

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8088
  br label %cond.end423, !dbg !8088

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8088
  br label %cond.end425, !dbg !8088

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8088
  br label %cond.end427, !dbg !8088

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8088
  br label %cond.end429, !dbg !8088

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8088
  br label %cond.end431, !dbg !8088

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8088
  br label %cond.end433, !dbg !8088

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8088
  br label %cond.end435, !dbg !8088

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8088
  br label %cond.end437, !dbg !8088

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8088
  br label %cond.end440, !dbg !8088

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8088

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8088
  br label %cond.end444, !dbg !8088

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8088
  %sub443 = sub i64 %72, 1, !dbg !8088
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !8088
  br label %cond.end444, !dbg !8088

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8088
  %sub446 = sub i32 %cond445, 12, !dbg !8089
  %add = add i32 %sub446, 1, !dbg !8090
  store i32 %add, i32* %retval, align 4, !dbg !8091
  br label %return, !dbg !8091

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8092
  %dec = add i64 %73, -1, !dbg !8092
  store i64 %dec, i64* %size.addr, align 8, !dbg !8092
  %74 = load i64, i64* %size.addr, align 8, !dbg !8093
  %shr = lshr i64 %74, 12, !dbg !8093
  store i64 %shr, i64* %size.addr, align 8, !dbg !8093
  %75 = load i64, i64* %size.addr, align 8, !dbg !8094
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8071
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8095
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8096
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #14, !dbg !8095, !srcloc !8097
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8095
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8098
  %add.i = add i32 %79, 1, !dbg !8099
  store i32 %add.i, i32* %retval, align 4, !dbg !8100
  br label %return, !dbg !8100

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8101
  ret i32 %80, !dbg !8101
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !8102 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8064, metadata !DIExpression()), !dbg !8106
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8070, metadata !DIExpression()), !dbg !8108
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8109, metadata !DIExpression()), !dbg !8110
  %0 = load i64, i64* %n.addr, align 8, !dbg !8111
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8108
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !8112
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !8113
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #14, !dbg !8112, !srcloc !8097
  store i32 %3, i32* %bitpos.i, align 4, !dbg !8112
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !8114
  %add.i = add i32 %4, 1, !dbg !8115
  %sub = sub i32 %add.i, 1, !dbg !8116
  ret i32 %sub, !dbg !8117
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #4

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #1 !dbg !8118 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8122, metadata !DIExpression()), !dbg !8123
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8124, metadata !DIExpression()), !dbg !8125
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8126, metadata !DIExpression()), !dbg !8127
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8128, metadata !DIExpression()), !dbg !8129
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8130
  ret i8* %0, !dbg !8131
}

; Function Attrs: noredzone
declare dso_local i32 @ida_alloc_range(%struct.ida*, i32, i32, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @chan_dev_release(%struct.device* %dev) #1 !dbg !8132 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %chan_dev = alloca %struct.dma_chan_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dma_chan_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8133, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.declare(metadata %struct.dma_chan_dev** %chan_dev, metadata !8135, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8137, metadata !DIExpression()), !dbg !8139
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8139
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8139
  store i8* %1, i8** %__mptr, align 8, !dbg !8139
  br label %do.body, !dbg !8139

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8140

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8139
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !8139
  %3 = bitcast i8* %add.ptr to %struct.dma_chan_dev*, !dbg !8139
  store %struct.dma_chan_dev* %3, %struct.dma_chan_dev** %tmp, align 8, !dbg !8140
  %4 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %tmp, align 8, !dbg !8139
  store %struct.dma_chan_dev* %4, %struct.dma_chan_dev** %chan_dev, align 8, !dbg !8142
  %5 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %chan_dev, align 8, !dbg !8143
  %6 = bitcast %struct.dma_chan_dev* %5 to i8*, !dbg !8143
  call void @kfree(i8* %6) #9, !dbg !8144
  ret void, !dbg !8145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @memcpy_count_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #1 !dbg !8146 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %count = alloca i64, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %tmp = alloca %struct.dma_chan_percpu*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.dma_chan_percpu*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8147, metadata !DIExpression()), !dbg !8148
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8149, metadata !DIExpression()), !dbg !8150
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8151, metadata !DIExpression()), !dbg !8152
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !8153, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8155, metadata !DIExpression()), !dbg !8156
  store i64 0, i64* %count, align 8, !dbg !8156
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8157, metadata !DIExpression()), !dbg !8158
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8159, metadata !DIExpression()), !dbg !8160
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !8161
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8162
  %call = call %struct.dma_chan* @dev_to_dma_chan(%struct.device* %0) #9, !dbg !8163
  store %struct.dma_chan* %call, %struct.dma_chan** %chan, align 8, !dbg !8164
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !8165
  %tobool = icmp ne %struct.dma_chan* %1, null, !dbg !8165
  br i1 %tobool, label %if.then, label %if.else, !dbg !8167

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8168
  br label %for.cond, !dbg !8168

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !8171
  %cmp = icmp slt i32 %2, 1, !dbg !8171
  br i1 %cmp, label %for.body, label %for.end, !dbg !8168

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !8173
  br label %do.body, !dbg !8175

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !8177, metadata !DIExpression()), !dbg !8179
  store i8* null, i8** %__vpp_verify, align 8, !dbg !8179
  %4 = load i8*, i8** %__vpp_verify, align 8, !dbg !8179
  br label %do.end, !dbg !8179

do.end:                                           ; preds = %do.body
  %5 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !8175
  %local = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %5, i32 0, i32 8, !dbg !8175
  %6 = load %struct.dma_chan_percpu*, %struct.dma_chan_percpu** %local, align 8, !dbg !8175
  store %struct.dma_chan_percpu* %6, %struct.dma_chan_percpu** %tmp1, align 8, !dbg !8179
  %7 = load %struct.dma_chan_percpu*, %struct.dma_chan_percpu** %tmp1, align 8, !dbg !8175
  store %struct.dma_chan_percpu* %7, %struct.dma_chan_percpu** %tmp, align 8, !dbg !8173
  %8 = load %struct.dma_chan_percpu*, %struct.dma_chan_percpu** %tmp, align 8, !dbg !8173
  %memcpy_count = getelementptr inbounds %struct.dma_chan_percpu, %struct.dma_chan_percpu* %8, i32 0, i32 0, !dbg !8180
  %9 = load i64, i64* %memcpy_count, align 8, !dbg !8180
  %10 = load i64, i64* %count, align 8, !dbg !8181
  %add = add i64 %10, %9, !dbg !8181
  store i64 %add, i64* %count, align 8, !dbg !8181
  br label %for.inc, !dbg !8182

for.inc:                                          ; preds = %do.end
  %11 = load i32, i32* %i, align 4, !dbg !8171
  %inc = add i32 %11, 1, !dbg !8171
  store i32 %inc, i32* %i, align 4, !dbg !8171
  br label %for.cond, !dbg !8171, !llvm.loop !8183

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !8185
  %13 = load i64, i64* %count, align 8, !dbg !8186
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i64 %13) #9, !dbg !8187
  store i32 %call2, i32* %err, align 4, !dbg !8188
  br label %if.end, !dbg !8189

if.else:                                          ; preds = %entry
  store i32 -19, i32* %err, align 4, !dbg !8190
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !8191
  %14 = load i32, i32* %err, align 4, !dbg !8192
  %conv = sext i32 %14 to i64, !dbg !8192
  ret i64 %conv, !dbg !8193
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_chan* @dev_to_dma_chan(%struct.device* %dev) #1 !dbg !8194 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %chan_dev = alloca %struct.dma_chan_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dma_chan_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8197, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.declare(metadata %struct.dma_chan_dev** %chan_dev, metadata !8199, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8201, metadata !DIExpression()), !dbg !8203
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8203
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8203
  store i8* %1, i8** %__mptr, align 8, !dbg !8203
  br label %do.body, !dbg !8203

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8204

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8203
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !8203
  %3 = bitcast i8* %add.ptr to %struct.dma_chan_dev*, !dbg !8203
  store %struct.dma_chan_dev* %3, %struct.dma_chan_dev** %tmp, align 8, !dbg !8204
  %4 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %tmp, align 8, !dbg !8203
  store %struct.dma_chan_dev* %4, %struct.dma_chan_dev** %chan_dev, align 8, !dbg !8206
  %5 = load %struct.dma_chan_dev*, %struct.dma_chan_dev** %chan_dev, align 8, !dbg !8207
  %chan = getelementptr inbounds %struct.dma_chan_dev, %struct.dma_chan_dev* %5, i32 0, i32 0, !dbg !8208
  %6 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !8208
  ret %struct.dma_chan* %6, !dbg !8209
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @bytes_transferred_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #1 !dbg !8210 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %count = alloca i64, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %tmp = alloca %struct.dma_chan_percpu*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.dma_chan_percpu*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8211, metadata !DIExpression()), !dbg !8212
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8213, metadata !DIExpression()), !dbg !8214
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8215, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !8217, metadata !DIExpression()), !dbg !8218
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8219, metadata !DIExpression()), !dbg !8220
  store i64 0, i64* %count, align 8, !dbg !8220
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8221, metadata !DIExpression()), !dbg !8222
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8223, metadata !DIExpression()), !dbg !8224
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !8225
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8226
  %call = call %struct.dma_chan* @dev_to_dma_chan(%struct.device* %0) #9, !dbg !8227
  store %struct.dma_chan* %call, %struct.dma_chan** %chan, align 8, !dbg !8228
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !8229
  %tobool = icmp ne %struct.dma_chan* %1, null, !dbg !8229
  br i1 %tobool, label %if.then, label %if.else, !dbg !8231

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8232
  br label %for.cond, !dbg !8232

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !8235
  %cmp = icmp slt i32 %2, 1, !dbg !8235
  br i1 %cmp, label %for.body, label %for.end, !dbg !8232

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !8237
  br label %do.body, !dbg !8239

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !8241, metadata !DIExpression()), !dbg !8243
  store i8* null, i8** %__vpp_verify, align 8, !dbg !8243
  %4 = load i8*, i8** %__vpp_verify, align 8, !dbg !8243
  br label %do.end, !dbg !8243

do.end:                                           ; preds = %do.body
  %5 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !8239
  %local = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %5, i32 0, i32 8, !dbg !8239
  %6 = load %struct.dma_chan_percpu*, %struct.dma_chan_percpu** %local, align 8, !dbg !8239
  store %struct.dma_chan_percpu* %6, %struct.dma_chan_percpu** %tmp1, align 8, !dbg !8243
  %7 = load %struct.dma_chan_percpu*, %struct.dma_chan_percpu** %tmp1, align 8, !dbg !8239
  store %struct.dma_chan_percpu* %7, %struct.dma_chan_percpu** %tmp, align 8, !dbg !8237
  %8 = load %struct.dma_chan_percpu*, %struct.dma_chan_percpu** %tmp, align 8, !dbg !8237
  %bytes_transferred = getelementptr inbounds %struct.dma_chan_percpu, %struct.dma_chan_percpu* %8, i32 0, i32 1, !dbg !8244
  %9 = load i64, i64* %bytes_transferred, align 8, !dbg !8244
  %10 = load i64, i64* %count, align 8, !dbg !8245
  %add = add i64 %10, %9, !dbg !8245
  store i64 %add, i64* %count, align 8, !dbg !8245
  br label %for.inc, !dbg !8246

for.inc:                                          ; preds = %do.end
  %11 = load i32, i32* %i, align 4, !dbg !8235
  %inc = add i32 %11, 1, !dbg !8235
  store i32 %inc, i32* %i, align 4, !dbg !8235
  br label %for.cond, !dbg !8235, !llvm.loop !8247

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !8249
  %13 = load i64, i64* %count, align 8, !dbg !8250
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i64 %13) #9, !dbg !8251
  store i32 %call2, i32* %err, align 4, !dbg !8252
  br label %if.end, !dbg !8253

if.else:                                          ; preds = %entry
  store i32 -19, i32* %err, align 4, !dbg !8254
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !8255
  %14 = load i32, i32* %err, align 4, !dbg !8256
  %conv = sext i32 %14 to i64, !dbg !8256
  ret i64 %conv, !dbg !8257
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @in_use_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #1 !dbg !8258 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %err = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8259, metadata !DIExpression()), !dbg !8260
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8261, metadata !DIExpression()), !dbg !8262
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8263, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !8265, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8267, metadata !DIExpression()), !dbg !8268
  call void @mutex_lock(%struct.mutex* @dma_list_mutex) #9, !dbg !8269
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8270
  %call = call %struct.dma_chan* @dev_to_dma_chan(%struct.device* %0) #9, !dbg !8271
  store %struct.dma_chan* %call, %struct.dma_chan** %chan, align 8, !dbg !8272
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !8273
  %tobool = icmp ne %struct.dma_chan* %1, null, !dbg !8273
  br i1 %tobool, label %if.then, label %if.else, !dbg !8275

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !8276
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !8277
  %client_count = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %3, i32 0, i32 9, !dbg !8278
  %4 = load i32, i32* %client_count, align 8, !dbg !8278
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i32 %4) #9, !dbg !8279
  store i32 %call1, i32* %err, align 4, !dbg !8280
  br label %if.end, !dbg !8281

if.else:                                          ; preds = %entry
  store i32 -19, i32* %err, align 4, !dbg !8282
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @mutex_unlock(%struct.mutex* @dma_list_mutex) #9, !dbg !8283
  %5 = load i32, i32* %err, align 4, !dbg !8284
  %conv = sext i32 %5 to i64, !dbg !8284
  ret i64 %conv, !dbg !8285
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #1 !dbg !8286 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8287, metadata !DIExpression()), !dbg !8288
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8289
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !8290
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8291
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8292
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !8293
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8294
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !8295
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !8296
  ret void, !dbg !8297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_set(%struct.refcount_struct* %r, i32 %n) #1 !dbg !8298 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8301, metadata !DIExpression()), !dbg !8305
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !8309, metadata !DIExpression()), !dbg !8310
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7017, metadata !DIExpression()), !dbg !8311
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7021, metadata !DIExpression()), !dbg !8313
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8314, metadata !DIExpression()), !dbg !8315
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !8316, metadata !DIExpression()), !dbg !8317
  %r.addr = alloca %struct.refcount_struct*, align 8
  %n.addr = alloca i32, align 4
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !8318, metadata !DIExpression()), !dbg !8319
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8320, metadata !DIExpression()), !dbg !8321
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !8322
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !8323
  %1 = load i32, i32* %n.addr, align 4, !dbg !8324
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32 %1, i32* %i.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8325
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !8325
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8326
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !8327
  %conv.i.i = trunc i64 %5 to i32, !dbg !8327
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !8328
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8329
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8329
  call void @kcsan_check_access(i8* %6, i64 %7, i32 5) #12, !dbg !8329
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8330
  %9 = load i32, i32* %i.addr.i, align 4, !dbg !8331
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %i.addr.i.i, align 4
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !8332
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8332
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !8332
  store volatile i32 %10, i32* %counter.i.i, align 4, !dbg !8332
  ret void, !dbg !8334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xa_init_flags(%struct.xarray* %xa, i32 %flags) #1 !dbg !8335 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8339, metadata !DIExpression()), !dbg !8345
  %xa.addr = alloca %struct.xarray*, align 8
  %flags.addr = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.xarray* %xa, %struct.xarray** %xa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xarray** %xa.addr, metadata !8348, metadata !DIExpression()), !dbg !8349
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8350, metadata !DIExpression()), !dbg !8351
  br label %do.body, !dbg !8352

do.body:                                          ; preds = %entry
  %0 = load %struct.xarray*, %struct.xarray** %xa.addr, align 8, !dbg !8353
  %xa_lock = getelementptr inbounds %struct.xarray, %struct.xarray* %0, i32 0, i32 0, !dbg !8353
  store %struct.spinlock* %xa_lock, %struct.spinlock** %lock.addr.i, align 8
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8354
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !8355
  %rlock.i = bitcast %union.anon.3* %2 to %struct.raw_spinlock*, !dbg !8355
  %3 = load %struct.xarray*, %struct.xarray** %xa.addr, align 8, !dbg !8353
  %xa_lock1 = getelementptr inbounds %struct.xarray, %struct.xarray* %3, i32 0, i32 0, !dbg !8353
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8353
  %rlock = bitcast %union.anon.3* %4 to %struct.raw_spinlock*, !dbg !8353
  %5 = bitcast %struct.spinlock* %xa_lock1 to i8*, !dbg !8353
  %6 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 %6, i64 0, i1 false), !dbg !8353
  br label %do.end, !dbg !8353

do.end:                                           ; preds = %do.body
  %7 = load i32, i32* %flags.addr, align 4, !dbg !8356
  %8 = load %struct.xarray*, %struct.xarray** %xa.addr, align 8, !dbg !8357
  %xa_flags = getelementptr inbounds %struct.xarray, %struct.xarray* %8, i32 0, i32 1, !dbg !8358
  store i32 %7, i32* %xa_flags, align 8, !dbg !8359
  %9 = load %struct.xarray*, %struct.xarray** %xa.addr, align 8, !dbg !8360
  %xa_head = getelementptr inbounds %struct.xarray, %struct.xarray* %9, i32 0, i32 2, !dbg !8361
  store i8* null, i8** %xa_head, align 8, !dbg !8362
  ret void, !dbg !8363
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add_rcu(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !8364 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %_r_a_p__v = alloca i64, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8367, metadata !DIExpression()), !dbg !8368
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8369, metadata !DIExpression()), !dbg !8370
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8371, metadata !DIExpression()), !dbg !8372
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8373
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8375
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8376
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #9, !dbg !8377
  br i1 %call, label %if.end, label %if.then, !dbg !8378

if.then:                                          ; preds = %entry
  br label %return, !dbg !8379

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8380
  %4 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8381
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 0, !dbg !8382
  store %struct.list_head* %3, %struct.list_head** %next1, align 8, !dbg !8383
  %5 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8384
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8385
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 1, !dbg !8386
  store %struct.list_head* %5, %struct.list_head** %prev2, align 8, !dbg !8387
  br label %do.body, !dbg !8388

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %_r_a_p__v, metadata !8389, metadata !DIExpression()), !dbg !8391
  %7 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8391
  %8 = ptrtoint %struct.list_head* %7 to i64, !dbg !8391
  store i64 %8, i64* %_r_a_p__v, align 8, !dbg !8391
  br i1 false, label %land.lhs.true, label %if.else, !dbg !8392

land.lhs.true:                                    ; preds = %do.body
  %9 = load i64, i64* %_r_a_p__v, align 8, !dbg !8392
  %cmp = icmp eq i64 %9, 0, !dbg !8392
  br i1 %cmp, label %if.then3, label %if.else, !dbg !8391

if.then3:                                         ; preds = %land.lhs.true
  br label %do.body4, !dbg !8392

do.body4:                                         ; preds = %if.then3
  br label %do.body5, !dbg !8394

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !8396

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !8394

do.body6:                                         ; preds = %do.end
  %10 = load i64, i64* %_r_a_p__v, align 8, !dbg !8398
  %11 = inttoptr i64 %10 to %struct.list_head*, !dbg !8398
  %12 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8398
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %12, i32 0, i32 0, !dbg !8398
  store volatile %struct.list_head* %11, %struct.list_head** %next7, align 8, !dbg !8398
  br label %do.end8, !dbg !8398

do.end8:                                          ; preds = %do.body6
  br label %do.end9, !dbg !8394

do.end9:                                          ; preds = %do.end8
  br label %if.end21, !dbg !8394

if.else:                                          ; preds = %land.lhs.true, %do.body
  br label %do.body10, !dbg !8392

do.body10:                                        ; preds = %if.else
  br label %do.body11, !dbg !8400

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !8402

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !8400, !srcloc !8404
  br label %do.body13, !dbg !8400

do.body13:                                        ; preds = %do.end12
  br label %do.body14, !dbg !8405

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !8407

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !8405

do.body16:                                        ; preds = %do.end15
  %13 = load i64, i64* %_r_a_p__v, align 8, !dbg !8409
  %14 = inttoptr i64 %13 to %struct.list_head*, !dbg !8409
  %15 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8409
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %15, i32 0, i32 0, !dbg !8409
  store volatile %struct.list_head* %14, %struct.list_head** %next17, align 8, !dbg !8409
  br label %do.end18, !dbg !8409

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !8405

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8400

do.end20:                                         ; preds = %do.end19
  br label %if.end21

if.end21:                                         ; preds = %do.end20, %do.end9
  br label %do.end22, !dbg !8391

do.end22:                                         ; preds = %if.end21
  %16 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8411
  %17 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8412
  %prev23 = getelementptr inbounds %struct.list_head, %struct.list_head* %17, i32 0, i32 1, !dbg !8413
  store %struct.list_head* %16, %struct.list_head** %prev23, align 8, !dbg !8414
  br label %return, !dbg !8415

return:                                           ; preds = %do.end22, %if.then
  ret void, !dbg !8415
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !8416 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8419, metadata !DIExpression()), !dbg !8420
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8421, metadata !DIExpression()), !dbg !8422
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8423, metadata !DIExpression()), !dbg !8424
  ret i1 true, !dbg !8425
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_device_release(%struct.kref* %ref) #1 !dbg !8426 {
entry:
  %ref.addr = alloca %struct.kref*, align 8
  %device = alloca %struct.dma_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dma_device*, align 8
  store %struct.kref* %ref, %struct.kref** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %ref.addr, metadata !8427, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.declare(metadata %struct.dma_device** %device, metadata !8429, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8431, metadata !DIExpression()), !dbg !8433
  %0 = load %struct.kref*, %struct.kref** %ref.addr, align 8, !dbg !8433
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !8433
  store i8* %1, i8** %__mptr, align 8, !dbg !8433
  br label %do.body, !dbg !8433

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8434

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8433
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8433
  %3 = bitcast i8* %add.ptr to %struct.dma_device*, !dbg !8433
  store %struct.dma_device* %3, %struct.dma_device** %tmp, align 8, !dbg !8434
  %4 = load %struct.dma_device*, %struct.dma_device** %tmp, align 8, !dbg !8433
  store %struct.dma_device* %4, %struct.dma_device** %device, align 8, !dbg !8430
  %5 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !8436
  %global_node = getelementptr inbounds %struct.dma_device, %struct.dma_device* %5, i32 0, i32 4, !dbg !8437
  call void @list_del_rcu(%struct.list_head* %global_node) #9, !dbg !8438
  call void @dma_channel_rebalance() #9, !dbg !8439
  %6 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !8440
  %device_release = getelementptr inbounds %struct.dma_device, %struct.dma_device* %6, i32 0, i32 49, !dbg !8442
  %7 = load void (%struct.dma_device*)*, void (%struct.dma_device*)** %device_release, align 8, !dbg !8442
  %tobool = icmp ne void (%struct.dma_device*)* %7, null, !dbg !8440
  br i1 %tobool, label %if.then, label %if.end, !dbg !8443

if.then:                                          ; preds = %do.end
  %8 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !8444
  %device_release1 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %8, i32 0, i32 49, !dbg !8445
  %9 = load void (%struct.dma_device*)*, void (%struct.dma_device*)** %device_release1, align 8, !dbg !8445
  %10 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !8446
  call void %9(%struct.dma_device* %10) #9, !dbg !8444
  br label %if.end, !dbg !8444

if.end:                                           ; preds = %if.then, %do.end
  ret void, !dbg !8447
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devres_alloc_node(void (%struct.device*, i8*)*, i64, i32, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %r) #1 !dbg !8448 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !8449, metadata !DIExpression()), !dbg !8450
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !8451
  %call = call zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %0, i32* null) #9, !dbg !8452
  ret i1 %call, !dbg !8453
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %r, i32* %oldp) #1 !dbg !8454 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !8455, metadata !DIExpression()), !dbg !8456
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !8457, metadata !DIExpression()), !dbg !8458
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !8459
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !8460
  %call = call zeroext i1 @__refcount_sub_and_test(i32 1, %struct.refcount_struct* %0, i32* %1) #9, !dbg !8461
  ret i1 %call, !dbg !8462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_sub_and_test(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #1 !dbg !8463 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !8464, metadata !DIExpression()), !dbg !8468
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8472, metadata !DIExpression()), !dbg !8473
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !8474, metadata !DIExpression()), !dbg !8476
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7238, metadata !DIExpression()), !dbg !8477
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7242, metadata !DIExpression()), !dbg !8479
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !8480, metadata !DIExpression()), !dbg !8481
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8482, metadata !DIExpression()), !dbg !8483
  %retval = alloca i1, align 1
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !8484, metadata !DIExpression()), !dbg !8485
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !8486, metadata !DIExpression()), !dbg !8487
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !8488, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.declare(metadata i32* %old, metadata !8490, metadata !DIExpression()), !dbg !8491
  %0 = load i32, i32* %i.addr, align 4, !dbg !8492
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !8493
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !8494
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8495
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !8495
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8496
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !8497
  %conv.i.i = trunc i64 %5 to i32, !dbg !8497
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !8498
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8499
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8499
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !8499
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !8500
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8501
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !8476
  %sub.i.i = sub i32 0, %10, !dbg !8476
  store i32 %sub.i.i, i32* %__ret.i.i, align 4, !dbg !8476
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !8476
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8476
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !8476
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #11, !dbg !8476, !srcloc !8502
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !8476
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !8476
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !8476
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !8476
  store i32 %15, i32* %old, align 4, !dbg !8491
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !8503
  %tobool = icmp ne i32* %16, null, !dbg !8503
  br i1 %tobool, label %if.then, label %if.end, !dbg !8505

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !8506
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !8507
  store i32 %17, i32* %18, align 4, !dbg !8508
  br label %if.end, !dbg !8509

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !8510
  %20 = load i32, i32* %i.addr, align 4, !dbg !8512
  %cmp = icmp eq i32 %19, %20, !dbg !8513
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !8514

if.then1:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !8515, !srcloc !8517
  store i1 true, i1* %retval, align 1, !dbg !8518
  br label %return, !dbg !8518

if.end2:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !8519
  %cmp3 = icmp slt i32 %21, 0, !dbg !8519
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !8519

lor.rhs:                                          ; preds = %if.end2
  %22 = load i32, i32* %old, align 4, !dbg !8519
  %23 = load i32, i32* %i.addr, align 4, !dbg !8519
  %sub = sub i32 %22, %23, !dbg !8519
  %cmp4 = icmp slt i32 %sub, 0, !dbg !8519
  br label %lor.end, !dbg !8519

lor.end:                                          ; preds = %lor.rhs, %if.end2
  %24 = phi i1 [ true, %if.end2 ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %24, true, !dbg !8519
  %lnot5 = xor i1 %lnot, true, !dbg !8519
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !8519
  %conv = sext i32 %lnot.ext to i64, !dbg !8519
  %tobool6 = icmp ne i64 %conv, 0, !dbg !8519
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8521

if.then7:                                         ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !8522
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 3) #9, !dbg !8523
  br label %if.end8, !dbg !8523

if.end8:                                          ; preds = %if.then7, %lor.end
  store i1 false, i1* %retval, align 1, !dbg !8524
  br label %return, !dbg !8524

return:                                           ; preds = %if.end8, %if.then1
  %26 = load i1, i1* %retval, align 1, !dbg !8525
  ret i1 %26, !dbg !8525
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #4

; Function Attrs: noredzone
declare dso_local void @mempool_free(i8*, %struct.mempool_s*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_count_order(i32 %count) #1 !dbg !8526 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8530, metadata !DIExpression()), !dbg !8532
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !8534, metadata !DIExpression()), !dbg !8535
  %retval = alloca i32, align 4
  %count.addr = alloca i32, align 4
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !8536, metadata !DIExpression()), !dbg !8537
  %0 = load i32, i32* %count.addr, align 4, !dbg !8538
  %cmp = icmp eq i32 %0, 0, !dbg !8540
  br i1 %cmp, label %if.then, label %if.end, !dbg !8541

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8542
  br label %return, !dbg !8542

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %count.addr, align 4, !dbg !8543
  %dec = add i32 %1, -1, !dbg !8543
  store i32 %dec, i32* %count.addr, align 4, !dbg !8543
  store i32 %dec, i32* %x.addr.i, align 4
  %2 = load i32, i32* %x.addr.i, align 4, !dbg !8544
  %3 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %2, i32 -1) #14, !dbg !8545, !srcloc !8546
  store i32 %3, i32* %r.i, align 4, !dbg !8545
  %4 = load i32, i32* %r.i, align 4, !dbg !8547
  %add.i = add i32 %4, 1, !dbg !8548
  store i32 %add.i, i32* %retval, align 4, !dbg !8549
  br label %return, !dbg !8549

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8550
  ret i32 %5, !dbg !8550
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @dmaengine_is_metadata_mode_supported(%struct.dma_chan* %chan, i32 %mode) #1 !dbg !8551 {
entry:
  %retval = alloca i1, align 1
  %chan.addr = alloca %struct.dma_chan*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !8554, metadata !DIExpression()), !dbg !8555
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8556, metadata !DIExpression()), !dbg !8557
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !8558
  %tobool = icmp ne %struct.dma_chan* %0, null, !dbg !8558
  br i1 %tobool, label %if.end, label %if.then, !dbg !8560

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8561
  br label %return, !dbg !8561

if.end:                                           ; preds = %entry
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !8562
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %1, i32 0, i32 0, !dbg !8563
  %2 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !8563
  %desc_metadata_modes = getelementptr inbounds %struct.dma_device, %struct.dma_device* %2, i32 0, i32 7, !dbg !8564
  %3 = load i32, i32* %desc_metadata_modes, align 8, !dbg !8564
  %4 = load i32, i32* %mode.addr, align 4, !dbg !8565
  %and = and i32 %3, %4, !dbg !8566
  %tobool1 = icmp ne i32 %and, 0, !dbg !8567
  %lnot = xor i1 %tobool1, true, !dbg !8567
  %lnot2 = xor i1 %lnot, true, !dbg !8568
  store i1 %lnot2, i1* %retval, align 1, !dbg !8569
  br label %return, !dbg !8569

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !8570
  ret i1 %5, !dbg !8570
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @dmaengine_init_unmap_pool() #0 section ".init.text" !dbg !8571 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %p = alloca %struct.dmaengine_unmap_pool*, align 8
  %size = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8572, metadata !DIExpression()), !dbg !8573
  store i32 0, i32* %i, align 4, !dbg !8574
  br label %for.cond, !dbg !8576

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8577
  %conv = sext i32 %0 to i64, !dbg !8577
  %cmp = icmp ult i64 %conv, 1, !dbg !8579
  br i1 %cmp, label %for.body, label %for.end, !dbg !8580

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.dmaengine_unmap_pool** %p, metadata !8581, metadata !DIExpression()), !dbg !8583
  %1 = load i32, i32* %i, align 4, !dbg !8584
  %idxprom = sext i32 %1 to i64, !dbg !8585
  %arrayidx = getelementptr [1 x %struct.dmaengine_unmap_pool], [1 x %struct.dmaengine_unmap_pool]* @unmap_pool, i64 0, i64 %idxprom, !dbg !8585
  store %struct.dmaengine_unmap_pool* %arrayidx, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8583
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8586, metadata !DIExpression()), !dbg !8587
  %2 = load %struct.dmaengine_unmap_pool*, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8588
  %size2 = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %2, i32 0, i32 3, !dbg !8589
  %3 = load i64, i64* %size2, align 8, !dbg !8589
  %mul = mul i64 8, %3, !dbg !8590
  %add = add i64 32, %mul, !dbg !8591
  store i64 %add, i64* %size, align 8, !dbg !8592
  %4 = load %struct.dmaengine_unmap_pool*, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8593
  %name = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %4, i32 0, i32 1, !dbg !8594
  %5 = load i8*, i8** %name, align 8, !dbg !8594
  %6 = load i64, i64* %size, align 8, !dbg !8595
  %conv3 = trunc i64 %6 to i32, !dbg !8595
  %call = call %struct.kmem_cache* @kmem_cache_create(i8* %5, i32 %conv3, i32 0, i32 8192, void (i8*)* null) #9, !dbg !8596
  %7 = load %struct.dmaengine_unmap_pool*, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8597
  %cache = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %7, i32 0, i32 0, !dbg !8598
  store %struct.kmem_cache* %call, %struct.kmem_cache** %cache, align 8, !dbg !8599
  %8 = load %struct.dmaengine_unmap_pool*, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8600
  %cache4 = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %8, i32 0, i32 0, !dbg !8602
  %9 = load %struct.kmem_cache*, %struct.kmem_cache** %cache4, align 8, !dbg !8602
  %tobool = icmp ne %struct.kmem_cache* %9, null, !dbg !8600
  br i1 %tobool, label %if.end, label %if.then, !dbg !8603

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !8604

if.end:                                           ; preds = %for.body
  %10 = load %struct.dmaengine_unmap_pool*, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8605
  %cache5 = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %10, i32 0, i32 0, !dbg !8606
  %11 = load %struct.kmem_cache*, %struct.kmem_cache** %cache5, align 8, !dbg !8606
  %call6 = call %struct.mempool_s* @mempool_create_slab_pool(i32 1, %struct.kmem_cache* %11) #9, !dbg !8607
  %12 = load %struct.dmaengine_unmap_pool*, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8608
  %pool = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %12, i32 0, i32 2, !dbg !8609
  store %struct.mempool_s* %call6, %struct.mempool_s** %pool, align 8, !dbg !8610
  %13 = load %struct.dmaengine_unmap_pool*, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8611
  %pool7 = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %13, i32 0, i32 2, !dbg !8613
  %14 = load %struct.mempool_s*, %struct.mempool_s** %pool7, align 8, !dbg !8613
  %tobool8 = icmp ne %struct.mempool_s* %14, null, !dbg !8611
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !8614

if.then9:                                         ; preds = %if.end
  br label %for.end, !dbg !8615

if.end10:                                         ; preds = %if.end
  br label %for.inc, !dbg !8616

for.inc:                                          ; preds = %if.end10
  %15 = load i32, i32* %i, align 4, !dbg !8617
  %inc = add i32 %15, 1, !dbg !8617
  store i32 %inc, i32* %i, align 4, !dbg !8617
  br label %for.cond, !dbg !8618, !llvm.loop !8619

for.end:                                          ; preds = %if.then9, %if.then, %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !8621
  %conv11 = sext i32 %16 to i64, !dbg !8621
  %cmp12 = icmp eq i64 %conv11, 1, !dbg !8623
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !8624

if.then14:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !8625
  br label %return, !dbg !8625

if.end15:                                         ; preds = %for.end
  call void @dmaengine_destroy_unmap_pool() #9, !dbg !8626
  store i32 -12, i32* %retval, align 4, !dbg !8627
  br label %return, !dbg !8627

return:                                           ; preds = %if.end15, %if.then14
  %17 = load i32, i32* %retval, align 4, !dbg !8628
  ret i32 %17, !dbg !8628
}

; Function Attrs: noredzone
declare dso_local i32 @__class_register(%struct.class*, %struct.lock_class_key*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dmaengine_debugfs_init() #1 !dbg !8629 {
entry:
  ret void, !dbg !8630
}

; Function Attrs: noredzone
declare dso_local %struct.kmem_cache* @kmem_cache_create(i8*, i32, i32, i32, void (i8*)*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mempool_s* @mempool_create_slab_pool(i32 %min_nr, %struct.kmem_cache* %kc) #1 !dbg !8631 {
entry:
  %min_nr.addr = alloca i32, align 4
  %kc.addr = alloca %struct.kmem_cache*, align 8
  store i32 %min_nr, i32* %min_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_nr.addr, metadata !8634, metadata !DIExpression()), !dbg !8635
  store %struct.kmem_cache* %kc, %struct.kmem_cache** %kc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %kc.addr, metadata !8636, metadata !DIExpression()), !dbg !8637
  %0 = load i32, i32* %min_nr.addr, align 4, !dbg !8638
  %1 = load %struct.kmem_cache*, %struct.kmem_cache** %kc.addr, align 8, !dbg !8639
  %2 = bitcast %struct.kmem_cache* %1 to i8*, !dbg !8640
  %call = call %struct.mempool_s* @mempool_create(i32 %0, i8* (i32, i8*)* @mempool_alloc_slab, void (i8*, i8*)* @mempool_free_slab, i8* %2) #9, !dbg !8641
  ret %struct.mempool_s* %call, !dbg !8642
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dmaengine_destroy_unmap_pool() #1 !dbg !8643 {
entry:
  %i = alloca i32, align 4
  %p = alloca %struct.dmaengine_unmap_pool*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8644, metadata !DIExpression()), !dbg !8645
  store i32 0, i32* %i, align 4, !dbg !8646
  br label %for.cond, !dbg !8648

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8649
  %conv = sext i32 %0 to i64, !dbg !8649
  %cmp = icmp ult i64 %conv, 1, !dbg !8651
  br i1 %cmp, label %for.body, label %for.end, !dbg !8652

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.dmaengine_unmap_pool** %p, metadata !8653, metadata !DIExpression()), !dbg !8655
  %1 = load i32, i32* %i, align 4, !dbg !8656
  %idxprom = sext i32 %1 to i64, !dbg !8657
  %arrayidx = getelementptr [1 x %struct.dmaengine_unmap_pool], [1 x %struct.dmaengine_unmap_pool]* @unmap_pool, i64 0, i64 %idxprom, !dbg !8657
  store %struct.dmaengine_unmap_pool* %arrayidx, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8655
  %2 = load %struct.dmaengine_unmap_pool*, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8658
  %pool = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %2, i32 0, i32 2, !dbg !8659
  %3 = load %struct.mempool_s*, %struct.mempool_s** %pool, align 8, !dbg !8659
  call void @mempool_destroy(%struct.mempool_s* %3) #9, !dbg !8660
  %4 = load %struct.dmaengine_unmap_pool*, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8661
  %pool2 = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %4, i32 0, i32 2, !dbg !8662
  store %struct.mempool_s* null, %struct.mempool_s** %pool2, align 8, !dbg !8663
  %5 = load %struct.dmaengine_unmap_pool*, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8664
  %cache = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %5, i32 0, i32 0, !dbg !8665
  %6 = load %struct.kmem_cache*, %struct.kmem_cache** %cache, align 8, !dbg !8665
  call void @kmem_cache_destroy(%struct.kmem_cache* %6) #9, !dbg !8666
  %7 = load %struct.dmaengine_unmap_pool*, %struct.dmaengine_unmap_pool** %p, align 8, !dbg !8667
  %cache3 = getelementptr inbounds %struct.dmaengine_unmap_pool, %struct.dmaengine_unmap_pool* %7, i32 0, i32 0, !dbg !8668
  store %struct.kmem_cache* null, %struct.kmem_cache** %cache3, align 8, !dbg !8669
  br label %for.inc, !dbg !8670

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !8671
  %inc = add i32 %8, 1, !dbg !8671
  store i32 %inc, i32* %i, align 4, !dbg !8671
  br label %for.cond, !dbg !8672, !llvm.loop !8673

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8675
}

; Function Attrs: noredzone
declare dso_local %struct.mempool_s* @mempool_create(i32, i8* (i32, i8*)*, void (i8*, i8*)*, i8*) #4

; Function Attrs: noredzone
declare dso_local i8* @mempool_alloc_slab(i32, i8*) #4

; Function Attrs: noredzone
declare dso_local void @mempool_free_slab(i8*, i8*) #4

; Function Attrs: noredzone
declare dso_local void @mempool_destroy(%struct.mempool_s*) #4

; Function Attrs: noredzone
declare dso_local void @kmem_cache_destroy(%struct.kmem_cache*) #4

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone }
attributes #10 = { cold noredzone }
attributes #11 = { nounwind }
attributes #12 = { noredzone nounwind }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4389, !4390, !4391, !4392}
!llvm.ident = !{!4393}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_dma_channel_table_init244", scope: !2, file: !3, line: 293, type: !269, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !225, globals: !4297, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/dma/dmaengine.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !14, !19, !28, !35, !41, !46, !52, !59, !65, !74, !82, !88, !94, !101, !109, !115, !129, !134, !146, !152, !156, !163, !174, !193, !198, !206, !213, !218}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_status", file: !6, line: 37, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/dmaengine.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13}
!9 = !DIEnumerator(name: "DMA_COMPLETE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DMA_IN_PROGRESS", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DMA_PAUSED", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "DMA_ERROR", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "DMA_OUT_OF_ORDER", value: 4, isUnsigned: true)
!14 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_desc_metadata_mode", file: !6, line: 288, baseType: !7, size: 32, elements: !15)
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "DESC_METADATA_NONE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "DESC_METADATA_CLIENT", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "DESC_METADATA_ENGINE", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_alignment", file: !6, line: 732, baseType: !7, size: 32, elements: !20)
!20 = !{!21, !22, !23, !24, !25, !26, !27}
!21 = !DIEnumerator(name: "DMAENGINE_ALIGN_1_BYTE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "DMAENGINE_ALIGN_2_BYTES", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "DMAENGINE_ALIGN_4_BYTES", value: 2, isUnsigned: true)
!24 = !DIEnumerator(name: "DMAENGINE_ALIGN_8_BYTES", value: 3, isUnsigned: true)
!25 = !DIEnumerator(name: "DMAENGINE_ALIGN_16_BYTES", value: 4, isUnsigned: true)
!26 = !DIEnumerator(name: "DMAENGINE_ALIGN_32_BYTES", value: 5, isUnsigned: true)
!27 = !DIEnumerator(name: "DMAENGINE_ALIGN_64_BYTES", value: 6, isUnsigned: true)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !29, line: 15, baseType: !7, size: 32, elements: !30)
!29 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!30 = !{!31, !32, !33, !34}
!31 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!32 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!33 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!34 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !36, line: 546, baseType: !7, size: 32, elements: !37)
!36 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!37 = !{!38, !39, !40}
!38 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!41 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !42, line: 65, baseType: !7, size: 32, elements: !43)
!42 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!43 = !{!44, !45}
!44 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!45 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !47, line: 16, baseType: !7, size: 32, elements: !48)
!47 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!48 = !{!49, !50, !51}
!49 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!50 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!51 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !53, line: 59, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58}
!55 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!56 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!57 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!58 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !60, line: 54, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64}
!62 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !66, line: 296, baseType: !7, size: 32, elements: !67)
!66 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!67 = !{!68, !69, !70, !71, !72, !73}
!68 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!69 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!70 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!71 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!72 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!73 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !75, line: 9, baseType: !7, size: 32, elements: !76)
!75 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!76 = !{!77, !78, !79, !80, !81}
!77 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!78 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!79 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!80 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!81 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !83, line: 26, baseType: !7, size: 32, elements: !84)
!83 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!84 = !{!85, !86, !87}
!85 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!86 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!87 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !89, line: 44, baseType: !7, size: 32, elements: !90)
!89 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!90 = !{!91, !92, !93}
!91 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !95, line: 343, baseType: !7, size: 32, elements: !96)
!95 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!96 = !{!97, !98, !99, !100}
!97 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !102, line: 524, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105, !106, !107, !108}
!104 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !102, line: 502, baseType: !7, size: 32, elements: !110)
!110 = !{!111, !112, !113, !114}
!111 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!113 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!114 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !116, line: 76, baseType: !7, size: 32, elements: !117)
!116 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!117 = !{!118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128}
!118 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!121 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!122 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!123 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!124 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!125 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!126 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!127 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!128 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_residue_granularity", file: !6, line: 468, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132, !133}
!131 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_DESCRIPTOR", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_SEGMENT", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_BURST", value: 2, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_ctrl_flags", file: !6, line: 194, baseType: !7, size: 32, elements: !135)
!135 = !{!136, !137, !138, !139, !140, !141, !142, !143, !144, !145}
!136 = !DIEnumerator(name: "DMA_PREP_INTERRUPT", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "DMA_CTRL_ACK", value: 2, isUnsigned: true)
!138 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_P", value: 4, isUnsigned: true)
!139 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_Q", value: 8, isUnsigned: true)
!140 = !DIEnumerator(name: "DMA_PREP_CONTINUE", value: 16, isUnsigned: true)
!141 = !DIEnumerator(name: "DMA_PREP_FENCE", value: 32, isUnsigned: true)
!142 = !DIEnumerator(name: "DMA_CTRL_REUSE", value: 64, isUnsigned: true)
!143 = !DIEnumerator(name: "DMA_PREP_CMD", value: 128, isUnsigned: true)
!144 = !DIEnumerator(name: "DMA_PREP_REPEAT", value: 256, isUnsigned: true)
!145 = !DIEnumerator(name: "DMA_PREP_LOAD_EOT", value: 512, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_tx_result", file: !6, line: 533, baseType: !7, size: 32, elements: !147)
!147 = !{!148, !149, !150, !151}
!148 = !DIEnumerator(name: "DMA_TRANS_NOERROR", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "DMA_TRANS_READ_FAILED", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "DMA_TRANS_WRITE_FAILED", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "DMA_TRANS_ABORTED", value: 3, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sum_check_flags", file: !6, line: 220, baseType: !7, size: 32, elements: !153)
!153 = !{!154, !155}
!154 = !DIEnumerator(name: "SUM_CHECK_P_RESULT", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "SUM_CHECK_Q_RESULT", value: 2, isUnsigned: true)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_transfer_direction", file: !6, line: 79, baseType: !7, size: 32, elements: !157)
!157 = !{!158, !159, !160, !161, !162}
!158 = !DIEnumerator(name: "DMA_MEM_TO_MEM", value: 0, isUnsigned: true)
!159 = !DIEnumerator(name: "DMA_MEM_TO_DEV", value: 1, isUnsigned: true)
!160 = !DIEnumerator(name: "DMA_DEV_TO_MEM", value: 2, isUnsigned: true)
!161 = !DIEnumerator(name: "DMA_DEV_TO_DEV", value: 3, isUnsigned: true)
!162 = !DIEnumerator(name: "DMA_TRANS_NONE", value: 4, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_slave_buswidth", file: !6, line: 371, baseType: !7, size: 32, elements: !164)
!164 = !{!165, !166, !167, !168, !169, !170, !171, !172, !173}
!165 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_UNDEFINED", value: 0, isUnsigned: true)
!166 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_1_BYTE", value: 1, isUnsigned: true)
!167 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_2_BYTES", value: 2, isUnsigned: true)
!168 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_3_BYTES", value: 3, isUnsigned: true)
!169 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_4_BYTES", value: 4, isUnsigned: true)
!170 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_8_BYTES", value: 8, isUnsigned: true)
!171 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_16_BYTES", value: 16, isUnsigned: true)
!172 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_32_BYTES", value: 32, isUnsigned: true)
!173 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_64_BYTES", value: 64, isUnsigned: true)
!174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_transaction_type", file: !6, line: 51, baseType: !7, size: 32, elements: !175)
!175 = !{!176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192}
!176 = !DIEnumerator(name: "DMA_MEMCPY", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "DMA_XOR", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "DMA_PQ", value: 2, isUnsigned: true)
!179 = !DIEnumerator(name: "DMA_XOR_VAL", value: 3, isUnsigned: true)
!180 = !DIEnumerator(name: "DMA_PQ_VAL", value: 4, isUnsigned: true)
!181 = !DIEnumerator(name: "DMA_MEMSET", value: 5, isUnsigned: true)
!182 = !DIEnumerator(name: "DMA_MEMSET_SG", value: 6, isUnsigned: true)
!183 = !DIEnumerator(name: "DMA_INTERRUPT", value: 7, isUnsigned: true)
!184 = !DIEnumerator(name: "DMA_PRIVATE", value: 8, isUnsigned: true)
!185 = !DIEnumerator(name: "DMA_ASYNC_TX", value: 9, isUnsigned: true)
!186 = !DIEnumerator(name: "DMA_SLAVE", value: 10, isUnsigned: true)
!187 = !DIEnumerator(name: "DMA_CYCLIC", value: 11, isUnsigned: true)
!188 = !DIEnumerator(name: "DMA_INTERLEAVE", value: 12, isUnsigned: true)
!189 = !DIEnumerator(name: "DMA_COMPLETION_NO_ORDER", value: 13, isUnsigned: true)
!190 = !DIEnumerator(name: "DMA_REPEAT", value: 14, isUnsigned: true)
!191 = !DIEnumerator(name: "DMA_LOAD_EOT", value: 15, isUnsigned: true)
!192 = !DIEnumerator(name: "DMA_TX_TYPE_END", value: 16, isUnsigned: true)
!193 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !194, line: 10, baseType: !7, size: 32, elements: !195)
!194 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!195 = !{!196, !197}
!196 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!197 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !199, line: 119, baseType: !7, size: 32, elements: !200)
!199 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!200 = !{!201, !202, !203, !204, !205}
!201 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!202 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!203 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!204 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!205 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!206 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !207, line: 305, baseType: !7, size: 32, elements: !208)
!207 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!208 = !{!209, !210, !211, !212}
!209 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!210 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!211 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!212 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!213 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "xa_lock_type", file: !214, line: 254, baseType: !7, size: 32, elements: !215)
!214 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!215 = !{!216, !217}
!216 = !DIEnumerator(name: "XA_LOCK_IRQ", value: 1, isUnsigned: true)
!217 = !DIEnumerator(name: "XA_LOCK_BH", value: 2, isUnsigned: true)
!218 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !219, line: 5, baseType: !7, size: 32, elements: !220)
!219 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!220 = !{!221, !222, !223, !224}
!221 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!222 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!223 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!224 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!225 = !{!226, !227, !269, !228, !288, !4273, !232, !826, !4276, !4277, !4281, !4283, !249, !3910, !4284, !788, !4287, !7, !4289, !4290, !4255, !4246, !4292, !4293, !4294, !256, !4295, !4080, !4296}
!226 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan", file: !6, line: 329, size: 832, elements: !230)
!230 = !{!231, !4241, !4242, !4243, !4244, !4245, !4252, !4253, !4254, !4260, !4261, !4262, !4271, !4272}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !229, file: !6, line: 330, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_device", file: !6, line: 844, size: 3072, elements: !234)
!234 = !{!235, !250, !251, !252, !258, !259, !282, !291, !292, !294, !295, !296, !297, !298, !299, !300, !4023, !4024, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4041, !4045, !4110, !4115, !4120, !4124, !4128, !4132, !4145, !4149, !4153, !4157, !4181, !4185, !4203, !4221, !4222, !4223, !4224, !4225, !4236, !4237}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !233, file: !6, line: 845, baseType: !236, size: 32)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !237, line: 19, size: 32, elements: !238)
!237 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!238 = !{!239}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !236, file: !237, line: 20, baseType: !240, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !199, line: 113, baseType: !241)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !199, line: 111, size: 32, elements: !242)
!242 = !{!243}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !241, file: !199, line: 112, baseType: !244, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !245, line: 168, baseType: !246)
!245 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !245, line: 166, size: 32, elements: !247)
!247 = !{!248}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !246, file: !245, line: 167, baseType: !249, size: 32)
!249 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "chancnt", scope: !233, file: !6, line: 846, baseType: !7, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "privatecnt", scope: !233, file: !6, line: 847, baseType: !7, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !233, file: !6, line: 848, baseType: !253, size: 128, offset: 128)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !245, line: 178, size: 128, elements: !254)
!254 = !{!255, !257}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !253, file: !245, line: 179, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !253, file: !245, line: 179, baseType: !256, size: 64, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "global_node", scope: !233, file: !6, line: 849, baseType: !253, size: 128, offset: 256)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !233, file: !6, line: 850, baseType: !260, size: 192, offset: 384)
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_filter", file: !6, line: 762, size: 192, elements: !261)
!261 = !{!262, !270, !271}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !260, file: !6, line: 763, baseType: !263, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_filter_fn", file: !6, line: 529, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = !DISubroutineType(types: !266)
!266 = !{!267, !228, !269}
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !245, line: 30, baseType: !268)
!268 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "mapcnt", scope: !260, file: !6, line: 764, baseType: !249, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !260, file: !6, line: 765, baseType: !272, size: 64, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !274)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_map", file: !6, line: 749, size: 192, elements: !275)
!275 = !{!276, !280, !281}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "devname", scope: !274, file: !6, line: 750, baseType: !277, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !279)
!279 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !274, file: !6, line: 751, baseType: !277, size: 64, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !274, file: !6, line: 752, baseType: !269, size: 64, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "cap_mask", scope: !233, file: !6, line: 851, baseType: !283, size: 64, offset: 576)
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cap_mask_t", file: !6, line: 230, baseType: !284)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 230, size: 64, elements: !285)
!285 = !{!286}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !284, file: !6, line: 230, baseType: !287, size: 64)
!287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !288, size: 64, elements: !289)
!288 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!289 = !{!290}
!290 = !DISubrange(count: 1)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_modes", scope: !233, file: !6, line: 852, baseType: !14, size: 32, offset: 640)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "max_xor", scope: !233, file: !6, line: 853, baseType: !293, size: 16, offset: 672)
!293 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "max_pq", scope: !233, file: !6, line: 854, baseType: !293, size: 16, offset: 688)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "copy_align", scope: !233, file: !6, line: 855, baseType: !19, size: 32, offset: 704)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "xor_align", scope: !233, file: !6, line: 856, baseType: !19, size: 32, offset: 736)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "pq_align", scope: !233, file: !6, line: 857, baseType: !19, size: 32, offset: 768)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "fill_align", scope: !233, file: !6, line: 858, baseType: !19, size: 32, offset: 800)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !233, file: !6, line: 861, baseType: !249, size: 32, offset: 832)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !233, file: !6, line: 862, baseType: !301, size: 64, offset: 896)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !95, line: 461, size: 5568, elements: !303)
!303 = !{!304, !3477, !3478, !3481, !3482, !3533, !3624, !3625, !3626, !3627, !3628, !3637, !3742, !3755, !3950, !3951, !3955, !3957, !3958, !3959, !3963, !3969, !3970, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !4011, !4012, !4013, !4016, !4019, !4020, !4021, !4022}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !302, file: !95, line: 462, baseType: !305, size: 512)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !306, line: 64, size: 512, elements: !307)
!306 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!307 = !{!308, !309, !310, !312, !372, !3332, !3471, !3472, !3473, !3474, !3475, !3476}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !305, file: !306, line: 65, baseType: !277, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !305, file: !306, line: 66, baseType: !253, size: 128, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !305, file: !306, line: 67, baseType: !311, size: 64, offset: 192)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !305, file: !306, line: 68, baseType: !313, size: 64, offset: 256)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !306, line: 192, size: 704, elements: !315)
!315 = !{!316, !317, !333, !334}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !314, file: !306, line: 193, baseType: !253, size: 128)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !314, file: !306, line: 194, baseType: !318, offset: 128)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !319, line: 83, baseType: !320)
!319 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !319, line: 71, elements: !321)
!321 = !{!322}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 72, baseType: !323)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 72, elements: !324)
!324 = !{!325}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !323, file: !319, line: 73, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !319, line: 20, elements: !327)
!327 = !{!328}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !326, file: !319, line: 21, baseType: !329)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !330, line: 25, baseType: !331)
!330 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !330, line: 25, elements: !332)
!332 = !{}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !314, file: !306, line: 195, baseType: !305, size: 512, offset: 128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !314, file: !306, line: 196, baseType: !335, size: 64, offset: 640)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !337)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !306, line: 156, size: 192, elements: !338)
!338 = !{!339, !344, !349}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !337, file: !306, line: 157, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !341)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = !DISubroutineType(types: !343)
!343 = !{!249, !313, !311}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !337, file: !306, line: 158, baseType: !345, size: 64, offset: 64)
!345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !346)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DISubroutineType(types: !348)
!348 = !{!277, !313, !311}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !337, file: !306, line: 159, baseType: !350, size: 64, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !351)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DISubroutineType(types: !353)
!353 = !{!249, !313, !311, !354}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !306, line: 148, size: 20736, elements: !356)
!356 = !{!357, !362, !366, !367, !371}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !355, file: !306, line: 149, baseType: !358, size: 192)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 192, elements: !360)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!360 = !{!361}
!361 = !DISubrange(count: 3)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !355, file: !306, line: 150, baseType: !363, size: 4096, offset: 192)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 4096, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !355, file: !306, line: 151, baseType: !249, size: 32, offset: 4288)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !355, file: !306, line: 152, baseType: !368, size: 16384, offset: 4320)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 16384, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 2048)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !355, file: !306, line: 153, baseType: !249, size: 32, offset: 20704)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !305, file: !306, line: 69, baseType: !373, size: 64, offset: 320)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !306, line: 138, size: 448, elements: !375)
!375 = !{!376, !380, !407, !409, !3294, !3322, !3326}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !374, file: !306, line: 139, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DISubroutineType(types: !379)
!379 = !{null, !311}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !374, file: !306, line: 140, baseType: !381, size: 64, offset: 64)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !384, line: 230, size: 128, elements: !385)
!384 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!385 = !{!386, !400}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !383, file: !384, line: 231, baseType: !387, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = !DISubroutineType(types: !389)
!389 = !{!390, !311, !394, !359}
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !245, line: 60, baseType: !391)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !392, line: 73, baseType: !393)
!392 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !392, line: 15, baseType: !226)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !384, line: 30, size: 128, elements: !396)
!396 = !{!397, !398}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !395, file: !384, line: 31, baseType: !277, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !395, file: !384, line: 32, baseType: !399, size: 16, offset: 64)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !245, line: 19, baseType: !293)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !383, file: !384, line: 232, baseType: !401, size: 64, offset: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DISubroutineType(types: !403)
!403 = !{!390, !311, !394, !277, !404}
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !245, line: 55, baseType: !405)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !392, line: 72, baseType: !406)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !392, line: 16, baseType: !288)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !374, file: !306, line: 141, baseType: !408, size: 64, offset: 128)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !374, file: !306, line: 142, baseType: !410, size: 64, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !413)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !384, line: 84, size: 320, elements: !414)
!414 = !{!415, !416, !420, !3291, !3292}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !413, file: !384, line: 85, baseType: !277, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !413, file: !384, line: 86, baseType: !417, size: 64, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = !DISubroutineType(types: !419)
!419 = !{!399, !311, !394, !249}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !413, file: !384, line: 88, baseType: !421, size: 64, offset: 128)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = !DISubroutineType(types: !423)
!423 = !{!399, !311, !424, !249}
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !384, line: 168, size: 448, elements: !426)
!426 = !{!427, !428, !429, !430, !3286, !3287}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !425, file: !384, line: 169, baseType: !395, size: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !425, file: !384, line: 170, baseType: !404, size: 64, offset: 128)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !425, file: !384, line: 171, baseType: !269, size: 64, offset: 192)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !425, file: !384, line: 172, baseType: !431, size: 64, offset: 256)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!432 = !DISubroutineType(types: !433)
!433 = !{!390, !434, !311, !424, !359, !611, !404}
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !66, line: 916, size: 1856, align: 32, elements: !436)
!436 = !{!437, !455, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3269, !3270, !3279, !3280, !3281, !3282, !3283, !3284, !3285}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !435, file: !66, line: 920, baseType: !438, size: 128)
!438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !435, file: !66, line: 917, size: 128, elements: !439)
!439 = !{!440, !446}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !438, file: !66, line: 918, baseType: !441, size: 64)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !442, line: 58, size: 64, elements: !443)
!442 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !441, file: !442, line: 59, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !438, file: !66, line: 919, baseType: !447, size: 128, align: 64)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !245, line: 216, size: 128, align: 64, elements: !448)
!448 = !{!449, !451}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !447, file: !245, line: 217, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !447, file: !245, line: 218, baseType: !452, size: 64, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = !DISubroutineType(types: !454)
!454 = !{null, !450}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !435, file: !66, line: 921, baseType: !456, size: 128, offset: 128)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !457, line: 8, size: 128, elements: !458)
!457 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!458 = !{!459, !463}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !456, file: !457, line: 9, baseType: !460, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !462, line: 18, flags: DIFlagFwdDecl)
!462 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!463 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !456, file: !457, line: 10, baseType: !464, size: 64, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !462, line: 89, size: 1536, elements: !466)
!466 = !{!467, !468, !478, !486, !487, !510, !3219, !3221, !3233, !3234, !3235, !3236, !3237, !3243, !3244, !3245}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !465, file: !462, line: 91, baseType: !7, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !465, file: !462, line: 92, baseType: !469, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !470, line: 277, baseType: !471)
!470 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !470, line: 277, size: 32, elements: !472)
!472 = !{!473}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !471, file: !470, line: 277, baseType: !474, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !470, line: 70, baseType: !475)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !470, line: 65, size: 32, elements: !476)
!476 = !{!477}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !475, file: !470, line: 66, baseType: !7, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !465, file: !462, line: 93, baseType: !479, size: 128, offset: 64)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !480, line: 38, size: 128, elements: !481)
!480 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!481 = !{!482, !484}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !479, file: !480, line: 39, baseType: !483, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !479, file: !480, line: 39, baseType: !485, size: 64, offset: 64)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !465, file: !462, line: 94, baseType: !464, size: 64, offset: 192)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !465, file: !462, line: 95, baseType: !488, size: 128, offset: 256)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !462, line: 47, size: 128, elements: !489)
!489 = !{!490, !506}
!490 = !DIDerivedType(tag: DW_TAG_member, scope: !488, file: !462, line: 48, baseType: !491, size: 64)
!491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !488, file: !462, line: 48, size: 64, elements: !492)
!492 = !{!493, !502}
!493 = !DIDerivedType(tag: DW_TAG_member, scope: !491, file: !462, line: 49, baseType: !494, size: 64)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !491, file: !462, line: 49, size: 64, elements: !495)
!495 = !{!496, !501}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !494, file: !462, line: 50, baseType: !497, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !498, line: 21, baseType: !499)
!498 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !500, line: 27, baseType: !7)
!500 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!501 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !494, file: !462, line: 50, baseType: !497, size: 32, offset: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !491, file: !462, line: 52, baseType: !503, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !498, line: 23, baseType: !504)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !500, line: 31, baseType: !505)
!505 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !488, file: !462, line: 54, baseType: !507, size: 64, offset: 64)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !509)
!509 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !465, file: !462, line: 96, baseType: !511, size: 64, offset: 384)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !66, line: 610, size: 4224, elements: !513)
!513 = !{!514, !515, !516, !524, !531, !532, !678, !2930, !2931, !2932, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !3195, !3203, !3204, !3205, !3215, !3216, !3217, !3218}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !512, file: !66, line: 611, baseType: !399, size: 16)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !512, file: !66, line: 612, baseType: !293, size: 16, offset: 16)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !512, file: !66, line: 613, baseType: !517, size: 32, offset: 32)
!517 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !518, line: 23, baseType: !519)
!518 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !518, line: 21, size: 32, elements: !520)
!520 = !{!521}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !519, file: !518, line: 22, baseType: !522, size: 32)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !245, line: 32, baseType: !523)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !392, line: 49, baseType: !7)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !512, file: !66, line: 614, baseType: !525, size: 32, offset: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !518, line: 28, baseType: !526)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !518, line: 26, size: 32, elements: !527)
!527 = !{!528}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !526, file: !518, line: 27, baseType: !529, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !245, line: 33, baseType: !530)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !392, line: 50, baseType: !7)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !512, file: !66, line: 615, baseType: !7, size: 32, offset: 96)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !512, file: !66, line: 622, baseType: !533, size: 64, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !66, line: 1864, size: 1536, align: 512, elements: !536)
!536 = !{!537, !541, !554, !558, !564, !568, !572, !576, !580, !584, !588, !589, !595, !599, !625, !654, !658, !664, !669, !673, !674}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !535, file: !66, line: 1865, baseType: !538, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DISubroutineType(types: !540)
!540 = !{!464, !511, !464, !7}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !535, file: !66, line: 1866, baseType: !542, size: 64, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DISubroutineType(types: !544)
!544 = !{!277, !464, !511, !545}
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !547, line: 10, size: 128, elements: !548)
!547 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!548 = !{!549, !553}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !546, file: !547, line: 11, baseType: !550, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = !DISubroutineType(types: !552)
!552 = !{null, !269}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !546, file: !547, line: 12, baseType: !269, size: 64, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !535, file: !66, line: 1867, baseType: !555, size: 64, offset: 128)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DISubroutineType(types: !557)
!557 = !{!249, !511, !249}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !535, file: !66, line: 1868, baseType: !559, size: 64, offset: 192)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DISubroutineType(types: !561)
!561 = !{!562, !511, !249}
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !66, line: 581, flags: DIFlagFwdDecl)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !535, file: !66, line: 1870, baseType: !565, size: 64, offset: 256)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DISubroutineType(types: !567)
!567 = !{!249, !464, !359, !249}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !535, file: !66, line: 1872, baseType: !569, size: 64, offset: 320)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DISubroutineType(types: !571)
!571 = !{!249, !511, !464, !399, !267}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !535, file: !66, line: 1873, baseType: !573, size: 64, offset: 384)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = !DISubroutineType(types: !575)
!575 = !{!249, !464, !511, !464}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !535, file: !66, line: 1874, baseType: !577, size: 64, offset: 448)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{!249, !511, !464}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !535, file: !66, line: 1875, baseType: !581, size: 64, offset: 512)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DISubroutineType(types: !583)
!583 = !{!249, !511, !464, !277}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !535, file: !66, line: 1876, baseType: !585, size: 64, offset: 576)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = !DISubroutineType(types: !587)
!587 = !{!249, !511, !464, !399}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !535, file: !66, line: 1877, baseType: !577, size: 64, offset: 640)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !535, file: !66, line: 1878, baseType: !590, size: 64, offset: 704)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{!249, !511, !464, !399, !593}
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !245, line: 16, baseType: !594)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !245, line: 13, baseType: !497)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !535, file: !66, line: 1879, baseType: !596, size: 64, offset: 768)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DISubroutineType(types: !598)
!598 = !{!249, !511, !464, !511, !464, !7}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !535, file: !66, line: 1881, baseType: !600, size: 64, offset: 832)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = !DISubroutineType(types: !602)
!602 = !{!249, !464, !603}
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !66, line: 219, size: 640, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !614, !622, !623, !624}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !604, file: !66, line: 220, baseType: !7, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !604, file: !66, line: 221, baseType: !399, size: 16, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !604, file: !66, line: 222, baseType: !517, size: 32, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !604, file: !66, line: 223, baseType: !525, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !604, file: !66, line: 224, baseType: !611, size: 64, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !245, line: 46, baseType: !612)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !392, line: 88, baseType: !613)
!613 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !604, file: !66, line: 225, baseType: !615, size: 128, offset: 192)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !616, line: 13, size: 128, elements: !617)
!616 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!617 = !{!618, !621}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !615, file: !616, line: 14, baseType: !619, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !616, line: 8, baseType: !620)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !500, line: 30, baseType: !613)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !615, file: !616, line: 15, baseType: !226, size: 64, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !604, file: !66, line: 226, baseType: !615, size: 128, offset: 320)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !604, file: !66, line: 227, baseType: !615, size: 128, offset: 448)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !604, file: !66, line: 234, baseType: !434, size: 64, offset: 576)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !535, file: !66, line: 1882, baseType: !626, size: 64, offset: 896)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DISubroutineType(types: !628)
!628 = !{!249, !629, !631, !497, !7}
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !456)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !633, line: 22, size: 1152, elements: !634)
!633 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!634 = !{!635, !636, !637, !638, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !632, file: !633, line: 23, baseType: !497, size: 32)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !632, file: !633, line: 24, baseType: !399, size: 16, offset: 32)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !632, file: !633, line: 25, baseType: !7, size: 32, offset: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !632, file: !633, line: 26, baseType: !639, size: 32, offset: 96)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !245, line: 104, baseType: !497)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !632, file: !633, line: 27, baseType: !503, size: 64, offset: 128)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !632, file: !633, line: 28, baseType: !503, size: 64, offset: 192)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !632, file: !633, line: 37, baseType: !503, size: 64, offset: 256)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !632, file: !633, line: 38, baseType: !593, size: 32, offset: 320)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !632, file: !633, line: 39, baseType: !593, size: 32, offset: 352)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !632, file: !633, line: 40, baseType: !517, size: 32, offset: 384)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !632, file: !633, line: 41, baseType: !525, size: 32, offset: 416)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !632, file: !633, line: 42, baseType: !611, size: 64, offset: 448)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !632, file: !633, line: 43, baseType: !615, size: 128, offset: 512)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !632, file: !633, line: 44, baseType: !615, size: 128, offset: 640)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !632, file: !633, line: 45, baseType: !615, size: 128, offset: 768)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !632, file: !633, line: 46, baseType: !615, size: 128, offset: 896)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !632, file: !633, line: 47, baseType: !503, size: 64, offset: 1024)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !632, file: !633, line: 48, baseType: !503, size: 64, offset: 1088)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !535, file: !66, line: 1883, baseType: !655, size: 64, offset: 960)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DISubroutineType(types: !657)
!657 = !{!390, !464, !359, !404}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !535, file: !66, line: 1884, baseType: !659, size: 64, offset: 1024)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{!249, !511, !662, !503, !503}
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !66, line: 50, flags: DIFlagFwdDecl)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !535, file: !66, line: 1886, baseType: !665, size: 64, offset: 1088)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DISubroutineType(types: !667)
!667 = !{!249, !511, !668, !249}
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !535, file: !66, line: 1887, baseType: !670, size: 64, offset: 1152)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{!249, !511, !464, !434, !7, !399}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !535, file: !66, line: 1890, baseType: !585, size: 64, offset: 1216)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !535, file: !66, line: 1891, baseType: !675, size: 64, offset: 1280)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DISubroutineType(types: !677)
!677 = !{!249, !511, !562, !249}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !512, file: !66, line: 623, baseType: !679, size: 64, offset: 192)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !66, line: 1416, size: 9472, elements: !681)
!681 = !{!682, !683, !684, !685, !686, !687, !737, !2537, !2619, !2702, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2718, !2722, !2723, !2726, !2727, !2730, !2731, !2732, !2773, !2800, !2801, !2802, !2803, !2804, !2805, !2808, !2810, !2817, !2818, !2820, !2821, !2822, !2881, !2882, !2897, !2898, !2899, !2900, !2901, !2904, !2905, !2906, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !680, file: !66, line: 1417, baseType: !253, size: 128)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !680, file: !66, line: 1418, baseType: !593, size: 32, offset: 128)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !680, file: !66, line: 1419, baseType: !509, size: 8, offset: 160)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !680, file: !66, line: 1420, baseType: !288, size: 64, offset: 192)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !680, file: !66, line: 1421, baseType: !611, size: 64, offset: 256)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !680, file: !66, line: 1422, baseType: !688, size: 64, offset: 320)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !66, line: 2228, size: 576, elements: !690)
!690 = !{!691, !692, !693, !700, !704, !708, !712, !716, !717, !727, !730, !731, !732, !734, !735, !736}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !689, file: !66, line: 2229, baseType: !277, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !689, file: !66, line: 2230, baseType: !249, size: 32, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !689, file: !66, line: 2238, baseType: !694, size: 64, offset: 128)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{!249, !697}
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !699, line: 28, flags: DIFlagFwdDecl)
!699 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!700 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !689, file: !66, line: 2239, baseType: !701, size: 64, offset: 192)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !703)
!703 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !66, line: 70, flags: DIFlagFwdDecl)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !689, file: !66, line: 2240, baseType: !705, size: 64, offset: 256)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DISubroutineType(types: !707)
!707 = !{!464, !688, !249, !277, !269}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !689, file: !66, line: 2242, baseType: !709, size: 64, offset: 320)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DISubroutineType(types: !711)
!711 = !{null, !679}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !689, file: !66, line: 2243, baseType: !713, size: 64, offset: 384)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !715, line: 76, flags: DIFlagFwdDecl)
!715 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!716 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !689, file: !66, line: 2244, baseType: !688, size: 64, offset: 448)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !689, file: !66, line: 2245, baseType: !718, size: 64, offset: 512)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !245, line: 182, size: 64, elements: !719)
!719 = !{!720}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !718, file: !245, line: 183, baseType: !721, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !245, line: 186, size: 128, elements: !723)
!723 = !{!724, !725}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !722, file: !245, line: 187, baseType: !721, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !722, file: !245, line: 187, baseType: !726, size: 64, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !689, file: !66, line: 2247, baseType: !728, offset: 576)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !729, line: 187, elements: !332)
!729 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!730 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !689, file: !66, line: 2248, baseType: !728, offset: 576)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !689, file: !66, line: 2249, baseType: !728, offset: 576)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !689, file: !66, line: 2250, baseType: !733, offset: 576)
!733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !728, elements: !360)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !689, file: !66, line: 2252, baseType: !728, offset: 576)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !689, file: !66, line: 2253, baseType: !728, offset: 576)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !689, file: !66, line: 2254, baseType: !728, offset: 576)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !680, file: !66, line: 1423, baseType: !738, size: 64, offset: 384)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !66, line: 1935, size: 1472, elements: !741)
!741 = !{!742, !746, !750, !751, !755, !761, !765, !766, !767, !771, !775, !776, !777, !778, !784, !789, !790, !797, !798, !799, !800, !2521, !2536}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !740, file: !66, line: 1936, baseType: !743, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DISubroutineType(types: !745)
!745 = !{!511, !679}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !740, file: !66, line: 1937, baseType: !747, size: 64, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DISubroutineType(types: !749)
!749 = !{null, !511}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !740, file: !66, line: 1938, baseType: !747, size: 64, offset: 128)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !740, file: !66, line: 1940, baseType: !752, size: 64, offset: 192)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DISubroutineType(types: !754)
!754 = !{null, !511, !249}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !740, file: !66, line: 1941, baseType: !756, size: 64, offset: 256)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{!249, !511, !759}
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !36, line: 40, flags: DIFlagFwdDecl)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !740, file: !66, line: 1942, baseType: !762, size: 64, offset: 320)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{!249, !511}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !740, file: !66, line: 1943, baseType: !747, size: 64, offset: 384)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !740, file: !66, line: 1944, baseType: !709, size: 64, offset: 448)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !740, file: !66, line: 1945, baseType: !768, size: 64, offset: 512)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!249, !679, !249}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !740, file: !66, line: 1946, baseType: !772, size: 64, offset: 576)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DISubroutineType(types: !774)
!774 = !{!249, !679}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !740, file: !66, line: 1947, baseType: !772, size: 64, offset: 640)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !740, file: !66, line: 1948, baseType: !772, size: 64, offset: 704)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !740, file: !66, line: 1949, baseType: !772, size: 64, offset: 768)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !740, file: !66, line: 1950, baseType: !779, size: 64, offset: 832)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!249, !464, !782}
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !66, line: 57, flags: DIFlagFwdDecl)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !740, file: !66, line: 1951, baseType: !785, size: 64, offset: 896)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{!249, !679, !788, !359}
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !740, file: !66, line: 1952, baseType: !709, size: 64, offset: 960)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !740, file: !66, line: 1954, baseType: !791, size: 64, offset: 1024)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DISubroutineType(types: !793)
!793 = !{!249, !794, !464}
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !796, line: 539, flags: DIFlagFwdDecl)
!796 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!797 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !740, file: !66, line: 1955, baseType: !791, size: 64, offset: 1088)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !740, file: !66, line: 1956, baseType: !791, size: 64, offset: 1152)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !740, file: !66, line: 1957, baseType: !791, size: 64, offset: 1216)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !740, file: !66, line: 1963, baseType: !801, size: 64, offset: 1280)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DISubroutineType(types: !803)
!803 = !{!249, !679, !804, !826}
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !806, line: 68, size: 512, align: 128, elements: !807)
!806 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!807 = !{!808, !809, !2513, !2520}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !805, file: !806, line: 69, baseType: !288, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, scope: !805, file: !806, line: 77, baseType: !810, size: 320, offset: 64)
!810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !805, file: !806, line: 77, size: 320, elements: !811)
!811 = !{!812, !1035, !1040, !1068, !1076, !1082, !2444, !2512}
!812 = !DIDerivedType(tag: DW_TAG_member, scope: !810, file: !806, line: 78, baseType: !813, size: 320)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !810, file: !806, line: 78, size: 320, elements: !814)
!814 = !{!815, !816, !1033, !1034}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !813, file: !806, line: 84, baseType: !253, size: 128)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !813, file: !806, line: 86, baseType: !817, size: 64, offset: 128)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !66, line: 451, size: 1216, align: 64, elements: !819)
!819 = !{!820, !821, !828, !829, !830, !845, !861, !862, !863, !864, !1026, !1027, !1030, !1031, !1032}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !818, file: !66, line: 452, baseType: !511, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !818, file: !66, line: 453, baseType: !822, size: 128, offset: 64)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !214, line: 292, size: 128, elements: !823)
!823 = !{!824, !825, !827}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !822, file: !214, line: 293, baseType: !318)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !822, file: !214, line: 295, baseType: !826, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !245, line: 148, baseType: !7)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !822, file: !214, line: 296, baseType: !269, size: 64, offset: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !818, file: !66, line: 454, baseType: !826, size: 32, offset: 192)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !818, file: !66, line: 455, baseType: !244, size: 32, offset: 224)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !818, file: !66, line: 460, baseType: !831, size: 128, offset: 256)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !832, line: 125, size: 128, elements: !833)
!832 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!833 = !{!834, !844}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !831, file: !832, line: 126, baseType: !835, size: 64)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !832, line: 31, size: 64, elements: !836)
!836 = !{!837}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !835, file: !832, line: 32, baseType: !838, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !832, line: 24, size: 192, align: 64, elements: !840)
!840 = !{!841, !842, !843}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !839, file: !832, line: 25, baseType: !288, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !839, file: !832, line: 26, baseType: !838, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !839, file: !832, line: 27, baseType: !838, size: 64, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !831, file: !832, line: 127, baseType: !838, size: 64, offset: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !818, file: !66, line: 461, baseType: !846, size: 256, offset: 384)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !847, line: 35, size: 256, elements: !848)
!847 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!848 = !{!849, !857, !858, !860}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !846, file: !847, line: 36, baseType: !850, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !851, line: 13, baseType: !852)
!851 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!852 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !245, line: 175, baseType: !853)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !245, line: 173, size: 64, elements: !854)
!854 = !{!855}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !853, file: !245, line: 174, baseType: !856, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !498, line: 22, baseType: !620)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !846, file: !847, line: 42, baseType: !850, size: 64, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !846, file: !847, line: 46, baseType: !859, offset: 128)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !319, line: 29, baseType: !326)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !846, file: !847, line: 47, baseType: !253, size: 128, offset: 128)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !818, file: !66, line: 462, baseType: !288, size: 64, offset: 640)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !818, file: !66, line: 463, baseType: !288, size: 64, offset: 704)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !818, file: !66, line: 464, baseType: !288, size: 64, offset: 768)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !818, file: !66, line: 465, baseType: !865, size: 64, offset: 832)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !867)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !66, line: 367, size: 1408, elements: !868)
!868 = !{!869, !873, !877, !881, !885, !889, !895, !901, !905, !910, !914, !918, !922, !990, !994, !1000, !1001, !1002, !1006, !1011, !1015, !1022}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !867, file: !66, line: 368, baseType: !870, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DISubroutineType(types: !872)
!872 = !{!249, !804, !759}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !867, file: !66, line: 369, baseType: !874, size: 64, offset: 64)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!249, !434, !804}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !867, file: !66, line: 372, baseType: !878, size: 64, offset: 128)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DISubroutineType(types: !880)
!880 = !{!249, !817, !759}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !867, file: !66, line: 375, baseType: !882, size: 64, offset: 192)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DISubroutineType(types: !884)
!884 = !{!249, !804}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !867, file: !66, line: 381, baseType: !886, size: 64, offset: 256)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!249, !434, !817, !256, !7}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !867, file: !66, line: 383, baseType: !890, size: 64, offset: 320)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DISubroutineType(types: !892)
!892 = !{null, !893}
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !66, line: 290, flags: DIFlagFwdDecl)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !867, file: !66, line: 385, baseType: !896, size: 64, offset: 384)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!249, !434, !817, !611, !7, !7, !899, !900}
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !867, file: !66, line: 388, baseType: !902, size: 64, offset: 448)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{!249, !434, !817, !611, !7, !7, !804, !269}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !867, file: !66, line: 393, baseType: !906, size: 64, offset: 512)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DISubroutineType(types: !908)
!908 = !{!909, !817, !909}
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !245, line: 125, baseType: !503)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !867, file: !66, line: 394, baseType: !911, size: 64, offset: 576)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{null, !804, !7, !7}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !867, file: !66, line: 395, baseType: !915, size: 64, offset: 640)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{!249, !804, !826}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !867, file: !66, line: 396, baseType: !919, size: 64, offset: 704)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DISubroutineType(types: !921)
!921 = !{null, !804}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !867, file: !66, line: 397, baseType: !923, size: 64, offset: 768)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{!390, !926, !948}
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !66, line: 320, size: 384, elements: !928)
!928 = !{!929, !930, !931, !935, !936, !937, !940, !941}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !927, file: !66, line: 321, baseType: !434, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !927, file: !66, line: 326, baseType: !611, size: 64, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !927, file: !66, line: 327, baseType: !932, size: 64, offset: 128)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{null, !926, !226, !226}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !927, file: !66, line: 328, baseType: !269, size: 64, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !927, file: !66, line: 329, baseType: !249, size: 32, offset: 256)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !927, file: !66, line: 330, baseType: !938, size: 16, offset: 288)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !498, line: 19, baseType: !939)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !500, line: 24, baseType: !293)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !927, file: !66, line: 331, baseType: !938, size: 16, offset: 304)
!941 = !DIDerivedType(tag: DW_TAG_member, scope: !927, file: !66, line: 332, baseType: !942, size: 64, offset: 320)
!942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !927, file: !66, line: 332, size: 64, elements: !943)
!943 = !{!944, !945}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !942, file: !66, line: 333, baseType: !7, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !942, file: !66, line: 334, baseType: !946, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !66, line: 334, flags: DIFlagFwdDecl)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !950, line: 29, size: 320, elements: !951)
!950 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!951 = !{!952, !953, !954, !955, !981}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !949, file: !950, line: 35, baseType: !7, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !949, file: !950, line: 36, baseType: !404, size: 64, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !949, file: !950, line: 37, baseType: !404, size: 64, offset: 128)
!955 = !DIDerivedType(tag: DW_TAG_member, scope: !949, file: !950, line: 38, baseType: !956, size: 64, offset: 192)
!956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !949, file: !950, line: 38, size: 64, elements: !957)
!957 = !{!958, !966, !973, !977}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !956, file: !950, line: 39, baseType: !959, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !961)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !962, line: 17, size: 128, elements: !963)
!962 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!963 = !{!964, !965}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !961, file: !962, line: 19, baseType: !269, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !961, file: !962, line: 20, baseType: !405, size: 64, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !956, file: !950, line: 40, baseType: !967, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !950, line: 15, size: 128, elements: !970)
!970 = !{!971, !972}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !969, file: !950, line: 16, baseType: !269, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !969, file: !950, line: 17, baseType: !404, size: 64, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !956, file: !950, line: 41, baseType: !974, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !950, line: 41, flags: DIFlagFwdDecl)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !956, file: !950, line: 42, baseType: !978, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !980, line: 53, flags: DIFlagFwdDecl)
!980 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!981 = !DIDerivedType(tag: DW_TAG_member, scope: !949, file: !950, line: 44, baseType: !982, size: 64, offset: 256)
!982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !949, file: !950, line: 44, size: 64, elements: !983)
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !982, file: !950, line: 45, baseType: !288, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !950, line: 46, baseType: !986, size: 64)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !982, file: !950, line: 46, size: 64, elements: !987)
!987 = !{!988, !989}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !986, file: !950, line: 47, baseType: !7, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !986, file: !950, line: 48, baseType: !7, size: 32, offset: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !867, file: !66, line: 402, baseType: !991, size: 64, offset: 832)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DISubroutineType(types: !993)
!993 = !{!249, !817, !804, !804, !28}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !867, file: !66, line: 404, baseType: !995, size: 64, offset: 896)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!267, !804, !998}
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !999, line: 305, baseType: !7)
!999 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !867, file: !66, line: 405, baseType: !919, size: 64, offset: 960)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !867, file: !66, line: 406, baseType: !882, size: 64, offset: 1024)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !867, file: !66, line: 407, baseType: !1003, size: 64, offset: 1088)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!249, !804, !288, !288}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !867, file: !66, line: 409, baseType: !1007, size: 64, offset: 1152)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{null, !804, !1010, !1010}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !867, file: !66, line: 410, baseType: !1012, size: 64, offset: 1216)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!249, !817, !804}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !867, file: !66, line: 413, baseType: !1016, size: 64, offset: 1280)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!249, !1019, !434, !1021}
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !66, line: 61, flags: DIFlagFwdDecl)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !867, file: !66, line: 415, baseType: !1023, size: 64, offset: 1344)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{null, !434}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !818, file: !66, line: 466, baseType: !288, size: 64, offset: 896)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !818, file: !66, line: 467, baseType: !1028, size: 32, offset: 960)
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1029, line: 8, baseType: !497)
!1029 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !818, file: !66, line: 468, baseType: !318, offset: 992)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !818, file: !66, line: 469, baseType: !253, size: 128, offset: 1024)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !818, file: !66, line: 470, baseType: !269, size: 64, offset: 1152)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !813, file: !806, line: 87, baseType: !288, size: 64, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !813, file: !806, line: 94, baseType: !288, size: 64, offset: 256)
!1035 = !DIDerivedType(tag: DW_TAG_member, scope: !810, file: !806, line: 96, baseType: !1036, size: 64)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !810, file: !806, line: 96, size: 64, elements: !1037)
!1037 = !{!1038}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1036, file: !806, line: 101, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !245, line: 143, baseType: !503)
!1040 = !DIDerivedType(tag: DW_TAG_member, scope: !810, file: !806, line: 103, baseType: !1041, size: 320)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !810, file: !806, line: 103, size: 320, elements: !1042)
!1042 = !{!1043, !1053, !1056, !1057}
!1043 = !DIDerivedType(tag: DW_TAG_member, scope: !1041, file: !806, line: 104, baseType: !1044, size: 128)
!1044 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1041, file: !806, line: 104, size: 128, elements: !1045)
!1045 = !{!1046, !1047}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1044, file: !806, line: 105, baseType: !253, size: 128)
!1047 = !DIDerivedType(tag: DW_TAG_member, scope: !1044, file: !806, line: 106, baseType: !1048, size: 128)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1044, file: !806, line: 106, size: 128, elements: !1049)
!1049 = !{!1050, !1051, !1052}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1048, file: !806, line: 107, baseType: !804, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1048, file: !806, line: 109, baseType: !249, size: 32, offset: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1048, file: !806, line: 110, baseType: !249, size: 32, offset: 96)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1041, file: !806, line: 117, baseType: !1054, size: 64, offset: 128)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !806, line: 117, flags: DIFlagFwdDecl)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1041, file: !806, line: 119, baseType: !269, size: 64, offset: 192)
!1057 = !DIDerivedType(tag: DW_TAG_member, scope: !1041, file: !806, line: 120, baseType: !1058, size: 64, offset: 256)
!1058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1041, file: !806, line: 120, size: 64, elements: !1059)
!1059 = !{!1060, !1061, !1062}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1058, file: !806, line: 121, baseType: !269, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1058, file: !806, line: 122, baseType: !288, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, scope: !1058, file: !806, line: 123, baseType: !1063, size: 32)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1058, file: !806, line: 123, size: 32, elements: !1064)
!1064 = !{!1065, !1066, !1067}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1063, file: !806, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1063, file: !806, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1063, file: !806, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1068 = !DIDerivedType(tag: DW_TAG_member, scope: !810, file: !806, line: 130, baseType: !1069, size: 192)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !810, file: !806, line: 130, size: 192, elements: !1070)
!1070 = !{!1071, !1072, !1073, !1074, !1075}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1069, file: !806, line: 131, baseType: !288, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1069, file: !806, line: 134, baseType: !509, size: 8, offset: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1069, file: !806, line: 135, baseType: !509, size: 8, offset: 72)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1069, file: !806, line: 136, baseType: !244, size: 32, offset: 96)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1069, file: !806, line: 137, baseType: !7, size: 32, offset: 128)
!1076 = !DIDerivedType(tag: DW_TAG_member, scope: !810, file: !806, line: 139, baseType: !1077, size: 256)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !810, file: !806, line: 139, size: 256, elements: !1078)
!1078 = !{!1079, !1080, !1081}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1077, file: !806, line: 140, baseType: !288, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1077, file: !806, line: 141, baseType: !244, size: 32, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1077, file: !806, line: 143, baseType: !253, size: 128, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, scope: !810, file: !806, line: 145, baseType: !1083, size: 256)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !810, file: !806, line: 145, size: 256, elements: !1084)
!1084 = !{!1085, !1086, !1088, !1089, !2443}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1083, file: !806, line: 146, baseType: !288, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1083, file: !806, line: 147, baseType: !1087, size: 64, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !796, line: 509, baseType: !804)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1083, file: !806, line: 148, baseType: !288, size: 64, offset: 128)
!1089 = !DIDerivedType(tag: DW_TAG_member, scope: !1083, file: !806, line: 149, baseType: !1090, size: 64, offset: 192)
!1090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1083, file: !806, line: 149, size: 64, elements: !1091)
!1091 = !{!1092, !2442}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1090, file: !806, line: 150, baseType: !1093, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !806, line: 388, size: 7296, elements: !1095)
!1095 = !{!1096, !2438}
!1096 = !DIDerivedType(tag: DW_TAG_member, scope: !1094, file: !806, line: 389, baseType: !1097, size: 7296)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1094, file: !806, line: 389, size: 7296, elements: !1098)
!1098 = !{!1099, !1217, !1218, !1219, !1223, !1224, !1225, !1226, !1227, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1268, !1276, !1279, !1325, !1326, !2422, !2423, !2426, !2427, !2428, !2431, !2432, !2433, !2436, !2437}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1097, file: !806, line: 390, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !806, line: 305, size: 1472, elements: !1102)
!1102 = !{!1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1117, !1118, !1123, !1124, !1127, !1211, !1212, !1213, !1214, !1215}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1101, file: !806, line: 308, baseType: !288, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1101, file: !806, line: 309, baseType: !288, size: 64, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1101, file: !806, line: 313, baseType: !1100, size: 64, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1101, file: !806, line: 313, baseType: !1100, size: 64, offset: 192)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1101, file: !806, line: 315, baseType: !839, size: 192, align: 64, offset: 256)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1101, file: !806, line: 323, baseType: !288, size: 64, offset: 448)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1101, file: !806, line: 327, baseType: !1093, size: 64, offset: 512)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1101, file: !806, line: 333, baseType: !1111, size: 64, offset: 576)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !796, line: 284, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !796, line: 284, size: 64, elements: !1113)
!1113 = !{!1114}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1112, file: !796, line: 284, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1116, line: 19, baseType: !288)
!1116 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1101, file: !806, line: 334, baseType: !288, size: 64, offset: 640)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1101, file: !806, line: 343, baseType: !1119, size: 256, offset: 704)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1101, file: !806, line: 340, size: 256, elements: !1120)
!1120 = !{!1121, !1122}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1119, file: !806, line: 341, baseType: !839, size: 192, align: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1119, file: !806, line: 342, baseType: !288, size: 64, offset: 192)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1101, file: !806, line: 351, baseType: !253, size: 128, offset: 960)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1101, file: !806, line: 353, baseType: !1125, size: 64, offset: 1088)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !806, line: 353, flags: DIFlagFwdDecl)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1101, file: !806, line: 356, baseType: !1128, size: 64, offset: 1152)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !36, line: 557, size: 832, elements: !1131)
!1131 = !{!1132, !1136, !1137, !1141, !1145, !1185, !1189, !1193, !1197, !1198, !1199, !1203, !1207}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1130, file: !36, line: 558, baseType: !1133, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{null, !1100}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1130, file: !36, line: 559, baseType: !1133, size: 64, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1130, file: !36, line: 560, baseType: !1138, size: 64, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!249, !1100, !288}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1130, file: !36, line: 561, baseType: !1142, size: 64, offset: 192)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!249, !1100}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1130, file: !36, line: 562, baseType: !1146, size: 64, offset: 256)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!1149, !1150}
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !806, line: 682, baseType: !7)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !36, line: 508, size: 768, elements: !1152)
!1152 = !{!1153, !1154, !1155, !1156, !1157, !1158, !1165, !1172, !1178, !1179, !1180, !1182, !1184}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1151, file: !36, line: 509, baseType: !1100, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1151, file: !36, line: 510, baseType: !7, size: 32, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1151, file: !36, line: 511, baseType: !826, size: 32, offset: 96)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1151, file: !36, line: 512, baseType: !288, size: 64, offset: 128)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1151, file: !36, line: 513, baseType: !288, size: 64, offset: 192)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1151, file: !36, line: 514, baseType: !1159, size: 64, offset: 256)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !796, line: 385, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 385, size: 64, elements: !1162)
!1162 = !{!1163}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1161, file: !796, line: 385, baseType: !1164, size: 64)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1116, line: 15, baseType: !288)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1151, file: !36, line: 516, baseType: !1166, size: 64, offset: 320)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !796, line: 359, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 359, size: 64, elements: !1169)
!1169 = !{!1170}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1168, file: !796, line: 359, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1116, line: 16, baseType: !288)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1151, file: !36, line: 519, baseType: !1173, size: 64, offset: 384)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1116, line: 21, baseType: !1174)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1116, line: 21, size: 64, elements: !1175)
!1175 = !{!1176}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1174, file: !1116, line: 21, baseType: !1177, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1116, line: 14, baseType: !288)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1151, file: !36, line: 521, baseType: !804, size: 64, offset: 448)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1151, file: !36, line: 522, baseType: !804, size: 64, offset: 512)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1151, file: !36, line: 528, baseType: !1181, size: 64, offset: 576)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1151, file: !36, line: 532, baseType: !1183, size: 64, offset: 640)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1151, file: !36, line: 536, baseType: !1087, size: 64, offset: 704)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1130, file: !36, line: 563, baseType: !1186, size: 64, offset: 320)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!1149, !1150, !35}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1130, file: !36, line: 565, baseType: !1190, size: 64, offset: 384)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{null, !1150, !288, !288}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1130, file: !36, line: 567, baseType: !1194, size: 64, offset: 448)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!288, !1100}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1130, file: !36, line: 571, baseType: !1146, size: 64, offset: 512)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1130, file: !36, line: 574, baseType: !1146, size: 64, offset: 576)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1130, file: !36, line: 579, baseType: !1200, size: 64, offset: 640)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!249, !1100, !288, !269, !249, !249}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1130, file: !36, line: 585, baseType: !1204, size: 64, offset: 704)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!277, !1100}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1130, file: !36, line: 615, baseType: !1208, size: 64, offset: 768)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!804, !1100, !288}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1101, file: !806, line: 359, baseType: !288, size: 64, offset: 1216)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1101, file: !806, line: 361, baseType: !434, size: 64, offset: 1280)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1101, file: !806, line: 362, baseType: !269, size: 64, offset: 1344)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1101, file: !806, line: 365, baseType: !850, size: 64, offset: 1408)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1101, file: !806, line: 373, baseType: !1216, offset: 1472)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !806, line: 296, elements: !332)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1097, file: !806, line: 391, baseType: !835, size: 64, offset: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1097, file: !806, line: 392, baseType: !503, size: 64, offset: 128)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1097, file: !806, line: 394, baseType: !1220, size: 64, offset: 192)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!288, !434, !288, !288, !288, !288}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1097, file: !806, line: 398, baseType: !288, size: 64, offset: 256)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1097, file: !806, line: 399, baseType: !288, size: 64, offset: 320)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1097, file: !806, line: 405, baseType: !288, size: 64, offset: 384)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1097, file: !806, line: 406, baseType: !288, size: 64, offset: 448)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1097, file: !806, line: 407, baseType: !1228, size: 64, offset: 512)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !796, line: 286, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 286, size: 64, elements: !1231)
!1231 = !{!1232}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1230, file: !796, line: 286, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1116, line: 18, baseType: !288)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1097, file: !806, line: 416, baseType: !244, size: 32, offset: 576)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1097, file: !806, line: 428, baseType: !244, size: 32, offset: 608)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1097, file: !806, line: 437, baseType: !244, size: 32, offset: 640)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1097, file: !806, line: 447, baseType: !244, size: 32, offset: 672)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1097, file: !806, line: 450, baseType: !850, size: 64, offset: 704)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1097, file: !806, line: 452, baseType: !249, size: 32, offset: 768)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1097, file: !806, line: 454, baseType: !318, offset: 800)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1097, file: !806, line: 457, baseType: !846, size: 256, offset: 832)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1097, file: !806, line: 459, baseType: !253, size: 128, offset: 1088)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1097, file: !806, line: 466, baseType: !288, size: 64, offset: 1216)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1097, file: !806, line: 467, baseType: !288, size: 64, offset: 1280)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1097, file: !806, line: 469, baseType: !288, size: 64, offset: 1344)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1097, file: !806, line: 470, baseType: !288, size: 64, offset: 1408)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1097, file: !806, line: 471, baseType: !852, size: 64, offset: 1472)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1097, file: !806, line: 472, baseType: !288, size: 64, offset: 1536)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1097, file: !806, line: 473, baseType: !288, size: 64, offset: 1600)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1097, file: !806, line: 474, baseType: !288, size: 64, offset: 1664)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1097, file: !806, line: 475, baseType: !288, size: 64, offset: 1728)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1097, file: !806, line: 477, baseType: !318, offset: 1792)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1097, file: !806, line: 478, baseType: !288, size: 64, offset: 1792)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1097, file: !806, line: 478, baseType: !288, size: 64, offset: 1856)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1097, file: !806, line: 478, baseType: !288, size: 64, offset: 1920)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1097, file: !806, line: 478, baseType: !288, size: 64, offset: 1984)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1097, file: !806, line: 479, baseType: !288, size: 64, offset: 2048)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1097, file: !806, line: 479, baseType: !288, size: 64, offset: 2112)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1097, file: !806, line: 479, baseType: !288, size: 64, offset: 2176)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1097, file: !806, line: 480, baseType: !288, size: 64, offset: 2240)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1097, file: !806, line: 480, baseType: !288, size: 64, offset: 2304)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1097, file: !806, line: 480, baseType: !288, size: 64, offset: 2368)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1097, file: !806, line: 480, baseType: !288, size: 64, offset: 2432)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1097, file: !806, line: 482, baseType: !1265, size: 2816, offset: 2496)
!1265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !288, size: 2816, elements: !1266)
!1266 = !{!1267}
!1267 = !DISubrange(count: 44)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1097, file: !806, line: 488, baseType: !1269, size: 256, offset: 5312)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1270, line: 60, size: 256, elements: !1271)
!1270 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1271 = !{!1272}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1269, file: !1270, line: 61, baseType: !1273, size: 256)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !850, size: 256, elements: !1274)
!1274 = !{!1275}
!1275 = !DISubrange(count: 4)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1097, file: !806, line: 490, baseType: !1277, size: 64, offset: 5568)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !806, line: 490, flags: DIFlagFwdDecl)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1097, file: !806, line: 493, baseType: !1280, size: 896, offset: 5632)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1281, line: 53, baseType: !1282)
!1281 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1281, line: 13, size: 896, elements: !1283)
!1283 = !{!1284, !1285, !1286, !1287, !1290, !1291, !1298, !1299, !1319, !1320, !1321}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1282, file: !1281, line: 18, baseType: !503, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1282, file: !1281, line: 28, baseType: !852, size: 64, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1282, file: !1281, line: 31, baseType: !846, size: 256, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1282, file: !1281, line: 32, baseType: !1288, size: 64, offset: 384)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1281, line: 32, flags: DIFlagFwdDecl)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1282, file: !1281, line: 37, baseType: !293, size: 16, offset: 448)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1282, file: !1281, line: 40, baseType: !1292, size: 192, offset: 512)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1293, line: 53, size: 192, elements: !1294)
!1293 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1294 = !{!1295, !1296, !1297}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1292, file: !1293, line: 54, baseType: !850, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1292, file: !1293, line: 55, baseType: !318, offset: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1292, file: !1293, line: 59, baseType: !253, size: 128, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1282, file: !1281, line: 41, baseType: !269, size: 64, offset: 704)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1282, file: !1281, line: 42, baseType: !1300, size: 64, offset: 768)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1303, line: 13, size: 896, elements: !1304)
!1303 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1304 = !{!1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1302, file: !1303, line: 14, baseType: !269, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1302, file: !1303, line: 15, baseType: !288, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1302, file: !1303, line: 17, baseType: !288, size: 64, offset: 128)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1302, file: !1303, line: 17, baseType: !288, size: 64, offset: 192)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1302, file: !1303, line: 19, baseType: !226, size: 64, offset: 256)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1302, file: !1303, line: 21, baseType: !226, size: 64, offset: 320)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1302, file: !1303, line: 22, baseType: !226, size: 64, offset: 384)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1302, file: !1303, line: 23, baseType: !226, size: 64, offset: 448)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1302, file: !1303, line: 24, baseType: !226, size: 64, offset: 512)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1302, file: !1303, line: 25, baseType: !226, size: 64, offset: 576)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1302, file: !1303, line: 26, baseType: !226, size: 64, offset: 640)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1302, file: !1303, line: 27, baseType: !226, size: 64, offset: 704)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1302, file: !1303, line: 28, baseType: !226, size: 64, offset: 768)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1302, file: !1303, line: 29, baseType: !226, size: 64, offset: 832)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1282, file: !1281, line: 44, baseType: !244, size: 32, offset: 832)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1282, file: !1281, line: 50, baseType: !938, size: 16, offset: 864)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1282, file: !1281, line: 51, baseType: !1322, size: 16, offset: 880)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !498, line: 18, baseType: !1323)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !500, line: 23, baseType: !1324)
!1324 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1097, file: !806, line: 495, baseType: !288, size: 64, offset: 6528)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1097, file: !806, line: 497, baseType: !1327, size: 64, offset: 6592)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !806, line: 381, size: 384, elements: !1329)
!1329 = !{!1330, !1331, !2421}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1328, file: !806, line: 382, baseType: !244, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1328, file: !806, line: 383, baseType: !1332, size: 128, offset: 64)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !806, line: 376, size: 128, elements: !1333)
!1333 = !{!1334, !2419}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1332, file: !806, line: 377, baseType: !1335, size: 64)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !980, line: 640, size: 48640, elements: !1337)
!1337 = !{!1338, !1344, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1359, !1377, !1388, !1473, !1474, !1475, !1483, !1484, !1486, !1487, !1488, !1489, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1568, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1606, !1608, !1609, !1610, !1622, !1623, !1624, !1625, !1626, !1627, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1651, !1656, !1840, !1841, !1842, !1843, !1847, !1850, !1853, !1856, !1859, !1862, !1963, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2009, !2010, !2011, !2012, !2013, !2018, !2019, !2020, !2023, !2024, !2027, !2030, !2033, !2036, !2079, !2082, !2083, !2162, !2163, !2166, !2167, !2170, !2171, !2172, !2176, !2177, !2178, !2191, !2192, !2193, !2203, !2208, !2209, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1336, file: !980, line: 646, baseType: !1339, size: 128)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1340, line: 56, size: 128, elements: !1341)
!1340 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1341 = !{!1342, !1343}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1339, file: !1340, line: 57, baseType: !288, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1339, file: !1340, line: 58, baseType: !497, size: 32, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1336, file: !980, line: 649, baseType: !1345, size: 64, offset: 128)
!1345 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !226)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1336, file: !980, line: 657, baseType: !269, size: 64, offset: 192)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1336, file: !980, line: 658, baseType: !240, size: 32, offset: 256)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1336, file: !980, line: 660, baseType: !7, size: 32, offset: 288)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1336, file: !980, line: 661, baseType: !7, size: 32, offset: 320)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1336, file: !980, line: 684, baseType: !249, size: 32, offset: 352)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1336, file: !980, line: 686, baseType: !249, size: 32, offset: 384)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1336, file: !980, line: 687, baseType: !249, size: 32, offset: 416)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1336, file: !980, line: 688, baseType: !249, size: 32, offset: 448)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1336, file: !980, line: 689, baseType: !7, size: 32, offset: 480)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1336, file: !980, line: 691, baseType: !1356, size: 64, offset: 512)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1358)
!1358 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !980, line: 691, flags: DIFlagFwdDecl)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1336, file: !980, line: 692, baseType: !1360, size: 832, offset: 576)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !980, line: 451, size: 832, elements: !1361)
!1361 = !{!1362, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1360, file: !980, line: 453, baseType: !1363, size: 128)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !980, line: 325, size: 128, elements: !1364)
!1364 = !{!1365, !1366}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1363, file: !980, line: 326, baseType: !288, size: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1363, file: !980, line: 327, baseType: !497, size: 32, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1360, file: !980, line: 454, baseType: !839, size: 192, align: 64, offset: 128)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1360, file: !980, line: 455, baseType: !253, size: 128, offset: 320)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1360, file: !980, line: 456, baseType: !7, size: 32, offset: 448)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1360, file: !980, line: 458, baseType: !503, size: 64, offset: 512)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1360, file: !980, line: 459, baseType: !503, size: 64, offset: 576)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1360, file: !980, line: 460, baseType: !503, size: 64, offset: 640)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1360, file: !980, line: 461, baseType: !503, size: 64, offset: 704)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1360, file: !980, line: 463, baseType: !503, size: 64, offset: 768)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1360, file: !980, line: 465, baseType: !1376, offset: 832)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !980, line: 415, elements: !332)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1336, file: !980, line: 693, baseType: !1378, size: 384, offset: 1408)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !980, line: 489, size: 384, elements: !1379)
!1379 = !{!1380, !1381, !1382, !1383, !1384, !1385, !1386}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1378, file: !980, line: 490, baseType: !253, size: 128)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1378, file: !980, line: 491, baseType: !288, size: 64, offset: 128)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1378, file: !980, line: 492, baseType: !288, size: 64, offset: 192)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1378, file: !980, line: 493, baseType: !7, size: 32, offset: 256)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1378, file: !980, line: 494, baseType: !293, size: 16, offset: 288)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1378, file: !980, line: 495, baseType: !293, size: 16, offset: 304)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1378, file: !980, line: 497, baseType: !1387, size: 64, offset: 320)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1336, file: !980, line: 697, baseType: !1389, size: 1792, offset: 1792)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !980, line: 507, size: 1792, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1470, !1471}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1389, file: !980, line: 508, baseType: !839, size: 192, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1389, file: !980, line: 515, baseType: !503, size: 64, offset: 192)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1389, file: !980, line: 516, baseType: !503, size: 64, offset: 256)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1389, file: !980, line: 517, baseType: !503, size: 64, offset: 320)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1389, file: !980, line: 518, baseType: !503, size: 64, offset: 384)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1389, file: !980, line: 519, baseType: !503, size: 64, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1389, file: !980, line: 526, baseType: !856, size: 64, offset: 512)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1389, file: !980, line: 527, baseType: !503, size: 64, offset: 576)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1389, file: !980, line: 528, baseType: !7, size: 32, offset: 640)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1389, file: !980, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1389, file: !980, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1389, file: !980, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1389, file: !980, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1389, file: !980, line: 563, baseType: !1405, size: 512, offset: 704)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !42, line: 118, size: 512, elements: !1406)
!1406 = !{!1407, !1415, !1416, !1421, !1464, !1467, !1468, !1469}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1405, file: !42, line: 119, baseType: !1408, size: 256)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1409, line: 9, size: 256, elements: !1410)
!1409 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1410 = !{!1411, !1412}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1408, file: !1409, line: 10, baseType: !839, size: 192, align: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1408, file: !1409, line: 11, baseType: !1413, size: 64, offset: 192)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1414, line: 29, baseType: !856)
!1414 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1405, file: !42, line: 120, baseType: !1413, size: 64, offset: 256)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1405, file: !42, line: 121, baseType: !1417, size: 64, offset: 320)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!41, !1420}
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1405, file: !42, line: 122, baseType: !1422, size: 64, offset: 384)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !42, line: 159, size: 512, align: 512, elements: !1424)
!1424 = !{!1425, !1445, !1446, !1449, !1454, !1455, !1459, !1463}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1423, file: !42, line: 160, baseType: !1426, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !42, line: 214, size: 4608, align: 512, elements: !1428)
!1428 = !{!1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1427, file: !42, line: 215, baseType: !859)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1427, file: !42, line: 216, baseType: !7, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1427, file: !42, line: 217, baseType: !7, size: 32, offset: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1427, file: !42, line: 218, baseType: !7, size: 32, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1427, file: !42, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1427, file: !42, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1427, file: !42, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1427, file: !42, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1427, file: !42, line: 233, baseType: !1413, size: 64, offset: 128)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1427, file: !42, line: 234, baseType: !1420, size: 64, offset: 192)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1427, file: !42, line: 235, baseType: !1413, size: 64, offset: 256)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1427, file: !42, line: 236, baseType: !1420, size: 64, offset: 320)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1427, file: !42, line: 237, baseType: !1442, size: 4096, offset: 512)
!1442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1423, size: 4096, elements: !1443)
!1443 = !{!1444}
!1444 = !DISubrange(count: 8)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1423, file: !42, line: 161, baseType: !7, size: 32, offset: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1423, file: !42, line: 162, baseType: !1447, size: 32, offset: 96)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !245, line: 27, baseType: !1448)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !392, line: 96, baseType: !249)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1423, file: !42, line: 163, baseType: !1450, size: 32, offset: 128)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !470, line: 276, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !470, line: 276, size: 32, elements: !1452)
!1452 = !{!1453}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1451, file: !470, line: 276, baseType: !474, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1423, file: !42, line: 164, baseType: !1420, size: 64, offset: 192)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1423, file: !42, line: 165, baseType: !1456, size: 128, offset: 256)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1409, line: 14, size: 128, elements: !1457)
!1457 = !{!1458}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1456, file: !1409, line: 15, baseType: !831, size: 128)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1423, file: !42, line: 166, baseType: !1460, size: 64, offset: 384)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!1413}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1423, file: !42, line: 167, baseType: !1413, size: 64, offset: 448)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1405, file: !42, line: 123, baseType: !1465, size: 8, offset: 448)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !498, line: 17, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !500, line: 21, baseType: !509)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1405, file: !42, line: 124, baseType: !1465, size: 8, offset: 456)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1405, file: !42, line: 125, baseType: !1465, size: 8, offset: 464)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1405, file: !42, line: 126, baseType: !1465, size: 8, offset: 472)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1389, file: !980, line: 572, baseType: !1405, size: 512, offset: 1216)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1389, file: !980, line: 580, baseType: !1472, size: 64, offset: 1728)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1336, file: !980, line: 721, baseType: !7, size: 32, offset: 3584)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1336, file: !980, line: 722, baseType: !249, size: 32, offset: 3616)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1336, file: !980, line: 723, baseType: !1476, size: 64, offset: 3648)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1479, line: 17, baseType: !1480)
!1479 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1479, line: 17, size: 64, elements: !1481)
!1481 = !{!1482}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1480, file: !1479, line: 17, baseType: !287, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1336, file: !980, line: 724, baseType: !1478, size: 64, offset: 3712)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1336, file: !980, line: 749, baseType: !1485, offset: 3776)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !980, line: 290, elements: !332)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1336, file: !980, line: 751, baseType: !253, size: 128, offset: 3776)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1336, file: !980, line: 757, baseType: !1093, size: 64, offset: 3904)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1336, file: !980, line: 758, baseType: !1093, size: 64, offset: 3968)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1336, file: !980, line: 761, baseType: !1490, size: 320, offset: 4032)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1270, line: 34, size: 320, elements: !1491)
!1491 = !{!1492, !1493}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1490, file: !1270, line: 35, baseType: !503, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1490, file: !1270, line: 36, baseType: !1494, size: 256, offset: 64)
!1494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1100, size: 256, elements: !1274)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1336, file: !980, line: 766, baseType: !249, size: 32, offset: 4352)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1336, file: !980, line: 767, baseType: !249, size: 32, offset: 4384)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1336, file: !980, line: 768, baseType: !249, size: 32, offset: 4416)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1336, file: !980, line: 770, baseType: !249, size: 32, offset: 4448)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1336, file: !980, line: 772, baseType: !288, size: 64, offset: 4480)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1336, file: !980, line: 775, baseType: !7, size: 32, offset: 4544)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1336, file: !980, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1336, file: !980, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1336, file: !980, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1336, file: !980, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1336, file: !980, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1336, file: !980, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1336, file: !980, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1336, file: !980, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1336, file: !980, line: 831, baseType: !288, size: 64, offset: 4672)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1336, file: !980, line: 833, baseType: !1511, size: 384, offset: 4736)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !47, line: 25, size: 384, elements: !1512)
!1512 = !{!1513, !1518}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1511, file: !47, line: 26, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!226, !1517}
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, scope: !1511, file: !47, line: 27, baseType: !1519, size: 320, offset: 64)
!1519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1511, file: !47, line: 27, size: 320, elements: !1520)
!1520 = !{!1521, !1531, !1558}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1519, file: !47, line: 36, baseType: !1522, size: 320)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1519, file: !47, line: 29, size: 320, elements: !1523)
!1523 = !{!1524, !1526, !1527, !1528, !1529, !1530}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1522, file: !47, line: 30, baseType: !1525, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1522, file: !47, line: 31, baseType: !497, size: 32, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1522, file: !47, line: 32, baseType: !497, size: 32, offset: 96)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1522, file: !47, line: 33, baseType: !497, size: 32, offset: 128)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1522, file: !47, line: 34, baseType: !503, size: 64, offset: 192)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1522, file: !47, line: 35, baseType: !1525, size: 64, offset: 256)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1519, file: !47, line: 46, baseType: !1532, size: 192)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1519, file: !47, line: 38, size: 192, elements: !1533)
!1533 = !{!1534, !1535, !1536, !1557}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1532, file: !47, line: 39, baseType: !1447, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1532, file: !47, line: 40, baseType: !46, size: 32, offset: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, scope: !1532, file: !47, line: 41, baseType: !1537, size: 64, offset: 64)
!1537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1532, file: !47, line: 41, size: 64, elements: !1538)
!1538 = !{!1539, !1547}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1537, file: !47, line: 42, baseType: !1540, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1542, line: 7, size: 128, elements: !1543)
!1542 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1543 = !{!1544, !1546}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1541, file: !1542, line: 8, baseType: !1545, size: 64)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !392, line: 93, baseType: !613)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1541, file: !1542, line: 9, baseType: !613, size: 64, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1537, file: !47, line: 43, baseType: !1548, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1550, line: 7, size: 64, elements: !1551)
!1550 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1551 = !{!1552, !1556}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1549, file: !1550, line: 8, baseType: !1553, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1550, line: 5, baseType: !1554)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !498, line: 20, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !500, line: 26, baseType: !249)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1549, file: !1550, line: 9, baseType: !1554, size: 32, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1532, file: !47, line: 45, baseType: !503, size: 64, offset: 128)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1519, file: !47, line: 54, baseType: !1559, size: 256)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1519, file: !47, line: 48, size: 256, elements: !1560)
!1560 = !{!1561, !1564, !1565, !1566, !1567}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1559, file: !47, line: 49, baseType: !1562, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1563 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !47, line: 14, flags: DIFlagFwdDecl)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1559, file: !47, line: 50, baseType: !249, size: 32, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1559, file: !47, line: 51, baseType: !249, size: 32, offset: 96)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1559, file: !47, line: 52, baseType: !288, size: 64, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1559, file: !47, line: 53, baseType: !288, size: 64, offset: 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1336, file: !980, line: 835, baseType: !1569, size: 32, offset: 5120)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !245, line: 22, baseType: !1570)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !392, line: 28, baseType: !249)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1336, file: !980, line: 836, baseType: !1569, size: 32, offset: 5152)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1336, file: !980, line: 840, baseType: !288, size: 64, offset: 5184)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1336, file: !980, line: 849, baseType: !1335, size: 64, offset: 5248)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1336, file: !980, line: 852, baseType: !1335, size: 64, offset: 5312)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1336, file: !980, line: 857, baseType: !253, size: 128, offset: 5376)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1336, file: !980, line: 858, baseType: !253, size: 128, offset: 5504)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1336, file: !980, line: 859, baseType: !1335, size: 64, offset: 5632)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1336, file: !980, line: 867, baseType: !253, size: 128, offset: 5696)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1336, file: !980, line: 868, baseType: !253, size: 128, offset: 5824)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1336, file: !980, line: 871, baseType: !1581, size: 64, offset: 5952)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !75, line: 59, size: 768, elements: !1583)
!1583 = !{!1584, !1585, !1586, !1587, !1589, !1590, !1597, !1598}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1582, file: !75, line: 61, baseType: !240, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1582, file: !75, line: 62, baseType: !7, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1582, file: !75, line: 63, baseType: !318, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1582, file: !75, line: 65, baseType: !1588, size: 256, offset: 64)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !718, size: 256, elements: !1274)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1582, file: !75, line: 66, baseType: !718, size: 64, offset: 320)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1582, file: !75, line: 68, baseType: !1591, size: 128, offset: 384)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1592, line: 40, baseType: !1593)
!1592 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1592, line: 36, size: 128, elements: !1594)
!1594 = !{!1595, !1596}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1593, file: !1592, line: 37, baseType: !318)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1593, file: !1592, line: 38, baseType: !253, size: 128)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1582, file: !75, line: 69, baseType: !447, size: 128, align: 64, offset: 512)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1582, file: !75, line: 70, baseType: !1599, size: 128, offset: 640)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1600, size: 128, elements: !289)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !75, line: 54, size: 128, elements: !1601)
!1601 = !{!1602, !1603}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1600, file: !75, line: 55, baseType: !249, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1600, file: !75, line: 56, baseType: !1604, size: 64, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !75, line: 56, flags: DIFlagFwdDecl)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1336, file: !980, line: 872, baseType: !1607, size: 512, offset: 6016)
!1607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !722, size: 512, elements: !1274)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1336, file: !980, line: 873, baseType: !253, size: 128, offset: 6528)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1336, file: !980, line: 874, baseType: !253, size: 128, offset: 6656)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1336, file: !980, line: 876, baseType: !1611, size: 64, offset: 6784)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1613, line: 26, size: 192, elements: !1614)
!1613 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1614 = !{!1615, !1616}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1612, file: !1613, line: 27, baseType: !7, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1612, file: !1613, line: 28, baseType: !1617, size: 128, offset: 64)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1618, line: 43, size: 128, elements: !1619)
!1618 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1617, file: !1618, line: 44, baseType: !859)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1617, file: !1618, line: 45, baseType: !253, size: 128)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1336, file: !980, line: 879, baseType: !788, size: 64, offset: 6848)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1336, file: !980, line: 882, baseType: !788, size: 64, offset: 6912)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1336, file: !980, line: 884, baseType: !503, size: 64, offset: 6976)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1336, file: !980, line: 885, baseType: !503, size: 64, offset: 7040)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1336, file: !980, line: 890, baseType: !503, size: 64, offset: 7104)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1336, file: !980, line: 891, baseType: !1628, size: 128, offset: 7168)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !980, line: 242, size: 128, elements: !1629)
!1629 = !{!1630, !1631, !1632}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1628, file: !980, line: 244, baseType: !503, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1628, file: !980, line: 245, baseType: !503, size: 64, offset: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1628, file: !980, line: 246, baseType: !859, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1336, file: !980, line: 900, baseType: !288, size: 64, offset: 7296)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1336, file: !980, line: 901, baseType: !288, size: 64, offset: 7360)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1336, file: !980, line: 904, baseType: !503, size: 64, offset: 7424)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1336, file: !980, line: 907, baseType: !503, size: 64, offset: 7488)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1336, file: !980, line: 910, baseType: !288, size: 64, offset: 7552)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1336, file: !980, line: 911, baseType: !288, size: 64, offset: 7616)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1336, file: !980, line: 914, baseType: !1640, size: 640, offset: 7680)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1641, line: 123, size: 640, elements: !1642)
!1641 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1642 = !{!1643, !1649, !1650}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1640, file: !1641, line: 124, baseType: !1644, size: 576)
!1644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1645, size: 576, elements: !360)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1641, line: 108, size: 192, elements: !1646)
!1646 = !{!1647, !1648}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1645, file: !1641, line: 109, baseType: !503, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1645, file: !1641, line: 110, baseType: !1456, size: 128, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1640, file: !1641, line: 125, baseType: !7, size: 32, offset: 576)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1640, file: !1641, line: 126, baseType: !7, size: 32, offset: 608)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1336, file: !980, line: 917, baseType: !1652, size: 192, offset: 8320)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1641, line: 134, size: 192, elements: !1653)
!1653 = !{!1654, !1655}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1652, file: !1641, line: 135, baseType: !447, size: 128, align: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1652, file: !1641, line: 136, baseType: !7, size: 32, offset: 128)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1336, file: !980, line: 923, baseType: !1657, size: 64, offset: 8512)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1660, line: 111, size: 1280, elements: !1661)
!1660 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1661 = !{!1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1681, !1682, !1683, !1684, !1685, !1686, !1793, !1794, !1795, !1796, !1822, !1825, !1835}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1659, file: !1660, line: 112, baseType: !244, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1659, file: !1660, line: 120, baseType: !517, size: 32, offset: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1659, file: !1660, line: 121, baseType: !525, size: 32, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1659, file: !1660, line: 122, baseType: !517, size: 32, offset: 96)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1659, file: !1660, line: 123, baseType: !525, size: 32, offset: 128)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1659, file: !1660, line: 124, baseType: !517, size: 32, offset: 160)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1659, file: !1660, line: 125, baseType: !525, size: 32, offset: 192)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1659, file: !1660, line: 126, baseType: !517, size: 32, offset: 224)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1659, file: !1660, line: 127, baseType: !525, size: 32, offset: 256)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1659, file: !1660, line: 128, baseType: !7, size: 32, offset: 288)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1659, file: !1660, line: 129, baseType: !1673, size: 64, offset: 320)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1674, line: 26, baseType: !1675)
!1674 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1674, line: 24, size: 64, elements: !1676)
!1676 = !{!1677}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1675, file: !1674, line: 25, baseType: !1678, size: 64)
!1678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 64, elements: !1679)
!1679 = !{!1680}
!1680 = !DISubrange(count: 2)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1659, file: !1660, line: 130, baseType: !1673, size: 64, offset: 384)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1659, file: !1660, line: 131, baseType: !1673, size: 64, offset: 448)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1659, file: !1660, line: 132, baseType: !1673, size: 64, offset: 512)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1659, file: !1660, line: 133, baseType: !1673, size: 64, offset: 576)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1659, file: !1660, line: 135, baseType: !509, size: 8, offset: 640)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1659, file: !1660, line: 137, baseType: !1687, size: 64, offset: 704)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1689, line: 189, size: 1664, elements: !1690)
!1689 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1690 = !{!1691, !1692, !1695, !1700, !1701, !1704, !1705, !1710, !1711, !1712, !1713, !1715, !1716, !1717, !1718, !1719, !1757, !1778}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1688, file: !1689, line: 190, baseType: !240, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1688, file: !1689, line: 191, baseType: !1693, size: 32, offset: 32)
!1693 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1689, line: 28, baseType: !1694)
!1694 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !245, line: 98, baseType: !1554)
!1695 = !DIDerivedType(tag: DW_TAG_member, scope: !1688, file: !1689, line: 192, baseType: !1696, size: 192, offset: 64)
!1696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1688, file: !1689, line: 192, size: 192, elements: !1697)
!1697 = !{!1698, !1699}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1696, file: !1689, line: 193, baseType: !253, size: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1696, file: !1689, line: 194, baseType: !839, size: 192, align: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1688, file: !1689, line: 199, baseType: !846, size: 256, offset: 256)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1688, file: !1689, line: 200, baseType: !1702, size: 64, offset: 512)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1689, line: 200, flags: DIFlagFwdDecl)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1688, file: !1689, line: 201, baseType: !269, size: 64, offset: 576)
!1705 = !DIDerivedType(tag: DW_TAG_member, scope: !1688, file: !1689, line: 202, baseType: !1706, size: 64, offset: 640)
!1706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1688, file: !1689, line: 202, size: 64, elements: !1707)
!1707 = !{!1708, !1709}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1706, file: !1689, line: 203, baseType: !619, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1706, file: !1689, line: 204, baseType: !619, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1688, file: !1689, line: 206, baseType: !619, size: 64, offset: 704)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1688, file: !1689, line: 207, baseType: !517, size: 32, offset: 768)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1688, file: !1689, line: 208, baseType: !525, size: 32, offset: 800)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1688, file: !1689, line: 209, baseType: !1714, size: 32, offset: 832)
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1689, line: 31, baseType: !639)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1688, file: !1689, line: 210, baseType: !293, size: 16, offset: 864)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1688, file: !1689, line: 211, baseType: !293, size: 16, offset: 880)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1688, file: !1689, line: 215, baseType: !1324, size: 16, offset: 896)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1688, file: !1689, line: 222, baseType: !288, size: 64, offset: 960)
!1719 = !DIDerivedType(tag: DW_TAG_member, scope: !1688, file: !1689, line: 239, baseType: !1720, size: 320, offset: 1024)
!1720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1688, file: !1689, line: 239, size: 320, elements: !1721)
!1721 = !{!1722, !1749}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1720, file: !1689, line: 240, baseType: !1723, size: 320)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1689, line: 108, size: 320, elements: !1724)
!1724 = !{!1725, !1726, !1738, !1741, !1748}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1723, file: !1689, line: 110, baseType: !288, size: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, scope: !1723, file: !1689, line: 111, baseType: !1727, size: 64, offset: 64)
!1727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1723, file: !1689, line: 111, size: 64, elements: !1728)
!1728 = !{!1729, !1737}
!1729 = !DIDerivedType(tag: DW_TAG_member, scope: !1727, file: !1689, line: 112, baseType: !1730, size: 64)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1727, file: !1689, line: 112, size: 64, elements: !1731)
!1731 = !{!1732, !1733}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1730, file: !1689, line: 114, baseType: !938, size: 16)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1730, file: !1689, line: 115, baseType: !1734, size: 48, offset: 16)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 48, elements: !1735)
!1735 = !{!1736}
!1736 = !DISubrange(count: 6)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1727, file: !1689, line: 121, baseType: !288, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1723, file: !1689, line: 123, baseType: !1739, size: 64, offset: 128)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1689, line: 96, flags: DIFlagFwdDecl)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1723, file: !1689, line: 124, baseType: !1742, size: 64, offset: 192)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1689, line: 102, size: 192, elements: !1744)
!1744 = !{!1745, !1746, !1747}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1743, file: !1689, line: 103, baseType: !447, size: 128, align: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1743, file: !1689, line: 104, baseType: !240, size: 32, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1743, file: !1689, line: 105, baseType: !267, size: 8, offset: 160)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1723, file: !1689, line: 125, baseType: !277, size: 64, offset: 256)
!1749 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1689, line: 241, baseType: !1750, size: 320)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1720, file: !1689, line: 241, size: 320, elements: !1751)
!1751 = !{!1752, !1753, !1754, !1755, !1756}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1750, file: !1689, line: 242, baseType: !288, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1750, file: !1689, line: 243, baseType: !288, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1750, file: !1689, line: 244, baseType: !1739, size: 64, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1750, file: !1689, line: 245, baseType: !1742, size: 64, offset: 192)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1750, file: !1689, line: 246, baseType: !359, size: 64, offset: 256)
!1757 = !DIDerivedType(tag: DW_TAG_member, scope: !1688, file: !1689, line: 254, baseType: !1758, size: 256, offset: 1344)
!1758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1688, file: !1689, line: 254, size: 256, elements: !1759)
!1759 = !{!1760, !1766}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1758, file: !1689, line: 255, baseType: !1761, size: 256)
!1761 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1689, line: 128, size: 256, elements: !1762)
!1762 = !{!1763, !1764}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1761, file: !1689, line: 129, baseType: !269, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1761, file: !1689, line: 130, baseType: !1765, size: 256)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 256, elements: !1274)
!1766 = !DIDerivedType(tag: DW_TAG_member, scope: !1758, file: !1689, line: 256, baseType: !1767, size: 256)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1758, file: !1689, line: 256, size: 256, elements: !1768)
!1768 = !{!1769, !1770}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1767, file: !1689, line: 258, baseType: !253, size: 128)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1767, file: !1689, line: 259, baseType: !1771, size: 128, offset: 128)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1772, line: 22, size: 128, elements: !1773)
!1772 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1773 = !{!1774, !1777}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1771, file: !1772, line: 23, baseType: !1775, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1772, line: 23, flags: DIFlagFwdDecl)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1771, file: !1772, line: 24, baseType: !288, size: 64, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1688, file: !1689, line: 274, baseType: !1779, size: 64, offset: 1600)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1689, line: 170, size: 192, elements: !1781)
!1781 = !{!1782, !1791, !1792}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1780, file: !1689, line: 171, baseType: !1783, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1689, line: 165, baseType: !1784)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!249, !1687, !1787, !1789, !1687}
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1740)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1761)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1780, file: !1689, line: 172, baseType: !1687, size: 64, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1780, file: !1689, line: 173, baseType: !1739, size: 64, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1659, file: !1660, line: 138, baseType: !1687, size: 64, offset: 768)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1659, file: !1660, line: 139, baseType: !1687, size: 64, offset: 832)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1659, file: !1660, line: 140, baseType: !1687, size: 64, offset: 896)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1659, file: !1660, line: 145, baseType: !1797, size: 64, offset: 960)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1799, line: 13, size: 896, elements: !1800)
!1799 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1800 = !{!1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1798, file: !1799, line: 14, baseType: !240, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1798, file: !1799, line: 15, baseType: !244, size: 32, offset: 32)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1798, file: !1799, line: 16, baseType: !244, size: 32, offset: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1798, file: !1799, line: 21, baseType: !850, size: 64, offset: 128)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1798, file: !1799, line: 27, baseType: !288, size: 64, offset: 192)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1798, file: !1799, line: 28, baseType: !288, size: 64, offset: 256)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1798, file: !1799, line: 29, baseType: !850, size: 64, offset: 320)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1798, file: !1799, line: 32, baseType: !722, size: 128, offset: 384)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1798, file: !1799, line: 33, baseType: !517, size: 32, offset: 512)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1798, file: !1799, line: 37, baseType: !850, size: 64, offset: 576)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1798, file: !1799, line: 44, baseType: !1812, size: 256, offset: 640)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1813, line: 15, size: 256, elements: !1814)
!1813 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1814 = !{!1815, !1816, !1817, !1818, !1819, !1820, !1821}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1812, file: !1813, line: 16, baseType: !859)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1812, file: !1813, line: 18, baseType: !249, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1812, file: !1813, line: 19, baseType: !249, size: 32, offset: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1812, file: !1813, line: 20, baseType: !249, size: 32, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1812, file: !1813, line: 21, baseType: !249, size: 32, offset: 96)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1812, file: !1813, line: 22, baseType: !288, size: 64, offset: 128)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1812, file: !1813, line: 23, baseType: !288, size: 64, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1659, file: !1660, line: 146, baseType: !1823, size: 64, offset: 1024)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !518, line: 18, flags: DIFlagFwdDecl)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1659, file: !1660, line: 147, baseType: !1826, size: 64, offset: 1088)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1660, line: 25, size: 64, elements: !1828)
!1828 = !{!1829, !1830, !1831}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1827, file: !1660, line: 26, baseType: !244, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1827, file: !1660, line: 27, baseType: !249, size: 32, offset: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1827, file: !1660, line: 28, baseType: !1832, offset: 64)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !525, elements: !1833)
!1833 = !{!1834}
!1834 = !DISubrange(count: 0)
!1835 = !DIDerivedType(tag: DW_TAG_member, scope: !1659, file: !1660, line: 149, baseType: !1836, size: 128, offset: 1152)
!1836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1659, file: !1660, line: 149, size: 128, elements: !1837)
!1837 = !{!1838, !1839}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1836, file: !1660, line: 150, baseType: !249, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1836, file: !1660, line: 151, baseType: !447, size: 128, align: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1336, file: !980, line: 926, baseType: !1657, size: 64, offset: 8576)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1336, file: !980, line: 929, baseType: !1657, size: 64, offset: 8640)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1336, file: !980, line: 933, baseType: !1687, size: 64, offset: 8704)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1336, file: !980, line: 943, baseType: !1844, size: 128, offset: 8768)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 128, elements: !1845)
!1845 = !{!1846}
!1846 = !DISubrange(count: 16)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1336, file: !980, line: 945, baseType: !1848, size: 64, offset: 8896)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !980, line: 49, flags: DIFlagFwdDecl)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1336, file: !980, line: 956, baseType: !1851, size: 64, offset: 8960)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !980, line: 45, flags: DIFlagFwdDecl)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1336, file: !980, line: 959, baseType: !1854, size: 64, offset: 9024)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !980, line: 959, flags: DIFlagFwdDecl)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1336, file: !980, line: 962, baseType: !1857, size: 64, offset: 9088)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !980, line: 66, flags: DIFlagFwdDecl)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1336, file: !980, line: 966, baseType: !1860, size: 64, offset: 9152)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !980, line: 50, flags: DIFlagFwdDecl)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1336, file: !980, line: 969, baseType: !1863, size: 64, offset: 9216)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1865, line: 82, size: 7296, elements: !1866)
!1865 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1866 = !{!1867, !1868, !1869, !1870, !1871, !1872, !1873, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1902, !1911, !1912, !1914, !1915, !1916, !1919, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1949, !1950, !1957, !1958, !1959, !1960, !1961, !1962}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1864, file: !1865, line: 83, baseType: !240, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1864, file: !1865, line: 84, baseType: !244, size: 32, offset: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1864, file: !1865, line: 85, baseType: !249, size: 32, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1864, file: !1865, line: 86, baseType: !253, size: 128, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1864, file: !1865, line: 88, baseType: !1591, size: 128, offset: 256)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1864, file: !1865, line: 91, baseType: !1335, size: 64, offset: 384)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1864, file: !1865, line: 94, baseType: !1874, size: 192, offset: 448)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1875, line: 30, size: 192, elements: !1876)
!1875 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1876 = !{!1877, !1878}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1874, file: !1875, line: 31, baseType: !253, size: 128)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1874, file: !1875, line: 32, baseType: !1879, size: 64, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1880, line: 25, baseType: !1881)
!1880 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1880, line: 23, size: 64, elements: !1882)
!1882 = !{!1883}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1881, file: !1880, line: 24, baseType: !287, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1864, file: !1865, line: 97, baseType: !718, size: 64, offset: 640)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1864, file: !1865, line: 100, baseType: !249, size: 32, offset: 704)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1864, file: !1865, line: 106, baseType: !249, size: 32, offset: 736)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1864, file: !1865, line: 107, baseType: !1335, size: 64, offset: 768)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1864, file: !1865, line: 110, baseType: !249, size: 32, offset: 832)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1864, file: !1865, line: 111, baseType: !7, size: 32, offset: 864)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1864, file: !1865, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1864, file: !1865, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1864, file: !1865, line: 128, baseType: !249, size: 32, offset: 928)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1864, file: !1865, line: 129, baseType: !253, size: 128, offset: 960)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1864, file: !1865, line: 132, baseType: !1405, size: 512, offset: 1088)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1864, file: !1865, line: 133, baseType: !1413, size: 64, offset: 1600)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1864, file: !1865, line: 140, baseType: !1897, size: 256, offset: 1664)
!1897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1898, size: 256, elements: !1679)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1865, line: 38, size: 128, elements: !1899)
!1899 = !{!1900, !1901}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1898, file: !1865, line: 39, baseType: !503, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1898, file: !1865, line: 40, baseType: !503, size: 64, offset: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1864, file: !1865, line: 146, baseType: !1903, size: 192, offset: 1920)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1865, line: 66, size: 192, elements: !1904)
!1904 = !{!1905}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1903, file: !1865, line: 67, baseType: !1906, size: 192)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1865, line: 47, size: 192, elements: !1907)
!1907 = !{!1908, !1909, !1910}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1906, file: !1865, line: 48, baseType: !852, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1906, file: !1865, line: 49, baseType: !852, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1906, file: !1865, line: 50, baseType: !852, size: 64, offset: 128)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1864, file: !1865, line: 150, baseType: !1640, size: 640, offset: 2112)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1864, file: !1865, line: 153, baseType: !1913, size: 256, offset: 2752)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 256, elements: !1274)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1864, file: !1865, line: 159, baseType: !1581, size: 64, offset: 3008)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1864, file: !1865, line: 162, baseType: !249, size: 32, offset: 3072)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1864, file: !1865, line: 164, baseType: !1917, size: 64, offset: 3136)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1865, line: 164, flags: DIFlagFwdDecl)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1864, file: !1865, line: 175, baseType: !1920, size: 32, offset: 3200)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !470, line: 805, baseType: !1921)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !470, line: 798, size: 32, elements: !1922)
!1922 = !{!1923, !1924}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1921, file: !470, line: 803, baseType: !469, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1921, file: !470, line: 804, baseType: !318, offset: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1864, file: !1865, line: 176, baseType: !503, size: 64, offset: 3264)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1864, file: !1865, line: 176, baseType: !503, size: 64, offset: 3328)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1864, file: !1865, line: 176, baseType: !503, size: 64, offset: 3392)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1864, file: !1865, line: 176, baseType: !503, size: 64, offset: 3456)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1864, file: !1865, line: 177, baseType: !503, size: 64, offset: 3520)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1864, file: !1865, line: 178, baseType: !503, size: 64, offset: 3584)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1864, file: !1865, line: 179, baseType: !1628, size: 128, offset: 3648)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1864, file: !1865, line: 180, baseType: !288, size: 64, offset: 3776)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1864, file: !1865, line: 180, baseType: !288, size: 64, offset: 3840)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1864, file: !1865, line: 180, baseType: !288, size: 64, offset: 3904)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1864, file: !1865, line: 180, baseType: !288, size: 64, offset: 3968)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1864, file: !1865, line: 181, baseType: !288, size: 64, offset: 4032)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1864, file: !1865, line: 181, baseType: !288, size: 64, offset: 4096)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1864, file: !1865, line: 181, baseType: !288, size: 64, offset: 4160)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1864, file: !1865, line: 181, baseType: !288, size: 64, offset: 4224)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1864, file: !1865, line: 182, baseType: !288, size: 64, offset: 4288)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1864, file: !1865, line: 182, baseType: !288, size: 64, offset: 4352)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1864, file: !1865, line: 182, baseType: !288, size: 64, offset: 4416)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1864, file: !1865, line: 182, baseType: !288, size: 64, offset: 4480)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1864, file: !1865, line: 183, baseType: !288, size: 64, offset: 4544)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1864, file: !1865, line: 183, baseType: !288, size: 64, offset: 4608)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1864, file: !1865, line: 184, baseType: !1947, offset: 4672)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1948, line: 12, elements: !332)
!1948 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1864, file: !1865, line: 192, baseType: !505, size: 64, offset: 4672)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1864, file: !1865, line: 203, baseType: !1951, size: 2048, offset: 4736)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1952, size: 2048, elements: !1845)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1953, line: 43, size: 128, elements: !1954)
!1953 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1954 = !{!1955, !1956}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1952, file: !1953, line: 44, baseType: !406, size: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1952, file: !1953, line: 45, baseType: !406, size: 64, offset: 64)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1864, file: !1865, line: 220, baseType: !267, size: 8, offset: 6784)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1864, file: !1865, line: 221, baseType: !1324, size: 16, offset: 6800)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1864, file: !1865, line: 222, baseType: !1324, size: 16, offset: 6816)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1864, file: !1865, line: 224, baseType: !1093, size: 64, offset: 6848)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1864, file: !1865, line: 227, baseType: !1292, size: 192, offset: 6912)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1864, file: !1865, line: 233, baseType: !1292, size: 192, offset: 7104)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1336, file: !980, line: 970, baseType: !1964, size: 64, offset: 9280)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1865, line: 20, size: 16576, elements: !1966)
!1966 = !{!1967, !1968, !1969, !1970}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1965, file: !1865, line: 21, baseType: !318)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1965, file: !1865, line: 22, baseType: !240, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1965, file: !1865, line: 23, baseType: !1591, size: 128, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1965, file: !1865, line: 24, baseType: !1971, size: 16384, offset: 192)
!1971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1972, size: 16384, elements: !364)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1875, line: 49, size: 256, elements: !1973)
!1973 = !{!1974}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1972, file: !1875, line: 50, baseType: !1975, size: 256)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1875, line: 35, size: 256, elements: !1976)
!1976 = !{!1977, !1984, !1985, !1991}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1975, file: !1875, line: 37, baseType: !1978, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1979, line: 19, baseType: !1980)
!1979 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1979, line: 18, baseType: !1982)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{null, !249}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1975, file: !1875, line: 38, baseType: !288, size: 64, offset: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1975, file: !1875, line: 44, baseType: !1986, size: 64, offset: 128)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1979, line: 22, baseType: !1987)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1979, line: 21, baseType: !1989)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{null}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1975, file: !1875, line: 46, baseType: !1879, size: 64, offset: 192)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1336, file: !980, line: 971, baseType: !1879, size: 64, offset: 9344)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1336, file: !980, line: 972, baseType: !1879, size: 64, offset: 9408)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1336, file: !980, line: 974, baseType: !1879, size: 64, offset: 9472)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1336, file: !980, line: 975, baseType: !1874, size: 192, offset: 9536)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1336, file: !980, line: 976, baseType: !288, size: 64, offset: 9728)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1336, file: !980, line: 977, baseType: !404, size: 64, offset: 9792)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1336, file: !980, line: 978, baseType: !7, size: 32, offset: 9856)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1336, file: !980, line: 980, baseType: !450, size: 64, offset: 9920)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1336, file: !980, line: 989, baseType: !2001, size: 128, offset: 9984)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2002, line: 35, size: 128, elements: !2003)
!2002 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2003 = !{!2004, !2005, !2006}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2001, file: !2002, line: 36, baseType: !249, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2001, file: !2002, line: 37, baseType: !244, size: 32, offset: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2001, file: !2002, line: 38, baseType: !2007, size: 64, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2002, line: 23, flags: DIFlagFwdDecl)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1336, file: !980, line: 992, baseType: !503, size: 64, offset: 10112)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1336, file: !980, line: 993, baseType: !503, size: 64, offset: 10176)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1336, file: !980, line: 996, baseType: !318, offset: 10240)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1336, file: !980, line: 999, baseType: !859, offset: 10240)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1336, file: !980, line: 1001, baseType: !2014, size: 64, offset: 10240)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !980, line: 636, size: 64, elements: !2015)
!2015 = !{!2016}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2014, file: !980, line: 637, baseType: !2017, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1336, file: !980, line: 1005, baseType: !831, size: 128, offset: 10304)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1336, file: !980, line: 1007, baseType: !1335, size: 64, offset: 10432)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1336, file: !980, line: 1009, baseType: !2021, size: 64, offset: 10496)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !980, line: 1009, flags: DIFlagFwdDecl)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1336, file: !980, line: 1043, baseType: !269, size: 64, offset: 10560)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1336, file: !980, line: 1046, baseType: !2025, size: 64, offset: 10624)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !980, line: 41, flags: DIFlagFwdDecl)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1336, file: !980, line: 1050, baseType: !2028, size: 64, offset: 10688)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !980, line: 42, flags: DIFlagFwdDecl)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1336, file: !980, line: 1054, baseType: !2031, size: 64, offset: 10752)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !980, line: 55, flags: DIFlagFwdDecl)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1336, file: !980, line: 1056, baseType: !2034, size: 64, offset: 10816)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !980, line: 40, flags: DIFlagFwdDecl)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1336, file: !980, line: 1058, baseType: !2037, size: 64, offset: 10880)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2039, line: 99, size: 704, elements: !2040)
!2039 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2040 = !{!2041, !2042, !2043, !2044, !2045, !2046, !2047, !2066, !2067}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2038, file: !2039, line: 100, baseType: !850, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2038, file: !2039, line: 101, baseType: !244, size: 32, offset: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2038, file: !2039, line: 102, baseType: !244, size: 32, offset: 96)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2038, file: !2039, line: 105, baseType: !318, offset: 128)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2038, file: !2039, line: 107, baseType: !293, size: 16, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2038, file: !2039, line: 109, baseType: !822, size: 128, offset: 192)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2038, file: !2039, line: 110, baseType: !2048, size: 64, offset: 320)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2039, line: 73, size: 448, elements: !2050)
!2050 = !{!2051, !2054, !2055, !2060, !2065}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2049, file: !2039, line: 74, baseType: !2052, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2039, line: 74, flags: DIFlagFwdDecl)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2049, file: !2039, line: 75, baseType: !2037, size: 64, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, scope: !2049, file: !2039, line: 83, baseType: !2056, size: 128, offset: 128)
!2056 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2049, file: !2039, line: 83, size: 128, elements: !2057)
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2056, file: !2039, line: 84, baseType: !253, size: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2056, file: !2039, line: 85, baseType: !1054, size: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, scope: !2049, file: !2039, line: 87, baseType: !2061, size: 128, offset: 256)
!2061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2049, file: !2039, line: 87, size: 128, elements: !2062)
!2062 = !{!2063, !2064}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2061, file: !2039, line: 88, baseType: !722, size: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2061, file: !2039, line: 89, baseType: !447, size: 128, align: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2049, file: !2039, line: 92, baseType: !7, size: 32, offset: 384)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2038, file: !2039, line: 111, baseType: !718, size: 64, offset: 384)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2038, file: !2039, line: 113, baseType: !2068, size: 256, offset: 448)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2069, line: 102, size: 256, elements: !2070)
!2069 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2070 = !{!2071, !2072, !2073}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2068, file: !2069, line: 103, baseType: !850, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2068, file: !2069, line: 104, baseType: !253, size: 128, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2068, file: !2069, line: 105, baseType: !2074, size: 64, offset: 192)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2069, line: 21, baseType: !2075)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DISubroutineType(types: !2077)
!2077 = !{null, !2078}
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1336, file: !980, line: 1061, baseType: !2080, size: 64, offset: 10944)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !980, line: 43, flags: DIFlagFwdDecl)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1336, file: !980, line: 1064, baseType: !288, size: 64, offset: 11008)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1336, file: !980, line: 1065, baseType: !2084, size: 64, offset: 11072)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1875, line: 14, baseType: !2086)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1875, line: 12, size: 384, elements: !2087)
!2087 = !{!2088}
!2088 = !DIDerivedType(tag: DW_TAG_member, scope: !2086, file: !1875, line: 13, baseType: !2089, size: 384)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2086, file: !1875, line: 13, size: 384, elements: !2090)
!2090 = !{!2091, !2092, !2093, !2094}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2089, file: !1875, line: 13, baseType: !249, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2089, file: !1875, line: 13, baseType: !249, size: 32, offset: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2089, file: !1875, line: 13, baseType: !249, size: 32, offset: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2089, file: !1875, line: 13, baseType: !2095, size: 256, offset: 128)
!2095 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2096, line: 32, size: 256, elements: !2097)
!2096 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2097 = !{!2098, !2103, !2116, !2122, !2131, !2151, !2156}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2095, file: !2096, line: 37, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2095, file: !2096, line: 34, size: 64, elements: !2100)
!2100 = !{!2101, !2102}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2099, file: !2096, line: 35, baseType: !1570, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2099, file: !2096, line: 36, baseType: !523, size: 32, offset: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2095, file: !2096, line: 45, baseType: !2104, size: 192)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2095, file: !2096, line: 40, size: 192, elements: !2105)
!2105 = !{!2106, !2108, !2109, !2115}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2104, file: !2096, line: 41, baseType: !2107, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !392, line: 95, baseType: !249)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2104, file: !2096, line: 42, baseType: !249, size: 32, offset: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2104, file: !2096, line: 43, baseType: !2110, size: 64, offset: 64)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2096, line: 11, baseType: !2111)
!2111 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2096, line: 8, size: 64, elements: !2112)
!2112 = !{!2113, !2114}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2111, file: !2096, line: 9, baseType: !249, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2111, file: !2096, line: 10, baseType: !269, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2104, file: !2096, line: 44, baseType: !249, size: 32, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2095, file: !2096, line: 52, baseType: !2117, size: 128)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2095, file: !2096, line: 48, size: 128, elements: !2118)
!2118 = !{!2119, !2120, !2121}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2117, file: !2096, line: 49, baseType: !1570, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2117, file: !2096, line: 50, baseType: !523, size: 32, offset: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2117, file: !2096, line: 51, baseType: !2110, size: 64, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2095, file: !2096, line: 61, baseType: !2123, size: 256)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2095, file: !2096, line: 55, size: 256, elements: !2124)
!2124 = !{!2125, !2126, !2127, !2128, !2130}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2123, file: !2096, line: 56, baseType: !1570, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2123, file: !2096, line: 57, baseType: !523, size: 32, offset: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2123, file: !2096, line: 58, baseType: !249, size: 32, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2123, file: !2096, line: 59, baseType: !2129, size: 64, offset: 128)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !392, line: 94, baseType: !393)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2123, file: !2096, line: 60, baseType: !2129, size: 64, offset: 192)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2095, file: !2096, line: 95, baseType: !2132, size: 256)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2095, file: !2096, line: 64, size: 256, elements: !2133)
!2133 = !{!2134, !2135}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2132, file: !2096, line: 65, baseType: !269, size: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, scope: !2132, file: !2096, line: 77, baseType: !2136, size: 192, offset: 64)
!2136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2132, file: !2096, line: 77, size: 192, elements: !2137)
!2137 = !{!2138, !2139, !2146}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2136, file: !2096, line: 82, baseType: !1324, size: 16)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2136, file: !2096, line: 88, baseType: !2140, size: 192)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2136, file: !2096, line: 84, size: 192, elements: !2141)
!2141 = !{!2142, !2144, !2145}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2140, file: !2096, line: 85, baseType: !2143, size: 64)
!2143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 64, elements: !1443)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2140, file: !2096, line: 86, baseType: !269, size: 64, offset: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2140, file: !2096, line: 87, baseType: !269, size: 64, offset: 128)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2136, file: !2096, line: 93, baseType: !2147, size: 96)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2136, file: !2096, line: 90, size: 96, elements: !2148)
!2148 = !{!2149, !2150}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2147, file: !2096, line: 91, baseType: !2143, size: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2147, file: !2096, line: 92, baseType: !499, size: 32, offset: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2095, file: !2096, line: 101, baseType: !2152, size: 128)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2095, file: !2096, line: 98, size: 128, elements: !2153)
!2153 = !{!2154, !2155}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2152, file: !2096, line: 99, baseType: !226, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2152, file: !2096, line: 100, baseType: !249, size: 32, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2095, file: !2096, line: 108, baseType: !2157, size: 128)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2095, file: !2096, line: 104, size: 128, elements: !2158)
!2158 = !{!2159, !2160, !2161}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2157, file: !2096, line: 105, baseType: !269, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2157, file: !2096, line: 106, baseType: !249, size: 32, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2157, file: !2096, line: 107, baseType: !7, size: 32, offset: 96)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1336, file: !980, line: 1067, baseType: !1947, offset: 11136)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1336, file: !980, line: 1099, baseType: !2164, size: 64, offset: 11136)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !980, line: 56, flags: DIFlagFwdDecl)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1336, file: !980, line: 1103, baseType: !253, size: 128, offset: 11200)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1336, file: !980, line: 1104, baseType: !2168, size: 64, offset: 11328)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !980, line: 46, flags: DIFlagFwdDecl)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1336, file: !980, line: 1105, baseType: !1292, size: 192, offset: 11392)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1336, file: !980, line: 1106, baseType: !7, size: 32, offset: 11584)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1336, file: !980, line: 1109, baseType: !2173, size: 128, offset: 11648)
!2173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2174, size: 128, elements: !1679)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !980, line: 51, flags: DIFlagFwdDecl)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1336, file: !980, line: 1110, baseType: !1292, size: 192, offset: 11776)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1336, file: !980, line: 1111, baseType: !253, size: 128, offset: 11968)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1336, file: !980, line: 1173, baseType: !2179, size: 64, offset: 12096)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2181, line: 62, size: 256, align: 256, elements: !2182)
!2181 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2182 = !{!2183, !2184, !2185, !2190}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2180, file: !2181, line: 75, baseType: !499, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2180, file: !2181, line: 90, baseType: !499, size: 32, offset: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2180, file: !2181, line: 124, baseType: !2186, size: 64, offset: 64)
!2186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2180, file: !2181, line: 109, size: 64, elements: !2187)
!2187 = !{!2188, !2189}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2186, file: !2181, line: 110, baseType: !504, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2186, file: !2181, line: 112, baseType: !504, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2180, file: !2181, line: 144, baseType: !499, size: 32, offset: 128)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1336, file: !980, line: 1174, baseType: !497, size: 32, offset: 12160)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1336, file: !980, line: 1179, baseType: !288, size: 64, offset: 12224)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1336, file: !980, line: 1182, baseType: !2194, size: 128, offset: 12288)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1270, line: 76, size: 128, elements: !2195)
!2195 = !{!2196, !2201, !2202}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2194, file: !1270, line: 85, baseType: !2197, size: 64)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2198, line: 7, size: 64, elements: !2199)
!2198 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2199 = !{!2200}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2197, file: !2198, line: 12, baseType: !1480, size: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2194, file: !1270, line: 88, baseType: !267, size: 8, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2194, file: !1270, line: 95, baseType: !267, size: 8, offset: 72)
!2203 = !DIDerivedType(tag: DW_TAG_member, scope: !1336, file: !980, line: 1184, baseType: !2204, size: 128, offset: 12416)
!2204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1336, file: !980, line: 1184, size: 128, elements: !2205)
!2205 = !{!2206, !2207}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2204, file: !980, line: 1185, baseType: !240, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2204, file: !980, line: 1186, baseType: !447, size: 128, align: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1336, file: !980, line: 1190, baseType: !978, size: 64, offset: 12544)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1336, file: !980, line: 1192, baseType: !2210, size: 128, offset: 12608)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1270, line: 64, size: 128, elements: !2211)
!2211 = !{!2212, !2213, !2214}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2210, file: !1270, line: 65, baseType: !804, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2210, file: !1270, line: 67, baseType: !499, size: 32, offset: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2210, file: !1270, line: 68, baseType: !499, size: 32, offset: 96)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1336, file: !980, line: 1206, baseType: !249, size: 32, offset: 12736)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1336, file: !980, line: 1207, baseType: !249, size: 32, offset: 12768)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1336, file: !980, line: 1209, baseType: !288, size: 64, offset: 12800)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1336, file: !980, line: 1219, baseType: !503, size: 64, offset: 12864)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1336, file: !980, line: 1220, baseType: !503, size: 64, offset: 12928)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1336, file: !980, line: 1317, baseType: !249, size: 32, offset: 12992)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1336, file: !980, line: 1319, baseType: !1335, size: 64, offset: 13056)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1336, file: !980, line: 1322, baseType: !2223, size: 64, offset: 13120)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2225, line: 56, size: 512, elements: !2226)
!2225 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2226 = !{!2227, !2228, !2229, !2230, !2231, !2232, !2233, !2235}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2224, file: !2225, line: 57, baseType: !2223, size: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2224, file: !2225, line: 58, baseType: !269, size: 64, offset: 64)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2224, file: !2225, line: 59, baseType: !288, size: 64, offset: 128)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2224, file: !2225, line: 60, baseType: !288, size: 64, offset: 192)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2224, file: !2225, line: 61, baseType: !899, size: 64, offset: 256)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2224, file: !2225, line: 62, baseType: !7, size: 32, offset: 320)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2224, file: !2225, line: 63, baseType: !2234, size: 64, offset: 384)
!2234 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !245, line: 153, baseType: !503)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2224, file: !2225, line: 64, baseType: !2236, size: 64, offset: 448)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1336, file: !980, line: 1326, baseType: !240, size: 32, offset: 13184)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1336, file: !980, line: 1342, baseType: !269, size: 64, offset: 13248)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1336, file: !980, line: 1343, baseType: !504, size: 64, offset: 13312)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1336, file: !980, line: 1344, baseType: !503, size: 64, offset: 13376)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1336, file: !980, line: 1345, baseType: !504, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1336, file: !980, line: 1346, baseType: !504, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1336, file: !980, line: 1347, baseType: !504, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1336, file: !980, line: 1348, baseType: !447, size: 128, align: 64, offset: 13504)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1336, file: !980, line: 1358, baseType: !2247, size: 34816, offset: 13824)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2248, line: 485, size: 34816, elements: !2249)
!2248 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2249 = !{!2250, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2279, !2280, !2281, !2282, !2283, !2284, !2287, !2288, !2289}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2247, file: !2248, line: 487, baseType: !2251, size: 192)
!2251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2252, size: 192, elements: !360)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2253, line: 16, size: 64, elements: !2254)
!2253 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2254 = !{!2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2252, file: !2253, line: 17, baseType: !938, size: 16)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2252, file: !2253, line: 18, baseType: !938, size: 16, offset: 16)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2252, file: !2253, line: 19, baseType: !938, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2252, file: !2253, line: 19, baseType: !938, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2252, file: !2253, line: 19, baseType: !938, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2252, file: !2253, line: 19, baseType: !938, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2252, file: !2253, line: 19, baseType: !938, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2252, file: !2253, line: 20, baseType: !938, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2252, file: !2253, line: 20, baseType: !938, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2252, file: !2253, line: 20, baseType: !938, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2252, file: !2253, line: 20, baseType: !938, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2252, file: !2253, line: 20, baseType: !938, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2252, file: !2253, line: 20, baseType: !938, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2247, file: !2248, line: 491, baseType: !288, size: 64, offset: 192)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2247, file: !2248, line: 495, baseType: !293, size: 16, offset: 256)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2247, file: !2248, line: 496, baseType: !293, size: 16, offset: 272)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2247, file: !2248, line: 497, baseType: !293, size: 16, offset: 288)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2247, file: !2248, line: 498, baseType: !293, size: 16, offset: 304)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2247, file: !2248, line: 502, baseType: !288, size: 64, offset: 320)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2247, file: !2248, line: 503, baseType: !288, size: 64, offset: 384)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2247, file: !2248, line: 514, baseType: !2276, size: 256, offset: 448)
!2276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2277, size: 256, elements: !1274)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2248, line: 483, flags: DIFlagFwdDecl)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2247, file: !2248, line: 516, baseType: !288, size: 64, offset: 704)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2247, file: !2248, line: 518, baseType: !288, size: 64, offset: 768)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2247, file: !2248, line: 520, baseType: !288, size: 64, offset: 832)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2247, file: !2248, line: 521, baseType: !288, size: 64, offset: 896)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2247, file: !2248, line: 522, baseType: !288, size: 64, offset: 960)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2247, file: !2248, line: 528, baseType: !2285, size: 64, offset: 1024)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64)
!2286 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2248, line: 10, flags: DIFlagFwdDecl)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2247, file: !2248, line: 535, baseType: !288, size: 64, offset: 1088)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2247, file: !2248, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2247, file: !2248, line: 540, baseType: !2290, size: 33280, offset: 1536)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2291, line: 317, size: 33280, elements: !2292)
!2291 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2292 = !{!2293, !2294, !2295}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2290, file: !2291, line: 330, baseType: !7, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2290, file: !2291, line: 337, baseType: !288, size: 64, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2290, file: !2291, line: 348, baseType: !2296, size: 32768, offset: 512)
!2296 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2291, line: 304, size: 32768, elements: !2297)
!2297 = !{!2298, !2313, !2352, !2402, !2415}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2296, file: !2291, line: 305, baseType: !2299, size: 896)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2291, line: 12, size: 896, elements: !2300)
!2300 = !{!2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2312}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2299, file: !2291, line: 13, baseType: !497, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2299, file: !2291, line: 14, baseType: !497, size: 32, offset: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2299, file: !2291, line: 15, baseType: !497, size: 32, offset: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2299, file: !2291, line: 16, baseType: !497, size: 32, offset: 96)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2299, file: !2291, line: 17, baseType: !497, size: 32, offset: 128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2299, file: !2291, line: 18, baseType: !497, size: 32, offset: 160)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2299, file: !2291, line: 19, baseType: !497, size: 32, offset: 192)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2299, file: !2291, line: 22, baseType: !2309, size: 640, offset: 224)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !497, size: 640, elements: !2310)
!2310 = !{!2311}
!2311 = !DISubrange(count: 20)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2299, file: !2291, line: 25, baseType: !497, size: 32, offset: 864)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2296, file: !2291, line: 306, baseType: !2314, size: 4096, align: 128)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2291, line: 34, size: 4096, align: 128, elements: !2315)
!2315 = !{!2316, !2317, !2318, !2319, !2320, !2335, !2336, !2337, !2341, !2343, !2347}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2314, file: !2291, line: 35, baseType: !938, size: 16)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2314, file: !2291, line: 36, baseType: !938, size: 16, offset: 16)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2314, file: !2291, line: 37, baseType: !938, size: 16, offset: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2314, file: !2291, line: 38, baseType: !938, size: 16, offset: 48)
!2320 = !DIDerivedType(tag: DW_TAG_member, scope: !2314, file: !2291, line: 39, baseType: !2321, size: 128, offset: 64)
!2321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2314, file: !2291, line: 39, size: 128, elements: !2322)
!2322 = !{!2323, !2328}
!2323 = !DIDerivedType(tag: DW_TAG_member, scope: !2321, file: !2291, line: 40, baseType: !2324, size: 128)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2321, file: !2291, line: 40, size: 128, elements: !2325)
!2325 = !{!2326, !2327}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2324, file: !2291, line: 41, baseType: !503, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2324, file: !2291, line: 42, baseType: !503, size: 64, offset: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, scope: !2321, file: !2291, line: 44, baseType: !2329, size: 128)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2321, file: !2291, line: 44, size: 128, elements: !2330)
!2330 = !{!2331, !2332, !2333, !2334}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2329, file: !2291, line: 45, baseType: !497, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2329, file: !2291, line: 46, baseType: !497, size: 32, offset: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2329, file: !2291, line: 47, baseType: !497, size: 32, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2329, file: !2291, line: 48, baseType: !497, size: 32, offset: 96)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2314, file: !2291, line: 51, baseType: !497, size: 32, offset: 192)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2314, file: !2291, line: 52, baseType: !497, size: 32, offset: 224)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2314, file: !2291, line: 55, baseType: !2338, size: 1024, offset: 256)
!2338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !497, size: 1024, elements: !2339)
!2339 = !{!2340}
!2340 = !DISubrange(count: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2314, file: !2291, line: 58, baseType: !2342, size: 2048, offset: 1280)
!2342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !497, size: 2048, elements: !364)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2314, file: !2291, line: 60, baseType: !2344, size: 384, offset: 3328)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !497, size: 384, elements: !2345)
!2345 = !{!2346}
!2346 = !DISubrange(count: 12)
!2347 = !DIDerivedType(tag: DW_TAG_member, scope: !2314, file: !2291, line: 62, baseType: !2348, size: 384, offset: 3712)
!2348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2314, file: !2291, line: 62, size: 384, elements: !2349)
!2349 = !{!2350, !2351}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2348, file: !2291, line: 63, baseType: !2344, size: 384)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2348, file: !2291, line: 64, baseType: !2344, size: 384)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2296, file: !2291, line: 307, baseType: !2353, size: 1088)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2291, line: 79, size: 1088, elements: !2354)
!2354 = !{!2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2401}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2353, file: !2291, line: 80, baseType: !497, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2353, file: !2291, line: 81, baseType: !497, size: 32, offset: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2353, file: !2291, line: 82, baseType: !497, size: 32, offset: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2353, file: !2291, line: 83, baseType: !497, size: 32, offset: 96)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2353, file: !2291, line: 84, baseType: !497, size: 32, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2353, file: !2291, line: 85, baseType: !497, size: 32, offset: 160)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2353, file: !2291, line: 86, baseType: !497, size: 32, offset: 192)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2353, file: !2291, line: 88, baseType: !2309, size: 640, offset: 224)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2353, file: !2291, line: 89, baseType: !1465, size: 8, offset: 864)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2353, file: !2291, line: 90, baseType: !1465, size: 8, offset: 872)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2353, file: !2291, line: 91, baseType: !1465, size: 8, offset: 880)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2353, file: !2291, line: 92, baseType: !1465, size: 8, offset: 888)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2353, file: !2291, line: 93, baseType: !1465, size: 8, offset: 896)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2353, file: !2291, line: 94, baseType: !1465, size: 8, offset: 904)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2353, file: !2291, line: 95, baseType: !2370, size: 64, offset: 960)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2372, line: 11, size: 128, elements: !2373)
!2372 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2373 = !{!2374, !2375}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2371, file: !2372, line: 12, baseType: !226, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2371, file: !2372, line: 13, baseType: !2376, size: 64, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2378, line: 56, size: 1344, elements: !2379)
!2378 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2379 = !{!2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2377, file: !2378, line: 61, baseType: !288, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2377, file: !2378, line: 62, baseType: !288, size: 64, offset: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2377, file: !2378, line: 63, baseType: !288, size: 64, offset: 128)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2377, file: !2378, line: 64, baseType: !288, size: 64, offset: 192)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2377, file: !2378, line: 65, baseType: !288, size: 64, offset: 256)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2377, file: !2378, line: 66, baseType: !288, size: 64, offset: 320)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2377, file: !2378, line: 68, baseType: !288, size: 64, offset: 384)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2377, file: !2378, line: 69, baseType: !288, size: 64, offset: 448)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2377, file: !2378, line: 70, baseType: !288, size: 64, offset: 512)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2377, file: !2378, line: 71, baseType: !288, size: 64, offset: 576)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2377, file: !2378, line: 72, baseType: !288, size: 64, offset: 640)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2377, file: !2378, line: 73, baseType: !288, size: 64, offset: 704)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2377, file: !2378, line: 74, baseType: !288, size: 64, offset: 768)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2377, file: !2378, line: 75, baseType: !288, size: 64, offset: 832)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2377, file: !2378, line: 76, baseType: !288, size: 64, offset: 896)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2377, file: !2378, line: 81, baseType: !288, size: 64, offset: 960)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2377, file: !2378, line: 83, baseType: !288, size: 64, offset: 1024)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2377, file: !2378, line: 84, baseType: !288, size: 64, offset: 1088)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2377, file: !2378, line: 85, baseType: !288, size: 64, offset: 1152)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2377, file: !2378, line: 86, baseType: !288, size: 64, offset: 1216)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2377, file: !2378, line: 87, baseType: !288, size: 64, offset: 1280)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2353, file: !2291, line: 96, baseType: !497, size: 32, offset: 1024)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2296, file: !2291, line: 308, baseType: !2403, size: 4608, align: 512)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2291, line: 289, size: 4608, align: 512, elements: !2404)
!2404 = !{!2405, !2406, !2413}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2403, file: !2291, line: 290, baseType: !2314, size: 4096, align: 128)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2403, file: !2291, line: 291, baseType: !2407, size: 512, offset: 4096)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2291, line: 268, size: 512, elements: !2408)
!2408 = !{!2409, !2410, !2411}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2407, file: !2291, line: 269, baseType: !503, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2407, file: !2291, line: 270, baseType: !503, size: 64, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2407, file: !2291, line: 271, baseType: !2412, size: 384, offset: 128)
!2412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !503, size: 384, elements: !1735)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2403, file: !2291, line: 292, baseType: !2414, offset: 4608)
!2414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1465, elements: !1833)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2296, file: !2291, line: 309, baseType: !2416, size: 32768)
!2416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1465, size: 32768, elements: !2417)
!2417 = !{!2418}
!2418 = !DISubrange(count: 4096)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1332, file: !806, line: 378, baseType: !2420, size: 64, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1328, file: !806, line: 384, baseType: !1612, size: 192, offset: 192)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1097, file: !806, line: 500, baseType: !318, offset: 6656)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1097, file: !806, line: 501, baseType: !2424, size: 64, offset: 6656)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !806, line: 387, flags: DIFlagFwdDecl)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1097, file: !806, line: 516, baseType: !1823, size: 64, offset: 6720)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1097, file: !806, line: 519, baseType: !434, size: 64, offset: 6784)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1097, file: !806, line: 521, baseType: !2429, size: 64, offset: 6848)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !806, line: 521, flags: DIFlagFwdDecl)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1097, file: !806, line: 545, baseType: !244, size: 32, offset: 6912)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1097, file: !806, line: 548, baseType: !267, size: 8, offset: 6944)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1097, file: !806, line: 550, baseType: !2434, offset: 6952)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2435, line: 142, elements: !332)
!2435 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1097, file: !806, line: 554, baseType: !2068, size: 256, offset: 6976)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1097, file: !806, line: 557, baseType: !497, size: 32, offset: 7232)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1094, file: !806, line: 565, baseType: !2439, offset: 7296)
!2439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !288, elements: !2440)
!2440 = !{!2441}
!2441 = !DISubrange(count: -1)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1090, file: !806, line: 151, baseType: !244, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1083, file: !806, line: 156, baseType: !318, offset: 256)
!2444 = !DIDerivedType(tag: DW_TAG_member, scope: !810, file: !806, line: 159, baseType: !2445, size: 128)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !810, file: !806, line: 159, size: 128, elements: !2446)
!2446 = !{!2447, !2511}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2445, file: !806, line: 161, baseType: !2448, size: 64)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !53, line: 110, size: 1152, elements: !2450)
!2450 = !{!2451, !2461, !2482, !2483, !2484, !2485, !2486, !2498, !2499, !2500}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2449, file: !53, line: 111, baseType: !2452, size: 384)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !53, line: 19, size: 384, elements: !2453)
!2453 = !{!2454, !2456, !2457, !2458, !2459, !2460}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2452, file: !53, line: 20, baseType: !2455, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2452, file: !53, line: 21, baseType: !2455, size: 64, offset: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2452, file: !53, line: 22, baseType: !2455, size: 64, offset: 128)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2452, file: !53, line: 23, baseType: !288, size: 64, offset: 192)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2452, file: !53, line: 24, baseType: !288, size: 64, offset: 256)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2452, file: !53, line: 25, baseType: !288, size: 64, offset: 320)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2449, file: !53, line: 112, baseType: !2462, size: 64, offset: 384)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2464, line: 105, size: 128, elements: !2465)
!2464 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2465 = !{!2466, !2467}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2463, file: !2464, line: 110, baseType: !288, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2463, file: !2464, line: 118, baseType: !2468, size: 64, offset: 64)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 64)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2464, line: 95, size: 448, elements: !2470)
!2470 = !{!2471, !2472, !2477, !2478, !2479, !2480, !2481}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2469, file: !2464, line: 96, baseType: !850, size: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2469, file: !2464, line: 97, baseType: !2473, size: 64, offset: 64)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2464, line: 60, baseType: !2475)
!2475 = !DISubroutineType(types: !2476)
!2476 = !{null, !2462}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2469, file: !2464, line: 98, baseType: !2473, size: 64, offset: 128)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2469, file: !2464, line: 99, baseType: !267, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2469, file: !2464, line: 100, baseType: !267, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2469, file: !2464, line: 101, baseType: !447, size: 128, align: 64, offset: 256)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2469, file: !2464, line: 102, baseType: !2462, size: 64, offset: 384)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2449, file: !53, line: 113, baseType: !2463, size: 128, offset: 448)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2449, file: !53, line: 114, baseType: !1612, size: 192, offset: 576)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2449, file: !53, line: 115, baseType: !52, size: 32, offset: 768)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2449, file: !53, line: 116, baseType: !7, size: 32, offset: 800)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2449, file: !53, line: 117, baseType: !2487, size: 64, offset: 832)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2489)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !53, line: 67, size: 256, elements: !2490)
!2490 = !{!2491, !2492, !2496, !2497}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2489, file: !53, line: 73, baseType: !919, size: 64)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2489, file: !53, line: 78, baseType: !2493, size: 64, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{null, !2448}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2489, file: !53, line: 83, baseType: !2493, size: 64, offset: 128)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2489, file: !53, line: 89, baseType: !1146, size: 64, offset: 192)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2449, file: !53, line: 118, baseType: !269, size: 64, offset: 896)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2449, file: !53, line: 119, baseType: !249, size: 32, offset: 960)
!2500 = !DIDerivedType(tag: DW_TAG_member, scope: !2449, file: !53, line: 120, baseType: !2501, size: 128, offset: 1024)
!2501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2449, file: !53, line: 120, size: 128, elements: !2502)
!2502 = !{!2503, !2509}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2501, file: !53, line: 121, baseType: !2504, size: 128)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2505, line: 6, size: 128, elements: !2506)
!2505 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2506 = !{!2507, !2508}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2504, file: !2505, line: 7, baseType: !503, size: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2504, file: !2505, line: 8, baseType: !503, size: 64, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2501, file: !53, line: 122, baseType: !2510)
!2510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2504, elements: !1833)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2445, file: !806, line: 162, baseType: !269, size: 64, offset: 64)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !810, file: !806, line: 176, baseType: !447, size: 128, align: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, scope: !805, file: !806, line: 179, baseType: !2514, size: 32, offset: 384)
!2514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !805, file: !806, line: 179, size: 32, elements: !2515)
!2515 = !{!2516, !2517, !2518, !2519}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2514, file: !806, line: 184, baseType: !244, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2514, file: !806, line: 192, baseType: !7, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2514, file: !806, line: 194, baseType: !7, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2514, file: !806, line: 195, baseType: !249, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !805, file: !806, line: 199, baseType: !244, size: 32, offset: 416)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !740, file: !66, line: 1964, baseType: !2522, size: 64, offset: 1344)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!226, !679, !2525}
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 64)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2527, line: 12, size: 256, elements: !2528)
!2527 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2528 = !{!2529, !2530, !2531, !2532, !2533}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2526, file: !2527, line: 13, baseType: !826, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2526, file: !2527, line: 16, baseType: !249, size: 32, offset: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2526, file: !2527, line: 23, baseType: !288, size: 64, offset: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2526, file: !2527, line: 30, baseType: !288, size: 64, offset: 128)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2526, file: !2527, line: 33, baseType: !2534, size: 64, offset: 192)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!2535 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !806, line: 27, flags: DIFlagFwdDecl)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !740, file: !66, line: 1966, baseType: !2522, size: 64, offset: 1408)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !680, file: !66, line: 1424, baseType: !2538, size: 64, offset: 448)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2540)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !60, line: 322, size: 704, elements: !2541)
!2541 = !{!2542, !2588, !2592, !2596, !2597, !2598, !2599, !2600, !2605, !2610, !2614}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2540, file: !60, line: 323, baseType: !2543, size: 64)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!249, !2546}
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !60, line: 294, size: 1600, elements: !2548)
!2548 = !{!2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2573, !2574, !2575}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2547, file: !60, line: 295, baseType: !722, size: 128)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2547, file: !60, line: 296, baseType: !253, size: 128, offset: 128)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2547, file: !60, line: 297, baseType: !253, size: 128, offset: 256)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2547, file: !60, line: 298, baseType: !253, size: 128, offset: 384)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2547, file: !60, line: 299, baseType: !1292, size: 192, offset: 512)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2547, file: !60, line: 300, baseType: !318, offset: 704)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2547, file: !60, line: 301, baseType: !244, size: 32, offset: 704)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2547, file: !60, line: 302, baseType: !679, size: 64, offset: 768)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2547, file: !60, line: 303, baseType: !2558, size: 64, offset: 832)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !60, line: 68, size: 64, elements: !2559)
!2559 = !{!2560, !2572}
!2560 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !60, line: 69, baseType: !2561, size: 32)
!2561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !60, line: 69, size: 32, elements: !2562)
!2562 = !{!2563, !2564, !2565}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2561, file: !60, line: 70, baseType: !517, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2561, file: !60, line: 71, baseType: !525, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2561, file: !60, line: 72, baseType: !2566, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2567, line: 24, baseType: !2568)
!2567 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2567, line: 22, size: 32, elements: !2569)
!2569 = !{!2570}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2568, file: !2567, line: 23, baseType: !2571, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2567, line: 20, baseType: !523)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2558, file: !60, line: 74, baseType: !59, size: 32, offset: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2547, file: !60, line: 304, baseType: !611, size: 64, offset: 896)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2547, file: !60, line: 305, baseType: !288, size: 64, offset: 960)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2547, file: !60, line: 306, baseType: !2576, size: 576, offset: 1024)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !60, line: 205, size: 576, elements: !2577)
!2577 = !{!2578, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2576, file: !60, line: 206, baseType: !2579, size: 64)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !60, line: 66, baseType: !613)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2576, file: !60, line: 207, baseType: !2579, size: 64, offset: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2576, file: !60, line: 208, baseType: !2579, size: 64, offset: 128)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2576, file: !60, line: 209, baseType: !2579, size: 64, offset: 192)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2576, file: !60, line: 210, baseType: !2579, size: 64, offset: 256)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2576, file: !60, line: 211, baseType: !2579, size: 64, offset: 320)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2576, file: !60, line: 212, baseType: !2579, size: 64, offset: 384)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2576, file: !60, line: 213, baseType: !619, size: 64, offset: 448)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2576, file: !60, line: 214, baseType: !619, size: 64, offset: 512)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2540, file: !60, line: 324, baseType: !2589, size: 64, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!2546, !679, !249}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2540, file: !60, line: 325, baseType: !2593, size: 64, offset: 128)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64)
!2594 = !DISubroutineType(types: !2595)
!2595 = !{null, !2546}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2540, file: !60, line: 326, baseType: !2543, size: 64, offset: 192)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2540, file: !60, line: 327, baseType: !2543, size: 64, offset: 256)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2540, file: !60, line: 328, baseType: !2543, size: 64, offset: 320)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2540, file: !60, line: 329, baseType: !768, size: 64, offset: 384)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2540, file: !60, line: 332, baseType: !2601, size: 64, offset: 448)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = !DISubroutineType(types: !2603)
!2603 = !{!2604, !511}
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2540, file: !60, line: 333, baseType: !2606, size: 64, offset: 512)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = !DISubroutineType(types: !2608)
!2608 = !{!249, !511, !2609}
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2540, file: !60, line: 335, baseType: !2611, size: 64, offset: 576)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{!249, !511, !2604}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2540, file: !60, line: 337, baseType: !2615, size: 64, offset: 640)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = !DISubroutineType(types: !2617)
!2617 = !{!249, !679, !2618}
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !680, file: !66, line: 1425, baseType: !2620, size: 64, offset: 512)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2622)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !60, line: 428, size: 704, elements: !2623)
!2623 = !{!2624, !2628, !2629, !2633, !2634, !2635, !2650, !2673, !2677, !2678, !2701}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2622, file: !60, line: 429, baseType: !2625, size: 64)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!249, !679, !249, !249, !629}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2622, file: !60, line: 430, baseType: !768, size: 64, offset: 64)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2622, file: !60, line: 431, baseType: !2630, size: 64, offset: 128)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!249, !679, !7}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2622, file: !60, line: 432, baseType: !2630, size: 64, offset: 192)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2622, file: !60, line: 433, baseType: !768, size: 64, offset: 256)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2622, file: !60, line: 434, baseType: !2636, size: 64, offset: 320)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!249, !679, !249, !2639}
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !60, line: 415, size: 256, elements: !2641)
!2641 = !{!2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2640, file: !60, line: 416, baseType: !249, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2640, file: !60, line: 417, baseType: !7, size: 32, offset: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2640, file: !60, line: 418, baseType: !7, size: 32, offset: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2640, file: !60, line: 420, baseType: !7, size: 32, offset: 96)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2640, file: !60, line: 421, baseType: !7, size: 32, offset: 128)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2640, file: !60, line: 422, baseType: !7, size: 32, offset: 160)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2640, file: !60, line: 423, baseType: !7, size: 32, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2640, file: !60, line: 424, baseType: !7, size: 32, offset: 224)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2622, file: !60, line: 435, baseType: !2651, size: 64, offset: 384)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{!249, !679, !2558, !2654}
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !60, line: 343, size: 960, elements: !2656)
!2656 = !{!2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2655, file: !60, line: 344, baseType: !249, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2655, file: !60, line: 345, baseType: !503, size: 64, offset: 64)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2655, file: !60, line: 346, baseType: !503, size: 64, offset: 128)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2655, file: !60, line: 347, baseType: !503, size: 64, offset: 192)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2655, file: !60, line: 348, baseType: !503, size: 64, offset: 256)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2655, file: !60, line: 349, baseType: !503, size: 64, offset: 320)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2655, file: !60, line: 350, baseType: !503, size: 64, offset: 384)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2655, file: !60, line: 351, baseType: !856, size: 64, offset: 448)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2655, file: !60, line: 353, baseType: !856, size: 64, offset: 512)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2655, file: !60, line: 354, baseType: !249, size: 32, offset: 576)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2655, file: !60, line: 355, baseType: !249, size: 32, offset: 608)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2655, file: !60, line: 356, baseType: !503, size: 64, offset: 640)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2655, file: !60, line: 357, baseType: !503, size: 64, offset: 704)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2655, file: !60, line: 358, baseType: !503, size: 64, offset: 768)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2655, file: !60, line: 359, baseType: !856, size: 64, offset: 832)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2655, file: !60, line: 360, baseType: !249, size: 32, offset: 896)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2622, file: !60, line: 436, baseType: !2674, size: 64, offset: 448)
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 64)
!2675 = !DISubroutineType(types: !2676)
!2676 = !{!249, !679, !2618, !2654}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2622, file: !60, line: 438, baseType: !2651, size: 64, offset: 512)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2622, file: !60, line: 439, baseType: !2679, size: 64, offset: 576)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!249, !679, !2682}
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 64)
!2683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !60, line: 409, size: 1408, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2683, file: !60, line: 410, baseType: !7, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2683, file: !60, line: 411, baseType: !2687, size: 1344, offset: 64)
!2687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2688, size: 1344, elements: !360)
!2688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !60, line: 395, size: 448, elements: !2689)
!2689 = !{!2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2700}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2688, file: !60, line: 396, baseType: !7, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2688, file: !60, line: 397, baseType: !7, size: 32, offset: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2688, file: !60, line: 399, baseType: !7, size: 32, offset: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2688, file: !60, line: 400, baseType: !7, size: 32, offset: 96)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2688, file: !60, line: 401, baseType: !7, size: 32, offset: 128)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2688, file: !60, line: 402, baseType: !7, size: 32, offset: 160)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2688, file: !60, line: 403, baseType: !7, size: 32, offset: 192)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2688, file: !60, line: 404, baseType: !505, size: 64, offset: 256)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2688, file: !60, line: 405, baseType: !2699, size: 64, offset: 320)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !245, line: 126, baseType: !503)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2688, file: !60, line: 406, baseType: !2699, size: 64, offset: 384)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2622, file: !60, line: 440, baseType: !2630, size: 64, offset: 640)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !680, file: !66, line: 1426, baseType: !2703, size: 64, offset: 576)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2705)
!2705 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !66, line: 49, flags: DIFlagFwdDecl)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !680, file: !66, line: 1427, baseType: !288, size: 64, offset: 640)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !680, file: !66, line: 1428, baseType: !288, size: 64, offset: 704)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !680, file: !66, line: 1429, baseType: !288, size: 64, offset: 768)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !680, file: !66, line: 1430, baseType: !464, size: 64, offset: 832)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !680, file: !66, line: 1431, baseType: !846, size: 256, offset: 896)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !680, file: !66, line: 1432, baseType: !249, size: 32, offset: 1152)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !680, file: !66, line: 1433, baseType: !244, size: 32, offset: 1184)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !680, file: !66, line: 1437, baseType: !2714, size: 64, offset: 1216)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 64)
!2716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2717)
!2717 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !66, line: 1437, flags: DIFlagFwdDecl)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !680, file: !66, line: 1449, baseType: !2719, size: 64, offset: 1280)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !480, line: 34, size: 64, elements: !2720)
!2720 = !{!2721}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2719, file: !480, line: 35, baseType: !483, size: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !680, file: !66, line: 1450, baseType: !253, size: 128, offset: 1344)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !680, file: !66, line: 1451, baseType: !2724, size: 64, offset: 1472)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !66, line: 699, flags: DIFlagFwdDecl)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !680, file: !66, line: 1452, baseType: !2034, size: 64, offset: 1536)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !680, file: !66, line: 1453, baseType: !2728, size: 64, offset: 1600)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !66, line: 1453, flags: DIFlagFwdDecl)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !680, file: !66, line: 1454, baseType: !722, size: 128, offset: 1664)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !680, file: !66, line: 1455, baseType: !7, size: 32, offset: 1792)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !680, file: !66, line: 1456, baseType: !2733, size: 2432, offset: 1856)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !60, line: 518, size: 2432, elements: !2734)
!2734 = !{!2735, !2736, !2737, !2739, !2771}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2733, file: !60, line: 519, baseType: !7, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2733, file: !60, line: 520, baseType: !846, size: 256, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2733, file: !60, line: 521, baseType: !2738, size: 192, offset: 320)
!2738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 192, elements: !360)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2733, file: !60, line: 522, baseType: !2740, size: 1728, offset: 512)
!2740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2741, size: 1728, elements: !360)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !60, line: 222, size: 576, elements: !2742)
!2742 = !{!2743, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2741, file: !60, line: 223, baseType: !2744, size: 64)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !60, line: 443, size: 256, elements: !2746)
!2746 = !{!2747, !2748, !2761, !2762}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2745, file: !60, line: 444, baseType: !249, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2745, file: !60, line: 445, baseType: !2749, size: 64, offset: 64)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2751)
!2751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !60, line: 310, size: 512, elements: !2752)
!2752 = !{!2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2751, file: !60, line: 311, baseType: !768, size: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2751, file: !60, line: 312, baseType: !768, size: 64, offset: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2751, file: !60, line: 313, baseType: !768, size: 64, offset: 128)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2751, file: !60, line: 314, baseType: !768, size: 64, offset: 192)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2751, file: !60, line: 315, baseType: !2543, size: 64, offset: 256)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2751, file: !60, line: 316, baseType: !2543, size: 64, offset: 320)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2751, file: !60, line: 317, baseType: !2543, size: 64, offset: 384)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2751, file: !60, line: 318, baseType: !2615, size: 64, offset: 448)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2745, file: !60, line: 446, baseType: !713, size: 64, offset: 128)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2745, file: !60, line: 447, baseType: !2744, size: 64, offset: 192)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2741, file: !60, line: 224, baseType: !249, size: 32, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2741, file: !60, line: 226, baseType: !253, size: 128, offset: 128)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2741, file: !60, line: 227, baseType: !288, size: 64, offset: 256)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2741, file: !60, line: 228, baseType: !7, size: 32, offset: 320)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2741, file: !60, line: 229, baseType: !7, size: 32, offset: 352)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2741, file: !60, line: 230, baseType: !2579, size: 64, offset: 384)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2741, file: !60, line: 231, baseType: !2579, size: 64, offset: 448)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2741, file: !60, line: 232, baseType: !269, size: 64, offset: 512)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2733, file: !60, line: 523, baseType: !2772, size: 192, offset: 2240)
!2772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2749, size: 192, elements: !360)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !680, file: !66, line: 1458, baseType: !2774, size: 2112, offset: 4288)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !66, line: 1410, size: 2112, elements: !2775)
!2775 = !{!2776, !2777, !2778}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2774, file: !66, line: 1411, baseType: !249, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2774, file: !66, line: 1412, baseType: !1591, size: 128, offset: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2774, file: !66, line: 1413, baseType: !2779, size: 1920, offset: 192)
!2779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2780, size: 1920, elements: !360)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2781, line: 12, size: 640, elements: !2782)
!2781 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2782 = !{!2783, !2791, !2793, !2798, !2799}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2780, file: !2781, line: 13, baseType: !2784, size: 320)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2785, line: 17, size: 320, elements: !2786)
!2785 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2786 = !{!2787, !2788, !2789, !2790}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2784, file: !2785, line: 18, baseType: !249, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2784, file: !2785, line: 19, baseType: !249, size: 32, offset: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2784, file: !2785, line: 20, baseType: !1591, size: 128, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2784, file: !2785, line: 22, baseType: !447, size: 128, align: 64, offset: 192)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2780, file: !2781, line: 14, baseType: !2792, size: 64, offset: 320)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2780, file: !2781, line: 15, baseType: !2794, size: 64, offset: 384)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2795, line: 16, size: 64, elements: !2796)
!2795 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2796 = !{!2797}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2794, file: !2795, line: 17, baseType: !1335, size: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2780, file: !2781, line: 16, baseType: !1591, size: 128, offset: 448)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2780, file: !2781, line: 17, baseType: !244, size: 32, offset: 576)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !680, file: !66, line: 1465, baseType: !269, size: 64, offset: 6400)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !680, file: !66, line: 1468, baseType: !497, size: 32, offset: 6464)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !680, file: !66, line: 1470, baseType: !619, size: 64, offset: 6528)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !680, file: !66, line: 1471, baseType: !619, size: 64, offset: 6592)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !680, file: !66, line: 1473, baseType: !499, size: 32, offset: 6656)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !680, file: !66, line: 1474, baseType: !2806, size: 64, offset: 6720)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !66, line: 603, flags: DIFlagFwdDecl)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !680, file: !66, line: 1477, baseType: !2809, size: 256, offset: 6784)
!2809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !2339)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !680, file: !66, line: 1478, baseType: !2811, size: 128, offset: 7040)
!2811 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2812, line: 18, baseType: !2813)
!2812 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2812, line: 16, size: 128, elements: !2814)
!2814 = !{!2815}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2813, file: !2812, line: 17, baseType: !2816, size: 128)
!2816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1466, size: 128, elements: !1845)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !680, file: !66, line: 1480, baseType: !7, size: 32, offset: 7168)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !680, file: !66, line: 1481, baseType: !2819, size: 32, offset: 7200)
!2819 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !245, line: 150, baseType: !7)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !680, file: !66, line: 1487, baseType: !1292, size: 192, offset: 7232)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !680, file: !66, line: 1493, baseType: !277, size: 64, offset: 7424)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !680, file: !66, line: 1495, baseType: !2823, size: 64, offset: 7488)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2825)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !462, line: 135, size: 1024, align: 512, elements: !2826)
!2826 = !{!2827, !2831, !2832, !2839, !2845, !2849, !2853, !2857, !2858, !2862, !2866, !2871, !2875}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2825, file: !462, line: 136, baseType: !2828, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = !DISubroutineType(types: !2830)
!2830 = !{!249, !464, !7}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2825, file: !462, line: 137, baseType: !2828, size: 64, offset: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2825, file: !462, line: 138, baseType: !2833, size: 64, offset: 128)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = !DISubroutineType(types: !2835)
!2835 = !{!249, !2836, !2838}
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !465)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2825, file: !462, line: 139, baseType: !2840, size: 64, offset: 192)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DISubroutineType(types: !2842)
!2842 = !{!249, !2836, !7, !277, !2843}
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !488)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2825, file: !462, line: 141, baseType: !2846, size: 64, offset: 256)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{!249, !2836}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2825, file: !462, line: 142, baseType: !2850, size: 64, offset: 320)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = !DISubroutineType(types: !2852)
!2852 = !{!249, !464}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2825, file: !462, line: 143, baseType: !2854, size: 64, offset: 384)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 64)
!2855 = !DISubroutineType(types: !2856)
!2856 = !{null, !464}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2825, file: !462, line: 144, baseType: !2854, size: 64, offset: 448)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2825, file: !462, line: 145, baseType: !2859, size: 64, offset: 512)
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 64)
!2860 = !DISubroutineType(types: !2861)
!2861 = !{null, !464, !511}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2825, file: !462, line: 146, baseType: !2863, size: 64, offset: 576)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{!359, !464, !359, !249}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2825, file: !462, line: 147, baseType: !2867, size: 64, offset: 640)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{!460, !2870}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2825, file: !462, line: 148, baseType: !2872, size: 64, offset: 704)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!249, !629, !267}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2825, file: !462, line: 149, baseType: !2876, size: 64, offset: 768)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!464, !464, !2879}
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !680, file: !66, line: 1500, baseType: !249, size: 32, offset: 7552)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !680, file: !66, line: 1502, baseType: !2883, size: 448, offset: 7616)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2527, line: 60, size: 448, elements: !2884)
!2884 = !{!2885, !2890, !2891, !2892, !2893, !2894, !2895}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2883, file: !2527, line: 61, baseType: !2886, size: 64)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{!288, !2889, !2525}
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2883, file: !2527, line: 63, baseType: !2886, size: 64, offset: 64)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2883, file: !2527, line: 66, baseType: !226, size: 64, offset: 128)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2883, file: !2527, line: 67, baseType: !249, size: 32, offset: 192)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2883, file: !2527, line: 68, baseType: !7, size: 32, offset: 224)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2883, file: !2527, line: 71, baseType: !253, size: 128, offset: 256)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2883, file: !2527, line: 77, baseType: !2896, size: 64, offset: 384)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !680, file: !66, line: 1505, baseType: !850, size: 64, offset: 8064)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !680, file: !66, line: 1508, baseType: !850, size: 64, offset: 8128)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !680, file: !66, line: 1511, baseType: !249, size: 32, offset: 8192)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !680, file: !66, line: 1514, baseType: !1028, size: 32, offset: 8224)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !680, file: !66, line: 1517, baseType: !2902, size: 64, offset: 8256)
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2903, size: 64)
!2903 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2069, line: 18, flags: DIFlagFwdDecl)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !680, file: !66, line: 1518, baseType: !718, size: 64, offset: 8320)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !680, file: !66, line: 1525, baseType: !1823, size: 64, offset: 8384)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !680, file: !66, line: 1532, baseType: !2907, size: 64, offset: 8448)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2908, line: 52, size: 64, elements: !2909)
!2908 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2909 = !{!2910}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2907, file: !2908, line: 53, baseType: !2911, size: 64)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2908, line: 40, size: 256, elements: !2913)
!2913 = !{!2914, !2915, !2920}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2912, file: !2908, line: 42, baseType: !318)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2912, file: !2908, line: 44, baseType: !2916, size: 192)
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2908, line: 28, size: 192, elements: !2917)
!2917 = !{!2918, !2919}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2916, file: !2908, line: 29, baseType: !253, size: 128)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2916, file: !2908, line: 31, baseType: !226, size: 64, offset: 128)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2912, file: !2908, line: 49, baseType: !226, size: 64, offset: 192)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !680, file: !66, line: 1533, baseType: !2907, size: 64, offset: 8512)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !680, file: !66, line: 1534, baseType: !447, size: 128, align: 64, offset: 8576)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !680, file: !66, line: 1535, baseType: !2068, size: 256, offset: 8704)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !680, file: !66, line: 1537, baseType: !1292, size: 192, offset: 8960)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !680, file: !66, line: 1542, baseType: !249, size: 32, offset: 9152)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !680, file: !66, line: 1545, baseType: !318, offset: 9184)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !680, file: !66, line: 1546, baseType: !253, size: 128, offset: 9216)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !680, file: !66, line: 1548, baseType: !318, offset: 9344)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !680, file: !66, line: 1549, baseType: !253, size: 128, offset: 9344)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !512, file: !66, line: 624, baseType: !817, size: 64, offset: 256)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !512, file: !66, line: 631, baseType: !288, size: 64, offset: 320)
!2932 = !DIDerivedType(tag: DW_TAG_member, scope: !512, file: !66, line: 639, baseType: !2933, size: 32, offset: 384)
!2933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !512, file: !66, line: 639, size: 32, elements: !2934)
!2934 = !{!2935, !2937}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2933, file: !66, line: 640, baseType: !2936, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2933, file: !66, line: 641, baseType: !7, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !512, file: !66, line: 643, baseType: !593, size: 32, offset: 416)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !512, file: !66, line: 644, baseType: !611, size: 64, offset: 448)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !512, file: !66, line: 645, baseType: !615, size: 128, offset: 512)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !512, file: !66, line: 646, baseType: !615, size: 128, offset: 640)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !512, file: !66, line: 647, baseType: !615, size: 128, offset: 768)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !512, file: !66, line: 648, baseType: !318, offset: 896)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !512, file: !66, line: 649, baseType: !293, size: 16, offset: 896)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !512, file: !66, line: 650, baseType: !1465, size: 8, offset: 912)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !512, file: !66, line: 651, baseType: !1465, size: 8, offset: 920)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !512, file: !66, line: 652, baseType: !2699, size: 64, offset: 960)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !512, file: !66, line: 659, baseType: !288, size: 64, offset: 1024)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !512, file: !66, line: 660, baseType: !846, size: 256, offset: 1088)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !512, file: !66, line: 662, baseType: !288, size: 64, offset: 1344)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !512, file: !66, line: 663, baseType: !288, size: 64, offset: 1408)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !512, file: !66, line: 665, baseType: !722, size: 128, offset: 1472)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !512, file: !66, line: 666, baseType: !253, size: 128, offset: 1600)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !512, file: !66, line: 675, baseType: !253, size: 128, offset: 1728)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !512, file: !66, line: 676, baseType: !253, size: 128, offset: 1856)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !512, file: !66, line: 677, baseType: !253, size: 128, offset: 1984)
!2957 = !DIDerivedType(tag: DW_TAG_member, scope: !512, file: !66, line: 678, baseType: !2958, size: 128, offset: 2112)
!2958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !512, file: !66, line: 678, size: 128, elements: !2959)
!2959 = !{!2960, !2961}
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2958, file: !66, line: 679, baseType: !718, size: 64)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2958, file: !66, line: 680, baseType: !447, size: 128, align: 64)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !512, file: !66, line: 682, baseType: !852, size: 64, offset: 2240)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !512, file: !66, line: 683, baseType: !852, size: 64, offset: 2304)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !512, file: !66, line: 684, baseType: !244, size: 32, offset: 2368)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !512, file: !66, line: 685, baseType: !244, size: 32, offset: 2400)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !512, file: !66, line: 686, baseType: !244, size: 32, offset: 2432)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !512, file: !66, line: 688, baseType: !244, size: 32, offset: 2464)
!2968 = !DIDerivedType(tag: DW_TAG_member, scope: !512, file: !66, line: 690, baseType: !2969, size: 64, offset: 2496)
!2969 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !512, file: !66, line: 690, size: 64, elements: !2970)
!2970 = !{!2971, !3194}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2969, file: !66, line: 691, baseType: !2972, size: 64)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !66, line: 1822, size: 2048, elements: !2975)
!2975 = !{!2976, !2977, !2981, !2986, !2990, !2991, !2992, !2996, !3009, !3010, !3018, !3022, !3023, !3027, !3028, !3032, !3037, !3038, !3042, !3046, !3154, !3158, !3159, !3163, !3164, !3168, !3172, !3177, !3181, !3185, !3189, !3193}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2974, file: !66, line: 1823, baseType: !713, size: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2974, file: !66, line: 1824, baseType: !2978, size: 64, offset: 64)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!611, !434, !611, !249}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2974, file: !66, line: 1825, baseType: !2982, size: 64, offset: 128)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DISubroutineType(types: !2984)
!2984 = !{!390, !434, !359, !404, !2985}
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2974, file: !66, line: 1826, baseType: !2987, size: 64, offset: 192)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{!390, !434, !277, !404, !2985}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2974, file: !66, line: 1827, baseType: !923, size: 64, offset: 256)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2974, file: !66, line: 1828, baseType: !923, size: 64, offset: 320)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2974, file: !66, line: 1829, baseType: !2993, size: 64, offset: 384)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!249, !926, !267}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2974, file: !66, line: 1830, baseType: !2997, size: 64, offset: 448)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = !DISubroutineType(types: !2999)
!2999 = !{!249, !434, !3000}
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !66, line: 1776, size: 128, elements: !3002)
!3002 = !{!3003, !3008}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3001, file: !66, line: 1777, baseType: !3004, size: 64)
!3004 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !66, line: 1773, baseType: !3005)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{!249, !3000, !277, !249, !611, !503, !7}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3001, file: !66, line: 1778, baseType: !611, size: 64, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2974, file: !66, line: 1831, baseType: !2997, size: 64, offset: 512)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2974, file: !66, line: 1832, baseType: !3011, size: 64, offset: 576)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 64)
!3012 = !DISubroutineType(types: !3013)
!3013 = !{!3014, !434, !3016}
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3015, line: 52, baseType: !7)
!3015 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !699, line: 27, flags: DIFlagFwdDecl)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2974, file: !66, line: 1833, baseType: !3019, size: 64, offset: 640)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 64)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{!226, !434, !7, !288}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2974, file: !66, line: 1834, baseType: !3019, size: 64, offset: 704)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2974, file: !66, line: 1835, baseType: !3024, size: 64, offset: 768)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{!249, !434, !1100}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2974, file: !66, line: 1836, baseType: !288, size: 64, offset: 832)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2974, file: !66, line: 1837, baseType: !3029, size: 64, offset: 896)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = !DISubroutineType(types: !3031)
!3031 = !{!249, !511, !434}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2974, file: !66, line: 1838, baseType: !3033, size: 64, offset: 960)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!249, !434, !3036}
!3036 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !66, line: 1007, baseType: !269)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2974, file: !66, line: 1839, baseType: !3029, size: 64, offset: 1024)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2974, file: !66, line: 1840, baseType: !3039, size: 64, offset: 1088)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = !DISubroutineType(types: !3041)
!3041 = !{!249, !434, !611, !611, !249}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2974, file: !66, line: 1841, baseType: !3043, size: 64, offset: 1152)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{!249, !249, !434, !249}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2974, file: !66, line: 1842, baseType: !3047, size: 64, offset: 1216)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!249, !434, !249, !3050}
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !66, line: 1062, size: 1664, elements: !3052)
!3052 = !{!3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3084, !3085, !3086, !3099, !3130}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3051, file: !66, line: 1063, baseType: !3050, size: 64)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3051, file: !66, line: 1064, baseType: !253, size: 128, offset: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3051, file: !66, line: 1065, baseType: !722, size: 128, offset: 192)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3051, file: !66, line: 1066, baseType: !253, size: 128, offset: 320)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3051, file: !66, line: 1069, baseType: !253, size: 128, offset: 448)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3051, file: !66, line: 1072, baseType: !3036, size: 64, offset: 576)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3051, file: !66, line: 1073, baseType: !7, size: 32, offset: 640)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3051, file: !66, line: 1074, baseType: !509, size: 8, offset: 672)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3051, file: !66, line: 1075, baseType: !7, size: 32, offset: 704)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3051, file: !66, line: 1076, baseType: !249, size: 32, offset: 736)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3051, file: !66, line: 1077, baseType: !1591, size: 128, offset: 768)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3051, file: !66, line: 1078, baseType: !434, size: 64, offset: 896)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3051, file: !66, line: 1079, baseType: !611, size: 64, offset: 960)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3051, file: !66, line: 1080, baseType: !611, size: 64, offset: 1024)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3051, file: !66, line: 1082, baseType: !3068, size: 64, offset: 1088)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 64)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !66, line: 1314, size: 320, elements: !3070)
!3070 = !{!3071, !3079, !3080, !3081, !3082, !3083}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3069, file: !66, line: 1315, baseType: !3072)
!3072 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3073, line: 20, baseType: !3074)
!3073 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3074 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3073, line: 11, elements: !3075)
!3075 = !{!3076}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3074, file: !3073, line: 12, baseType: !3077)
!3077 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !330, line: 33, baseType: !3078)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !330, line: 31, elements: !332)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3069, file: !66, line: 1316, baseType: !249, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3069, file: !66, line: 1317, baseType: !249, size: 32, offset: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3069, file: !66, line: 1318, baseType: !3068, size: 64, offset: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3069, file: !66, line: 1319, baseType: !434, size: 64, offset: 128)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3069, file: !66, line: 1320, baseType: !447, size: 128, align: 64, offset: 192)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3051, file: !66, line: 1084, baseType: !288, size: 64, offset: 1152)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3051, file: !66, line: 1085, baseType: !288, size: 64, offset: 1216)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3051, file: !66, line: 1087, baseType: !3087, size: 64, offset: 1280)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 64)
!3088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3089)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !66, line: 1011, size: 128, elements: !3090)
!3090 = !{!3091, !3095}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3089, file: !66, line: 1012, baseType: !3092, size: 64)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 64)
!3093 = !DISubroutineType(types: !3094)
!3094 = !{null, !3050, !3050}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3089, file: !66, line: 1013, baseType: !3096, size: 64, offset: 64)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = !DISubroutineType(types: !3098)
!3098 = !{null, !3050}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3051, file: !66, line: 1088, baseType: !3100, size: 64, offset: 1344)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3102)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !66, line: 1016, size: 512, elements: !3103)
!3103 = !{!3104, !3108, !3112, !3113, !3117, !3121, !3125, !3129}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3102, file: !66, line: 1017, baseType: !3105, size: 64)
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 64)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{!3036, !3036}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3102, file: !66, line: 1018, baseType: !3109, size: 64, offset: 64)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = !DISubroutineType(types: !3111)
!3111 = !{null, !3036}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3102, file: !66, line: 1019, baseType: !3096, size: 64, offset: 128)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3102, file: !66, line: 1020, baseType: !3114, size: 64, offset: 192)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{!249, !3050, !249}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3102, file: !66, line: 1021, baseType: !3118, size: 64, offset: 256)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = !DISubroutineType(types: !3120)
!3120 = !{!267, !3050}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3102, file: !66, line: 1022, baseType: !3122, size: 64, offset: 320)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = !DISubroutineType(types: !3124)
!3124 = !{!249, !3050, !249, !256}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3102, file: !66, line: 1023, baseType: !3126, size: 64, offset: 384)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{null, !3050, !900}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3102, file: !66, line: 1024, baseType: !3118, size: 64, offset: 448)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3051, file: !66, line: 1097, baseType: !3131, size: 256, offset: 1408)
!3131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3051, file: !66, line: 1089, size: 256, elements: !3132)
!3132 = !{!3133, !3142, !3148}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3131, file: !66, line: 1090, baseType: !3134, size: 256)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3135, line: 10, size: 256, elements: !3136)
!3135 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3136 = !{!3137, !3138, !3141}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3134, file: !3135, line: 11, baseType: !497, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3134, file: !3135, line: 12, baseType: !3139, size: 64, offset: 64)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3140 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3135, line: 5, flags: DIFlagFwdDecl)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3134, file: !3135, line: 13, baseType: !253, size: 128, offset: 128)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3131, file: !66, line: 1091, baseType: !3143, size: 64)
!3143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3135, line: 17, size: 64, elements: !3144)
!3144 = !{!3145}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3143, file: !3135, line: 18, baseType: !3146, size: 64)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3147 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3135, line: 16, flags: DIFlagFwdDecl)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3131, file: !66, line: 1096, baseType: !3149, size: 192)
!3149 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3131, file: !66, line: 1092, size: 192, elements: !3150)
!3150 = !{!3151, !3152, !3153}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3149, file: !66, line: 1093, baseType: !253, size: 128)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3149, file: !66, line: 1094, baseType: !249, size: 32, offset: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3149, file: !66, line: 1095, baseType: !7, size: 32, offset: 160)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2974, file: !66, line: 1843, baseType: !3155, size: 64, offset: 1280)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!390, !434, !804, !249, !404, !2985, !249}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2974, file: !66, line: 1844, baseType: !1220, size: 64, offset: 1344)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2974, file: !66, line: 1845, baseType: !3160, size: 64, offset: 1408)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{!249, !249}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2974, file: !66, line: 1846, baseType: !3047, size: 64, offset: 1472)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2974, file: !66, line: 1847, baseType: !3165, size: 64, offset: 1536)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{!390, !978, !434, !2985, !404, !7}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2974, file: !66, line: 1848, baseType: !3169, size: 64, offset: 1600)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{!390, !434, !2985, !978, !404, !7}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2974, file: !66, line: 1849, baseType: !3173, size: 64, offset: 1664)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{!249, !434, !226, !3176, !900}
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2974, file: !66, line: 1850, baseType: !3178, size: 64, offset: 1728)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{!226, !434, !249, !611, !611}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2974, file: !66, line: 1852, baseType: !3182, size: 64, offset: 1792)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{null, !794, !434}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2974, file: !66, line: 1856, baseType: !3186, size: 64, offset: 1856)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{!390, !434, !611, !434, !611, !404, !7}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2974, file: !66, line: 1858, baseType: !3190, size: 64, offset: 1920)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{!611, !434, !611, !434, !611, !611, !7}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2974, file: !66, line: 1861, baseType: !3039, size: 64, offset: 1984)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2969, file: !66, line: 692, baseType: !747, size: 64)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !512, file: !66, line: 694, baseType: !3196, size: 64, offset: 2560)
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3197, size: 64)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !66, line: 1100, size: 384, elements: !3198)
!3198 = !{!3199, !3200, !3201, !3202}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3197, file: !66, line: 1101, baseType: !318)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3197, file: !66, line: 1102, baseType: !253, size: 128)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3197, file: !66, line: 1103, baseType: !253, size: 128, offset: 128)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3197, file: !66, line: 1104, baseType: !253, size: 128, offset: 256)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !512, file: !66, line: 695, baseType: !818, size: 1216, align: 64, offset: 2624)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !512, file: !66, line: 696, baseType: !253, size: 128, offset: 3840)
!3205 = !DIDerivedType(tag: DW_TAG_member, scope: !512, file: !66, line: 697, baseType: !3206, size: 64, offset: 3968)
!3206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !512, file: !66, line: 697, size: 64, elements: !3207)
!3207 = !{!3208, !3209, !3210, !3213, !3214}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3206, file: !66, line: 698, baseType: !978, size: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3206, file: !66, line: 699, baseType: !2724, size: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3206, file: !66, line: 700, baseType: !3211, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 64)
!3212 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !66, line: 700, flags: DIFlagFwdDecl)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3206, file: !66, line: 701, baseType: !359, size: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3206, file: !66, line: 702, baseType: !7, size: 32)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !512, file: !66, line: 705, baseType: !499, size: 32, offset: 4032)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !512, file: !66, line: 708, baseType: !499, size: 32, offset: 4064)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !512, file: !66, line: 709, baseType: !2806, size: 64, offset: 4096)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !512, file: !66, line: 720, baseType: !269, size: 64, offset: 4160)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !465, file: !462, line: 98, baseType: !3220, size: 256, offset: 448)
!3220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 256, elements: !2339)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !465, file: !462, line: 101, baseType: !3222, size: 32, offset: 704)
!3222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3223, line: 25, size: 32, elements: !3224)
!3223 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3224 = !{!3225}
!3225 = !DIDerivedType(tag: DW_TAG_member, scope: !3222, file: !3223, line: 26, baseType: !3226, size: 32)
!3226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3222, file: !3223, line: 26, size: 32, elements: !3227)
!3227 = !{!3228}
!3228 = !DIDerivedType(tag: DW_TAG_member, scope: !3226, file: !3223, line: 30, baseType: !3229, size: 32)
!3229 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3226, file: !3223, line: 30, size: 32, elements: !3230)
!3230 = !{!3231, !3232}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3229, file: !3223, line: 31, baseType: !318)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3229, file: !3223, line: 32, baseType: !249, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !465, file: !462, line: 102, baseType: !2823, size: 64, offset: 768)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !465, file: !462, line: 103, baseType: !679, size: 64, offset: 832)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !465, file: !462, line: 104, baseType: !288, size: 64, offset: 896)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !465, file: !462, line: 105, baseType: !269, size: 64, offset: 960)
!3237 = !DIDerivedType(tag: DW_TAG_member, scope: !465, file: !462, line: 107, baseType: !3238, size: 128, offset: 1024)
!3238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !465, file: !462, line: 107, size: 128, elements: !3239)
!3239 = !{!3240, !3241}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3238, file: !462, line: 108, baseType: !253, size: 128)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3238, file: !462, line: 109, baseType: !3242, size: 64)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !465, file: !462, line: 111, baseType: !253, size: 128, offset: 1152)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !465, file: !462, line: 112, baseType: !253, size: 128, offset: 1280)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !465, file: !462, line: 120, baseType: !3246, size: 128, offset: 1408)
!3246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !465, file: !462, line: 116, size: 128, elements: !3247)
!3247 = !{!3248, !3249, !3250}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3246, file: !462, line: 117, baseType: !722, size: 128)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3246, file: !462, line: 118, baseType: !479, size: 128)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3246, file: !462, line: 119, baseType: !447, size: 128, align: 64)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !435, file: !66, line: 922, baseType: !511, size: 64, offset: 256)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !435, file: !66, line: 923, baseType: !2972, size: 64, offset: 320)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !435, file: !66, line: 929, baseType: !318, offset: 384)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !435, file: !66, line: 930, baseType: !65, size: 32, offset: 384)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !435, file: !66, line: 931, baseType: !850, size: 64, offset: 448)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !435, file: !66, line: 932, baseType: !7, size: 32, offset: 512)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !435, file: !66, line: 933, baseType: !2819, size: 32, offset: 544)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !435, file: !66, line: 934, baseType: !1292, size: 192, offset: 576)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !435, file: !66, line: 935, baseType: !611, size: 64, offset: 768)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !435, file: !66, line: 936, baseType: !3261, size: 192, offset: 832)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !66, line: 885, size: 192, elements: !3262)
!3262 = !{!3263, !3264, !3265, !3266, !3267, !3268}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3261, file: !66, line: 886, baseType: !3072)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3261, file: !66, line: 887, baseType: !1581, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3261, file: !66, line: 888, baseType: !74, size: 32, offset: 64)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3261, file: !66, line: 889, baseType: !517, size: 32, offset: 96)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3261, file: !66, line: 889, baseType: !517, size: 32, offset: 128)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3261, file: !66, line: 890, baseType: !249, size: 32, offset: 160)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !435, file: !66, line: 937, baseType: !1657, size: 64, offset: 1024)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !435, file: !66, line: 938, baseType: !3271, size: 256, offset: 1088)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !66, line: 896, size: 256, elements: !3272)
!3272 = !{!3273, !3274, !3275, !3276, !3277, !3278}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3271, file: !66, line: 897, baseType: !288, size: 64)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3271, file: !66, line: 898, baseType: !7, size: 32, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3271, file: !66, line: 899, baseType: !7, size: 32, offset: 96)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3271, file: !66, line: 902, baseType: !7, size: 32, offset: 128)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3271, file: !66, line: 903, baseType: !7, size: 32, offset: 160)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3271, file: !66, line: 904, baseType: !611, size: 64, offset: 192)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !435, file: !66, line: 940, baseType: !503, size: 64, offset: 1344)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !435, file: !66, line: 945, baseType: !269, size: 64, offset: 1408)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !435, file: !66, line: 949, baseType: !253, size: 128, offset: 1472)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !435, file: !66, line: 950, baseType: !253, size: 128, offset: 1600)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !435, file: !66, line: 952, baseType: !817, size: 64, offset: 1728)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !435, file: !66, line: 953, baseType: !1028, size: 32, offset: 1792)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !435, file: !66, line: 954, baseType: !1028, size: 32, offset: 1824)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !425, file: !384, line: 174, baseType: !431, size: 64, offset: 320)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !425, file: !384, line: 176, baseType: !3288, size: 64, offset: 384)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{!249, !434, !311, !424, !1100}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !413, file: !384, line: 90, baseType: !408, size: 64, offset: 192)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !413, file: !384, line: 91, baseType: !3293, size: 64, offset: 256)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !374, file: !306, line: 143, baseType: !3295, size: 64, offset: 256)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!3298, !311}
!3298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3299, size: 64)
!3299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3300)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !83, line: 39, size: 384, elements: !3301)
!3301 = !{!3302, !3303, !3307, !3311, !3317, !3321}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3300, file: !83, line: 40, baseType: !82, size: 32)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3300, file: !83, line: 41, baseType: !3304, size: 64, offset: 64)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 64)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{!267}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3300, file: !83, line: 42, baseType: !3308, size: 64, offset: 128)
!3308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3309, size: 64)
!3309 = !DISubroutineType(types: !3310)
!3310 = !{!269}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3300, file: !83, line: 43, baseType: !3312, size: 64, offset: 192)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!2236, !3315}
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !83, line: 19, flags: DIFlagFwdDecl)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3300, file: !83, line: 44, baseType: !3318, size: 64, offset: 256)
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 64)
!3319 = !DISubroutineType(types: !3320)
!3320 = !{!2236}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3300, file: !83, line: 45, baseType: !550, size: 64, offset: 320)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !374, file: !306, line: 144, baseType: !3323, size: 64, offset: 320)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{!2236, !311}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !374, file: !306, line: 145, baseType: !3327, size: 64, offset: 384)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null, !311, !3330, !3331}
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !305, file: !306, line: 70, baseType: !3333, size: 64, offset: 384)
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3334, size: 64)
!3334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !699, line: 123, size: 1024, elements: !3335)
!3335 = !{!3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3464, !3465, !3466, !3467, !3468}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3334, file: !699, line: 124, baseType: !244, size: 32)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3334, file: !699, line: 125, baseType: !244, size: 32, offset: 32)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3334, file: !699, line: 135, baseType: !3333, size: 64, offset: 64)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3334, file: !699, line: 136, baseType: !277, size: 64, offset: 128)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3334, file: !699, line: 138, baseType: !839, size: 192, align: 64, offset: 192)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3334, file: !699, line: 140, baseType: !2236, size: 64, offset: 384)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3334, file: !699, line: 141, baseType: !7, size: 32, offset: 448)
!3343 = !DIDerivedType(tag: DW_TAG_member, scope: !3334, file: !699, line: 142, baseType: !3344, size: 256, offset: 512)
!3344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3334, file: !699, line: 142, size: 256, elements: !3345)
!3345 = !{!3346, !3392, !3396}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3344, file: !699, line: 143, baseType: !3347, size: 192)
!3347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !699, line: 91, size: 192, elements: !3348)
!3348 = !{!3349, !3350, !3351}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3347, file: !699, line: 92, baseType: !288, size: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3347, file: !699, line: 94, baseType: !835, size: 64, offset: 64)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3347, file: !699, line: 100, baseType: !3352, size: 64, offset: 128)
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 64)
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !699, line: 180, size: 704, elements: !3354)
!3354 = !{!3355, !3356, !3357, !3364, !3365, !3366, !3390, !3391}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3353, file: !699, line: 182, baseType: !3333, size: 64)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3353, file: !699, line: 183, baseType: !7, size: 32, offset: 64)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3353, file: !699, line: 186, baseType: !3358, size: 192, offset: 128)
!3358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3359, line: 19, size: 192, elements: !3360)
!3359 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3360 = !{!3361, !3362, !3363}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3358, file: !3359, line: 20, baseType: !822, size: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3358, file: !3359, line: 21, baseType: !7, size: 32, offset: 128)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3358, file: !3359, line: 22, baseType: !7, size: 32, offset: 160)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3353, file: !699, line: 187, baseType: !497, size: 32, offset: 320)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3353, file: !699, line: 188, baseType: !497, size: 32, offset: 352)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3353, file: !699, line: 189, baseType: !3367, size: 64, offset: 384)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !699, line: 168, size: 320, elements: !3369)
!3369 = !{!3370, !3374, !3378, !3382, !3386}
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3368, file: !699, line: 169, baseType: !3371, size: 64)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = !DISubroutineType(types: !3373)
!3373 = !{!249, !794, !3352}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3368, file: !699, line: 171, baseType: !3375, size: 64, offset: 64)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{!249, !3333, !277, !399}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3368, file: !699, line: 173, baseType: !3379, size: 64, offset: 128)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DISubroutineType(types: !3381)
!3381 = !{!249, !3333}
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3368, file: !699, line: 174, baseType: !3383, size: 64, offset: 192)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DISubroutineType(types: !3385)
!3385 = !{!249, !3333, !3333, !277}
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3368, file: !699, line: 176, baseType: !3387, size: 64, offset: 256)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{!249, !794, !3333, !3352}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3353, file: !699, line: 192, baseType: !253, size: 128, offset: 448)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3353, file: !699, line: 194, baseType: !1591, size: 128, offset: 576)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3344, file: !699, line: 144, baseType: !3393, size: 64)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !699, line: 103, size: 64, elements: !3394)
!3394 = !{!3395}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3393, file: !699, line: 104, baseType: !3333, size: 64)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3344, file: !699, line: 145, baseType: !3397, size: 256)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !699, line: 107, size: 256, elements: !3398)
!3398 = !{!3399, !3459, !3462, !3463}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3397, file: !699, line: 108, baseType: !3400, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3402)
!3402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !699, line: 217, size: 768, elements: !3403)
!3403 = !{!3404, !3424, !3428, !3432, !3436, !3440, !3444, !3448, !3449, !3450, !3451, !3455}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3402, file: !699, line: 222, baseType: !3405, size: 64)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{!249, !3408}
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !699, line: 197, size: 1088, elements: !3410)
!3410 = !{!3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3409, file: !699, line: 199, baseType: !3333, size: 64)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3409, file: !699, line: 200, baseType: !434, size: 64, offset: 64)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3409, file: !699, line: 201, baseType: !794, size: 64, offset: 128)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3409, file: !699, line: 202, baseType: !269, size: 64, offset: 192)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3409, file: !699, line: 205, baseType: !1292, size: 192, offset: 256)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3409, file: !699, line: 206, baseType: !1292, size: 192, offset: 448)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3409, file: !699, line: 207, baseType: !249, size: 32, offset: 640)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3409, file: !699, line: 208, baseType: !253, size: 128, offset: 704)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3409, file: !699, line: 209, baseType: !359, size: 64, offset: 832)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3409, file: !699, line: 211, baseType: !404, size: 64, offset: 896)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3409, file: !699, line: 212, baseType: !267, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3409, file: !699, line: 213, baseType: !267, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3409, file: !699, line: 214, baseType: !1128, size: 64, offset: 1024)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3402, file: !699, line: 223, baseType: !3425, size: 64, offset: 64)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 64)
!3426 = !DISubroutineType(types: !3427)
!3427 = !{null, !3408}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3402, file: !699, line: 236, baseType: !3429, size: 64, offset: 128)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = !DISubroutineType(types: !3431)
!3431 = !{!249, !794, !269}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3402, file: !699, line: 238, baseType: !3433, size: 64, offset: 192)
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3434 = !DISubroutineType(types: !3435)
!3435 = !{!269, !794, !2985}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3402, file: !699, line: 239, baseType: !3437, size: 64, offset: 256)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{!269, !794, !269, !2985}
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3402, file: !699, line: 240, baseType: !3441, size: 64, offset: 320)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DISubroutineType(types: !3443)
!3443 = !{null, !794, !269}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3402, file: !699, line: 242, baseType: !3445, size: 64, offset: 384)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!390, !3408, !359, !404, !611}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3402, file: !699, line: 252, baseType: !404, size: 64, offset: 448)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3402, file: !699, line: 259, baseType: !267, size: 8, offset: 512)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3402, file: !699, line: 260, baseType: !3445, size: 64, offset: 576)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3402, file: !699, line: 263, baseType: !3452, size: 64, offset: 640)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 64)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!3014, !3408, !3016}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3402, file: !699, line: 266, baseType: !3456, size: 64, offset: 704)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!249, !3408, !1100}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3397, file: !699, line: 109, baseType: !3460, size: 64, offset: 64)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !699, line: 31, flags: DIFlagFwdDecl)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3397, file: !699, line: 110, baseType: !611, size: 64, offset: 128)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3397, file: !699, line: 111, baseType: !3333, size: 64, offset: 192)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3334, file: !699, line: 148, baseType: !269, size: 64, offset: 768)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3334, file: !699, line: 154, baseType: !503, size: 64, offset: 832)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3334, file: !699, line: 156, baseType: !293, size: 16, offset: 896)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3334, file: !699, line: 157, baseType: !399, size: 16, offset: 912)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3334, file: !699, line: 158, baseType: !3469, size: 64, offset: 960)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !699, line: 32, flags: DIFlagFwdDecl)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !305, file: !306, line: 71, baseType: !236, size: 32, offset: 448)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !305, file: !306, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !305, file: !306, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !305, file: !306, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !305, file: !306, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !305, file: !306, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !302, file: !95, line: 463, baseType: !301, size: 64, offset: 512)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !302, file: !95, line: 465, baseType: !3479, size: 64, offset: 576)
!3479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3480, size: 64)
!3480 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !95, line: 36, flags: DIFlagFwdDecl)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !302, file: !95, line: 467, baseType: !277, size: 64, offset: 640)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !302, file: !95, line: 468, baseType: !3483, size: 64, offset: 704)
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3484, size: 64)
!3484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3485)
!3485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !95, line: 87, size: 384, elements: !3486)
!3486 = !{!3487, !3488, !3489, !3493, !3498, !3502}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3485, file: !95, line: 88, baseType: !277, size: 64)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3485, file: !95, line: 89, baseType: !410, size: 64, offset: 64)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3485, file: !95, line: 90, baseType: !3490, size: 64, offset: 128)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{!249, !301, !354}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3485, file: !95, line: 91, baseType: !3494, size: 64, offset: 192)
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 64)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!359, !301, !3497, !3330, !3331}
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3485, file: !95, line: 93, baseType: !3499, size: 64, offset: 256)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{null, !301}
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3485, file: !95, line: 95, baseType: !3503, size: 64, offset: 320)
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3505)
!3505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !102, line: 278, size: 1472, elements: !3506)
!3506 = !{!3507, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3505, file: !102, line: 279, baseType: !3508, size: 64)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DISubroutineType(types: !3510)
!3510 = !{!249, !301}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3505, file: !102, line: 280, baseType: !3499, size: 64, offset: 64)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3505, file: !102, line: 281, baseType: !3508, size: 64, offset: 128)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3505, file: !102, line: 282, baseType: !3508, size: 64, offset: 192)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3505, file: !102, line: 283, baseType: !3508, size: 64, offset: 256)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3505, file: !102, line: 284, baseType: !3508, size: 64, offset: 320)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3505, file: !102, line: 285, baseType: !3508, size: 64, offset: 384)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3505, file: !102, line: 286, baseType: !3508, size: 64, offset: 448)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3505, file: !102, line: 287, baseType: !3508, size: 64, offset: 512)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3505, file: !102, line: 288, baseType: !3508, size: 64, offset: 576)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3505, file: !102, line: 289, baseType: !3508, size: 64, offset: 640)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3505, file: !102, line: 290, baseType: !3508, size: 64, offset: 704)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3505, file: !102, line: 291, baseType: !3508, size: 64, offset: 768)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3505, file: !102, line: 292, baseType: !3508, size: 64, offset: 832)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3505, file: !102, line: 293, baseType: !3508, size: 64, offset: 896)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3505, file: !102, line: 294, baseType: !3508, size: 64, offset: 960)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3505, file: !102, line: 295, baseType: !3508, size: 64, offset: 1024)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3505, file: !102, line: 296, baseType: !3508, size: 64, offset: 1088)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3505, file: !102, line: 297, baseType: !3508, size: 64, offset: 1152)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3505, file: !102, line: 298, baseType: !3508, size: 64, offset: 1216)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3505, file: !102, line: 299, baseType: !3508, size: 64, offset: 1280)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3505, file: !102, line: 300, baseType: !3508, size: 64, offset: 1344)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3505, file: !102, line: 301, baseType: !3508, size: 64, offset: 1408)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !302, file: !95, line: 470, baseType: !3534, size: 64, offset: 768)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3536, line: 82, size: 1408, elements: !3537)
!3536 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3537 = !{!3538, !3539, !3540, !3541, !3542, !3543, !3544, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3619, !3622, !3623}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3535, file: !3536, line: 83, baseType: !277, size: 64)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3535, file: !3536, line: 84, baseType: !277, size: 64, offset: 64)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3535, file: !3536, line: 85, baseType: !301, size: 64, offset: 128)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3535, file: !3536, line: 86, baseType: !410, size: 64, offset: 192)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3535, file: !3536, line: 87, baseType: !410, size: 64, offset: 256)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3535, file: !3536, line: 88, baseType: !410, size: 64, offset: 320)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3535, file: !3536, line: 90, baseType: !3545, size: 64, offset: 384)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!249, !301, !3548}
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !89, line: 95, size: 1152, elements: !3550)
!3550 = !{!3551, !3552, !3553, !3554, !3555, !3556, !3557, !3570, !3583, !3584, !3585, !3586, !3587, !3595, !3596, !3597, !3598, !3599, !3600}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3549, file: !89, line: 96, baseType: !277, size: 64)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3549, file: !89, line: 97, baseType: !3534, size: 64, offset: 64)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3549, file: !89, line: 99, baseType: !713, size: 64, offset: 128)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3549, file: !89, line: 100, baseType: !277, size: 64, offset: 192)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3549, file: !89, line: 102, baseType: !267, size: 8, offset: 256)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3549, file: !89, line: 103, baseType: !88, size: 32, offset: 288)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3549, file: !89, line: 105, baseType: !3558, size: 64, offset: 320)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3560)
!3560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3561, line: 262, size: 1600, elements: !3562)
!3561 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3562 = !{!3563, !3564, !3565, !3569}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3560, file: !3561, line: 263, baseType: !2809, size: 256)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3560, file: !3561, line: 264, baseType: !2809, size: 256, offset: 256)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3560, file: !3561, line: 265, baseType: !3566, size: 1024, offset: 512)
!3566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 1024, elements: !3567)
!3567 = !{!3568}
!3568 = !DISubrange(count: 128)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3560, file: !3561, line: 266, baseType: !2236, size: 64, offset: 1536)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3549, file: !89, line: 106, baseType: !3571, size: 64, offset: 384)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3573)
!3573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3561, line: 210, size: 256, elements: !3574)
!3574 = !{!3575, !3579, !3581, !3582}
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3573, file: !3561, line: 211, baseType: !3576, size: 72)
!3576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1466, size: 72, elements: !3577)
!3577 = !{!3578}
!3578 = !DISubrange(count: 9)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3573, file: !3561, line: 212, baseType: !3580, size: 64, offset: 128)
!3580 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3561, line: 14, baseType: !288)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3573, file: !3561, line: 213, baseType: !499, size: 32, offset: 192)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3573, file: !3561, line: 214, baseType: !499, size: 32, offset: 224)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3549, file: !89, line: 108, baseType: !3508, size: 64, offset: 448)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3549, file: !89, line: 109, baseType: !3499, size: 64, offset: 512)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3549, file: !89, line: 110, baseType: !3508, size: 64, offset: 576)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3549, file: !89, line: 111, baseType: !3499, size: 64, offset: 640)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3549, file: !89, line: 112, baseType: !3588, size: 64, offset: 704)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{!249, !301, !3591}
!3591 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !102, line: 52, baseType: !3592)
!3592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !102, line: 50, size: 32, elements: !3593)
!3593 = !{!3594}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3592, file: !102, line: 51, baseType: !249, size: 32)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3549, file: !89, line: 113, baseType: !3508, size: 64, offset: 768)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3549, file: !89, line: 114, baseType: !410, size: 64, offset: 832)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3549, file: !89, line: 115, baseType: !410, size: 64, offset: 896)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3549, file: !89, line: 117, baseType: !3503, size: 64, offset: 960)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3549, file: !89, line: 118, baseType: !3499, size: 64, offset: 1024)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3549, file: !89, line: 120, baseType: !3601, size: 64, offset: 1088)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !89, line: 120, flags: DIFlagFwdDecl)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3535, file: !3536, line: 91, baseType: !3490, size: 64, offset: 448)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3535, file: !3536, line: 92, baseType: !3508, size: 64, offset: 512)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3535, file: !3536, line: 93, baseType: !3499, size: 64, offset: 576)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3535, file: !3536, line: 94, baseType: !3508, size: 64, offset: 640)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3535, file: !3536, line: 95, baseType: !3499, size: 64, offset: 704)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3535, file: !3536, line: 97, baseType: !3508, size: 64, offset: 768)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3535, file: !3536, line: 98, baseType: !3508, size: 64, offset: 832)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3535, file: !3536, line: 100, baseType: !3588, size: 64, offset: 896)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3535, file: !3536, line: 101, baseType: !3508, size: 64, offset: 960)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3535, file: !3536, line: 103, baseType: !3508, size: 64, offset: 1024)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3535, file: !3536, line: 105, baseType: !3508, size: 64, offset: 1088)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3535, file: !3536, line: 107, baseType: !3503, size: 64, offset: 1152)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3535, file: !3536, line: 109, baseType: !3616, size: 64, offset: 1216)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3618)
!3618 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3536, line: 109, flags: DIFlagFwdDecl)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3535, file: !3536, line: 111, baseType: !3620, size: 64, offset: 1280)
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3621, size: 64)
!3621 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3536, line: 111, flags: DIFlagFwdDecl)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3535, file: !3536, line: 112, baseType: !728, offset: 1344)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3535, file: !3536, line: 114, baseType: !267, size: 8, offset: 1344)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !302, file: !95, line: 471, baseType: !3548, size: 64, offset: 832)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !302, file: !95, line: 473, baseType: !269, size: 64, offset: 896)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !302, file: !95, line: 475, baseType: !269, size: 64, offset: 960)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !302, file: !95, line: 480, baseType: !1292, size: 192, offset: 1024)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !302, file: !95, line: 484, baseType: !3629, size: 576, offset: 1216)
!3629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !95, line: 361, size: 576, elements: !3630)
!3630 = !{!3631, !3632, !3633, !3634, !3635, !3636}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3629, file: !95, line: 362, baseType: !253, size: 128)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3629, file: !95, line: 363, baseType: !253, size: 128, offset: 128)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3629, file: !95, line: 364, baseType: !253, size: 128, offset: 256)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3629, file: !95, line: 365, baseType: !253, size: 128, offset: 384)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3629, file: !95, line: 366, baseType: !267, size: 8, offset: 512)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3629, file: !95, line: 367, baseType: !94, size: 32, offset: 544)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !302, file: !95, line: 485, baseType: !3638, size: 2304, offset: 1792)
!3638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !102, line: 565, size: 2304, elements: !3639)
!3639 = !{!3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3735, !3739}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3638, file: !102, line: 566, baseType: !3591, size: 32)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3638, file: !102, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3638, file: !102, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3638, file: !102, line: 569, baseType: !267, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3638, file: !102, line: 570, baseType: !267, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3638, file: !102, line: 571, baseType: !267, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3638, file: !102, line: 572, baseType: !267, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3638, file: !102, line: 573, baseType: !267, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3638, file: !102, line: 574, baseType: !267, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3638, file: !102, line: 575, baseType: !267, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3638, file: !102, line: 576, baseType: !267, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3638, file: !102, line: 577, baseType: !497, size: 32, offset: 64)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3638, file: !102, line: 578, baseType: !318, offset: 96)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3638, file: !102, line: 580, baseType: !253, size: 128, offset: 128)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3638, file: !102, line: 581, baseType: !1612, size: 192, offset: 256)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3638, file: !102, line: 582, baseType: !3656, size: 64, offset: 448)
!3656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3657, size: 64)
!3657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3658, line: 43, size: 1472, elements: !3659)
!3658 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3659 = !{!3660, !3661, !3662, !3663, !3664, !3667, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692}
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3657, file: !3658, line: 44, baseType: !277, size: 64)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3657, file: !3658, line: 45, baseType: !249, size: 32, offset: 64)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3657, file: !3658, line: 46, baseType: !253, size: 128, offset: 128)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3657, file: !3658, line: 47, baseType: !318, offset: 256)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3657, file: !3658, line: 48, baseType: !3665, size: 64, offset: 256)
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3666, size: 64)
!3666 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !102, line: 533, flags: DIFlagFwdDecl)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3657, file: !3658, line: 49, baseType: !3668, size: 320, offset: 320)
!3668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3669, line: 11, size: 320, elements: !3670)
!3669 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3670 = !{!3671, !3672, !3673, !3678}
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3668, file: !3669, line: 16, baseType: !722, size: 128)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3668, file: !3669, line: 17, baseType: !288, size: 64, offset: 128)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3668, file: !3669, line: 18, baseType: !3674, size: 64, offset: 192)
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = !DISubroutineType(types: !3676)
!3676 = !{null, !3677}
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3668, size: 64)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3668, file: !3669, line: 19, baseType: !497, size: 32, offset: 256)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3657, file: !3658, line: 50, baseType: !288, size: 64, offset: 640)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3657, file: !3658, line: 51, baseType: !1413, size: 64, offset: 704)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3657, file: !3658, line: 52, baseType: !1413, size: 64, offset: 768)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3657, file: !3658, line: 53, baseType: !1413, size: 64, offset: 832)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3657, file: !3658, line: 54, baseType: !1413, size: 64, offset: 896)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3657, file: !3658, line: 55, baseType: !1413, size: 64, offset: 960)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3657, file: !3658, line: 56, baseType: !288, size: 64, offset: 1024)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3657, file: !3658, line: 57, baseType: !288, size: 64, offset: 1088)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3657, file: !3658, line: 58, baseType: !288, size: 64, offset: 1152)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3657, file: !3658, line: 59, baseType: !288, size: 64, offset: 1216)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3657, file: !3658, line: 60, baseType: !288, size: 64, offset: 1280)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3657, file: !3658, line: 61, baseType: !301, size: 64, offset: 1344)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3657, file: !3658, line: 62, baseType: !267, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3657, file: !3658, line: 63, baseType: !267, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3638, file: !102, line: 583, baseType: !267, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3638, file: !102, line: 584, baseType: !267, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3638, file: !102, line: 585, baseType: !267, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3638, file: !102, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3638, file: !102, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3638, file: !102, line: 592, baseType: !1405, size: 512, offset: 576)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3638, file: !102, line: 593, baseType: !503, size: 64, offset: 1088)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3638, file: !102, line: 594, baseType: !2068, size: 256, offset: 1152)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3638, file: !102, line: 595, baseType: !1591, size: 128, offset: 1408)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3638, file: !102, line: 596, baseType: !3665, size: 64, offset: 1536)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3638, file: !102, line: 597, baseType: !244, size: 32, offset: 1600)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3638, file: !102, line: 598, baseType: !244, size: 32, offset: 1632)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3638, file: !102, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3638, file: !102, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3638, file: !102, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3638, file: !102, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3638, file: !102, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3638, file: !102, line: 604, baseType: !267, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3638, file: !102, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3638, file: !102, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3638, file: !102, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3638, file: !102, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3638, file: !102, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3638, file: !102, line: 610, baseType: !7, size: 32, offset: 1696)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3638, file: !102, line: 611, baseType: !101, size: 32, offset: 1728)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3638, file: !102, line: 612, baseType: !109, size: 32, offset: 1760)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3638, file: !102, line: 613, baseType: !249, size: 32, offset: 1792)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3638, file: !102, line: 614, baseType: !249, size: 32, offset: 1824)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3638, file: !102, line: 615, baseType: !503, size: 64, offset: 1856)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3638, file: !102, line: 616, baseType: !503, size: 64, offset: 1920)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3638, file: !102, line: 617, baseType: !503, size: 64, offset: 1984)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3638, file: !102, line: 618, baseType: !503, size: 64, offset: 2048)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3638, file: !102, line: 620, baseType: !3726, size: 64, offset: 2112)
!3726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3727, size: 64)
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !102, line: 536, size: 256, elements: !3728)
!3728 = !{!3729, !3730, !3731, !3732}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3727, file: !102, line: 537, baseType: !318)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3727, file: !102, line: 538, baseType: !7, size: 32)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3727, file: !102, line: 540, baseType: !253, size: 128, offset: 64)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3727, file: !102, line: 543, baseType: !3733, size: 64, offset: 192)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !102, line: 534, flags: DIFlagFwdDecl)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3638, file: !102, line: 621, baseType: !3736, size: 64, offset: 2176)
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3737 = !DISubroutineType(types: !3738)
!3738 = !{null, !301, !1554}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3638, file: !102, line: 622, baseType: !3740, size: 64, offset: 2240)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !102, line: 622, flags: DIFlagFwdDecl)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !302, file: !95, line: 486, baseType: !3743, size: 64, offset: 4096)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !102, line: 642, size: 1792, elements: !3745)
!3745 = !{!3746, !3747, !3748, !3752, !3753, !3754}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3744, file: !102, line: 643, baseType: !3505, size: 1472)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3744, file: !102, line: 644, baseType: !3508, size: 64, offset: 1472)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3744, file: !102, line: 645, baseType: !3749, size: 64, offset: 1536)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{null, !301, !267}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3744, file: !102, line: 646, baseType: !3508, size: 64, offset: 1600)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3744, file: !102, line: 647, baseType: !3499, size: 64, offset: 1664)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3744, file: !102, line: 648, baseType: !3499, size: 64, offset: 1728)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !302, file: !95, line: 493, baseType: !3756, size: 64, offset: 4160)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !116, line: 162, size: 1088, elements: !3758)
!3758 = !{!3759, !3760, !3761, !3934, !3935, !3936, !3937, !3938, !3939, !3942, !3943, !3944, !3945, !3946, !3947, !3948}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3757, file: !116, line: 163, baseType: !253, size: 128)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3757, file: !116, line: 164, baseType: !277, size: 64, offset: 128)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3757, file: !116, line: 165, baseType: !3762, size: 64, offset: 192)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3764)
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !116, line: 105, size: 640, elements: !3765)
!3765 = !{!3766, !3884, !3895, !3900, !3904, !3911, !3915, !3919, !3926, !3930}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3764, file: !116, line: 106, baseType: !3767, size: 64)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DISubroutineType(types: !3769)
!3769 = !{!249, !3756, !3770, !115}
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3772, line: 51, size: 1344, elements: !3773)
!3772 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3773 = !{!3774, !3775, !3777, !3778, !3868, !3877, !3878, !3879, !3880, !3881, !3882, !3883}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3771, file: !3772, line: 52, baseType: !277, size: 64)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3771, file: !3772, line: 53, baseType: !3776, size: 32, offset: 64)
!3776 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3772, line: 28, baseType: !497)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3771, file: !3772, line: 54, baseType: !277, size: 64, offset: 128)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3771, file: !3772, line: 55, baseType: !3779, size: 192, offset: 192)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3780, line: 17, size: 192, elements: !3781)
!3780 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3781 = !{!3782, !3784, !3867}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3779, file: !3780, line: 18, baseType: !3783, size: 64)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3779, file: !3780, line: 19, baseType: !3785, size: 64, offset: 64)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3787)
!3787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3780, line: 110, size: 1152, elements: !3788)
!3788 = !{!3789, !3793, !3797, !3803, !3809, !3813, !3817, !3822, !3826, !3827, !3831, !3835, !3839, !3850, !3851, !3852, !3853, !3863}
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3787, file: !3780, line: 111, baseType: !3790, size: 64)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = !DISubroutineType(types: !3792)
!3792 = !{!3783, !3783}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3787, file: !3780, line: 112, baseType: !3794, size: 64, offset: 64)
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 64)
!3795 = !DISubroutineType(types: !3796)
!3796 = !{null, !3783}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3787, file: !3780, line: 113, baseType: !3798, size: 64, offset: 128)
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = !DISubroutineType(types: !3800)
!3800 = !{!267, !3801}
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 64)
!3802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3779)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3787, file: !3780, line: 114, baseType: !3804, size: 64, offset: 192)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!2236, !3801, !3807}
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3787, file: !3780, line: 116, baseType: !3810, size: 64, offset: 256)
!3810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3811, size: 64)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{!267, !3801, !277}
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3787, file: !3780, line: 118, baseType: !3814, size: 64, offset: 320)
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 64)
!3815 = !DISubroutineType(types: !3816)
!3816 = !{!249, !3801, !277, !7, !269, !404}
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3787, file: !3780, line: 123, baseType: !3818, size: 64, offset: 384)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!249, !3801, !277, !3821, !404}
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3787, file: !3780, line: 126, baseType: !3823, size: 64, offset: 448)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{!277, !3801}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3787, file: !3780, line: 127, baseType: !3823, size: 64, offset: 512)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3787, file: !3780, line: 128, baseType: !3828, size: 64, offset: 576)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!3783, !3801}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3787, file: !3780, line: 130, baseType: !3832, size: 64, offset: 640)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{!3783, !3801, !3783}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3787, file: !3780, line: 133, baseType: !3836, size: 64, offset: 704)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{!3783, !3801, !277}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3787, file: !3780, line: 135, baseType: !3840, size: 64, offset: 768)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!249, !3801, !277, !277, !7, !7, !3843}
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3780, line: 43, size: 640, elements: !3845)
!3845 = !{!3846, !3847, !3848}
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3844, file: !3780, line: 44, baseType: !3783, size: 64)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3844, file: !3780, line: 45, baseType: !7, size: 32, offset: 64)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3844, file: !3780, line: 46, baseType: !3849, size: 512, offset: 128)
!3849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !503, size: 512, elements: !1443)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3787, file: !3780, line: 140, baseType: !3832, size: 64, offset: 832)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3787, file: !3780, line: 143, baseType: !3828, size: 64, offset: 896)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3787, file: !3780, line: 145, baseType: !3790, size: 64, offset: 960)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3787, file: !3780, line: 146, baseType: !3854, size: 64, offset: 1024)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{!249, !3801, !3857}
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3780, line: 29, size: 128, elements: !3859)
!3859 = !{!3860, !3861, !3862}
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3858, file: !3780, line: 30, baseType: !7, size: 32)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3858, file: !3780, line: 31, baseType: !7, size: 32, offset: 32)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3858, file: !3780, line: 32, baseType: !3801, size: 64, offset: 64)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3787, file: !3780, line: 148, baseType: !3864, size: 64, offset: 1088)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{!249, !3801, !301}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3779, file: !3780, line: 20, baseType: !301, size: 64, offset: 128)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3771, file: !3772, line: 57, baseType: !3869, size: 64, offset: 384)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3772, line: 31, size: 704, elements: !3871)
!3871 = !{!3872, !3873, !3874, !3875, !3876}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3870, file: !3772, line: 32, baseType: !359, size: 64)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3870, file: !3772, line: 33, baseType: !249, size: 32, offset: 64)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3870, file: !3772, line: 34, baseType: !269, size: 64, offset: 128)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3870, file: !3772, line: 35, baseType: !3869, size: 64, offset: 192)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3870, file: !3772, line: 43, baseType: !425, size: 448, offset: 256)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3771, file: !3772, line: 58, baseType: !3869, size: 64, offset: 448)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3771, file: !3772, line: 59, baseType: !3770, size: 64, offset: 512)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3771, file: !3772, line: 60, baseType: !3770, size: 64, offset: 576)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3771, file: !3772, line: 61, baseType: !3770, size: 64, offset: 640)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3771, file: !3772, line: 63, baseType: !305, size: 512, offset: 704)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3771, file: !3772, line: 65, baseType: !288, size: 64, offset: 1216)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3771, file: !3772, line: 66, baseType: !269, size: 64, offset: 1280)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3764, file: !116, line: 108, baseType: !3885, size: 64, offset: 64)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DISubroutineType(types: !3887)
!3887 = !{!249, !3756, !3888, !115}
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !116, line: 63, size: 640, elements: !3890)
!3890 = !{!3891, !3892, !3893}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3889, file: !116, line: 64, baseType: !3783, size: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3889, file: !116, line: 65, baseType: !249, size: 32, offset: 64)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3889, file: !116, line: 66, baseType: !3894, size: 512, offset: 96)
!3894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !497, size: 512, elements: !1845)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3764, file: !116, line: 110, baseType: !3896, size: 64, offset: 128)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DISubroutineType(types: !3898)
!3898 = !{!249, !3756, !7, !3899}
!3899 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !245, line: 164, baseType: !288)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3764, file: !116, line: 111, baseType: !3901, size: 64, offset: 192)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DISubroutineType(types: !3903)
!3903 = !{null, !3756, !7}
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3764, file: !116, line: 112, baseType: !3905, size: 64, offset: 256)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = !DISubroutineType(types: !3907)
!3907 = !{!249, !3756, !3770, !3908, !7, !3910, !2792}
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3764, file: !116, line: 117, baseType: !3912, size: 64, offset: 320)
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{!249, !3756, !7, !7, !269}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3764, file: !116, line: 119, baseType: !3916, size: 64, offset: 384)
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 64)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{null, !3756, !7, !7}
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3764, file: !116, line: 121, baseType: !3920, size: 64, offset: 448)
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DISubroutineType(types: !3922)
!3922 = !{!249, !3756, !3923, !267}
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3925, line: 11, flags: DIFlagFwdDecl)
!3925 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3764, file: !116, line: 122, baseType: !3927, size: 64, offset: 512)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 64)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{null, !3756, !3923}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3764, file: !116, line: 123, baseType: !3931, size: 64, offset: 576)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3932, size: 64)
!3932 = !DISubroutineType(types: !3933)
!3933 = !{!249, !3756, !3888, !3910, !2792}
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3757, file: !116, line: 166, baseType: !269, size: 64, offset: 256)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3757, file: !116, line: 167, baseType: !7, size: 32, offset: 320)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3757, file: !116, line: 168, baseType: !7, size: 32, offset: 352)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3757, file: !116, line: 171, baseType: !3783, size: 64, offset: 384)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3757, file: !116, line: 172, baseType: !115, size: 32, offset: 448)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3757, file: !116, line: 173, baseType: !3940, size: 64, offset: 512)
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 64)
!3941 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !116, line: 134, flags: DIFlagFwdDecl)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3757, file: !116, line: 175, baseType: !3756, size: 64, offset: 576)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3757, file: !116, line: 182, baseType: !3899, size: 64, offset: 640)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3757, file: !116, line: 183, baseType: !7, size: 32, offset: 704)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3757, file: !116, line: 184, baseType: !7, size: 32, offset: 736)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3757, file: !116, line: 185, baseType: !822, size: 128, offset: 768)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3757, file: !116, line: 186, baseType: !1292, size: 192, offset: 896)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3757, file: !116, line: 187, baseType: !3949, offset: 1088)
!3949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2440)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !302, file: !95, line: 499, baseType: !253, size: 128, offset: 4224)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !302, file: !95, line: 502, baseType: !3952, size: 64, offset: 4352)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3954)
!3954 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !95, line: 502, flags: DIFlagFwdDecl)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !302, file: !95, line: 504, baseType: !3956, size: 64, offset: 4416)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !302, file: !95, line: 505, baseType: !503, size: 64, offset: 4480)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !302, file: !95, line: 510, baseType: !503, size: 64, offset: 4544)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !302, file: !95, line: 511, baseType: !3960, size: 64, offset: 4608)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3962)
!3962 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !95, line: 511, flags: DIFlagFwdDecl)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !302, file: !95, line: 513, baseType: !3964, size: 64, offset: 4672)
!3964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3965, size: 64)
!3965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !95, line: 288, size: 128, elements: !3966)
!3966 = !{!3967, !3968}
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3965, file: !95, line: 293, baseType: !7, size: 32)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3965, file: !95, line: 294, baseType: !288, size: 64, offset: 64)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !302, file: !95, line: 515, baseType: !253, size: 128, offset: 4736)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !302, file: !95, line: 526, baseType: !3971, offset: 4864)
!3971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3972, line: 5, elements: !332)
!3972 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !302, file: !95, line: 528, baseType: !3770, size: 64, offset: 4864)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !302, file: !95, line: 529, baseType: !3783, size: 64, offset: 4928)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !302, file: !95, line: 534, baseType: !593, size: 32, offset: 4992)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !302, file: !95, line: 535, baseType: !497, size: 32, offset: 5024)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !302, file: !95, line: 537, baseType: !318, offset: 5056)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !302, file: !95, line: 538, baseType: !253, size: 128, offset: 5056)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !302, file: !95, line: 540, baseType: !3980, size: 64, offset: 5184)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3982, line: 54, size: 960, elements: !3983)
!3982 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3983 = !{!3984, !3985, !3986, !3987, !3988, !3989, !3990, !3994, !3998, !3999, !4000, !4001, !4005, !4009, !4010}
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3981, file: !3982, line: 55, baseType: !277, size: 64)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3981, file: !3982, line: 56, baseType: !713, size: 64, offset: 64)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3981, file: !3982, line: 58, baseType: !410, size: 64, offset: 128)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3981, file: !3982, line: 59, baseType: !410, size: 64, offset: 192)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3981, file: !3982, line: 60, baseType: !311, size: 64, offset: 256)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3981, file: !3982, line: 62, baseType: !3490, size: 64, offset: 320)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3981, file: !3982, line: 63, baseType: !3991, size: 64, offset: 384)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{!359, !301, !3497}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3981, file: !3982, line: 65, baseType: !3995, size: 64, offset: 448)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{null, !3980}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3981, file: !3982, line: 66, baseType: !3499, size: 64, offset: 512)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3981, file: !3982, line: 68, baseType: !3508, size: 64, offset: 576)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3981, file: !3982, line: 70, baseType: !3298, size: 64, offset: 640)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3981, file: !3982, line: 71, baseType: !4002, size: 64, offset: 704)
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!2236, !301}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3981, file: !3982, line: 73, baseType: !4006, size: 64, offset: 768)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{null, !301, !3330, !3331}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3981, file: !3982, line: 75, baseType: !3503, size: 64, offset: 832)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3981, file: !3982, line: 77, baseType: !3620, size: 64, offset: 896)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !302, file: !95, line: 541, baseType: !410, size: 64, offset: 5248)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !302, file: !95, line: 543, baseType: !3499, size: 64, offset: 5312)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !302, file: !95, line: 544, baseType: !4014, size: 64, offset: 5376)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !95, line: 45, flags: DIFlagFwdDecl)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !302, file: !95, line: 545, baseType: !4017, size: 64, offset: 5440)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !95, line: 47, flags: DIFlagFwdDecl)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !302, file: !95, line: 547, baseType: !267, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !302, file: !95, line: 548, baseType: !267, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !302, file: !95, line: 549, baseType: !267, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !302, file: !95, line: 550, baseType: !267, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !233, file: !6, line: 863, baseType: !713, size: 64, offset: 960)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "chan_ida", scope: !233, file: !6, line: 864, baseType: !4025, size: 128, offset: 1024)
!4025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3359, line: 244, size: 128, elements: !4026)
!4026 = !{!4027}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4025, file: !3359, line: 245, baseType: !822, size: 128)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mutex", scope: !233, file: !6, line: 865, baseType: !1292, size: 192, offset: 1152)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !233, file: !6, line: 867, baseType: !497, size: 32, offset: 1344)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !233, file: !6, line: 868, baseType: !497, size: 32, offset: 1376)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !233, file: !6, line: 869, baseType: !497, size: 32, offset: 1408)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !233, file: !6, line: 870, baseType: !497, size: 32, offset: 1440)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !233, file: !6, line: 871, baseType: !497, size: 32, offset: 1472)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !233, file: !6, line: 872, baseType: !497, size: 32, offset: 1504)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !233, file: !6, line: 873, baseType: !267, size: 8, offset: 1536)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !233, file: !6, line: 874, baseType: !129, size: 32, offset: 1568)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "device_alloc_chan_resources", scope: !233, file: !6, line: 876, baseType: !4038, size: 64, offset: 1600)
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4039, size: 64)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!249, !228}
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "device_free_chan_resources", scope: !233, file: !6, line: 877, baseType: !4042, size: 64, offset: 1664)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{null, !228}
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memcpy", scope: !233, file: !6, line: 879, baseType: !4046, size: 64, offset: 1728)
!4046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4047, size: 64)
!4047 = !DISubroutineType(types: !4048)
!4048 = !{!4049, !228, !1039, !1039, !404, !288}
!4049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 64)
!4050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_async_tx_descriptor", file: !6, line: 598, size: 704, elements: !4051)
!4051 = !{!4052, !4054, !4055, !4056, !4057, !4061, !4065, !4067, !4078, !4079, !4092, !4093}
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !4050, file: !6, line: 599, baseType: !4053, size: 32)
!4053 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cookie_t", file: !6, line: 22, baseType: !1554)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4050, file: !6, line: 600, baseType: !134, size: 32, offset: 32)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !4050, file: !6, line: 601, baseType: !1039, size: 64, offset: 64)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4050, file: !6, line: 602, baseType: !228, size: 64, offset: 128)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "tx_submit", scope: !4050, file: !6, line: 603, baseType: !4058, size: 64, offset: 192)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{!4053, !4049}
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "desc_free", scope: !4050, file: !6, line: 604, baseType: !4062, size: 64, offset: 256)
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{!249, !4049}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4050, file: !6, line: 605, baseType: !4066, size: 64, offset: 320)
!4066 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback", file: !6, line: 531, baseType: !550)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "callback_result", scope: !4050, file: !6, line: 606, baseType: !4068, size: 64, offset: 384)
!4068 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback_result", file: !6, line: 545, baseType: !4069)
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{null, !269, !4072}
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4073, size: 64)
!4073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4074)
!4074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_result", file: !6, line: 540, size: 64, elements: !4075)
!4075 = !{!4076, !4077}
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4074, file: !6, line: 541, baseType: !146, size: 32)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !4074, file: !6, line: 542, baseType: !497, size: 32, offset: 32)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "callback_param", scope: !4050, file: !6, line: 607, baseType: !269, size: 64, offset: 448)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4050, file: !6, line: 608, baseType: !4080, size: 64, offset: 512)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_unmap_data", file: !6, line: 548, size: 256, elements: !4082)
!4082 = !{!4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "map_cnt", scope: !4081, file: !6, line: 552, baseType: !1465, size: 8)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "to_cnt", scope: !4081, file: !6, line: 554, baseType: !1465, size: 8, offset: 8)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "from_cnt", scope: !4081, file: !6, line: 555, baseType: !1465, size: 8, offset: 16)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "bidi_cnt", scope: !4081, file: !6, line: 556, baseType: !1465, size: 8, offset: 24)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4081, file: !6, line: 557, baseType: !301, size: 64, offset: 64)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4081, file: !6, line: 558, baseType: !236, size: 32, offset: 128)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4081, file: !6, line: 559, baseType: !404, size: 64, offset: 192)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4081, file: !6, line: 560, baseType: !4091, offset: 256)
!4091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, elements: !2440)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_mode", scope: !4050, file: !6, line: 609, baseType: !14, size: 32, offset: 576)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_ops", scope: !4050, file: !6, line: 610, baseType: !4094, size: 64, offset: 640)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_descriptor_metadata_ops", file: !6, line: 565, size: 192, elements: !4096)
!4096 = !{!4097, !4101, !4106}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4095, file: !6, line: 566, baseType: !4098, size: 64)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{!249, !4049, !269, !404}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "get_ptr", scope: !4095, file: !6, line: 569, baseType: !4102, size: 64, offset: 64)
!4102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4103, size: 64)
!4103 = !DISubroutineType(types: !4104)
!4104 = !{!269, !4049, !4105, !4105}
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "set_len", scope: !4095, file: !6, line: 571, baseType: !4107, size: 64, offset: 128)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{!249, !4049, !404}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor", scope: !233, file: !6, line: 882, baseType: !4111, size: 64, offset: 1792)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = !DISubroutineType(types: !4113)
!4113 = !{!4049, !228, !1039, !4114, !7, !404, !288}
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor_val", scope: !233, file: !6, line: 885, baseType: !4116, size: 64, offset: 1856)
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{!4049, !228, !4114, !7, !404, !4119, !288}
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq", scope: !233, file: !6, line: 888, baseType: !4121, size: 64, offset: 1920)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!4049, !228, !4114, !4114, !7, !507, !404, !288}
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq_val", scope: !233, file: !6, line: 892, baseType: !4125, size: 64, offset: 1984)
!4125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4126, size: 64)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{!4049, !228, !4114, !4114, !7, !507, !404, !4119, !288}
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset", scope: !233, file: !6, line: 896, baseType: !4129, size: 64, offset: 2048)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!4049, !228, !1039, !249, !404, !288}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset_sg", scope: !233, file: !6, line: 899, baseType: !4133, size: 64, offset: 2112)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!4049, !228, !4136, !7, !249, !288}
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4138, line: 11, size: 256, elements: !4139)
!4138 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4139 = !{!4140, !4141, !4142, !4143, !4144}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4137, file: !4138, line: 12, baseType: !288, size: 64)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4137, file: !4138, line: 13, baseType: !7, size: 32, offset: 64)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4137, file: !4138, line: 14, baseType: !7, size: 32, offset: 96)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4137, file: !4138, line: 15, baseType: !1039, size: 64, offset: 128)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4137, file: !4138, line: 17, baseType: !7, size: 32, offset: 192)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_interrupt", scope: !233, file: !6, line: 902, baseType: !4146, size: 64, offset: 2176)
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 64)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{!4049, !228, !288}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_slave_sg", scope: !233, file: !6, line: 905, baseType: !4150, size: 64, offset: 2240)
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4151, size: 64)
!4151 = !DISubroutineType(types: !4152)
!4152 = !{!4049, !228, !4136, !7, !156, !288, !269}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_cyclic", scope: !233, file: !6, line: 909, baseType: !4154, size: 64, offset: 2304)
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 64)
!4155 = !DISubroutineType(types: !4156)
!4156 = !{!4049, !228, !1039, !404, !404, !156, !288}
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_interleaved_dma", scope: !233, file: !6, line: 913, baseType: !4158, size: 64, offset: 2368)
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 64)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{!4049, !228, !4161, !288}
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_interleaved_template", file: !6, line: 150, size: 320, elements: !4163)
!4163 = !{!4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "src_start", scope: !4162, file: !6, line: 151, baseType: !1039, size: 64)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "dst_start", scope: !4162, file: !6, line: 152, baseType: !1039, size: 64, offset: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4162, file: !6, line: 153, baseType: !156, size: 32, offset: 128)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "src_inc", scope: !4162, file: !6, line: 154, baseType: !267, size: 8, offset: 160)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "dst_inc", scope: !4162, file: !6, line: 155, baseType: !267, size: 8, offset: 168)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "src_sgl", scope: !4162, file: !6, line: 156, baseType: !267, size: 8, offset: 176)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "dst_sgl", scope: !4162, file: !6, line: 157, baseType: !267, size: 8, offset: 184)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "numf", scope: !4162, file: !6, line: 158, baseType: !404, size: 64, offset: 192)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !4162, file: !6, line: 159, baseType: !404, size: 64, offset: 256)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !4162, file: !6, line: 160, baseType: !4174, offset: 320)
!4174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4175, elements: !2440)
!4175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_chunk", file: !6, line: 125, size: 256, elements: !4176)
!4176 = !{!4177, !4178, !4179, !4180}
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4175, file: !6, line: 126, baseType: !404, size: 64)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "icg", scope: !4175, file: !6, line: 127, baseType: !404, size: 64, offset: 64)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "dst_icg", scope: !4175, file: !6, line: 128, baseType: !404, size: 64, offset: 128)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "src_icg", scope: !4175, file: !6, line: 129, baseType: !404, size: 64, offset: 192)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_imm_data", scope: !233, file: !6, line: 916, baseType: !4182, size: 64, offset: 2432)
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4183, size: 64)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!4049, !228, !1039, !503, !288}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "device_caps", scope: !233, file: !6, line: 920, baseType: !4186, size: 64, offset: 2496)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{null, !228, !4189}
!4189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4190, size: 64)
!4190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_caps", file: !6, line: 497, size: 288, elements: !4191)
!4191 = !{!4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202}
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !4190, file: !6, line: 498, baseType: !497, size: 32)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !4190, file: !6, line: 499, baseType: !497, size: 32, offset: 32)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !4190, file: !6, line: 500, baseType: !497, size: 32, offset: 64)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !4190, file: !6, line: 501, baseType: !497, size: 32, offset: 96)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !4190, file: !6, line: 502, baseType: !497, size: 32, offset: 128)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !4190, file: !6, line: 503, baseType: !497, size: 32, offset: 160)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pause", scope: !4190, file: !6, line: 504, baseType: !267, size: 8, offset: 192)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_resume", scope: !4190, file: !6, line: 505, baseType: !267, size: 8, offset: 200)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_terminate", scope: !4190, file: !6, line: 506, baseType: !267, size: 8, offset: 208)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !4190, file: !6, line: 507, baseType: !129, size: 32, offset: 224)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !4190, file: !6, line: 508, baseType: !267, size: 8, offset: 256)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "device_config", scope: !233, file: !6, line: 922, baseType: !4204, size: 64, offset: 2560)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!249, !228, !4207}
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64)
!4208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_config", file: !6, line: 434, size: 448, elements: !4209)
!4209 = !{!4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !4208, file: !6, line: 435, baseType: !156, size: 32)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr", scope: !4208, file: !6, line: 436, baseType: !2234, size: 64, offset: 64)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr", scope: !4208, file: !6, line: 437, baseType: !2234, size: 64, offset: 128)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_width", scope: !4208, file: !6, line: 438, baseType: !163, size: 32, offset: 192)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_width", scope: !4208, file: !6, line: 439, baseType: !163, size: 32, offset: 224)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "src_maxburst", scope: !4208, file: !6, line: 440, baseType: !497, size: 32, offset: 256)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "dst_maxburst", scope: !4208, file: !6, line: 441, baseType: !497, size: 32, offset: 288)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "src_port_window_size", scope: !4208, file: !6, line: 442, baseType: !497, size: 32, offset: 320)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "dst_port_window_size", scope: !4208, file: !6, line: 443, baseType: !497, size: 32, offset: 352)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "device_fc", scope: !4208, file: !6, line: 444, baseType: !267, size: 8, offset: 384)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "slave_id", scope: !4208, file: !6, line: 445, baseType: !7, size: 32, offset: 416)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "device_pause", scope: !233, file: !6, line: 924, baseType: !4038, size: 64, offset: 2624)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "device_resume", scope: !233, file: !6, line: 925, baseType: !4038, size: 64, offset: 2688)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "device_terminate_all", scope: !233, file: !6, line: 926, baseType: !4038, size: 64, offset: 2752)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "device_synchronize", scope: !233, file: !6, line: 927, baseType: !4042, size: 64, offset: 2816)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "device_tx_status", scope: !233, file: !6, line: 929, baseType: !4226, size: 64, offset: 2880)
!4226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4227, size: 64)
!4227 = !DISubroutineType(types: !4228)
!4228 = !{!5, !228, !4053, !4229}
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4230, size: 64)
!4230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_tx_state", file: !6, line: 721, size: 128, elements: !4231)
!4231 = !{!4232, !4233, !4234, !4235}
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4230, file: !6, line: 722, baseType: !4053, size: 32)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4230, file: !6, line: 723, baseType: !4053, size: 32, offset: 32)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !4230, file: !6, line: 724, baseType: !497, size: 32, offset: 64)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "in_flight_bytes", scope: !4230, file: !6, line: 725, baseType: !497, size: 32, offset: 96)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "device_issue_pending", scope: !233, file: !6, line: 932, baseType: !4042, size: 64, offset: 2944)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "device_release", scope: !233, file: !6, line: 933, baseType: !4238, size: 64, offset: 3008)
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4239, size: 64)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{null, !232}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !229, file: !6, line: 331, baseType: !301, size: 64, offset: 64)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !229, file: !6, line: 332, baseType: !4053, size: 32, offset: 128)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "completed_cookie", scope: !229, file: !6, line: 333, baseType: !4053, size: 32, offset: 160)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "chan_id", scope: !229, file: !6, line: 336, baseType: !249, size: 32, offset: 192)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !229, file: !6, line: 337, baseType: !4246, size: 64, offset: 256)
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4247, size: 64)
!4247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_dev", file: !6, line: 361, size: 5696, elements: !4248)
!4248 = !{!4249, !4250, !4251}
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4247, file: !6, line: 362, baseType: !228, size: 64)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4247, file: !6, line: 363, baseType: !302, size: 5568, offset: 64)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4247, file: !6, line: 364, baseType: !249, size: 32, offset: 5632)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !229, file: !6, line: 338, baseType: !277, size: 64, offset: 320)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "device_node", scope: !229, file: !6, line: 343, baseType: !253, size: 128, offset: 384)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !229, file: !6, line: 344, baseType: !4255, size: 64, offset: 512)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64)
!4256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_percpu", file: !6, line: 294, size: 128, elements: !4257)
!4257 = !{!4258, !4259}
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "memcpy_count", scope: !4256, file: !6, line: 296, baseType: !288, size: 64)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_transferred", scope: !4256, file: !6, line: 297, baseType: !288, size: 64, offset: 64)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "client_count", scope: !229, file: !6, line: 345, baseType: !249, size: 32, offset: 576)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "table_count", scope: !229, file: !6, line: 346, baseType: !249, size: 32, offset: 608)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "router", scope: !229, file: !6, line: 349, baseType: !4263, size: 64, offset: 640)
!4263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4264, size: 64)
!4264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_router", file: !6, line: 305, size: 128, elements: !4265)
!4265 = !{!4266, !4267}
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4264, file: !6, line: 306, baseType: !301, size: 64)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "route_free", scope: !4264, file: !6, line: 307, baseType: !4268, size: 64, offset: 64)
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4269, size: 64)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{null, !301, !269}
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "route_data", scope: !229, file: !6, line: 350, baseType: !269, size: 64, offset: 704)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !229, file: !6, line: 352, baseType: !269, size: 64, offset: 768)
!4273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4274, size: 64)
!4274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4275)
!4275 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !256)
!4276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_tbl_ent", file: !3, line: 255, size: 64, elements: !4279)
!4279 = !{!4280}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4278, file: !3, line: 256, baseType: !228, size: 64)
!4281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4282, size: 64)
!4282 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !279)
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4286)
!4286 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !249)
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 64)
!4288 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !497)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4275, size: 64)
!4290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4291, size: 64)
!4291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1480)
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4286, size: 64)
!4293 = !DIDerivedType(tag: DW_TAG_typedef, name: "xa_mark_t", file: !214, line: 246, baseType: !7)
!4294 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !245, line: 37, baseType: !288)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!4296 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !245, line: 149, baseType: !7)
!4297 = !{!0, !4298, !4301, !4306, !4308, !4310, !4313, !4315, !4317, !4319, !4321, !4324, !4326, !4329, !4343, !4345, !4347, !4352, !4354, !4384}
!4298 = !DIGlobalVariableExpression(var: !4299, expr: !DIExpression())
!4299 = distinct !DIGlobalVariable(name: "__warned", scope: !4300, file: !3, line: 906, type: !267, isLocal: true, isDefinition: true)
!4300 = distinct !DISubprogram(name: "dma_release_channel", scope: !3, file: !3, line: 903, type: !4043, scopeLine: 904, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4301 = !DIGlobalVariableExpression(var: !4302, expr: !DIExpression())
!4302 = distinct !DIGlobalVariable(name: "__key", scope: !4303, file: !3, line: 1247, type: !728, isLocal: true, isDefinition: true)
!4303 = distinct !DISubprogram(name: "dma_async_device_register", scope: !3, file: !3, line: 1140, type: !4304, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{!249, !232}
!4306 = !DIGlobalVariableExpression(var: !4307, expr: !DIExpression())
!4307 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_dma_bus_init294", scope: !2, file: !3, line: 1659, type: !269, isLocal: true, isDefinition: true)
!4308 = !DIGlobalVariableExpression(var: !4309, expr: !DIExpression())
!4309 = distinct !DIGlobalVariable(name: "dmaengine_ref_count", scope: !2, file: !3, line: 61, type: !226, isLocal: true, isDefinition: true)
!4310 = !DIGlobalVariableExpression(var: !4311, expr: !DIExpression())
!4311 = distinct !DIGlobalVariable(name: "channel_table", scope: !2, file: !3, line: 260, type: !4312, isLocal: true, isDefinition: true)
!4312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4277, size: 1024, elements: !1845)
!4313 = !DIGlobalVariableExpression(var: !4314, expr: !DIExpression())
!4314 = distinct !DIGlobalVariable(name: "dma_cap_mask_all", scope: !2, file: !3, line: 249, type: !283, isLocal: true, isDefinition: true)
!4315 = !DIGlobalVariableExpression(var: !4316, expr: !DIExpression())
!4316 = distinct !DIGlobalVariable(name: "dma_device_list", scope: !2, file: !3, line: 60, type: !253, isLocal: true, isDefinition: true)
!4317 = !DIGlobalVariableExpression(var: !4318, expr: !DIExpression())
!4318 = distinct !DIGlobalVariable(name: "dma_list_mutex", scope: !2, file: !3, line: 58, type: !1292, isLocal: true, isDefinition: true)
!4319 = !DIGlobalVariableExpression(var: !4320, expr: !DIExpression())
!4320 = distinct !DIGlobalVariable(name: "dma_devclass", scope: !2, file: !3, line: 240, type: !3981, isLocal: true, isDefinition: true)
!4321 = !DIGlobalVariableExpression(var: !4322, expr: !DIExpression())
!4322 = distinct !DIGlobalVariable(name: "dma_dev_groups", scope: !2, file: !3, line: 230, type: !4323, isLocal: true, isDefinition: true)
!4323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 128, elements: !1679)
!4324 = !DIGlobalVariableExpression(var: !4325, expr: !DIExpression())
!4325 = distinct !DIGlobalVariable(name: "dma_dev_group", scope: !2, file: !3, line: 230, type: !412, isLocal: true, isDefinition: true)
!4326 = !DIGlobalVariableExpression(var: !4327, expr: !DIExpression())
!4327 = distinct !DIGlobalVariable(name: "dma_dev_attrs", scope: !2, file: !3, line: 224, type: !4328, isLocal: true, isDefinition: true)
!4328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 256, elements: !1274)
!4329 = !DIGlobalVariableExpression(var: !4330, expr: !DIExpression())
!4330 = distinct !DIGlobalVariable(name: "dev_attr_memcpy_count", scope: !2, file: !3, line: 182, type: !4331, isLocal: true, isDefinition: true)
!4331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !95, line: 99, size: 256, elements: !4332)
!4332 = !{!4333, !4334, !4339}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4331, file: !95, line: 100, baseType: !395, size: 128)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4331, file: !95, line: 101, baseType: !4335, size: 64, offset: 128)
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!390, !301, !4338, !359}
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 64)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4331, file: !95, line: 103, baseType: !4340, size: 64, offset: 192)
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 64)
!4341 = !DISubroutineType(types: !4342)
!4342 = !{!390, !301, !4338, !277, !404}
!4343 = !DIGlobalVariableExpression(var: !4344, expr: !DIExpression())
!4344 = distinct !DIGlobalVariable(name: "dev_attr_bytes_transferred", scope: !2, file: !3, line: 204, type: !4331, isLocal: true, isDefinition: true)
!4345 = !DIGlobalVariableExpression(var: !4346, expr: !DIExpression())
!4346 = distinct !DIGlobalVariable(name: "dev_attr_in_use", scope: !2, file: !3, line: 222, type: !4331, isLocal: true, isDefinition: true)
!4347 = !DIGlobalVariableExpression(var: !4348, expr: !DIExpression())
!4348 = distinct !DIGlobalVariable(name: "__warned", scope: !4349, file: !3, line: 1109, type: !267, isLocal: true, isDefinition: true)
!4349 = distinct !DISubprogram(name: "__dma_async_device_channel_unregister", scope: !3, file: !3, line: 1106, type: !4350, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{null, !232, !228}
!4352 = !DIGlobalVariableExpression(var: !4353, expr: !DIExpression())
!4353 = distinct !DIGlobalVariable(name: "dma_ida", scope: !2, file: !3, line: 59, type: !4025, isLocal: true, isDefinition: true)
!4354 = !DIGlobalVariableExpression(var: !4355, expr: !DIExpression())
!4355 = distinct !DIGlobalVariable(name: "unmap_pool", scope: !2, file: !3, line: 1376, type: !4356, isLocal: true, isDefinition: true)
!4356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4357, size: 256, elements: !289)
!4357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_unmap_pool", file: !3, line: 1368, size: 256, elements: !4358)
!4358 = !{!4359, !4360, !4361, !4383}
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !4357, file: !3, line: 1369, baseType: !1054, size: 64)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4357, file: !3, line: 1370, baseType: !277, size: 64, offset: 64)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !4357, file: !3, line: 1371, baseType: !4362, size: 64, offset: 128)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4363, size: 64)
!4363 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !4364, line: 26, baseType: !4365)
!4364 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !4364, line: 16, size: 448, elements: !4366)
!4366 = !{!4367, !4368, !4369, !4370, !4371, !4372, !4377, !4382}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4365, file: !4364, line: 17, baseType: !318)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !4365, file: !4364, line: 18, baseType: !249, size: 32)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !4365, file: !4364, line: 19, baseType: !249, size: 32, offset: 32)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !4365, file: !4364, line: 20, baseType: !900, size: 64, offset: 64)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !4365, file: !4364, line: 22, baseType: !269, size: 64, offset: 128)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4365, file: !4364, line: 23, baseType: !4373, size: 64, offset: 192)
!4373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4374, size: 64)
!4374 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !4364, line: 13, baseType: !4375)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{!269, !826, !269}
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4365, file: !4364, line: 24, baseType: !4378, size: 64, offset: 256)
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !4364, line: 14, baseType: !4380)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{null, !269, !269}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4365, file: !4364, line: 25, baseType: !1591, size: 128, offset: 320)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4357, file: !3, line: 1372, baseType: !404, size: 64, offset: 192)
!4384 = !DIGlobalVariableExpression(var: !4385, expr: !DIExpression())
!4385 = distinct !DIGlobalVariable(name: "__key", scope: !4386, file: !3, line: 1653, type: !728, isLocal: true, isDefinition: true)
!4386 = distinct !DISubprogram(name: "dma_bus_init", scope: !3, file: !3, line: 1646, type: !4387, scopeLine: 1647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4387 = !DISubroutineType(types: !4388)
!4388 = !{!249}
!4389 = !{i32 7, !"Dwarf Version", i32 4}
!4390 = !{i32 2, !"Debug Info Version", i32 3}
!4391 = !{i32 1, !"wchar_size", i32 2}
!4392 = !{i32 1, !"Code Model", i32 2}
!4393 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4394 = distinct !DISubprogram(name: "dma_channel_table_init", scope: !3, file: !3, line: 262, type: !4387, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4395 = !DILocalVariable(name: "cap", scope: !4394, file: !3, line: 264, type: !174)
!4396 = !DILocation(line: 264, column: 28, scope: !4394)
!4397 = !DILocalVariable(name: "err", scope: !4394, file: !3, line: 265, type: !249)
!4398 = !DILocation(line: 265, column: 6, scope: !4394)
!4399 = !DILocation(line: 267, column: 2, scope: !4394)
!4400 = !DILocation(line: 273, column: 2, scope: !4394)
!4401 = !DILocation(line: 274, column: 2, scope: !4394)
!4402 = !DILocation(line: 275, column: 2, scope: !4394)
!4403 = !DILocation(line: 277, column: 2, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 277, column: 2)
!4405 = !DILocation(line: 277, column: 2, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 277, column: 2)
!4407 = !DILocation(line: 278, column: 24, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 277, column: 47)
!4409 = !DILocation(line: 278, column: 17, scope: !4408)
!4410 = !DILocation(line: 278, column: 3, scope: !4408)
!4411 = !DILocation(line: 278, column: 22, scope: !4408)
!4412 = !DILocation(line: 279, column: 22, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 279, column: 7)
!4414 = !DILocation(line: 279, column: 8, scope: !4413)
!4415 = !DILocation(line: 279, column: 7, scope: !4408)
!4416 = !DILocation(line: 280, column: 8, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 279, column: 28)
!4418 = !DILocation(line: 281, column: 4, scope: !4417)
!4419 = !DILocation(line: 283, column: 2, scope: !4408)
!4420 = distinct !{!4420, !4403, !4421}
!4421 = !DILocation(line: 283, column: 2, scope: !4404)
!4422 = !DILocation(line: 285, column: 6, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 285, column: 6)
!4424 = !DILocation(line: 285, column: 6, scope: !4394)
!4425 = !DILocation(line: 286, column: 3, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 285, column: 11)
!4427 = !DILocation(line: 287, column: 3, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 287, column: 3)
!4429 = !DILocation(line: 287, column: 3, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 287, column: 3)
!4431 = !DILocation(line: 288, column: 30, scope: !4430)
!4432 = !DILocation(line: 288, column: 16, scope: !4430)
!4433 = !DILocation(line: 288, column: 4, scope: !4430)
!4434 = distinct !{!4434, !4427, !4435}
!4435 = !DILocation(line: 288, column: 34, scope: !4428)
!4436 = !DILocation(line: 289, column: 2, scope: !4426)
!4437 = !DILocation(line: 291, column: 9, scope: !4394)
!4438 = !DILocation(line: 291, column: 2, scope: !4394)
!4439 = distinct !DISubprogram(name: "dma_sync_wait", scope: !3, file: !3, line: 519, type: !4440, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4440 = !DISubroutineType(types: !4441)
!4441 = !{!5, !228, !4053}
!4442 = !DILocalVariable(name: "m", arg: 1, scope: !4443, file: !4444, line: 363, type: !2936)
!4443 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !4444, file: !4444, line: 363, type: !4445, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4444 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!288, !2936}
!4447 = !DILocation(line: 363, column: 74, scope: !4443, inlinedAt: !4448)
!4448 = distinct !DILocation(line: 522, column: 50, scope: !4439)
!4449 = !DILocalVariable(name: "chan", arg: 1, scope: !4439, file: !3, line: 519, type: !228)
!4450 = !DILocation(line: 519, column: 48, scope: !4439)
!4451 = !DILocalVariable(name: "cookie", arg: 2, scope: !4439, file: !3, line: 519, type: !4053)
!4452 = !DILocation(line: 519, column: 67, scope: !4439)
!4453 = !DILocalVariable(name: "status", scope: !4439, file: !3, line: 521, type: !5)
!4454 = !DILocation(line: 521, column: 18, scope: !4439)
!4455 = !DILocalVariable(name: "dma_sync_wait_timeout", scope: !4439, file: !3, line: 522, type: !288)
!4456 = !DILocation(line: 522, column: 16, scope: !4439)
!4457 = !DILocation(line: 522, column: 40, scope: !4439)
!4458 = !DILocation(line: 365, column: 27, scope: !4459, inlinedAt: !4448)
!4459 = distinct !DILexicalBlock(scope: !4443, file: !4444, line: 365, column: 6)
!4460 = !DILocation(line: 365, column: 6, scope: !4459, inlinedAt: !4448)
!4461 = !DILocation(line: 365, column: 6, scope: !4443, inlinedAt: !4448)
!4462 = !DILocation(line: 366, column: 12, scope: !4463, inlinedAt: !4448)
!4463 = distinct !DILexicalBlock(scope: !4464, file: !4444, line: 366, column: 7)
!4464 = distinct !DILexicalBlock(scope: !4459, file: !4444, line: 365, column: 31)
!4465 = !DILocation(line: 366, column: 14, scope: !4463, inlinedAt: !4448)
!4466 = !DILocation(line: 366, column: 7, scope: !4464, inlinedAt: !4448)
!4467 = !DILocation(line: 367, column: 4, scope: !4463, inlinedAt: !4448)
!4468 = !DILocation(line: 368, column: 28, scope: !4464, inlinedAt: !4448)
!4469 = !DILocation(line: 368, column: 10, scope: !4464, inlinedAt: !4448)
!4470 = !DILocation(line: 368, column: 3, scope: !4464, inlinedAt: !4448)
!4471 = !DILocation(line: 370, column: 29, scope: !4472, inlinedAt: !4448)
!4472 = distinct !DILexicalBlock(scope: !4459, file: !4444, line: 369, column: 9)
!4473 = !DILocation(line: 370, column: 10, scope: !4472, inlinedAt: !4448)
!4474 = !DILocation(line: 370, column: 3, scope: !4472, inlinedAt: !4448)
!4475 = !DILocation(line: 372, column: 1, scope: !4443, inlinedAt: !4448)
!4476 = !DILocation(line: 522, column: 48, scope: !4439)
!4477 = !DILocation(line: 524, column: 26, scope: !4439)
!4478 = !DILocation(line: 524, column: 2, scope: !4439)
!4479 = !DILocation(line: 525, column: 2, scope: !4439)
!4480 = !DILocation(line: 526, column: 37, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 525, column: 5)
!4482 = !DILocation(line: 526, column: 43, scope: !4481)
!4483 = !DILocation(line: 526, column: 12, scope: !4481)
!4484 = !DILocation(line: 526, column: 10, scope: !4481)
!4485 = !DILocation(line: 527, column: 7, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4481, file: !3, line: 527, column: 7)
!4487 = !DILocation(line: 527, column: 7, scope: !4481)
!4488 = !DILocation(line: 528, column: 4, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4486, file: !3, line: 527, column: 54)
!4490 = !DILocation(line: 529, column: 4, scope: !4489)
!4491 = !DILocation(line: 531, column: 7, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4481, file: !3, line: 531, column: 7)
!4493 = !DILocation(line: 531, column: 14, scope: !4492)
!4494 = !DILocation(line: 531, column: 7, scope: !4481)
!4495 = !DILocation(line: 532, column: 4, scope: !4492)
!4496 = !DILocation(line: 13, column: 2, scope: !4497, inlinedAt: !4499)
!4497 = distinct !DISubprogram(name: "rep_nop", scope: !4498, file: !4498, line: 11, type: !1989, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4498 = !DIFile(filename: "./arch/x86/include/asm/vdso/processor.h", directory: "/home/lizy2001/genbc/linux")
!4499 = distinct !DILocation(line: 18, column: 2, scope: !4500, inlinedAt: !4501)
!4500 = distinct !DISubprogram(name: "cpu_relax", scope: !4498, file: !4498, line: 16, type: !1989, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4501 = distinct !DILocation(line: 533, column: 3, scope: !4481)
!4502 = !{i32 1960837}
!4503 = !DILocation(line: 534, column: 2, scope: !4481)
!4504 = distinct !{!4504, !4479, !4505}
!4505 = !DILocation(line: 534, column: 12, scope: !4439)
!4506 = !DILocation(line: 536, column: 9, scope: !4439)
!4507 = !DILocation(line: 536, column: 2, scope: !4439)
!4508 = !DILocation(line: 537, column: 1, scope: !4439)
!4509 = distinct !DISubprogram(name: "dma_async_issue_pending", scope: !6, file: !6, line: 1404, type: !4043, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4510 = !DILocalVariable(name: "chan", arg: 1, scope: !4509, file: !6, line: 1404, type: !228)
!4511 = !DILocation(line: 1404, column: 61, scope: !4509)
!4512 = !DILocation(line: 1406, column: 2, scope: !4509)
!4513 = !DILocation(line: 1406, column: 8, scope: !4509)
!4514 = !DILocation(line: 1406, column: 16, scope: !4509)
!4515 = !DILocation(line: 1406, column: 37, scope: !4509)
!4516 = !DILocation(line: 1407, column: 1, scope: !4509)
!4517 = distinct !DISubprogram(name: "dma_async_is_tx_complete", scope: !6, file: !6, line: 1420, type: !4518, scopeLine: 1422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{!5, !228, !4053, !4520, !4520}
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4521 = !DILocalVariable(name: "chan", arg: 1, scope: !4517, file: !6, line: 1420, type: !228)
!4522 = !DILocation(line: 1420, column: 73, scope: !4517)
!4523 = !DILocalVariable(name: "cookie", arg: 2, scope: !4517, file: !6, line: 1421, type: !4053)
!4524 = !DILocation(line: 1421, column: 15, scope: !4517)
!4525 = !DILocalVariable(name: "last", arg: 3, scope: !4517, file: !6, line: 1421, type: !4520)
!4526 = !DILocation(line: 1421, column: 37, scope: !4517)
!4527 = !DILocalVariable(name: "used", arg: 4, scope: !4517, file: !6, line: 1421, type: !4520)
!4528 = !DILocation(line: 1421, column: 57, scope: !4517)
!4529 = !DILocalVariable(name: "state", scope: !4517, file: !6, line: 1423, type: !4230)
!4530 = !DILocation(line: 1423, column: 22, scope: !4517)
!4531 = !DILocalVariable(name: "status", scope: !4517, file: !6, line: 1424, type: !5)
!4532 = !DILocation(line: 1424, column: 18, scope: !4517)
!4533 = !DILocation(line: 1426, column: 11, scope: !4517)
!4534 = !DILocation(line: 1426, column: 17, scope: !4517)
!4535 = !DILocation(line: 1426, column: 25, scope: !4517)
!4536 = !DILocation(line: 1426, column: 42, scope: !4517)
!4537 = !DILocation(line: 1426, column: 48, scope: !4517)
!4538 = !DILocation(line: 1426, column: 9, scope: !4517)
!4539 = !DILocation(line: 1427, column: 6, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4517, file: !6, line: 1427, column: 6)
!4541 = !DILocation(line: 1427, column: 6, scope: !4517)
!4542 = !DILocation(line: 1428, column: 17, scope: !4540)
!4543 = !DILocation(line: 1428, column: 4, scope: !4540)
!4544 = !DILocation(line: 1428, column: 9, scope: !4540)
!4545 = !DILocation(line: 1428, column: 3, scope: !4540)
!4546 = !DILocation(line: 1429, column: 6, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4517, file: !6, line: 1429, column: 6)
!4548 = !DILocation(line: 1429, column: 6, scope: !4517)
!4549 = !DILocation(line: 1430, column: 17, scope: !4547)
!4550 = !DILocation(line: 1430, column: 4, scope: !4547)
!4551 = !DILocation(line: 1430, column: 9, scope: !4547)
!4552 = !DILocation(line: 1430, column: 3, scope: !4547)
!4553 = !DILocation(line: 1431, column: 9, scope: !4517)
!4554 = !DILocation(line: 1431, column: 2, scope: !4517)
!4555 = distinct !DISubprogram(name: "dma_find_channel", scope: !3, file: !3, line: 544, type: !4556, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4556 = !DISubroutineType(types: !4557)
!4557 = !{!228, !174}
!4558 = !DILocalVariable(name: "tx_type", arg: 1, scope: !4555, file: !3, line: 544, type: !174)
!4559 = !DILocation(line: 544, column: 61, scope: !4555)
!4560 = !DILocalVariable(name: "pscr_ret__", scope: !4561, file: !3, line: 546, type: !228)
!4561 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 546, column: 9)
!4562 = !DILocation(line: 546, column: 9, scope: !4561)
!4563 = !DILocalVariable(name: "__vpp_verify", scope: !4564, file: !3, line: 546, type: !2236)
!4564 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 546, column: 9)
!4565 = !DILocation(line: 546, column: 9, scope: !4564)
!4566 = !DILocalVariable(name: "pfo_val__", scope: !4567, file: !3, line: 546, type: !503)
!4567 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 546, column: 9)
!4568 = !DILocation(line: 546, column: 9, scope: !4567)
!4569 = !{i32 -2141329333}
!4570 = !DILocation(line: 546, column: 2, scope: !4555)
!4571 = distinct !DISubprogram(name: "dma_issue_pending_all", scope: !3, file: !3, line: 553, type: !1989, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4572 = !DILocalVariable(name: "device", scope: !4571, file: !3, line: 555, type: !232)
!4573 = !DILocation(line: 555, column: 21, scope: !4571)
!4574 = !DILocalVariable(name: "chan", scope: !4571, file: !3, line: 556, type: !228)
!4575 = !DILocation(line: 556, column: 19, scope: !4571)
!4576 = !DILocation(line: 639, column: 2, scope: !4577, inlinedAt: !4579)
!4577 = distinct !DISubprogram(name: "rcu_read_lock", scope: !4578, file: !4578, line: 637, type: !1989, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4578 = !DIFile(filename: "./include/linux/rcupdate.h", directory: "/home/lizy2001/genbc/linux")
!4579 = distinct !DILocation(line: 558, column: 2, scope: !4571)
!4580 = !DILocalVariable(name: "__mptr", scope: !4581, file: !3, line: 559, type: !269)
!4581 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 559, column: 2)
!4582 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 559, column: 2)
!4583 = !DILocation(line: 559, column: 2, scope: !4581)
!4584 = !DILocation(line: 559, column: 2, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 559, column: 2)
!4586 = !DILocation(line: 559, column: 2, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 559, column: 2)
!4588 = !DILocation(line: 559, column: 2, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 559, column: 2)
!4590 = !DILocation(line: 559, column: 2, scope: !4582)
!4591 = !DILocation(line: 559, column: 2, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 559, column: 2)
!4593 = !DILocation(line: 560, column: 7, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 560, column: 7)
!4595 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 559, column: 65)
!4596 = !DILocation(line: 560, column: 7, scope: !4595)
!4597 = !DILocation(line: 561, column: 4, scope: !4594)
!4598 = !DILocalVariable(name: "__mptr", scope: !4599, file: !3, line: 562, type: !269)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 562, column: 3)
!4600 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 562, column: 3)
!4601 = !DILocation(line: 562, column: 3, scope: !4599)
!4602 = !DILocation(line: 562, column: 3, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 562, column: 3)
!4604 = !DILocation(line: 562, column: 3, scope: !4600)
!4605 = !DILocation(line: 562, column: 3, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4600, file: !3, line: 562, column: 3)
!4607 = !DILocation(line: 563, column: 8, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 563, column: 8)
!4609 = !DILocation(line: 563, column: 14, scope: !4608)
!4610 = !DILocation(line: 563, column: 8, scope: !4606)
!4611 = !DILocation(line: 564, column: 5, scope: !4608)
!4612 = !DILocation(line: 564, column: 13, scope: !4608)
!4613 = !DILocation(line: 564, column: 34, scope: !4608)
!4614 = !DILocalVariable(name: "__mptr", scope: !4615, file: !3, line: 562, type: !269)
!4615 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 562, column: 3)
!4616 = !DILocation(line: 562, column: 3, scope: !4615)
!4617 = !DILocation(line: 562, column: 3, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 562, column: 3)
!4619 = distinct !{!4619, !4604, !4620}
!4620 = !DILocation(line: 564, column: 38, scope: !4600)
!4621 = !DILocation(line: 565, column: 2, scope: !4595)
!4622 = !DILocalVariable(name: "__mptr", scope: !4623, file: !3, line: 559, type: !269)
!4623 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 559, column: 2)
!4624 = !DILocation(line: 559, column: 2, scope: !4623)
!4625 = !DILocation(line: 559, column: 2, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 559, column: 2)
!4627 = !DILocation(line: 559, column: 2, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4626, file: !3, line: 559, column: 2)
!4629 = !DILocation(line: 559, column: 2, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 559, column: 2)
!4631 = distinct !{!4631, !4590, !4632}
!4632 = !DILocation(line: 565, column: 2, scope: !4582)
!4633 = !DILocation(line: 566, column: 2, scope: !4571)
!4634 = !DILocation(line: 567, column: 1, scope: !4571)
!4635 = distinct !DISubprogram(name: "__dma_has_cap", scope: !6, file: !6, line: 1389, type: !4636, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!249, !174, !4638}
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!4639 = !DILocalVariable(name: "tx_type", arg: 1, scope: !4635, file: !6, line: 1389, type: !174)
!4640 = !DILocation(line: 1389, column: 41, scope: !4635)
!4641 = !DILocalVariable(name: "srcp", arg: 2, scope: !4635, file: !6, line: 1389, type: !4638)
!4642 = !DILocation(line: 1389, column: 66, scope: !4635)
!4643 = !DILocation(line: 1391, column: 18, scope: !4635)
!4644 = !DILocation(line: 1391, column: 27, scope: !4635)
!4645 = !DILocation(line: 1391, column: 33, scope: !4635)
!4646 = !DILocation(line: 1391, column: 9, scope: !4635)
!4647 = !DILocation(line: 1391, column: 2, scope: !4635)
!4648 = distinct !DISubprogram(name: "rcu_read_unlock", scope: !4578, file: !4578, line: 689, type: !1989, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4649 = !DILocation(line: 691, column: 2, scope: !4648)
!4650 = !DILocation(line: 691, column: 2, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4648, file: !4578, line: 691, column: 2)
!4652 = !DILocation(line: 694, column: 2, scope: !4648)
!4653 = !DILocation(line: 695, column: 2, scope: !4648)
!4654 = !DILocation(line: 695, column: 2, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4648, file: !4578, line: 695, column: 2)
!4656 = !DILocation(line: 696, column: 1, scope: !4648)
!4657 = distinct !DISubprogram(name: "dma_get_slave_caps", scope: !3, file: !3, line: 570, type: !4658, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!249, !228, !4189}
!4660 = !DILocalVariable(name: "chan", arg: 1, scope: !4657, file: !3, line: 570, type: !228)
!4661 = !DILocation(line: 570, column: 41, scope: !4657)
!4662 = !DILocalVariable(name: "caps", arg: 2, scope: !4657, file: !3, line: 570, type: !4189)
!4663 = !DILocation(line: 570, column: 70, scope: !4657)
!4664 = !DILocalVariable(name: "device", scope: !4657, file: !3, line: 572, type: !232)
!4665 = !DILocation(line: 572, column: 21, scope: !4657)
!4666 = !DILocation(line: 574, column: 7, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 574, column: 6)
!4668 = !DILocation(line: 574, column: 12, scope: !4667)
!4669 = !DILocation(line: 574, column: 16, scope: !4667)
!4670 = !DILocation(line: 574, column: 6, scope: !4657)
!4671 = !DILocation(line: 575, column: 3, scope: !4667)
!4672 = !DILocation(line: 577, column: 11, scope: !4657)
!4673 = !DILocation(line: 577, column: 17, scope: !4657)
!4674 = !DILocation(line: 577, column: 9, scope: !4657)
!4675 = !DILocation(line: 580, column: 28, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 580, column: 6)
!4677 = !DILocation(line: 580, column: 36, scope: !4676)
!4678 = !DILocation(line: 580, column: 45, scope: !4676)
!4679 = !DILocation(line: 580, column: 8, scope: !4676)
!4680 = !DILocation(line: 580, column: 51, scope: !4676)
!4681 = !DILocation(line: 581, column: 29, scope: !4676)
!4682 = !DILocation(line: 581, column: 37, scope: !4676)
!4683 = !DILocation(line: 581, column: 46, scope: !4676)
!4684 = !DILocation(line: 581, column: 8, scope: !4676)
!4685 = !DILocation(line: 580, column: 6, scope: !4657)
!4686 = !DILocation(line: 582, column: 3, scope: !4676)
!4687 = !DILocation(line: 589, column: 7, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 589, column: 6)
!4689 = !DILocation(line: 589, column: 15, scope: !4688)
!4690 = !DILocation(line: 589, column: 6, scope: !4657)
!4691 = !DILocation(line: 590, column: 3, scope: !4688)
!4692 = !DILocation(line: 592, column: 26, scope: !4657)
!4693 = !DILocation(line: 592, column: 34, scope: !4657)
!4694 = !DILocation(line: 592, column: 2, scope: !4657)
!4695 = !DILocation(line: 592, column: 8, scope: !4657)
!4696 = !DILocation(line: 592, column: 24, scope: !4657)
!4697 = !DILocation(line: 593, column: 26, scope: !4657)
!4698 = !DILocation(line: 593, column: 34, scope: !4657)
!4699 = !DILocation(line: 593, column: 2, scope: !4657)
!4700 = !DILocation(line: 593, column: 8, scope: !4657)
!4701 = !DILocation(line: 593, column: 24, scope: !4657)
!4702 = !DILocation(line: 594, column: 21, scope: !4657)
!4703 = !DILocation(line: 594, column: 29, scope: !4657)
!4704 = !DILocation(line: 594, column: 2, scope: !4657)
!4705 = !DILocation(line: 594, column: 8, scope: !4657)
!4706 = !DILocation(line: 594, column: 19, scope: !4657)
!4707 = !DILocation(line: 595, column: 20, scope: !4657)
!4708 = !DILocation(line: 595, column: 28, scope: !4657)
!4709 = !DILocation(line: 595, column: 2, scope: !4657)
!4710 = !DILocation(line: 595, column: 8, scope: !4657)
!4711 = !DILocation(line: 595, column: 18, scope: !4657)
!4712 = !DILocation(line: 596, column: 20, scope: !4657)
!4713 = !DILocation(line: 596, column: 28, scope: !4657)
!4714 = !DILocation(line: 596, column: 2, scope: !4657)
!4715 = !DILocation(line: 596, column: 8, scope: !4657)
!4716 = !DILocation(line: 596, column: 18, scope: !4657)
!4717 = !DILocation(line: 597, column: 23, scope: !4657)
!4718 = !DILocation(line: 597, column: 31, scope: !4657)
!4719 = !DILocation(line: 597, column: 2, scope: !4657)
!4720 = !DILocation(line: 597, column: 8, scope: !4657)
!4721 = !DILocation(line: 597, column: 21, scope: !4657)
!4722 = !DILocation(line: 598, column: 30, scope: !4657)
!4723 = !DILocation(line: 598, column: 38, scope: !4657)
!4724 = !DILocation(line: 598, column: 2, scope: !4657)
!4725 = !DILocation(line: 598, column: 8, scope: !4657)
!4726 = !DILocation(line: 598, column: 28, scope: !4657)
!4727 = !DILocation(line: 599, column: 27, scope: !4657)
!4728 = !DILocation(line: 599, column: 35, scope: !4657)
!4729 = !DILocation(line: 599, column: 2, scope: !4657)
!4730 = !DILocation(line: 599, column: 8, scope: !4657)
!4731 = !DILocation(line: 599, column: 25, scope: !4657)
!4732 = !DILocation(line: 600, column: 22, scope: !4657)
!4733 = !DILocation(line: 600, column: 30, scope: !4657)
!4734 = !DILocation(line: 600, column: 21, scope: !4657)
!4735 = !DILocation(line: 600, column: 20, scope: !4657)
!4736 = !DILocation(line: 600, column: 2, scope: !4657)
!4737 = !DILocation(line: 600, column: 8, scope: !4657)
!4738 = !DILocation(line: 600, column: 18, scope: !4657)
!4739 = !DILocation(line: 601, column: 23, scope: !4657)
!4740 = !DILocation(line: 601, column: 31, scope: !4657)
!4741 = !DILocation(line: 601, column: 22, scope: !4657)
!4742 = !DILocation(line: 601, column: 21, scope: !4657)
!4743 = !DILocation(line: 601, column: 2, scope: !4657)
!4744 = !DILocation(line: 601, column: 8, scope: !4657)
!4745 = !DILocation(line: 601, column: 19, scope: !4657)
!4746 = !DILocation(line: 602, column: 26, scope: !4657)
!4747 = !DILocation(line: 602, column: 34, scope: !4657)
!4748 = !DILocation(line: 602, column: 25, scope: !4657)
!4749 = !DILocation(line: 602, column: 24, scope: !4657)
!4750 = !DILocation(line: 602, column: 2, scope: !4657)
!4751 = !DILocation(line: 602, column: 8, scope: !4657)
!4752 = !DILocation(line: 602, column: 22, scope: !4657)
!4753 = !DILocation(line: 611, column: 6, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 611, column: 6)
!4755 = !DILocation(line: 611, column: 14, scope: !4754)
!4756 = !DILocation(line: 611, column: 6, scope: !4657)
!4757 = !DILocation(line: 612, column: 3, scope: !4754)
!4758 = !DILocation(line: 612, column: 11, scope: !4754)
!4759 = !DILocation(line: 612, column: 23, scope: !4754)
!4760 = !DILocation(line: 612, column: 29, scope: !4754)
!4761 = !DILocation(line: 614, column: 2, scope: !4657)
!4762 = !DILocation(line: 615, column: 1, scope: !4657)
!4763 = distinct !DISubprogram(name: "test_bit", scope: !4764, file: !4764, line: 132, type: !4765, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4764 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!4765 = !DISubroutineType(types: !4766)
!4766 = !{!267, !226, !4767}
!4767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4768, size: 64)
!4768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4769)
!4769 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !288)
!4770 = !DILocalVariable(name: "nr", arg: 1, scope: !4771, file: !4772, line: 210, type: !226)
!4771 = distinct !DISubprogram(name: "variable_test_bit", scope: !4772, file: !4772, line: 210, type: !4765, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4772 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!4773 = !DILocation(line: 210, column: 52, scope: !4771, inlinedAt: !4774)
!4774 = distinct !DILocation(line: 135, column: 9, scope: !4763)
!4775 = !DILocalVariable(name: "addr", arg: 2, scope: !4771, file: !4772, line: 210, type: !4767)
!4776 = !DILocation(line: 210, column: 86, scope: !4771, inlinedAt: !4774)
!4777 = !DILocalVariable(name: "oldbit", scope: !4771, file: !4772, line: 212, type: !267)
!4778 = !DILocation(line: 212, column: 7, scope: !4771, inlinedAt: !4774)
!4779 = !DILocalVariable(name: "nr", arg: 1, scope: !4780, file: !4772, line: 204, type: !226)
!4780 = distinct !DISubprogram(name: "constant_test_bit", scope: !4772, file: !4772, line: 204, type: !4765, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4781 = !DILocation(line: 204, column: 52, scope: !4780, inlinedAt: !4782)
!4782 = distinct !DILocation(line: 135, column: 9, scope: !4763)
!4783 = !DILocalVariable(name: "addr", arg: 2, scope: !4780, file: !4772, line: 204, type: !4767)
!4784 = !DILocation(line: 204, column: 86, scope: !4780, inlinedAt: !4782)
!4785 = !DILocalVariable(name: "v", arg: 1, scope: !4786, file: !4787, line: 69, type: !4790)
!4786 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !4787, file: !4787, line: 69, type: !4788, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4787 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!4788 = !DISubroutineType(types: !4789)
!4789 = !{null, !4790, !404}
!4790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4791, size: 64)
!4791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4792)
!4792 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4793 = !DILocation(line: 69, column: 73, scope: !4786, inlinedAt: !4794)
!4794 = distinct !DILocation(line: 134, column: 2, scope: !4763)
!4795 = !DILocalVariable(name: "size", arg: 2, scope: !4786, file: !4787, line: 69, type: !404)
!4796 = !DILocation(line: 69, column: 83, scope: !4786, inlinedAt: !4794)
!4797 = !DILocalVariable(name: "nr", arg: 1, scope: !4763, file: !4764, line: 132, type: !226)
!4798 = !DILocation(line: 132, column: 34, scope: !4763)
!4799 = !DILocalVariable(name: "addr", arg: 2, scope: !4763, file: !4764, line: 132, type: !4767)
!4800 = !DILocation(line: 132, column: 68, scope: !4763)
!4801 = !DILocation(line: 134, column: 25, scope: !4763)
!4802 = !DILocation(line: 134, column: 32, scope: !4763)
!4803 = !DILocation(line: 134, column: 30, scope: !4763)
!4804 = !DILocation(line: 71, column: 19, scope: !4786, inlinedAt: !4794)
!4805 = !DILocation(line: 71, column: 22, scope: !4786, inlinedAt: !4794)
!4806 = !DILocation(line: 71, column: 2, scope: !4786, inlinedAt: !4794)
!4807 = !DILocation(line: 72, column: 2, scope: !4786, inlinedAt: !4794)
!4808 = !DILocation(line: 135, column: 9, scope: !4763)
!4809 = !DILocation(line: 206, column: 19, scope: !4780, inlinedAt: !4782)
!4810 = !DILocation(line: 206, column: 22, scope: !4780, inlinedAt: !4782)
!4811 = !DILocation(line: 206, column: 15, scope: !4780, inlinedAt: !4782)
!4812 = !DILocation(line: 207, column: 4, scope: !4780, inlinedAt: !4782)
!4813 = !DILocation(line: 207, column: 9, scope: !4780, inlinedAt: !4782)
!4814 = !DILocation(line: 207, column: 12, scope: !4780, inlinedAt: !4782)
!4815 = !DILocation(line: 206, column: 44, scope: !4780, inlinedAt: !4782)
!4816 = !DILocation(line: 207, column: 37, scope: !4780, inlinedAt: !4782)
!4817 = !DILocation(line: 217, column: 33, scope: !4771, inlinedAt: !4774)
!4818 = !DILocation(line: 217, column: 46, scope: !4771, inlinedAt: !4774)
!4819 = !DILocation(line: 214, column: 2, scope: !4771, inlinedAt: !4774)
!4820 = !{i32 -2147013309, i32 -2147013249}
!4821 = !DILocation(line: 219, column: 9, scope: !4771, inlinedAt: !4774)
!4822 = !DILocation(line: 135, column: 2, scope: !4763)
!4823 = distinct !DISubprogram(name: "dma_get_slave_channel", scope: !3, file: !3, line: 696, type: !4824, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4824 = !DISubroutineType(types: !4825)
!4825 = !{!228, !228}
!4826 = !DILocalVariable(name: "chan", arg: 1, scope: !4823, file: !3, line: 696, type: !228)
!4827 = !DILocation(line: 696, column: 57, scope: !4823)
!4828 = !DILocalVariable(name: "err", scope: !4823, file: !3, line: 698, type: !249)
!4829 = !DILocation(line: 698, column: 6, scope: !4823)
!4830 = !DILocation(line: 701, column: 2, scope: !4823)
!4831 = !DILocation(line: 703, column: 6, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 703, column: 6)
!4833 = !DILocation(line: 703, column: 12, scope: !4832)
!4834 = !DILocation(line: 703, column: 25, scope: !4832)
!4835 = !DILocation(line: 703, column: 6, scope: !4823)
!4836 = !DILocalVariable(name: "device", scope: !4837, file: !3, line: 704, type: !232)
!4837 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 703, column: 31)
!4838 = !DILocation(line: 704, column: 22, scope: !4837)
!4839 = !DILocation(line: 704, column: 31, scope: !4837)
!4840 = !DILocation(line: 704, column: 37, scope: !4837)
!4841 = !DILocation(line: 706, column: 3, scope: !4837)
!4842 = !DILocation(line: 707, column: 3, scope: !4837)
!4843 = !DILocation(line: 707, column: 11, scope: !4837)
!4844 = !DILocation(line: 707, column: 21, scope: !4837)
!4845 = !DILocation(line: 708, column: 22, scope: !4837)
!4846 = !DILocation(line: 708, column: 9, scope: !4837)
!4847 = !DILocation(line: 708, column: 7, scope: !4837)
!4848 = !DILocation(line: 709, column: 7, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 709, column: 7)
!4850 = !DILocation(line: 709, column: 7, scope: !4837)
!4851 = !DILocation(line: 713, column: 9, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 709, column: 12)
!4853 = !DILocation(line: 714, column: 10, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4852, file: !3, line: 714, column: 8)
!4855 = !DILocation(line: 714, column: 18, scope: !4854)
!4856 = !DILocation(line: 714, column: 8, scope: !4854)
!4857 = !DILocation(line: 714, column: 29, scope: !4854)
!4858 = !DILocation(line: 714, column: 8, scope: !4852)
!4859 = !DILocation(line: 715, column: 5, scope: !4854)
!4860 = !DILocation(line: 716, column: 3, scope: !4852)
!4861 = !DILocation(line: 717, column: 2, scope: !4837)
!4862 = !DILocation(line: 718, column: 8, scope: !4832)
!4863 = !DILocation(line: 720, column: 2, scope: !4823)
!4864 = !DILocation(line: 723, column: 9, scope: !4823)
!4865 = !DILocation(line: 723, column: 2, scope: !4823)
!4866 = distinct !DISubprogram(name: "__dma_cap_set", scope: !6, file: !6, line: 1369, type: !4867, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{null, !174, !4638}
!4869 = !DILocalVariable(name: "tx_type", arg: 1, scope: !4866, file: !6, line: 1369, type: !174)
!4870 = !DILocation(line: 1369, column: 41, scope: !4866)
!4871 = !DILocalVariable(name: "dstp", arg: 2, scope: !4866, file: !6, line: 1369, type: !4638)
!4872 = !DILocation(line: 1369, column: 66, scope: !4866)
!4873 = !DILocation(line: 1371, column: 10, scope: !4866)
!4874 = !DILocation(line: 1371, column: 19, scope: !4866)
!4875 = !DILocation(line: 1371, column: 25, scope: !4866)
!4876 = !DILocation(line: 1371, column: 2, scope: !4866)
!4877 = !DILocation(line: 1372, column: 1, scope: !4866)
!4878 = distinct !DISubprogram(name: "dma_chan_get", scope: !3, file: !3, line: 446, type: !4039, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4879 = !DILocalVariable(name: "chan", arg: 1, scope: !4878, file: !3, line: 446, type: !228)
!4880 = !DILocation(line: 446, column: 42, scope: !4878)
!4881 = !DILocalVariable(name: "owner", scope: !4878, file: !3, line: 448, type: !713)
!4882 = !DILocation(line: 448, column: 17, scope: !4878)
!4883 = !DILocation(line: 448, column: 43, scope: !4878)
!4884 = !DILocation(line: 448, column: 25, scope: !4878)
!4885 = !DILocalVariable(name: "ret", scope: !4878, file: !3, line: 449, type: !249)
!4886 = !DILocation(line: 449, column: 6, scope: !4878)
!4887 = !DILocation(line: 452, column: 6, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 452, column: 6)
!4889 = !DILocation(line: 452, column: 12, scope: !4888)
!4890 = !DILocation(line: 452, column: 6, scope: !4878)
!4891 = !DILocation(line: 453, column: 16, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 452, column: 26)
!4893 = !DILocation(line: 453, column: 3, scope: !4892)
!4894 = !DILocation(line: 454, column: 3, scope: !4892)
!4895 = !DILocation(line: 457, column: 22, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 457, column: 6)
!4897 = !DILocation(line: 457, column: 7, scope: !4896)
!4898 = !DILocation(line: 457, column: 6, scope: !4878)
!4899 = !DILocation(line: 458, column: 3, scope: !4896)
!4900 = !DILocation(line: 460, column: 30, scope: !4878)
!4901 = !DILocation(line: 460, column: 36, scope: !4878)
!4902 = !DILocation(line: 460, column: 44, scope: !4878)
!4903 = !DILocation(line: 460, column: 8, scope: !4878)
!4904 = !DILocation(line: 460, column: 6, scope: !4878)
!4905 = !DILocation(line: 461, column: 7, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 461, column: 6)
!4907 = !DILocation(line: 461, column: 6, scope: !4878)
!4908 = !DILocation(line: 462, column: 7, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 461, column: 12)
!4910 = !DILocation(line: 463, column: 3, scope: !4909)
!4911 = !DILocation(line: 467, column: 6, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 467, column: 6)
!4913 = !DILocation(line: 467, column: 12, scope: !4912)
!4914 = !DILocation(line: 467, column: 20, scope: !4912)
!4915 = !DILocation(line: 467, column: 6, scope: !4878)
!4916 = !DILocation(line: 468, column: 9, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 467, column: 49)
!4918 = !DILocation(line: 468, column: 15, scope: !4917)
!4919 = !DILocation(line: 468, column: 23, scope: !4917)
!4920 = !DILocation(line: 468, column: 51, scope: !4917)
!4921 = !DILocation(line: 468, column: 7, scope: !4917)
!4922 = !DILocation(line: 469, column: 7, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 469, column: 7)
!4924 = !DILocation(line: 469, column: 11, scope: !4923)
!4925 = !DILocation(line: 469, column: 7, scope: !4917)
!4926 = !DILocation(line: 470, column: 4, scope: !4923)
!4927 = !DILocation(line: 471, column: 2, scope: !4917)
!4928 = !DILocation(line: 473, column: 7, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 473, column: 6)
!4930 = !DILocation(line: 473, column: 6, scope: !4878)
!4931 = !DILocation(line: 474, column: 21, scope: !4929)
!4932 = !DILocation(line: 474, column: 3, scope: !4929)
!4933 = !DILabel(scope: !4878, name: "out", file: !3, line: 476)
!4934 = !DILocation(line: 476, column: 1, scope: !4878)
!4935 = !DILocation(line: 477, column: 2, scope: !4878)
!4936 = !DILocation(line: 477, column: 8, scope: !4878)
!4937 = !DILocation(line: 477, column: 20, scope: !4878)
!4938 = !DILocation(line: 478, column: 2, scope: !4878)
!4939 = !DILabel(scope: !4878, name: "err_out", file: !3, line: 480)
!4940 = !DILocation(line: 480, column: 1, scope: !4878)
!4941 = !DILocation(line: 481, column: 17, scope: !4878)
!4942 = !DILocation(line: 481, column: 23, scope: !4878)
!4943 = !DILocation(line: 481, column: 2, scope: !4878)
!4944 = !DILabel(scope: !4878, name: "module_put_out", file: !3, line: 482)
!4945 = !DILocation(line: 482, column: 1, scope: !4878)
!4946 = !DILocation(line: 483, column: 13, scope: !4878)
!4947 = !DILocation(line: 483, column: 2, scope: !4878)
!4948 = !DILocation(line: 484, column: 9, scope: !4878)
!4949 = !DILocation(line: 484, column: 2, scope: !4878)
!4950 = !DILocation(line: 485, column: 1, scope: !4878)
!4951 = distinct !DISubprogram(name: "__dma_cap_clear", scope: !6, file: !6, line: 1376, type: !4867, scopeLine: 1377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4952 = !DILocalVariable(name: "tx_type", arg: 1, scope: !4951, file: !6, line: 1376, type: !174)
!4953 = !DILocation(line: 1376, column: 43, scope: !4951)
!4954 = !DILocalVariable(name: "dstp", arg: 2, scope: !4951, file: !6, line: 1376, type: !4638)
!4955 = !DILocation(line: 1376, column: 68, scope: !4951)
!4956 = !DILocation(line: 1378, column: 12, scope: !4951)
!4957 = !DILocation(line: 1378, column: 21, scope: !4951)
!4958 = !DILocation(line: 1378, column: 27, scope: !4951)
!4959 = !DILocation(line: 1378, column: 2, scope: !4951)
!4960 = !DILocation(line: 1379, column: 1, scope: !4951)
!4961 = distinct !DISubprogram(name: "dma_get_any_slave_channel", scope: !3, file: !3, line: 727, type: !4962, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4962 = !DISubroutineType(types: !4963)
!4963 = !{!228, !232}
!4964 = !DILocalVariable(name: "device", arg: 1, scope: !4961, file: !3, line: 727, type: !232)
!4965 = !DILocation(line: 727, column: 63, scope: !4961)
!4966 = !DILocalVariable(name: "mask", scope: !4961, file: !3, line: 729, type: !283)
!4967 = !DILocation(line: 729, column: 17, scope: !4961)
!4968 = !DILocalVariable(name: "chan", scope: !4961, file: !3, line: 730, type: !228)
!4969 = !DILocation(line: 730, column: 19, scope: !4961)
!4970 = !DILocation(line: 732, column: 2, scope: !4961)
!4971 = !DILocation(line: 733, column: 2, scope: !4961)
!4972 = !DILocation(line: 736, column: 2, scope: !4961)
!4973 = !DILocation(line: 738, column: 24, scope: !4961)
!4974 = !DILocation(line: 738, column: 9, scope: !4961)
!4975 = !DILocation(line: 738, column: 7, scope: !4961)
!4976 = !DILocation(line: 740, column: 2, scope: !4961)
!4977 = !DILocation(line: 742, column: 16, scope: !4961)
!4978 = !DILocation(line: 742, column: 9, scope: !4961)
!4979 = !DILocation(line: 742, column: 31, scope: !4961)
!4980 = !DILocation(line: 742, column: 2, scope: !4961)
!4981 = distinct !DISubprogram(name: "__dma_cap_zero", scope: !6, file: !6, line: 1382, type: !4982, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4982 = !DISubroutineType(types: !4983)
!4983 = !{null, !4638}
!4984 = !DILocalVariable(name: "dstp", arg: 1, scope: !4981, file: !6, line: 1382, type: !4638)
!4985 = !DILocation(line: 1382, column: 51, scope: !4981)
!4986 = !DILocation(line: 1384, column: 14, scope: !4981)
!4987 = !DILocation(line: 1384, column: 20, scope: !4981)
!4988 = !DILocation(line: 1384, column: 2, scope: !4981)
!4989 = !DILocation(line: 1385, column: 1, scope: !4981)
!4990 = distinct !DISubprogram(name: "find_candidate", scope: !3, file: !3, line: 655, type: !4991, scopeLine: 658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!4991 = !DISubroutineType(types: !4992)
!4992 = !{!228, !232, !4993, !263, !269}
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4994, size: 64)
!4994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !283)
!4995 = !DILocalVariable(name: "device", arg: 1, scope: !4990, file: !3, line: 655, type: !232)
!4996 = !DILocation(line: 655, column: 59, scope: !4990)
!4997 = !DILocalVariable(name: "mask", arg: 2, scope: !4990, file: !3, line: 656, type: !4993)
!4998 = !DILocation(line: 656, column: 34, scope: !4990)
!4999 = !DILocalVariable(name: "fn", arg: 3, scope: !4990, file: !3, line: 657, type: !263)
!5000 = !DILocation(line: 657, column: 26, scope: !4990)
!5001 = !DILocalVariable(name: "fn_param", arg: 4, scope: !4990, file: !3, line: 657, type: !269)
!5002 = !DILocation(line: 657, column: 36, scope: !4990)
!5003 = !DILocalVariable(name: "chan", scope: !4990, file: !3, line: 659, type: !228)
!5004 = !DILocation(line: 659, column: 19, scope: !4990)
!5005 = !DILocation(line: 659, column: 44, scope: !4990)
!5006 = !DILocation(line: 659, column: 50, scope: !4990)
!5007 = !DILocation(line: 659, column: 58, scope: !4990)
!5008 = !DILocation(line: 659, column: 62, scope: !4990)
!5009 = !DILocation(line: 659, column: 26, scope: !4990)
!5010 = !DILocalVariable(name: "err", scope: !4990, file: !3, line: 660, type: !249)
!5011 = !DILocation(line: 660, column: 6, scope: !4990)
!5012 = !DILocation(line: 662, column: 6, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 662, column: 6)
!5014 = !DILocation(line: 662, column: 6, scope: !4990)
!5015 = !DILocation(line: 668, column: 3, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5013, file: !3, line: 662, column: 12)
!5017 = !DILocation(line: 669, column: 3, scope: !5016)
!5018 = !DILocation(line: 669, column: 11, scope: !5016)
!5019 = !DILocation(line: 669, column: 21, scope: !5016)
!5020 = !DILocation(line: 670, column: 22, scope: !5016)
!5021 = !DILocation(line: 670, column: 9, scope: !5016)
!5022 = !DILocation(line: 670, column: 7, scope: !5016)
!5023 = !DILocation(line: 672, column: 7, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 672, column: 7)
!5025 = !DILocation(line: 672, column: 7, scope: !5016)
!5026 = !DILocation(line: 673, column: 8, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 673, column: 8)
!5028 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 672, column: 12)
!5029 = !DILocation(line: 673, column: 12, scope: !5027)
!5030 = !DILocation(line: 673, column: 8, scope: !5028)
!5031 = !DILocation(line: 676, column: 19, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 673, column: 24)
!5033 = !DILocation(line: 676, column: 27, scope: !5032)
!5034 = !DILocation(line: 676, column: 5, scope: !5032)
!5035 = !DILocation(line: 677, column: 4, scope: !5032)
!5036 = !DILocation(line: 682, column: 10, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 682, column: 8)
!5038 = !DILocation(line: 682, column: 18, scope: !5037)
!5039 = !DILocation(line: 682, column: 8, scope: !5037)
!5040 = !DILocation(line: 682, column: 29, scope: !5037)
!5041 = !DILocation(line: 682, column: 8, scope: !5028)
!5042 = !DILocation(line: 683, column: 5, scope: !5037)
!5043 = !DILocation(line: 685, column: 19, scope: !5028)
!5044 = !DILocation(line: 685, column: 11, scope: !5028)
!5045 = !DILocation(line: 685, column: 9, scope: !5028)
!5046 = !DILocation(line: 686, column: 3, scope: !5028)
!5047 = !DILocation(line: 687, column: 2, scope: !5016)
!5048 = !DILocation(line: 689, column: 9, scope: !4990)
!5049 = !DILocation(line: 689, column: 16, scope: !4990)
!5050 = !DILocation(line: 689, column: 23, scope: !4990)
!5051 = !DILocation(line: 689, column: 2, scope: !4990)
!5052 = distinct !DISubprogram(name: "IS_ERR", scope: !5053, file: !5053, line: 34, type: !5054, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5053 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5054 = !DISubroutineType(types: !5055)
!5055 = !{!267, !2236}
!5056 = !DILocalVariable(name: "ptr", arg: 1, scope: !5052, file: !5053, line: 34, type: !2236)
!5057 = !DILocation(line: 34, column: 60, scope: !5052)
!5058 = !DILocation(line: 36, column: 9, scope: !5052)
!5059 = !DILocation(line: 36, column: 2, scope: !5052)
!5060 = distinct !DISubprogram(name: "__dma_request_channel", scope: !3, file: !3, line: 755, type: !5061, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5061 = !DISubroutineType(types: !5062)
!5062 = !{!228, !4993, !263, !269, !3770}
!5063 = !DILocalVariable(name: "mask", arg: 1, scope: !5060, file: !3, line: 755, type: !4993)
!5064 = !DILocation(line: 755, column: 62, scope: !5060)
!5065 = !DILocalVariable(name: "fn", arg: 2, scope: !5060, file: !3, line: 756, type: !263)
!5066 = !DILocation(line: 756, column: 26, scope: !5060)
!5067 = !DILocalVariable(name: "fn_param", arg: 3, scope: !5060, file: !3, line: 756, type: !269)
!5068 = !DILocation(line: 756, column: 36, scope: !5060)
!5069 = !DILocalVariable(name: "np", arg: 4, scope: !5060, file: !3, line: 757, type: !3770)
!5070 = !DILocation(line: 757, column: 32, scope: !5060)
!5071 = !DILocalVariable(name: "device", scope: !5060, file: !3, line: 759, type: !232)
!5072 = !DILocation(line: 759, column: 21, scope: !5060)
!5073 = !DILocalVariable(name: "_d", scope: !5060, file: !3, line: 759, type: !232)
!5074 = !DILocation(line: 759, column: 30, scope: !5060)
!5075 = !DILocalVariable(name: "chan", scope: !5060, file: !3, line: 760, type: !228)
!5076 = !DILocation(line: 760, column: 19, scope: !5060)
!5077 = !DILocation(line: 763, column: 2, scope: !5060)
!5078 = !DILocalVariable(name: "__mptr", scope: !5079, file: !3, line: 764, type: !269)
!5079 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 764, column: 2)
!5080 = distinct !DILexicalBlock(scope: !5060, file: !3, line: 764, column: 2)
!5081 = !DILocation(line: 764, column: 2, scope: !5079)
!5082 = !DILocation(line: 764, column: 2, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 764, column: 2)
!5084 = !DILocation(line: 764, column: 2, scope: !5080)
!5085 = !DILocalVariable(name: "__mptr", scope: !5086, file: !3, line: 764, type: !269)
!5086 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 764, column: 2)
!5087 = !DILocation(line: 764, column: 2, scope: !5086)
!5088 = !DILocation(line: 764, column: 2, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5086, file: !3, line: 764, column: 2)
!5090 = !DILocation(line: 764, column: 2, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 764, column: 2)
!5092 = !DILocation(line: 766, column: 7, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 766, column: 7)
!5094 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 764, column: 70)
!5095 = !DILocation(line: 766, column: 10, scope: !5093)
!5096 = !DILocation(line: 766, column: 13, scope: !5093)
!5097 = !DILocation(line: 766, column: 21, scope: !5093)
!5098 = !DILocation(line: 766, column: 26, scope: !5093)
!5099 = !DILocation(line: 766, column: 34, scope: !5093)
!5100 = !DILocation(line: 766, column: 37, scope: !5093)
!5101 = !DILocation(line: 766, column: 43, scope: !5093)
!5102 = !DILocation(line: 766, column: 51, scope: !5093)
!5103 = !DILocation(line: 766, column: 56, scope: !5093)
!5104 = !DILocation(line: 766, column: 40, scope: !5093)
!5105 = !DILocation(line: 766, column: 7, scope: !5094)
!5106 = !DILocation(line: 767, column: 4, scope: !5093)
!5107 = !DILocation(line: 769, column: 25, scope: !5094)
!5108 = !DILocation(line: 769, column: 33, scope: !5094)
!5109 = !DILocation(line: 769, column: 39, scope: !5094)
!5110 = !DILocation(line: 769, column: 43, scope: !5094)
!5111 = !DILocation(line: 769, column: 10, scope: !5094)
!5112 = !DILocation(line: 769, column: 8, scope: !5094)
!5113 = !DILocation(line: 770, column: 15, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 770, column: 7)
!5115 = !DILocation(line: 770, column: 8, scope: !5114)
!5116 = !DILocation(line: 770, column: 7, scope: !5094)
!5117 = !DILocation(line: 771, column: 4, scope: !5114)
!5118 = !DILocation(line: 773, column: 8, scope: !5094)
!5119 = !DILocation(line: 774, column: 2, scope: !5094)
!5120 = !DILocalVariable(name: "__mptr", scope: !5121, file: !3, line: 764, type: !269)
!5121 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 764, column: 2)
!5122 = !DILocation(line: 764, column: 2, scope: !5121)
!5123 = !DILocation(line: 764, column: 2, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5121, file: !3, line: 764, column: 2)
!5125 = distinct !{!5125, !5084, !5126}
!5126 = !DILocation(line: 774, column: 2, scope: !5080)
!5127 = !DILocation(line: 775, column: 2, scope: !5060)
!5128 = !DILocation(line: 777, column: 2, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 777, column: 2)
!5130 = distinct !DILexicalBlock(scope: !5060, file: !3, line: 777, column: 2)
!5131 = !DILocation(line: 777, column: 2, scope: !5130)
!5132 = !DILocation(line: 782, column: 9, scope: !5060)
!5133 = !DILocation(line: 782, column: 2, scope: !5060)
!5134 = distinct !DISubprogram(name: "dma_request_chan", scope: !3, file: !3, line: 813, type: !5135, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5135 = !DISubroutineType(types: !5136)
!5136 = !{!228, !301, !277}
!5137 = !DILocalVariable(name: "dev", arg: 1, scope: !5134, file: !3, line: 813, type: !301)
!5138 = !DILocation(line: 813, column: 50, scope: !5134)
!5139 = !DILocalVariable(name: "name", arg: 2, scope: !5134, file: !3, line: 813, type: !277)
!5140 = !DILocation(line: 813, column: 67, scope: !5134)
!5141 = !DILocalVariable(name: "d", scope: !5134, file: !3, line: 815, type: !232)
!5142 = !DILocation(line: 815, column: 21, scope: !5134)
!5143 = !DILocalVariable(name: "_d", scope: !5134, file: !3, line: 815, type: !232)
!5144 = !DILocation(line: 815, column: 25, scope: !5134)
!5145 = !DILocalVariable(name: "chan", scope: !5134, file: !3, line: 816, type: !228)
!5146 = !DILocation(line: 816, column: 19, scope: !5134)
!5147 = !DILocation(line: 819, column: 6, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 819, column: 6)
!5149 = !DILocation(line: 819, column: 11, scope: !5148)
!5150 = !DILocation(line: 819, column: 6, scope: !5134)
!5151 = !DILocation(line: 820, column: 39, scope: !5148)
!5152 = !DILocation(line: 820, column: 44, scope: !5148)
!5153 = !DILocation(line: 820, column: 53, scope: !5148)
!5154 = !DILocation(line: 820, column: 10, scope: !5148)
!5155 = !DILocation(line: 820, column: 8, scope: !5148)
!5156 = !DILocation(line: 820, column: 3, scope: !5148)
!5157 = !DILocation(line: 823, column: 25, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 823, column: 6)
!5159 = !DILocation(line: 823, column: 6, scope: !5158)
!5160 = !DILocation(line: 823, column: 30, scope: !5158)
!5161 = !DILocation(line: 823, column: 34, scope: !5158)
!5162 = !DILocation(line: 823, column: 6, scope: !5134)
!5163 = !DILocation(line: 824, column: 46, scope: !5158)
!5164 = !DILocation(line: 824, column: 51, scope: !5158)
!5165 = !DILocation(line: 824, column: 10, scope: !5158)
!5166 = !DILocation(line: 824, column: 8, scope: !5158)
!5167 = !DILocation(line: 824, column: 3, scope: !5158)
!5168 = !DILocation(line: 826, column: 14, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 826, column: 6)
!5170 = !DILocation(line: 826, column: 6, scope: !5169)
!5171 = !DILocation(line: 826, column: 20, scope: !5169)
!5172 = !DILocation(line: 826, column: 6, scope: !5134)
!5173 = !DILocation(line: 827, column: 10, scope: !5169)
!5174 = !DILocation(line: 827, column: 3, scope: !5169)
!5175 = !DILocation(line: 829, column: 22, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 829, column: 6)
!5177 = !DILocation(line: 829, column: 7, scope: !5176)
!5178 = !DILocation(line: 829, column: 6, scope: !5134)
!5179 = !DILocation(line: 830, column: 3, scope: !5176)
!5180 = !DILocation(line: 833, column: 2, scope: !5134)
!5181 = !DILocalVariable(name: "__mptr", scope: !5182, file: !3, line: 834, type: !269)
!5182 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 834, column: 2)
!5183 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 834, column: 2)
!5184 = !DILocation(line: 834, column: 2, scope: !5182)
!5185 = !DILocation(line: 834, column: 2, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 834, column: 2)
!5187 = !DILocation(line: 834, column: 2, scope: !5183)
!5188 = !DILocalVariable(name: "__mptr", scope: !5189, file: !3, line: 834, type: !269)
!5189 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 834, column: 2)
!5190 = !DILocation(line: 834, column: 2, scope: !5189)
!5191 = !DILocation(line: 834, column: 2, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 834, column: 2)
!5193 = !DILocation(line: 834, column: 2, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 834, column: 2)
!5195 = !DILocalVariable(name: "mask", scope: !5196, file: !3, line: 835, type: !283)
!5196 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 834, column: 65)
!5197 = !DILocation(line: 835, column: 18, scope: !5196)
!5198 = !DILocalVariable(name: "map", scope: !5196, file: !3, line: 836, type: !272)
!5199 = !DILocation(line: 836, column: 31, scope: !5196)
!5200 = !DILocation(line: 836, column: 54, scope: !5196)
!5201 = !DILocation(line: 836, column: 57, scope: !5196)
!5202 = !DILocation(line: 836, column: 63, scope: !5196)
!5203 = !DILocation(line: 836, column: 37, scope: !5196)
!5204 = !DILocation(line: 838, column: 8, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 838, column: 7)
!5206 = !DILocation(line: 838, column: 7, scope: !5196)
!5207 = !DILocation(line: 839, column: 4, scope: !5205)
!5208 = !DILocation(line: 841, column: 3, scope: !5196)
!5209 = !DILocation(line: 842, column: 3, scope: !5196)
!5210 = !DILocation(line: 844, column: 25, scope: !5196)
!5211 = !DILocation(line: 844, column: 35, scope: !5196)
!5212 = !DILocation(line: 844, column: 38, scope: !5196)
!5213 = !DILocation(line: 844, column: 45, scope: !5196)
!5214 = !DILocation(line: 844, column: 49, scope: !5196)
!5215 = !DILocation(line: 844, column: 54, scope: !5196)
!5216 = !DILocation(line: 844, column: 10, scope: !5196)
!5217 = !DILocation(line: 844, column: 8, scope: !5196)
!5218 = !DILocation(line: 845, column: 15, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 845, column: 7)
!5220 = !DILocation(line: 845, column: 8, scope: !5219)
!5221 = !DILocation(line: 845, column: 7, scope: !5196)
!5222 = !DILocation(line: 846, column: 4, scope: !5219)
!5223 = !DILocation(line: 847, column: 2, scope: !5196)
!5224 = !DILocalVariable(name: "__mptr", scope: !5225, file: !3, line: 834, type: !269)
!5225 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 834, column: 2)
!5226 = !DILocation(line: 834, column: 2, scope: !5225)
!5227 = !DILocation(line: 834, column: 2, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 834, column: 2)
!5229 = distinct !{!5229, !5187, !5230}
!5230 = !DILocation(line: 847, column: 2, scope: !5183)
!5231 = !DILocation(line: 848, column: 2, scope: !5134)
!5232 = !DILocation(line: 850, column: 13, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 850, column: 6)
!5234 = !DILocation(line: 850, column: 6, scope: !5233)
!5235 = !DILocation(line: 850, column: 6, scope: !5134)
!5236 = !DILocation(line: 851, column: 10, scope: !5233)
!5237 = !DILocation(line: 851, column: 3, scope: !5233)
!5238 = !DILocation(line: 852, column: 7, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 852, column: 6)
!5240 = !DILocation(line: 852, column: 6, scope: !5134)
!5241 = !DILocation(line: 853, column: 10, scope: !5239)
!5242 = !DILocation(line: 853, column: 3, scope: !5239)
!5243 = !DILabel(scope: !5134, name: "found", file: !3, line: 855)
!5244 = !DILocation(line: 855, column: 1, scope: !5134)
!5245 = !DILocation(line: 861, column: 47, scope: !5134)
!5246 = !DILocation(line: 861, column: 15, scope: !5134)
!5247 = !DILocation(line: 861, column: 2, scope: !5134)
!5248 = !DILocation(line: 861, column: 8, scope: !5134)
!5249 = !DILocation(line: 861, column: 13, scope: !5134)
!5250 = !DILocation(line: 862, column: 7, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 862, column: 6)
!5252 = !DILocation(line: 862, column: 13, scope: !5251)
!5253 = !DILocation(line: 862, column: 6, scope: !5134)
!5254 = !DILocation(line: 863, column: 10, scope: !5251)
!5255 = !DILocation(line: 863, column: 3, scope: !5251)
!5256 = !DILocation(line: 864, column: 16, scope: !5134)
!5257 = !DILocation(line: 864, column: 2, scope: !5134)
!5258 = !DILocation(line: 864, column: 8, scope: !5134)
!5259 = !DILocation(line: 864, column: 14, scope: !5134)
!5260 = !DILocation(line: 866, column: 25, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 866, column: 6)
!5262 = !DILocation(line: 866, column: 31, scope: !5261)
!5263 = !DILocation(line: 866, column: 36, scope: !5261)
!5264 = !DILocation(line: 866, column: 43, scope: !5261)
!5265 = !DILocation(line: 866, column: 50, scope: !5261)
!5266 = !DILocation(line: 866, column: 55, scope: !5261)
!5267 = !DILocation(line: 866, column: 6, scope: !5261)
!5268 = !DILocation(line: 866, column: 6, scope: !5134)
!5269 = !DILocation(line: 868, column: 3, scope: !5261)
!5270 = !DILocation(line: 869, column: 25, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 869, column: 6)
!5272 = !DILocation(line: 869, column: 30, scope: !5271)
!5273 = !DILocation(line: 869, column: 37, scope: !5271)
!5274 = !DILocation(line: 869, column: 43, scope: !5271)
!5275 = !DILocation(line: 869, column: 48, scope: !5271)
!5276 = !DILocation(line: 869, column: 55, scope: !5271)
!5277 = !DILocation(line: 869, column: 61, scope: !5271)
!5278 = !DILocation(line: 869, column: 67, scope: !5271)
!5279 = !DILocation(line: 869, column: 6, scope: !5271)
!5280 = !DILocation(line: 869, column: 6, scope: !5134)
!5281 = !DILocation(line: 870, column: 3, scope: !5271)
!5282 = !DILocation(line: 872, column: 9, scope: !5134)
!5283 = !DILocation(line: 872, column: 2, scope: !5134)
!5284 = !DILocation(line: 873, column: 1, scope: !5134)
!5285 = distinct !DISubprogram(name: "has_acpi_companion", scope: !5286, file: !5286, line: 84, type: !5287, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5286 = !DIFile(filename: "./include/linux/acpi.h", directory: "/home/lizy2001/genbc/linux")
!5287 = !DISubroutineType(types: !5288)
!5288 = !{!267, !301}
!5289 = !DILocalVariable(name: "dev", arg: 1, scope: !5285, file: !5286, line: 84, type: !301)
!5290 = !DILocation(line: 84, column: 54, scope: !5285)
!5291 = !DILocation(line: 86, column: 29, scope: !5285)
!5292 = !DILocation(line: 86, column: 34, scope: !5285)
!5293 = !DILocation(line: 86, column: 9, scope: !5285)
!5294 = !DILocation(line: 86, column: 2, scope: !5285)
!5295 = distinct !DISubprogram(name: "PTR_ERR", scope: !5053, file: !5053, line: 29, type: !5296, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5296 = !DISubroutineType(types: !5297)
!5297 = !{!226, !2236}
!5298 = !DILocalVariable(name: "ptr", arg: 1, scope: !5295, file: !5053, line: 29, type: !2236)
!5299 = !DILocation(line: 29, column: 61, scope: !5295)
!5300 = !DILocation(line: 31, column: 16, scope: !5295)
!5301 = !DILocation(line: 31, column: 9, scope: !5295)
!5302 = !DILocation(line: 31, column: 2, scope: !5295)
!5303 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !5053, file: !5053, line: 39, type: !5054, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5304 = !DILocalVariable(name: "ptr", arg: 1, scope: !5303, file: !5053, line: 39, type: !2236)
!5305 = !DILocation(line: 39, column: 68, scope: !5303)
!5306 = !DILocation(line: 41, column: 9, scope: !5303)
!5307 = !DILocation(line: 41, column: 24, scope: !5303)
!5308 = !DILocation(line: 41, column: 27, scope: !5303)
!5309 = !DILocation(line: 41, column: 2, scope: !5303)
!5310 = distinct !DISubprogram(name: "dma_filter_match", scope: !3, file: !3, line: 786, type: !5311, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5311 = !DISubroutineType(types: !5312)
!5312 = !{!272, !232, !277, !301}
!5313 = !DILocalVariable(name: "device", arg: 1, scope: !5310, file: !3, line: 786, type: !232)
!5314 = !DILocation(line: 786, column: 72, scope: !5310)
!5315 = !DILocalVariable(name: "name", arg: 2, scope: !5310, file: !3, line: 787, type: !277)
!5316 = !DILocation(line: 787, column: 23, scope: !5310)
!5317 = !DILocalVariable(name: "dev", arg: 3, scope: !5310, file: !3, line: 788, type: !301)
!5318 = !DILocation(line: 788, column: 26, scope: !5310)
!5319 = !DILocalVariable(name: "i", scope: !5310, file: !3, line: 790, type: !249)
!5320 = !DILocation(line: 790, column: 6, scope: !5310)
!5321 = !DILocation(line: 792, column: 7, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 792, column: 6)
!5323 = !DILocation(line: 792, column: 15, scope: !5322)
!5324 = !DILocation(line: 792, column: 22, scope: !5322)
!5325 = !DILocation(line: 792, column: 6, scope: !5310)
!5326 = !DILocation(line: 793, column: 3, scope: !5322)
!5327 = !DILocation(line: 795, column: 9, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 795, column: 2)
!5329 = !DILocation(line: 795, column: 7, scope: !5328)
!5330 = !DILocation(line: 795, column: 14, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 795, column: 2)
!5332 = !DILocation(line: 795, column: 18, scope: !5331)
!5333 = !DILocation(line: 795, column: 26, scope: !5331)
!5334 = !DILocation(line: 795, column: 33, scope: !5331)
!5335 = !DILocation(line: 795, column: 16, scope: !5331)
!5336 = !DILocation(line: 795, column: 2, scope: !5328)
!5337 = !DILocalVariable(name: "map", scope: !5338, file: !3, line: 796, type: !272)
!5338 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 795, column: 46)
!5339 = !DILocation(line: 796, column: 31, scope: !5338)
!5340 = !DILocation(line: 796, column: 38, scope: !5338)
!5341 = !DILocation(line: 796, column: 46, scope: !5338)
!5342 = !DILocation(line: 796, column: 53, scope: !5338)
!5343 = !DILocation(line: 796, column: 57, scope: !5338)
!5344 = !DILocation(line: 798, column: 15, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 798, column: 7)
!5346 = !DILocation(line: 798, column: 20, scope: !5345)
!5347 = !DILocation(line: 798, column: 38, scope: !5345)
!5348 = !DILocation(line: 798, column: 29, scope: !5345)
!5349 = !DILocation(line: 798, column: 8, scope: !5345)
!5350 = !DILocation(line: 798, column: 44, scope: !5345)
!5351 = !DILocation(line: 799, column: 15, scope: !5345)
!5352 = !DILocation(line: 799, column: 20, scope: !5345)
!5353 = !DILocation(line: 799, column: 27, scope: !5345)
!5354 = !DILocation(line: 799, column: 8, scope: !5345)
!5355 = !DILocation(line: 798, column: 7, scope: !5338)
!5356 = !DILocation(line: 800, column: 11, scope: !5345)
!5357 = !DILocation(line: 800, column: 4, scope: !5345)
!5358 = !DILocation(line: 801, column: 2, scope: !5338)
!5359 = !DILocation(line: 795, column: 42, scope: !5331)
!5360 = !DILocation(line: 795, column: 2, scope: !5331)
!5361 = distinct !{!5361, !5336, !5362}
!5362 = !DILocation(line: 801, column: 2, scope: !5328)
!5363 = !DILocation(line: 803, column: 2, scope: !5310)
!5364 = !DILocation(line: 804, column: 1, scope: !5310)
!5365 = distinct !DISubprogram(name: "ERR_PTR", scope: !5053, file: !5053, line: 24, type: !5366, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{!269, !226}
!5368 = !DILocalVariable(name: "error", arg: 1, scope: !5365, file: !5053, line: 24, type: !226)
!5369 = !DILocation(line: 24, column: 48, scope: !5365)
!5370 = !DILocation(line: 26, column: 18, scope: !5365)
!5371 = !DILocation(line: 26, column: 9, scope: !5365)
!5372 = !DILocation(line: 26, column: 2, scope: !5365)
!5373 = distinct !DISubprogram(name: "dma_request_chan_by_mask", scope: !3, file: !3, line: 882, type: !5374, scopeLine: 883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5374 = !DISubroutineType(types: !5375)
!5375 = !{!228, !4993}
!5376 = !DILocalVariable(name: "mask", arg: 1, scope: !5373, file: !3, line: 882, type: !4993)
!5377 = !DILocation(line: 882, column: 65, scope: !5373)
!5378 = !DILocalVariable(name: "chan", scope: !5373, file: !3, line: 884, type: !228)
!5379 = !DILocation(line: 884, column: 19, scope: !5373)
!5380 = !DILocation(line: 886, column: 7, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 886, column: 6)
!5382 = !DILocation(line: 886, column: 6, scope: !5373)
!5383 = !DILocation(line: 887, column: 10, scope: !5381)
!5384 = !DILocation(line: 887, column: 3, scope: !5381)
!5385 = !DILocation(line: 889, column: 31, scope: !5373)
!5386 = !DILocation(line: 889, column: 9, scope: !5373)
!5387 = !DILocation(line: 889, column: 7, scope: !5373)
!5388 = !DILocation(line: 890, column: 7, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 890, column: 6)
!5390 = !DILocation(line: 890, column: 6, scope: !5373)
!5391 = !DILocation(line: 891, column: 3, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 890, column: 13)
!5393 = !DILocation(line: 892, column: 7, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 892, column: 7)
!5395 = !DILocation(line: 892, column: 7, scope: !5392)
!5396 = !DILocation(line: 893, column: 11, scope: !5394)
!5397 = !DILocation(line: 893, column: 9, scope: !5394)
!5398 = !DILocation(line: 893, column: 4, scope: !5394)
!5399 = !DILocation(line: 895, column: 11, scope: !5394)
!5400 = !DILocation(line: 895, column: 9, scope: !5394)
!5401 = !DILocation(line: 896, column: 3, scope: !5392)
!5402 = !DILocation(line: 897, column: 2, scope: !5392)
!5403 = !DILocation(line: 899, column: 9, scope: !5373)
!5404 = !DILocation(line: 899, column: 2, scope: !5373)
!5405 = !DILocation(line: 900, column: 1, scope: !5373)
!5406 = distinct !DISubprogram(name: "list_empty", scope: !5407, file: !5407, line: 280, type: !5408, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5407 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!5408 = !DISubroutineType(types: !5409)
!5409 = !{!249, !5410}
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!5412 = !DILocalVariable(name: "head", arg: 1, scope: !5406, file: !5407, line: 280, type: !5410)
!5413 = !DILocation(line: 280, column: 54, scope: !5406)
!5414 = !DILocation(line: 282, column: 9, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5406, file: !5407, line: 282, column: 9)
!5416 = !DILocation(line: 282, column: 9, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5415, file: !5407, line: 282, column: 9)
!5418 = !DILocation(line: 282, column: 34, scope: !5406)
!5419 = !DILocation(line: 282, column: 31, scope: !5406)
!5420 = !DILocation(line: 282, column: 2, scope: !5406)
!5421 = !DILocalVariable(name: "chan", arg: 1, scope: !4300, file: !3, line: 903, type: !228)
!5422 = !DILocation(line: 903, column: 43, scope: !4300)
!5423 = !DILocation(line: 905, column: 2, scope: !4300)
!5424 = !DILocalVariable(name: "__ret_warn_once", scope: !5425, file: !3, line: 906, type: !249)
!5425 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 906, column: 2)
!5426 = !DILocation(line: 906, column: 2, scope: !5425)
!5427 = !DILocation(line: 906, column: 2, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 906, column: 2)
!5429 = !DILocation(line: 0, scope: !5428)
!5430 = !DILocation(line: 906, column: 2, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 906, column: 2)
!5432 = !DILocalVariable(name: "__ret_warn_on", scope: !5433, file: !3, line: 906, type: !249)
!5433 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 906, column: 2)
!5434 = !DILocation(line: 906, column: 2, scope: !5433)
!5435 = !DILocation(line: 906, column: 2, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 906, column: 2)
!5437 = !DILocation(line: 906, column: 2, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 906, column: 2)
!5439 = !DILocation(line: 906, column: 2, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 906, column: 2)
!5441 = !DILocation(line: 906, column: 2, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 906, column: 2)
!5443 = !DILocation(line: 906, column: 2, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5442, file: !3, line: 906, column: 2)
!5445 = !DILocation(line: 906, column: 2, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5442, file: !3, line: 906, column: 2)
!5447 = !{i32 -2141278225, i32 -2141278196, i32 -2141278150, i32 -2141278092, i32 -2141278038, i32 -2141277984, i32 -2141277929, i32 -2141277898}
!5448 = !DILocation(line: 906, column: 2, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5442, file: !3, line: 906, column: 2)
!5450 = !{i32 -2141277482, i32 -2141277475, i32 -2141277423, i32 -2141277392, i32 -2141277362}
!5451 = !DILocation(line: 906, column: 2, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5442, file: !3, line: 906, column: 2)
!5453 = !DILocation(line: 906, column: 2, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 906, column: 2)
!5455 = !DILocation(line: 908, column: 15, scope: !4300)
!5456 = !DILocation(line: 908, column: 2, scope: !4300)
!5457 = !DILocation(line: 910, column: 8, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 910, column: 6)
!5459 = !DILocation(line: 910, column: 14, scope: !5458)
!5460 = !DILocation(line: 910, column: 22, scope: !5458)
!5461 = !DILocation(line: 910, column: 6, scope: !5458)
!5462 = !DILocation(line: 910, column: 33, scope: !5458)
!5463 = !DILocation(line: 910, column: 6, scope: !4300)
!5464 = !DILocation(line: 911, column: 3, scope: !5458)
!5465 = !DILocation(line: 913, column: 6, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !4300, file: !3, line: 913, column: 6)
!5467 = !DILocation(line: 913, column: 12, scope: !5466)
!5468 = !DILocation(line: 913, column: 6, scope: !4300)
!5469 = !DILocation(line: 914, column: 22, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 913, column: 19)
!5471 = !DILocation(line: 914, column: 28, scope: !5470)
!5472 = !DILocation(line: 914, column: 33, scope: !5470)
!5473 = !DILocation(line: 914, column: 40, scope: !5470)
!5474 = !DILocation(line: 914, column: 3, scope: !5470)
!5475 = !DILocation(line: 915, column: 22, scope: !5470)
!5476 = !DILocation(line: 915, column: 28, scope: !5470)
!5477 = !DILocation(line: 915, column: 35, scope: !5470)
!5478 = !DILocation(line: 915, column: 41, scope: !5470)
!5479 = !DILocation(line: 915, column: 47, scope: !5470)
!5480 = !DILocation(line: 915, column: 3, scope: !5470)
!5481 = !DILocation(line: 916, column: 9, scope: !5470)
!5482 = !DILocation(line: 916, column: 15, scope: !5470)
!5483 = !DILocation(line: 916, column: 3, scope: !5470)
!5484 = !DILocation(line: 917, column: 3, scope: !5470)
!5485 = !DILocation(line: 917, column: 9, scope: !5470)
!5486 = !DILocation(line: 917, column: 14, scope: !5470)
!5487 = !DILocation(line: 918, column: 3, scope: !5470)
!5488 = !DILocation(line: 918, column: 9, scope: !5470)
!5489 = !DILocation(line: 918, column: 15, scope: !5470)
!5490 = !DILocation(line: 919, column: 2, scope: !5470)
!5491 = !DILocation(line: 925, column: 2, scope: !4300)
!5492 = !DILocation(line: 926, column: 1, scope: !4300)
!5493 = distinct !DISubprogram(name: "dma_chan_put", scope: !3, file: !3, line: 493, type: !4043, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5494 = !DILocalVariable(name: "chan", arg: 1, scope: !5493, file: !3, line: 493, type: !228)
!5495 = !DILocation(line: 493, column: 43, scope: !5493)
!5496 = !DILocation(line: 496, column: 7, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 496, column: 6)
!5498 = !DILocation(line: 496, column: 13, scope: !5497)
!5499 = !DILocation(line: 496, column: 6, scope: !5493)
!5500 = !DILocation(line: 497, column: 3, scope: !5497)
!5501 = !DILocation(line: 499, column: 2, scope: !5493)
!5502 = !DILocation(line: 499, column: 8, scope: !5493)
!5503 = !DILocation(line: 499, column: 20, scope: !5493)
!5504 = !DILocation(line: 502, column: 7, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 502, column: 6)
!5506 = !DILocation(line: 502, column: 13, scope: !5505)
!5507 = !DILocation(line: 502, column: 26, scope: !5505)
!5508 = !DILocation(line: 502, column: 29, scope: !5505)
!5509 = !DILocation(line: 502, column: 35, scope: !5505)
!5510 = !DILocation(line: 502, column: 43, scope: !5505)
!5511 = !DILocation(line: 502, column: 6, scope: !5493)
!5512 = !DILocation(line: 504, column: 25, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 502, column: 71)
!5514 = !DILocation(line: 504, column: 3, scope: !5513)
!5515 = !DILocation(line: 505, column: 3, scope: !5513)
!5516 = !DILocation(line: 505, column: 9, scope: !5513)
!5517 = !DILocation(line: 505, column: 17, scope: !5513)
!5518 = !DILocation(line: 505, column: 44, scope: !5513)
!5519 = !DILocation(line: 506, column: 2, scope: !5513)
!5520 = !DILocation(line: 509, column: 6, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 509, column: 6)
!5522 = !DILocation(line: 509, column: 12, scope: !5521)
!5523 = !DILocation(line: 509, column: 19, scope: !5521)
!5524 = !DILocation(line: 509, column: 22, scope: !5521)
!5525 = !DILocation(line: 509, column: 28, scope: !5521)
!5526 = !DILocation(line: 509, column: 36, scope: !5521)
!5527 = !DILocation(line: 509, column: 6, scope: !5493)
!5528 = !DILocation(line: 510, column: 3, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 509, column: 48)
!5530 = !DILocation(line: 510, column: 9, scope: !5529)
!5531 = !DILocation(line: 510, column: 17, scope: !5529)
!5532 = !DILocation(line: 510, column: 28, scope: !5529)
!5533 = !DILocation(line: 510, column: 34, scope: !5529)
!5534 = !DILocation(line: 510, column: 42, scope: !5529)
!5535 = !DILocation(line: 510, column: 47, scope: !5529)
!5536 = !DILocation(line: 510, column: 53, scope: !5529)
!5537 = !DILocation(line: 511, column: 3, scope: !5529)
!5538 = !DILocation(line: 511, column: 9, scope: !5529)
!5539 = !DILocation(line: 511, column: 16, scope: !5529)
!5540 = !DILocation(line: 512, column: 3, scope: !5529)
!5541 = !DILocation(line: 512, column: 9, scope: !5529)
!5542 = !DILocation(line: 512, column: 20, scope: !5529)
!5543 = !DILocation(line: 513, column: 2, scope: !5529)
!5544 = !DILocation(line: 515, column: 17, scope: !5493)
!5545 = !DILocation(line: 515, column: 23, scope: !5493)
!5546 = !DILocation(line: 515, column: 2, scope: !5493)
!5547 = !DILocation(line: 516, column: 31, scope: !5493)
!5548 = !DILocation(line: 516, column: 13, scope: !5493)
!5549 = !DILocation(line: 516, column: 2, scope: !5493)
!5550 = !DILocation(line: 517, column: 1, scope: !5493)
!5551 = distinct !DISubprogram(name: "dmaengine_get", scope: !3, file: !3, line: 932, type: !1989, scopeLine: 933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5552 = !DILocalVariable(name: "device", scope: !5551, file: !3, line: 934, type: !232)
!5553 = !DILocation(line: 934, column: 21, scope: !5551)
!5554 = !DILocalVariable(name: "_d", scope: !5551, file: !3, line: 934, type: !232)
!5555 = !DILocation(line: 934, column: 30, scope: !5551)
!5556 = !DILocalVariable(name: "chan", scope: !5551, file: !3, line: 935, type: !228)
!5557 = !DILocation(line: 935, column: 19, scope: !5551)
!5558 = !DILocalVariable(name: "err", scope: !5551, file: !3, line: 936, type: !249)
!5559 = !DILocation(line: 936, column: 6, scope: !5551)
!5560 = !DILocation(line: 938, column: 2, scope: !5551)
!5561 = !DILocation(line: 939, column: 21, scope: !5551)
!5562 = !DILocalVariable(name: "__mptr", scope: !5563, file: !3, line: 942, type: !269)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 942, column: 2)
!5564 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 942, column: 2)
!5565 = !DILocation(line: 942, column: 2, scope: !5563)
!5566 = !DILocation(line: 942, column: 2, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 942, column: 2)
!5568 = !DILocation(line: 942, column: 2, scope: !5564)
!5569 = !DILocalVariable(name: "__mptr", scope: !5570, file: !3, line: 942, type: !269)
!5570 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 942, column: 2)
!5571 = !DILocation(line: 942, column: 2, scope: !5570)
!5572 = !DILocation(line: 942, column: 2, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 942, column: 2)
!5574 = !DILocation(line: 942, column: 2, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 942, column: 2)
!5576 = !DILocation(line: 943, column: 7, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 943, column: 7)
!5578 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 942, column: 70)
!5579 = !DILocation(line: 943, column: 7, scope: !5578)
!5580 = !DILocation(line: 944, column: 4, scope: !5577)
!5581 = !DILocalVariable(name: "__mptr", scope: !5582, file: !3, line: 945, type: !269)
!5582 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 945, column: 3)
!5583 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 945, column: 3)
!5584 = !DILocation(line: 945, column: 3, scope: !5582)
!5585 = !DILocation(line: 945, column: 3, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 945, column: 3)
!5587 = !DILocation(line: 945, column: 3, scope: !5583)
!5588 = !DILocation(line: 945, column: 3, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 945, column: 3)
!5590 = !DILocation(line: 946, column: 23, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 945, column: 61)
!5592 = !DILocation(line: 946, column: 10, scope: !5591)
!5593 = !DILocation(line: 946, column: 8, scope: !5591)
!5594 = !DILocation(line: 947, column: 8, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 947, column: 8)
!5596 = !DILocation(line: 947, column: 12, scope: !5595)
!5597 = !DILocation(line: 947, column: 8, scope: !5591)
!5598 = !DILocation(line: 949, column: 19, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 947, column: 24)
!5600 = !DILocation(line: 949, column: 27, scope: !5599)
!5601 = !DILocation(line: 949, column: 5, scope: !5599)
!5602 = !DILocation(line: 950, column: 5, scope: !5599)
!5603 = !DILocation(line: 951, column: 15, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 951, column: 15)
!5605 = !DILocation(line: 951, column: 15, scope: !5595)
!5606 = !DILocation(line: 952, column: 5, scope: !5604)
!5607 = !DILocation(line: 955, column: 3, scope: !5591)
!5608 = !DILocalVariable(name: "__mptr", scope: !5609, file: !3, line: 945, type: !269)
!5609 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 945, column: 3)
!5610 = !DILocation(line: 945, column: 3, scope: !5609)
!5611 = !DILocation(line: 945, column: 3, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 945, column: 3)
!5613 = distinct !{!5613, !5587, !5614}
!5614 = !DILocation(line: 955, column: 3, scope: !5583)
!5615 = !DILocation(line: 956, column: 2, scope: !5578)
!5616 = !DILocalVariable(name: "__mptr", scope: !5617, file: !3, line: 942, type: !269)
!5617 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 942, column: 2)
!5618 = !DILocation(line: 942, column: 2, scope: !5617)
!5619 = !DILocation(line: 942, column: 2, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 942, column: 2)
!5621 = distinct !{!5621, !5568, !5622}
!5622 = !DILocation(line: 956, column: 2, scope: !5564)
!5623 = !DILocation(line: 962, column: 6, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 962, column: 6)
!5625 = !DILocation(line: 962, column: 26, scope: !5624)
!5626 = !DILocation(line: 962, column: 6, scope: !5551)
!5627 = !DILocation(line: 963, column: 3, scope: !5624)
!5628 = !DILocation(line: 964, column: 2, scope: !5551)
!5629 = !DILocation(line: 965, column: 1, scope: !5551)
!5630 = distinct !DISubprogram(name: "list_del_rcu", scope: !5631, file: !5631, line: 164, type: !5632, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5631 = !DIFile(filename: "./include/linux/rculist.h", directory: "/home/lizy2001/genbc/linux")
!5632 = !DISubroutineType(types: !5633)
!5633 = !{null, !256}
!5634 = !DILocalVariable(name: "entry", arg: 1, scope: !5630, file: !5631, line: 164, type: !256)
!5635 = !DILocation(line: 164, column: 51, scope: !5630)
!5636 = !DILocation(line: 166, column: 19, scope: !5630)
!5637 = !DILocation(line: 166, column: 2, scope: !5630)
!5638 = !DILocation(line: 167, column: 2, scope: !5630)
!5639 = !DILocation(line: 167, column: 9, scope: !5630)
!5640 = !DILocation(line: 167, column: 14, scope: !5630)
!5641 = !DILocation(line: 168, column: 1, scope: !5630)
!5642 = distinct !DISubprogram(name: "dma_channel_rebalance", scope: !3, file: !3, line: 361, type: !1989, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5643 = !DILocalVariable(name: "chan", scope: !5642, file: !3, line: 363, type: !228)
!5644 = !DILocation(line: 363, column: 19, scope: !5642)
!5645 = !DILocalVariable(name: "device", scope: !5642, file: !3, line: 364, type: !232)
!5646 = !DILocation(line: 364, column: 21, scope: !5642)
!5647 = !DILocalVariable(name: "cpu", scope: !5642, file: !3, line: 365, type: !249)
!5648 = !DILocation(line: 365, column: 6, scope: !5642)
!5649 = !DILocalVariable(name: "cap", scope: !5642, file: !3, line: 366, type: !249)
!5650 = !DILocation(line: 366, column: 6, scope: !5642)
!5651 = !DILocation(line: 369, column: 2, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 369, column: 2)
!5653 = !DILocation(line: 369, column: 2, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 369, column: 2)
!5655 = !DILocation(line: 370, column: 3, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 370, column: 3)
!5657 = !DILocation(line: 370, column: 3, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5656, file: !3, line: 370, column: 3)
!5659 = !DILocation(line: 371, column: 4, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 371, column: 4)
!5661 = !DILocation(line: 371, column: 4, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5660, file: !3, line: 371, column: 4)
!5663 = !DILocalVariable(name: "__vpp_verify", scope: !5664, file: !3, line: 371, type: !2236)
!5664 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 371, column: 4)
!5665 = !DILocation(line: 371, column: 4, scope: !5664)
!5666 = !DILocation(line: 371, column: 42, scope: !5658)
!5667 = !DILocation(line: 371, column: 47, scope: !5658)
!5668 = !DILocation(line: 371, column: 4, scope: !5658)
!5669 = distinct !{!5669, !5655, !5670}
!5670 = !DILocation(line: 371, column: 49, scope: !5656)
!5671 = distinct !{!5671, !5651, !5672}
!5672 = !DILocation(line: 371, column: 49, scope: !5652)
!5673 = !DILocalVariable(name: "__mptr", scope: !5674, file: !3, line: 373, type: !269)
!5674 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 373, column: 2)
!5675 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 373, column: 2)
!5676 = !DILocation(line: 373, column: 2, scope: !5674)
!5677 = !DILocation(line: 373, column: 2, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 373, column: 2)
!5679 = !DILocation(line: 373, column: 2, scope: !5675)
!5680 = !DILocation(line: 373, column: 2, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 373, column: 2)
!5682 = !DILocation(line: 374, column: 7, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 374, column: 7)
!5684 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 373, column: 61)
!5685 = !DILocation(line: 374, column: 7, scope: !5684)
!5686 = !DILocation(line: 375, column: 4, scope: !5683)
!5687 = !DILocalVariable(name: "__mptr", scope: !5688, file: !3, line: 376, type: !269)
!5688 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 376, column: 3)
!5689 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 376, column: 3)
!5690 = !DILocation(line: 376, column: 3, scope: !5688)
!5691 = !DILocation(line: 376, column: 3, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5688, file: !3, line: 376, column: 3)
!5693 = !DILocation(line: 376, column: 3, scope: !5689)
!5694 = !DILocation(line: 376, column: 3, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 376, column: 3)
!5696 = !DILocation(line: 377, column: 4, scope: !5695)
!5697 = !DILocation(line: 377, column: 10, scope: !5695)
!5698 = !DILocation(line: 377, column: 22, scope: !5695)
!5699 = !DILocalVariable(name: "__mptr", scope: !5700, file: !3, line: 376, type: !269)
!5700 = distinct !DILexicalBlock(scope: !5695, file: !3, line: 376, column: 3)
!5701 = !DILocation(line: 376, column: 3, scope: !5700)
!5702 = !DILocation(line: 376, column: 3, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 376, column: 3)
!5704 = distinct !{!5704, !5693, !5705}
!5705 = !DILocation(line: 377, column: 24, scope: !5689)
!5706 = !DILocation(line: 378, column: 2, scope: !5684)
!5707 = !DILocalVariable(name: "__mptr", scope: !5708, file: !3, line: 373, type: !269)
!5708 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 373, column: 2)
!5709 = !DILocation(line: 373, column: 2, scope: !5708)
!5710 = !DILocation(line: 373, column: 2, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 373, column: 2)
!5712 = distinct !{!5712, !5679, !5713}
!5713 = !DILocation(line: 378, column: 2, scope: !5675)
!5714 = !DILocation(line: 381, column: 7, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 381, column: 6)
!5716 = !DILocation(line: 381, column: 6, scope: !5642)
!5717 = !DILocation(line: 382, column: 3, scope: !5715)
!5718 = !DILocation(line: 385, column: 2, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 385, column: 2)
!5720 = !DILocation(line: 385, column: 2, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 385, column: 2)
!5722 = !DILocation(line: 386, column: 3, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 386, column: 3)
!5724 = !DILocation(line: 386, column: 3, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 386, column: 3)
!5726 = !DILocation(line: 387, column: 20, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 386, column: 28)
!5728 = !DILocation(line: 387, column: 25, scope: !5727)
!5729 = !DILocation(line: 387, column: 11, scope: !5727)
!5730 = !DILocation(line: 387, column: 9, scope: !5727)
!5731 = !DILocation(line: 388, column: 49, scope: !5727)
!5732 = !DILocation(line: 388, column: 4, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 388, column: 4)
!5734 = !DILocation(line: 388, column: 4, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 388, column: 4)
!5736 = !DILocalVariable(name: "__vpp_verify", scope: !5737, file: !3, line: 388, type: !2236)
!5737 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 388, column: 4)
!5738 = !DILocation(line: 388, column: 4, scope: !5737)
!5739 = !DILocation(line: 388, column: 42, scope: !5727)
!5740 = !DILocation(line: 388, column: 47, scope: !5727)
!5741 = !DILocation(line: 389, column: 3, scope: !5727)
!5742 = distinct !{!5742, !5722, !5743}
!5743 = !DILocation(line: 389, column: 3, scope: !5723)
!5744 = distinct !{!5744, !5718, !5745}
!5745 = !DILocation(line: 389, column: 3, scope: !5719)
!5746 = !DILocation(line: 390, column: 1, scope: !5642)
!5747 = distinct !DISubprogram(name: "dmaengine_put", scope: !3, file: !3, line: 971, type: !1989, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5748 = !DILocalVariable(name: "device", scope: !5747, file: !3, line: 973, type: !232)
!5749 = !DILocation(line: 973, column: 21, scope: !5747)
!5750 = !DILocalVariable(name: "_d", scope: !5747, file: !3, line: 973, type: !232)
!5751 = !DILocation(line: 973, column: 30, scope: !5747)
!5752 = !DILocalVariable(name: "chan", scope: !5747, file: !3, line: 974, type: !228)
!5753 = !DILocation(line: 974, column: 19, scope: !5747)
!5754 = !DILocation(line: 976, column: 2, scope: !5747)
!5755 = !DILocation(line: 977, column: 21, scope: !5747)
!5756 = !DILocation(line: 978, column: 2, scope: !5747)
!5757 = !DILocation(line: 978, column: 2, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 978, column: 2)
!5759 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 978, column: 2)
!5760 = !DILocation(line: 978, column: 2, scope: !5759)
!5761 = !DILocation(line: 978, column: 2, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 978, column: 2)
!5763 = !DILocation(line: 978, column: 2, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 978, column: 2)
!5765 = !DILocation(line: 978, column: 2, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 978, column: 2)
!5767 = !{i32 -2141265957, i32 -2141265928, i32 -2141265882, i32 -2141265824, i32 -2141265770, i32 -2141265716, i32 -2141265661, i32 -2141265630}
!5768 = !DILocation(line: 978, column: 2, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 978, column: 2)
!5770 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 978, column: 2)
!5771 = !{i32 -2141265184, i32 -2141265177, i32 -2141265123, i32 -2141265092, i32 -2141265062}
!5772 = !DILocation(line: 978, column: 2, scope: !5770)
!5773 = !DILocalVariable(name: "__mptr", scope: !5774, file: !3, line: 980, type: !269)
!5774 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 980, column: 2)
!5775 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 980, column: 2)
!5776 = !DILocation(line: 980, column: 2, scope: !5774)
!5777 = !DILocation(line: 980, column: 2, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 980, column: 2)
!5779 = !DILocation(line: 980, column: 2, scope: !5775)
!5780 = !DILocalVariable(name: "__mptr", scope: !5781, file: !3, line: 980, type: !269)
!5781 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 980, column: 2)
!5782 = !DILocation(line: 980, column: 2, scope: !5781)
!5783 = !DILocation(line: 980, column: 2, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 980, column: 2)
!5785 = !DILocation(line: 980, column: 2, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 980, column: 2)
!5787 = !DILocation(line: 981, column: 7, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 981, column: 7)
!5789 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 980, column: 70)
!5790 = !DILocation(line: 981, column: 7, scope: !5789)
!5791 = !DILocation(line: 982, column: 4, scope: !5788)
!5792 = !DILocalVariable(name: "__mptr", scope: !5793, file: !3, line: 983, type: !269)
!5793 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 983, column: 3)
!5794 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 983, column: 3)
!5795 = !DILocation(line: 983, column: 3, scope: !5793)
!5796 = !DILocation(line: 983, column: 3, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 983, column: 3)
!5798 = !DILocation(line: 983, column: 3, scope: !5794)
!5799 = !DILocation(line: 983, column: 3, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 983, column: 3)
!5801 = !DILocation(line: 984, column: 17, scope: !5800)
!5802 = !DILocation(line: 984, column: 4, scope: !5800)
!5803 = !DILocalVariable(name: "__mptr", scope: !5804, file: !3, line: 983, type: !269)
!5804 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 983, column: 3)
!5805 = !DILocation(line: 983, column: 3, scope: !5804)
!5806 = !DILocation(line: 983, column: 3, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 983, column: 3)
!5808 = distinct !{!5808, !5798, !5809}
!5809 = !DILocation(line: 984, column: 21, scope: !5794)
!5810 = !DILocation(line: 985, column: 2, scope: !5789)
!5811 = !DILocalVariable(name: "__mptr", scope: !5812, file: !3, line: 980, type: !269)
!5812 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 980, column: 2)
!5813 = !DILocation(line: 980, column: 2, scope: !5812)
!5814 = !DILocation(line: 980, column: 2, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 980, column: 2)
!5816 = distinct !{!5816, !5779, !5817}
!5817 = !DILocation(line: 985, column: 2, scope: !5775)
!5818 = !DILocation(line: 986, column: 2, scope: !5747)
!5819 = !DILocation(line: 987, column: 1, scope: !5747)
!5820 = distinct !DISubprogram(name: "dma_async_device_channel_register", scope: !3, file: !3, line: 1092, type: !5821, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5821 = !DISubroutineType(types: !5822)
!5822 = !{!249, !232, !228}
!5823 = !DILocalVariable(name: "device", arg: 1, scope: !5820, file: !3, line: 1092, type: !232)
!5824 = !DILocation(line: 1092, column: 58, scope: !5820)
!5825 = !DILocalVariable(name: "chan", arg: 2, scope: !5820, file: !3, line: 1093, type: !228)
!5826 = !DILocation(line: 1093, column: 28, scope: !5820)
!5827 = !DILocalVariable(name: "rc", scope: !5820, file: !3, line: 1095, type: !249)
!5828 = !DILocation(line: 1095, column: 6, scope: !5820)
!5829 = !DILocation(line: 1097, column: 43, scope: !5820)
!5830 = !DILocation(line: 1097, column: 51, scope: !5820)
!5831 = !DILocation(line: 1097, column: 7, scope: !5820)
!5832 = !DILocation(line: 1097, column: 5, scope: !5820)
!5833 = !DILocation(line: 1098, column: 6, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5820, file: !3, line: 1098, column: 6)
!5835 = !DILocation(line: 1098, column: 9, scope: !5834)
!5836 = !DILocation(line: 1098, column: 6, scope: !5820)
!5837 = !DILocation(line: 1099, column: 10, scope: !5834)
!5838 = !DILocation(line: 1099, column: 3, scope: !5834)
!5839 = !DILocation(line: 1101, column: 2, scope: !5820)
!5840 = !DILocation(line: 1102, column: 2, scope: !5820)
!5841 = !DILocation(line: 1103, column: 1, scope: !5820)
!5842 = distinct !DISubprogram(name: "__dma_async_device_channel_register", scope: !3, file: !3, line: 1039, type: !5821, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5843 = !DILocalVariable(name: "device", arg: 1, scope: !5842, file: !3, line: 1039, type: !232)
!5844 = !DILocation(line: 1039, column: 67, scope: !5842)
!5845 = !DILocalVariable(name: "chan", arg: 2, scope: !5842, file: !3, line: 1040, type: !228)
!5846 = !DILocation(line: 1040, column: 30, scope: !5842)
!5847 = !DILocalVariable(name: "rc", scope: !5842, file: !3, line: 1042, type: !249)
!5848 = !DILocation(line: 1042, column: 6, scope: !5842)
!5849 = !DILocation(line: 1044, column: 16, scope: !5842)
!5850 = !DILocation(line: 1044, column: 2, scope: !5842)
!5851 = !DILocation(line: 1044, column: 8, scope: !5842)
!5852 = !DILocation(line: 1044, column: 14, scope: !5842)
!5853 = !DILocation(line: 1045, column: 7, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1045, column: 6)
!5855 = !DILocation(line: 1045, column: 13, scope: !5854)
!5856 = !DILocation(line: 1045, column: 6, scope: !5842)
!5857 = !DILocation(line: 1046, column: 3, scope: !5854)
!5858 = !DILocation(line: 1047, column: 14, scope: !5842)
!5859 = !DILocation(line: 1047, column: 2, scope: !5842)
!5860 = !DILocation(line: 1047, column: 8, scope: !5842)
!5861 = !DILocation(line: 1047, column: 12, scope: !5842)
!5862 = !DILocation(line: 1048, column: 7, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1048, column: 6)
!5864 = !DILocation(line: 1048, column: 13, scope: !5863)
!5865 = !DILocation(line: 1048, column: 6, scope: !5842)
!5866 = !DILocation(line: 1049, column: 6, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 1048, column: 18)
!5868 = !DILocation(line: 1050, column: 3, scope: !5867)
!5869 = !DILocation(line: 1057, column: 14, scope: !5842)
!5870 = !DILocation(line: 1057, column: 22, scope: !5842)
!5871 = !DILocation(line: 1057, column: 2, scope: !5842)
!5872 = !DILocation(line: 1058, column: 29, scope: !5842)
!5873 = !DILocation(line: 1058, column: 37, scope: !5842)
!5874 = !DILocation(line: 1058, column: 18, scope: !5842)
!5875 = !DILocation(line: 1058, column: 2, scope: !5842)
!5876 = !DILocation(line: 1058, column: 8, scope: !5842)
!5877 = !DILocation(line: 1058, column: 16, scope: !5842)
!5878 = !DILocation(line: 1059, column: 16, scope: !5842)
!5879 = !DILocation(line: 1059, column: 24, scope: !5842)
!5880 = !DILocation(line: 1059, column: 2, scope: !5842)
!5881 = !DILocation(line: 1060, column: 6, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1060, column: 6)
!5883 = !DILocation(line: 1060, column: 12, scope: !5882)
!5884 = !DILocation(line: 1060, column: 20, scope: !5882)
!5885 = !DILocation(line: 1060, column: 6, scope: !5842)
!5886 = !DILocation(line: 1061, column: 3, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 1060, column: 25)
!5888 = !DILocation(line: 1063, column: 8, scope: !5887)
!5889 = !DILocation(line: 1063, column: 14, scope: !5887)
!5890 = !DILocation(line: 1063, column: 6, scope: !5887)
!5891 = !DILocation(line: 1064, column: 3, scope: !5887)
!5892 = !DILocation(line: 1067, column: 2, scope: !5842)
!5893 = !DILocation(line: 1067, column: 8, scope: !5842)
!5894 = !DILocation(line: 1067, column: 13, scope: !5842)
!5895 = !DILocation(line: 1067, column: 20, scope: !5842)
!5896 = !DILocation(line: 1067, column: 26, scope: !5842)
!5897 = !DILocation(line: 1068, column: 29, scope: !5842)
!5898 = !DILocation(line: 1068, column: 37, scope: !5842)
!5899 = !DILocation(line: 1068, column: 2, scope: !5842)
!5900 = !DILocation(line: 1068, column: 8, scope: !5842)
!5901 = !DILocation(line: 1068, column: 13, scope: !5842)
!5902 = !DILocation(line: 1068, column: 20, scope: !5842)
!5903 = !DILocation(line: 1068, column: 27, scope: !5842)
!5904 = !DILocation(line: 1069, column: 20, scope: !5842)
!5905 = !DILocation(line: 1069, column: 2, scope: !5842)
!5906 = !DILocation(line: 1069, column: 8, scope: !5842)
!5907 = !DILocation(line: 1069, column: 13, scope: !5842)
!5908 = !DILocation(line: 1069, column: 18, scope: !5842)
!5909 = !DILocation(line: 1070, column: 22, scope: !5842)
!5910 = !DILocation(line: 1070, column: 30, scope: !5842)
!5911 = !DILocation(line: 1070, column: 2, scope: !5842)
!5912 = !DILocation(line: 1070, column: 8, scope: !5842)
!5913 = !DILocation(line: 1070, column: 13, scope: !5842)
!5914 = !DILocation(line: 1070, column: 20, scope: !5842)
!5915 = !DILocation(line: 1071, column: 16, scope: !5842)
!5916 = !DILocation(line: 1071, column: 22, scope: !5842)
!5917 = !DILocation(line: 1071, column: 27, scope: !5842)
!5918 = !DILocation(line: 1072, column: 8, scope: !5842)
!5919 = !DILocation(line: 1072, column: 16, scope: !5842)
!5920 = !DILocation(line: 1072, column: 24, scope: !5842)
!5921 = !DILocation(line: 1072, column: 30, scope: !5842)
!5922 = !DILocation(line: 1071, column: 2, scope: !5842)
!5923 = !DILocation(line: 1073, column: 24, scope: !5842)
!5924 = !DILocation(line: 1073, column: 30, scope: !5842)
!5925 = !DILocation(line: 1073, column: 35, scope: !5842)
!5926 = !DILocation(line: 1073, column: 7, scope: !5842)
!5927 = !DILocation(line: 1073, column: 5, scope: !5842)
!5928 = !DILocation(line: 1074, column: 6, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1074, column: 6)
!5930 = !DILocation(line: 1074, column: 6, scope: !5842)
!5931 = !DILocation(line: 1075, column: 3, scope: !5929)
!5932 = !DILocation(line: 1076, column: 2, scope: !5842)
!5933 = !DILocation(line: 1076, column: 8, scope: !5842)
!5934 = !DILocation(line: 1076, column: 21, scope: !5842)
!5935 = !DILocation(line: 1077, column: 2, scope: !5842)
!5936 = !DILocation(line: 1077, column: 10, scope: !5842)
!5937 = !DILocation(line: 1077, column: 17, scope: !5842)
!5938 = !DILocation(line: 1079, column: 2, scope: !5842)
!5939 = !DILabel(scope: !5842, name: "err_out_ida", file: !3, line: 1081)
!5940 = !DILocation(line: 1081, column: 2, scope: !5842)
!5941 = !DILocation(line: 1082, column: 14, scope: !5842)
!5942 = !DILocation(line: 1082, column: 22, scope: !5842)
!5943 = !DILocation(line: 1082, column: 2, scope: !5842)
!5944 = !DILocation(line: 1083, column: 12, scope: !5842)
!5945 = !DILocation(line: 1083, column: 20, scope: !5842)
!5946 = !DILocation(line: 1083, column: 30, scope: !5842)
!5947 = !DILocation(line: 1083, column: 36, scope: !5842)
!5948 = !DILocation(line: 1083, column: 2, scope: !5842)
!5949 = !DILocation(line: 1084, column: 16, scope: !5842)
!5950 = !DILocation(line: 1084, column: 24, scope: !5842)
!5951 = !DILocation(line: 1084, column: 2, scope: !5842)
!5952 = !DILabel(scope: !5842, name: "err_free_dev", file: !3, line: 1085)
!5953 = !DILocation(line: 1085, column: 2, scope: !5842)
!5954 = !DILocation(line: 1086, column: 8, scope: !5842)
!5955 = !DILocation(line: 1086, column: 14, scope: !5842)
!5956 = !DILocation(line: 1086, column: 2, scope: !5842)
!5957 = !DILabel(scope: !5842, name: "err_free_local", file: !3, line: 1087)
!5958 = !DILocation(line: 1087, column: 2, scope: !5842)
!5959 = !DILocation(line: 1088, column: 14, scope: !5842)
!5960 = !DILocation(line: 1088, column: 20, scope: !5842)
!5961 = !DILocation(line: 1088, column: 2, scope: !5842)
!5962 = !DILocation(line: 1089, column: 9, scope: !5842)
!5963 = !DILocation(line: 1089, column: 2, scope: !5842)
!5964 = !DILocation(line: 1090, column: 1, scope: !5842)
!5965 = distinct !DISubprogram(name: "dma_async_device_channel_unregister", scope: !3, file: !3, line: 1124, type: !4350, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!5966 = !DILocalVariable(name: "device", arg: 1, scope: !5965, file: !3, line: 1124, type: !232)
!5967 = !DILocation(line: 1124, column: 61, scope: !5965)
!5968 = !DILocalVariable(name: "chan", arg: 2, scope: !5965, file: !3, line: 1125, type: !228)
!5969 = !DILocation(line: 1125, column: 24, scope: !5965)
!5970 = !DILocation(line: 1127, column: 40, scope: !5965)
!5971 = !DILocation(line: 1127, column: 48, scope: !5965)
!5972 = !DILocation(line: 1127, column: 2, scope: !5965)
!5973 = !DILocation(line: 1128, column: 2, scope: !5965)
!5974 = !DILocation(line: 1129, column: 1, scope: !5965)
!5975 = !DILocalVariable(name: "device", arg: 1, scope: !4349, file: !3, line: 1106, type: !232)
!5976 = !DILocation(line: 1106, column: 70, scope: !4349)
!5977 = !DILocalVariable(name: "chan", arg: 2, scope: !4349, file: !3, line: 1107, type: !228)
!5978 = !DILocation(line: 1107, column: 26, scope: !4349)
!5979 = !DILocalVariable(name: "__ret_warn_once", scope: !5980, file: !3, line: 1109, type: !249)
!5980 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 1109, column: 2)
!5981 = !DILocation(line: 1109, column: 2, scope: !5980)
!5982 = !DILocation(line: 0, scope: !5980)
!5983 = !DILocation(line: 1109, column: 2, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 1109, column: 2)
!5985 = !DILocation(line: 0, scope: !5984)
!5986 = !DILocation(line: 1109, column: 2, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5984, file: !3, line: 1109, column: 2)
!5988 = !DILocalVariable(name: "__ret_warn_on", scope: !5989, file: !3, line: 1109, type: !249)
!5989 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 1109, column: 2)
!5990 = !DILocation(line: 1109, column: 2, scope: !5989)
!5991 = !DILocation(line: 1109, column: 2, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 1109, column: 2)
!5993 = !DILocation(line: 1109, column: 2, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 1109, column: 2)
!5995 = !DILocation(line: 1109, column: 2, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5994, file: !3, line: 1109, column: 2)
!5997 = !DILocation(line: 1109, column: 2, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5994, file: !3, line: 1109, column: 2)
!5999 = !DILocation(line: 1109, column: 2, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 1109, column: 2)
!6001 = !DILocation(line: 1109, column: 2, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 1109, column: 2)
!6003 = !{i32 -2141249839, i32 -2141249810, i32 -2141249764, i32 -2141249706, i32 -2141249652, i32 -2141249598, i32 -2141249543, i32 -2141249512}
!6004 = !DILocation(line: 1109, column: 2, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 1109, column: 2)
!6006 = !{i32 -2141249095, i32 -2141249088, i32 -2141249036, i32 -2141249005, i32 -2141248975}
!6007 = !DILocation(line: 1109, column: 2, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 1109, column: 2)
!6009 = !DILocation(line: 1109, column: 2, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5994, file: !3, line: 1109, column: 2)
!6011 = !DILocation(line: 1112, column: 2, scope: !4349)
!6012 = !DILocation(line: 1113, column: 12, scope: !4349)
!6013 = !DILocation(line: 1113, column: 18, scope: !4349)
!6014 = !DILocation(line: 1113, column: 2, scope: !4349)
!6015 = !DILocation(line: 1114, column: 2, scope: !4349)
!6016 = !DILocation(line: 1114, column: 10, scope: !4349)
!6017 = !DILocation(line: 1114, column: 17, scope: !4349)
!6018 = !DILocation(line: 1115, column: 2, scope: !4349)
!6019 = !DILocation(line: 1115, column: 8, scope: !4349)
!6020 = !DILocation(line: 1115, column: 13, scope: !4349)
!6021 = !DILocation(line: 1115, column: 18, scope: !4349)
!6022 = !DILocation(line: 1116, column: 2, scope: !4349)
!6023 = !DILocation(line: 1117, column: 14, scope: !4349)
!6024 = !DILocation(line: 1117, column: 22, scope: !4349)
!6025 = !DILocation(line: 1117, column: 2, scope: !4349)
!6026 = !DILocation(line: 1118, column: 12, scope: !4349)
!6027 = !DILocation(line: 1118, column: 20, scope: !4349)
!6028 = !DILocation(line: 1118, column: 30, scope: !4349)
!6029 = !DILocation(line: 1118, column: 36, scope: !4349)
!6030 = !DILocation(line: 1118, column: 2, scope: !4349)
!6031 = !DILocation(line: 1119, column: 16, scope: !4349)
!6032 = !DILocation(line: 1119, column: 24, scope: !4349)
!6033 = !DILocation(line: 1119, column: 2, scope: !4349)
!6034 = !DILocation(line: 1120, column: 21, scope: !4349)
!6035 = !DILocation(line: 1120, column: 27, scope: !4349)
!6036 = !DILocation(line: 1120, column: 32, scope: !4349)
!6037 = !DILocation(line: 1120, column: 2, scope: !4349)
!6038 = !DILocation(line: 1121, column: 14, scope: !4349)
!6039 = !DILocation(line: 1121, column: 20, scope: !4349)
!6040 = !DILocation(line: 1121, column: 2, scope: !4349)
!6041 = !DILocation(line: 1122, column: 1, scope: !4349)
!6042 = !DILocalVariable(name: "device", arg: 1, scope: !4303, file: !3, line: 1140, type: !232)
!6043 = !DILocation(line: 1140, column: 50, scope: !4303)
!6044 = !DILocalVariable(name: "rc", scope: !4303, file: !3, line: 1142, type: !249)
!6045 = !DILocation(line: 1142, column: 6, scope: !4303)
!6046 = !DILocalVariable(name: "chan", scope: !4303, file: !3, line: 1143, type: !228)
!6047 = !DILocation(line: 1143, column: 19, scope: !4303)
!6048 = !DILocation(line: 1145, column: 7, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1145, column: 6)
!6050 = !DILocation(line: 1145, column: 6, scope: !4303)
!6051 = !DILocation(line: 1146, column: 3, scope: !6049)
!6052 = !DILocation(line: 1149, column: 7, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1149, column: 6)
!6054 = !DILocation(line: 1149, column: 15, scope: !6053)
!6055 = !DILocation(line: 1149, column: 6, scope: !4303)
!6056 = !DILocation(line: 1150, column: 3, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 1149, column: 20)
!6058 = !DILocation(line: 1151, column: 3, scope: !6057)
!6059 = !DILocation(line: 1154, column: 18, scope: !4303)
!6060 = !DILocation(line: 1154, column: 26, scope: !4303)
!6061 = !DILocation(line: 1154, column: 31, scope: !4303)
!6062 = !DILocation(line: 1154, column: 39, scope: !4303)
!6063 = !DILocation(line: 1154, column: 2, scope: !4303)
!6064 = !DILocation(line: 1154, column: 10, scope: !4303)
!6065 = !DILocation(line: 1154, column: 16, scope: !4303)
!6066 = !DILocation(line: 1156, column: 6, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1156, column: 6)
!6068 = !DILocation(line: 1156, column: 48, scope: !6067)
!6069 = !DILocation(line: 1156, column: 52, scope: !6067)
!6070 = !DILocation(line: 1156, column: 60, scope: !6067)
!6071 = !DILocation(line: 1156, column: 6, scope: !4303)
!6072 = !DILocation(line: 1157, column: 3, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 1156, column: 84)
!6074 = !DILocation(line: 1160, column: 3, scope: !6073)
!6075 = !DILocation(line: 1163, column: 6, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1163, column: 6)
!6077 = !DILocation(line: 1163, column: 45, scope: !6076)
!6078 = !DILocation(line: 1163, column: 49, scope: !6076)
!6079 = !DILocation(line: 1163, column: 57, scope: !6076)
!6080 = !DILocation(line: 1163, column: 6, scope: !4303)
!6081 = !DILocation(line: 1164, column: 3, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 1163, column: 78)
!6083 = !DILocation(line: 1167, column: 3, scope: !6082)
!6084 = !DILocation(line: 1170, column: 6, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1170, column: 6)
!6086 = !DILocation(line: 1170, column: 49, scope: !6085)
!6087 = !DILocation(line: 1170, column: 53, scope: !6085)
!6088 = !DILocation(line: 1170, column: 61, scope: !6085)
!6089 = !DILocation(line: 1170, column: 6, scope: !4303)
!6090 = !DILocation(line: 1171, column: 3, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6085, file: !3, line: 1170, column: 86)
!6092 = !DILocation(line: 1174, column: 3, scope: !6091)
!6093 = !DILocation(line: 1177, column: 6, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1177, column: 6)
!6095 = !DILocation(line: 1177, column: 44, scope: !6094)
!6096 = !DILocation(line: 1177, column: 48, scope: !6094)
!6097 = !DILocation(line: 1177, column: 56, scope: !6094)
!6098 = !DILocation(line: 1177, column: 6, scope: !4303)
!6099 = !DILocation(line: 1178, column: 3, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 1177, column: 76)
!6101 = !DILocation(line: 1181, column: 3, scope: !6100)
!6102 = !DILocation(line: 1184, column: 6, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1184, column: 6)
!6104 = !DILocation(line: 1184, column: 48, scope: !6103)
!6105 = !DILocation(line: 1184, column: 52, scope: !6103)
!6106 = !DILocation(line: 1184, column: 60, scope: !6103)
!6107 = !DILocation(line: 1184, column: 6, scope: !4303)
!6108 = !DILocation(line: 1185, column: 3, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 1184, column: 84)
!6110 = !DILocation(line: 1188, column: 3, scope: !6109)
!6111 = !DILocation(line: 1191, column: 6, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1191, column: 6)
!6113 = !DILocation(line: 1191, column: 48, scope: !6112)
!6114 = !DILocation(line: 1191, column: 52, scope: !6112)
!6115 = !DILocation(line: 1191, column: 60, scope: !6112)
!6116 = !DILocation(line: 1191, column: 6, scope: !4303)
!6117 = !DILocation(line: 1192, column: 3, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 1191, column: 84)
!6119 = !DILocation(line: 1195, column: 3, scope: !6118)
!6120 = !DILocation(line: 1198, column: 6, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1198, column: 6)
!6122 = !DILocation(line: 1198, column: 51, scope: !6121)
!6123 = !DILocation(line: 1198, column: 55, scope: !6121)
!6124 = !DILocation(line: 1198, column: 63, scope: !6121)
!6125 = !DILocation(line: 1198, column: 6, scope: !4303)
!6126 = !DILocation(line: 1199, column: 3, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 1198, column: 90)
!6128 = !DILocation(line: 1202, column: 3, scope: !6127)
!6129 = !DILocation(line: 1205, column: 6, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1205, column: 6)
!6131 = !DILocation(line: 1205, column: 48, scope: !6130)
!6132 = !DILocation(line: 1205, column: 52, scope: !6130)
!6133 = !DILocation(line: 1205, column: 60, scope: !6130)
!6134 = !DILocation(line: 1205, column: 6, scope: !4303)
!6135 = !DILocation(line: 1206, column: 3, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 1205, column: 84)
!6137 = !DILocation(line: 1209, column: 3, scope: !6136)
!6138 = !DILocation(line: 1212, column: 6, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1212, column: 6)
!6140 = !DILocation(line: 1212, column: 52, scope: !6139)
!6141 = !DILocation(line: 1212, column: 56, scope: !6139)
!6142 = !DILocation(line: 1212, column: 64, scope: !6139)
!6143 = !DILocation(line: 1212, column: 6, scope: !4303)
!6144 = !DILocation(line: 1213, column: 3, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 1212, column: 93)
!6146 = !DILocation(line: 1216, column: 3, scope: !6145)
!6147 = !DILocation(line: 1220, column: 7, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1220, column: 6)
!6149 = !DILocation(line: 1220, column: 15, scope: !6148)
!6150 = !DILocation(line: 1220, column: 6, scope: !4303)
!6151 = !DILocation(line: 1221, column: 3, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 1220, column: 33)
!6153 = !DILocation(line: 1222, column: 3, scope: !6152)
!6154 = !DILocation(line: 1226, column: 7, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1226, column: 6)
!6156 = !DILocation(line: 1226, column: 15, scope: !6155)
!6157 = !DILocation(line: 1226, column: 6, scope: !4303)
!6158 = !DILocation(line: 1227, column: 3, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 1226, column: 37)
!6160 = !DILocation(line: 1228, column: 3, scope: !6159)
!6161 = !DILocation(line: 1231, column: 7, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1231, column: 6)
!6163 = !DILocation(line: 1231, column: 15, scope: !6162)
!6164 = !DILocation(line: 1231, column: 6, scope: !4303)
!6165 = !DILocation(line: 1232, column: 3, scope: !6162)
!6166 = !DILocation(line: 1235, column: 13, scope: !4303)
!6167 = !DILocation(line: 1235, column: 21, scope: !4303)
!6168 = !DILocation(line: 1235, column: 2, scope: !4303)
!6169 = !DILocation(line: 1240, column: 30, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1240, column: 6)
!6171 = !DILocation(line: 1240, column: 6, scope: !6170)
!6172 = !DILocation(line: 1240, column: 6, scope: !4303)
!6173 = !DILocation(line: 1241, column: 3, scope: !6170)
!6174 = !DILocation(line: 1243, column: 18, scope: !4303)
!6175 = !DILocation(line: 1243, column: 7, scope: !4303)
!6176 = !DILocation(line: 1243, column: 5, scope: !4303)
!6177 = !DILocation(line: 1244, column: 6, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1244, column: 6)
!6179 = !DILocation(line: 1244, column: 9, scope: !6178)
!6180 = !DILocation(line: 1244, column: 6, scope: !4303)
!6181 = !DILocation(line: 1245, column: 10, scope: !6178)
!6182 = !DILocation(line: 1245, column: 3, scope: !6178)
!6183 = !DILocation(line: 1247, column: 2, scope: !4303)
!6184 = !DILocation(line: 1247, column: 2, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1247, column: 2)
!6186 = !DILocation(line: 1248, column: 12, scope: !4303)
!6187 = !DILocation(line: 1248, column: 20, scope: !4303)
!6188 = !DILocation(line: 1248, column: 2, scope: !4303)
!6189 = !DILocalVariable(name: "__mptr", scope: !6190, file: !3, line: 1251, type: !269)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 1251, column: 2)
!6191 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1251, column: 2)
!6192 = !DILocation(line: 1251, column: 2, scope: !6190)
!6193 = !DILocation(line: 1251, column: 2, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 1251, column: 2)
!6195 = !DILocation(line: 1251, column: 2, scope: !6191)
!6196 = !DILocation(line: 1251, column: 2, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 1251, column: 2)
!6198 = !DILocation(line: 1252, column: 44, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 1251, column: 60)
!6200 = !DILocation(line: 1252, column: 52, scope: !6199)
!6201 = !DILocation(line: 1252, column: 8, scope: !6199)
!6202 = !DILocation(line: 1252, column: 6, scope: !6199)
!6203 = !DILocation(line: 1253, column: 7, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 1253, column: 7)
!6205 = !DILocation(line: 1253, column: 10, scope: !6204)
!6206 = !DILocation(line: 1253, column: 7, scope: !6199)
!6207 = !DILocation(line: 1254, column: 4, scope: !6204)
!6208 = !DILocation(line: 1255, column: 2, scope: !6199)
!6209 = !DILocalVariable(name: "__mptr", scope: !6210, file: !3, line: 1251, type: !269)
!6210 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 1251, column: 2)
!6211 = !DILocation(line: 1251, column: 2, scope: !6210)
!6212 = !DILocation(line: 1251, column: 2, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 1251, column: 2)
!6214 = distinct !{!6214, !6195, !6215}
!6215 = !DILocation(line: 1255, column: 2, scope: !6191)
!6216 = !DILocation(line: 1257, column: 2, scope: !4303)
!6217 = !DILocation(line: 1259, column: 6, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1259, column: 6)
!6219 = !DILocation(line: 1259, column: 26, scope: !6218)
!6220 = !DILocation(line: 1259, column: 30, scope: !6218)
!6221 = !DILocation(line: 1259, column: 6, scope: !4303)
!6222 = !DILocalVariable(name: "__mptr", scope: !6223, file: !3, line: 1260, type: !269)
!6223 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 1260, column: 3)
!6224 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 1260, column: 3)
!6225 = !DILocation(line: 1260, column: 3, scope: !6223)
!6226 = !DILocation(line: 1260, column: 3, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 1260, column: 3)
!6228 = !DILocation(line: 1260, column: 3, scope: !6224)
!6229 = !DILocation(line: 1260, column: 3, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 1260, column: 3)
!6231 = !DILocation(line: 1264, column: 21, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 1264, column: 8)
!6233 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 1260, column: 61)
!6234 = !DILocation(line: 1264, column: 8, scope: !6232)
!6235 = !DILocation(line: 1264, column: 27, scope: !6232)
!6236 = !DILocation(line: 1264, column: 8, scope: !6233)
!6237 = !DILocation(line: 1269, column: 8, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 1264, column: 39)
!6239 = !DILocation(line: 1270, column: 5, scope: !6238)
!6240 = !DILocation(line: 1271, column: 5, scope: !6238)
!6241 = !DILocation(line: 1273, column: 3, scope: !6233)
!6242 = !DILocalVariable(name: "__mptr", scope: !6243, file: !3, line: 1260, type: !269)
!6243 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 1260, column: 3)
!6244 = !DILocation(line: 1260, column: 3, scope: !6243)
!6245 = !DILocation(line: 1260, column: 3, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1260, column: 3)
!6247 = distinct !{!6247, !6228, !6248}
!6248 = !DILocation(line: 1273, column: 3, scope: !6224)
!6249 = !DILocation(line: 1274, column: 21, scope: !4303)
!6250 = !DILocation(line: 1274, column: 29, scope: !4303)
!6251 = !DILocation(line: 1274, column: 2, scope: !4303)
!6252 = !DILocation(line: 1275, column: 6, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1275, column: 6)
!6254 = !DILocation(line: 1275, column: 6, scope: !4303)
!6255 = !DILocation(line: 1276, column: 3, scope: !6253)
!6256 = !DILocation(line: 1276, column: 11, scope: !6253)
!6257 = !DILocation(line: 1276, column: 21, scope: !6253)
!6258 = !DILocation(line: 1277, column: 2, scope: !4303)
!6259 = !DILocation(line: 1278, column: 2, scope: !4303)
!6260 = !DILocation(line: 1280, column: 27, scope: !4303)
!6261 = !DILocation(line: 1280, column: 2, scope: !4303)
!6262 = !DILocation(line: 1282, column: 2, scope: !4303)
!6263 = !DILabel(scope: !4303, name: "err_out", file: !3, line: 1284)
!6264 = !DILocation(line: 1284, column: 1, scope: !4303)
!6265 = !DILocation(line: 1286, column: 7, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1286, column: 6)
!6267 = !DILocation(line: 1286, column: 15, scope: !6266)
!6268 = !DILocation(line: 1286, column: 6, scope: !4303)
!6269 = !DILocation(line: 1287, column: 22, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 1286, column: 24)
!6271 = !DILocation(line: 1287, column: 30, scope: !6270)
!6272 = !DILocation(line: 1287, column: 3, scope: !6270)
!6273 = !DILocation(line: 1288, column: 10, scope: !6270)
!6274 = !DILocation(line: 1288, column: 3, scope: !6270)
!6275 = !DILocalVariable(name: "__mptr", scope: !6276, file: !3, line: 1291, type: !269)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1291, column: 2)
!6277 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1291, column: 2)
!6278 = !DILocation(line: 1291, column: 2, scope: !6276)
!6279 = !DILocation(line: 1291, column: 2, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 1291, column: 2)
!6281 = !DILocation(line: 1291, column: 2, scope: !6277)
!6282 = !DILocation(line: 1291, column: 2, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1291, column: 2)
!6284 = !DILocation(line: 1292, column: 7, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 1292, column: 7)
!6286 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1291, column: 60)
!6287 = !DILocation(line: 1292, column: 13, scope: !6285)
!6288 = !DILocation(line: 1292, column: 19, scope: !6285)
!6289 = !DILocation(line: 1292, column: 7, scope: !6286)
!6290 = !DILocation(line: 1293, column: 4, scope: !6285)
!6291 = !DILocation(line: 1294, column: 3, scope: !6286)
!6292 = !DILocation(line: 1295, column: 3, scope: !6286)
!6293 = !DILocation(line: 1295, column: 9, scope: !6286)
!6294 = !DILocation(line: 1295, column: 14, scope: !6286)
!6295 = !DILocation(line: 1295, column: 19, scope: !6286)
!6296 = !DILocation(line: 1296, column: 3, scope: !6286)
!6297 = !DILocation(line: 1297, column: 22, scope: !6286)
!6298 = !DILocation(line: 1297, column: 28, scope: !6286)
!6299 = !DILocation(line: 1297, column: 33, scope: !6286)
!6300 = !DILocation(line: 1297, column: 3, scope: !6286)
!6301 = !DILocation(line: 1298, column: 15, scope: !6286)
!6302 = !DILocation(line: 1298, column: 21, scope: !6286)
!6303 = !DILocation(line: 1298, column: 3, scope: !6286)
!6304 = !DILocation(line: 1299, column: 2, scope: !6286)
!6305 = !DILocalVariable(name: "__mptr", scope: !6306, file: !3, line: 1291, type: !269)
!6306 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1291, column: 2)
!6307 = !DILocation(line: 1291, column: 2, scope: !6306)
!6308 = !DILocation(line: 1291, column: 2, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 1291, column: 2)
!6310 = distinct !{!6310, !6281, !6311}
!6311 = !DILocation(line: 1299, column: 2, scope: !6277)
!6312 = !DILocation(line: 1300, column: 9, scope: !4303)
!6313 = !DILocation(line: 1300, column: 2, scope: !4303)
!6314 = !DILocation(line: 1301, column: 1, scope: !4303)
!6315 = distinct !DISubprogram(name: "kref_init", scope: !237, file: !237, line: 29, type: !6316, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{null, !6318}
!6318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!6319 = !DILocalVariable(name: "kref", arg: 1, scope: !6315, file: !237, line: 29, type: !6318)
!6320 = !DILocation(line: 29, column: 43, scope: !6315)
!6321 = !DILocation(line: 31, column: 16, scope: !6315)
!6322 = !DILocation(line: 31, column: 22, scope: !6315)
!6323 = !DILocation(line: 31, column: 2, scope: !6315)
!6324 = !DILocation(line: 32, column: 1, scope: !6315)
!6325 = distinct !DISubprogram(name: "device_has_all_tx_types", scope: !3, file: !3, line: 990, type: !6326, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6326 = !DISubroutineType(types: !6327)
!6327 = !{!267, !232}
!6328 = !DILocalVariable(name: "device", arg: 1, scope: !6325, file: !3, line: 990, type: !232)
!6329 = !DILocation(line: 990, column: 56, scope: !6325)
!6330 = !DILocation(line: 1026, column: 2, scope: !6325)
!6331 = distinct !DISubprogram(name: "get_dma_id", scope: !3, file: !3, line: 1029, type: !4304, scopeLine: 1030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6332 = !DILocalVariable(name: "device", arg: 1, scope: !6331, file: !3, line: 1029, type: !232)
!6333 = !DILocation(line: 1029, column: 42, scope: !6331)
!6334 = !DILocalVariable(name: "rc", scope: !6331, file: !3, line: 1031, type: !249)
!6335 = !DILocation(line: 1031, column: 6, scope: !6331)
!6336 = !DILocation(line: 1031, column: 11, scope: !6331)
!6337 = !DILocation(line: 1033, column: 6, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6331, file: !3, line: 1033, column: 6)
!6339 = !DILocation(line: 1033, column: 9, scope: !6338)
!6340 = !DILocation(line: 1033, column: 6, scope: !6331)
!6341 = !DILocation(line: 1034, column: 10, scope: !6338)
!6342 = !DILocation(line: 1034, column: 3, scope: !6338)
!6343 = !DILocation(line: 1035, column: 19, scope: !6331)
!6344 = !DILocation(line: 1035, column: 2, scope: !6331)
!6345 = !DILocation(line: 1035, column: 10, scope: !6331)
!6346 = !DILocation(line: 1035, column: 17, scope: !6331)
!6347 = !DILocation(line: 1036, column: 2, scope: !6331)
!6348 = !DILocation(line: 1037, column: 1, scope: !6331)
!6349 = distinct !DISubprogram(name: "ida_init", scope: !3359, file: !3359, line: 312, type: !6350, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{null, !6352}
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!6353 = !DILocalVariable(name: "ida", arg: 1, scope: !6349, file: !3359, line: 312, type: !6352)
!6354 = !DILocation(line: 312, column: 41, scope: !6349)
!6355 = !DILocation(line: 314, column: 17, scope: !6349)
!6356 = !DILocation(line: 314, column: 22, scope: !6349)
!6357 = !DILocation(line: 314, column: 2, scope: !6349)
!6358 = !DILocation(line: 315, column: 1, scope: !6349)
!6359 = distinct !DISubprogram(name: "list_add_tail_rcu", scope: !5631, file: !5631, line: 134, type: !6360, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{null, !256, !256}
!6362 = !DILocalVariable(name: "new", arg: 1, scope: !6359, file: !5631, line: 134, type: !256)
!6363 = !DILocation(line: 134, column: 56, scope: !6359)
!6364 = !DILocalVariable(name: "head", arg: 2, scope: !6359, file: !5631, line: 135, type: !256)
!6365 = !DILocation(line: 135, column: 24, scope: !6359)
!6366 = !DILocation(line: 137, column: 17, scope: !6359)
!6367 = !DILocation(line: 137, column: 22, scope: !6359)
!6368 = !DILocation(line: 137, column: 28, scope: !6359)
!6369 = !DILocation(line: 137, column: 34, scope: !6359)
!6370 = !DILocation(line: 137, column: 2, scope: !6359)
!6371 = !DILocation(line: 138, column: 1, scope: !6359)
!6372 = distinct !DISubprogram(name: "dmaengine_debug_register", scope: !3, file: !3, line: 136, type: !4304, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6373 = !DILocalVariable(name: "dma_dev", arg: 1, scope: !6372, file: !3, line: 136, type: !232)
!6374 = !DILocation(line: 136, column: 63, scope: !6372)
!6375 = !DILocation(line: 138, column: 2, scope: !6372)
!6376 = distinct !DISubprogram(name: "dma_async_device_unregister", scope: !3, file: !3, line: 1311, type: !4239, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6377 = !DILocalVariable(name: "device", arg: 1, scope: !6376, file: !3, line: 1311, type: !232)
!6378 = !DILocation(line: 1311, column: 53, scope: !6376)
!6379 = !DILocalVariable(name: "chan", scope: !6376, file: !3, line: 1313, type: !228)
!6380 = !DILocation(line: 1313, column: 19, scope: !6376)
!6381 = !DILocalVariable(name: "n", scope: !6376, file: !3, line: 1313, type: !228)
!6382 = !DILocation(line: 1313, column: 26, scope: !6376)
!6383 = !DILocation(line: 1315, column: 29, scope: !6376)
!6384 = !DILocation(line: 1315, column: 2, scope: !6376)
!6385 = !DILocalVariable(name: "__mptr", scope: !6386, file: !3, line: 1317, type: !269)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 1317, column: 2)
!6387 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 1317, column: 2)
!6388 = !DILocation(line: 1317, column: 2, scope: !6386)
!6389 = !DILocation(line: 1317, column: 2, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 1317, column: 2)
!6391 = !DILocation(line: 1317, column: 2, scope: !6387)
!6392 = !DILocalVariable(name: "__mptr", scope: !6393, file: !3, line: 1317, type: !269)
!6393 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 1317, column: 2)
!6394 = !DILocation(line: 1317, column: 2, scope: !6393)
!6395 = !DILocation(line: 1317, column: 2, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 1317, column: 2)
!6397 = !DILocation(line: 1317, column: 2, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 1317, column: 2)
!6399 = !DILocation(line: 1318, column: 41, scope: !6398)
!6400 = !DILocation(line: 1318, column: 49, scope: !6398)
!6401 = !DILocation(line: 1318, column: 3, scope: !6398)
!6402 = !DILocalVariable(name: "__mptr", scope: !6403, file: !3, line: 1317, type: !269)
!6403 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 1317, column: 2)
!6404 = !DILocation(line: 1317, column: 2, scope: !6403)
!6405 = !DILocation(line: 1317, column: 2, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 1317, column: 2)
!6407 = distinct !{!6407, !6391, !6408}
!6408 = !DILocation(line: 1318, column: 53, scope: !6387)
!6409 = !DILocation(line: 1320, column: 2, scope: !6376)
!6410 = !DILocation(line: 1325, column: 2, scope: !6376)
!6411 = !DILocation(line: 1326, column: 2, scope: !6376)
!6412 = !DILocation(line: 1327, column: 21, scope: !6376)
!6413 = !DILocation(line: 1327, column: 29, scope: !6376)
!6414 = !DILocation(line: 1327, column: 2, scope: !6376)
!6415 = !DILocation(line: 1328, column: 17, scope: !6376)
!6416 = !DILocation(line: 1328, column: 2, scope: !6376)
!6417 = !DILocation(line: 1329, column: 2, scope: !6376)
!6418 = !DILocation(line: 1330, column: 1, scope: !6376)
!6419 = distinct !DISubprogram(name: "dmaengine_debug_unregister", scope: !3, file: !3, line: 141, type: !4239, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6420 = !DILocalVariable(name: "dma_dev", arg: 1, scope: !6419, file: !3, line: 141, type: !232)
!6421 = !DILocation(line: 141, column: 66, scope: !6419)
!6422 = !DILocation(line: 141, column: 77, scope: !6419)
!6423 = distinct !DISubprogram(name: "dma_device_put", scope: !3, file: !3, line: 434, type: !4239, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6424 = !DILocalVariable(name: "device", arg: 1, scope: !6423, file: !3, line: 434, type: !232)
!6425 = !DILocation(line: 434, column: 47, scope: !6423)
!6426 = !DILocation(line: 436, column: 2, scope: !6423)
!6427 = !DILocation(line: 436, column: 2, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 436, column: 2)
!6429 = !DILocation(line: 437, column: 12, scope: !6423)
!6430 = !DILocation(line: 437, column: 20, scope: !6423)
!6431 = !DILocation(line: 437, column: 2, scope: !6423)
!6432 = !DILocation(line: 438, column: 1, scope: !6423)
!6433 = distinct !DISubprogram(name: "dmaenginem_async_device_register", scope: !3, file: !3, line: 1347, type: !4304, scopeLine: 1348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6434 = !DILocalVariable(name: "device", arg: 1, scope: !6433, file: !3, line: 1347, type: !232)
!6435 = !DILocation(line: 1347, column: 57, scope: !6433)
!6436 = !DILocalVariable(name: "p", scope: !6433, file: !3, line: 1349, type: !269)
!6437 = !DILocation(line: 1349, column: 8, scope: !6433)
!6438 = !DILocalVariable(name: "ret", scope: !6433, file: !3, line: 1350, type: !249)
!6439 = !DILocation(line: 1350, column: 6, scope: !6433)
!6440 = !DILocation(line: 1352, column: 6, scope: !6433)
!6441 = !DILocation(line: 1352, column: 4, scope: !6433)
!6442 = !DILocation(line: 1353, column: 7, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6433, file: !3, line: 1353, column: 6)
!6444 = !DILocation(line: 1353, column: 6, scope: !6433)
!6445 = !DILocation(line: 1354, column: 3, scope: !6443)
!6446 = !DILocation(line: 1356, column: 34, scope: !6433)
!6447 = !DILocation(line: 1356, column: 8, scope: !6433)
!6448 = !DILocation(line: 1356, column: 6, scope: !6433)
!6449 = !DILocation(line: 1357, column: 7, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6433, file: !3, line: 1357, column: 6)
!6451 = !DILocation(line: 1357, column: 6, scope: !6433)
!6452 = !DILocation(line: 1358, column: 30, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1357, column: 12)
!6454 = !DILocation(line: 1358, column: 26, scope: !6453)
!6455 = !DILocation(line: 1358, column: 4, scope: !6453)
!6456 = !DILocation(line: 1358, column: 28, scope: !6453)
!6457 = !DILocation(line: 1359, column: 14, scope: !6453)
!6458 = !DILocation(line: 1359, column: 22, scope: !6453)
!6459 = !DILocation(line: 1359, column: 27, scope: !6453)
!6460 = !DILocation(line: 1359, column: 3, scope: !6453)
!6461 = !DILocation(line: 1360, column: 2, scope: !6453)
!6462 = !DILocation(line: 1361, column: 15, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1360, column: 9)
!6464 = !DILocation(line: 1361, column: 3, scope: !6463)
!6465 = !DILocation(line: 1364, column: 9, scope: !6433)
!6466 = !DILocation(line: 1364, column: 2, scope: !6433)
!6467 = !DILocation(line: 1365, column: 1, scope: !6433)
!6468 = distinct !DISubprogram(name: "devres_alloc", scope: !95, file: !95, line: 178, type: !6469, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6469 = !DISubroutineType(types: !6470)
!6470 = !{!269, !6471, !404, !826}
!6471 = !DIDerivedType(tag: DW_TAG_typedef, name: "dr_release_t", file: !95, line: 165, baseType: !4268)
!6472 = !DILocalVariable(name: "release", arg: 1, scope: !6468, file: !95, line: 178, type: !6471)
!6473 = !DILocation(line: 178, column: 47, scope: !6468)
!6474 = !DILocalVariable(name: "size", arg: 2, scope: !6468, file: !95, line: 178, type: !404)
!6475 = !DILocation(line: 178, column: 63, scope: !6468)
!6476 = !DILocalVariable(name: "gfp", arg: 3, scope: !6468, file: !95, line: 178, type: !826)
!6477 = !DILocation(line: 178, column: 75, scope: !6468)
!6478 = !DILocation(line: 180, column: 27, scope: !6468)
!6479 = !DILocation(line: 180, column: 36, scope: !6468)
!6480 = !DILocation(line: 180, column: 42, scope: !6468)
!6481 = !DILocation(line: 180, column: 9, scope: !6468)
!6482 = !DILocation(line: 180, column: 2, scope: !6468)
!6483 = distinct !DISubprogram(name: "dmam_device_release", scope: !3, file: !3, line: 1333, type: !4269, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6484 = !DILocalVariable(name: "dev", arg: 1, scope: !6483, file: !3, line: 1333, type: !301)
!6485 = !DILocation(line: 1333, column: 48, scope: !6483)
!6486 = !DILocalVariable(name: "res", arg: 2, scope: !6483, file: !3, line: 1333, type: !269)
!6487 = !DILocation(line: 1333, column: 59, scope: !6483)
!6488 = !DILocalVariable(name: "device", scope: !6483, file: !3, line: 1335, type: !232)
!6489 = !DILocation(line: 1335, column: 21, scope: !6483)
!6490 = !DILocation(line: 1337, column: 34, scope: !6483)
!6491 = !DILocation(line: 1337, column: 12, scope: !6483)
!6492 = !DILocation(line: 1337, column: 11, scope: !6483)
!6493 = !DILocation(line: 1337, column: 9, scope: !6483)
!6494 = !DILocation(line: 1338, column: 30, scope: !6483)
!6495 = !DILocation(line: 1338, column: 2, scope: !6483)
!6496 = !DILocation(line: 1339, column: 1, scope: !6483)
!6497 = distinct !DISubprogram(name: "dmaengine_unmap_put", scope: !3, file: !3, line: 1431, type: !6498, scopeLine: 1432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6498 = !DISubroutineType(types: !6499)
!6499 = !{null, !4080}
!6500 = !DILocalVariable(name: "unmap", arg: 1, scope: !6497, file: !3, line: 1431, type: !4080)
!6501 = !DILocation(line: 1431, column: 55, scope: !6497)
!6502 = !DILocation(line: 1433, column: 6, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6497, file: !3, line: 1433, column: 6)
!6504 = !DILocation(line: 1433, column: 6, scope: !6497)
!6505 = !DILocation(line: 1434, column: 13, scope: !6503)
!6506 = !DILocation(line: 1434, column: 20, scope: !6503)
!6507 = !DILocation(line: 1434, column: 3, scope: !6503)
!6508 = !DILocation(line: 1435, column: 1, scope: !6497)
!6509 = distinct !DISubprogram(name: "kref_put", scope: !237, file: !237, line: 62, type: !6510, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6510 = !DISubroutineType(types: !6511)
!6511 = !{!249, !6318, !6512}
!6512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6316, size: 64)
!6513 = !DILocalVariable(name: "kref", arg: 1, scope: !6509, file: !237, line: 62, type: !6318)
!6514 = !DILocation(line: 62, column: 41, scope: !6509)
!6515 = !DILocalVariable(name: "release", arg: 2, scope: !6509, file: !237, line: 62, type: !6512)
!6516 = !DILocation(line: 62, column: 54, scope: !6509)
!6517 = !DILocation(line: 64, column: 29, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6509, file: !237, line: 64, column: 6)
!6519 = !DILocation(line: 64, column: 35, scope: !6518)
!6520 = !DILocation(line: 64, column: 6, scope: !6518)
!6521 = !DILocation(line: 64, column: 6, scope: !6509)
!6522 = !DILocation(line: 65, column: 3, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6518, file: !237, line: 64, column: 46)
!6524 = !DILocation(line: 65, column: 11, scope: !6523)
!6525 = !DILocation(line: 66, column: 3, scope: !6523)
!6526 = !DILocation(line: 68, column: 2, scope: !6509)
!6527 = !DILocation(line: 69, column: 1, scope: !6509)
!6528 = distinct !DISubprogram(name: "dmaengine_unmap", scope: !3, file: !3, line: 1406, type: !6316, scopeLine: 1407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6529 = !DILocalVariable(name: "kref", arg: 1, scope: !6528, file: !3, line: 1406, type: !6318)
!6530 = !DILocation(line: 1406, column: 42, scope: !6528)
!6531 = !DILocalVariable(name: "unmap", scope: !6528, file: !3, line: 1408, type: !4080)
!6532 = !DILocation(line: 1408, column: 31, scope: !6528)
!6533 = !DILocalVariable(name: "__mptr", scope: !6534, file: !3, line: 1408, type: !269)
!6534 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 1408, column: 39)
!6535 = !DILocation(line: 1408, column: 39, scope: !6534)
!6536 = !DILocation(line: 1408, column: 39, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 1408, column: 39)
!6538 = !DILocalVariable(name: "dev", scope: !6528, file: !3, line: 1409, type: !301)
!6539 = !DILocation(line: 1409, column: 17, scope: !6528)
!6540 = !DILocation(line: 1409, column: 23, scope: !6528)
!6541 = !DILocation(line: 1409, column: 30, scope: !6528)
!6542 = !DILocalVariable(name: "cnt", scope: !6528, file: !3, line: 1410, type: !249)
!6543 = !DILocation(line: 1410, column: 6, scope: !6528)
!6544 = !DILocalVariable(name: "i", scope: !6528, file: !3, line: 1410, type: !249)
!6545 = !DILocation(line: 1410, column: 11, scope: !6528)
!6546 = !DILocation(line: 1412, column: 8, scope: !6528)
!6547 = !DILocation(line: 1412, column: 15, scope: !6528)
!6548 = !DILocation(line: 1412, column: 6, scope: !6528)
!6549 = !DILocation(line: 1413, column: 9, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 1413, column: 2)
!6551 = !DILocation(line: 1413, column: 7, scope: !6550)
!6552 = !DILocation(line: 1413, column: 14, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 1413, column: 2)
!6554 = !DILocation(line: 1413, column: 18, scope: !6553)
!6555 = !DILocation(line: 1413, column: 16, scope: !6553)
!6556 = !DILocation(line: 1413, column: 2, scope: !6550)
!6557 = !DILocation(line: 1414, column: 3, scope: !6553)
!6558 = !DILocation(line: 1413, column: 24, scope: !6553)
!6559 = !DILocation(line: 1413, column: 2, scope: !6553)
!6560 = distinct !{!6560, !6556, !6561}
!6561 = !DILocation(line: 1414, column: 3, scope: !6550)
!6562 = !DILocation(line: 1416, column: 9, scope: !6528)
!6563 = !DILocation(line: 1416, column: 16, scope: !6528)
!6564 = !DILocation(line: 1416, column: 6, scope: !6528)
!6565 = !DILocation(line: 1417, column: 2, scope: !6528)
!6566 = !DILocation(line: 1417, column: 9, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 1417, column: 2)
!6568 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 1417, column: 2)
!6569 = !DILocation(line: 1417, column: 13, scope: !6567)
!6570 = !DILocation(line: 1417, column: 11, scope: !6567)
!6571 = !DILocation(line: 1417, column: 2, scope: !6568)
!6572 = !DILocation(line: 1418, column: 3, scope: !6567)
!6573 = !DILocation(line: 1417, column: 19, scope: !6567)
!6574 = !DILocation(line: 1417, column: 2, scope: !6567)
!6575 = distinct !{!6575, !6571, !6576}
!6576 = !DILocation(line: 1418, column: 3, scope: !6568)
!6577 = !DILocation(line: 1420, column: 9, scope: !6528)
!6578 = !DILocation(line: 1420, column: 16, scope: !6528)
!6579 = !DILocation(line: 1420, column: 6, scope: !6528)
!6580 = !DILocation(line: 1421, column: 2, scope: !6528)
!6581 = !DILocation(line: 1421, column: 9, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 1421, column: 2)
!6583 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 1421, column: 2)
!6584 = !DILocation(line: 1421, column: 13, scope: !6582)
!6585 = !DILocation(line: 1421, column: 11, scope: !6582)
!6586 = !DILocation(line: 1421, column: 2, scope: !6583)
!6587 = !DILocation(line: 1422, column: 7, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 1422, column: 7)
!6589 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 1421, column: 23)
!6590 = !DILocation(line: 1422, column: 14, scope: !6588)
!6591 = !DILocation(line: 1422, column: 19, scope: !6588)
!6592 = !DILocation(line: 1422, column: 22, scope: !6588)
!6593 = !DILocation(line: 1422, column: 7, scope: !6589)
!6594 = !DILocation(line: 1423, column: 4, scope: !6588)
!6595 = !DILocation(line: 1424, column: 3, scope: !6589)
!6596 = !DILocation(line: 1426, column: 2, scope: !6589)
!6597 = !DILocation(line: 1421, column: 19, scope: !6582)
!6598 = !DILocation(line: 1421, column: 2, scope: !6582)
!6599 = distinct !{!6599, !6586, !6600}
!6600 = !DILocation(line: 1426, column: 2, scope: !6583)
!6601 = !DILocation(line: 1427, column: 8, scope: !6528)
!6602 = !DILocation(line: 1427, column: 15, scope: !6528)
!6603 = !DILocation(line: 1427, column: 6, scope: !6528)
!6604 = !DILocation(line: 1428, column: 15, scope: !6528)
!6605 = !DILocation(line: 1428, column: 39, scope: !6528)
!6606 = !DILocation(line: 1428, column: 22, scope: !6528)
!6607 = !DILocation(line: 1428, column: 45, scope: !6528)
!6608 = !DILocation(line: 1428, column: 2, scope: !6528)
!6609 = !DILocation(line: 1429, column: 1, scope: !6528)
!6610 = distinct !DISubprogram(name: "dmaengine_get_unmap_data", scope: !3, file: !3, line: 1480, type: !6611, scopeLine: 1481, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6611 = !DISubroutineType(types: !6612)
!6612 = !{!4080, !301, !249, !826}
!6613 = !DILocalVariable(name: "dev", arg: 1, scope: !6610, file: !3, line: 1480, type: !301)
!6614 = !DILocation(line: 1480, column: 41, scope: !6610)
!6615 = !DILocalVariable(name: "nr", arg: 2, scope: !6610, file: !3, line: 1480, type: !249)
!6616 = !DILocation(line: 1480, column: 50, scope: !6610)
!6617 = !DILocalVariable(name: "flags", arg: 3, scope: !6610, file: !3, line: 1480, type: !826)
!6618 = !DILocation(line: 1480, column: 60, scope: !6610)
!6619 = !DILocalVariable(name: "unmap", scope: !6610, file: !3, line: 1482, type: !4080)
!6620 = !DILocation(line: 1482, column: 31, scope: !6610)
!6621 = !DILocation(line: 1484, column: 41, scope: !6610)
!6622 = !DILocation(line: 1484, column: 24, scope: !6610)
!6623 = !DILocation(line: 1484, column: 46, scope: !6610)
!6624 = !DILocation(line: 1484, column: 52, scope: !6610)
!6625 = !DILocation(line: 1484, column: 10, scope: !6610)
!6626 = !DILocation(line: 1484, column: 8, scope: !6610)
!6627 = !DILocation(line: 1485, column: 7, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 1485, column: 6)
!6629 = !DILocation(line: 1485, column: 6, scope: !6610)
!6630 = !DILocation(line: 1486, column: 3, scope: !6628)
!6631 = !DILocation(line: 1488, column: 9, scope: !6610)
!6632 = !DILocation(line: 1488, column: 2, scope: !6610)
!6633 = !DILocation(line: 1489, column: 13, scope: !6610)
!6634 = !DILocation(line: 1489, column: 20, scope: !6610)
!6635 = !DILocation(line: 1489, column: 2, scope: !6610)
!6636 = !DILocation(line: 1490, column: 15, scope: !6610)
!6637 = !DILocation(line: 1490, column: 2, scope: !6610)
!6638 = !DILocation(line: 1490, column: 9, scope: !6610)
!6639 = !DILocation(line: 1490, column: 13, scope: !6610)
!6640 = !DILocation(line: 1491, column: 19, scope: !6610)
!6641 = !DILocation(line: 1491, column: 2, scope: !6610)
!6642 = !DILocation(line: 1491, column: 9, scope: !6610)
!6643 = !DILocation(line: 1491, column: 17, scope: !6610)
!6644 = !DILocation(line: 1493, column: 9, scope: !6610)
!6645 = !DILocation(line: 1493, column: 2, scope: !6610)
!6646 = !DILocation(line: 1494, column: 1, scope: !6610)
!6647 = distinct !DISubprogram(name: "__get_unmap_pool", scope: !3, file: !3, line: 1385, type: !6648, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6648 = !DISubroutineType(types: !6649)
!6649 = !{!6650, !249}
!6650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4357, size: 64)
!6651 = !DILocalVariable(name: "nr", arg: 1, scope: !6647, file: !3, line: 1385, type: !249)
!6652 = !DILocation(line: 1385, column: 58, scope: !6647)
!6653 = !DILocalVariable(name: "order", scope: !6647, file: !3, line: 1387, type: !249)
!6654 = !DILocation(line: 1387, column: 6, scope: !6647)
!6655 = !DILocation(line: 1387, column: 30, scope: !6647)
!6656 = !DILocation(line: 1387, column: 14, scope: !6647)
!6657 = !DILocation(line: 1389, column: 10, scope: !6647)
!6658 = !DILocation(line: 1389, column: 2, scope: !6647)
!6659 = !DILocation(line: 1391, column: 3, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 1389, column: 17)
!6661 = !DILocation(line: 1401, column: 3, scope: !6660)
!6662 = !DILocation(line: 1401, column: 3, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 1401, column: 3)
!6664 = !DILocation(line: 1401, column: 3, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 1401, column: 3)
!6666 = !DILocation(line: 1401, column: 3, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 1401, column: 3)
!6668 = !{i32 -2141224235, i32 -2141224206, i32 -2141224160, i32 -2141224102, i32 -2141224048, i32 -2141223994, i32 -2141223939, i32 -2141223908}
!6669 = !DILocation(line: 1401, column: 3, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 1401, column: 3)
!6671 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 1401, column: 3)
!6672 = !{i32 -2141223461, i32 -2141223454, i32 -2141223400, i32 -2141223369, i32 -2141223339}
!6673 = !DILocation(line: 1401, column: 3, scope: !6671)
!6674 = !DILocation(line: 1402, column: 3, scope: !6660)
!6675 = !DILocation(line: 1404, column: 1, scope: !6647)
!6676 = distinct !DISubprogram(name: "dma_async_tx_descriptor_init", scope: !3, file: !3, line: 1497, type: !6677, scopeLine: 1499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6677 = !DISubroutineType(types: !6678)
!6678 = !{null, !4049, !228}
!6679 = !DILocalVariable(name: "tx", arg: 1, scope: !6676, file: !3, line: 1497, type: !4049)
!6680 = !DILocation(line: 1497, column: 67, scope: !6676)
!6681 = !DILocalVariable(name: "chan", arg: 2, scope: !6676, file: !3, line: 1498, type: !228)
!6682 = !DILocation(line: 1498, column: 19, scope: !6676)
!6683 = !DILocation(line: 1500, column: 13, scope: !6676)
!6684 = !DILocation(line: 1500, column: 2, scope: !6676)
!6685 = !DILocation(line: 1500, column: 6, scope: !6676)
!6686 = !DILocation(line: 1500, column: 11, scope: !6676)
!6687 = !DILocation(line: 1504, column: 1, scope: !6676)
!6688 = distinct !DISubprogram(name: "dmaengine_desc_attach_metadata", scope: !3, file: !3, line: 1523, type: !4099, scopeLine: 1525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6689 = !DILocalVariable(name: "desc", arg: 1, scope: !6688, file: !3, line: 1523, type: !4049)
!6690 = !DILocation(line: 1523, column: 68, scope: !6688)
!6691 = !DILocalVariable(name: "data", arg: 2, scope: !6688, file: !3, line: 1524, type: !269)
!6692 = !DILocation(line: 1524, column: 14, scope: !6688)
!6693 = !DILocalVariable(name: "len", arg: 3, scope: !6688, file: !3, line: 1524, type: !404)
!6694 = !DILocation(line: 1524, column: 27, scope: !6688)
!6695 = !DILocalVariable(name: "ret", scope: !6688, file: !3, line: 1526, type: !249)
!6696 = !DILocation(line: 1526, column: 6, scope: !6688)
!6697 = !DILocation(line: 1528, column: 7, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 1528, column: 6)
!6699 = !DILocation(line: 1528, column: 6, scope: !6688)
!6700 = !DILocation(line: 1529, column: 3, scope: !6698)
!6701 = !DILocation(line: 1531, column: 41, scope: !6688)
!6702 = !DILocation(line: 1531, column: 8, scope: !6688)
!6703 = !DILocation(line: 1531, column: 6, scope: !6688)
!6704 = !DILocation(line: 1532, column: 6, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 1532, column: 6)
!6706 = !DILocation(line: 1532, column: 6, scope: !6688)
!6707 = !DILocation(line: 1533, column: 10, scope: !6705)
!6708 = !DILocation(line: 1533, column: 3, scope: !6705)
!6709 = !DILocation(line: 1535, column: 7, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 1535, column: 6)
!6711 = !DILocation(line: 1535, column: 13, scope: !6710)
!6712 = !DILocation(line: 1535, column: 26, scope: !6710)
!6713 = !DILocation(line: 1535, column: 30, scope: !6710)
!6714 = !DILocation(line: 1535, column: 36, scope: !6710)
!6715 = !DILocation(line: 1535, column: 50, scope: !6710)
!6716 = !DILocation(line: 1535, column: 6, scope: !6688)
!6717 = !DILocation(line: 1536, column: 3, scope: !6710)
!6718 = !DILocation(line: 1538, column: 9, scope: !6688)
!6719 = !DILocation(line: 1538, column: 15, scope: !6688)
!6720 = !DILocation(line: 1538, column: 29, scope: !6688)
!6721 = !DILocation(line: 1538, column: 36, scope: !6688)
!6722 = !DILocation(line: 1538, column: 42, scope: !6688)
!6723 = !DILocation(line: 1538, column: 48, scope: !6688)
!6724 = !DILocation(line: 1538, column: 2, scope: !6688)
!6725 = !DILocation(line: 1539, column: 1, scope: !6688)
!6726 = distinct !DISubprogram(name: "desc_check_and_set_metadata_mode", scope: !3, file: !3, line: 1507, type: !6727, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6727 = !DISubroutineType(types: !6728)
!6728 = !{!249, !4049, !14}
!6729 = !DILocalVariable(name: "desc", arg: 1, scope: !6726, file: !3, line: 1508, type: !4049)
!6730 = !DILocation(line: 1508, column: 34, scope: !6726)
!6731 = !DILocalVariable(name: "mode", arg: 2, scope: !6726, file: !3, line: 1508, type: !14)
!6732 = !DILocation(line: 1508, column: 68, scope: !6726)
!6733 = !DILocation(line: 1511, column: 7, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 1511, column: 6)
!6735 = !DILocation(line: 1511, column: 13, scope: !6734)
!6736 = !DILocation(line: 1511, column: 6, scope: !6726)
!6737 = !DILocation(line: 1512, column: 44, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1512, column: 7)
!6739 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 1511, column: 33)
!6740 = !DILocation(line: 1512, column: 50, scope: !6738)
!6741 = !DILocation(line: 1512, column: 56, scope: !6738)
!6742 = !DILocation(line: 1512, column: 7, scope: !6738)
!6743 = !DILocation(line: 1512, column: 7, scope: !6739)
!6744 = !DILocation(line: 1513, column: 31, scope: !6738)
!6745 = !DILocation(line: 1513, column: 4, scope: !6738)
!6746 = !DILocation(line: 1513, column: 10, scope: !6738)
!6747 = !DILocation(line: 1513, column: 29, scope: !6738)
!6748 = !DILocation(line: 1515, column: 4, scope: !6738)
!6749 = !DILocation(line: 1516, column: 2, scope: !6739)
!6750 = !DILocation(line: 1516, column: 13, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 1516, column: 13)
!6752 = !DILocation(line: 1516, column: 19, scope: !6751)
!6753 = !DILocation(line: 1516, column: 41, scope: !6751)
!6754 = !DILocation(line: 1516, column: 38, scope: !6751)
!6755 = !DILocation(line: 1516, column: 13, scope: !6734)
!6756 = !DILocation(line: 1517, column: 3, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 1516, column: 47)
!6758 = !DILocation(line: 1520, column: 2, scope: !6726)
!6759 = !DILocation(line: 1521, column: 1, scope: !6726)
!6760 = distinct !DISubprogram(name: "dmaengine_desc_get_metadata_ptr", scope: !3, file: !3, line: 1542, type: !4103, scopeLine: 1544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6761 = !DILocalVariable(name: "desc", arg: 1, scope: !6760, file: !3, line: 1542, type: !4049)
!6762 = !DILocation(line: 1542, column: 71, scope: !6760)
!6763 = !DILocalVariable(name: "payload_len", arg: 2, scope: !6760, file: !3, line: 1543, type: !4105)
!6764 = !DILocation(line: 1543, column: 19, scope: !6760)
!6765 = !DILocalVariable(name: "max_len", arg: 3, scope: !6760, file: !3, line: 1543, type: !4105)
!6766 = !DILocation(line: 1543, column: 40, scope: !6760)
!6767 = !DILocalVariable(name: "ret", scope: !6760, file: !3, line: 1545, type: !249)
!6768 = !DILocation(line: 1545, column: 6, scope: !6760)
!6769 = !DILocation(line: 1547, column: 7, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 1547, column: 6)
!6771 = !DILocation(line: 1547, column: 6, scope: !6760)
!6772 = !DILocation(line: 1548, column: 10, scope: !6770)
!6773 = !DILocation(line: 1548, column: 3, scope: !6770)
!6774 = !DILocation(line: 1550, column: 41, scope: !6760)
!6775 = !DILocation(line: 1550, column: 8, scope: !6760)
!6776 = !DILocation(line: 1550, column: 6, scope: !6760)
!6777 = !DILocation(line: 1551, column: 6, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 1551, column: 6)
!6779 = !DILocation(line: 1551, column: 6, scope: !6760)
!6780 = !DILocation(line: 1552, column: 18, scope: !6778)
!6781 = !DILocation(line: 1552, column: 10, scope: !6778)
!6782 = !DILocation(line: 1552, column: 3, scope: !6778)
!6783 = !DILocation(line: 1554, column: 7, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 1554, column: 6)
!6785 = !DILocation(line: 1554, column: 13, scope: !6784)
!6786 = !DILocation(line: 1554, column: 26, scope: !6784)
!6787 = !DILocation(line: 1554, column: 30, scope: !6784)
!6788 = !DILocation(line: 1554, column: 36, scope: !6784)
!6789 = !DILocation(line: 1554, column: 50, scope: !6784)
!6790 = !DILocation(line: 1554, column: 6, scope: !6760)
!6791 = !DILocation(line: 1555, column: 10, scope: !6784)
!6792 = !DILocation(line: 1555, column: 3, scope: !6784)
!6793 = !DILocation(line: 1557, column: 9, scope: !6760)
!6794 = !DILocation(line: 1557, column: 15, scope: !6760)
!6795 = !DILocation(line: 1557, column: 29, scope: !6760)
!6796 = !DILocation(line: 1557, column: 37, scope: !6760)
!6797 = !DILocation(line: 1557, column: 43, scope: !6760)
!6798 = !DILocation(line: 1557, column: 56, scope: !6760)
!6799 = !DILocation(line: 1557, column: 2, scope: !6760)
!6800 = !DILocation(line: 1558, column: 1, scope: !6760)
!6801 = distinct !DISubprogram(name: "dmaengine_desc_set_metadata_len", scope: !3, file: !3, line: 1561, type: !4108, scopeLine: 1563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6802 = !DILocalVariable(name: "desc", arg: 1, scope: !6801, file: !3, line: 1561, type: !4049)
!6803 = !DILocation(line: 1561, column: 69, scope: !6801)
!6804 = !DILocalVariable(name: "payload_len", arg: 2, scope: !6801, file: !3, line: 1562, type: !404)
!6805 = !DILocation(line: 1562, column: 16, scope: !6801)
!6806 = !DILocalVariable(name: "ret", scope: !6801, file: !3, line: 1564, type: !249)
!6807 = !DILocation(line: 1564, column: 6, scope: !6801)
!6808 = !DILocation(line: 1566, column: 7, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 1566, column: 6)
!6810 = !DILocation(line: 1566, column: 6, scope: !6801)
!6811 = !DILocation(line: 1567, column: 3, scope: !6809)
!6812 = !DILocation(line: 1569, column: 41, scope: !6801)
!6813 = !DILocation(line: 1569, column: 8, scope: !6801)
!6814 = !DILocation(line: 1569, column: 6, scope: !6801)
!6815 = !DILocation(line: 1570, column: 6, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 1570, column: 6)
!6817 = !DILocation(line: 1570, column: 6, scope: !6801)
!6818 = !DILocation(line: 1571, column: 10, scope: !6816)
!6819 = !DILocation(line: 1571, column: 3, scope: !6816)
!6820 = !DILocation(line: 1573, column: 7, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 1573, column: 6)
!6822 = !DILocation(line: 1573, column: 13, scope: !6821)
!6823 = !DILocation(line: 1573, column: 26, scope: !6821)
!6824 = !DILocation(line: 1573, column: 30, scope: !6821)
!6825 = !DILocation(line: 1573, column: 36, scope: !6821)
!6826 = !DILocation(line: 1573, column: 50, scope: !6821)
!6827 = !DILocation(line: 1573, column: 6, scope: !6801)
!6828 = !DILocation(line: 1574, column: 3, scope: !6821)
!6829 = !DILocation(line: 1576, column: 9, scope: !6801)
!6830 = !DILocation(line: 1576, column: 15, scope: !6801)
!6831 = !DILocation(line: 1576, column: 29, scope: !6801)
!6832 = !DILocation(line: 1576, column: 37, scope: !6801)
!6833 = !DILocation(line: 1576, column: 43, scope: !6801)
!6834 = !DILocation(line: 1576, column: 2, scope: !6801)
!6835 = !DILocation(line: 1577, column: 1, scope: !6801)
!6836 = distinct !DISubprogram(name: "dma_wait_for_async_tx", scope: !3, file: !3, line: 1585, type: !6837, scopeLine: 1586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6837 = !DISubroutineType(types: !6838)
!6838 = !{!5, !4049}
!6839 = !DILocation(line: 363, column: 74, scope: !4443, inlinedAt: !6840)
!6840 = distinct !DILocation(line: 1587, column: 50, scope: !6836)
!6841 = !DILocalVariable(name: "tx", arg: 1, scope: !6836, file: !3, line: 1585, type: !4049)
!6842 = !DILocation(line: 1585, column: 55, scope: !6836)
!6843 = !DILocalVariable(name: "dma_sync_wait_timeout", scope: !6836, file: !3, line: 1587, type: !288)
!6844 = !DILocation(line: 1587, column: 16, scope: !6836)
!6845 = !DILocation(line: 1587, column: 40, scope: !6836)
!6846 = !DILocation(line: 365, column: 27, scope: !4459, inlinedAt: !6840)
!6847 = !DILocation(line: 365, column: 6, scope: !4459, inlinedAt: !6840)
!6848 = !DILocation(line: 365, column: 6, scope: !4443, inlinedAt: !6840)
!6849 = !DILocation(line: 366, column: 12, scope: !4463, inlinedAt: !6840)
!6850 = !DILocation(line: 366, column: 14, scope: !4463, inlinedAt: !6840)
!6851 = !DILocation(line: 366, column: 7, scope: !4464, inlinedAt: !6840)
!6852 = !DILocation(line: 367, column: 4, scope: !4463, inlinedAt: !6840)
!6853 = !DILocation(line: 368, column: 28, scope: !4464, inlinedAt: !6840)
!6854 = !DILocation(line: 368, column: 10, scope: !4464, inlinedAt: !6840)
!6855 = !DILocation(line: 368, column: 3, scope: !4464, inlinedAt: !6840)
!6856 = !DILocation(line: 370, column: 29, scope: !4472, inlinedAt: !6840)
!6857 = !DILocation(line: 370, column: 10, scope: !4472, inlinedAt: !6840)
!6858 = !DILocation(line: 370, column: 3, scope: !4472, inlinedAt: !6840)
!6859 = !DILocation(line: 372, column: 1, scope: !4443, inlinedAt: !6840)
!6860 = !DILocation(line: 1587, column: 48, scope: !6836)
!6861 = !DILocation(line: 1589, column: 7, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 1589, column: 6)
!6863 = !DILocation(line: 1589, column: 6, scope: !6836)
!6864 = !DILocation(line: 1590, column: 3, scope: !6862)
!6865 = !DILocation(line: 1592, column: 2, scope: !6836)
!6866 = !DILocation(line: 1592, column: 9, scope: !6836)
!6867 = !DILocation(line: 1592, column: 13, scope: !6836)
!6868 = !DILocation(line: 1592, column: 20, scope: !6836)
!6869 = !DILocation(line: 1593, column: 7, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 1593, column: 7)
!6871 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 1592, column: 31)
!6872 = !DILocation(line: 1593, column: 7, scope: !6871)
!6873 = !DILocation(line: 1594, column: 4, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 1593, column: 54)
!6875 = !DILocation(line: 1597, column: 4, scope: !6874)
!6876 = !DILocation(line: 13, column: 2, scope: !4497, inlinedAt: !6877)
!6877 = distinct !DILocation(line: 18, column: 2, scope: !4500, inlinedAt: !6878)
!6878 = distinct !DILocation(line: 1599, column: 3, scope: !6871)
!6879 = distinct !{!6879, !6865, !6880}
!6880 = !DILocation(line: 1600, column: 2, scope: !6836)
!6881 = !DILocation(line: 1601, column: 23, scope: !6836)
!6882 = !DILocation(line: 1601, column: 27, scope: !6836)
!6883 = !DILocation(line: 1601, column: 33, scope: !6836)
!6884 = !DILocation(line: 1601, column: 37, scope: !6836)
!6885 = !DILocation(line: 1601, column: 9, scope: !6836)
!6886 = !DILocation(line: 1601, column: 2, scope: !6836)
!6887 = !DILocation(line: 1602, column: 1, scope: !6836)
!6888 = distinct !DISubprogram(name: "dma_run_dependencies", scope: !3, file: !3, line: 1612, type: !6889, scopeLine: 1613, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6889 = !DISubroutineType(types: !6890)
!6890 = !{null, !4049}
!6891 = !DILocalVariable(name: "tx", arg: 1, scope: !6888, file: !3, line: 1612, type: !4049)
!6892 = !DILocation(line: 1612, column: 59, scope: !6888)
!6893 = !DILocalVariable(name: "dep", scope: !6888, file: !3, line: 1614, type: !4049)
!6894 = !DILocation(line: 1614, column: 34, scope: !6888)
!6895 = !DILocation(line: 1614, column: 49, scope: !6888)
!6896 = !DILocation(line: 1614, column: 40, scope: !6888)
!6897 = !DILocalVariable(name: "dep_next", scope: !6888, file: !3, line: 1615, type: !4049)
!6898 = !DILocation(line: 1615, column: 34, scope: !6888)
!6899 = !DILocalVariable(name: "chan", scope: !6888, file: !3, line: 1616, type: !228)
!6900 = !DILocation(line: 1616, column: 19, scope: !6888)
!6901 = !DILocation(line: 1618, column: 7, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 1618, column: 6)
!6903 = !DILocation(line: 1618, column: 6, scope: !6888)
!6904 = !DILocation(line: 1619, column: 3, scope: !6902)
!6905 = !DILocation(line: 1622, column: 17, scope: !6888)
!6906 = !DILocation(line: 1622, column: 2, scope: !6888)
!6907 = !DILocation(line: 1623, column: 9, scope: !6888)
!6908 = !DILocation(line: 1623, column: 14, scope: !6888)
!6909 = !DILocation(line: 1623, column: 7, scope: !6888)
!6910 = !DILocation(line: 1629, column: 2, scope: !6888)
!6911 = !DILocation(line: 1629, column: 9, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1629, column: 2)
!6913 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 1629, column: 2)
!6914 = !DILocation(line: 1629, column: 2, scope: !6913)
!6915 = !DILocation(line: 1630, column: 12, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 1629, column: 30)
!6917 = !DILocation(line: 1630, column: 3, scope: !6916)
!6918 = !DILocation(line: 1631, column: 20, scope: !6916)
!6919 = !DILocation(line: 1631, column: 3, scope: !6916)
!6920 = !DILocation(line: 1632, column: 23, scope: !6916)
!6921 = !DILocation(line: 1632, column: 14, scope: !6916)
!6922 = !DILocation(line: 1632, column: 12, scope: !6916)
!6923 = !DILocation(line: 1633, column: 7, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6916, file: !3, line: 1633, column: 7)
!6925 = !DILocation(line: 1633, column: 16, scope: !6924)
!6926 = !DILocation(line: 1633, column: 19, scope: !6924)
!6927 = !DILocation(line: 1633, column: 29, scope: !6924)
!6928 = !DILocation(line: 1633, column: 37, scope: !6924)
!6929 = !DILocation(line: 1633, column: 34, scope: !6924)
!6930 = !DILocation(line: 1633, column: 7, scope: !6916)
!6931 = !DILocation(line: 1634, column: 19, scope: !6924)
!6932 = !DILocation(line: 1634, column: 4, scope: !6924)
!6933 = !DILocation(line: 1636, column: 13, scope: !6924)
!6934 = !DILocation(line: 1637, column: 14, scope: !6916)
!6935 = !DILocation(line: 1637, column: 3, scope: !6916)
!6936 = !DILocation(line: 1639, column: 3, scope: !6916)
!6937 = !DILocation(line: 1639, column: 8, scope: !6916)
!6938 = !DILocation(line: 1639, column: 18, scope: !6916)
!6939 = !DILocation(line: 1640, column: 2, scope: !6916)
!6940 = !DILocation(line: 1629, column: 20, scope: !6912)
!6941 = !DILocation(line: 1629, column: 18, scope: !6912)
!6942 = !DILocation(line: 1629, column: 2, scope: !6912)
!6943 = distinct !{!6943, !6914, !6944}
!6944 = !DILocation(line: 1640, column: 2, scope: !6913)
!6945 = !DILocation(line: 1642, column: 2, scope: !6888)
!6946 = !DILocation(line: 1642, column: 8, scope: !6888)
!6947 = !DILocation(line: 1642, column: 16, scope: !6888)
!6948 = !DILocation(line: 1642, column: 37, scope: !6888)
!6949 = !DILocation(line: 1643, column: 1, scope: !6888)
!6950 = distinct !DISubprogram(name: "txd_next", scope: !6, file: !6, line: 670, type: !6951, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6951 = !DISubroutineType(types: !6952)
!6952 = !{!4049, !4049}
!6953 = !DILocalVariable(name: "txd", arg: 1, scope: !6950, file: !6, line: 670, type: !4049)
!6954 = !DILocation(line: 670, column: 88, scope: !6950)
!6955 = !DILocation(line: 672, column: 2, scope: !6950)
!6956 = distinct !DISubprogram(name: "txd_clear_next", scope: !6, file: !6, line: 667, type: !6889, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6957 = !DILocalVariable(name: "txd", arg: 1, scope: !6956, file: !6, line: 667, type: !4049)
!6958 = !DILocation(line: 667, column: 67, scope: !6956)
!6959 = !DILocation(line: 669, column: 1, scope: !6956)
!6960 = distinct !DISubprogram(name: "txd_lock", scope: !6, file: !6, line: 654, type: !6889, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6961 = !DILocalVariable(name: "txd", arg: 1, scope: !6960, file: !6, line: 654, type: !4049)
!6962 = !DILocation(line: 654, column: 61, scope: !6960)
!6963 = !DILocation(line: 656, column: 1, scope: !6960)
!6964 = distinct !DISubprogram(name: "txd_clear_parent", scope: !6, file: !6, line: 664, type: !6889, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6965 = !DILocalVariable(name: "txd", arg: 1, scope: !6964, file: !6, line: 664, type: !4049)
!6966 = !DILocation(line: 664, column: 69, scope: !6964)
!6967 = !DILocation(line: 666, column: 1, scope: !6964)
!6968 = distinct !DISubprogram(name: "txd_unlock", scope: !6, file: !6, line: 657, type: !6889, scopeLine: 658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6969 = !DILocalVariable(name: "txd", arg: 1, scope: !6968, file: !6, line: 657, type: !4049)
!6970 = !DILocation(line: 657, column: 63, scope: !6968)
!6971 = !DILocation(line: 659, column: 1, scope: !6968)
!6972 = !DILocalVariable(name: "err", scope: !4386, file: !3, line: 1648, type: !249)
!6973 = !DILocation(line: 1648, column: 6, scope: !4386)
!6974 = !DILocation(line: 1648, column: 12, scope: !4386)
!6975 = !DILocation(line: 1650, column: 6, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !4386, file: !3, line: 1650, column: 6)
!6977 = !DILocation(line: 1650, column: 6, scope: !4386)
!6978 = !DILocation(line: 1651, column: 10, scope: !6976)
!6979 = !DILocation(line: 1651, column: 3, scope: !6976)
!6980 = !DILocation(line: 1653, column: 8, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !4386, file: !3, line: 1653, column: 8)
!6982 = !DILocation(line: 1653, column: 6, scope: !4386)
!6983 = !DILocation(line: 1654, column: 7, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !4386, file: !3, line: 1654, column: 6)
!6985 = !DILocation(line: 1654, column: 6, scope: !4386)
!6986 = !DILocation(line: 1655, column: 3, scope: !6984)
!6987 = !DILocation(line: 1657, column: 9, scope: !4386)
!6988 = !DILocation(line: 1657, column: 2, scope: !4386)
!6989 = !DILocation(line: 1658, column: 1, scope: !4386)
!6990 = distinct !DISubprogram(name: "bitmap_fill", scope: !6991, file: !6991, line: 241, type: !6992, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!6991 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!6992 = !DISubroutineType(types: !6993)
!6993 = !{null, !3910, !7}
!6994 = !DILocalVariable(name: "dst", arg: 1, scope: !6990, file: !6991, line: 241, type: !3910)
!6995 = !DILocation(line: 241, column: 47, scope: !6990)
!6996 = !DILocalVariable(name: "nbits", arg: 2, scope: !6990, file: !6991, line: 241, type: !7)
!6997 = !DILocation(line: 241, column: 65, scope: !6990)
!6998 = !DILocalVariable(name: "len", scope: !6990, file: !6991, line: 243, type: !7)
!6999 = !DILocation(line: 243, column: 15, scope: !6990)
!7000 = !DILocation(line: 243, column: 21, scope: !6990)
!7001 = !DILocation(line: 243, column: 42, scope: !6990)
!7002 = !DILocation(line: 244, column: 9, scope: !6990)
!7003 = !DILocation(line: 244, column: 2, scope: !6990)
!7004 = !DILocation(line: 244, column: 20, scope: !6990)
!7005 = !DILocation(line: 245, column: 1, scope: !6990)
!7006 = distinct !DISubprogram(name: "clear_bit", scope: !7007, file: !7007, line: 39, type: !7008, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7007 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7008 = !DISubroutineType(types: !7009)
!7009 = !{null, !226, !7010}
!7010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4769, size: 64)
!7011 = !DILocalVariable(name: "nr", arg: 1, scope: !7012, file: !4772, line: 72, type: !226)
!7012 = distinct !DISubprogram(name: "arch_clear_bit", scope: !4772, file: !4772, line: 72, type: !7008, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7013 = !DILocation(line: 72, column: 21, scope: !7012, inlinedAt: !7014)
!7014 = distinct !DILocation(line: 42, column: 2, scope: !7006)
!7015 = !DILocalVariable(name: "addr", arg: 2, scope: !7012, file: !4772, line: 72, type: !7010)
!7016 = !DILocation(line: 72, column: 49, scope: !7012, inlinedAt: !7014)
!7017 = !DILocalVariable(name: "v", arg: 1, scope: !7018, file: !4787, line: 84, type: !4790)
!7018 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !4787, file: !4787, line: 84, type: !4788, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7019 = !DILocation(line: 84, column: 74, scope: !7018, inlinedAt: !7020)
!7020 = distinct !DILocation(line: 41, column: 2, scope: !7006)
!7021 = !DILocalVariable(name: "size", arg: 2, scope: !7018, file: !4787, line: 84, type: !404)
!7022 = !DILocation(line: 84, column: 84, scope: !7018, inlinedAt: !7020)
!7023 = !DILocalVariable(name: "nr", arg: 1, scope: !7006, file: !7007, line: 39, type: !226)
!7024 = !DILocation(line: 39, column: 35, scope: !7006)
!7025 = !DILocalVariable(name: "addr", arg: 2, scope: !7006, file: !7007, line: 39, type: !7010)
!7026 = !DILocation(line: 39, column: 63, scope: !7006)
!7027 = !DILocation(line: 41, column: 26, scope: !7006)
!7028 = !DILocation(line: 41, column: 33, scope: !7006)
!7029 = !DILocation(line: 41, column: 31, scope: !7006)
!7030 = !DILocation(line: 86, column: 20, scope: !7018, inlinedAt: !7020)
!7031 = !DILocation(line: 86, column: 23, scope: !7018, inlinedAt: !7020)
!7032 = !DILocation(line: 86, column: 2, scope: !7018, inlinedAt: !7020)
!7033 = !DILocation(line: 87, column: 2, scope: !7018, inlinedAt: !7020)
!7034 = !DILocation(line: 42, column: 17, scope: !7006)
!7035 = !DILocation(line: 42, column: 21, scope: !7006)
!7036 = !DILocation(line: 74, column: 27, scope: !7037, inlinedAt: !7014)
!7037 = distinct !DILexicalBlock(scope: !7012, file: !4772, line: 74, column: 6)
!7038 = !DILocation(line: 74, column: 6, scope: !7037, inlinedAt: !7014)
!7039 = !DILocation(line: 74, column: 6, scope: !7012, inlinedAt: !7014)
!7040 = !DILocation(line: 76, column: 6, scope: !7041, inlinedAt: !7014)
!7041 = distinct !DILexicalBlock(scope: !7037, file: !4772, line: 74, column: 32)
!7042 = !DILocation(line: 77, column: 13, scope: !7041, inlinedAt: !7014)
!7043 = !DILocation(line: 77, column: 12, scope: !7041, inlinedAt: !7014)
!7044 = !DILocation(line: 75, column: 3, scope: !7041, inlinedAt: !7014)
!7045 = !{i32 -2147021603}
!7046 = !DILocation(line: 78, column: 2, scope: !7041, inlinedAt: !7014)
!7047 = !DILocation(line: 80, column: 8, scope: !7048, inlinedAt: !7014)
!7048 = distinct !DILexicalBlock(scope: !7037, file: !4772, line: 78, column: 9)
!7049 = !DILocation(line: 80, column: 32, scope: !7048, inlinedAt: !7014)
!7050 = !DILocation(line: 79, column: 3, scope: !7048, inlinedAt: !7014)
!7051 = !{i32 -2147021471}
!7052 = !DILocation(line: 43, column: 1, scope: !7006)
!7053 = distinct !DISubprogram(name: "kasan_check_write", scope: !7054, file: !7054, line: 38, type: !7055, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7054 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7055 = !DISubroutineType(types: !7056)
!7056 = !{!267, !4790, !7}
!7057 = !DILocalVariable(name: "p", arg: 1, scope: !7053, file: !7054, line: 38, type: !4790)
!7058 = !DILocation(line: 38, column: 59, scope: !7053)
!7059 = !DILocalVariable(name: "size", arg: 2, scope: !7053, file: !7054, line: 38, type: !7)
!7060 = !DILocation(line: 38, column: 75, scope: !7053)
!7061 = !DILocation(line: 40, column: 2, scope: !7053)
!7062 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7063, file: !7063, line: 178, type: !7064, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7063 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7064 = !DISubroutineType(types: !7065)
!7065 = !{null, !4790, !404, !249}
!7066 = !DILocalVariable(name: "ptr", arg: 1, scope: !7062, file: !7063, line: 178, type: !4790)
!7067 = !DILocation(line: 178, column: 60, scope: !7062)
!7068 = !DILocalVariable(name: "size", arg: 2, scope: !7062, file: !7063, line: 178, type: !404)
!7069 = !DILocation(line: 178, column: 72, scope: !7062)
!7070 = !DILocalVariable(name: "type", arg: 3, scope: !7062, file: !7063, line: 179, type: !249)
!7071 = !DILocation(line: 179, column: 15, scope: !7062)
!7072 = !DILocation(line: 179, column: 23, scope: !7062)
!7073 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !4444, file: !4444, line: 308, type: !4445, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7074 = !DILocalVariable(name: "m", arg: 1, scope: !7073, file: !4444, line: 308, type: !2936)
!7075 = !DILocation(line: 308, column: 66, scope: !7073)
!7076 = !DILocation(line: 310, column: 10, scope: !7073)
!7077 = !DILocation(line: 310, column: 12, scope: !7073)
!7078 = !DILocation(line: 310, column: 34, scope: !7073)
!7079 = !DILocation(line: 310, column: 39, scope: !7073)
!7080 = !DILocation(line: 310, column: 2, scope: !7073)
!7081 = distinct !DISubprogram(name: "__rcu_read_lock", scope: !4578, file: !4578, line: 64, type: !1989, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7082 = !DILocation(line: 66, column: 2, scope: !7081)
!7083 = !{i32 -2145426703}
!7084 = !DILocation(line: 67, column: 1, scope: !7081)
!7085 = distinct !DISubprogram(name: "__rcu_read_unlock", scope: !4578, file: !4578, line: 69, type: !1989, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7086 = !DILocation(line: 71, column: 2, scope: !7085)
!7087 = !{i32 -2145426490}
!7088 = !DILocation(line: 72, column: 2, scope: !7085)
!7089 = !DILocation(line: 72, column: 2, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7085, file: !4578, line: 72, column: 2)
!7091 = !DILocation(line: 73, column: 1, scope: !7085)
!7092 = distinct !DISubprogram(name: "kasan_check_read", scope: !7054, file: !7054, line: 34, type: !7055, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7093 = !DILocalVariable(name: "p", arg: 1, scope: !7092, file: !7054, line: 34, type: !4790)
!7094 = !DILocation(line: 34, column: 58, scope: !7092)
!7095 = !DILocalVariable(name: "size", arg: 2, scope: !7092, file: !7054, line: 34, type: !7)
!7096 = !DILocation(line: 34, column: 74, scope: !7092)
!7097 = !DILocation(line: 36, column: 2, scope: !7092)
!7098 = distinct !DISubprogram(name: "set_bit", scope: !7007, file: !7007, line: 26, type: !7008, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7099 = !DILocalVariable(name: "nr", arg: 1, scope: !7100, file: !4772, line: 52, type: !226)
!7100 = distinct !DISubprogram(name: "arch_set_bit", scope: !4772, file: !4772, line: 52, type: !7008, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7101 = !DILocation(line: 52, column: 19, scope: !7100, inlinedAt: !7102)
!7102 = distinct !DILocation(line: 29, column: 2, scope: !7098)
!7103 = !DILocalVariable(name: "addr", arg: 2, scope: !7100, file: !4772, line: 52, type: !7010)
!7104 = !DILocation(line: 52, column: 47, scope: !7100, inlinedAt: !7102)
!7105 = !DILocation(line: 84, column: 74, scope: !7018, inlinedAt: !7106)
!7106 = distinct !DILocation(line: 28, column: 2, scope: !7098)
!7107 = !DILocation(line: 84, column: 84, scope: !7018, inlinedAt: !7106)
!7108 = !DILocalVariable(name: "nr", arg: 1, scope: !7098, file: !7007, line: 26, type: !226)
!7109 = !DILocation(line: 26, column: 33, scope: !7098)
!7110 = !DILocalVariable(name: "addr", arg: 2, scope: !7098, file: !7007, line: 26, type: !7010)
!7111 = !DILocation(line: 26, column: 61, scope: !7098)
!7112 = !DILocation(line: 28, column: 26, scope: !7098)
!7113 = !DILocation(line: 28, column: 33, scope: !7098)
!7114 = !DILocation(line: 28, column: 31, scope: !7098)
!7115 = !DILocation(line: 86, column: 20, scope: !7018, inlinedAt: !7106)
!7116 = !DILocation(line: 86, column: 23, scope: !7018, inlinedAt: !7106)
!7117 = !DILocation(line: 86, column: 2, scope: !7018, inlinedAt: !7106)
!7118 = !DILocation(line: 87, column: 2, scope: !7018, inlinedAt: !7106)
!7119 = !DILocation(line: 29, column: 15, scope: !7098)
!7120 = !DILocation(line: 29, column: 19, scope: !7098)
!7121 = !DILocation(line: 54, column: 27, scope: !7122, inlinedAt: !7102)
!7122 = distinct !DILexicalBlock(scope: !7100, file: !4772, line: 54, column: 6)
!7123 = !DILocation(line: 54, column: 6, scope: !7122, inlinedAt: !7102)
!7124 = !DILocation(line: 54, column: 6, scope: !7100, inlinedAt: !7102)
!7125 = !DILocation(line: 56, column: 6, scope: !7126, inlinedAt: !7102)
!7126 = distinct !DILexicalBlock(scope: !7122, file: !4772, line: 54, column: 32)
!7127 = !DILocation(line: 57, column: 12, scope: !7126, inlinedAt: !7102)
!7128 = !DILocation(line: 55, column: 3, scope: !7126, inlinedAt: !7102)
!7129 = !{i32 -2147022557}
!7130 = !DILocation(line: 59, column: 2, scope: !7126, inlinedAt: !7102)
!7131 = !DILocation(line: 61, column: 8, scope: !7132, inlinedAt: !7102)
!7132 = distinct !DILexicalBlock(scope: !7122, file: !4772, line: 59, column: 9)
!7133 = !DILocation(line: 61, column: 32, scope: !7132, inlinedAt: !7102)
!7134 = !DILocation(line: 60, column: 3, scope: !7132, inlinedAt: !7102)
!7135 = !{i32 -2147022425}
!7136 = !DILocation(line: 30, column: 1, scope: !7098)
!7137 = distinct !DISubprogram(name: "dma_chan_to_owner", scope: !3, file: !3, line: 402, type: !7138, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7138 = !DISubroutineType(types: !7139)
!7139 = !{!713, !228}
!7140 = !DILocalVariable(name: "chan", arg: 1, scope: !7137, file: !3, line: 402, type: !228)
!7141 = !DILocation(line: 402, column: 58, scope: !7137)
!7142 = !DILocation(line: 404, column: 9, scope: !7137)
!7143 = !DILocation(line: 404, column: 15, scope: !7137)
!7144 = !DILocation(line: 404, column: 23, scope: !7137)
!7145 = !DILocation(line: 404, column: 2, scope: !7137)
!7146 = distinct !DISubprogram(name: "__module_get", scope: !7147, file: !7147, line: 747, type: !7148, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7147 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!7148 = !DISubroutineType(types: !7149)
!7149 = !{null, !713}
!7150 = !DILocalVariable(name: "module", arg: 1, scope: !7146, file: !7147, line: 747, type: !713)
!7151 = !DILocation(line: 747, column: 48, scope: !7146)
!7152 = !DILocation(line: 749, column: 1, scope: !7146)
!7153 = distinct !DISubprogram(name: "try_module_get", scope: !7147, file: !7147, line: 751, type: !7154, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7154 = !DISubroutineType(types: !7155)
!7155 = !{!267, !713}
!7156 = !DILocalVariable(name: "module", arg: 1, scope: !7153, file: !7147, line: 751, type: !713)
!7157 = !DILocation(line: 751, column: 50, scope: !7153)
!7158 = !DILocation(line: 753, column: 2, scope: !7153)
!7159 = distinct !DISubprogram(name: "kref_get_unless_zero", scope: !237, file: !237, line: 109, type: !7160, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7160 = !DISubroutineType(types: !7161)
!7161 = !{!249, !6318}
!7162 = !DILocalVariable(name: "kref", arg: 1, scope: !7159, file: !237, line: 109, type: !6318)
!7163 = !DILocation(line: 109, column: 66, scope: !7159)
!7164 = !DILocation(line: 111, column: 32, scope: !7159)
!7165 = !DILocation(line: 111, column: 38, scope: !7159)
!7166 = !DILocation(line: 111, column: 9, scope: !7159)
!7167 = !DILocation(line: 111, column: 2, scope: !7159)
!7168 = distinct !DISubprogram(name: "balance_ref_count", scope: !3, file: !3, line: 413, type: !4043, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7169 = !DILocalVariable(name: "chan", arg: 1, scope: !7168, file: !3, line: 413, type: !228)
!7170 = !DILocation(line: 413, column: 48, scope: !7168)
!7171 = !DILocalVariable(name: "owner", scope: !7168, file: !3, line: 415, type: !713)
!7172 = !DILocation(line: 415, column: 17, scope: !7168)
!7173 = !DILocation(line: 415, column: 43, scope: !7168)
!7174 = !DILocation(line: 415, column: 25, scope: !7168)
!7175 = !DILocation(line: 417, column: 2, scope: !7168)
!7176 = !DILocation(line: 417, column: 9, scope: !7168)
!7177 = !DILocation(line: 417, column: 15, scope: !7168)
!7178 = !DILocation(line: 417, column: 30, scope: !7168)
!7179 = !DILocation(line: 417, column: 28, scope: !7168)
!7180 = !DILocation(line: 418, column: 16, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7168, file: !3, line: 417, column: 51)
!7182 = !DILocation(line: 418, column: 3, scope: !7181)
!7183 = !DILocation(line: 419, column: 3, scope: !7181)
!7184 = !DILocation(line: 419, column: 9, scope: !7181)
!7185 = !DILocation(line: 419, column: 21, scope: !7181)
!7186 = distinct !{!7186, !7175, !7187}
!7187 = !DILocation(line: 420, column: 2, scope: !7168)
!7188 = !DILocation(line: 421, column: 1, scope: !7168)
!7189 = distinct !DISubprogram(name: "module_put", scope: !7147, file: !7147, line: 756, type: !7148, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7190 = !DILocalVariable(name: "module", arg: 1, scope: !7189, file: !7147, line: 756, type: !713)
!7191 = !DILocation(line: 756, column: 46, scope: !7189)
!7192 = !DILocation(line: 758, column: 1, scope: !7189)
!7193 = distinct !DISubprogram(name: "refcount_inc_not_zero", scope: !199, file: !199, line: 243, type: !7194, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7194 = !DISubroutineType(types: !7195)
!7195 = !{!267, !7196}
!7196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!7197 = !DILocalVariable(name: "r", arg: 1, scope: !7193, file: !199, line: 243, type: !7196)
!7198 = !DILocation(line: 243, column: 67, scope: !7193)
!7199 = !DILocation(line: 245, column: 33, scope: !7193)
!7200 = !DILocation(line: 245, column: 9, scope: !7193)
!7201 = !DILocation(line: 245, column: 2, scope: !7193)
!7202 = distinct !DISubprogram(name: "__refcount_inc_not_zero", scope: !199, file: !199, line: 225, type: !7203, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7203 = !DISubroutineType(types: !7204)
!7204 = !{!267, !7196, !788}
!7205 = !DILocalVariable(name: "r", arg: 1, scope: !7202, file: !199, line: 225, type: !7196)
!7206 = !DILocation(line: 225, column: 69, scope: !7202)
!7207 = !DILocalVariable(name: "oldp", arg: 2, scope: !7202, file: !199, line: 225, type: !788)
!7208 = !DILocation(line: 225, column: 77, scope: !7202)
!7209 = !DILocation(line: 227, column: 36, scope: !7202)
!7210 = !DILocation(line: 227, column: 39, scope: !7202)
!7211 = !DILocation(line: 227, column: 9, scope: !7202)
!7212 = !DILocation(line: 227, column: 2, scope: !7202)
!7213 = distinct !DISubprogram(name: "__refcount_add_not_zero", scope: !199, file: !199, line: 150, type: !7214, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7214 = !DISubroutineType(types: !7215)
!7215 = !{!267, !249, !7196, !788}
!7216 = !DILocalVariable(name: "v", arg: 1, scope: !7217, file: !7218, line: 200, type: !7221)
!7217 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !7218, file: !7218, line: 200, type: !7219, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7218 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!7219 = !DISubroutineType(types: !7220)
!7220 = !{!267, !7221, !788, !249}
!7221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!7222 = !DILocation(line: 200, column: 63, scope: !7217, inlinedAt: !7223)
!7223 = distinct !DILocation(line: 729, column: 9, scope: !7224, inlinedAt: !7226)
!7224 = distinct !DISubprogram(name: "atomic_try_cmpxchg_relaxed", scope: !7225, file: !7225, line: 725, type: !7219, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7225 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!7226 = distinct !DILocation(line: 157, column: 12, scope: !7213)
!7227 = !DILocalVariable(name: "old", arg: 2, scope: !7217, file: !7218, line: 200, type: !788)
!7228 = !DILocation(line: 200, column: 71, scope: !7217, inlinedAt: !7223)
!7229 = !DILocalVariable(name: "new", arg: 3, scope: !7217, file: !7218, line: 200, type: !249)
!7230 = !DILocation(line: 200, column: 80, scope: !7217, inlinedAt: !7223)
!7231 = !DILocalVariable(name: "success", scope: !7232, file: !7218, line: 202, type: !267)
!7232 = distinct !DILexicalBlock(scope: !7217, file: !7218, line: 202, column: 9)
!7233 = !DILocation(line: 202, column: 9, scope: !7232, inlinedAt: !7223)
!7234 = !DILocalVariable(name: "_old", scope: !7232, file: !7218, line: 202, type: !788)
!7235 = !DILocalVariable(name: "__old", scope: !7232, file: !7218, line: 202, type: !249)
!7236 = !DILocalVariable(name: "__new", scope: !7232, file: !7218, line: 202, type: !249)
!7237 = !DILocalVariable(name: "__ptr", scope: !7232, file: !7218, line: 202, type: !4287)
!7238 = !DILocalVariable(name: "v", arg: 1, scope: !7239, file: !4787, line: 99, type: !4790)
!7239 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !4787, file: !4787, line: 99, type: !4788, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7240 = !DILocation(line: 99, column: 79, scope: !7239, inlinedAt: !7241)
!7241 = distinct !DILocation(line: 728, column: 2, scope: !7224, inlinedAt: !7226)
!7242 = !DILocalVariable(name: "size", arg: 2, scope: !7239, file: !4787, line: 99, type: !404)
!7243 = !DILocation(line: 99, column: 89, scope: !7239, inlinedAt: !7241)
!7244 = !DILocation(line: 99, column: 79, scope: !7239, inlinedAt: !7245)
!7245 = distinct !DILocation(line: 727, column: 2, scope: !7224, inlinedAt: !7226)
!7246 = !DILocation(line: 99, column: 89, scope: !7239, inlinedAt: !7245)
!7247 = !DILocalVariable(name: "v", arg: 1, scope: !7224, file: !7225, line: 725, type: !7221)
!7248 = !DILocation(line: 725, column: 38, scope: !7224, inlinedAt: !7226)
!7249 = !DILocalVariable(name: "old", arg: 2, scope: !7224, file: !7225, line: 725, type: !788)
!7250 = !DILocation(line: 725, column: 46, scope: !7224, inlinedAt: !7226)
!7251 = !DILocalVariable(name: "new", arg: 3, scope: !7224, file: !7225, line: 725, type: !249)
!7252 = !DILocation(line: 725, column: 55, scope: !7224, inlinedAt: !7226)
!7253 = !DILocalVariable(name: "i", arg: 1, scope: !7213, file: !199, line: 150, type: !249)
!7254 = !DILocation(line: 150, column: 61, scope: !7213)
!7255 = !DILocalVariable(name: "r", arg: 2, scope: !7213, file: !199, line: 150, type: !7196)
!7256 = !DILocation(line: 150, column: 76, scope: !7213)
!7257 = !DILocalVariable(name: "oldp", arg: 3, scope: !7213, file: !199, line: 150, type: !788)
!7258 = !DILocation(line: 150, column: 84, scope: !7213)
!7259 = !DILocalVariable(name: "old", scope: !7213, file: !199, line: 152, type: !249)
!7260 = !DILocation(line: 152, column: 6, scope: !7213)
!7261 = !DILocation(line: 152, column: 26, scope: !7213)
!7262 = !DILocation(line: 152, column: 12, scope: !7213)
!7263 = !DILocation(line: 154, column: 2, scope: !7213)
!7264 = !DILocation(line: 155, column: 8, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7266, file: !199, line: 155, column: 7)
!7266 = distinct !DILexicalBlock(scope: !7213, file: !199, line: 154, column: 5)
!7267 = !DILocation(line: 155, column: 7, scope: !7266)
!7268 = !DILocation(line: 156, column: 4, scope: !7265)
!7269 = !DILocation(line: 157, column: 2, scope: !7266)
!7270 = !DILocation(line: 157, column: 40, scope: !7213)
!7271 = !DILocation(line: 157, column: 43, scope: !7213)
!7272 = !DILocation(line: 157, column: 55, scope: !7213)
!7273 = !DILocation(line: 157, column: 61, scope: !7213)
!7274 = !DILocation(line: 157, column: 59, scope: !7213)
!7275 = !DILocation(line: 727, column: 31, scope: !7224, inlinedAt: !7226)
!7276 = !DILocation(line: 101, column: 20, scope: !7239, inlinedAt: !7245)
!7277 = !DILocation(line: 101, column: 23, scope: !7239, inlinedAt: !7245)
!7278 = !DILocation(line: 101, column: 2, scope: !7239, inlinedAt: !7245)
!7279 = !DILocation(line: 102, column: 2, scope: !7239, inlinedAt: !7245)
!7280 = !DILocation(line: 728, column: 31, scope: !7224, inlinedAt: !7226)
!7281 = !DILocation(line: 101, column: 20, scope: !7239, inlinedAt: !7241)
!7282 = !DILocation(line: 101, column: 23, scope: !7239, inlinedAt: !7241)
!7283 = !DILocation(line: 101, column: 2, scope: !7239, inlinedAt: !7241)
!7284 = !DILocation(line: 102, column: 2, scope: !7239, inlinedAt: !7241)
!7285 = !DILocation(line: 729, column: 41, scope: !7224, inlinedAt: !7226)
!7286 = !DILocation(line: 729, column: 44, scope: !7224, inlinedAt: !7226)
!7287 = !DILocation(line: 729, column: 49, scope: !7224, inlinedAt: !7226)
!7288 = !{i32 -2146594321, i32 -2146594166}
!7289 = !DILocation(line: 202, column: 9, scope: !7290, inlinedAt: !7223)
!7290 = distinct !DILexicalBlock(scope: !7232, file: !7218, line: 202, column: 9)
!7291 = !DILocation(line: 202, column: 9, scope: !7217, inlinedAt: !7223)
!7292 = !DILocation(line: 157, column: 11, scope: !7213)
!7293 = distinct !{!7293, !7263, !7294}
!7294 = !DILocation(line: 157, column: 63, scope: !7213)
!7295 = !DILocation(line: 159, column: 6, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7213, file: !199, line: 159, column: 6)
!7297 = !DILocation(line: 159, column: 6, scope: !7213)
!7298 = !DILocation(line: 160, column: 11, scope: !7296)
!7299 = !DILocation(line: 160, column: 4, scope: !7296)
!7300 = !DILocation(line: 160, column: 9, scope: !7296)
!7301 = !DILocation(line: 160, column: 3, scope: !7296)
!7302 = !DILocation(line: 162, column: 6, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7213, file: !199, line: 162, column: 6)
!7304 = !DILocation(line: 162, column: 6, scope: !7213)
!7305 = !DILocation(line: 163, column: 26, scope: !7303)
!7306 = !DILocation(line: 163, column: 3, scope: !7303)
!7307 = !DILocation(line: 165, column: 9, scope: !7213)
!7308 = !DILocation(line: 165, column: 2, scope: !7213)
!7309 = distinct !DISubprogram(name: "refcount_read", scope: !199, file: !199, line: 145, type: !7310, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7310 = !DISubroutineType(types: !7311)
!7311 = !{!7, !7312}
!7312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7313, size: 64)
!7313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!7314 = !DILocalVariable(name: "v", arg: 1, scope: !7315, file: !7218, line: 23, type: !7318)
!7315 = distinct !DISubprogram(name: "arch_atomic_read", scope: !7218, file: !7218, line: 23, type: !7316, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7316 = !DISubroutineType(types: !7317)
!7317 = !{!249, !7318}
!7318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7319, size: 64)
!7319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !244)
!7320 = !DILocation(line: 23, column: 61, scope: !7315, inlinedAt: !7321)
!7321 = distinct !DILocation(line: 28, column: 9, scope: !7322, inlinedAt: !7323)
!7322 = distinct !DISubprogram(name: "atomic_read", scope: !7225, file: !7225, line: 25, type: !7316, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7323 = distinct !DILocation(line: 147, column: 9, scope: !7309)
!7324 = !DILocation(line: 69, column: 73, scope: !4786, inlinedAt: !7325)
!7325 = distinct !DILocation(line: 27, column: 2, scope: !7322, inlinedAt: !7323)
!7326 = !DILocation(line: 69, column: 83, scope: !4786, inlinedAt: !7325)
!7327 = !DILocalVariable(name: "v", arg: 1, scope: !7322, file: !7225, line: 25, type: !7318)
!7328 = !DILocation(line: 25, column: 29, scope: !7322, inlinedAt: !7323)
!7329 = !DILocalVariable(name: "r", arg: 1, scope: !7309, file: !199, line: 145, type: !7312)
!7330 = !DILocation(line: 145, column: 60, scope: !7309)
!7331 = !DILocation(line: 147, column: 22, scope: !7309)
!7332 = !DILocation(line: 147, column: 25, scope: !7309)
!7333 = !DILocation(line: 27, column: 25, scope: !7322, inlinedAt: !7323)
!7334 = !DILocation(line: 71, column: 19, scope: !4786, inlinedAt: !7325)
!7335 = !DILocation(line: 71, column: 22, scope: !4786, inlinedAt: !7325)
!7336 = !DILocation(line: 71, column: 2, scope: !4786, inlinedAt: !7325)
!7337 = !DILocation(line: 72, column: 2, scope: !4786, inlinedAt: !7325)
!7338 = !DILocation(line: 28, column: 26, scope: !7322, inlinedAt: !7323)
!7339 = !DILocation(line: 29, column: 9, scope: !7315, inlinedAt: !7321)
!7340 = !DILocation(line: 147, column: 2, scope: !7309)
!7341 = distinct !DISubprogram(name: "bitmap_zero", scope: !6991, file: !6991, line: 235, type: !6992, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7342 = !DILocalVariable(name: "dst", arg: 1, scope: !7341, file: !6991, line: 235, type: !3910)
!7343 = !DILocation(line: 235, column: 47, scope: !7341)
!7344 = !DILocalVariable(name: "nbits", arg: 2, scope: !7341, file: !6991, line: 235, type: !7)
!7345 = !DILocation(line: 235, column: 65, scope: !7341)
!7346 = !DILocalVariable(name: "len", scope: !7341, file: !6991, line: 237, type: !7)
!7347 = !DILocation(line: 237, column: 15, scope: !7341)
!7348 = !DILocation(line: 237, column: 21, scope: !7341)
!7349 = !DILocation(line: 237, column: 42, scope: !7341)
!7350 = !DILocation(line: 238, column: 9, scope: !7341)
!7351 = !DILocation(line: 238, column: 2, scope: !7341)
!7352 = !DILocation(line: 238, column: 17, scope: !7341)
!7353 = !DILocation(line: 239, column: 1, scope: !7341)
!7354 = distinct !DISubprogram(name: "private_candidate", scope: !3, file: !3, line: 618, type: !7355, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7355 = !DISubroutineType(types: !7356)
!7356 = !{!228, !4993, !232, !263, !269}
!7357 = !DILocalVariable(name: "mask", arg: 1, scope: !7354, file: !3, line: 618, type: !4993)
!7358 = !DILocation(line: 618, column: 65, scope: !7354)
!7359 = !DILocalVariable(name: "dev", arg: 2, scope: !7354, file: !3, line: 619, type: !232)
!7360 = !DILocation(line: 619, column: 27, scope: !7354)
!7361 = !DILocalVariable(name: "fn", arg: 3, scope: !7354, file: !3, line: 620, type: !263)
!7362 = !DILocation(line: 620, column: 22, scope: !7354)
!7363 = !DILocalVariable(name: "fn_param", arg: 4, scope: !7354, file: !3, line: 620, type: !269)
!7364 = !DILocation(line: 620, column: 32, scope: !7354)
!7365 = !DILocalVariable(name: "chan", scope: !7354, file: !3, line: 622, type: !228)
!7366 = !DILocation(line: 622, column: 19, scope: !7354)
!7367 = !DILocation(line: 624, column: 6, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 624, column: 6)
!7369 = !DILocation(line: 624, column: 11, scope: !7368)
!7370 = !DILocation(line: 624, column: 41, scope: !7368)
!7371 = !DILocation(line: 624, column: 46, scope: !7368)
!7372 = !DILocation(line: 624, column: 15, scope: !7368)
!7373 = !DILocation(line: 624, column: 6, scope: !7354)
!7374 = !DILocation(line: 626, column: 3, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 624, column: 53)
!7376 = !DILocation(line: 631, column: 6, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 631, column: 6)
!7378 = !DILocation(line: 631, column: 11, scope: !7377)
!7379 = !DILocation(line: 631, column: 19, scope: !7377)
!7380 = !DILocation(line: 631, column: 23, scope: !7377)
!7381 = !DILocation(line: 631, column: 27, scope: !7377)
!7382 = !DILocation(line: 631, column: 6, scope: !7354)
!7383 = !DILocalVariable(name: "__mptr", scope: !7384, file: !3, line: 632, type: !269)
!7384 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 632, column: 3)
!7385 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 632, column: 3)
!7386 = !DILocation(line: 632, column: 3, scope: !7384)
!7387 = !DILocation(line: 632, column: 3, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 632, column: 3)
!7389 = !DILocation(line: 632, column: 3, scope: !7385)
!7390 = !DILocation(line: 632, column: 3, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 632, column: 3)
!7392 = !DILocation(line: 634, column: 8, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7394, file: !3, line: 634, column: 8)
!7394 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 632, column: 58)
!7395 = !DILocation(line: 634, column: 14, scope: !7393)
!7396 = !DILocation(line: 634, column: 8, scope: !7394)
!7397 = !DILocation(line: 635, column: 5, scope: !7393)
!7398 = !DILocation(line: 636, column: 3, scope: !7394)
!7399 = !DILocalVariable(name: "__mptr", scope: !7400, file: !3, line: 632, type: !269)
!7400 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 632, column: 3)
!7401 = !DILocation(line: 632, column: 3, scope: !7400)
!7402 = !DILocation(line: 632, column: 3, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 632, column: 3)
!7404 = distinct !{!7404, !7389, !7405}
!7405 = !DILocation(line: 636, column: 3, scope: !7385)
!7406 = !DILocalVariable(name: "__mptr", scope: !7407, file: !3, line: 638, type: !269)
!7407 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 638, column: 2)
!7408 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 638, column: 2)
!7409 = !DILocation(line: 638, column: 2, scope: !7407)
!7410 = !DILocation(line: 638, column: 2, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 638, column: 2)
!7412 = !DILocation(line: 638, column: 2, scope: !7408)
!7413 = !DILocation(line: 638, column: 2, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 638, column: 2)
!7415 = !DILocation(line: 639, column: 7, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 639, column: 7)
!7417 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 638, column: 57)
!7418 = !DILocation(line: 639, column: 13, scope: !7416)
!7419 = !DILocation(line: 639, column: 7, scope: !7417)
!7420 = !DILocation(line: 642, column: 4, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 639, column: 27)
!7422 = !DILocation(line: 644, column: 7, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 644, column: 7)
!7424 = !DILocation(line: 644, column: 10, scope: !7423)
!7425 = !DILocation(line: 644, column: 14, scope: !7423)
!7426 = !DILocation(line: 644, column: 17, scope: !7423)
!7427 = !DILocation(line: 644, column: 23, scope: !7423)
!7428 = !DILocation(line: 644, column: 7, scope: !7417)
!7429 = !DILocation(line: 647, column: 4, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 644, column: 34)
!7431 = !DILocation(line: 649, column: 10, scope: !7417)
!7432 = !DILocation(line: 649, column: 3, scope: !7417)
!7433 = !DILocalVariable(name: "__mptr", scope: !7434, file: !3, line: 638, type: !269)
!7434 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 638, column: 2)
!7435 = !DILocation(line: 638, column: 2, scope: !7434)
!7436 = !DILocation(line: 638, column: 2, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 638, column: 2)
!7438 = distinct !{!7438, !7412, !7439}
!7439 = !DILocation(line: 650, column: 2, scope: !7408)
!7440 = !DILocation(line: 652, column: 2, scope: !7354)
!7441 = !DILocation(line: 653, column: 1, scope: !7354)
!7442 = distinct !DISubprogram(name: "dma_device_satisfies_mask", scope: !3, file: !3, line: 392, type: !7443, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7443 = !DISubroutineType(types: !7444)
!7444 = !{!249, !232, !4993}
!7445 = !DILocalVariable(name: "device", arg: 1, scope: !7442, file: !3, line: 392, type: !232)
!7446 = !DILocation(line: 392, column: 57, scope: !7442)
!7447 = !DILocalVariable(name: "want", arg: 2, scope: !7442, file: !3, line: 393, type: !4993)
!7448 = !DILocation(line: 393, column: 32, scope: !7442)
!7449 = !DILocalVariable(name: "has", scope: !7442, file: !3, line: 395, type: !283)
!7450 = !DILocation(line: 395, column: 17, scope: !7442)
!7451 = !DILocation(line: 397, column: 17, scope: !7442)
!7452 = !DILocation(line: 397, column: 13, scope: !7442)
!7453 = !DILocation(line: 397, column: 23, scope: !7442)
!7454 = !DILocation(line: 397, column: 29, scope: !7442)
!7455 = !DILocation(line: 397, column: 35, scope: !7442)
!7456 = !DILocation(line: 397, column: 43, scope: !7442)
!7457 = !DILocation(line: 397, column: 52, scope: !7442)
!7458 = !DILocation(line: 397, column: 2, scope: !7442)
!7459 = !DILocation(line: 399, column: 22, scope: !7442)
!7460 = !DILocation(line: 399, column: 28, scope: !7442)
!7461 = !DILocation(line: 399, column: 38, scope: !7442)
!7462 = !DILocation(line: 399, column: 34, scope: !7442)
!7463 = !DILocation(line: 399, column: 9, scope: !7442)
!7464 = !DILocation(line: 399, column: 2, scope: !7442)
!7465 = distinct !DISubprogram(name: "bitmap_and", scope: !6991, file: !6991, line: 283, type: !7466, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7466 = !DISubroutineType(types: !7467)
!7467 = !{!249, !3910, !7468, !7468, !7}
!7468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!7469 = !DILocalVariable(name: "dst", arg: 1, scope: !7465, file: !6991, line: 283, type: !3910)
!7470 = !DILocation(line: 283, column: 45, scope: !7465)
!7471 = !DILocalVariable(name: "src1", arg: 2, scope: !7465, file: !6991, line: 283, type: !7468)
!7472 = !DILocation(line: 283, column: 71, scope: !7465)
!7473 = !DILocalVariable(name: "src2", arg: 3, scope: !7465, file: !6991, line: 284, type: !7468)
!7474 = !DILocation(line: 284, column: 25, scope: !7465)
!7475 = !DILocalVariable(name: "nbits", arg: 4, scope: !7465, file: !6991, line: 284, type: !7)
!7476 = !DILocation(line: 284, column: 44, scope: !7465)
!7477 = !DILocation(line: 286, column: 6, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7465, file: !6991, line: 286, column: 6)
!7479 = !DILocation(line: 286, column: 6, scope: !7465)
!7480 = !DILocation(line: 287, column: 19, scope: !7478)
!7481 = !DILocation(line: 287, column: 18, scope: !7478)
!7482 = !DILocation(line: 287, column: 27, scope: !7478)
!7483 = !DILocation(line: 287, column: 26, scope: !7478)
!7484 = !DILocation(line: 287, column: 24, scope: !7478)
!7485 = !DILocation(line: 287, column: 34, scope: !7478)
!7486 = !DILocation(line: 287, column: 32, scope: !7478)
!7487 = !DILocation(line: 287, column: 12, scope: !7478)
!7488 = !DILocation(line: 287, column: 16, scope: !7478)
!7489 = !DILocation(line: 287, column: 64, scope: !7478)
!7490 = !DILocation(line: 287, column: 3, scope: !7478)
!7491 = !DILocation(line: 288, column: 22, scope: !7465)
!7492 = !DILocation(line: 288, column: 27, scope: !7465)
!7493 = !DILocation(line: 288, column: 33, scope: !7465)
!7494 = !DILocation(line: 288, column: 39, scope: !7465)
!7495 = !DILocation(line: 288, column: 9, scope: !7465)
!7496 = !DILocation(line: 288, column: 2, scope: !7465)
!7497 = !DILocation(line: 289, column: 1, scope: !7465)
!7498 = distinct !DISubprogram(name: "bitmap_equal", scope: !6991, file: !6991, line: 333, type: !7499, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7499 = !DISubroutineType(types: !7500)
!7500 = !{!249, !7468, !7468, !7}
!7501 = !DILocalVariable(name: "src1", arg: 1, scope: !7498, file: !6991, line: 333, type: !7468)
!7502 = !DILocation(line: 333, column: 53, scope: !7498)
!7503 = !DILocalVariable(name: "src2", arg: 2, scope: !7498, file: !6991, line: 334, type: !7468)
!7504 = !DILocation(line: 334, column: 25, scope: !7498)
!7505 = !DILocalVariable(name: "nbits", arg: 3, scope: !7498, file: !6991, line: 334, type: !7)
!7506 = !DILocation(line: 334, column: 44, scope: !7498)
!7507 = !DILocation(line: 336, column: 6, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7498, file: !6991, line: 336, column: 6)
!7509 = !DILocation(line: 336, column: 6, scope: !7498)
!7510 = !DILocation(line: 337, column: 14, scope: !7508)
!7511 = !DILocation(line: 337, column: 13, scope: !7508)
!7512 = !DILocation(line: 337, column: 22, scope: !7508)
!7513 = !DILocation(line: 337, column: 21, scope: !7508)
!7514 = !DILocation(line: 337, column: 19, scope: !7508)
!7515 = !DILocation(line: 337, column: 30, scope: !7508)
!7516 = !DILocation(line: 337, column: 28, scope: !7508)
!7517 = !DILocation(line: 337, column: 10, scope: !7508)
!7518 = !DILocation(line: 337, column: 3, scope: !7508)
!7519 = !DILocation(line: 338, column: 27, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7498, file: !6991, line: 338, column: 6)
!7521 = !DILocation(line: 338, column: 33, scope: !7520)
!7522 = !DILocation(line: 338, column: 6, scope: !7520)
!7523 = !DILocation(line: 338, column: 52, scope: !7520)
!7524 = !DILocation(line: 339, column: 6, scope: !7520)
!7525 = !DILocation(line: 338, column: 6, scope: !7498)
!7526 = !DILocation(line: 340, column: 18, scope: !7520)
!7527 = !DILocation(line: 340, column: 24, scope: !7520)
!7528 = !DILocation(line: 340, column: 30, scope: !7520)
!7529 = !DILocation(line: 340, column: 36, scope: !7520)
!7530 = !DILocation(line: 340, column: 11, scope: !7520)
!7531 = !DILocation(line: 340, column: 10, scope: !7520)
!7532 = !DILocation(line: 340, column: 3, scope: !7520)
!7533 = !DILocation(line: 341, column: 24, scope: !7498)
!7534 = !DILocation(line: 341, column: 30, scope: !7498)
!7535 = !DILocation(line: 341, column: 36, scope: !7498)
!7536 = !DILocation(line: 341, column: 9, scope: !7498)
!7537 = !DILocation(line: 341, column: 2, scope: !7498)
!7538 = !DILocation(line: 342, column: 1, scope: !7498)
!7539 = distinct !DISubprogram(name: "dev_name", scope: !95, file: !95, line: 609, type: !7540, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7540 = !DISubroutineType(types: !7541)
!7541 = !{!277, !3807}
!7542 = !DILocalVariable(name: "dev", arg: 1, scope: !7539, file: !95, line: 609, type: !3807)
!7543 = !DILocation(line: 609, column: 57, scope: !7539)
!7544 = !DILocation(line: 612, column: 6, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7539, file: !95, line: 612, column: 6)
!7546 = !DILocation(line: 612, column: 11, scope: !7545)
!7547 = !DILocation(line: 612, column: 6, scope: !7539)
!7548 = !DILocation(line: 613, column: 10, scope: !7545)
!7549 = !DILocation(line: 613, column: 15, scope: !7545)
!7550 = !DILocation(line: 613, column: 3, scope: !7545)
!7551 = !DILocation(line: 615, column: 23, scope: !7539)
!7552 = !DILocation(line: 615, column: 28, scope: !7539)
!7553 = !DILocation(line: 615, column: 9, scope: !7539)
!7554 = !DILocation(line: 615, column: 2, scope: !7539)
!7555 = !DILocation(line: 616, column: 1, scope: !7539)
!7556 = distinct !DISubprogram(name: "kobject_name", scope: !306, file: !306, line: 88, type: !7557, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7557 = !DISubroutineType(types: !7558)
!7558 = !{!277, !7559}
!7559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7560, size: 64)
!7560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !305)
!7561 = !DILocalVariable(name: "kobj", arg: 1, scope: !7556, file: !306, line: 88, type: !7559)
!7562 = !DILocation(line: 88, column: 62, scope: !7556)
!7563 = !DILocation(line: 90, column: 9, scope: !7556)
!7564 = !DILocation(line: 90, column: 15, scope: !7556)
!7565 = !DILocation(line: 90, column: 2, scope: !7556)
!7566 = distinct !DISubprogram(name: "dmaengine_synchronize", scope: !6, file: !6, line: 1141, type: !4043, scopeLine: 1142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7567 = !DILocalVariable(name: "chan", arg: 1, scope: !7566, file: !6, line: 1141, type: !228)
!7568 = !DILocation(line: 1141, column: 59, scope: !7566)
!7569 = !DILocation(line: 1143, column: 2, scope: !7566)
!7570 = !DILocation(line: 1143, column: 2, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7566, file: !6, line: 1143, column: 2)
!7572 = !DILocation(line: 1143, column: 2, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7571, file: !6, line: 1143, column: 2)
!7574 = !DILocation(line: 1145, column: 6, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7566, file: !6, line: 1145, column: 6)
!7576 = !DILocation(line: 1145, column: 12, scope: !7575)
!7577 = !DILocation(line: 1145, column: 20, scope: !7575)
!7578 = !DILocation(line: 1145, column: 6, scope: !7566)
!7579 = !DILocation(line: 1146, column: 3, scope: !7575)
!7580 = !DILocation(line: 1146, column: 9, scope: !7575)
!7581 = !DILocation(line: 1146, column: 17, scope: !7575)
!7582 = !DILocation(line: 1146, column: 36, scope: !7575)
!7583 = !DILocation(line: 1147, column: 1, scope: !7566)
!7584 = distinct !DISubprogram(name: "__list_del_entry", scope: !5407, file: !5407, line: 130, type: !5632, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7585 = !DILocalVariable(name: "entry", arg: 1, scope: !7584, file: !5407, line: 130, type: !256)
!7586 = !DILocation(line: 130, column: 55, scope: !7584)
!7587 = !DILocation(line: 132, column: 30, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7584, file: !5407, line: 132, column: 6)
!7589 = !DILocation(line: 132, column: 7, scope: !7588)
!7590 = !DILocation(line: 132, column: 6, scope: !7584)
!7591 = !DILocation(line: 133, column: 3, scope: !7588)
!7592 = !DILocation(line: 135, column: 13, scope: !7584)
!7593 = !DILocation(line: 135, column: 20, scope: !7584)
!7594 = !DILocation(line: 135, column: 26, scope: !7584)
!7595 = !DILocation(line: 135, column: 33, scope: !7584)
!7596 = !DILocation(line: 135, column: 2, scope: !7584)
!7597 = !DILocation(line: 136, column: 1, scope: !7584)
!7598 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !5407, file: !5407, line: 51, type: !7599, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7599 = !DISubroutineType(types: !7600)
!7600 = !{!267, !256}
!7601 = !DILocalVariable(name: "entry", arg: 1, scope: !7598, file: !5407, line: 51, type: !256)
!7602 = !DILocation(line: 51, column: 61, scope: !7598)
!7603 = !DILocation(line: 53, column: 2, scope: !7598)
!7604 = distinct !DISubprogram(name: "__list_del", scope: !5407, file: !5407, line: 110, type: !6360, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7605 = !DILocalVariable(name: "prev", arg: 1, scope: !7604, file: !5407, line: 110, type: !256)
!7606 = !DILocation(line: 110, column: 50, scope: !7604)
!7607 = !DILocalVariable(name: "next", arg: 2, scope: !7604, file: !5407, line: 110, type: !256)
!7608 = !DILocation(line: 110, column: 75, scope: !7604)
!7609 = !DILocation(line: 112, column: 15, scope: !7604)
!7610 = !DILocation(line: 112, column: 2, scope: !7604)
!7611 = !DILocation(line: 112, column: 8, scope: !7604)
!7612 = !DILocation(line: 112, column: 13, scope: !7604)
!7613 = !DILocation(line: 113, column: 2, scope: !7604)
!7614 = !DILocation(line: 113, column: 2, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7604, file: !5407, line: 113, column: 2)
!7616 = !DILocation(line: 113, column: 2, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7615, file: !5407, line: 113, column: 2)
!7618 = !DILocation(line: 113, column: 2, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7615, file: !5407, line: 113, column: 2)
!7620 = !DILocation(line: 114, column: 1, scope: !7604)
!7621 = distinct !DISubprogram(name: "min_chan", scope: !3, file: !3, line: 320, type: !7622, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7622 = !DISubroutineType(types: !7623)
!7623 = !{!228, !174, !249}
!7624 = !DILocalVariable(name: "cap", arg: 1, scope: !7621, file: !3, line: 320, type: !174)
!7625 = !DILocation(line: 320, column: 60, scope: !7621)
!7626 = !DILocalVariable(name: "cpu", arg: 2, scope: !7621, file: !3, line: 320, type: !249)
!7627 = !DILocation(line: 320, column: 69, scope: !7621)
!7628 = !DILocalVariable(name: "device", scope: !7621, file: !3, line: 322, type: !232)
!7629 = !DILocation(line: 322, column: 21, scope: !7621)
!7630 = !DILocalVariable(name: "chan", scope: !7621, file: !3, line: 323, type: !228)
!7631 = !DILocation(line: 323, column: 19, scope: !7621)
!7632 = !DILocalVariable(name: "min", scope: !7621, file: !3, line: 324, type: !228)
!7633 = !DILocation(line: 324, column: 19, scope: !7621)
!7634 = !DILocalVariable(name: "localmin", scope: !7621, file: !3, line: 325, type: !228)
!7635 = !DILocation(line: 325, column: 19, scope: !7621)
!7636 = !DILocalVariable(name: "__mptr", scope: !7637, file: !3, line: 327, type: !269)
!7637 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 327, column: 2)
!7638 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 327, column: 2)
!7639 = !DILocation(line: 327, column: 2, scope: !7637)
!7640 = !DILocation(line: 327, column: 2, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 327, column: 2)
!7642 = !DILocation(line: 327, column: 2, scope: !7638)
!7643 = !DILocation(line: 327, column: 2, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 327, column: 2)
!7645 = !DILocation(line: 328, column: 8, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 328, column: 7)
!7647 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 327, column: 61)
!7648 = !DILocation(line: 328, column: 43, scope: !7646)
!7649 = !DILocation(line: 329, column: 7, scope: !7646)
!7650 = !DILocation(line: 328, column: 7, scope: !7647)
!7651 = !DILocation(line: 330, column: 4, scope: !7646)
!7652 = !DILocalVariable(name: "__mptr", scope: !7653, file: !3, line: 331, type: !269)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 331, column: 3)
!7654 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 331, column: 3)
!7655 = !DILocation(line: 331, column: 3, scope: !7653)
!7656 = !DILocation(line: 331, column: 3, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7653, file: !3, line: 331, column: 3)
!7658 = !DILocation(line: 331, column: 3, scope: !7654)
!7659 = !DILocation(line: 331, column: 3, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 331, column: 3)
!7661 = !DILocation(line: 332, column: 9, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !3, line: 332, column: 8)
!7663 = distinct !DILexicalBlock(scope: !7660, file: !3, line: 331, column: 61)
!7664 = !DILocation(line: 332, column: 15, scope: !7662)
!7665 = !DILocation(line: 332, column: 8, scope: !7663)
!7666 = !DILocation(line: 333, column: 5, scope: !7662)
!7667 = !DILocation(line: 334, column: 9, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7663, file: !3, line: 334, column: 8)
!7669 = !DILocation(line: 334, column: 13, scope: !7668)
!7670 = !DILocation(line: 334, column: 16, scope: !7668)
!7671 = !DILocation(line: 334, column: 22, scope: !7668)
!7672 = !DILocation(line: 334, column: 36, scope: !7668)
!7673 = !DILocation(line: 334, column: 41, scope: !7668)
!7674 = !DILocation(line: 334, column: 34, scope: !7668)
!7675 = !DILocation(line: 334, column: 8, scope: !7663)
!7676 = !DILocation(line: 335, column: 11, scope: !7668)
!7677 = !DILocation(line: 335, column: 9, scope: !7668)
!7678 = !DILocation(line: 335, column: 5, scope: !7668)
!7679 = !DILocation(line: 337, column: 26, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7663, file: !3, line: 337, column: 8)
!7681 = !DILocation(line: 337, column: 32, scope: !7680)
!7682 = !DILocation(line: 337, column: 8, scope: !7680)
!7683 = !DILocation(line: 337, column: 8, scope: !7663)
!7684 = !DILocation(line: 338, column: 10, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 338, column: 9)
!7686 = !DILocation(line: 338, column: 19, scope: !7685)
!7687 = !DILocation(line: 339, column: 9, scope: !7685)
!7688 = !DILocation(line: 339, column: 15, scope: !7685)
!7689 = !DILocation(line: 339, column: 29, scope: !7685)
!7690 = !DILocation(line: 339, column: 39, scope: !7685)
!7691 = !DILocation(line: 339, column: 27, scope: !7685)
!7692 = !DILocation(line: 338, column: 9, scope: !7680)
!7693 = !DILocation(line: 340, column: 17, scope: !7685)
!7694 = !DILocation(line: 340, column: 15, scope: !7685)
!7695 = !DILocation(line: 340, column: 6, scope: !7685)
!7696 = !DILocation(line: 341, column: 3, scope: !7663)
!7697 = !DILocalVariable(name: "__mptr", scope: !7698, file: !3, line: 331, type: !269)
!7698 = distinct !DILexicalBlock(scope: !7660, file: !3, line: 331, column: 3)
!7699 = !DILocation(line: 331, column: 3, scope: !7698)
!7700 = !DILocation(line: 331, column: 3, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 331, column: 3)
!7702 = distinct !{!7702, !7658, !7703}
!7703 = !DILocation(line: 341, column: 3, scope: !7654)
!7704 = !DILocation(line: 342, column: 2, scope: !7647)
!7705 = !DILocalVariable(name: "__mptr", scope: !7706, file: !3, line: 327, type: !269)
!7706 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 327, column: 2)
!7707 = !DILocation(line: 327, column: 2, scope: !7706)
!7708 = !DILocation(line: 327, column: 2, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 327, column: 2)
!7710 = distinct !{!7710, !7642, !7711}
!7711 = !DILocation(line: 342, column: 2, scope: !7638)
!7712 = !DILocation(line: 344, column: 9, scope: !7621)
!7713 = !DILocation(line: 344, column: 20, scope: !7621)
!7714 = !DILocation(line: 344, column: 31, scope: !7621)
!7715 = !DILocation(line: 344, column: 7, scope: !7621)
!7716 = !DILocation(line: 346, column: 6, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 346, column: 6)
!7718 = !DILocation(line: 346, column: 6, scope: !7621)
!7719 = !DILocation(line: 347, column: 3, scope: !7717)
!7720 = !DILocation(line: 347, column: 9, scope: !7717)
!7721 = !DILocation(line: 347, column: 20, scope: !7717)
!7722 = !DILocation(line: 349, column: 9, scope: !7621)
!7723 = !DILocation(line: 349, column: 2, scope: !7621)
!7724 = distinct !DISubprogram(name: "dma_chan_is_local", scope: !3, file: !3, line: 302, type: !7725, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7725 = !DISubroutineType(types: !7726)
!7726 = !{!267, !228, !249}
!7727 = !DILocalVariable(name: "chan", arg: 1, scope: !7724, file: !3, line: 302, type: !228)
!7728 = !DILocation(line: 302, column: 48, scope: !7724)
!7729 = !DILocalVariable(name: "cpu", arg: 2, scope: !7724, file: !3, line: 302, type: !249)
!7730 = !DILocation(line: 302, column: 58, scope: !7724)
!7731 = !DILocalVariable(name: "node", scope: !7724, file: !3, line: 304, type: !249)
!7732 = !DILocation(line: 304, column: 6, scope: !7724)
!7733 = !DILocation(line: 304, column: 25, scope: !7724)
!7734 = !DILocation(line: 304, column: 31, scope: !7724)
!7735 = !DILocation(line: 304, column: 39, scope: !7724)
!7736 = !DILocation(line: 304, column: 13, scope: !7724)
!7737 = !DILocation(line: 305, column: 9, scope: !7724)
!7738 = !DILocation(line: 305, column: 14, scope: !7724)
!7739 = !DILocation(line: 305, column: 30, scope: !7724)
!7740 = !DILocation(line: 306, column: 20, scope: !7724)
!7741 = !DILocation(line: 306, column: 25, scope: !7724)
!7742 = !DILocation(line: 306, column: 3, scope: !7724)
!7743 = !DILocation(line: 305, column: 2, scope: !7724)
!7744 = distinct !DISubprogram(name: "dev_to_node", scope: !95, file: !95, line: 630, type: !3509, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7745 = !DILocalVariable(name: "dev", arg: 1, scope: !7744, file: !95, line: 630, type: !301)
!7746 = !DILocation(line: 630, column: 46, scope: !7744)
!7747 = !DILocation(line: 632, column: 2, scope: !7744)
!7748 = distinct !DISubprogram(name: "cpumask_test_cpu", scope: !1479, file: !1479, line: 365, type: !7749, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7749 = !DISubroutineType(types: !7750)
!7750 = !{!249, !249, !4290}
!7751 = !DILocalVariable(name: "cpu", arg: 1, scope: !7748, file: !1479, line: 365, type: !249)
!7752 = !DILocation(line: 365, column: 40, scope: !7748)
!7753 = !DILocalVariable(name: "cpumask", arg: 2, scope: !7748, file: !1479, line: 365, type: !4290)
!7754 = !DILocation(line: 365, column: 67, scope: !7748)
!7755 = !DILocation(line: 367, column: 32, scope: !7748)
!7756 = !DILocation(line: 367, column: 18, scope: !7748)
!7757 = !DILocation(line: 367, column: 38, scope: !7748)
!7758 = !DILocation(line: 367, column: 9, scope: !7748)
!7759 = !DILocation(line: 367, column: 2, scope: !7748)
!7760 = distinct !DISubprogram(name: "cpumask_check", scope: !1479, file: !1479, line: 142, type: !7761, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7761 = !DISubroutineType(types: !7762)
!7762 = !{!7, !7}
!7763 = !DILocalVariable(name: "cpu", arg: 1, scope: !7760, file: !1479, line: 142, type: !7)
!7764 = !DILocation(line: 142, column: 55, scope: !7760)
!7765 = !DILocation(line: 144, column: 20, scope: !7760)
!7766 = !DILocation(line: 144, column: 2, scope: !7760)
!7767 = !DILocation(line: 145, column: 9, scope: !7760)
!7768 = !DILocation(line: 145, column: 2, scope: !7760)
!7769 = distinct !DISubprogram(name: "cpu_max_bits_warn", scope: !1479, file: !1479, line: 134, type: !7770, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7770 = !DISubroutineType(types: !7771)
!7771 = !{null, !7, !7}
!7772 = !DILocalVariable(name: "cpu", arg: 1, scope: !7769, file: !1479, line: 134, type: !7)
!7773 = !DILocation(line: 134, column: 51, scope: !7769)
!7774 = !DILocalVariable(name: "bits", arg: 2, scope: !7769, file: !1479, line: 134, type: !7)
!7775 = !DILocation(line: 134, column: 69, scope: !7769)
!7776 = !DILocation(line: 139, column: 1, scope: !7769)
!7777 = distinct !DISubprogram(name: "kzalloc", scope: !207, file: !207, line: 662, type: !7778, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7778 = !DISubroutineType(types: !7779)
!7779 = !{!269, !404, !826}
!7780 = !DILocalVariable(name: "s", arg: 1, scope: !7781, file: !207, line: 445, type: !1054)
!7781 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !207, file: !207, line: 445, type: !7782, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7782 = !DISubroutineType(types: !7783)
!7783 = !{!269, !1054, !826, !404}
!7784 = !DILocation(line: 445, column: 72, scope: !7781, inlinedAt: !7785)
!7785 = distinct !DILocation(line: 552, column: 10, scope: !7786, inlinedAt: !7789)
!7786 = distinct !DILexicalBlock(scope: !7787, file: !207, line: 540, column: 34)
!7787 = distinct !DILexicalBlock(scope: !7788, file: !207, line: 540, column: 6)
!7788 = distinct !DISubprogram(name: "kmalloc", scope: !207, file: !207, line: 538, type: !7778, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7789 = distinct !DILocation(line: 664, column: 9, scope: !7777)
!7790 = !DILocalVariable(name: "flags", arg: 2, scope: !7781, file: !207, line: 446, type: !826)
!7791 = !DILocation(line: 446, column: 9, scope: !7781, inlinedAt: !7785)
!7792 = !DILocalVariable(name: "size", arg: 3, scope: !7781, file: !207, line: 446, type: !404)
!7793 = !DILocation(line: 446, column: 23, scope: !7781, inlinedAt: !7785)
!7794 = !DILocalVariable(name: "ret", scope: !7781, file: !207, line: 448, type: !269)
!7795 = !DILocation(line: 448, column: 8, scope: !7781, inlinedAt: !7785)
!7796 = !DILocalVariable(name: "flags", arg: 1, scope: !7797, file: !207, line: 318, type: !826)
!7797 = distinct !DISubprogram(name: "kmalloc_type", scope: !207, file: !207, line: 318, type: !7798, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7798 = !DISubroutineType(types: !7799)
!7799 = !{!206, !826}
!7800 = !DILocation(line: 318, column: 67, scope: !7797, inlinedAt: !7801)
!7801 = distinct !DILocation(line: 553, column: 20, scope: !7786, inlinedAt: !7789)
!7802 = !DILocalVariable(name: "size", arg: 1, scope: !7803, file: !207, line: 346, type: !404)
!7803 = distinct !DISubprogram(name: "kmalloc_index", scope: !207, file: !207, line: 346, type: !7804, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7804 = !DISubroutineType(types: !7805)
!7805 = !{!7, !404}
!7806 = !DILocation(line: 346, column: 58, scope: !7803, inlinedAt: !7807)
!7807 = distinct !DILocation(line: 547, column: 11, scope: !7786, inlinedAt: !7789)
!7808 = !DILocalVariable(name: "size", arg: 1, scope: !7809, file: !207, line: 472, type: !404)
!7809 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !207, file: !207, line: 472, type: !7810, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7810 = !DISubroutineType(types: !7811)
!7811 = !{!269, !404, !826, !7}
!7812 = !DILocation(line: 472, column: 28, scope: !7809, inlinedAt: !7813)
!7813 = distinct !DILocation(line: 481, column: 9, scope: !7814, inlinedAt: !7815)
!7814 = distinct !DISubprogram(name: "kmalloc_large", scope: !207, file: !207, line: 478, type: !7778, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!7815 = distinct !DILocation(line: 545, column: 11, scope: !7816, inlinedAt: !7789)
!7816 = distinct !DILexicalBlock(scope: !7786, file: !207, line: 544, column: 7)
!7817 = !DILocalVariable(name: "flags", arg: 2, scope: !7809, file: !207, line: 472, type: !826)
!7818 = !DILocation(line: 472, column: 40, scope: !7809, inlinedAt: !7813)
!7819 = !DILocalVariable(name: "order", arg: 3, scope: !7809, file: !207, line: 472, type: !7)
!7820 = !DILocation(line: 472, column: 60, scope: !7809, inlinedAt: !7813)
!7821 = !DILocalVariable(name: "size", arg: 1, scope: !7814, file: !207, line: 478, type: !404)
!7822 = !DILocation(line: 478, column: 51, scope: !7814, inlinedAt: !7815)
!7823 = !DILocalVariable(name: "flags", arg: 2, scope: !7814, file: !207, line: 478, type: !826)
!7824 = !DILocation(line: 478, column: 63, scope: !7814, inlinedAt: !7815)
!7825 = !DILocalVariable(name: "order", scope: !7814, file: !207, line: 480, type: !7)
!7826 = !DILocation(line: 480, column: 15, scope: !7814, inlinedAt: !7815)
!7827 = !DILocalVariable(name: "size", arg: 1, scope: !7788, file: !207, line: 538, type: !404)
!7828 = !DILocation(line: 538, column: 45, scope: !7788, inlinedAt: !7789)
!7829 = !DILocalVariable(name: "flags", arg: 2, scope: !7788, file: !207, line: 538, type: !826)
!7830 = !DILocation(line: 538, column: 57, scope: !7788, inlinedAt: !7789)
!7831 = !DILocalVariable(name: "index", scope: !7786, file: !207, line: 542, type: !7)
!7832 = !DILocation(line: 542, column: 16, scope: !7786, inlinedAt: !7789)
!7833 = !DILocalVariable(name: "size", arg: 1, scope: !7777, file: !207, line: 662, type: !404)
!7834 = !DILocation(line: 662, column: 36, scope: !7777)
!7835 = !DILocalVariable(name: "flags", arg: 2, scope: !7777, file: !207, line: 662, type: !826)
!7836 = !DILocation(line: 662, column: 48, scope: !7777)
!7837 = !DILocation(line: 664, column: 17, scope: !7777)
!7838 = !DILocation(line: 664, column: 23, scope: !7777)
!7839 = !DILocation(line: 664, column: 29, scope: !7777)
!7840 = !DILocation(line: 540, column: 27, scope: !7787, inlinedAt: !7789)
!7841 = !DILocation(line: 540, column: 6, scope: !7787, inlinedAt: !7789)
!7842 = !DILocation(line: 540, column: 6, scope: !7788, inlinedAt: !7789)
!7843 = !DILocation(line: 544, column: 7, scope: !7816, inlinedAt: !7789)
!7844 = !DILocation(line: 544, column: 12, scope: !7816, inlinedAt: !7789)
!7845 = !DILocation(line: 544, column: 7, scope: !7786, inlinedAt: !7789)
!7846 = !DILocation(line: 545, column: 25, scope: !7816, inlinedAt: !7789)
!7847 = !DILocation(line: 545, column: 31, scope: !7816, inlinedAt: !7789)
!7848 = !DILocation(line: 480, column: 33, scope: !7814, inlinedAt: !7815)
!7849 = !DILocation(line: 480, column: 23, scope: !7814, inlinedAt: !7815)
!7850 = !DILocation(line: 481, column: 29, scope: !7814, inlinedAt: !7815)
!7851 = !DILocation(line: 481, column: 35, scope: !7814, inlinedAt: !7815)
!7852 = !DILocation(line: 481, column: 42, scope: !7814, inlinedAt: !7815)
!7853 = !DILocation(line: 474, column: 23, scope: !7809, inlinedAt: !7813)
!7854 = !DILocation(line: 474, column: 29, scope: !7809, inlinedAt: !7813)
!7855 = !DILocation(line: 474, column: 36, scope: !7809, inlinedAt: !7813)
!7856 = !DILocation(line: 474, column: 9, scope: !7809, inlinedAt: !7813)
!7857 = !DILocation(line: 545, column: 4, scope: !7816, inlinedAt: !7789)
!7858 = !DILocation(line: 547, column: 25, scope: !7786, inlinedAt: !7789)
!7859 = !DILocation(line: 348, column: 7, scope: !7860, inlinedAt: !7807)
!7860 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 348, column: 6)
!7861 = !DILocation(line: 348, column: 6, scope: !7803, inlinedAt: !7807)
!7862 = !DILocation(line: 349, column: 3, scope: !7860, inlinedAt: !7807)
!7863 = !DILocation(line: 351, column: 6, scope: !7864, inlinedAt: !7807)
!7864 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 351, column: 6)
!7865 = !DILocation(line: 351, column: 11, scope: !7864, inlinedAt: !7807)
!7866 = !DILocation(line: 351, column: 6, scope: !7803, inlinedAt: !7807)
!7867 = !DILocation(line: 352, column: 3, scope: !7864, inlinedAt: !7807)
!7868 = !DILocation(line: 354, column: 32, scope: !7869, inlinedAt: !7807)
!7869 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 354, column: 6)
!7870 = !DILocation(line: 354, column: 37, scope: !7869, inlinedAt: !7807)
!7871 = !DILocation(line: 354, column: 42, scope: !7869, inlinedAt: !7807)
!7872 = !DILocation(line: 354, column: 45, scope: !7869, inlinedAt: !7807)
!7873 = !DILocation(line: 354, column: 50, scope: !7869, inlinedAt: !7807)
!7874 = !DILocation(line: 354, column: 6, scope: !7803, inlinedAt: !7807)
!7875 = !DILocation(line: 355, column: 3, scope: !7869, inlinedAt: !7807)
!7876 = !DILocation(line: 356, column: 32, scope: !7877, inlinedAt: !7807)
!7877 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 356, column: 6)
!7878 = !DILocation(line: 356, column: 37, scope: !7877, inlinedAt: !7807)
!7879 = !DILocation(line: 356, column: 43, scope: !7877, inlinedAt: !7807)
!7880 = !DILocation(line: 356, column: 46, scope: !7877, inlinedAt: !7807)
!7881 = !DILocation(line: 356, column: 51, scope: !7877, inlinedAt: !7807)
!7882 = !DILocation(line: 356, column: 6, scope: !7803, inlinedAt: !7807)
!7883 = !DILocation(line: 357, column: 3, scope: !7877, inlinedAt: !7807)
!7884 = !DILocation(line: 358, column: 6, scope: !7885, inlinedAt: !7807)
!7885 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 358, column: 6)
!7886 = !DILocation(line: 358, column: 11, scope: !7885, inlinedAt: !7807)
!7887 = !DILocation(line: 358, column: 6, scope: !7803, inlinedAt: !7807)
!7888 = !DILocation(line: 358, column: 26, scope: !7885, inlinedAt: !7807)
!7889 = !DILocation(line: 359, column: 6, scope: !7890, inlinedAt: !7807)
!7890 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 359, column: 6)
!7891 = !DILocation(line: 359, column: 11, scope: !7890, inlinedAt: !7807)
!7892 = !DILocation(line: 359, column: 6, scope: !7803, inlinedAt: !7807)
!7893 = !DILocation(line: 359, column: 26, scope: !7890, inlinedAt: !7807)
!7894 = !DILocation(line: 360, column: 6, scope: !7895, inlinedAt: !7807)
!7895 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 360, column: 6)
!7896 = !DILocation(line: 360, column: 11, scope: !7895, inlinedAt: !7807)
!7897 = !DILocation(line: 360, column: 6, scope: !7803, inlinedAt: !7807)
!7898 = !DILocation(line: 360, column: 26, scope: !7895, inlinedAt: !7807)
!7899 = !DILocation(line: 361, column: 6, scope: !7900, inlinedAt: !7807)
!7900 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 361, column: 6)
!7901 = !DILocation(line: 361, column: 11, scope: !7900, inlinedAt: !7807)
!7902 = !DILocation(line: 361, column: 6, scope: !7803, inlinedAt: !7807)
!7903 = !DILocation(line: 361, column: 26, scope: !7900, inlinedAt: !7807)
!7904 = !DILocation(line: 362, column: 6, scope: !7905, inlinedAt: !7807)
!7905 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 362, column: 6)
!7906 = !DILocation(line: 362, column: 11, scope: !7905, inlinedAt: !7807)
!7907 = !DILocation(line: 362, column: 6, scope: !7803, inlinedAt: !7807)
!7908 = !DILocation(line: 362, column: 26, scope: !7905, inlinedAt: !7807)
!7909 = !DILocation(line: 363, column: 6, scope: !7910, inlinedAt: !7807)
!7910 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 363, column: 6)
!7911 = !DILocation(line: 363, column: 11, scope: !7910, inlinedAt: !7807)
!7912 = !DILocation(line: 363, column: 6, scope: !7803, inlinedAt: !7807)
!7913 = !DILocation(line: 363, column: 26, scope: !7910, inlinedAt: !7807)
!7914 = !DILocation(line: 364, column: 6, scope: !7915, inlinedAt: !7807)
!7915 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 364, column: 6)
!7916 = !DILocation(line: 364, column: 11, scope: !7915, inlinedAt: !7807)
!7917 = !DILocation(line: 364, column: 6, scope: !7803, inlinedAt: !7807)
!7918 = !DILocation(line: 364, column: 26, scope: !7915, inlinedAt: !7807)
!7919 = !DILocation(line: 365, column: 6, scope: !7920, inlinedAt: !7807)
!7920 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 365, column: 6)
!7921 = !DILocation(line: 365, column: 11, scope: !7920, inlinedAt: !7807)
!7922 = !DILocation(line: 365, column: 6, scope: !7803, inlinedAt: !7807)
!7923 = !DILocation(line: 365, column: 26, scope: !7920, inlinedAt: !7807)
!7924 = !DILocation(line: 366, column: 6, scope: !7925, inlinedAt: !7807)
!7925 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 366, column: 6)
!7926 = !DILocation(line: 366, column: 11, scope: !7925, inlinedAt: !7807)
!7927 = !DILocation(line: 366, column: 6, scope: !7803, inlinedAt: !7807)
!7928 = !DILocation(line: 366, column: 26, scope: !7925, inlinedAt: !7807)
!7929 = !DILocation(line: 367, column: 6, scope: !7930, inlinedAt: !7807)
!7930 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 367, column: 6)
!7931 = !DILocation(line: 367, column: 11, scope: !7930, inlinedAt: !7807)
!7932 = !DILocation(line: 367, column: 6, scope: !7803, inlinedAt: !7807)
!7933 = !DILocation(line: 367, column: 26, scope: !7930, inlinedAt: !7807)
!7934 = !DILocation(line: 368, column: 6, scope: !7935, inlinedAt: !7807)
!7935 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 368, column: 6)
!7936 = !DILocation(line: 368, column: 11, scope: !7935, inlinedAt: !7807)
!7937 = !DILocation(line: 368, column: 6, scope: !7803, inlinedAt: !7807)
!7938 = !DILocation(line: 368, column: 26, scope: !7935, inlinedAt: !7807)
!7939 = !DILocation(line: 369, column: 6, scope: !7940, inlinedAt: !7807)
!7940 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 369, column: 6)
!7941 = !DILocation(line: 369, column: 11, scope: !7940, inlinedAt: !7807)
!7942 = !DILocation(line: 369, column: 6, scope: !7803, inlinedAt: !7807)
!7943 = !DILocation(line: 369, column: 26, scope: !7940, inlinedAt: !7807)
!7944 = !DILocation(line: 370, column: 6, scope: !7945, inlinedAt: !7807)
!7945 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 370, column: 6)
!7946 = !DILocation(line: 370, column: 11, scope: !7945, inlinedAt: !7807)
!7947 = !DILocation(line: 370, column: 6, scope: !7803, inlinedAt: !7807)
!7948 = !DILocation(line: 370, column: 26, scope: !7945, inlinedAt: !7807)
!7949 = !DILocation(line: 371, column: 6, scope: !7950, inlinedAt: !7807)
!7950 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 371, column: 6)
!7951 = !DILocation(line: 371, column: 11, scope: !7950, inlinedAt: !7807)
!7952 = !DILocation(line: 371, column: 6, scope: !7803, inlinedAt: !7807)
!7953 = !DILocation(line: 371, column: 26, scope: !7950, inlinedAt: !7807)
!7954 = !DILocation(line: 372, column: 6, scope: !7955, inlinedAt: !7807)
!7955 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 372, column: 6)
!7956 = !DILocation(line: 372, column: 11, scope: !7955, inlinedAt: !7807)
!7957 = !DILocation(line: 372, column: 6, scope: !7803, inlinedAt: !7807)
!7958 = !DILocation(line: 372, column: 26, scope: !7955, inlinedAt: !7807)
!7959 = !DILocation(line: 373, column: 6, scope: !7960, inlinedAt: !7807)
!7960 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 373, column: 6)
!7961 = !DILocation(line: 373, column: 11, scope: !7960, inlinedAt: !7807)
!7962 = !DILocation(line: 373, column: 6, scope: !7803, inlinedAt: !7807)
!7963 = !DILocation(line: 373, column: 26, scope: !7960, inlinedAt: !7807)
!7964 = !DILocation(line: 374, column: 6, scope: !7965, inlinedAt: !7807)
!7965 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 374, column: 6)
!7966 = !DILocation(line: 374, column: 11, scope: !7965, inlinedAt: !7807)
!7967 = !DILocation(line: 374, column: 6, scope: !7803, inlinedAt: !7807)
!7968 = !DILocation(line: 374, column: 26, scope: !7965, inlinedAt: !7807)
!7969 = !DILocation(line: 375, column: 6, scope: !7970, inlinedAt: !7807)
!7970 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 375, column: 6)
!7971 = !DILocation(line: 375, column: 11, scope: !7970, inlinedAt: !7807)
!7972 = !DILocation(line: 375, column: 6, scope: !7803, inlinedAt: !7807)
!7973 = !DILocation(line: 375, column: 27, scope: !7970, inlinedAt: !7807)
!7974 = !DILocation(line: 376, column: 6, scope: !7975, inlinedAt: !7807)
!7975 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 376, column: 6)
!7976 = !DILocation(line: 376, column: 11, scope: !7975, inlinedAt: !7807)
!7977 = !DILocation(line: 376, column: 6, scope: !7803, inlinedAt: !7807)
!7978 = !DILocation(line: 376, column: 32, scope: !7975, inlinedAt: !7807)
!7979 = !DILocation(line: 377, column: 6, scope: !7980, inlinedAt: !7807)
!7980 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 377, column: 6)
!7981 = !DILocation(line: 377, column: 11, scope: !7980, inlinedAt: !7807)
!7982 = !DILocation(line: 377, column: 6, scope: !7803, inlinedAt: !7807)
!7983 = !DILocation(line: 377, column: 32, scope: !7980, inlinedAt: !7807)
!7984 = !DILocation(line: 378, column: 6, scope: !7985, inlinedAt: !7807)
!7985 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 378, column: 6)
!7986 = !DILocation(line: 378, column: 11, scope: !7985, inlinedAt: !7807)
!7987 = !DILocation(line: 378, column: 6, scope: !7803, inlinedAt: !7807)
!7988 = !DILocation(line: 378, column: 32, scope: !7985, inlinedAt: !7807)
!7989 = !DILocation(line: 379, column: 6, scope: !7990, inlinedAt: !7807)
!7990 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 379, column: 6)
!7991 = !DILocation(line: 379, column: 11, scope: !7990, inlinedAt: !7807)
!7992 = !DILocation(line: 379, column: 6, scope: !7803, inlinedAt: !7807)
!7993 = !DILocation(line: 379, column: 33, scope: !7990, inlinedAt: !7807)
!7994 = !DILocation(line: 380, column: 6, scope: !7995, inlinedAt: !7807)
!7995 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 380, column: 6)
!7996 = !DILocation(line: 380, column: 11, scope: !7995, inlinedAt: !7807)
!7997 = !DILocation(line: 380, column: 6, scope: !7803, inlinedAt: !7807)
!7998 = !DILocation(line: 380, column: 33, scope: !7995, inlinedAt: !7807)
!7999 = !DILocation(line: 381, column: 6, scope: !8000, inlinedAt: !7807)
!8000 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 381, column: 6)
!8001 = !DILocation(line: 381, column: 11, scope: !8000, inlinedAt: !7807)
!8002 = !DILocation(line: 381, column: 6, scope: !7803, inlinedAt: !7807)
!8003 = !DILocation(line: 381, column: 33, scope: !8000, inlinedAt: !7807)
!8004 = !DILocation(line: 382, column: 2, scope: !8005, inlinedAt: !7807)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !207, line: 382, column: 2)
!8006 = distinct !DILexicalBlock(scope: !7803, file: !207, line: 382, column: 2)
!8007 = !{i32 -2142006844, i32 -2142006815, i32 -2142006769, i32 -2142006711, i32 -2142006657, i32 -2142006603, i32 -2142006548, i32 -2142006517}
!8008 = !DILocation(line: 382, column: 2, scope: !8009, inlinedAt: !7807)
!8009 = distinct !DILexicalBlock(scope: !8010, file: !207, line: 382, column: 2)
!8010 = distinct !DILexicalBlock(scope: !8006, file: !207, line: 382, column: 2)
!8011 = !{i32 -2142006074, i32 -2142006067, i32 -2142006013, i32 -2142005982, i32 -2142005952}
!8012 = !DILocation(line: 382, column: 2, scope: !8010, inlinedAt: !7807)
!8013 = !DILocation(line: 386, column: 1, scope: !7803, inlinedAt: !7807)
!8014 = !DILocation(line: 547, column: 9, scope: !7786, inlinedAt: !7789)
!8015 = !DILocation(line: 549, column: 8, scope: !8016, inlinedAt: !7789)
!8016 = distinct !DILexicalBlock(scope: !7786, file: !207, line: 549, column: 7)
!8017 = !DILocation(line: 549, column: 7, scope: !7786, inlinedAt: !7789)
!8018 = !DILocation(line: 550, column: 4, scope: !8016, inlinedAt: !7789)
!8019 = !DILocation(line: 553, column: 33, scope: !7786, inlinedAt: !7789)
!8020 = !DILocation(line: 325, column: 6, scope: !8021, inlinedAt: !7801)
!8021 = distinct !DILexicalBlock(scope: !7797, file: !207, line: 325, column: 6)
!8022 = !DILocation(line: 325, column: 6, scope: !7797, inlinedAt: !7801)
!8023 = !DILocation(line: 326, column: 3, scope: !8021, inlinedAt: !7801)
!8024 = !DILocation(line: 332, column: 9, scope: !7797, inlinedAt: !7801)
!8025 = !DILocation(line: 332, column: 15, scope: !7797, inlinedAt: !7801)
!8026 = !DILocation(line: 332, column: 2, scope: !7797, inlinedAt: !7801)
!8027 = !DILocation(line: 336, column: 1, scope: !7797, inlinedAt: !7801)
!8028 = !DILocation(line: 553, column: 5, scope: !7786, inlinedAt: !7789)
!8029 = !DILocation(line: 553, column: 41, scope: !7786, inlinedAt: !7789)
!8030 = !DILocation(line: 554, column: 5, scope: !7786, inlinedAt: !7789)
!8031 = !DILocation(line: 554, column: 12, scope: !7786, inlinedAt: !7789)
!8032 = !DILocation(line: 448, column: 31, scope: !7781, inlinedAt: !7785)
!8033 = !DILocation(line: 448, column: 34, scope: !7781, inlinedAt: !7785)
!8034 = !DILocation(line: 448, column: 14, scope: !7781, inlinedAt: !7785)
!8035 = !DILocation(line: 450, column: 22, scope: !7781, inlinedAt: !7785)
!8036 = !DILocation(line: 450, column: 25, scope: !7781, inlinedAt: !7785)
!8037 = !DILocation(line: 450, column: 30, scope: !7781, inlinedAt: !7785)
!8038 = !DILocation(line: 450, column: 36, scope: !7781, inlinedAt: !7785)
!8039 = !DILocation(line: 450, column: 8, scope: !7781, inlinedAt: !7785)
!8040 = !DILocation(line: 450, column: 6, scope: !7781, inlinedAt: !7785)
!8041 = !DILocation(line: 451, column: 9, scope: !7781, inlinedAt: !7785)
!8042 = !DILocation(line: 552, column: 3, scope: !7786, inlinedAt: !7789)
!8043 = !DILocation(line: 557, column: 19, scope: !7788, inlinedAt: !7789)
!8044 = !DILocation(line: 557, column: 25, scope: !7788, inlinedAt: !7789)
!8045 = !DILocation(line: 557, column: 9, scope: !7788, inlinedAt: !7789)
!8046 = !DILocation(line: 557, column: 2, scope: !7788, inlinedAt: !7789)
!8047 = !DILocation(line: 558, column: 1, scope: !7788, inlinedAt: !7789)
!8048 = !DILocation(line: 664, column: 2, scope: !7777)
!8049 = distinct !DISubprogram(name: "ida_alloc", scope: !3359, file: !3359, line: 271, type: !8050, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8050 = !DISubroutineType(types: !8051)
!8051 = !{!249, !6352, !826}
!8052 = !DILocalVariable(name: "ida", arg: 1, scope: !8049, file: !3359, line: 271, type: !6352)
!8053 = !DILocation(line: 271, column: 41, scope: !8049)
!8054 = !DILocalVariable(name: "gfp", arg: 2, scope: !8049, file: !3359, line: 271, type: !826)
!8055 = !DILocation(line: 271, column: 52, scope: !8049)
!8056 = !DILocation(line: 273, column: 25, scope: !8049)
!8057 = !DILocation(line: 273, column: 37, scope: !8049)
!8058 = !DILocation(line: 273, column: 9, scope: !8049)
!8059 = !DILocation(line: 273, column: 2, scope: !8049)
!8060 = distinct !DISubprogram(name: "get_order", scope: !8061, file: !8061, line: 29, type: !8062, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8061 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8062 = !DISubroutineType(types: !8063)
!8063 = !{!249, !288}
!8064 = !DILocalVariable(name: "x", arg: 1, scope: !8065, file: !4772, line: 366, type: !504)
!8065 = distinct !DISubprogram(name: "fls64", scope: !4772, file: !4772, line: 366, type: !8066, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8066 = !DISubroutineType(types: !8067)
!8067 = !{!249, !504}
!8068 = !DILocation(line: 366, column: 40, scope: !8065, inlinedAt: !8069)
!8069 = distinct !DILocation(line: 46, column: 9, scope: !8060)
!8070 = !DILocalVariable(name: "bitpos", scope: !8065, file: !4772, line: 368, type: !249)
!8071 = !DILocation(line: 368, column: 6, scope: !8065, inlinedAt: !8069)
!8072 = !DILocalVariable(name: "size", arg: 1, scope: !8060, file: !8061, line: 29, type: !288)
!8073 = !DILocation(line: 29, column: 63, scope: !8060)
!8074 = !DILocation(line: 31, column: 27, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8060, file: !8061, line: 31, column: 6)
!8076 = !DILocation(line: 31, column: 6, scope: !8075)
!8077 = !DILocation(line: 31, column: 6, scope: !8060)
!8078 = !DILocation(line: 32, column: 8, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !8061, line: 32, column: 7)
!8080 = distinct !DILexicalBlock(scope: !8075, file: !8061, line: 31, column: 34)
!8081 = !DILocation(line: 32, column: 7, scope: !8080)
!8082 = !DILocation(line: 33, column: 4, scope: !8079)
!8083 = !DILocation(line: 35, column: 7, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8080, file: !8061, line: 35, column: 7)
!8085 = !DILocation(line: 35, column: 12, scope: !8084)
!8086 = !DILocation(line: 35, column: 7, scope: !8080)
!8087 = !DILocation(line: 36, column: 4, scope: !8084)
!8088 = !DILocation(line: 38, column: 10, scope: !8080)
!8089 = !DILocation(line: 38, column: 28, scope: !8080)
!8090 = !DILocation(line: 38, column: 41, scope: !8080)
!8091 = !DILocation(line: 38, column: 3, scope: !8080)
!8092 = !DILocation(line: 41, column: 6, scope: !8060)
!8093 = !DILocation(line: 42, column: 7, scope: !8060)
!8094 = !DILocation(line: 46, column: 15, scope: !8060)
!8095 = !DILocation(line: 374, column: 2, scope: !8065, inlinedAt: !8069)
!8096 = !DILocation(line: 376, column: 14, scope: !8065, inlinedAt: !8069)
!8097 = !{i32 429664}
!8098 = !DILocation(line: 377, column: 9, scope: !8065, inlinedAt: !8069)
!8099 = !DILocation(line: 377, column: 16, scope: !8065, inlinedAt: !8069)
!8100 = !DILocation(line: 46, column: 2, scope: !8060)
!8101 = !DILocation(line: 48, column: 1, scope: !8060)
!8102 = distinct !DISubprogram(name: "__ilog2_u64", scope: !8103, file: !8103, line: 30, type: !8104, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8103 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!249, !503}
!8106 = !DILocation(line: 366, column: 40, scope: !8065, inlinedAt: !8107)
!8107 = distinct !DILocation(line: 32, column: 9, scope: !8102)
!8108 = !DILocation(line: 368, column: 6, scope: !8065, inlinedAt: !8107)
!8109 = !DILocalVariable(name: "n", arg: 1, scope: !8102, file: !8103, line: 30, type: !503)
!8110 = !DILocation(line: 30, column: 21, scope: !8102)
!8111 = !DILocation(line: 32, column: 15, scope: !8102)
!8112 = !DILocation(line: 374, column: 2, scope: !8065, inlinedAt: !8107)
!8113 = !DILocation(line: 376, column: 14, scope: !8065, inlinedAt: !8107)
!8114 = !DILocation(line: 377, column: 9, scope: !8065, inlinedAt: !8107)
!8115 = !DILocation(line: 377, column: 16, scope: !8065, inlinedAt: !8107)
!8116 = !DILocation(line: 32, column: 18, scope: !8102)
!8117 = !DILocation(line: 32, column: 2, scope: !8102)
!8118 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8119, file: !8119, line: 137, type: !8120, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8119 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8120 = !DISubroutineType(types: !8121)
!8121 = !{!269, !1054, !2236, !404, !826}
!8122 = !DILocalVariable(name: "s", arg: 1, scope: !8118, file: !8119, line: 137, type: !1054)
!8123 = !DILocation(line: 137, column: 54, scope: !8118)
!8124 = !DILocalVariable(name: "object", arg: 2, scope: !8118, file: !8119, line: 137, type: !2236)
!8125 = !DILocation(line: 137, column: 69, scope: !8118)
!8126 = !DILocalVariable(name: "size", arg: 3, scope: !8118, file: !8119, line: 138, type: !404)
!8127 = !DILocation(line: 138, column: 12, scope: !8118)
!8128 = !DILocalVariable(name: "flags", arg: 4, scope: !8118, file: !8119, line: 138, type: !826)
!8129 = !DILocation(line: 138, column: 24, scope: !8118)
!8130 = !DILocation(line: 140, column: 17, scope: !8118)
!8131 = !DILocation(line: 140, column: 2, scope: !8118)
!8132 = distinct !DISubprogram(name: "chan_dev_release", scope: !3, file: !3, line: 232, type: !3500, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8133 = !DILocalVariable(name: "dev", arg: 1, scope: !8132, file: !3, line: 232, type: !301)
!8134 = !DILocation(line: 232, column: 45, scope: !8132)
!8135 = !DILocalVariable(name: "chan_dev", scope: !8132, file: !3, line: 234, type: !4246)
!8136 = !DILocation(line: 234, column: 23, scope: !8132)
!8137 = !DILocalVariable(name: "__mptr", scope: !8138, file: !3, line: 236, type: !269)
!8138 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 236, column: 13)
!8139 = !DILocation(line: 236, column: 13, scope: !8138)
!8140 = !DILocation(line: 236, column: 13, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 236, column: 13)
!8142 = !DILocation(line: 236, column: 11, scope: !8132)
!8143 = !DILocation(line: 237, column: 8, scope: !8132)
!8144 = !DILocation(line: 237, column: 2, scope: !8132)
!8145 = !DILocation(line: 238, column: 1, scope: !8132)
!8146 = distinct !DISubprogram(name: "memcpy_count_show", scope: !3, file: !3, line: 162, type: !4336, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8147 = !DILocalVariable(name: "dev", arg: 1, scope: !8146, file: !3, line: 162, type: !301)
!8148 = !DILocation(line: 162, column: 49, scope: !8146)
!8149 = !DILocalVariable(name: "attr", arg: 2, scope: !8146, file: !3, line: 163, type: !4338)
!8150 = !DILocation(line: 163, column: 31, scope: !8146)
!8151 = !DILocalVariable(name: "buf", arg: 3, scope: !8146, file: !3, line: 163, type: !359)
!8152 = !DILocation(line: 163, column: 43, scope: !8146)
!8153 = !DILocalVariable(name: "chan", scope: !8146, file: !3, line: 165, type: !228)
!8154 = !DILocation(line: 165, column: 19, scope: !8146)
!8155 = !DILocalVariable(name: "count", scope: !8146, file: !3, line: 166, type: !288)
!8156 = !DILocation(line: 166, column: 16, scope: !8146)
!8157 = !DILocalVariable(name: "i", scope: !8146, file: !3, line: 167, type: !249)
!8158 = !DILocation(line: 167, column: 6, scope: !8146)
!8159 = !DILocalVariable(name: "err", scope: !8146, file: !3, line: 168, type: !249)
!8160 = !DILocation(line: 168, column: 6, scope: !8146)
!8161 = !DILocation(line: 170, column: 2, scope: !8146)
!8162 = !DILocation(line: 171, column: 25, scope: !8146)
!8163 = !DILocation(line: 171, column: 9, scope: !8146)
!8164 = !DILocation(line: 171, column: 7, scope: !8146)
!8165 = !DILocation(line: 172, column: 6, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 172, column: 6)
!8167 = !DILocation(line: 172, column: 6, scope: !8146)
!8168 = !DILocation(line: 173, column: 3, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 173, column: 3)
!8170 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 172, column: 12)
!8171 = !DILocation(line: 173, column: 3, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 173, column: 3)
!8173 = !DILocation(line: 174, column: 13, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8172, file: !3, line: 174, column: 13)
!8175 = !DILocation(line: 174, column: 13, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 174, column: 13)
!8177 = !DILocalVariable(name: "__vpp_verify", scope: !8178, file: !3, line: 174, type: !2236)
!8178 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 174, column: 13)
!8179 = !DILocation(line: 174, column: 13, scope: !8178)
!8180 = !DILocation(line: 174, column: 42, scope: !8172)
!8181 = !DILocation(line: 174, column: 10, scope: !8172)
!8182 = !DILocation(line: 174, column: 4, scope: !8172)
!8183 = distinct !{!8183, !8168, !8184}
!8184 = !DILocation(line: 174, column: 42, scope: !8169)
!8185 = !DILocation(line: 175, column: 17, scope: !8170)
!8186 = !DILocation(line: 175, column: 31, scope: !8170)
!8187 = !DILocation(line: 175, column: 9, scope: !8170)
!8188 = !DILocation(line: 175, column: 7, scope: !8170)
!8189 = !DILocation(line: 176, column: 2, scope: !8170)
!8190 = !DILocation(line: 177, column: 7, scope: !8166)
!8191 = !DILocation(line: 178, column: 2, scope: !8146)
!8192 = !DILocation(line: 180, column: 9, scope: !8146)
!8193 = !DILocation(line: 180, column: 2, scope: !8146)
!8194 = distinct !DISubprogram(name: "dev_to_dma_chan", scope: !3, file: !3, line: 154, type: !8195, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8195 = !DISubroutineType(types: !8196)
!8196 = !{!228, !301}
!8197 = !DILocalVariable(name: "dev", arg: 1, scope: !8194, file: !3, line: 154, type: !301)
!8198 = !DILocation(line: 154, column: 56, scope: !8194)
!8199 = !DILocalVariable(name: "chan_dev", scope: !8194, file: !3, line: 156, type: !4246)
!8200 = !DILocation(line: 156, column: 23, scope: !8194)
!8201 = !DILocalVariable(name: "__mptr", scope: !8202, file: !3, line: 158, type: !269)
!8202 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 158, column: 13)
!8203 = !DILocation(line: 158, column: 13, scope: !8202)
!8204 = !DILocation(line: 158, column: 13, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 158, column: 13)
!8206 = !DILocation(line: 158, column: 11, scope: !8194)
!8207 = !DILocation(line: 159, column: 9, scope: !8194)
!8208 = !DILocation(line: 159, column: 19, scope: !8194)
!8209 = !DILocation(line: 159, column: 2, scope: !8194)
!8210 = distinct !DISubprogram(name: "bytes_transferred_show", scope: !3, file: !3, line: 184, type: !4336, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8211 = !DILocalVariable(name: "dev", arg: 1, scope: !8210, file: !3, line: 184, type: !301)
!8212 = !DILocation(line: 184, column: 54, scope: !8210)
!8213 = !DILocalVariable(name: "attr", arg: 2, scope: !8210, file: !3, line: 185, type: !4338)
!8214 = !DILocation(line: 185, column: 36, scope: !8210)
!8215 = !DILocalVariable(name: "buf", arg: 3, scope: !8210, file: !3, line: 185, type: !359)
!8216 = !DILocation(line: 185, column: 48, scope: !8210)
!8217 = !DILocalVariable(name: "chan", scope: !8210, file: !3, line: 187, type: !228)
!8218 = !DILocation(line: 187, column: 19, scope: !8210)
!8219 = !DILocalVariable(name: "count", scope: !8210, file: !3, line: 188, type: !288)
!8220 = !DILocation(line: 188, column: 16, scope: !8210)
!8221 = !DILocalVariable(name: "i", scope: !8210, file: !3, line: 189, type: !249)
!8222 = !DILocation(line: 189, column: 6, scope: !8210)
!8223 = !DILocalVariable(name: "err", scope: !8210, file: !3, line: 190, type: !249)
!8224 = !DILocation(line: 190, column: 6, scope: !8210)
!8225 = !DILocation(line: 192, column: 2, scope: !8210)
!8226 = !DILocation(line: 193, column: 25, scope: !8210)
!8227 = !DILocation(line: 193, column: 9, scope: !8210)
!8228 = !DILocation(line: 193, column: 7, scope: !8210)
!8229 = !DILocation(line: 194, column: 6, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 194, column: 6)
!8231 = !DILocation(line: 194, column: 6, scope: !8210)
!8232 = !DILocation(line: 195, column: 3, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 195, column: 3)
!8234 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 194, column: 12)
!8235 = !DILocation(line: 195, column: 3, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 195, column: 3)
!8237 = !DILocation(line: 196, column: 13, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 196, column: 13)
!8239 = !DILocation(line: 196, column: 13, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 196, column: 13)
!8241 = !DILocalVariable(name: "__vpp_verify", scope: !8242, file: !3, line: 196, type: !2236)
!8242 = distinct !DILexicalBlock(scope: !8240, file: !3, line: 196, column: 13)
!8243 = !DILocation(line: 196, column: 13, scope: !8242)
!8244 = !DILocation(line: 196, column: 42, scope: !8236)
!8245 = !DILocation(line: 196, column: 10, scope: !8236)
!8246 = !DILocation(line: 196, column: 4, scope: !8236)
!8247 = distinct !{!8247, !8232, !8248}
!8248 = !DILocation(line: 196, column: 42, scope: !8233)
!8249 = !DILocation(line: 197, column: 17, scope: !8234)
!8250 = !DILocation(line: 197, column: 31, scope: !8234)
!8251 = !DILocation(line: 197, column: 9, scope: !8234)
!8252 = !DILocation(line: 197, column: 7, scope: !8234)
!8253 = !DILocation(line: 198, column: 2, scope: !8234)
!8254 = !DILocation(line: 199, column: 7, scope: !8230)
!8255 = !DILocation(line: 200, column: 2, scope: !8210)
!8256 = !DILocation(line: 202, column: 9, scope: !8210)
!8257 = !DILocation(line: 202, column: 2, scope: !8210)
!8258 = distinct !DISubprogram(name: "in_use_show", scope: !3, file: !3, line: 206, type: !4336, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8259 = !DILocalVariable(name: "dev", arg: 1, scope: !8258, file: !3, line: 206, type: !301)
!8260 = !DILocation(line: 206, column: 43, scope: !8258)
!8261 = !DILocalVariable(name: "attr", arg: 2, scope: !8258, file: !3, line: 206, type: !4338)
!8262 = !DILocation(line: 206, column: 73, scope: !8258)
!8263 = !DILocalVariable(name: "buf", arg: 3, scope: !8258, file: !3, line: 207, type: !359)
!8264 = !DILocation(line: 207, column: 13, scope: !8258)
!8265 = !DILocalVariable(name: "chan", scope: !8258, file: !3, line: 209, type: !228)
!8266 = !DILocation(line: 209, column: 19, scope: !8258)
!8267 = !DILocalVariable(name: "err", scope: !8258, file: !3, line: 210, type: !249)
!8268 = !DILocation(line: 210, column: 6, scope: !8258)
!8269 = !DILocation(line: 212, column: 2, scope: !8258)
!8270 = !DILocation(line: 213, column: 25, scope: !8258)
!8271 = !DILocation(line: 213, column: 9, scope: !8258)
!8272 = !DILocation(line: 213, column: 7, scope: !8258)
!8273 = !DILocation(line: 214, column: 6, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 214, column: 6)
!8275 = !DILocation(line: 214, column: 6, scope: !8258)
!8276 = !DILocation(line: 215, column: 17, scope: !8274)
!8277 = !DILocation(line: 215, column: 30, scope: !8274)
!8278 = !DILocation(line: 215, column: 36, scope: !8274)
!8279 = !DILocation(line: 215, column: 9, scope: !8274)
!8280 = !DILocation(line: 215, column: 7, scope: !8274)
!8281 = !DILocation(line: 215, column: 3, scope: !8274)
!8282 = !DILocation(line: 217, column: 7, scope: !8274)
!8283 = !DILocation(line: 218, column: 2, scope: !8258)
!8284 = !DILocation(line: 220, column: 9, scope: !8258)
!8285 = !DILocation(line: 220, column: 2, scope: !8258)
!8286 = distinct !DISubprogram(name: "list_del", scope: !5407, file: !5407, line: 144, type: !5632, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8287 = !DILocalVariable(name: "entry", arg: 1, scope: !8286, file: !5407, line: 144, type: !256)
!8288 = !DILocation(line: 144, column: 47, scope: !8286)
!8289 = !DILocation(line: 146, column: 19, scope: !8286)
!8290 = !DILocation(line: 146, column: 2, scope: !8286)
!8291 = !DILocation(line: 147, column: 2, scope: !8286)
!8292 = !DILocation(line: 147, column: 9, scope: !8286)
!8293 = !DILocation(line: 147, column: 14, scope: !8286)
!8294 = !DILocation(line: 148, column: 2, scope: !8286)
!8295 = !DILocation(line: 148, column: 9, scope: !8286)
!8296 = !DILocation(line: 148, column: 14, scope: !8286)
!8297 = !DILocation(line: 149, column: 1, scope: !8286)
!8298 = distinct !DISubprogram(name: "refcount_set", scope: !199, file: !199, line: 134, type: !8299, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8299 = !DISubroutineType(types: !8300)
!8300 = !{null, !7196, !249}
!8301 = !DILocalVariable(name: "v", arg: 1, scope: !8302, file: !7218, line: 39, type: !7221)
!8302 = distinct !DISubprogram(name: "arch_atomic_set", scope: !7218, file: !7218, line: 39, type: !8303, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{null, !7221, !249}
!8305 = !DILocation(line: 39, column: 55, scope: !8302, inlinedAt: !8306)
!8306 = distinct !DILocation(line: 46, column: 2, scope: !8307, inlinedAt: !8308)
!8307 = distinct !DISubprogram(name: "atomic_set", scope: !7225, file: !7225, line: 43, type: !8303, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8308 = distinct !DILocation(line: 136, column: 2, scope: !8298)
!8309 = !DILocalVariable(name: "i", arg: 2, scope: !8302, file: !7218, line: 39, type: !249)
!8310 = !DILocation(line: 39, column: 62, scope: !8302, inlinedAt: !8306)
!8311 = !DILocation(line: 84, column: 74, scope: !7018, inlinedAt: !8312)
!8312 = distinct !DILocation(line: 45, column: 2, scope: !8307, inlinedAt: !8308)
!8313 = !DILocation(line: 84, column: 84, scope: !7018, inlinedAt: !8312)
!8314 = !DILocalVariable(name: "v", arg: 1, scope: !8307, file: !7225, line: 43, type: !7221)
!8315 = !DILocation(line: 43, column: 22, scope: !8307, inlinedAt: !8308)
!8316 = !DILocalVariable(name: "i", arg: 2, scope: !8307, file: !7225, line: 43, type: !249)
!8317 = !DILocation(line: 43, column: 29, scope: !8307, inlinedAt: !8308)
!8318 = !DILocalVariable(name: "r", arg: 1, scope: !8298, file: !199, line: 134, type: !7196)
!8319 = !DILocation(line: 134, column: 45, scope: !8298)
!8320 = !DILocalVariable(name: "n", arg: 2, scope: !8298, file: !199, line: 134, type: !249)
!8321 = !DILocation(line: 134, column: 52, scope: !8298)
!8322 = !DILocation(line: 136, column: 14, scope: !8298)
!8323 = !DILocation(line: 136, column: 17, scope: !8298)
!8324 = !DILocation(line: 136, column: 23, scope: !8298)
!8325 = !DILocation(line: 45, column: 26, scope: !8307, inlinedAt: !8308)
!8326 = !DILocation(line: 86, column: 20, scope: !7018, inlinedAt: !8312)
!8327 = !DILocation(line: 86, column: 23, scope: !7018, inlinedAt: !8312)
!8328 = !DILocation(line: 86, column: 2, scope: !7018, inlinedAt: !8312)
!8329 = !DILocation(line: 87, column: 2, scope: !7018, inlinedAt: !8312)
!8330 = !DILocation(line: 46, column: 18, scope: !8307, inlinedAt: !8308)
!8331 = !DILocation(line: 46, column: 21, scope: !8307, inlinedAt: !8308)
!8332 = !DILocation(line: 41, column: 2, scope: !8333, inlinedAt: !8306)
!8333 = distinct !DILexicalBlock(scope: !8302, file: !7218, line: 41, column: 2)
!8334 = !DILocation(line: 137, column: 1, scope: !8298)
!8335 = distinct !DISubprogram(name: "xa_init_flags", scope: !214, file: !214, line: 374, type: !8336, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8336 = !DISubroutineType(types: !8337)
!8337 = !{null, !8338, !826}
!8338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!8339 = !DILocalVariable(name: "lock", arg: 1, scope: !8340, file: !8341, line: 327, type: !1183)
!8340 = distinct !DISubprogram(name: "spinlock_check", scope: !8341, file: !8341, line: 327, type: !8342, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8341 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!8342 = !DISubroutineType(types: !8343)
!8343 = !{!8344, !1183}
!8344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!8345 = !DILocation(line: 327, column: 67, scope: !8340, inlinedAt: !8346)
!8346 = distinct !DILocation(line: 376, column: 2, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8335, file: !214, line: 376, column: 2)
!8348 = !DILocalVariable(name: "xa", arg: 1, scope: !8335, file: !214, line: 374, type: !8338)
!8349 = !DILocation(line: 374, column: 49, scope: !8335)
!8350 = !DILocalVariable(name: "flags", arg: 2, scope: !8335, file: !214, line: 374, type: !826)
!8351 = !DILocation(line: 374, column: 59, scope: !8335)
!8352 = !DILocation(line: 376, column: 2, scope: !8335)
!8353 = !DILocation(line: 376, column: 2, scope: !8347)
!8354 = !DILocation(line: 329, column: 10, scope: !8340, inlinedAt: !8346)
!8355 = !DILocation(line: 329, column: 16, scope: !8340, inlinedAt: !8346)
!8356 = !DILocation(line: 377, column: 17, scope: !8335)
!8357 = !DILocation(line: 377, column: 2, scope: !8335)
!8358 = !DILocation(line: 377, column: 6, scope: !8335)
!8359 = !DILocation(line: 377, column: 15, scope: !8335)
!8360 = !DILocation(line: 378, column: 2, scope: !8335)
!8361 = !DILocation(line: 378, column: 6, scope: !8335)
!8362 = !DILocation(line: 378, column: 14, scope: !8335)
!8363 = !DILocation(line: 379, column: 1, scope: !8335)
!8364 = distinct !DISubprogram(name: "__list_add_rcu", scope: !5631, file: !5631, line: 85, type: !8365, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8365 = !DISubroutineType(types: !8366)
!8366 = !{null, !256, !256, !256}
!8367 = !DILocalVariable(name: "new", arg: 1, scope: !8364, file: !5631, line: 85, type: !256)
!8368 = !DILocation(line: 85, column: 53, scope: !8364)
!8369 = !DILocalVariable(name: "prev", arg: 2, scope: !8364, file: !5631, line: 86, type: !256)
!8370 = !DILocation(line: 86, column: 21, scope: !8364)
!8371 = !DILocalVariable(name: "next", arg: 3, scope: !8364, file: !5631, line: 86, type: !256)
!8372 = !DILocation(line: 86, column: 45, scope: !8364)
!8373 = !DILocation(line: 88, column: 24, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8364, file: !5631, line: 88, column: 6)
!8375 = !DILocation(line: 88, column: 29, scope: !8374)
!8376 = !DILocation(line: 88, column: 35, scope: !8374)
!8377 = !DILocation(line: 88, column: 7, scope: !8374)
!8378 = !DILocation(line: 88, column: 6, scope: !8364)
!8379 = !DILocation(line: 89, column: 3, scope: !8374)
!8380 = !DILocation(line: 91, column: 14, scope: !8364)
!8381 = !DILocation(line: 91, column: 2, scope: !8364)
!8382 = !DILocation(line: 91, column: 7, scope: !8364)
!8383 = !DILocation(line: 91, column: 12, scope: !8364)
!8384 = !DILocation(line: 92, column: 14, scope: !8364)
!8385 = !DILocation(line: 92, column: 2, scope: !8364)
!8386 = !DILocation(line: 92, column: 7, scope: !8364)
!8387 = !DILocation(line: 92, column: 12, scope: !8364)
!8388 = !DILocation(line: 93, column: 2, scope: !8364)
!8389 = !DILocalVariable(name: "_r_a_p__v", scope: !8390, file: !5631, line: 93, type: !4294)
!8390 = distinct !DILexicalBlock(scope: !8364, file: !5631, line: 93, column: 2)
!8391 = !DILocation(line: 93, column: 2, scope: !8390)
!8392 = !DILocation(line: 93, column: 2, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8390, file: !5631, line: 93, column: 2)
!8394 = !DILocation(line: 93, column: 2, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8393, file: !5631, line: 93, column: 2)
!8396 = !DILocation(line: 93, column: 2, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8395, file: !5631, line: 93, column: 2)
!8398 = !DILocation(line: 93, column: 2, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8395, file: !5631, line: 93, column: 2)
!8400 = !DILocation(line: 93, column: 2, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8393, file: !5631, line: 93, column: 2)
!8402 = !DILocation(line: 93, column: 2, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8401, file: !5631, line: 93, column: 2)
!8404 = !{i32 -2145401732}
!8405 = !DILocation(line: 93, column: 2, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8401, file: !5631, line: 93, column: 2)
!8407 = !DILocation(line: 93, column: 2, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8406, file: !5631, line: 93, column: 2)
!8409 = !DILocation(line: 93, column: 2, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8406, file: !5631, line: 93, column: 2)
!8411 = !DILocation(line: 94, column: 15, scope: !8364)
!8412 = !DILocation(line: 94, column: 2, scope: !8364)
!8413 = !DILocation(line: 94, column: 8, scope: !8364)
!8414 = !DILocation(line: 94, column: 13, scope: !8364)
!8415 = !DILocation(line: 95, column: 1, scope: !8364)
!8416 = distinct !DISubprogram(name: "__list_add_valid", scope: !5407, file: !5407, line: 45, type: !8417, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8417 = !DISubroutineType(types: !8418)
!8418 = !{!267, !256, !256, !256}
!8419 = !DILocalVariable(name: "new", arg: 1, scope: !8416, file: !5407, line: 45, type: !256)
!8420 = !DILocation(line: 45, column: 55, scope: !8416)
!8421 = !DILocalVariable(name: "prev", arg: 2, scope: !8416, file: !5407, line: 46, type: !256)
!8422 = !DILocation(line: 46, column: 23, scope: !8416)
!8423 = !DILocalVariable(name: "next", arg: 3, scope: !8416, file: !5407, line: 47, type: !256)
!8424 = !DILocation(line: 47, column: 23, scope: !8416)
!8425 = !DILocation(line: 49, column: 2, scope: !8416)
!8426 = distinct !DISubprogram(name: "dma_device_release", scope: !3, file: !3, line: 423, type: !6316, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8427 = !DILocalVariable(name: "ref", arg: 1, scope: !8426, file: !3, line: 423, type: !6318)
!8428 = !DILocation(line: 423, column: 45, scope: !8426)
!8429 = !DILocalVariable(name: "device", scope: !8426, file: !3, line: 425, type: !232)
!8430 = !DILocation(line: 425, column: 21, scope: !8426)
!8431 = !DILocalVariable(name: "__mptr", scope: !8432, file: !3, line: 425, type: !269)
!8432 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 425, column: 30)
!8433 = !DILocation(line: 425, column: 30, scope: !8432)
!8434 = !DILocation(line: 425, column: 30, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8432, file: !3, line: 425, column: 30)
!8436 = !DILocation(line: 427, column: 16, scope: !8426)
!8437 = !DILocation(line: 427, column: 24, scope: !8426)
!8438 = !DILocation(line: 427, column: 2, scope: !8426)
!8439 = !DILocation(line: 428, column: 2, scope: !8426)
!8440 = !DILocation(line: 430, column: 6, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 430, column: 6)
!8442 = !DILocation(line: 430, column: 14, scope: !8441)
!8443 = !DILocation(line: 430, column: 6, scope: !8426)
!8444 = !DILocation(line: 431, column: 3, scope: !8441)
!8445 = !DILocation(line: 431, column: 11, scope: !8441)
!8446 = !DILocation(line: 431, column: 26, scope: !8441)
!8447 = !DILocation(line: 432, column: 1, scope: !8426)
!8448 = distinct !DISubprogram(name: "refcount_dec_and_test", scope: !199, file: !199, line: 331, type: !7194, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8449 = !DILocalVariable(name: "r", arg: 1, scope: !8448, file: !199, line: 331, type: !7196)
!8450 = !DILocation(line: 331, column: 67, scope: !8448)
!8451 = !DILocation(line: 333, column: 33, scope: !8448)
!8452 = !DILocation(line: 333, column: 9, scope: !8448)
!8453 = !DILocation(line: 333, column: 2, scope: !8448)
!8454 = distinct !DISubprogram(name: "__refcount_dec_and_test", scope: !199, file: !199, line: 313, type: !7203, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8455 = !DILocalVariable(name: "r", arg: 1, scope: !8454, file: !199, line: 313, type: !7196)
!8456 = !DILocation(line: 313, column: 69, scope: !8454)
!8457 = !DILocalVariable(name: "oldp", arg: 2, scope: !8454, file: !199, line: 313, type: !788)
!8458 = !DILocation(line: 313, column: 77, scope: !8454)
!8459 = !DILocation(line: 315, column: 36, scope: !8454)
!8460 = !DILocation(line: 315, column: 39, scope: !8454)
!8461 = !DILocation(line: 315, column: 9, scope: !8454)
!8462 = !DILocation(line: 315, column: 2, scope: !8454)
!8463 = distinct !DISubprogram(name: "__refcount_sub_and_test", scope: !199, file: !199, line: 270, type: !7214, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8464 = !DILocalVariable(name: "i", arg: 1, scope: !8465, file: !7218, line: 188, type: !249)
!8465 = distinct !DISubprogram(name: "arch_atomic_fetch_sub", scope: !7218, file: !7218, line: 188, type: !8466, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8466 = !DISubroutineType(types: !8467)
!8467 = !{!249, !249, !7221}
!8468 = !DILocation(line: 188, column: 54, scope: !8465, inlinedAt: !8469)
!8469 = distinct !DILocation(line: 221, column: 9, scope: !8470, inlinedAt: !8471)
!8470 = distinct !DISubprogram(name: "atomic_fetch_sub_release", scope: !7225, file: !7225, line: 218, type: !8466, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8471 = distinct !DILocation(line: 272, column: 12, scope: !8463)
!8472 = !DILocalVariable(name: "v", arg: 2, scope: !8465, file: !7218, line: 188, type: !7221)
!8473 = !DILocation(line: 188, column: 67, scope: !8465, inlinedAt: !8469)
!8474 = !DILocalVariable(name: "__ret", scope: !8475, file: !7218, line: 190, type: !249)
!8475 = distinct !DILexicalBlock(scope: !8465, file: !7218, line: 190, column: 9)
!8476 = !DILocation(line: 190, column: 9, scope: !8475, inlinedAt: !8469)
!8477 = !DILocation(line: 99, column: 79, scope: !7239, inlinedAt: !8478)
!8478 = distinct !DILocation(line: 220, column: 2, scope: !8470, inlinedAt: !8471)
!8479 = !DILocation(line: 99, column: 89, scope: !7239, inlinedAt: !8478)
!8480 = !DILocalVariable(name: "i", arg: 1, scope: !8470, file: !7225, line: 218, type: !249)
!8481 = !DILocation(line: 218, column: 30, scope: !8470, inlinedAt: !8471)
!8482 = !DILocalVariable(name: "v", arg: 2, scope: !8470, file: !7225, line: 218, type: !7221)
!8483 = !DILocation(line: 218, column: 43, scope: !8470, inlinedAt: !8471)
!8484 = !DILocalVariable(name: "i", arg: 1, scope: !8463, file: !199, line: 270, type: !249)
!8485 = !DILocation(line: 270, column: 61, scope: !8463)
!8486 = !DILocalVariable(name: "r", arg: 2, scope: !8463, file: !199, line: 270, type: !7196)
!8487 = !DILocation(line: 270, column: 76, scope: !8463)
!8488 = !DILocalVariable(name: "oldp", arg: 3, scope: !8463, file: !199, line: 270, type: !788)
!8489 = !DILocation(line: 270, column: 84, scope: !8463)
!8490 = !DILocalVariable(name: "old", scope: !8463, file: !199, line: 272, type: !249)
!8491 = !DILocation(line: 272, column: 6, scope: !8463)
!8492 = !DILocation(line: 272, column: 37, scope: !8463)
!8493 = !DILocation(line: 272, column: 41, scope: !8463)
!8494 = !DILocation(line: 272, column: 44, scope: !8463)
!8495 = !DILocation(line: 220, column: 31, scope: !8470, inlinedAt: !8471)
!8496 = !DILocation(line: 101, column: 20, scope: !7239, inlinedAt: !8478)
!8497 = !DILocation(line: 101, column: 23, scope: !7239, inlinedAt: !8478)
!8498 = !DILocation(line: 101, column: 2, scope: !7239, inlinedAt: !8478)
!8499 = !DILocation(line: 102, column: 2, scope: !7239, inlinedAt: !8478)
!8500 = !DILocation(line: 221, column: 39, scope: !8470, inlinedAt: !8471)
!8501 = !DILocation(line: 221, column: 42, scope: !8470, inlinedAt: !8471)
!8502 = !{i32 -2146598634}
!8503 = !DILocation(line: 274, column: 6, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8463, file: !199, line: 274, column: 6)
!8505 = !DILocation(line: 274, column: 6, scope: !8463)
!8506 = !DILocation(line: 275, column: 11, scope: !8504)
!8507 = !DILocation(line: 275, column: 4, scope: !8504)
!8508 = !DILocation(line: 275, column: 9, scope: !8504)
!8509 = !DILocation(line: 275, column: 3, scope: !8504)
!8510 = !DILocation(line: 277, column: 6, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8463, file: !199, line: 277, column: 6)
!8512 = !DILocation(line: 277, column: 13, scope: !8511)
!8513 = !DILocation(line: 277, column: 10, scope: !8511)
!8514 = !DILocation(line: 277, column: 6, scope: !8463)
!8515 = !DILocation(line: 278, column: 3, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8511, file: !199, line: 277, column: 16)
!8517 = !{i32 -2145224379}
!8518 = !DILocation(line: 279, column: 3, scope: !8516)
!8519 = !DILocation(line: 282, column: 6, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8463, file: !199, line: 282, column: 6)
!8521 = !DILocation(line: 282, column: 6, scope: !8463)
!8522 = !DILocation(line: 283, column: 26, scope: !8520)
!8523 = !DILocation(line: 283, column: 3, scope: !8520)
!8524 = !DILocation(line: 285, column: 2, scope: !8463)
!8525 = !DILocation(line: 286, column: 1, scope: !8463)
!8526 = distinct !DISubprogram(name: "get_count_order", scope: !8527, file: !8527, line: 189, type: !8528, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8527 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!8528 = !DISubroutineType(types: !8529)
!8529 = !{!249, !7}
!8530 = !DILocalVariable(name: "x", arg: 1, scope: !8531, file: !4772, line: 324, type: !7)
!8531 = distinct !DISubprogram(name: "fls", scope: !4772, file: !4772, line: 324, type: !8528, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8532 = !DILocation(line: 324, column: 45, scope: !8531, inlinedAt: !8533)
!8533 = distinct !DILocation(line: 194, column: 9, scope: !8526)
!8534 = !DILocalVariable(name: "r", scope: !8531, file: !4772, line: 326, type: !249)
!8535 = !DILocation(line: 326, column: 6, scope: !8531, inlinedAt: !8533)
!8536 = !DILocalVariable(name: "count", arg: 1, scope: !8526, file: !8527, line: 189, type: !7)
!8537 = !DILocation(line: 189, column: 48, scope: !8526)
!8538 = !DILocation(line: 191, column: 6, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8526, file: !8527, line: 191, column: 6)
!8540 = !DILocation(line: 191, column: 12, scope: !8539)
!8541 = !DILocation(line: 191, column: 6, scope: !8526)
!8542 = !DILocation(line: 192, column: 3, scope: !8539)
!8543 = !DILocation(line: 194, column: 13, scope: !8526)
!8544 = !DILocation(line: 340, column: 14, scope: !8531, inlinedAt: !8533)
!8545 = !DILocation(line: 338, column: 2, scope: !8531, inlinedAt: !8533)
!8546 = !{i32 428698}
!8547 = !DILocation(line: 351, column: 9, scope: !8531, inlinedAt: !8533)
!8548 = !DILocation(line: 351, column: 11, scope: !8531, inlinedAt: !8533)
!8549 = !DILocation(line: 194, column: 2, scope: !8526)
!8550 = !DILocation(line: 195, column: 1, scope: !8526)
!8551 = distinct !DISubprogram(name: "dmaengine_is_metadata_mode_supported", scope: !6, file: !6, line: 1044, type: !8552, scopeLine: 1046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8552 = !DISubroutineType(types: !8553)
!8553 = !{!267, !228, !14}
!8554 = !DILocalVariable(name: "chan", arg: 1, scope: !8551, file: !6, line: 1044, type: !228)
!8555 = !DILocation(line: 1044, column: 74, scope: !8551)
!8556 = !DILocalVariable(name: "mode", arg: 2, scope: !8551, file: !6, line: 1045, type: !14)
!8557 = !DILocation(line: 1045, column: 31, scope: !8551)
!8558 = !DILocation(line: 1047, column: 7, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8551, file: !6, line: 1047, column: 6)
!8560 = !DILocation(line: 1047, column: 6, scope: !8551)
!8561 = !DILocation(line: 1048, column: 3, scope: !8559)
!8562 = !DILocation(line: 1050, column: 12, scope: !8551)
!8563 = !DILocation(line: 1050, column: 18, scope: !8551)
!8564 = !DILocation(line: 1050, column: 26, scope: !8551)
!8565 = !DILocation(line: 1050, column: 48, scope: !8551)
!8566 = !DILocation(line: 1050, column: 46, scope: !8551)
!8567 = !DILocation(line: 1050, column: 10, scope: !8551)
!8568 = !DILocation(line: 1050, column: 9, scope: !8551)
!8569 = !DILocation(line: 1050, column: 2, scope: !8551)
!8570 = !DILocation(line: 1051, column: 1, scope: !8551)
!8571 = distinct !DISubprogram(name: "dmaengine_init_unmap_pool", scope: !3, file: !3, line: 1452, type: !4387, scopeLine: 1453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8572 = !DILocalVariable(name: "i", scope: !8571, file: !3, line: 1454, type: !249)
!8573 = !DILocation(line: 1454, column: 6, scope: !8571)
!8574 = !DILocation(line: 1456, column: 9, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 1456, column: 2)
!8576 = !DILocation(line: 1456, column: 7, scope: !8575)
!8577 = !DILocation(line: 1456, column: 14, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 1456, column: 2)
!8579 = !DILocation(line: 1456, column: 16, scope: !8578)
!8580 = !DILocation(line: 1456, column: 2, scope: !8575)
!8581 = !DILocalVariable(name: "p", scope: !8582, file: !3, line: 1457, type: !6650)
!8582 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 1456, column: 47)
!8583 = !DILocation(line: 1457, column: 32, scope: !8582)
!8584 = !DILocation(line: 1457, column: 48, scope: !8582)
!8585 = !DILocation(line: 1457, column: 37, scope: !8582)
!8586 = !DILocalVariable(name: "size", scope: !8582, file: !3, line: 1458, type: !404)
!8587 = !DILocation(line: 1458, column: 10, scope: !8582)
!8588 = !DILocation(line: 1461, column: 31, scope: !8582)
!8589 = !DILocation(line: 1461, column: 34, scope: !8582)
!8590 = !DILocation(line: 1461, column: 29, scope: !8582)
!8591 = !DILocation(line: 1460, column: 46, scope: !8582)
!8592 = !DILocation(line: 1460, column: 8, scope: !8582)
!8593 = !DILocation(line: 1463, column: 32, scope: !8582)
!8594 = !DILocation(line: 1463, column: 35, scope: !8582)
!8595 = !DILocation(line: 1463, column: 41, scope: !8582)
!8596 = !DILocation(line: 1463, column: 14, scope: !8582)
!8597 = !DILocation(line: 1463, column: 3, scope: !8582)
!8598 = !DILocation(line: 1463, column: 6, scope: !8582)
!8599 = !DILocation(line: 1463, column: 12, scope: !8582)
!8600 = !DILocation(line: 1465, column: 8, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1465, column: 7)
!8602 = !DILocation(line: 1465, column: 11, scope: !8601)
!8603 = !DILocation(line: 1465, column: 7, scope: !8582)
!8604 = !DILocation(line: 1466, column: 4, scope: !8601)
!8605 = !DILocation(line: 1467, column: 41, scope: !8582)
!8606 = !DILocation(line: 1467, column: 44, scope: !8582)
!8607 = !DILocation(line: 1467, column: 13, scope: !8582)
!8608 = !DILocation(line: 1467, column: 3, scope: !8582)
!8609 = !DILocation(line: 1467, column: 6, scope: !8582)
!8610 = !DILocation(line: 1467, column: 11, scope: !8582)
!8611 = !DILocation(line: 1468, column: 8, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1468, column: 7)
!8613 = !DILocation(line: 1468, column: 11, scope: !8612)
!8614 = !DILocation(line: 1468, column: 7, scope: !8582)
!8615 = !DILocation(line: 1469, column: 4, scope: !8612)
!8616 = !DILocation(line: 1470, column: 2, scope: !8582)
!8617 = !DILocation(line: 1456, column: 43, scope: !8578)
!8618 = !DILocation(line: 1456, column: 2, scope: !8578)
!8619 = distinct !{!8619, !8580, !8620}
!8620 = !DILocation(line: 1470, column: 2, scope: !8575)
!8621 = !DILocation(line: 1472, column: 6, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 1472, column: 6)
!8623 = !DILocation(line: 1472, column: 8, scope: !8622)
!8624 = !DILocation(line: 1472, column: 6, scope: !8571)
!8625 = !DILocation(line: 1473, column: 3, scope: !8622)
!8626 = !DILocation(line: 1475, column: 2, scope: !8571)
!8627 = !DILocation(line: 1476, column: 2, scope: !8571)
!8628 = !DILocation(line: 1477, column: 1, scope: !8571)
!8629 = distinct !DISubprogram(name: "dmaengine_debugfs_init", scope: !3, file: !3, line: 135, type: !1989, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8630 = !DILocation(line: 135, column: 51, scope: !8629)
!8631 = distinct !DISubprogram(name: "mempool_create_slab_pool", scope: !4364, file: !4364, line: 67, type: !8632, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8632 = !DISubroutineType(types: !8633)
!8633 = !{!4362, !249, !1054}
!8634 = !DILocalVariable(name: "min_nr", arg: 1, scope: !8631, file: !4364, line: 67, type: !249)
!8635 = !DILocation(line: 67, column: 30, scope: !8631)
!8636 = !DILocalVariable(name: "kc", arg: 2, scope: !8631, file: !4364, line: 67, type: !1054)
!8637 = !DILocation(line: 67, column: 57, scope: !8631)
!8638 = !DILocation(line: 69, column: 24, scope: !8631)
!8639 = !DILocation(line: 70, column: 19, scope: !8631)
!8640 = !DILocation(line: 70, column: 10, scope: !8631)
!8641 = !DILocation(line: 69, column: 9, scope: !8631)
!8642 = !DILocation(line: 69, column: 2, scope: !8631)
!8643 = distinct !DISubprogram(name: "dmaengine_destroy_unmap_pool", scope: !3, file: !3, line: 1438, type: !1989, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !332)
!8644 = !DILocalVariable(name: "i", scope: !8643, file: !3, line: 1440, type: !249)
!8645 = !DILocation(line: 1440, column: 6, scope: !8643)
!8646 = !DILocation(line: 1442, column: 9, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 1442, column: 2)
!8648 = !DILocation(line: 1442, column: 7, scope: !8647)
!8649 = !DILocation(line: 1442, column: 14, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 1442, column: 2)
!8651 = !DILocation(line: 1442, column: 16, scope: !8650)
!8652 = !DILocation(line: 1442, column: 2, scope: !8647)
!8653 = !DILocalVariable(name: "p", scope: !8654, file: !3, line: 1443, type: !6650)
!8654 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 1442, column: 47)
!8655 = !DILocation(line: 1443, column: 32, scope: !8654)
!8656 = !DILocation(line: 1443, column: 48, scope: !8654)
!8657 = !DILocation(line: 1443, column: 37, scope: !8654)
!8658 = !DILocation(line: 1445, column: 19, scope: !8654)
!8659 = !DILocation(line: 1445, column: 22, scope: !8654)
!8660 = !DILocation(line: 1445, column: 3, scope: !8654)
!8661 = !DILocation(line: 1446, column: 3, scope: !8654)
!8662 = !DILocation(line: 1446, column: 6, scope: !8654)
!8663 = !DILocation(line: 1446, column: 11, scope: !8654)
!8664 = !DILocation(line: 1447, column: 22, scope: !8654)
!8665 = !DILocation(line: 1447, column: 25, scope: !8654)
!8666 = !DILocation(line: 1447, column: 3, scope: !8654)
!8667 = !DILocation(line: 1448, column: 3, scope: !8654)
!8668 = !DILocation(line: 1448, column: 6, scope: !8654)
!8669 = !DILocation(line: 1448, column: 12, scope: !8654)
!8670 = !DILocation(line: 1449, column: 2, scope: !8654)
!8671 = !DILocation(line: 1442, column: 43, scope: !8650)
!8672 = !DILocation(line: 1442, column: 2, scope: !8650)
!8673 = distinct !{!8673, !8652, !8674}
!8674 = !DILocation(line: 1449, column: 2, scope: !8647)
!8675 = !DILocation(line: 1450, column: 1, scope: !8643)
