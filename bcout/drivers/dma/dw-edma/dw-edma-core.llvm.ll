; ModuleID = '../bcout/drivers/dma/dw-edma/dw-edma-core.llvm.bc'
source_filename = "drivers/dma/dw-edma/dw-edma-core.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.49, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.52 }
%union.anon.49 = type { %struct.anon.50 }
%struct.anon.50 = type { i64, i64 }
%union.anon.52 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.48, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.page = type { i64, %union.anon.1, %union.anon.55, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.57, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.58, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.59, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.62, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.65, %struct.list_head, %struct.list_head, %union.anon.66 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.63 }
%union.anon.63 = type { %struct.anon.64 }
%struct.anon.64 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.65 = type { %struct.list_head }
%union.anon.66 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type opaque
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.56, i32 }
%union.anon.56 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.57 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.58 = type { %struct.callback_head }
%union.anon.59 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.60 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.60 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.62 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.swap_info_struct = type opaque
%union.anon.55 = type { %struct.atomic_t }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.atomic_t = type { i32 }
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.33 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.33 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.34, %union.anon.35, i32 }
%struct.request_queue = type opaque
%union.anon.34 = type { %struct.list_head }
%union.anon.35 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.36 }
%struct.anon.36 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.40 }
%struct.anon.40 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.rseq = type { i32, i32, %union.anon.47, i32, [12 x i8] }
%union.anon.47 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.48 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.kmem_cache = type opaque
%struct.dw_edma_chip = type { %struct.device*, i32, i32, %struct.dw_edma* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.67, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.67 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type { %struct.list_head, i32, i32, %struct.device*, %struct.msi_msg, %struct.irq_affinity_desc*, void (%struct.msi_desc*, i8*)*, i8*, %union.anon.68 }
%struct.msi_msg = type { i32, i32, i32 }
%struct.irq_affinity_desc = type { %struct.cpumask, i8 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { i32, %struct.anon.70, %union.anon.71 }
%struct.anon.70 = type { i16, i16, i32 }
%union.anon.71 = type { i8* }
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.irq_chip_regs, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.irq_chip_regs = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, i64, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, %struct.mutex, i32, %struct.module*, i8* }
%struct.irqaction = type { i32 (i32, i8*)*, i8*, i8*, %struct.irqaction*, i32 (i32, i8*)*, %struct.task_struct*, %struct.irqaction*, i32, i32, i64, i64, i8*, %struct.proc_dir_entry* }
%struct.proc_dir_entry = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.dw_edma = type { [20 x i8], %struct.dma_device, i16, %struct.dma_device, i16, %struct.dw_edma_region, %struct.dw_edma_region, %struct.dw_edma_region, %struct.dw_edma_irq*, i32, i32, i32, %struct.dw_edma_chan*, %struct.dw_edma_core_ops*, %struct.raw_spinlock }
%struct.dma_device = type { %struct.kref, i32, i32, %struct.list_head, %struct.list_head, %struct.dma_filter, %struct.dma_cap_mask_t, i32, i16, i16, i32, i32, i32, i32, i32, %struct.device*, %struct.module*, %struct.ida, %struct.mutex, i32, i32, i32, i32, i32, i32, i8, i32, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64*, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i32, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64)*, void (%struct.dma_chan*, %struct.dma_slave_caps*)*, i32 (%struct.dma_chan*, %struct.dma_slave_config*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)*, void (%struct.dma_chan*)*, void (%struct.dma_device*)* }
%struct.dma_filter = type { i1 (%struct.dma_chan*, i8*)*, i32, %struct.dma_slave_map* }
%struct.dma_chan = type { %struct.dma_device*, %struct.device*, i32, i32, i32, %struct.dma_chan_dev*, i8*, %struct.list_head, %struct.dma_chan_percpu*, i32, i32, %struct.dma_router*, i8*, i8* }
%struct.dma_chan_dev = type { %struct.dma_chan*, %struct.device, i32 }
%struct.dma_chan_percpu = type { i64, i64 }
%struct.dma_router = type { %struct.device*, void (%struct.device*, i8*)* }
%struct.dma_slave_map = type { i8*, i8*, i8* }
%struct.dma_cap_mask_t = type { [1 x i64] }
%struct.ida = type { %struct.xarray }
%struct.dma_async_tx_descriptor = type { i32, i32, i64, %struct.dma_chan*, i32 (%struct.dma_async_tx_descriptor*)*, i32 (%struct.dma_async_tx_descriptor*)*, void (i8*)*, void (i8*, %struct.dmaengine_result*)*, i8*, %struct.dmaengine_unmap_data*, i32, %struct.dma_descriptor_metadata_ops* }
%struct.dmaengine_result = type { i32, i32 }
%struct.dmaengine_unmap_data = type { i8, i8, i8, i8, %struct.device*, %struct.kref, i64, [0 x i64] }
%struct.dma_descriptor_metadata_ops = type { i32 (%struct.dma_async_tx_descriptor*, i8*, i64)*, i8* (%struct.dma_async_tx_descriptor*, i64*, i64*)*, i32 (%struct.dma_async_tx_descriptor*, i64)* }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.dma_interleaved_template = type { i64, i64, i32, i8, i8, i8, i8, i64, i64, [0 x %struct.data_chunk] }
%struct.data_chunk = type { i64, i64, i64, i64 }
%struct.dma_slave_caps = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8 }
%struct.dma_slave_config = type { i32, i64, i64, i32, i32, i32, i32, i32, i32, i8, i32 }
%struct.dma_tx_state = type { i32, i32, i32, i32 }
%struct.dw_edma_region = type { i64, i8*, i64 }
%struct.dw_edma_irq = type { %struct.msi_msg, i32, i32, %struct.dw_edma* }
%struct.dw_edma_chan = type { %struct.virt_dma_chan, %struct.dw_edma_chip*, i32, i32, i64, i32, i64, %struct.msi_msg, i32, i32, i8, %struct.dma_slave_config }
%struct.virt_dma_chan = type { %struct.dma_chan, %struct.tasklet_struct, void (%struct.virt_dma_desc*)*, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.virt_dma_desc* }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.72, i64 }
%union.anon.72 = type { void (i64)* }
%struct.virt_dma_desc = type { %struct.dma_async_tx_descriptor, %struct.dmaengine_result, %struct.list_head }
%struct.dw_edma_core_ops = type { i32 (%struct.device*, i32)* }
%struct.dw_edma_desc = type { %struct.virt_dma_desc, %struct.dw_edma_chan*, %struct.dw_edma_chunk*, i32, i32, i32 }
%struct.dw_edma_chunk = type { %struct.list_head, %struct.dw_edma_chan*, %struct.dw_edma_burst*, i32, i8, %struct.dw_edma_region }
%struct.dw_edma_burst = type { %struct.list_head, i64, i64, i32 }
%struct.dw_edma_transfer = type { %struct.dma_chan*, %union.dw_edma_xfer, i32, i64, i8 }
%union.dw_edma_xfer = type { %struct.dw_edma_cyclic }
%struct.dw_edma_cyclic = type { i64, i64, i64 }
%struct.dw_edma_sg = type { %struct.scatterlist*, i32 }

@.str = private unnamed_addr constant [16 x i8] c"dw-edma-core:%d\00", align 1
@__UNIQUE_ID_file263 = internal constant [41 x i8] c"dw_edma.file=drivers/dma/dw-edma/dw-edma\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_license264 = internal constant [23 x i8] c"dw_edma.license=GPL v2\00", section ".modinfo", align 1, !dbg !4719
@__UNIQUE_ID_description265 = internal constant [68 x i8] c"dw_edma.description=Synopsys DesignWare eDMA controller core driver\00", section ".modinfo", align 1, !dbg !4724
@__UNIQUE_ID_author266 = internal constant [64 x i8] c"dw_edma.author=Gustavo Pimentel <gustavo.pimentel@synopsys.com>\00", section ".modinfo", align 1, !dbg !4729
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.1 = private unnamed_addr constant [35 x i8] c"drivers/dma/dw-edma/../dmaengine.h\00", align 1
@jiffies = external dso_local global i64, align 8
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.2 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@llvm.used = appending global [4 x i8*] [i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_file263, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_license264, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__UNIQUE_ID_description265, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__UNIQUE_ID_author266, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dw_edma_probe(%struct.dw_edma_chip* %chip) #0 !dbg !4741 {
entry:
  %retval = alloca i32, align 4
  %chip.addr = alloca %struct.dw_edma_chip*, align 8
  %dev = alloca %struct.device*, align 8
  %dw = alloca %struct.dw_edma*, align 8
  %wr_alloc = alloca i32, align 4
  %rd_alloc = alloca i32, align 4
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %.compoundliteral = alloca %struct.raw_spinlock, align 1
  store %struct.dw_edma_chip* %chip, %struct.dw_edma_chip** %chip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chip** %chip.addr, metadata !4744, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !4746, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.declare(metadata %struct.dw_edma** %dw, metadata !4748, metadata !DIExpression()), !dbg !4749
  call void @llvm.dbg.declare(metadata i32* %wr_alloc, metadata !4750, metadata !DIExpression()), !dbg !4751
  store i32 0, i32* %wr_alloc, align 4, !dbg !4751
  call void @llvm.dbg.declare(metadata i32* %rd_alloc, metadata !4752, metadata !DIExpression()), !dbg !4753
  store i32 0, i32* %rd_alloc, align 4, !dbg !4753
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4754, metadata !DIExpression()), !dbg !4755
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4756, metadata !DIExpression()), !dbg !4757
  %0 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !4758
  %tobool = icmp ne %struct.dw_edma_chip* %0, null, !dbg !4758
  br i1 %tobool, label %if.end, label %if.then, !dbg !4760

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4761
  br label %return, !dbg !4761

if.end:                                           ; preds = %entry
  %1 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !4762
  %dev1 = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %1, i32 0, i32 0, !dbg !4763
  %2 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !4763
  store %struct.device* %2, %struct.device** %dev, align 8, !dbg !4764
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4765
  %tobool2 = icmp ne %struct.device* %3, null, !dbg !4765
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !4767

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !4768
  br label %return, !dbg !4768

if.end4:                                          ; preds = %if.end
  %4 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !4769
  %dw5 = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %4, i32 0, i32 3, !dbg !4770
  %5 = load %struct.dw_edma*, %struct.dw_edma** %dw5, align 8, !dbg !4770
  store %struct.dw_edma* %5, %struct.dw_edma** %dw, align 8, !dbg !4771
  %6 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4772
  %tobool6 = icmp ne %struct.dw_edma* %6, null, !dbg !4772
  br i1 %tobool6, label %lor.lhs.false, label %if.then13, !dbg !4774

lor.lhs.false:                                    ; preds = %if.end4
  %7 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4775
  %irq = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %7, i32 0, i32 8, !dbg !4776
  %8 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %irq, align 8, !dbg !4776
  %tobool7 = icmp ne %struct.dw_edma_irq* %8, null, !dbg !4775
  br i1 %tobool7, label %lor.lhs.false8, label %if.then13, !dbg !4777

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4778
  %ops = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %9, i32 0, i32 13, !dbg !4779
  %10 = load %struct.dw_edma_core_ops*, %struct.dw_edma_core_ops** %ops, align 8, !dbg !4779
  %tobool9 = icmp ne %struct.dw_edma_core_ops* %10, null, !dbg !4778
  br i1 %tobool9, label %lor.lhs.false10, label %if.then13, !dbg !4780

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %11 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4781
  %ops11 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %11, i32 0, i32 13, !dbg !4782
  %12 = load %struct.dw_edma_core_ops*, %struct.dw_edma_core_ops** %ops11, align 8, !dbg !4782
  %irq_vector = getelementptr inbounds %struct.dw_edma_core_ops, %struct.dw_edma_core_ops* %12, i32 0, i32 0, !dbg !4783
  %13 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %irq_vector, align 8, !dbg !4783
  %tobool12 = icmp ne i32 (%struct.device*, i32)* %13, null, !dbg !4781
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !4784

if.then13:                                        ; preds = %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false, %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !4785
  br label %return, !dbg !4785

if.end14:                                         ; preds = %lor.lhs.false10
  br label %do.body, !dbg !4786

do.body:                                          ; preds = %if.end14
  %14 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4787
  %lock = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %14, i32 0, i32 14, !dbg !4787
  %15 = bitcast %struct.raw_spinlock* %lock to i8*, !dbg !4787
  %16 = bitcast %struct.raw_spinlock* %.compoundliteral to i8*, !dbg !4787
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 1 %16, i64 0, i1 false), !dbg !4787
  br label %do.end, !dbg !4787

do.end:                                           ; preds = %do.body
  %17 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4789
  %call = call zeroext i16 @dw_edma_v0_core_ch_count(%struct.dw_edma* %17, i32 0) #9, !dbg !4790
  %18 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4791
  %wr_ch_cnt = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %18, i32 0, i32 2, !dbg !4792
  store i16 %call, i16* %wr_ch_cnt, align 8, !dbg !4793
  %19 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4794
  %wr_ch_cnt15 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %19, i32 0, i32 2, !dbg !4796
  %20 = load i16, i16* %wr_ch_cnt15, align 8, !dbg !4796
  %tobool16 = icmp ne i16 %20, 0, !dbg !4794
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !4797

if.then17:                                        ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !4798
  br label %return, !dbg !4798

if.end18:                                         ; preds = %do.end
  %21 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4799
  %call19 = call zeroext i16 @dw_edma_v0_core_ch_count(%struct.dw_edma* %21, i32 1) #9, !dbg !4800
  %22 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4801
  %rd_ch_cnt = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %22, i32 0, i32 4, !dbg !4802
  store i16 %call19, i16* %rd_ch_cnt, align 8, !dbg !4803
  %23 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4804
  %rd_ch_cnt20 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %23, i32 0, i32 4, !dbg !4806
  %24 = load i16, i16* %rd_ch_cnt20, align 8, !dbg !4806
  %tobool21 = icmp ne i16 %24, 0, !dbg !4804
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !4807

if.then22:                                        ; preds = %if.end18
  store i32 -22, i32* %retval, align 4, !dbg !4808
  br label %return, !dbg !4808

if.end23:                                         ; preds = %if.end18
  %25 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4809
  %26 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4810
  %wr_ch_cnt24 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %26, i32 0, i32 2, !dbg !4811
  %27 = load i16, i16* %wr_ch_cnt24, align 8, !dbg !4811
  %conv = zext i16 %27 to i32, !dbg !4810
  %28 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4812
  %rd_ch_cnt25 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %28, i32 0, i32 4, !dbg !4813
  %29 = load i16, i16* %rd_ch_cnt25, align 8, !dbg !4813
  %conv26 = zext i16 %29 to i32, !dbg !4812
  %add = add i32 %conv, %conv26, !dbg !4814
  %conv27 = sext i32 %add to i64, !dbg !4810
  %call28 = call i8* @devm_kcalloc(%struct.device* %25, i64 %conv27, i64 360, i32 3264) #9, !dbg !4815
  %30 = bitcast i8* %call28 to %struct.dw_edma_chan*, !dbg !4815
  %31 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4816
  %chan = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %31, i32 0, i32 12, !dbg !4817
  store %struct.dw_edma_chan* %30, %struct.dw_edma_chan** %chan, align 8, !dbg !4818
  %32 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4819
  %chan29 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %32, i32 0, i32 12, !dbg !4821
  %33 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan29, align 8, !dbg !4821
  %tobool30 = icmp ne %struct.dw_edma_chan* %33, null, !dbg !4819
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !4822

if.then31:                                        ; preds = %if.end23
  store i32 -12, i32* %retval, align 4, !dbg !4823
  br label %return, !dbg !4823

if.end32:                                         ; preds = %if.end23
  %34 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4824
  %name = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %34, i32 0, i32 0, !dbg !4825
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %name, i64 0, i64 0, !dbg !4824
  %35 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !4826
  %id = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %35, i32 0, i32 1, !dbg !4827
  %36 = load i32, i32* %id, align 8, !dbg !4827
  %call33 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i32 %36) #9, !dbg !4828
  %37 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4829
  call void @dw_edma_v0_core_off(%struct.dw_edma* %37) #9, !dbg !4830
  %38 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !4831
  %call34 = call i32 @dw_edma_irq_request(%struct.dw_edma_chip* %38, i32* %wr_alloc, i32* %rd_alloc) #9, !dbg !4832
  store i32 %call34, i32* %err, align 4, !dbg !4833
  %39 = load i32, i32* %err, align 4, !dbg !4834
  %tobool35 = icmp ne i32 %39, 0, !dbg !4834
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !4836

if.then36:                                        ; preds = %if.end32
  %40 = load i32, i32* %err, align 4, !dbg !4837
  store i32 %40, i32* %retval, align 4, !dbg !4838
  br label %return, !dbg !4838

if.end37:                                         ; preds = %if.end32
  %41 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !4839
  %42 = load i32, i32* %wr_alloc, align 4, !dbg !4840
  %43 = load i32, i32* %rd_alloc, align 4, !dbg !4841
  %call38 = call i32 @dw_edma_channel_setup(%struct.dw_edma_chip* %41, i1 zeroext true, i32 %42, i32 %43) #9, !dbg !4842
  store i32 %call38, i32* %err, align 4, !dbg !4843
  %44 = load i32, i32* %err, align 4, !dbg !4844
  %tobool39 = icmp ne i32 %44, 0, !dbg !4844
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !4846

if.then40:                                        ; preds = %if.end37
  br label %err_irq_free, !dbg !4847

if.end41:                                         ; preds = %if.end37
  %45 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !4848
  %46 = load i32, i32* %wr_alloc, align 4, !dbg !4849
  %47 = load i32, i32* %rd_alloc, align 4, !dbg !4850
  %call42 = call i32 @dw_edma_channel_setup(%struct.dw_edma_chip* %45, i1 zeroext false, i32 %46, i32 %47) #9, !dbg !4851
  store i32 %call42, i32* %err, align 4, !dbg !4852
  %48 = load i32, i32* %err, align 4, !dbg !4853
  %tobool43 = icmp ne i32 %48, 0, !dbg !4853
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !4855

if.then44:                                        ; preds = %if.end41
  br label %err_irq_free, !dbg !4856

if.end45:                                         ; preds = %if.end41
  %49 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4857
  call void @pm_runtime_enable(%struct.device* %49) #9, !dbg !4858
  %50 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !4859
  call void @dw_edma_v0_core_debugfs_on(%struct.dw_edma_chip* %50) #9, !dbg !4860
  store i32 0, i32* %retval, align 4, !dbg !4861
  br label %return, !dbg !4861

err_irq_free:                                     ; preds = %if.then44, %if.then40
  call void @llvm.dbg.label(metadata !4862), !dbg !4863
  %51 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4864
  %nr_irqs = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %51, i32 0, i32 9, !dbg !4866
  %52 = load i32, i32* %nr_irqs, align 8, !dbg !4866
  %sub = sub i32 %52, 1, !dbg !4867
  store i32 %sub, i32* %i, align 4, !dbg !4868
  br label %for.cond, !dbg !4869

for.cond:                                         ; preds = %for.inc, %err_irq_free
  %53 = load i32, i32* %i, align 4, !dbg !4870
  %cmp = icmp sge i32 %53, 0, !dbg !4872
  br i1 %cmp, label %for.body, label %for.end, !dbg !4873

for.body:                                         ; preds = %for.cond
  %54 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4874
  %ops47 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %54, i32 0, i32 13, !dbg !4875
  %55 = load %struct.dw_edma_core_ops*, %struct.dw_edma_core_ops** %ops47, align 8, !dbg !4875
  %irq_vector48 = getelementptr inbounds %struct.dw_edma_core_ops, %struct.dw_edma_core_ops* %55, i32 0, i32 0, !dbg !4876
  %56 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %irq_vector48, align 8, !dbg !4876
  %57 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4877
  %58 = load i32, i32* %i, align 4, !dbg !4878
  %call49 = call i32 %56(%struct.device* %57, i32 %58) #9, !dbg !4874
  %59 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4879
  %irq50 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %59, i32 0, i32 8, !dbg !4880
  %60 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %irq50, align 8, !dbg !4880
  %61 = load i32, i32* %i, align 4, !dbg !4881
  %idxprom = sext i32 %61 to i64, !dbg !4879
  %arrayidx = getelementptr %struct.dw_edma_irq, %struct.dw_edma_irq* %60, i64 %idxprom, !dbg !4879
  %62 = bitcast %struct.dw_edma_irq* %arrayidx to i8*, !dbg !4882
  %call51 = call i8* @free_irq(i32 %call49, i8* %62) #9, !dbg !4883
  br label %for.inc, !dbg !4883

for.inc:                                          ; preds = %for.body
  %63 = load i32, i32* %i, align 4, !dbg !4884
  %dec = add i32 %63, -1, !dbg !4884
  store i32 %dec, i32* %i, align 4, !dbg !4884
  br label %for.cond, !dbg !4885, !llvm.loop !4886

for.end:                                          ; preds = %for.cond
  %64 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4888
  %nr_irqs52 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %64, i32 0, i32 9, !dbg !4889
  store i32 0, i32* %nr_irqs52, align 8, !dbg !4890
  %65 = load i32, i32* %err, align 4, !dbg !4891
  store i32 %65, i32* %retval, align 4, !dbg !4892
  br label %return, !dbg !4892

return:                                           ; preds = %for.end, %if.end45, %if.then36, %if.then31, %if.then22, %if.then17, %if.then13, %if.then3, %if.then
  %66 = load i32, i32* %retval, align 4, !dbg !4893
  ret i32 %66, !dbg !4893
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noredzone
declare dso_local zeroext i16 @dw_edma_v0_core_ch_count(%struct.dw_edma*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kcalloc(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !4894 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4897, metadata !DIExpression()), !dbg !4898
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !4899, metadata !DIExpression()), !dbg !4900
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4901, metadata !DIExpression()), !dbg !4902
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4903, metadata !DIExpression()), !dbg !4904
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4905
  %1 = load i64, i64* %n.addr, align 8, !dbg !4906
  %2 = load i64, i64* %size.addr, align 8, !dbg !4907
  %3 = load i32, i32* %flags.addr, align 4, !dbg !4908
  %or = or i32 %3, 256, !dbg !4909
  %call = call i8* @devm_kmalloc_array(%struct.device* %0, i64 %1, i64 %2, i32 %or) #9, !dbg !4910
  ret i8* %call, !dbg !4911
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @dw_edma_v0_core_off(%struct.dw_edma*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_edma_irq_request(%struct.dw_edma_chip* %chip, i32* %wr_alloc, i32* %rd_alloc) #0 !dbg !4912 {
entry:
  %retval = alloca i32, align 4
  %chip.addr = alloca %struct.dw_edma_chip*, align 8
  %wr_alloc.addr = alloca i32*, align 8
  %rd_alloc.addr = alloca i32*, align 8
  %dev = alloca %struct.device*, align 8
  %dw = alloca %struct.dw_edma*, align 8
  %wr_mask = alloca i32, align 4
  %rd_mask = alloca i32, align 4
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %ch_cnt = alloca i32, align 4
  %irq = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.dw_edma_chip* %chip, %struct.dw_edma_chip** %chip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chip** %chip.addr, metadata !4915, metadata !DIExpression()), !dbg !4916
  store i32* %wr_alloc, i32** %wr_alloc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %wr_alloc.addr, metadata !4917, metadata !DIExpression()), !dbg !4918
  store i32* %rd_alloc, i32** %rd_alloc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rd_alloc.addr, metadata !4919, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !4921, metadata !DIExpression()), !dbg !4922
  %0 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !4923
  %dev1 = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %0, i32 0, i32 0, !dbg !4924
  %1 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !4924
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !4922
  call void @llvm.dbg.declare(metadata %struct.dw_edma** %dw, metadata !4925, metadata !DIExpression()), !dbg !4926
  %2 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !4927
  %dw2 = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %2, i32 0, i32 3, !dbg !4928
  %3 = load %struct.dw_edma*, %struct.dw_edma** %dw2, align 8, !dbg !4928
  store %struct.dw_edma* %3, %struct.dw_edma** %dw, align 8, !dbg !4926
  call void @llvm.dbg.declare(metadata i32* %wr_mask, metadata !4929, metadata !DIExpression()), !dbg !4930
  store i32 1, i32* %wr_mask, align 4, !dbg !4930
  call void @llvm.dbg.declare(metadata i32* %rd_mask, metadata !4931, metadata !DIExpression()), !dbg !4932
  store i32 1, i32* %rd_mask, align 4, !dbg !4932
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4933, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4935, metadata !DIExpression()), !dbg !4936
  store i32 0, i32* %err, align 4, !dbg !4936
  call void @llvm.dbg.declare(metadata i32* %ch_cnt, metadata !4937, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !4939, metadata !DIExpression()), !dbg !4940
  %4 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4941
  %wr_ch_cnt = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %4, i32 0, i32 2, !dbg !4942
  %5 = load i16, i16* %wr_ch_cnt, align 8, !dbg !4942
  %conv = zext i16 %5 to i32, !dbg !4941
  %6 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4943
  %rd_ch_cnt = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %6, i32 0, i32 4, !dbg !4944
  %7 = load i16, i16* %rd_ch_cnt, align 8, !dbg !4944
  %conv3 = zext i16 %7 to i32, !dbg !4943
  %add = add i32 %conv, %conv3, !dbg !4945
  store i32 %add, i32* %ch_cnt, align 4, !dbg !4946
  %8 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4947
  %nr_irqs = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %8, i32 0, i32 9, !dbg !4949
  %9 = load i32, i32* %nr_irqs, align 8, !dbg !4949
  %cmp = icmp slt i32 %9, 1, !dbg !4950
  br i1 %cmp, label %if.then, label %if.end, !dbg !4951

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4952
  br label %return, !dbg !4952

if.end:                                           ; preds = %entry
  %10 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4953
  %nr_irqs5 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %10, i32 0, i32 9, !dbg !4955
  %11 = load i32, i32* %nr_irqs5, align 8, !dbg !4955
  %cmp6 = icmp eq i32 %11, 1, !dbg !4956
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !4957

if.then8:                                         ; preds = %if.end
  %12 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4958
  %ops = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %12, i32 0, i32 13, !dbg !4960
  %13 = load %struct.dw_edma_core_ops*, %struct.dw_edma_core_ops** %ops, align 8, !dbg !4960
  %irq_vector = getelementptr inbounds %struct.dw_edma_core_ops, %struct.dw_edma_core_ops* %13, i32 0, i32 0, !dbg !4961
  %14 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %irq_vector, align 8, !dbg !4961
  %15 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4962
  %call = call i32 %14(%struct.device* %15, i32 0) #9, !dbg !4958
  store i32 %call, i32* %irq, align 4, !dbg !4963
  %16 = load i32, i32* %irq, align 4, !dbg !4964
  %17 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4965
  %name = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %17, i32 0, i32 0, !dbg !4966
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %name, i64 0, i64 0, !dbg !4965
  %18 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4967
  %irq9 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %18, i32 0, i32 8, !dbg !4968
  %19 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %irq9, align 8, !dbg !4968
  %arrayidx = getelementptr %struct.dw_edma_irq, %struct.dw_edma_irq* %19, i64 0, !dbg !4967
  %20 = bitcast %struct.dw_edma_irq* %arrayidx to i8*, !dbg !4969
  %call10 = call i32 @request_irq(i32 %16, i32 (i32, i8*)* @dw_edma_interrupt_common, i64 128, i8* %arraydecay, i8* %20) #9, !dbg !4970
  store i32 %call10, i32* %err, align 4, !dbg !4971
  %21 = load i32, i32* %err, align 4, !dbg !4972
  %tobool = icmp ne i32 %21, 0, !dbg !4972
  br i1 %tobool, label %if.then11, label %if.end13, !dbg !4974

if.then11:                                        ; preds = %if.then8
  %22 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4975
  %nr_irqs12 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %22, i32 0, i32 9, !dbg !4977
  store i32 0, i32* %nr_irqs12, align 8, !dbg !4978
  %23 = load i32, i32* %err, align 4, !dbg !4979
  store i32 %23, i32* %retval, align 4, !dbg !4980
  br label %return, !dbg !4980

if.end13:                                         ; preds = %if.then8
  %24 = load i32, i32* %irq, align 4, !dbg !4981
  %call14 = call %struct.msi_desc* @irq_get_msi_desc(i32 %24) #9, !dbg !4983
  %tobool15 = icmp ne %struct.msi_desc* %call14, null, !dbg !4983
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !4984

if.then16:                                        ; preds = %if.end13
  %25 = load i32, i32* %irq, align 4, !dbg !4985
  %26 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4986
  %irq17 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %26, i32 0, i32 8, !dbg !4987
  %27 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %irq17, align 8, !dbg !4987
  %arrayidx18 = getelementptr %struct.dw_edma_irq, %struct.dw_edma_irq* %27, i64 0, !dbg !4986
  %msi = getelementptr inbounds %struct.dw_edma_irq, %struct.dw_edma_irq* %arrayidx18, i32 0, i32 0, !dbg !4988
  call void @get_cached_msi_msg(i32 %25, %struct.msi_msg* %msi) #9, !dbg !4989
  br label %if.end19, !dbg !4989

if.end19:                                         ; preds = %if.then16, %if.end13
  br label %if.end55, !dbg !4990

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !4991, metadata !DIExpression()), !dbg !4993
  %28 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !4994
  %nr_irqs20 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %28, i32 0, i32 9, !dbg !4995
  %29 = load i32, i32* %nr_irqs20, align 8, !dbg !4995
  store i32 %29, i32* %tmp, align 4, !dbg !4993
  br label %while.cond, !dbg !4996

while.cond:                                       ; preds = %while.body, %if.else
  %30 = load i32, i32* %tmp, align 4, !dbg !4997
  %tobool21 = icmp ne i32 %30, 0, !dbg !4997
  br i1 %tobool21, label %land.rhs, label %land.end, !dbg !4998

land.rhs:                                         ; preds = %while.cond
  %31 = load i32*, i32** %wr_alloc.addr, align 8, !dbg !4999
  %32 = load i32, i32* %31, align 4, !dbg !5000
  %33 = load i32*, i32** %rd_alloc.addr, align 8, !dbg !5001
  %34 = load i32, i32* %33, align 4, !dbg !5002
  %add22 = add i32 %32, %34, !dbg !5003
  %35 = load i32, i32* %ch_cnt, align 4, !dbg !5004
  %cmp23 = icmp ult i32 %add22, %35, !dbg !5005
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %36 = phi i1 [ false, %while.cond ], [ %cmp23, %land.rhs ], !dbg !5006
  br i1 %36, label %while.body, label %while.end, !dbg !4996

while.body:                                       ; preds = %land.end
  %37 = load i32*, i32** %wr_alloc.addr, align 8, !dbg !5007
  %38 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5009
  %wr_ch_cnt25 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %38, i32 0, i32 2, !dbg !5010
  %39 = load i16, i16* %wr_ch_cnt25, align 8, !dbg !5010
  call void @dw_edma_dec_irq_alloc(i32* %tmp, i32* %37, i16 zeroext %39) #9, !dbg !5011
  %40 = load i32*, i32** %rd_alloc.addr, align 8, !dbg !5012
  %41 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5013
  %rd_ch_cnt26 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %41, i32 0, i32 4, !dbg !5014
  %42 = load i16, i16* %rd_ch_cnt26, align 8, !dbg !5014
  call void @dw_edma_dec_irq_alloc(i32* %tmp, i32* %40, i16 zeroext %42) #9, !dbg !5015
  br label %while.cond, !dbg !4996, !llvm.loop !5016

while.end:                                        ; preds = %land.end
  %43 = load i32*, i32** %wr_alloc.addr, align 8, !dbg !5018
  %44 = load i32, i32* %43, align 4, !dbg !5019
  %45 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5020
  %wr_ch_cnt27 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %45, i32 0, i32 2, !dbg !5021
  %46 = load i16, i16* %wr_ch_cnt27, align 8, !dbg !5021
  call void @dw_edma_add_irq_mask(i32* %wr_mask, i32 %44, i16 zeroext %46) #9, !dbg !5022
  %47 = load i32*, i32** %rd_alloc.addr, align 8, !dbg !5023
  %48 = load i32, i32* %47, align 4, !dbg !5024
  %49 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5025
  %rd_ch_cnt28 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %49, i32 0, i32 4, !dbg !5026
  %50 = load i16, i16* %rd_ch_cnt28, align 8, !dbg !5026
  call void @dw_edma_add_irq_mask(i32* %rd_mask, i32 %48, i16 zeroext %50) #9, !dbg !5027
  store i32 0, i32* %i, align 4, !dbg !5028
  br label %for.cond, !dbg !5030

for.cond:                                         ; preds = %for.inc, %while.end
  %51 = load i32, i32* %i, align 4, !dbg !5031
  %52 = load i32*, i32** %wr_alloc.addr, align 8, !dbg !5033
  %53 = load i32, i32* %52, align 4, !dbg !5034
  %54 = load i32*, i32** %rd_alloc.addr, align 8, !dbg !5035
  %55 = load i32, i32* %54, align 4, !dbg !5036
  %add29 = add i32 %53, %55, !dbg !5037
  %cmp30 = icmp ult i32 %51, %add29, !dbg !5038
  br i1 %cmp30, label %for.body, label %for.end, !dbg !5039

for.body:                                         ; preds = %for.cond
  %56 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5040
  %ops32 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %56, i32 0, i32 13, !dbg !5042
  %57 = load %struct.dw_edma_core_ops*, %struct.dw_edma_core_ops** %ops32, align 8, !dbg !5042
  %irq_vector33 = getelementptr inbounds %struct.dw_edma_core_ops, %struct.dw_edma_core_ops* %57, i32 0, i32 0, !dbg !5043
  %58 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %irq_vector33, align 8, !dbg !5043
  %59 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5044
  %60 = load i32, i32* %i, align 4, !dbg !5045
  %call34 = call i32 %58(%struct.device* %59, i32 %60) #9, !dbg !5040
  store i32 %call34, i32* %irq, align 4, !dbg !5046
  %61 = load i32, i32* %irq, align 4, !dbg !5047
  %62 = load i32, i32* %i, align 4, !dbg !5048
  %63 = load i32*, i32** %wr_alloc.addr, align 8, !dbg !5049
  %64 = load i32, i32* %63, align 4, !dbg !5050
  %cmp35 = icmp ult i32 %62, %64, !dbg !5051
  %65 = zext i1 %cmp35 to i64, !dbg !5048
  %cond = select i1 %cmp35, i32 (i32, i8*)* @dw_edma_interrupt_write, i32 (i32, i8*)* @dw_edma_interrupt_read, !dbg !5048
  %66 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5052
  %name37 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %66, i32 0, i32 0, !dbg !5053
  %arraydecay38 = getelementptr inbounds [20 x i8], [20 x i8]* %name37, i64 0, i64 0, !dbg !5052
  %67 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5054
  %irq39 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %67, i32 0, i32 8, !dbg !5055
  %68 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %irq39, align 8, !dbg !5055
  %69 = load i32, i32* %i, align 4, !dbg !5056
  %idxprom = sext i32 %69 to i64, !dbg !5054
  %arrayidx40 = getelementptr %struct.dw_edma_irq, %struct.dw_edma_irq* %68, i64 %idxprom, !dbg !5054
  %70 = bitcast %struct.dw_edma_irq* %arrayidx40 to i8*, !dbg !5057
  %call41 = call i32 @request_irq(i32 %61, i32 (i32, i8*)* %cond, i64 128, i8* %arraydecay38, i8* %70) #9, !dbg !5058
  store i32 %call41, i32* %err, align 4, !dbg !5059
  %71 = load i32, i32* %err, align 4, !dbg !5060
  %tobool42 = icmp ne i32 %71, 0, !dbg !5060
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !5062

if.then43:                                        ; preds = %for.body
  %72 = load i32, i32* %i, align 4, !dbg !5063
  %73 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5065
  %nr_irqs44 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %73, i32 0, i32 9, !dbg !5066
  store i32 %72, i32* %nr_irqs44, align 8, !dbg !5067
  %74 = load i32, i32* %err, align 4, !dbg !5068
  store i32 %74, i32* %retval, align 4, !dbg !5069
  br label %return, !dbg !5069

if.end45:                                         ; preds = %for.body
  %75 = load i32, i32* %irq, align 4, !dbg !5070
  %call46 = call %struct.msi_desc* @irq_get_msi_desc(i32 %75) #9, !dbg !5072
  %tobool47 = icmp ne %struct.msi_desc* %call46, null, !dbg !5072
  br i1 %tobool47, label %if.then48, label %if.end53, !dbg !5073

if.then48:                                        ; preds = %if.end45
  %76 = load i32, i32* %irq, align 4, !dbg !5074
  %77 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5075
  %irq49 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %77, i32 0, i32 8, !dbg !5076
  %78 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %irq49, align 8, !dbg !5076
  %79 = load i32, i32* %i, align 4, !dbg !5077
  %idxprom50 = sext i32 %79 to i64, !dbg !5075
  %arrayidx51 = getelementptr %struct.dw_edma_irq, %struct.dw_edma_irq* %78, i64 %idxprom50, !dbg !5075
  %msi52 = getelementptr inbounds %struct.dw_edma_irq, %struct.dw_edma_irq* %arrayidx51, i32 0, i32 0, !dbg !5078
  call void @get_cached_msi_msg(i32 %76, %struct.msi_msg* %msi52) #9, !dbg !5079
  br label %if.end53, !dbg !5079

if.end53:                                         ; preds = %if.then48, %if.end45
  br label %for.inc, !dbg !5080

for.inc:                                          ; preds = %if.end53
  %80 = load i32, i32* %i, align 4, !dbg !5081
  %inc = add i32 %80, 1, !dbg !5081
  store i32 %inc, i32* %i, align 4, !dbg !5081
  br label %for.cond, !dbg !5082, !llvm.loop !5083

for.end:                                          ; preds = %for.cond
  %81 = load i32, i32* %i, align 4, !dbg !5085
  %82 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5086
  %nr_irqs54 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %82, i32 0, i32 9, !dbg !5087
  store i32 %81, i32* %nr_irqs54, align 8, !dbg !5088
  br label %if.end55

if.end55:                                         ; preds = %for.end, %if.end19
  %83 = load i32, i32* %err, align 4, !dbg !5089
  store i32 %83, i32* %retval, align 4, !dbg !5090
  br label %return, !dbg !5090

return:                                           ; preds = %if.end55, %if.then43, %if.then11, %if.then
  %84 = load i32, i32* %retval, align 4, !dbg !5091
  ret i32 %84, !dbg !5091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_edma_channel_setup(%struct.dw_edma_chip* %chip, i1 zeroext %write, i32 %wr_alloc, i32 %rd_alloc) #0 !dbg !5092 {
entry:
  %retval = alloca i32, align 4
  %chip.addr = alloca %struct.dw_edma_chip*, align 8
  %write.addr = alloca i8, align 1
  %wr_alloc.addr = alloca i32, align 4
  %rd_alloc.addr = alloca i32, align 4
  %dt_region = alloca %struct.dw_edma_region*, align 8
  %dev = alloca %struct.device*, align 8
  %dw = alloca %struct.dw_edma*, align 8
  %chan = alloca %struct.dw_edma_chan*, align 8
  %ll_chunk = alloca i64, align 8
  %dt_chunk = alloca i64, align 8
  %irq = alloca %struct.dw_edma_irq*, align 8
  %dma = alloca %struct.dma_device*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %cnt = alloca i32, align 4
  %ch_cnt = alloca i32, align 4
  %alloc = alloca i32, align 4
  %off_alloc = alloca i32, align 4
  %err = alloca i32, align 4
  %pos = alloca i32, align 4
  store %struct.dw_edma_chip* %chip, %struct.dw_edma_chip** %chip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chip** %chip.addr, metadata !5095, metadata !DIExpression()), !dbg !5096
  %frombool = zext i1 %write to i8
  store i8 %frombool, i8* %write.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %write.addr, metadata !5097, metadata !DIExpression()), !dbg !5098
  store i32 %wr_alloc, i32* %wr_alloc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wr_alloc.addr, metadata !5099, metadata !DIExpression()), !dbg !5100
  store i32 %rd_alloc, i32* %rd_alloc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rd_alloc.addr, metadata !5101, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.declare(metadata %struct.dw_edma_region** %dt_region, metadata !5103, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !5106, metadata !DIExpression()), !dbg !5107
  %0 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !5108
  %dev1 = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %0, i32 0, i32 0, !dbg !5109
  %1 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !5109
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !5107
  call void @llvm.dbg.declare(metadata %struct.dw_edma** %dw, metadata !5110, metadata !DIExpression()), !dbg !5111
  %2 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !5112
  %dw2 = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %2, i32 0, i32 3, !dbg !5113
  %3 = load %struct.dw_edma*, %struct.dw_edma** %dw2, align 8, !dbg !5113
  store %struct.dw_edma* %3, %struct.dw_edma** %dw, align 8, !dbg !5111
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !5114, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.declare(metadata i64* %ll_chunk, metadata !5116, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.declare(metadata i64* %dt_chunk, metadata !5118, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.declare(metadata %struct.dw_edma_irq** %irq, metadata !5120, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.declare(metadata %struct.dma_device** %dma, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5124, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5126, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !5128, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.declare(metadata i32* %ch_cnt, metadata !5130, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.declare(metadata i32* %alloc, metadata !5132, metadata !DIExpression()), !dbg !5133
  call void @llvm.dbg.declare(metadata i32* %off_alloc, metadata !5134, metadata !DIExpression()), !dbg !5135
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5136, metadata !DIExpression()), !dbg !5137
  store i32 0, i32* %err, align 4, !dbg !5137
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5138, metadata !DIExpression()), !dbg !5139
  %4 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5140
  %wr_ch_cnt = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %4, i32 0, i32 2, !dbg !5141
  %5 = load i16, i16* %wr_ch_cnt, align 8, !dbg !5141
  %conv = zext i16 %5 to i32, !dbg !5140
  %6 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5142
  %rd_ch_cnt = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %6, i32 0, i32 4, !dbg !5143
  %7 = load i16, i16* %rd_ch_cnt, align 8, !dbg !5143
  %conv3 = zext i16 %7 to i32, !dbg !5142
  %add = add i32 %conv, %conv3, !dbg !5144
  store i32 %add, i32* %ch_cnt, align 4, !dbg !5145
  %8 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5146
  %ll_region = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %8, i32 0, i32 6, !dbg !5147
  %sz = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %ll_region, i32 0, i32 2, !dbg !5148
  %9 = load i64, i64* %sz, align 8, !dbg !5148
  store i64 %9, i64* %ll_chunk, align 8, !dbg !5149
  %10 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5150
  %dt_region4 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %10, i32 0, i32 7, !dbg !5151
  %sz5 = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %dt_region4, i32 0, i32 2, !dbg !5152
  %11 = load i64, i64* %sz5, align 8, !dbg !5152
  store i64 %11, i64* %dt_chunk, align 8, !dbg !5153
  %12 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %13 = call i1 @llvm.is.constant.i32(i32 %12), !dbg !5154
  br i1 %13, label %cond.true, label %cond.false517, !dbg !5154

cond.true:                                        ; preds = %entry
  %14 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %cmp = icmp eq i32 %14, 1, !dbg !5154
  br i1 %cmp, label %cond.true7, label %cond.false, !dbg !5154

cond.true7:                                       ; preds = %cond.true
  br label %cond.end515, !dbg !5154

cond.false:                                       ; preds = %cond.true
  %15 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub = sub i32 %15, 1, !dbg !5154
  %16 = call i1 @llvm.is.constant.i32(i32 %sub), !dbg !5154
  br i1 %16, label %cond.true8, label %cond.false510, !dbg !5154

cond.true8:                                       ; preds = %cond.false
  %17 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub9 = sub i32 %17, 1, !dbg !5154
  %18 = call i1 @llvm.is.constant.i32(i32 %sub9), !dbg !5154
  br i1 %18, label %cond.true10, label %cond.false507, !dbg !5154

cond.true10:                                      ; preds = %cond.true8
  %19 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub11 = sub i32 %19, 1, !dbg !5154
  %cmp12 = icmp ult i32 %sub11, 2, !dbg !5154
  br i1 %cmp12, label %cond.true14, label %cond.false15, !dbg !5154

cond.true14:                                      ; preds = %cond.true10
  br label %cond.end505, !dbg !5154

cond.false15:                                     ; preds = %cond.true10
  %20 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub16 = sub i32 %20, 1, !dbg !5154
  %conv17 = zext i32 %sub16 to i64, !dbg !5154
  %and = and i64 %conv17, -9223372036854775808, !dbg !5154
  %tobool = icmp ne i64 %and, 0, !dbg !5154
  br i1 %tobool, label %cond.true18, label %cond.false19, !dbg !5154

cond.true18:                                      ; preds = %cond.false15
  br label %cond.end503, !dbg !5154

cond.false19:                                     ; preds = %cond.false15
  %21 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub20 = sub i32 %21, 1, !dbg !5154
  %conv21 = zext i32 %sub20 to i64, !dbg !5154
  %and22 = and i64 %conv21, 4611686018427387904, !dbg !5154
  %tobool23 = icmp ne i64 %and22, 0, !dbg !5154
  br i1 %tobool23, label %cond.true24, label %cond.false25, !dbg !5154

cond.true24:                                      ; preds = %cond.false19
  br label %cond.end501, !dbg !5154

cond.false25:                                     ; preds = %cond.false19
  %22 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub26 = sub i32 %22, 1, !dbg !5154
  %conv27 = zext i32 %sub26 to i64, !dbg !5154
  %and28 = and i64 %conv27, 2305843009213693952, !dbg !5154
  %tobool29 = icmp ne i64 %and28, 0, !dbg !5154
  br i1 %tobool29, label %cond.true30, label %cond.false31, !dbg !5154

cond.true30:                                      ; preds = %cond.false25
  br label %cond.end499, !dbg !5154

cond.false31:                                     ; preds = %cond.false25
  %23 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub32 = sub i32 %23, 1, !dbg !5154
  %conv33 = zext i32 %sub32 to i64, !dbg !5154
  %and34 = and i64 %conv33, 1152921504606846976, !dbg !5154
  %tobool35 = icmp ne i64 %and34, 0, !dbg !5154
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !5154

cond.true36:                                      ; preds = %cond.false31
  br label %cond.end497, !dbg !5154

cond.false37:                                     ; preds = %cond.false31
  %24 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub38 = sub i32 %24, 1, !dbg !5154
  %conv39 = zext i32 %sub38 to i64, !dbg !5154
  %and40 = and i64 %conv39, 576460752303423488, !dbg !5154
  %tobool41 = icmp ne i64 %and40, 0, !dbg !5154
  br i1 %tobool41, label %cond.true42, label %cond.false43, !dbg !5154

cond.true42:                                      ; preds = %cond.false37
  br label %cond.end495, !dbg !5154

cond.false43:                                     ; preds = %cond.false37
  %25 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub44 = sub i32 %25, 1, !dbg !5154
  %conv45 = zext i32 %sub44 to i64, !dbg !5154
  %and46 = and i64 %conv45, 288230376151711744, !dbg !5154
  %tobool47 = icmp ne i64 %and46, 0, !dbg !5154
  br i1 %tobool47, label %cond.true48, label %cond.false49, !dbg !5154

cond.true48:                                      ; preds = %cond.false43
  br label %cond.end493, !dbg !5154

cond.false49:                                     ; preds = %cond.false43
  %26 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub50 = sub i32 %26, 1, !dbg !5154
  %conv51 = zext i32 %sub50 to i64, !dbg !5154
  %and52 = and i64 %conv51, 144115188075855872, !dbg !5154
  %tobool53 = icmp ne i64 %and52, 0, !dbg !5154
  br i1 %tobool53, label %cond.true54, label %cond.false55, !dbg !5154

cond.true54:                                      ; preds = %cond.false49
  br label %cond.end491, !dbg !5154

cond.false55:                                     ; preds = %cond.false49
  %27 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub56 = sub i32 %27, 1, !dbg !5154
  %conv57 = zext i32 %sub56 to i64, !dbg !5154
  %and58 = and i64 %conv57, 72057594037927936, !dbg !5154
  %tobool59 = icmp ne i64 %and58, 0, !dbg !5154
  br i1 %tobool59, label %cond.true60, label %cond.false61, !dbg !5154

cond.true60:                                      ; preds = %cond.false55
  br label %cond.end489, !dbg !5154

cond.false61:                                     ; preds = %cond.false55
  %28 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub62 = sub i32 %28, 1, !dbg !5154
  %conv63 = zext i32 %sub62 to i64, !dbg !5154
  %and64 = and i64 %conv63, 36028797018963968, !dbg !5154
  %tobool65 = icmp ne i64 %and64, 0, !dbg !5154
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !5154

cond.true66:                                      ; preds = %cond.false61
  br label %cond.end487, !dbg !5154

cond.false67:                                     ; preds = %cond.false61
  %29 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub68 = sub i32 %29, 1, !dbg !5154
  %conv69 = zext i32 %sub68 to i64, !dbg !5154
  %and70 = and i64 %conv69, 18014398509481984, !dbg !5154
  %tobool71 = icmp ne i64 %and70, 0, !dbg !5154
  br i1 %tobool71, label %cond.true72, label %cond.false73, !dbg !5154

cond.true72:                                      ; preds = %cond.false67
  br label %cond.end485, !dbg !5154

cond.false73:                                     ; preds = %cond.false67
  %30 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub74 = sub i32 %30, 1, !dbg !5154
  %conv75 = zext i32 %sub74 to i64, !dbg !5154
  %and76 = and i64 %conv75, 9007199254740992, !dbg !5154
  %tobool77 = icmp ne i64 %and76, 0, !dbg !5154
  br i1 %tobool77, label %cond.true78, label %cond.false79, !dbg !5154

cond.true78:                                      ; preds = %cond.false73
  br label %cond.end483, !dbg !5154

cond.false79:                                     ; preds = %cond.false73
  %31 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub80 = sub i32 %31, 1, !dbg !5154
  %conv81 = zext i32 %sub80 to i64, !dbg !5154
  %and82 = and i64 %conv81, 4503599627370496, !dbg !5154
  %tobool83 = icmp ne i64 %and82, 0, !dbg !5154
  br i1 %tobool83, label %cond.true84, label %cond.false85, !dbg !5154

cond.true84:                                      ; preds = %cond.false79
  br label %cond.end481, !dbg !5154

cond.false85:                                     ; preds = %cond.false79
  %32 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub86 = sub i32 %32, 1, !dbg !5154
  %conv87 = zext i32 %sub86 to i64, !dbg !5154
  %and88 = and i64 %conv87, 2251799813685248, !dbg !5154
  %tobool89 = icmp ne i64 %and88, 0, !dbg !5154
  br i1 %tobool89, label %cond.true90, label %cond.false91, !dbg !5154

cond.true90:                                      ; preds = %cond.false85
  br label %cond.end479, !dbg !5154

cond.false91:                                     ; preds = %cond.false85
  %33 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub92 = sub i32 %33, 1, !dbg !5154
  %conv93 = zext i32 %sub92 to i64, !dbg !5154
  %and94 = and i64 %conv93, 1125899906842624, !dbg !5154
  %tobool95 = icmp ne i64 %and94, 0, !dbg !5154
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !5154

cond.true96:                                      ; preds = %cond.false91
  br label %cond.end477, !dbg !5154

cond.false97:                                     ; preds = %cond.false91
  %34 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub98 = sub i32 %34, 1, !dbg !5154
  %conv99 = zext i32 %sub98 to i64, !dbg !5154
  %and100 = and i64 %conv99, 562949953421312, !dbg !5154
  %tobool101 = icmp ne i64 %and100, 0, !dbg !5154
  br i1 %tobool101, label %cond.true102, label %cond.false103, !dbg !5154

cond.true102:                                     ; preds = %cond.false97
  br label %cond.end475, !dbg !5154

cond.false103:                                    ; preds = %cond.false97
  %35 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub104 = sub i32 %35, 1, !dbg !5154
  %conv105 = zext i32 %sub104 to i64, !dbg !5154
  %and106 = and i64 %conv105, 281474976710656, !dbg !5154
  %tobool107 = icmp ne i64 %and106, 0, !dbg !5154
  br i1 %tobool107, label %cond.true108, label %cond.false109, !dbg !5154

cond.true108:                                     ; preds = %cond.false103
  br label %cond.end473, !dbg !5154

cond.false109:                                    ; preds = %cond.false103
  %36 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub110 = sub i32 %36, 1, !dbg !5154
  %conv111 = zext i32 %sub110 to i64, !dbg !5154
  %and112 = and i64 %conv111, 140737488355328, !dbg !5154
  %tobool113 = icmp ne i64 %and112, 0, !dbg !5154
  br i1 %tobool113, label %cond.true114, label %cond.false115, !dbg !5154

cond.true114:                                     ; preds = %cond.false109
  br label %cond.end471, !dbg !5154

cond.false115:                                    ; preds = %cond.false109
  %37 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub116 = sub i32 %37, 1, !dbg !5154
  %conv117 = zext i32 %sub116 to i64, !dbg !5154
  %and118 = and i64 %conv117, 70368744177664, !dbg !5154
  %tobool119 = icmp ne i64 %and118, 0, !dbg !5154
  br i1 %tobool119, label %cond.true120, label %cond.false121, !dbg !5154

cond.true120:                                     ; preds = %cond.false115
  br label %cond.end469, !dbg !5154

cond.false121:                                    ; preds = %cond.false115
  %38 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub122 = sub i32 %38, 1, !dbg !5154
  %conv123 = zext i32 %sub122 to i64, !dbg !5154
  %and124 = and i64 %conv123, 35184372088832, !dbg !5154
  %tobool125 = icmp ne i64 %and124, 0, !dbg !5154
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !5154

cond.true126:                                     ; preds = %cond.false121
  br label %cond.end467, !dbg !5154

cond.false127:                                    ; preds = %cond.false121
  %39 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub128 = sub i32 %39, 1, !dbg !5154
  %conv129 = zext i32 %sub128 to i64, !dbg !5154
  %and130 = and i64 %conv129, 17592186044416, !dbg !5154
  %tobool131 = icmp ne i64 %and130, 0, !dbg !5154
  br i1 %tobool131, label %cond.true132, label %cond.false133, !dbg !5154

cond.true132:                                     ; preds = %cond.false127
  br label %cond.end465, !dbg !5154

cond.false133:                                    ; preds = %cond.false127
  %40 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub134 = sub i32 %40, 1, !dbg !5154
  %conv135 = zext i32 %sub134 to i64, !dbg !5154
  %and136 = and i64 %conv135, 8796093022208, !dbg !5154
  %tobool137 = icmp ne i64 %and136, 0, !dbg !5154
  br i1 %tobool137, label %cond.true138, label %cond.false139, !dbg !5154

cond.true138:                                     ; preds = %cond.false133
  br label %cond.end463, !dbg !5154

cond.false139:                                    ; preds = %cond.false133
  %41 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub140 = sub i32 %41, 1, !dbg !5154
  %conv141 = zext i32 %sub140 to i64, !dbg !5154
  %and142 = and i64 %conv141, 4398046511104, !dbg !5154
  %tobool143 = icmp ne i64 %and142, 0, !dbg !5154
  br i1 %tobool143, label %cond.true144, label %cond.false145, !dbg !5154

cond.true144:                                     ; preds = %cond.false139
  br label %cond.end461, !dbg !5154

cond.false145:                                    ; preds = %cond.false139
  %42 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub146 = sub i32 %42, 1, !dbg !5154
  %conv147 = zext i32 %sub146 to i64, !dbg !5154
  %and148 = and i64 %conv147, 2199023255552, !dbg !5154
  %tobool149 = icmp ne i64 %and148, 0, !dbg !5154
  br i1 %tobool149, label %cond.true150, label %cond.false151, !dbg !5154

cond.true150:                                     ; preds = %cond.false145
  br label %cond.end459, !dbg !5154

cond.false151:                                    ; preds = %cond.false145
  %43 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub152 = sub i32 %43, 1, !dbg !5154
  %conv153 = zext i32 %sub152 to i64, !dbg !5154
  %and154 = and i64 %conv153, 1099511627776, !dbg !5154
  %tobool155 = icmp ne i64 %and154, 0, !dbg !5154
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !5154

cond.true156:                                     ; preds = %cond.false151
  br label %cond.end457, !dbg !5154

cond.false157:                                    ; preds = %cond.false151
  %44 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub158 = sub i32 %44, 1, !dbg !5154
  %conv159 = zext i32 %sub158 to i64, !dbg !5154
  %and160 = and i64 %conv159, 549755813888, !dbg !5154
  %tobool161 = icmp ne i64 %and160, 0, !dbg !5154
  br i1 %tobool161, label %cond.true162, label %cond.false163, !dbg !5154

cond.true162:                                     ; preds = %cond.false157
  br label %cond.end455, !dbg !5154

cond.false163:                                    ; preds = %cond.false157
  %45 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub164 = sub i32 %45, 1, !dbg !5154
  %conv165 = zext i32 %sub164 to i64, !dbg !5154
  %and166 = and i64 %conv165, 274877906944, !dbg !5154
  %tobool167 = icmp ne i64 %and166, 0, !dbg !5154
  br i1 %tobool167, label %cond.true168, label %cond.false169, !dbg !5154

cond.true168:                                     ; preds = %cond.false163
  br label %cond.end453, !dbg !5154

cond.false169:                                    ; preds = %cond.false163
  %46 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub170 = sub i32 %46, 1, !dbg !5154
  %conv171 = zext i32 %sub170 to i64, !dbg !5154
  %and172 = and i64 %conv171, 137438953472, !dbg !5154
  %tobool173 = icmp ne i64 %and172, 0, !dbg !5154
  br i1 %tobool173, label %cond.true174, label %cond.false175, !dbg !5154

cond.true174:                                     ; preds = %cond.false169
  br label %cond.end451, !dbg !5154

cond.false175:                                    ; preds = %cond.false169
  %47 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub176 = sub i32 %47, 1, !dbg !5154
  %conv177 = zext i32 %sub176 to i64, !dbg !5154
  %and178 = and i64 %conv177, 68719476736, !dbg !5154
  %tobool179 = icmp ne i64 %and178, 0, !dbg !5154
  br i1 %tobool179, label %cond.true180, label %cond.false181, !dbg !5154

cond.true180:                                     ; preds = %cond.false175
  br label %cond.end449, !dbg !5154

cond.false181:                                    ; preds = %cond.false175
  %48 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub182 = sub i32 %48, 1, !dbg !5154
  %conv183 = zext i32 %sub182 to i64, !dbg !5154
  %and184 = and i64 %conv183, 34359738368, !dbg !5154
  %tobool185 = icmp ne i64 %and184, 0, !dbg !5154
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !5154

cond.true186:                                     ; preds = %cond.false181
  br label %cond.end447, !dbg !5154

cond.false187:                                    ; preds = %cond.false181
  %49 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub188 = sub i32 %49, 1, !dbg !5154
  %conv189 = zext i32 %sub188 to i64, !dbg !5154
  %and190 = and i64 %conv189, 17179869184, !dbg !5154
  %tobool191 = icmp ne i64 %and190, 0, !dbg !5154
  br i1 %tobool191, label %cond.true192, label %cond.false193, !dbg !5154

cond.true192:                                     ; preds = %cond.false187
  br label %cond.end445, !dbg !5154

cond.false193:                                    ; preds = %cond.false187
  %50 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub194 = sub i32 %50, 1, !dbg !5154
  %conv195 = zext i32 %sub194 to i64, !dbg !5154
  %and196 = and i64 %conv195, 8589934592, !dbg !5154
  %tobool197 = icmp ne i64 %and196, 0, !dbg !5154
  br i1 %tobool197, label %cond.true198, label %cond.false199, !dbg !5154

cond.true198:                                     ; preds = %cond.false193
  br label %cond.end443, !dbg !5154

cond.false199:                                    ; preds = %cond.false193
  %51 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub200 = sub i32 %51, 1, !dbg !5154
  %conv201 = zext i32 %sub200 to i64, !dbg !5154
  %and202 = and i64 %conv201, 4294967296, !dbg !5154
  %tobool203 = icmp ne i64 %and202, 0, !dbg !5154
  br i1 %tobool203, label %cond.true204, label %cond.false205, !dbg !5154

cond.true204:                                     ; preds = %cond.false199
  br label %cond.end441, !dbg !5154

cond.false205:                                    ; preds = %cond.false199
  %52 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub206 = sub i32 %52, 1, !dbg !5154
  %conv207 = zext i32 %sub206 to i64, !dbg !5154
  %and208 = and i64 %conv207, 2147483648, !dbg !5154
  %tobool209 = icmp ne i64 %and208, 0, !dbg !5154
  br i1 %tobool209, label %cond.true210, label %cond.false211, !dbg !5154

cond.true210:                                     ; preds = %cond.false205
  br label %cond.end439, !dbg !5154

cond.false211:                                    ; preds = %cond.false205
  %53 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub212 = sub i32 %53, 1, !dbg !5154
  %conv213 = zext i32 %sub212 to i64, !dbg !5154
  %and214 = and i64 %conv213, 1073741824, !dbg !5154
  %tobool215 = icmp ne i64 %and214, 0, !dbg !5154
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !5154

cond.true216:                                     ; preds = %cond.false211
  br label %cond.end437, !dbg !5154

cond.false217:                                    ; preds = %cond.false211
  %54 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub218 = sub i32 %54, 1, !dbg !5154
  %conv219 = zext i32 %sub218 to i64, !dbg !5154
  %and220 = and i64 %conv219, 536870912, !dbg !5154
  %tobool221 = icmp ne i64 %and220, 0, !dbg !5154
  br i1 %tobool221, label %cond.true222, label %cond.false223, !dbg !5154

cond.true222:                                     ; preds = %cond.false217
  br label %cond.end435, !dbg !5154

cond.false223:                                    ; preds = %cond.false217
  %55 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub224 = sub i32 %55, 1, !dbg !5154
  %conv225 = zext i32 %sub224 to i64, !dbg !5154
  %and226 = and i64 %conv225, 268435456, !dbg !5154
  %tobool227 = icmp ne i64 %and226, 0, !dbg !5154
  br i1 %tobool227, label %cond.true228, label %cond.false229, !dbg !5154

cond.true228:                                     ; preds = %cond.false223
  br label %cond.end433, !dbg !5154

cond.false229:                                    ; preds = %cond.false223
  %56 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub230 = sub i32 %56, 1, !dbg !5154
  %conv231 = zext i32 %sub230 to i64, !dbg !5154
  %and232 = and i64 %conv231, 134217728, !dbg !5154
  %tobool233 = icmp ne i64 %and232, 0, !dbg !5154
  br i1 %tobool233, label %cond.true234, label %cond.false235, !dbg !5154

cond.true234:                                     ; preds = %cond.false229
  br label %cond.end431, !dbg !5154

cond.false235:                                    ; preds = %cond.false229
  %57 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub236 = sub i32 %57, 1, !dbg !5154
  %conv237 = zext i32 %sub236 to i64, !dbg !5154
  %and238 = and i64 %conv237, 67108864, !dbg !5154
  %tobool239 = icmp ne i64 %and238, 0, !dbg !5154
  br i1 %tobool239, label %cond.true240, label %cond.false241, !dbg !5154

cond.true240:                                     ; preds = %cond.false235
  br label %cond.end429, !dbg !5154

cond.false241:                                    ; preds = %cond.false235
  %58 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub242 = sub i32 %58, 1, !dbg !5154
  %conv243 = zext i32 %sub242 to i64, !dbg !5154
  %and244 = and i64 %conv243, 33554432, !dbg !5154
  %tobool245 = icmp ne i64 %and244, 0, !dbg !5154
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !5154

cond.true246:                                     ; preds = %cond.false241
  br label %cond.end427, !dbg !5154

cond.false247:                                    ; preds = %cond.false241
  %59 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub248 = sub i32 %59, 1, !dbg !5154
  %conv249 = zext i32 %sub248 to i64, !dbg !5154
  %and250 = and i64 %conv249, 16777216, !dbg !5154
  %tobool251 = icmp ne i64 %and250, 0, !dbg !5154
  br i1 %tobool251, label %cond.true252, label %cond.false253, !dbg !5154

cond.true252:                                     ; preds = %cond.false247
  br label %cond.end425, !dbg !5154

cond.false253:                                    ; preds = %cond.false247
  %60 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub254 = sub i32 %60, 1, !dbg !5154
  %conv255 = zext i32 %sub254 to i64, !dbg !5154
  %and256 = and i64 %conv255, 8388608, !dbg !5154
  %tobool257 = icmp ne i64 %and256, 0, !dbg !5154
  br i1 %tobool257, label %cond.true258, label %cond.false259, !dbg !5154

cond.true258:                                     ; preds = %cond.false253
  br label %cond.end423, !dbg !5154

cond.false259:                                    ; preds = %cond.false253
  %61 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub260 = sub i32 %61, 1, !dbg !5154
  %conv261 = zext i32 %sub260 to i64, !dbg !5154
  %and262 = and i64 %conv261, 4194304, !dbg !5154
  %tobool263 = icmp ne i64 %and262, 0, !dbg !5154
  br i1 %tobool263, label %cond.true264, label %cond.false265, !dbg !5154

cond.true264:                                     ; preds = %cond.false259
  br label %cond.end421, !dbg !5154

cond.false265:                                    ; preds = %cond.false259
  %62 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub266 = sub i32 %62, 1, !dbg !5154
  %conv267 = zext i32 %sub266 to i64, !dbg !5154
  %and268 = and i64 %conv267, 2097152, !dbg !5154
  %tobool269 = icmp ne i64 %and268, 0, !dbg !5154
  br i1 %tobool269, label %cond.true270, label %cond.false271, !dbg !5154

cond.true270:                                     ; preds = %cond.false265
  br label %cond.end419, !dbg !5154

cond.false271:                                    ; preds = %cond.false265
  %63 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub272 = sub i32 %63, 1, !dbg !5154
  %conv273 = zext i32 %sub272 to i64, !dbg !5154
  %and274 = and i64 %conv273, 1048576, !dbg !5154
  %tobool275 = icmp ne i64 %and274, 0, !dbg !5154
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !5154

cond.true276:                                     ; preds = %cond.false271
  br label %cond.end417, !dbg !5154

cond.false277:                                    ; preds = %cond.false271
  %64 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub278 = sub i32 %64, 1, !dbg !5154
  %conv279 = zext i32 %sub278 to i64, !dbg !5154
  %and280 = and i64 %conv279, 524288, !dbg !5154
  %tobool281 = icmp ne i64 %and280, 0, !dbg !5154
  br i1 %tobool281, label %cond.true282, label %cond.false283, !dbg !5154

cond.true282:                                     ; preds = %cond.false277
  br label %cond.end415, !dbg !5154

cond.false283:                                    ; preds = %cond.false277
  %65 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub284 = sub i32 %65, 1, !dbg !5154
  %conv285 = zext i32 %sub284 to i64, !dbg !5154
  %and286 = and i64 %conv285, 262144, !dbg !5154
  %tobool287 = icmp ne i64 %and286, 0, !dbg !5154
  br i1 %tobool287, label %cond.true288, label %cond.false289, !dbg !5154

cond.true288:                                     ; preds = %cond.false283
  br label %cond.end413, !dbg !5154

cond.false289:                                    ; preds = %cond.false283
  %66 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub290 = sub i32 %66, 1, !dbg !5154
  %conv291 = zext i32 %sub290 to i64, !dbg !5154
  %and292 = and i64 %conv291, 131072, !dbg !5154
  %tobool293 = icmp ne i64 %and292, 0, !dbg !5154
  br i1 %tobool293, label %cond.true294, label %cond.false295, !dbg !5154

cond.true294:                                     ; preds = %cond.false289
  br label %cond.end411, !dbg !5154

cond.false295:                                    ; preds = %cond.false289
  %67 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub296 = sub i32 %67, 1, !dbg !5154
  %conv297 = zext i32 %sub296 to i64, !dbg !5154
  %and298 = and i64 %conv297, 65536, !dbg !5154
  %tobool299 = icmp ne i64 %and298, 0, !dbg !5154
  br i1 %tobool299, label %cond.true300, label %cond.false301, !dbg !5154

cond.true300:                                     ; preds = %cond.false295
  br label %cond.end409, !dbg !5154

cond.false301:                                    ; preds = %cond.false295
  %68 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub302 = sub i32 %68, 1, !dbg !5154
  %conv303 = zext i32 %sub302 to i64, !dbg !5154
  %and304 = and i64 %conv303, 32768, !dbg !5154
  %tobool305 = icmp ne i64 %and304, 0, !dbg !5154
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !5154

cond.true306:                                     ; preds = %cond.false301
  br label %cond.end407, !dbg !5154

cond.false307:                                    ; preds = %cond.false301
  %69 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub308 = sub i32 %69, 1, !dbg !5154
  %conv309 = zext i32 %sub308 to i64, !dbg !5154
  %and310 = and i64 %conv309, 16384, !dbg !5154
  %tobool311 = icmp ne i64 %and310, 0, !dbg !5154
  br i1 %tobool311, label %cond.true312, label %cond.false313, !dbg !5154

cond.true312:                                     ; preds = %cond.false307
  br label %cond.end405, !dbg !5154

cond.false313:                                    ; preds = %cond.false307
  %70 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub314 = sub i32 %70, 1, !dbg !5154
  %conv315 = zext i32 %sub314 to i64, !dbg !5154
  %and316 = and i64 %conv315, 8192, !dbg !5154
  %tobool317 = icmp ne i64 %and316, 0, !dbg !5154
  br i1 %tobool317, label %cond.true318, label %cond.false319, !dbg !5154

cond.true318:                                     ; preds = %cond.false313
  br label %cond.end403, !dbg !5154

cond.false319:                                    ; preds = %cond.false313
  %71 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub320 = sub i32 %71, 1, !dbg !5154
  %conv321 = zext i32 %sub320 to i64, !dbg !5154
  %and322 = and i64 %conv321, 4096, !dbg !5154
  %tobool323 = icmp ne i64 %and322, 0, !dbg !5154
  br i1 %tobool323, label %cond.true324, label %cond.false325, !dbg !5154

cond.true324:                                     ; preds = %cond.false319
  br label %cond.end401, !dbg !5154

cond.false325:                                    ; preds = %cond.false319
  %72 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub326 = sub i32 %72, 1, !dbg !5154
  %conv327 = zext i32 %sub326 to i64, !dbg !5154
  %and328 = and i64 %conv327, 2048, !dbg !5154
  %tobool329 = icmp ne i64 %and328, 0, !dbg !5154
  br i1 %tobool329, label %cond.true330, label %cond.false331, !dbg !5154

cond.true330:                                     ; preds = %cond.false325
  br label %cond.end399, !dbg !5154

cond.false331:                                    ; preds = %cond.false325
  %73 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub332 = sub i32 %73, 1, !dbg !5154
  %conv333 = zext i32 %sub332 to i64, !dbg !5154
  %and334 = and i64 %conv333, 1024, !dbg !5154
  %tobool335 = icmp ne i64 %and334, 0, !dbg !5154
  br i1 %tobool335, label %cond.true336, label %cond.false337, !dbg !5154

cond.true336:                                     ; preds = %cond.false331
  br label %cond.end397, !dbg !5154

cond.false337:                                    ; preds = %cond.false331
  %74 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub338 = sub i32 %74, 1, !dbg !5154
  %conv339 = zext i32 %sub338 to i64, !dbg !5154
  %and340 = and i64 %conv339, 512, !dbg !5154
  %tobool341 = icmp ne i64 %and340, 0, !dbg !5154
  br i1 %tobool341, label %cond.true342, label %cond.false343, !dbg !5154

cond.true342:                                     ; preds = %cond.false337
  br label %cond.end395, !dbg !5154

cond.false343:                                    ; preds = %cond.false337
  %75 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub344 = sub i32 %75, 1, !dbg !5154
  %conv345 = zext i32 %sub344 to i64, !dbg !5154
  %and346 = and i64 %conv345, 256, !dbg !5154
  %tobool347 = icmp ne i64 %and346, 0, !dbg !5154
  br i1 %tobool347, label %cond.true348, label %cond.false349, !dbg !5154

cond.true348:                                     ; preds = %cond.false343
  br label %cond.end393, !dbg !5154

cond.false349:                                    ; preds = %cond.false343
  %76 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub350 = sub i32 %76, 1, !dbg !5154
  %conv351 = zext i32 %sub350 to i64, !dbg !5154
  %and352 = and i64 %conv351, 128, !dbg !5154
  %tobool353 = icmp ne i64 %and352, 0, !dbg !5154
  br i1 %tobool353, label %cond.true354, label %cond.false355, !dbg !5154

cond.true354:                                     ; preds = %cond.false349
  br label %cond.end391, !dbg !5154

cond.false355:                                    ; preds = %cond.false349
  %77 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub356 = sub i32 %77, 1, !dbg !5154
  %conv357 = zext i32 %sub356 to i64, !dbg !5154
  %and358 = and i64 %conv357, 64, !dbg !5154
  %tobool359 = icmp ne i64 %and358, 0, !dbg !5154
  br i1 %tobool359, label %cond.true360, label %cond.false361, !dbg !5154

cond.true360:                                     ; preds = %cond.false355
  br label %cond.end389, !dbg !5154

cond.false361:                                    ; preds = %cond.false355
  %78 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub362 = sub i32 %78, 1, !dbg !5154
  %conv363 = zext i32 %sub362 to i64, !dbg !5154
  %and364 = and i64 %conv363, 32, !dbg !5154
  %tobool365 = icmp ne i64 %and364, 0, !dbg !5154
  br i1 %tobool365, label %cond.true366, label %cond.false367, !dbg !5154

cond.true366:                                     ; preds = %cond.false361
  br label %cond.end387, !dbg !5154

cond.false367:                                    ; preds = %cond.false361
  %79 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub368 = sub i32 %79, 1, !dbg !5154
  %conv369 = zext i32 %sub368 to i64, !dbg !5154
  %and370 = and i64 %conv369, 16, !dbg !5154
  %tobool371 = icmp ne i64 %and370, 0, !dbg !5154
  br i1 %tobool371, label %cond.true372, label %cond.false373, !dbg !5154

cond.true372:                                     ; preds = %cond.false367
  br label %cond.end385, !dbg !5154

cond.false373:                                    ; preds = %cond.false367
  %80 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub374 = sub i32 %80, 1, !dbg !5154
  %conv375 = zext i32 %sub374 to i64, !dbg !5154
  %and376 = and i64 %conv375, 8, !dbg !5154
  %tobool377 = icmp ne i64 %and376, 0, !dbg !5154
  br i1 %tobool377, label %cond.true378, label %cond.false379, !dbg !5154

cond.true378:                                     ; preds = %cond.false373
  br label %cond.end, !dbg !5154

cond.false379:                                    ; preds = %cond.false373
  %81 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub380 = sub i32 %81, 1, !dbg !5154
  %conv381 = zext i32 %sub380 to i64, !dbg !5154
  %and382 = and i64 %conv381, 4, !dbg !5154
  %tobool383 = icmp ne i64 %and382, 0, !dbg !5154
  %82 = zext i1 %tobool383 to i64, !dbg !5154
  %cond = select i1 %tobool383, i32 2, i32 1, !dbg !5154
  br label %cond.end, !dbg !5154

cond.end:                                         ; preds = %cond.false379, %cond.true378
  %cond384 = phi i32 [ 3, %cond.true378 ], [ %cond, %cond.false379 ], !dbg !5154
  br label %cond.end385, !dbg !5154

cond.end385:                                      ; preds = %cond.end, %cond.true372
  %cond386 = phi i32 [ 4, %cond.true372 ], [ %cond384, %cond.end ], !dbg !5154
  br label %cond.end387, !dbg !5154

cond.end387:                                      ; preds = %cond.end385, %cond.true366
  %cond388 = phi i32 [ 5, %cond.true366 ], [ %cond386, %cond.end385 ], !dbg !5154
  br label %cond.end389, !dbg !5154

cond.end389:                                      ; preds = %cond.end387, %cond.true360
  %cond390 = phi i32 [ 6, %cond.true360 ], [ %cond388, %cond.end387 ], !dbg !5154
  br label %cond.end391, !dbg !5154

cond.end391:                                      ; preds = %cond.end389, %cond.true354
  %cond392 = phi i32 [ 7, %cond.true354 ], [ %cond390, %cond.end389 ], !dbg !5154
  br label %cond.end393, !dbg !5154

cond.end393:                                      ; preds = %cond.end391, %cond.true348
  %cond394 = phi i32 [ 8, %cond.true348 ], [ %cond392, %cond.end391 ], !dbg !5154
  br label %cond.end395, !dbg !5154

cond.end395:                                      ; preds = %cond.end393, %cond.true342
  %cond396 = phi i32 [ 9, %cond.true342 ], [ %cond394, %cond.end393 ], !dbg !5154
  br label %cond.end397, !dbg !5154

cond.end397:                                      ; preds = %cond.end395, %cond.true336
  %cond398 = phi i32 [ 10, %cond.true336 ], [ %cond396, %cond.end395 ], !dbg !5154
  br label %cond.end399, !dbg !5154

cond.end399:                                      ; preds = %cond.end397, %cond.true330
  %cond400 = phi i32 [ 11, %cond.true330 ], [ %cond398, %cond.end397 ], !dbg !5154
  br label %cond.end401, !dbg !5154

cond.end401:                                      ; preds = %cond.end399, %cond.true324
  %cond402 = phi i32 [ 12, %cond.true324 ], [ %cond400, %cond.end399 ], !dbg !5154
  br label %cond.end403, !dbg !5154

cond.end403:                                      ; preds = %cond.end401, %cond.true318
  %cond404 = phi i32 [ 13, %cond.true318 ], [ %cond402, %cond.end401 ], !dbg !5154
  br label %cond.end405, !dbg !5154

cond.end405:                                      ; preds = %cond.end403, %cond.true312
  %cond406 = phi i32 [ 14, %cond.true312 ], [ %cond404, %cond.end403 ], !dbg !5154
  br label %cond.end407, !dbg !5154

cond.end407:                                      ; preds = %cond.end405, %cond.true306
  %cond408 = phi i32 [ 15, %cond.true306 ], [ %cond406, %cond.end405 ], !dbg !5154
  br label %cond.end409, !dbg !5154

cond.end409:                                      ; preds = %cond.end407, %cond.true300
  %cond410 = phi i32 [ 16, %cond.true300 ], [ %cond408, %cond.end407 ], !dbg !5154
  br label %cond.end411, !dbg !5154

cond.end411:                                      ; preds = %cond.end409, %cond.true294
  %cond412 = phi i32 [ 17, %cond.true294 ], [ %cond410, %cond.end409 ], !dbg !5154
  br label %cond.end413, !dbg !5154

cond.end413:                                      ; preds = %cond.end411, %cond.true288
  %cond414 = phi i32 [ 18, %cond.true288 ], [ %cond412, %cond.end411 ], !dbg !5154
  br label %cond.end415, !dbg !5154

cond.end415:                                      ; preds = %cond.end413, %cond.true282
  %cond416 = phi i32 [ 19, %cond.true282 ], [ %cond414, %cond.end413 ], !dbg !5154
  br label %cond.end417, !dbg !5154

cond.end417:                                      ; preds = %cond.end415, %cond.true276
  %cond418 = phi i32 [ 20, %cond.true276 ], [ %cond416, %cond.end415 ], !dbg !5154
  br label %cond.end419, !dbg !5154

cond.end419:                                      ; preds = %cond.end417, %cond.true270
  %cond420 = phi i32 [ 21, %cond.true270 ], [ %cond418, %cond.end417 ], !dbg !5154
  br label %cond.end421, !dbg !5154

cond.end421:                                      ; preds = %cond.end419, %cond.true264
  %cond422 = phi i32 [ 22, %cond.true264 ], [ %cond420, %cond.end419 ], !dbg !5154
  br label %cond.end423, !dbg !5154

cond.end423:                                      ; preds = %cond.end421, %cond.true258
  %cond424 = phi i32 [ 23, %cond.true258 ], [ %cond422, %cond.end421 ], !dbg !5154
  br label %cond.end425, !dbg !5154

cond.end425:                                      ; preds = %cond.end423, %cond.true252
  %cond426 = phi i32 [ 24, %cond.true252 ], [ %cond424, %cond.end423 ], !dbg !5154
  br label %cond.end427, !dbg !5154

cond.end427:                                      ; preds = %cond.end425, %cond.true246
  %cond428 = phi i32 [ 25, %cond.true246 ], [ %cond426, %cond.end425 ], !dbg !5154
  br label %cond.end429, !dbg !5154

cond.end429:                                      ; preds = %cond.end427, %cond.true240
  %cond430 = phi i32 [ 26, %cond.true240 ], [ %cond428, %cond.end427 ], !dbg !5154
  br label %cond.end431, !dbg !5154

cond.end431:                                      ; preds = %cond.end429, %cond.true234
  %cond432 = phi i32 [ 27, %cond.true234 ], [ %cond430, %cond.end429 ], !dbg !5154
  br label %cond.end433, !dbg !5154

cond.end433:                                      ; preds = %cond.end431, %cond.true228
  %cond434 = phi i32 [ 28, %cond.true228 ], [ %cond432, %cond.end431 ], !dbg !5154
  br label %cond.end435, !dbg !5154

cond.end435:                                      ; preds = %cond.end433, %cond.true222
  %cond436 = phi i32 [ 29, %cond.true222 ], [ %cond434, %cond.end433 ], !dbg !5154
  br label %cond.end437, !dbg !5154

cond.end437:                                      ; preds = %cond.end435, %cond.true216
  %cond438 = phi i32 [ 30, %cond.true216 ], [ %cond436, %cond.end435 ], !dbg !5154
  br label %cond.end439, !dbg !5154

cond.end439:                                      ; preds = %cond.end437, %cond.true210
  %cond440 = phi i32 [ 31, %cond.true210 ], [ %cond438, %cond.end437 ], !dbg !5154
  br label %cond.end441, !dbg !5154

cond.end441:                                      ; preds = %cond.end439, %cond.true204
  %cond442 = phi i32 [ 32, %cond.true204 ], [ %cond440, %cond.end439 ], !dbg !5154
  br label %cond.end443, !dbg !5154

cond.end443:                                      ; preds = %cond.end441, %cond.true198
  %cond444 = phi i32 [ 33, %cond.true198 ], [ %cond442, %cond.end441 ], !dbg !5154
  br label %cond.end445, !dbg !5154

cond.end445:                                      ; preds = %cond.end443, %cond.true192
  %cond446 = phi i32 [ 34, %cond.true192 ], [ %cond444, %cond.end443 ], !dbg !5154
  br label %cond.end447, !dbg !5154

cond.end447:                                      ; preds = %cond.end445, %cond.true186
  %cond448 = phi i32 [ 35, %cond.true186 ], [ %cond446, %cond.end445 ], !dbg !5154
  br label %cond.end449, !dbg !5154

cond.end449:                                      ; preds = %cond.end447, %cond.true180
  %cond450 = phi i32 [ 36, %cond.true180 ], [ %cond448, %cond.end447 ], !dbg !5154
  br label %cond.end451, !dbg !5154

cond.end451:                                      ; preds = %cond.end449, %cond.true174
  %cond452 = phi i32 [ 37, %cond.true174 ], [ %cond450, %cond.end449 ], !dbg !5154
  br label %cond.end453, !dbg !5154

cond.end453:                                      ; preds = %cond.end451, %cond.true168
  %cond454 = phi i32 [ 38, %cond.true168 ], [ %cond452, %cond.end451 ], !dbg !5154
  br label %cond.end455, !dbg !5154

cond.end455:                                      ; preds = %cond.end453, %cond.true162
  %cond456 = phi i32 [ 39, %cond.true162 ], [ %cond454, %cond.end453 ], !dbg !5154
  br label %cond.end457, !dbg !5154

cond.end457:                                      ; preds = %cond.end455, %cond.true156
  %cond458 = phi i32 [ 40, %cond.true156 ], [ %cond456, %cond.end455 ], !dbg !5154
  br label %cond.end459, !dbg !5154

cond.end459:                                      ; preds = %cond.end457, %cond.true150
  %cond460 = phi i32 [ 41, %cond.true150 ], [ %cond458, %cond.end457 ], !dbg !5154
  br label %cond.end461, !dbg !5154

cond.end461:                                      ; preds = %cond.end459, %cond.true144
  %cond462 = phi i32 [ 42, %cond.true144 ], [ %cond460, %cond.end459 ], !dbg !5154
  br label %cond.end463, !dbg !5154

cond.end463:                                      ; preds = %cond.end461, %cond.true138
  %cond464 = phi i32 [ 43, %cond.true138 ], [ %cond462, %cond.end461 ], !dbg !5154
  br label %cond.end465, !dbg !5154

cond.end465:                                      ; preds = %cond.end463, %cond.true132
  %cond466 = phi i32 [ 44, %cond.true132 ], [ %cond464, %cond.end463 ], !dbg !5154
  br label %cond.end467, !dbg !5154

cond.end467:                                      ; preds = %cond.end465, %cond.true126
  %cond468 = phi i32 [ 45, %cond.true126 ], [ %cond466, %cond.end465 ], !dbg !5154
  br label %cond.end469, !dbg !5154

cond.end469:                                      ; preds = %cond.end467, %cond.true120
  %cond470 = phi i32 [ 46, %cond.true120 ], [ %cond468, %cond.end467 ], !dbg !5154
  br label %cond.end471, !dbg !5154

cond.end471:                                      ; preds = %cond.end469, %cond.true114
  %cond472 = phi i32 [ 47, %cond.true114 ], [ %cond470, %cond.end469 ], !dbg !5154
  br label %cond.end473, !dbg !5154

cond.end473:                                      ; preds = %cond.end471, %cond.true108
  %cond474 = phi i32 [ 48, %cond.true108 ], [ %cond472, %cond.end471 ], !dbg !5154
  br label %cond.end475, !dbg !5154

cond.end475:                                      ; preds = %cond.end473, %cond.true102
  %cond476 = phi i32 [ 49, %cond.true102 ], [ %cond474, %cond.end473 ], !dbg !5154
  br label %cond.end477, !dbg !5154

cond.end477:                                      ; preds = %cond.end475, %cond.true96
  %cond478 = phi i32 [ 50, %cond.true96 ], [ %cond476, %cond.end475 ], !dbg !5154
  br label %cond.end479, !dbg !5154

cond.end479:                                      ; preds = %cond.end477, %cond.true90
  %cond480 = phi i32 [ 51, %cond.true90 ], [ %cond478, %cond.end477 ], !dbg !5154
  br label %cond.end481, !dbg !5154

cond.end481:                                      ; preds = %cond.end479, %cond.true84
  %cond482 = phi i32 [ 52, %cond.true84 ], [ %cond480, %cond.end479 ], !dbg !5154
  br label %cond.end483, !dbg !5154

cond.end483:                                      ; preds = %cond.end481, %cond.true78
  %cond484 = phi i32 [ 53, %cond.true78 ], [ %cond482, %cond.end481 ], !dbg !5154
  br label %cond.end485, !dbg !5154

cond.end485:                                      ; preds = %cond.end483, %cond.true72
  %cond486 = phi i32 [ 54, %cond.true72 ], [ %cond484, %cond.end483 ], !dbg !5154
  br label %cond.end487, !dbg !5154

cond.end487:                                      ; preds = %cond.end485, %cond.true66
  %cond488 = phi i32 [ 55, %cond.true66 ], [ %cond486, %cond.end485 ], !dbg !5154
  br label %cond.end489, !dbg !5154

cond.end489:                                      ; preds = %cond.end487, %cond.true60
  %cond490 = phi i32 [ 56, %cond.true60 ], [ %cond488, %cond.end487 ], !dbg !5154
  br label %cond.end491, !dbg !5154

cond.end491:                                      ; preds = %cond.end489, %cond.true54
  %cond492 = phi i32 [ 57, %cond.true54 ], [ %cond490, %cond.end489 ], !dbg !5154
  br label %cond.end493, !dbg !5154

cond.end493:                                      ; preds = %cond.end491, %cond.true48
  %cond494 = phi i32 [ 58, %cond.true48 ], [ %cond492, %cond.end491 ], !dbg !5154
  br label %cond.end495, !dbg !5154

cond.end495:                                      ; preds = %cond.end493, %cond.true42
  %cond496 = phi i32 [ 59, %cond.true42 ], [ %cond494, %cond.end493 ], !dbg !5154
  br label %cond.end497, !dbg !5154

cond.end497:                                      ; preds = %cond.end495, %cond.true36
  %cond498 = phi i32 [ 60, %cond.true36 ], [ %cond496, %cond.end495 ], !dbg !5154
  br label %cond.end499, !dbg !5154

cond.end499:                                      ; preds = %cond.end497, %cond.true30
  %cond500 = phi i32 [ 61, %cond.true30 ], [ %cond498, %cond.end497 ], !dbg !5154
  br label %cond.end501, !dbg !5154

cond.end501:                                      ; preds = %cond.end499, %cond.true24
  %cond502 = phi i32 [ 62, %cond.true24 ], [ %cond500, %cond.end499 ], !dbg !5154
  br label %cond.end503, !dbg !5154

cond.end503:                                      ; preds = %cond.end501, %cond.true18
  %cond504 = phi i32 [ 63, %cond.true18 ], [ %cond502, %cond.end501 ], !dbg !5154
  br label %cond.end505, !dbg !5154

cond.end505:                                      ; preds = %cond.end503, %cond.true14
  %cond506 = phi i32 [ 0, %cond.true14 ], [ %cond504, %cond.end503 ], !dbg !5154
  br label %cond.end508, !dbg !5154

cond.false507:                                    ; preds = %cond.true8
  br label %cond.end508, !dbg !5154

cond.end508:                                      ; preds = %cond.false507, %cond.end505
  %cond509 = phi i32 [ %cond506, %cond.end505 ], [ -1, %cond.false507 ], !dbg !5154
  br label %cond.end512, !dbg !5154

cond.false510:                                    ; preds = %cond.false
  %83 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %sub511 = sub i32 %83, 1, !dbg !5154
  %call = call i32 @__ilog2_u32(i32 %sub511) #10, !dbg !5154
  br label %cond.end512, !dbg !5154

cond.end512:                                      ; preds = %cond.false510, %cond.end508
  %cond513 = phi i32 [ %cond509, %cond.end508 ], [ %call, %cond.false510 ], !dbg !5154
  %add514 = add i32 %cond513, 1, !dbg !5154
  %sh_prom = zext i32 %add514 to i64, !dbg !5154
  %shl = shl i64 1, %sh_prom, !dbg !5154
  br label %cond.end515, !dbg !5154

cond.end515:                                      ; preds = %cond.end512, %cond.true7
  %cond516 = phi i64 [ 1, %cond.true7 ], [ %shl, %cond.end512 ], !dbg !5154
  br label %cond.end520, !dbg !5154

cond.false517:                                    ; preds = %entry
  %84 = load i32, i32* %ch_cnt, align 4, !dbg !5154
  %conv518 = zext i32 %84 to i64, !dbg !5154
  %call519 = call i64 @__roundup_pow_of_two(i64 %conv518) #10, !dbg !5154
  br label %cond.end520, !dbg !5154

cond.end520:                                      ; preds = %cond.false517, %cond.end515
  %cond521 = phi i64 [ %cond516, %cond.end515 ], [ %call519, %cond.false517 ], !dbg !5154
  %85 = load i64, i64* %ll_chunk, align 8, !dbg !5155
  %div = udiv i64 %85, %cond521, !dbg !5155
  store i64 %div, i64* %ll_chunk, align 8, !dbg !5155
  %86 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %87 = call i1 @llvm.is.constant.i32(i32 %86), !dbg !5156
  br i1 %87, label %cond.true522, label %cond.false1044, !dbg !5156

cond.true522:                                     ; preds = %cond.end520
  %88 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %cmp523 = icmp eq i32 %88, 1, !dbg !5156
  br i1 %cmp523, label %cond.true525, label %cond.false526, !dbg !5156

cond.true525:                                     ; preds = %cond.true522
  br label %cond.end1042, !dbg !5156

cond.false526:                                    ; preds = %cond.true522
  %89 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub527 = sub i32 %89, 1, !dbg !5156
  %90 = call i1 @llvm.is.constant.i32(i32 %sub527), !dbg !5156
  br i1 %90, label %cond.true528, label %cond.false1034, !dbg !5156

cond.true528:                                     ; preds = %cond.false526
  %91 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub529 = sub i32 %91, 1, !dbg !5156
  %92 = call i1 @llvm.is.constant.i32(i32 %sub529), !dbg !5156
  br i1 %92, label %cond.true530, label %cond.false1031, !dbg !5156

cond.true530:                                     ; preds = %cond.true528
  %93 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub531 = sub i32 %93, 1, !dbg !5156
  %cmp532 = icmp ult i32 %sub531, 2, !dbg !5156
  br i1 %cmp532, label %cond.true534, label %cond.false535, !dbg !5156

cond.true534:                                     ; preds = %cond.true530
  br label %cond.end1029, !dbg !5156

cond.false535:                                    ; preds = %cond.true530
  %94 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub536 = sub i32 %94, 1, !dbg !5156
  %conv537 = zext i32 %sub536 to i64, !dbg !5156
  %and538 = and i64 %conv537, -9223372036854775808, !dbg !5156
  %tobool539 = icmp ne i64 %and538, 0, !dbg !5156
  br i1 %tobool539, label %cond.true540, label %cond.false541, !dbg !5156

cond.true540:                                     ; preds = %cond.false535
  br label %cond.end1027, !dbg !5156

cond.false541:                                    ; preds = %cond.false535
  %95 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub542 = sub i32 %95, 1, !dbg !5156
  %conv543 = zext i32 %sub542 to i64, !dbg !5156
  %and544 = and i64 %conv543, 4611686018427387904, !dbg !5156
  %tobool545 = icmp ne i64 %and544, 0, !dbg !5156
  br i1 %tobool545, label %cond.true546, label %cond.false547, !dbg !5156

cond.true546:                                     ; preds = %cond.false541
  br label %cond.end1025, !dbg !5156

cond.false547:                                    ; preds = %cond.false541
  %96 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub548 = sub i32 %96, 1, !dbg !5156
  %conv549 = zext i32 %sub548 to i64, !dbg !5156
  %and550 = and i64 %conv549, 2305843009213693952, !dbg !5156
  %tobool551 = icmp ne i64 %and550, 0, !dbg !5156
  br i1 %tobool551, label %cond.true552, label %cond.false553, !dbg !5156

cond.true552:                                     ; preds = %cond.false547
  br label %cond.end1023, !dbg !5156

cond.false553:                                    ; preds = %cond.false547
  %97 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub554 = sub i32 %97, 1, !dbg !5156
  %conv555 = zext i32 %sub554 to i64, !dbg !5156
  %and556 = and i64 %conv555, 1152921504606846976, !dbg !5156
  %tobool557 = icmp ne i64 %and556, 0, !dbg !5156
  br i1 %tobool557, label %cond.true558, label %cond.false559, !dbg !5156

cond.true558:                                     ; preds = %cond.false553
  br label %cond.end1021, !dbg !5156

cond.false559:                                    ; preds = %cond.false553
  %98 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub560 = sub i32 %98, 1, !dbg !5156
  %conv561 = zext i32 %sub560 to i64, !dbg !5156
  %and562 = and i64 %conv561, 576460752303423488, !dbg !5156
  %tobool563 = icmp ne i64 %and562, 0, !dbg !5156
  br i1 %tobool563, label %cond.true564, label %cond.false565, !dbg !5156

cond.true564:                                     ; preds = %cond.false559
  br label %cond.end1019, !dbg !5156

cond.false565:                                    ; preds = %cond.false559
  %99 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub566 = sub i32 %99, 1, !dbg !5156
  %conv567 = zext i32 %sub566 to i64, !dbg !5156
  %and568 = and i64 %conv567, 288230376151711744, !dbg !5156
  %tobool569 = icmp ne i64 %and568, 0, !dbg !5156
  br i1 %tobool569, label %cond.true570, label %cond.false571, !dbg !5156

cond.true570:                                     ; preds = %cond.false565
  br label %cond.end1017, !dbg !5156

cond.false571:                                    ; preds = %cond.false565
  %100 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub572 = sub i32 %100, 1, !dbg !5156
  %conv573 = zext i32 %sub572 to i64, !dbg !5156
  %and574 = and i64 %conv573, 144115188075855872, !dbg !5156
  %tobool575 = icmp ne i64 %and574, 0, !dbg !5156
  br i1 %tobool575, label %cond.true576, label %cond.false577, !dbg !5156

cond.true576:                                     ; preds = %cond.false571
  br label %cond.end1015, !dbg !5156

cond.false577:                                    ; preds = %cond.false571
  %101 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub578 = sub i32 %101, 1, !dbg !5156
  %conv579 = zext i32 %sub578 to i64, !dbg !5156
  %and580 = and i64 %conv579, 72057594037927936, !dbg !5156
  %tobool581 = icmp ne i64 %and580, 0, !dbg !5156
  br i1 %tobool581, label %cond.true582, label %cond.false583, !dbg !5156

cond.true582:                                     ; preds = %cond.false577
  br label %cond.end1013, !dbg !5156

cond.false583:                                    ; preds = %cond.false577
  %102 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub584 = sub i32 %102, 1, !dbg !5156
  %conv585 = zext i32 %sub584 to i64, !dbg !5156
  %and586 = and i64 %conv585, 36028797018963968, !dbg !5156
  %tobool587 = icmp ne i64 %and586, 0, !dbg !5156
  br i1 %tobool587, label %cond.true588, label %cond.false589, !dbg !5156

cond.true588:                                     ; preds = %cond.false583
  br label %cond.end1011, !dbg !5156

cond.false589:                                    ; preds = %cond.false583
  %103 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub590 = sub i32 %103, 1, !dbg !5156
  %conv591 = zext i32 %sub590 to i64, !dbg !5156
  %and592 = and i64 %conv591, 18014398509481984, !dbg !5156
  %tobool593 = icmp ne i64 %and592, 0, !dbg !5156
  br i1 %tobool593, label %cond.true594, label %cond.false595, !dbg !5156

cond.true594:                                     ; preds = %cond.false589
  br label %cond.end1009, !dbg !5156

cond.false595:                                    ; preds = %cond.false589
  %104 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub596 = sub i32 %104, 1, !dbg !5156
  %conv597 = zext i32 %sub596 to i64, !dbg !5156
  %and598 = and i64 %conv597, 9007199254740992, !dbg !5156
  %tobool599 = icmp ne i64 %and598, 0, !dbg !5156
  br i1 %tobool599, label %cond.true600, label %cond.false601, !dbg !5156

cond.true600:                                     ; preds = %cond.false595
  br label %cond.end1007, !dbg !5156

cond.false601:                                    ; preds = %cond.false595
  %105 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub602 = sub i32 %105, 1, !dbg !5156
  %conv603 = zext i32 %sub602 to i64, !dbg !5156
  %and604 = and i64 %conv603, 4503599627370496, !dbg !5156
  %tobool605 = icmp ne i64 %and604, 0, !dbg !5156
  br i1 %tobool605, label %cond.true606, label %cond.false607, !dbg !5156

cond.true606:                                     ; preds = %cond.false601
  br label %cond.end1005, !dbg !5156

cond.false607:                                    ; preds = %cond.false601
  %106 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub608 = sub i32 %106, 1, !dbg !5156
  %conv609 = zext i32 %sub608 to i64, !dbg !5156
  %and610 = and i64 %conv609, 2251799813685248, !dbg !5156
  %tobool611 = icmp ne i64 %and610, 0, !dbg !5156
  br i1 %tobool611, label %cond.true612, label %cond.false613, !dbg !5156

cond.true612:                                     ; preds = %cond.false607
  br label %cond.end1003, !dbg !5156

cond.false613:                                    ; preds = %cond.false607
  %107 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub614 = sub i32 %107, 1, !dbg !5156
  %conv615 = zext i32 %sub614 to i64, !dbg !5156
  %and616 = and i64 %conv615, 1125899906842624, !dbg !5156
  %tobool617 = icmp ne i64 %and616, 0, !dbg !5156
  br i1 %tobool617, label %cond.true618, label %cond.false619, !dbg !5156

cond.true618:                                     ; preds = %cond.false613
  br label %cond.end1001, !dbg !5156

cond.false619:                                    ; preds = %cond.false613
  %108 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub620 = sub i32 %108, 1, !dbg !5156
  %conv621 = zext i32 %sub620 to i64, !dbg !5156
  %and622 = and i64 %conv621, 562949953421312, !dbg !5156
  %tobool623 = icmp ne i64 %and622, 0, !dbg !5156
  br i1 %tobool623, label %cond.true624, label %cond.false625, !dbg !5156

cond.true624:                                     ; preds = %cond.false619
  br label %cond.end999, !dbg !5156

cond.false625:                                    ; preds = %cond.false619
  %109 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub626 = sub i32 %109, 1, !dbg !5156
  %conv627 = zext i32 %sub626 to i64, !dbg !5156
  %and628 = and i64 %conv627, 281474976710656, !dbg !5156
  %tobool629 = icmp ne i64 %and628, 0, !dbg !5156
  br i1 %tobool629, label %cond.true630, label %cond.false631, !dbg !5156

cond.true630:                                     ; preds = %cond.false625
  br label %cond.end997, !dbg !5156

cond.false631:                                    ; preds = %cond.false625
  %110 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub632 = sub i32 %110, 1, !dbg !5156
  %conv633 = zext i32 %sub632 to i64, !dbg !5156
  %and634 = and i64 %conv633, 140737488355328, !dbg !5156
  %tobool635 = icmp ne i64 %and634, 0, !dbg !5156
  br i1 %tobool635, label %cond.true636, label %cond.false637, !dbg !5156

cond.true636:                                     ; preds = %cond.false631
  br label %cond.end995, !dbg !5156

cond.false637:                                    ; preds = %cond.false631
  %111 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub638 = sub i32 %111, 1, !dbg !5156
  %conv639 = zext i32 %sub638 to i64, !dbg !5156
  %and640 = and i64 %conv639, 70368744177664, !dbg !5156
  %tobool641 = icmp ne i64 %and640, 0, !dbg !5156
  br i1 %tobool641, label %cond.true642, label %cond.false643, !dbg !5156

cond.true642:                                     ; preds = %cond.false637
  br label %cond.end993, !dbg !5156

cond.false643:                                    ; preds = %cond.false637
  %112 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub644 = sub i32 %112, 1, !dbg !5156
  %conv645 = zext i32 %sub644 to i64, !dbg !5156
  %and646 = and i64 %conv645, 35184372088832, !dbg !5156
  %tobool647 = icmp ne i64 %and646, 0, !dbg !5156
  br i1 %tobool647, label %cond.true648, label %cond.false649, !dbg !5156

cond.true648:                                     ; preds = %cond.false643
  br label %cond.end991, !dbg !5156

cond.false649:                                    ; preds = %cond.false643
  %113 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub650 = sub i32 %113, 1, !dbg !5156
  %conv651 = zext i32 %sub650 to i64, !dbg !5156
  %and652 = and i64 %conv651, 17592186044416, !dbg !5156
  %tobool653 = icmp ne i64 %and652, 0, !dbg !5156
  br i1 %tobool653, label %cond.true654, label %cond.false655, !dbg !5156

cond.true654:                                     ; preds = %cond.false649
  br label %cond.end989, !dbg !5156

cond.false655:                                    ; preds = %cond.false649
  %114 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub656 = sub i32 %114, 1, !dbg !5156
  %conv657 = zext i32 %sub656 to i64, !dbg !5156
  %and658 = and i64 %conv657, 8796093022208, !dbg !5156
  %tobool659 = icmp ne i64 %and658, 0, !dbg !5156
  br i1 %tobool659, label %cond.true660, label %cond.false661, !dbg !5156

cond.true660:                                     ; preds = %cond.false655
  br label %cond.end987, !dbg !5156

cond.false661:                                    ; preds = %cond.false655
  %115 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub662 = sub i32 %115, 1, !dbg !5156
  %conv663 = zext i32 %sub662 to i64, !dbg !5156
  %and664 = and i64 %conv663, 4398046511104, !dbg !5156
  %tobool665 = icmp ne i64 %and664, 0, !dbg !5156
  br i1 %tobool665, label %cond.true666, label %cond.false667, !dbg !5156

cond.true666:                                     ; preds = %cond.false661
  br label %cond.end985, !dbg !5156

cond.false667:                                    ; preds = %cond.false661
  %116 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub668 = sub i32 %116, 1, !dbg !5156
  %conv669 = zext i32 %sub668 to i64, !dbg !5156
  %and670 = and i64 %conv669, 2199023255552, !dbg !5156
  %tobool671 = icmp ne i64 %and670, 0, !dbg !5156
  br i1 %tobool671, label %cond.true672, label %cond.false673, !dbg !5156

cond.true672:                                     ; preds = %cond.false667
  br label %cond.end983, !dbg !5156

cond.false673:                                    ; preds = %cond.false667
  %117 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub674 = sub i32 %117, 1, !dbg !5156
  %conv675 = zext i32 %sub674 to i64, !dbg !5156
  %and676 = and i64 %conv675, 1099511627776, !dbg !5156
  %tobool677 = icmp ne i64 %and676, 0, !dbg !5156
  br i1 %tobool677, label %cond.true678, label %cond.false679, !dbg !5156

cond.true678:                                     ; preds = %cond.false673
  br label %cond.end981, !dbg !5156

cond.false679:                                    ; preds = %cond.false673
  %118 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub680 = sub i32 %118, 1, !dbg !5156
  %conv681 = zext i32 %sub680 to i64, !dbg !5156
  %and682 = and i64 %conv681, 549755813888, !dbg !5156
  %tobool683 = icmp ne i64 %and682, 0, !dbg !5156
  br i1 %tobool683, label %cond.true684, label %cond.false685, !dbg !5156

cond.true684:                                     ; preds = %cond.false679
  br label %cond.end979, !dbg !5156

cond.false685:                                    ; preds = %cond.false679
  %119 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub686 = sub i32 %119, 1, !dbg !5156
  %conv687 = zext i32 %sub686 to i64, !dbg !5156
  %and688 = and i64 %conv687, 274877906944, !dbg !5156
  %tobool689 = icmp ne i64 %and688, 0, !dbg !5156
  br i1 %tobool689, label %cond.true690, label %cond.false691, !dbg !5156

cond.true690:                                     ; preds = %cond.false685
  br label %cond.end977, !dbg !5156

cond.false691:                                    ; preds = %cond.false685
  %120 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub692 = sub i32 %120, 1, !dbg !5156
  %conv693 = zext i32 %sub692 to i64, !dbg !5156
  %and694 = and i64 %conv693, 137438953472, !dbg !5156
  %tobool695 = icmp ne i64 %and694, 0, !dbg !5156
  br i1 %tobool695, label %cond.true696, label %cond.false697, !dbg !5156

cond.true696:                                     ; preds = %cond.false691
  br label %cond.end975, !dbg !5156

cond.false697:                                    ; preds = %cond.false691
  %121 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub698 = sub i32 %121, 1, !dbg !5156
  %conv699 = zext i32 %sub698 to i64, !dbg !5156
  %and700 = and i64 %conv699, 68719476736, !dbg !5156
  %tobool701 = icmp ne i64 %and700, 0, !dbg !5156
  br i1 %tobool701, label %cond.true702, label %cond.false703, !dbg !5156

cond.true702:                                     ; preds = %cond.false697
  br label %cond.end973, !dbg !5156

cond.false703:                                    ; preds = %cond.false697
  %122 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub704 = sub i32 %122, 1, !dbg !5156
  %conv705 = zext i32 %sub704 to i64, !dbg !5156
  %and706 = and i64 %conv705, 34359738368, !dbg !5156
  %tobool707 = icmp ne i64 %and706, 0, !dbg !5156
  br i1 %tobool707, label %cond.true708, label %cond.false709, !dbg !5156

cond.true708:                                     ; preds = %cond.false703
  br label %cond.end971, !dbg !5156

cond.false709:                                    ; preds = %cond.false703
  %123 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub710 = sub i32 %123, 1, !dbg !5156
  %conv711 = zext i32 %sub710 to i64, !dbg !5156
  %and712 = and i64 %conv711, 17179869184, !dbg !5156
  %tobool713 = icmp ne i64 %and712, 0, !dbg !5156
  br i1 %tobool713, label %cond.true714, label %cond.false715, !dbg !5156

cond.true714:                                     ; preds = %cond.false709
  br label %cond.end969, !dbg !5156

cond.false715:                                    ; preds = %cond.false709
  %124 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub716 = sub i32 %124, 1, !dbg !5156
  %conv717 = zext i32 %sub716 to i64, !dbg !5156
  %and718 = and i64 %conv717, 8589934592, !dbg !5156
  %tobool719 = icmp ne i64 %and718, 0, !dbg !5156
  br i1 %tobool719, label %cond.true720, label %cond.false721, !dbg !5156

cond.true720:                                     ; preds = %cond.false715
  br label %cond.end967, !dbg !5156

cond.false721:                                    ; preds = %cond.false715
  %125 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub722 = sub i32 %125, 1, !dbg !5156
  %conv723 = zext i32 %sub722 to i64, !dbg !5156
  %and724 = and i64 %conv723, 4294967296, !dbg !5156
  %tobool725 = icmp ne i64 %and724, 0, !dbg !5156
  br i1 %tobool725, label %cond.true726, label %cond.false727, !dbg !5156

cond.true726:                                     ; preds = %cond.false721
  br label %cond.end965, !dbg !5156

cond.false727:                                    ; preds = %cond.false721
  %126 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub728 = sub i32 %126, 1, !dbg !5156
  %conv729 = zext i32 %sub728 to i64, !dbg !5156
  %and730 = and i64 %conv729, 2147483648, !dbg !5156
  %tobool731 = icmp ne i64 %and730, 0, !dbg !5156
  br i1 %tobool731, label %cond.true732, label %cond.false733, !dbg !5156

cond.true732:                                     ; preds = %cond.false727
  br label %cond.end963, !dbg !5156

cond.false733:                                    ; preds = %cond.false727
  %127 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub734 = sub i32 %127, 1, !dbg !5156
  %conv735 = zext i32 %sub734 to i64, !dbg !5156
  %and736 = and i64 %conv735, 1073741824, !dbg !5156
  %tobool737 = icmp ne i64 %and736, 0, !dbg !5156
  br i1 %tobool737, label %cond.true738, label %cond.false739, !dbg !5156

cond.true738:                                     ; preds = %cond.false733
  br label %cond.end961, !dbg !5156

cond.false739:                                    ; preds = %cond.false733
  %128 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub740 = sub i32 %128, 1, !dbg !5156
  %conv741 = zext i32 %sub740 to i64, !dbg !5156
  %and742 = and i64 %conv741, 536870912, !dbg !5156
  %tobool743 = icmp ne i64 %and742, 0, !dbg !5156
  br i1 %tobool743, label %cond.true744, label %cond.false745, !dbg !5156

cond.true744:                                     ; preds = %cond.false739
  br label %cond.end959, !dbg !5156

cond.false745:                                    ; preds = %cond.false739
  %129 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub746 = sub i32 %129, 1, !dbg !5156
  %conv747 = zext i32 %sub746 to i64, !dbg !5156
  %and748 = and i64 %conv747, 268435456, !dbg !5156
  %tobool749 = icmp ne i64 %and748, 0, !dbg !5156
  br i1 %tobool749, label %cond.true750, label %cond.false751, !dbg !5156

cond.true750:                                     ; preds = %cond.false745
  br label %cond.end957, !dbg !5156

cond.false751:                                    ; preds = %cond.false745
  %130 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub752 = sub i32 %130, 1, !dbg !5156
  %conv753 = zext i32 %sub752 to i64, !dbg !5156
  %and754 = and i64 %conv753, 134217728, !dbg !5156
  %tobool755 = icmp ne i64 %and754, 0, !dbg !5156
  br i1 %tobool755, label %cond.true756, label %cond.false757, !dbg !5156

cond.true756:                                     ; preds = %cond.false751
  br label %cond.end955, !dbg !5156

cond.false757:                                    ; preds = %cond.false751
  %131 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub758 = sub i32 %131, 1, !dbg !5156
  %conv759 = zext i32 %sub758 to i64, !dbg !5156
  %and760 = and i64 %conv759, 67108864, !dbg !5156
  %tobool761 = icmp ne i64 %and760, 0, !dbg !5156
  br i1 %tobool761, label %cond.true762, label %cond.false763, !dbg !5156

cond.true762:                                     ; preds = %cond.false757
  br label %cond.end953, !dbg !5156

cond.false763:                                    ; preds = %cond.false757
  %132 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub764 = sub i32 %132, 1, !dbg !5156
  %conv765 = zext i32 %sub764 to i64, !dbg !5156
  %and766 = and i64 %conv765, 33554432, !dbg !5156
  %tobool767 = icmp ne i64 %and766, 0, !dbg !5156
  br i1 %tobool767, label %cond.true768, label %cond.false769, !dbg !5156

cond.true768:                                     ; preds = %cond.false763
  br label %cond.end951, !dbg !5156

cond.false769:                                    ; preds = %cond.false763
  %133 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub770 = sub i32 %133, 1, !dbg !5156
  %conv771 = zext i32 %sub770 to i64, !dbg !5156
  %and772 = and i64 %conv771, 16777216, !dbg !5156
  %tobool773 = icmp ne i64 %and772, 0, !dbg !5156
  br i1 %tobool773, label %cond.true774, label %cond.false775, !dbg !5156

cond.true774:                                     ; preds = %cond.false769
  br label %cond.end949, !dbg !5156

cond.false775:                                    ; preds = %cond.false769
  %134 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub776 = sub i32 %134, 1, !dbg !5156
  %conv777 = zext i32 %sub776 to i64, !dbg !5156
  %and778 = and i64 %conv777, 8388608, !dbg !5156
  %tobool779 = icmp ne i64 %and778, 0, !dbg !5156
  br i1 %tobool779, label %cond.true780, label %cond.false781, !dbg !5156

cond.true780:                                     ; preds = %cond.false775
  br label %cond.end947, !dbg !5156

cond.false781:                                    ; preds = %cond.false775
  %135 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub782 = sub i32 %135, 1, !dbg !5156
  %conv783 = zext i32 %sub782 to i64, !dbg !5156
  %and784 = and i64 %conv783, 4194304, !dbg !5156
  %tobool785 = icmp ne i64 %and784, 0, !dbg !5156
  br i1 %tobool785, label %cond.true786, label %cond.false787, !dbg !5156

cond.true786:                                     ; preds = %cond.false781
  br label %cond.end945, !dbg !5156

cond.false787:                                    ; preds = %cond.false781
  %136 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub788 = sub i32 %136, 1, !dbg !5156
  %conv789 = zext i32 %sub788 to i64, !dbg !5156
  %and790 = and i64 %conv789, 2097152, !dbg !5156
  %tobool791 = icmp ne i64 %and790, 0, !dbg !5156
  br i1 %tobool791, label %cond.true792, label %cond.false793, !dbg !5156

cond.true792:                                     ; preds = %cond.false787
  br label %cond.end943, !dbg !5156

cond.false793:                                    ; preds = %cond.false787
  %137 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub794 = sub i32 %137, 1, !dbg !5156
  %conv795 = zext i32 %sub794 to i64, !dbg !5156
  %and796 = and i64 %conv795, 1048576, !dbg !5156
  %tobool797 = icmp ne i64 %and796, 0, !dbg !5156
  br i1 %tobool797, label %cond.true798, label %cond.false799, !dbg !5156

cond.true798:                                     ; preds = %cond.false793
  br label %cond.end941, !dbg !5156

cond.false799:                                    ; preds = %cond.false793
  %138 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub800 = sub i32 %138, 1, !dbg !5156
  %conv801 = zext i32 %sub800 to i64, !dbg !5156
  %and802 = and i64 %conv801, 524288, !dbg !5156
  %tobool803 = icmp ne i64 %and802, 0, !dbg !5156
  br i1 %tobool803, label %cond.true804, label %cond.false805, !dbg !5156

cond.true804:                                     ; preds = %cond.false799
  br label %cond.end939, !dbg !5156

cond.false805:                                    ; preds = %cond.false799
  %139 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub806 = sub i32 %139, 1, !dbg !5156
  %conv807 = zext i32 %sub806 to i64, !dbg !5156
  %and808 = and i64 %conv807, 262144, !dbg !5156
  %tobool809 = icmp ne i64 %and808, 0, !dbg !5156
  br i1 %tobool809, label %cond.true810, label %cond.false811, !dbg !5156

cond.true810:                                     ; preds = %cond.false805
  br label %cond.end937, !dbg !5156

cond.false811:                                    ; preds = %cond.false805
  %140 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub812 = sub i32 %140, 1, !dbg !5156
  %conv813 = zext i32 %sub812 to i64, !dbg !5156
  %and814 = and i64 %conv813, 131072, !dbg !5156
  %tobool815 = icmp ne i64 %and814, 0, !dbg !5156
  br i1 %tobool815, label %cond.true816, label %cond.false817, !dbg !5156

cond.true816:                                     ; preds = %cond.false811
  br label %cond.end935, !dbg !5156

cond.false817:                                    ; preds = %cond.false811
  %141 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub818 = sub i32 %141, 1, !dbg !5156
  %conv819 = zext i32 %sub818 to i64, !dbg !5156
  %and820 = and i64 %conv819, 65536, !dbg !5156
  %tobool821 = icmp ne i64 %and820, 0, !dbg !5156
  br i1 %tobool821, label %cond.true822, label %cond.false823, !dbg !5156

cond.true822:                                     ; preds = %cond.false817
  br label %cond.end933, !dbg !5156

cond.false823:                                    ; preds = %cond.false817
  %142 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub824 = sub i32 %142, 1, !dbg !5156
  %conv825 = zext i32 %sub824 to i64, !dbg !5156
  %and826 = and i64 %conv825, 32768, !dbg !5156
  %tobool827 = icmp ne i64 %and826, 0, !dbg !5156
  br i1 %tobool827, label %cond.true828, label %cond.false829, !dbg !5156

cond.true828:                                     ; preds = %cond.false823
  br label %cond.end931, !dbg !5156

cond.false829:                                    ; preds = %cond.false823
  %143 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub830 = sub i32 %143, 1, !dbg !5156
  %conv831 = zext i32 %sub830 to i64, !dbg !5156
  %and832 = and i64 %conv831, 16384, !dbg !5156
  %tobool833 = icmp ne i64 %and832, 0, !dbg !5156
  br i1 %tobool833, label %cond.true834, label %cond.false835, !dbg !5156

cond.true834:                                     ; preds = %cond.false829
  br label %cond.end929, !dbg !5156

cond.false835:                                    ; preds = %cond.false829
  %144 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub836 = sub i32 %144, 1, !dbg !5156
  %conv837 = zext i32 %sub836 to i64, !dbg !5156
  %and838 = and i64 %conv837, 8192, !dbg !5156
  %tobool839 = icmp ne i64 %and838, 0, !dbg !5156
  br i1 %tobool839, label %cond.true840, label %cond.false841, !dbg !5156

cond.true840:                                     ; preds = %cond.false835
  br label %cond.end927, !dbg !5156

cond.false841:                                    ; preds = %cond.false835
  %145 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub842 = sub i32 %145, 1, !dbg !5156
  %conv843 = zext i32 %sub842 to i64, !dbg !5156
  %and844 = and i64 %conv843, 4096, !dbg !5156
  %tobool845 = icmp ne i64 %and844, 0, !dbg !5156
  br i1 %tobool845, label %cond.true846, label %cond.false847, !dbg !5156

cond.true846:                                     ; preds = %cond.false841
  br label %cond.end925, !dbg !5156

cond.false847:                                    ; preds = %cond.false841
  %146 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub848 = sub i32 %146, 1, !dbg !5156
  %conv849 = zext i32 %sub848 to i64, !dbg !5156
  %and850 = and i64 %conv849, 2048, !dbg !5156
  %tobool851 = icmp ne i64 %and850, 0, !dbg !5156
  br i1 %tobool851, label %cond.true852, label %cond.false853, !dbg !5156

cond.true852:                                     ; preds = %cond.false847
  br label %cond.end923, !dbg !5156

cond.false853:                                    ; preds = %cond.false847
  %147 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub854 = sub i32 %147, 1, !dbg !5156
  %conv855 = zext i32 %sub854 to i64, !dbg !5156
  %and856 = and i64 %conv855, 1024, !dbg !5156
  %tobool857 = icmp ne i64 %and856, 0, !dbg !5156
  br i1 %tobool857, label %cond.true858, label %cond.false859, !dbg !5156

cond.true858:                                     ; preds = %cond.false853
  br label %cond.end921, !dbg !5156

cond.false859:                                    ; preds = %cond.false853
  %148 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub860 = sub i32 %148, 1, !dbg !5156
  %conv861 = zext i32 %sub860 to i64, !dbg !5156
  %and862 = and i64 %conv861, 512, !dbg !5156
  %tobool863 = icmp ne i64 %and862, 0, !dbg !5156
  br i1 %tobool863, label %cond.true864, label %cond.false865, !dbg !5156

cond.true864:                                     ; preds = %cond.false859
  br label %cond.end919, !dbg !5156

cond.false865:                                    ; preds = %cond.false859
  %149 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub866 = sub i32 %149, 1, !dbg !5156
  %conv867 = zext i32 %sub866 to i64, !dbg !5156
  %and868 = and i64 %conv867, 256, !dbg !5156
  %tobool869 = icmp ne i64 %and868, 0, !dbg !5156
  br i1 %tobool869, label %cond.true870, label %cond.false871, !dbg !5156

cond.true870:                                     ; preds = %cond.false865
  br label %cond.end917, !dbg !5156

cond.false871:                                    ; preds = %cond.false865
  %150 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub872 = sub i32 %150, 1, !dbg !5156
  %conv873 = zext i32 %sub872 to i64, !dbg !5156
  %and874 = and i64 %conv873, 128, !dbg !5156
  %tobool875 = icmp ne i64 %and874, 0, !dbg !5156
  br i1 %tobool875, label %cond.true876, label %cond.false877, !dbg !5156

cond.true876:                                     ; preds = %cond.false871
  br label %cond.end915, !dbg !5156

cond.false877:                                    ; preds = %cond.false871
  %151 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub878 = sub i32 %151, 1, !dbg !5156
  %conv879 = zext i32 %sub878 to i64, !dbg !5156
  %and880 = and i64 %conv879, 64, !dbg !5156
  %tobool881 = icmp ne i64 %and880, 0, !dbg !5156
  br i1 %tobool881, label %cond.true882, label %cond.false883, !dbg !5156

cond.true882:                                     ; preds = %cond.false877
  br label %cond.end913, !dbg !5156

cond.false883:                                    ; preds = %cond.false877
  %152 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub884 = sub i32 %152, 1, !dbg !5156
  %conv885 = zext i32 %sub884 to i64, !dbg !5156
  %and886 = and i64 %conv885, 32, !dbg !5156
  %tobool887 = icmp ne i64 %and886, 0, !dbg !5156
  br i1 %tobool887, label %cond.true888, label %cond.false889, !dbg !5156

cond.true888:                                     ; preds = %cond.false883
  br label %cond.end911, !dbg !5156

cond.false889:                                    ; preds = %cond.false883
  %153 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub890 = sub i32 %153, 1, !dbg !5156
  %conv891 = zext i32 %sub890 to i64, !dbg !5156
  %and892 = and i64 %conv891, 16, !dbg !5156
  %tobool893 = icmp ne i64 %and892, 0, !dbg !5156
  br i1 %tobool893, label %cond.true894, label %cond.false895, !dbg !5156

cond.true894:                                     ; preds = %cond.false889
  br label %cond.end909, !dbg !5156

cond.false895:                                    ; preds = %cond.false889
  %154 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub896 = sub i32 %154, 1, !dbg !5156
  %conv897 = zext i32 %sub896 to i64, !dbg !5156
  %and898 = and i64 %conv897, 8, !dbg !5156
  %tobool899 = icmp ne i64 %and898, 0, !dbg !5156
  br i1 %tobool899, label %cond.true900, label %cond.false901, !dbg !5156

cond.true900:                                     ; preds = %cond.false895
  br label %cond.end907, !dbg !5156

cond.false901:                                    ; preds = %cond.false895
  %155 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub902 = sub i32 %155, 1, !dbg !5156
  %conv903 = zext i32 %sub902 to i64, !dbg !5156
  %and904 = and i64 %conv903, 4, !dbg !5156
  %tobool905 = icmp ne i64 %and904, 0, !dbg !5156
  %156 = zext i1 %tobool905 to i64, !dbg !5156
  %cond906 = select i1 %tobool905, i32 2, i32 1, !dbg !5156
  br label %cond.end907, !dbg !5156

cond.end907:                                      ; preds = %cond.false901, %cond.true900
  %cond908 = phi i32 [ 3, %cond.true900 ], [ %cond906, %cond.false901 ], !dbg !5156
  br label %cond.end909, !dbg !5156

cond.end909:                                      ; preds = %cond.end907, %cond.true894
  %cond910 = phi i32 [ 4, %cond.true894 ], [ %cond908, %cond.end907 ], !dbg !5156
  br label %cond.end911, !dbg !5156

cond.end911:                                      ; preds = %cond.end909, %cond.true888
  %cond912 = phi i32 [ 5, %cond.true888 ], [ %cond910, %cond.end909 ], !dbg !5156
  br label %cond.end913, !dbg !5156

cond.end913:                                      ; preds = %cond.end911, %cond.true882
  %cond914 = phi i32 [ 6, %cond.true882 ], [ %cond912, %cond.end911 ], !dbg !5156
  br label %cond.end915, !dbg !5156

cond.end915:                                      ; preds = %cond.end913, %cond.true876
  %cond916 = phi i32 [ 7, %cond.true876 ], [ %cond914, %cond.end913 ], !dbg !5156
  br label %cond.end917, !dbg !5156

cond.end917:                                      ; preds = %cond.end915, %cond.true870
  %cond918 = phi i32 [ 8, %cond.true870 ], [ %cond916, %cond.end915 ], !dbg !5156
  br label %cond.end919, !dbg !5156

cond.end919:                                      ; preds = %cond.end917, %cond.true864
  %cond920 = phi i32 [ 9, %cond.true864 ], [ %cond918, %cond.end917 ], !dbg !5156
  br label %cond.end921, !dbg !5156

cond.end921:                                      ; preds = %cond.end919, %cond.true858
  %cond922 = phi i32 [ 10, %cond.true858 ], [ %cond920, %cond.end919 ], !dbg !5156
  br label %cond.end923, !dbg !5156

cond.end923:                                      ; preds = %cond.end921, %cond.true852
  %cond924 = phi i32 [ 11, %cond.true852 ], [ %cond922, %cond.end921 ], !dbg !5156
  br label %cond.end925, !dbg !5156

cond.end925:                                      ; preds = %cond.end923, %cond.true846
  %cond926 = phi i32 [ 12, %cond.true846 ], [ %cond924, %cond.end923 ], !dbg !5156
  br label %cond.end927, !dbg !5156

cond.end927:                                      ; preds = %cond.end925, %cond.true840
  %cond928 = phi i32 [ 13, %cond.true840 ], [ %cond926, %cond.end925 ], !dbg !5156
  br label %cond.end929, !dbg !5156

cond.end929:                                      ; preds = %cond.end927, %cond.true834
  %cond930 = phi i32 [ 14, %cond.true834 ], [ %cond928, %cond.end927 ], !dbg !5156
  br label %cond.end931, !dbg !5156

cond.end931:                                      ; preds = %cond.end929, %cond.true828
  %cond932 = phi i32 [ 15, %cond.true828 ], [ %cond930, %cond.end929 ], !dbg !5156
  br label %cond.end933, !dbg !5156

cond.end933:                                      ; preds = %cond.end931, %cond.true822
  %cond934 = phi i32 [ 16, %cond.true822 ], [ %cond932, %cond.end931 ], !dbg !5156
  br label %cond.end935, !dbg !5156

cond.end935:                                      ; preds = %cond.end933, %cond.true816
  %cond936 = phi i32 [ 17, %cond.true816 ], [ %cond934, %cond.end933 ], !dbg !5156
  br label %cond.end937, !dbg !5156

cond.end937:                                      ; preds = %cond.end935, %cond.true810
  %cond938 = phi i32 [ 18, %cond.true810 ], [ %cond936, %cond.end935 ], !dbg !5156
  br label %cond.end939, !dbg !5156

cond.end939:                                      ; preds = %cond.end937, %cond.true804
  %cond940 = phi i32 [ 19, %cond.true804 ], [ %cond938, %cond.end937 ], !dbg !5156
  br label %cond.end941, !dbg !5156

cond.end941:                                      ; preds = %cond.end939, %cond.true798
  %cond942 = phi i32 [ 20, %cond.true798 ], [ %cond940, %cond.end939 ], !dbg !5156
  br label %cond.end943, !dbg !5156

cond.end943:                                      ; preds = %cond.end941, %cond.true792
  %cond944 = phi i32 [ 21, %cond.true792 ], [ %cond942, %cond.end941 ], !dbg !5156
  br label %cond.end945, !dbg !5156

cond.end945:                                      ; preds = %cond.end943, %cond.true786
  %cond946 = phi i32 [ 22, %cond.true786 ], [ %cond944, %cond.end943 ], !dbg !5156
  br label %cond.end947, !dbg !5156

cond.end947:                                      ; preds = %cond.end945, %cond.true780
  %cond948 = phi i32 [ 23, %cond.true780 ], [ %cond946, %cond.end945 ], !dbg !5156
  br label %cond.end949, !dbg !5156

cond.end949:                                      ; preds = %cond.end947, %cond.true774
  %cond950 = phi i32 [ 24, %cond.true774 ], [ %cond948, %cond.end947 ], !dbg !5156
  br label %cond.end951, !dbg !5156

cond.end951:                                      ; preds = %cond.end949, %cond.true768
  %cond952 = phi i32 [ 25, %cond.true768 ], [ %cond950, %cond.end949 ], !dbg !5156
  br label %cond.end953, !dbg !5156

cond.end953:                                      ; preds = %cond.end951, %cond.true762
  %cond954 = phi i32 [ 26, %cond.true762 ], [ %cond952, %cond.end951 ], !dbg !5156
  br label %cond.end955, !dbg !5156

cond.end955:                                      ; preds = %cond.end953, %cond.true756
  %cond956 = phi i32 [ 27, %cond.true756 ], [ %cond954, %cond.end953 ], !dbg !5156
  br label %cond.end957, !dbg !5156

cond.end957:                                      ; preds = %cond.end955, %cond.true750
  %cond958 = phi i32 [ 28, %cond.true750 ], [ %cond956, %cond.end955 ], !dbg !5156
  br label %cond.end959, !dbg !5156

cond.end959:                                      ; preds = %cond.end957, %cond.true744
  %cond960 = phi i32 [ 29, %cond.true744 ], [ %cond958, %cond.end957 ], !dbg !5156
  br label %cond.end961, !dbg !5156

cond.end961:                                      ; preds = %cond.end959, %cond.true738
  %cond962 = phi i32 [ 30, %cond.true738 ], [ %cond960, %cond.end959 ], !dbg !5156
  br label %cond.end963, !dbg !5156

cond.end963:                                      ; preds = %cond.end961, %cond.true732
  %cond964 = phi i32 [ 31, %cond.true732 ], [ %cond962, %cond.end961 ], !dbg !5156
  br label %cond.end965, !dbg !5156

cond.end965:                                      ; preds = %cond.end963, %cond.true726
  %cond966 = phi i32 [ 32, %cond.true726 ], [ %cond964, %cond.end963 ], !dbg !5156
  br label %cond.end967, !dbg !5156

cond.end967:                                      ; preds = %cond.end965, %cond.true720
  %cond968 = phi i32 [ 33, %cond.true720 ], [ %cond966, %cond.end965 ], !dbg !5156
  br label %cond.end969, !dbg !5156

cond.end969:                                      ; preds = %cond.end967, %cond.true714
  %cond970 = phi i32 [ 34, %cond.true714 ], [ %cond968, %cond.end967 ], !dbg !5156
  br label %cond.end971, !dbg !5156

cond.end971:                                      ; preds = %cond.end969, %cond.true708
  %cond972 = phi i32 [ 35, %cond.true708 ], [ %cond970, %cond.end969 ], !dbg !5156
  br label %cond.end973, !dbg !5156

cond.end973:                                      ; preds = %cond.end971, %cond.true702
  %cond974 = phi i32 [ 36, %cond.true702 ], [ %cond972, %cond.end971 ], !dbg !5156
  br label %cond.end975, !dbg !5156

cond.end975:                                      ; preds = %cond.end973, %cond.true696
  %cond976 = phi i32 [ 37, %cond.true696 ], [ %cond974, %cond.end973 ], !dbg !5156
  br label %cond.end977, !dbg !5156

cond.end977:                                      ; preds = %cond.end975, %cond.true690
  %cond978 = phi i32 [ 38, %cond.true690 ], [ %cond976, %cond.end975 ], !dbg !5156
  br label %cond.end979, !dbg !5156

cond.end979:                                      ; preds = %cond.end977, %cond.true684
  %cond980 = phi i32 [ 39, %cond.true684 ], [ %cond978, %cond.end977 ], !dbg !5156
  br label %cond.end981, !dbg !5156

cond.end981:                                      ; preds = %cond.end979, %cond.true678
  %cond982 = phi i32 [ 40, %cond.true678 ], [ %cond980, %cond.end979 ], !dbg !5156
  br label %cond.end983, !dbg !5156

cond.end983:                                      ; preds = %cond.end981, %cond.true672
  %cond984 = phi i32 [ 41, %cond.true672 ], [ %cond982, %cond.end981 ], !dbg !5156
  br label %cond.end985, !dbg !5156

cond.end985:                                      ; preds = %cond.end983, %cond.true666
  %cond986 = phi i32 [ 42, %cond.true666 ], [ %cond984, %cond.end983 ], !dbg !5156
  br label %cond.end987, !dbg !5156

cond.end987:                                      ; preds = %cond.end985, %cond.true660
  %cond988 = phi i32 [ 43, %cond.true660 ], [ %cond986, %cond.end985 ], !dbg !5156
  br label %cond.end989, !dbg !5156

cond.end989:                                      ; preds = %cond.end987, %cond.true654
  %cond990 = phi i32 [ 44, %cond.true654 ], [ %cond988, %cond.end987 ], !dbg !5156
  br label %cond.end991, !dbg !5156

cond.end991:                                      ; preds = %cond.end989, %cond.true648
  %cond992 = phi i32 [ 45, %cond.true648 ], [ %cond990, %cond.end989 ], !dbg !5156
  br label %cond.end993, !dbg !5156

cond.end993:                                      ; preds = %cond.end991, %cond.true642
  %cond994 = phi i32 [ 46, %cond.true642 ], [ %cond992, %cond.end991 ], !dbg !5156
  br label %cond.end995, !dbg !5156

cond.end995:                                      ; preds = %cond.end993, %cond.true636
  %cond996 = phi i32 [ 47, %cond.true636 ], [ %cond994, %cond.end993 ], !dbg !5156
  br label %cond.end997, !dbg !5156

cond.end997:                                      ; preds = %cond.end995, %cond.true630
  %cond998 = phi i32 [ 48, %cond.true630 ], [ %cond996, %cond.end995 ], !dbg !5156
  br label %cond.end999, !dbg !5156

cond.end999:                                      ; preds = %cond.end997, %cond.true624
  %cond1000 = phi i32 [ 49, %cond.true624 ], [ %cond998, %cond.end997 ], !dbg !5156
  br label %cond.end1001, !dbg !5156

cond.end1001:                                     ; preds = %cond.end999, %cond.true618
  %cond1002 = phi i32 [ 50, %cond.true618 ], [ %cond1000, %cond.end999 ], !dbg !5156
  br label %cond.end1003, !dbg !5156

cond.end1003:                                     ; preds = %cond.end1001, %cond.true612
  %cond1004 = phi i32 [ 51, %cond.true612 ], [ %cond1002, %cond.end1001 ], !dbg !5156
  br label %cond.end1005, !dbg !5156

cond.end1005:                                     ; preds = %cond.end1003, %cond.true606
  %cond1006 = phi i32 [ 52, %cond.true606 ], [ %cond1004, %cond.end1003 ], !dbg !5156
  br label %cond.end1007, !dbg !5156

cond.end1007:                                     ; preds = %cond.end1005, %cond.true600
  %cond1008 = phi i32 [ 53, %cond.true600 ], [ %cond1006, %cond.end1005 ], !dbg !5156
  br label %cond.end1009, !dbg !5156

cond.end1009:                                     ; preds = %cond.end1007, %cond.true594
  %cond1010 = phi i32 [ 54, %cond.true594 ], [ %cond1008, %cond.end1007 ], !dbg !5156
  br label %cond.end1011, !dbg !5156

cond.end1011:                                     ; preds = %cond.end1009, %cond.true588
  %cond1012 = phi i32 [ 55, %cond.true588 ], [ %cond1010, %cond.end1009 ], !dbg !5156
  br label %cond.end1013, !dbg !5156

cond.end1013:                                     ; preds = %cond.end1011, %cond.true582
  %cond1014 = phi i32 [ 56, %cond.true582 ], [ %cond1012, %cond.end1011 ], !dbg !5156
  br label %cond.end1015, !dbg !5156

cond.end1015:                                     ; preds = %cond.end1013, %cond.true576
  %cond1016 = phi i32 [ 57, %cond.true576 ], [ %cond1014, %cond.end1013 ], !dbg !5156
  br label %cond.end1017, !dbg !5156

cond.end1017:                                     ; preds = %cond.end1015, %cond.true570
  %cond1018 = phi i32 [ 58, %cond.true570 ], [ %cond1016, %cond.end1015 ], !dbg !5156
  br label %cond.end1019, !dbg !5156

cond.end1019:                                     ; preds = %cond.end1017, %cond.true564
  %cond1020 = phi i32 [ 59, %cond.true564 ], [ %cond1018, %cond.end1017 ], !dbg !5156
  br label %cond.end1021, !dbg !5156

cond.end1021:                                     ; preds = %cond.end1019, %cond.true558
  %cond1022 = phi i32 [ 60, %cond.true558 ], [ %cond1020, %cond.end1019 ], !dbg !5156
  br label %cond.end1023, !dbg !5156

cond.end1023:                                     ; preds = %cond.end1021, %cond.true552
  %cond1024 = phi i32 [ 61, %cond.true552 ], [ %cond1022, %cond.end1021 ], !dbg !5156
  br label %cond.end1025, !dbg !5156

cond.end1025:                                     ; preds = %cond.end1023, %cond.true546
  %cond1026 = phi i32 [ 62, %cond.true546 ], [ %cond1024, %cond.end1023 ], !dbg !5156
  br label %cond.end1027, !dbg !5156

cond.end1027:                                     ; preds = %cond.end1025, %cond.true540
  %cond1028 = phi i32 [ 63, %cond.true540 ], [ %cond1026, %cond.end1025 ], !dbg !5156
  br label %cond.end1029, !dbg !5156

cond.end1029:                                     ; preds = %cond.end1027, %cond.true534
  %cond1030 = phi i32 [ 0, %cond.true534 ], [ %cond1028, %cond.end1027 ], !dbg !5156
  br label %cond.end1032, !dbg !5156

cond.false1031:                                   ; preds = %cond.true528
  br label %cond.end1032, !dbg !5156

cond.end1032:                                     ; preds = %cond.false1031, %cond.end1029
  %cond1033 = phi i32 [ %cond1030, %cond.end1029 ], [ -1, %cond.false1031 ], !dbg !5156
  br label %cond.end1037, !dbg !5156

cond.false1034:                                   ; preds = %cond.false526
  %157 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %sub1035 = sub i32 %157, 1, !dbg !5156
  %call1036 = call i32 @__ilog2_u32(i32 %sub1035) #10, !dbg !5156
  br label %cond.end1037, !dbg !5156

cond.end1037:                                     ; preds = %cond.false1034, %cond.end1032
  %cond1038 = phi i32 [ %cond1033, %cond.end1032 ], [ %call1036, %cond.false1034 ], !dbg !5156
  %add1039 = add i32 %cond1038, 1, !dbg !5156
  %sh_prom1040 = zext i32 %add1039 to i64, !dbg !5156
  %shl1041 = shl i64 1, %sh_prom1040, !dbg !5156
  br label %cond.end1042, !dbg !5156

cond.end1042:                                     ; preds = %cond.end1037, %cond.true525
  %cond1043 = phi i64 [ 1, %cond.true525 ], [ %shl1041, %cond.end1037 ], !dbg !5156
  br label %cond.end1047, !dbg !5156

cond.false1044:                                   ; preds = %cond.end520
  %158 = load i32, i32* %ch_cnt, align 4, !dbg !5156
  %conv1045 = zext i32 %158 to i64, !dbg !5156
  %call1046 = call i64 @__roundup_pow_of_two(i64 %conv1045) #10, !dbg !5156
  br label %cond.end1047, !dbg !5156

cond.end1047:                                     ; preds = %cond.false1044, %cond.end1042
  %cond1048 = phi i64 [ %cond1043, %cond.end1042 ], [ %call1046, %cond.false1044 ], !dbg !5156
  %159 = load i64, i64* %dt_chunk, align 8, !dbg !5157
  %div1049 = udiv i64 %159, %cond1048, !dbg !5157
  store i64 %div1049, i64* %dt_chunk, align 8, !dbg !5157
  %160 = load i8, i8* %write.addr, align 1, !dbg !5158
  %tobool1050 = trunc i8 %160 to i1, !dbg !5158
  br i1 %tobool1050, label %if.then, label %if.else, !dbg !5160

if.then:                                          ; preds = %cond.end1047
  store i32 0, i32* %i, align 4, !dbg !5161
  %161 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5163
  %wr_ch_cnt1051 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %161, i32 0, i32 2, !dbg !5164
  %162 = load i16, i16* %wr_ch_cnt1051, align 8, !dbg !5164
  %conv1052 = zext i16 %162 to i32, !dbg !5163
  store i32 %conv1052, i32* %cnt, align 4, !dbg !5165
  %163 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5166
  %wr_edma = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %163, i32 0, i32 1, !dbg !5167
  store %struct.dma_device* %wr_edma, %struct.dma_device** %dma, align 8, !dbg !5168
  %164 = load i32, i32* %wr_alloc.addr, align 4, !dbg !5169
  store i32 %164, i32* %alloc, align 4, !dbg !5170
  store i32 0, i32* %off_alloc, align 4, !dbg !5171
  br label %if.end, !dbg !5172

if.else:                                          ; preds = %cond.end1047
  %165 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5173
  %wr_ch_cnt1053 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %165, i32 0, i32 2, !dbg !5175
  %166 = load i16, i16* %wr_ch_cnt1053, align 8, !dbg !5175
  %conv1054 = zext i16 %166 to i32, !dbg !5173
  store i32 %conv1054, i32* %i, align 4, !dbg !5176
  %167 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5177
  %rd_ch_cnt1055 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %167, i32 0, i32 4, !dbg !5178
  %168 = load i16, i16* %rd_ch_cnt1055, align 8, !dbg !5178
  %conv1056 = zext i16 %168 to i32, !dbg !5177
  store i32 %conv1056, i32* %cnt, align 4, !dbg !5179
  %169 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5180
  %rd_edma = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %169, i32 0, i32 3, !dbg !5181
  store %struct.dma_device* %rd_edma, %struct.dma_device** %dma, align 8, !dbg !5182
  %170 = load i32, i32* %rd_alloc.addr, align 4, !dbg !5183
  store i32 %170, i32* %alloc, align 4, !dbg !5184
  %171 = load i32, i32* %wr_alloc.addr, align 4, !dbg !5185
  store i32 %171, i32* %off_alloc, align 4, !dbg !5186
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %172 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5187
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %172, i32 0, i32 3, !dbg !5188
  call void @INIT_LIST_HEAD(%struct.list_head* %channels) #9, !dbg !5189
  store i32 0, i32* %j, align 4, !dbg !5190
  br label %for.cond, !dbg !5192

for.cond:                                         ; preds = %for.inc, %if.end
  %173 = load i32, i32* %alloc, align 4, !dbg !5193
  %tobool1057 = icmp ne i32 %173, 0, !dbg !5193
  br i1 %tobool1057, label %land.rhs, label %lor.lhs.false, !dbg !5195

lor.lhs.false:                                    ; preds = %for.cond
  %174 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5196
  %nr_irqs = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %174, i32 0, i32 9, !dbg !5197
  %175 = load i32, i32* %nr_irqs, align 8, !dbg !5197
  %cmp1058 = icmp eq i32 %175, 1, !dbg !5198
  br i1 %cmp1058, label %land.rhs, label %land.end, !dbg !5199

land.rhs:                                         ; preds = %lor.lhs.false, %for.cond
  %176 = load i32, i32* %j, align 4, !dbg !5200
  %177 = load i32, i32* %cnt, align 4, !dbg !5201
  %cmp1060 = icmp ult i32 %176, %177, !dbg !5202
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %178 = phi i1 [ false, %lor.lhs.false ], [ %cmp1060, %land.rhs ], !dbg !5203
  br i1 %178, label %for.body, label %for.end, !dbg !5204

for.body:                                         ; preds = %land.end
  %179 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5205
  %chan1062 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %179, i32 0, i32 12, !dbg !5207
  %180 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan1062, align 8, !dbg !5207
  %181 = load i32, i32* %i, align 4, !dbg !5208
  %idxprom = zext i32 %181 to i64, !dbg !5205
  %arrayidx = getelementptr %struct.dw_edma_chan, %struct.dw_edma_chan* %180, i64 %idxprom, !dbg !5205
  store %struct.dw_edma_chan* %arrayidx, %struct.dw_edma_chan** %chan, align 8, !dbg !5209
  %182 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5210
  %call1063 = call i8* @devm_kzalloc(%struct.device* %182, i64 24, i32 3264) #9, !dbg !5211
  %183 = bitcast i8* %call1063 to %struct.dw_edma_region*, !dbg !5211
  store %struct.dw_edma_region* %183, %struct.dw_edma_region** %dt_region, align 8, !dbg !5212
  %184 = load %struct.dw_edma_region*, %struct.dw_edma_region** %dt_region, align 8, !dbg !5213
  %tobool1064 = icmp ne %struct.dw_edma_region* %184, null, !dbg !5213
  br i1 %tobool1064, label %if.end1066, label %if.then1065, !dbg !5215

if.then1065:                                      ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !5216
  br label %return, !dbg !5216

if.end1066:                                       ; preds = %for.body
  %185 = load %struct.dw_edma_region*, %struct.dw_edma_region** %dt_region, align 8, !dbg !5217
  %186 = bitcast %struct.dw_edma_region* %185 to i8*, !dbg !5217
  %187 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5218
  %vc = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %187, i32 0, i32 0, !dbg !5219
  %chan1067 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 0, !dbg !5220
  %private = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan1067, i32 0, i32 13, !dbg !5221
  store i8* %186, i8** %private, align 8, !dbg !5222
  %188 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !5223
  %189 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5224
  %chip1068 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %189, i32 0, i32 1, !dbg !5225
  store %struct.dw_edma_chip* %188, %struct.dw_edma_chip** %chip1068, align 8, !dbg !5226
  %190 = load i32, i32* %j, align 4, !dbg !5227
  %191 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5228
  %id = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %191, i32 0, i32 2, !dbg !5229
  store i32 %190, i32* %id, align 8, !dbg !5230
  %192 = load i8, i8* %write.addr, align 1, !dbg !5231
  %tobool1069 = trunc i8 %192 to i1, !dbg !5231
  %193 = zext i1 %tobool1069 to i64, !dbg !5231
  %cond1071 = select i1 %tobool1069, i32 0, i32 1, !dbg !5231
  %194 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5232
  %dir = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %194, i32 0, i32 3, !dbg !5233
  store i32 %cond1071, i32* %dir, align 4, !dbg !5234
  %195 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5235
  %configured = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %195, i32 0, i32 10, !dbg !5236
  store i8 0, i8* %configured, align 4, !dbg !5237
  %196 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5238
  %request = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %196, i32 0, i32 8, !dbg !5239
  store i32 0, i32* %request, align 4, !dbg !5240
  %197 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5241
  %status = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %197, i32 0, i32 9, !dbg !5242
  store i32 0, i32* %status, align 8, !dbg !5243
  %198 = load i64, i64* %ll_chunk, align 8, !dbg !5244
  %199 = load i32, i32* %i, align 4, !dbg !5245
  %conv1072 = zext i32 %199 to i64, !dbg !5245
  %mul = mul i64 %198, %conv1072, !dbg !5246
  %200 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5247
  %ll_off = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %200, i32 0, i32 4, !dbg !5248
  store i64 %mul, i64* %ll_off, align 8, !dbg !5249
  %201 = load i64, i64* %ll_chunk, align 8, !dbg !5250
  %div1073 = udiv i64 %201, 24, !dbg !5251
  %sub1074 = sub i64 %div1073, 1, !dbg !5252
  %conv1075 = trunc i64 %sub1074 to i32, !dbg !5253
  %202 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5254
  %ll_max = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %202, i32 0, i32 5, !dbg !5255
  store i32 %conv1075, i32* %ll_max, align 8, !dbg !5256
  %203 = load i64, i64* %dt_chunk, align 8, !dbg !5257
  %204 = load i32, i32* %i, align 4, !dbg !5258
  %conv1076 = zext i32 %204 to i64, !dbg !5258
  %mul1077 = mul i64 %203, %conv1076, !dbg !5259
  %205 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5260
  %dt_off = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %205, i32 0, i32 6, !dbg !5261
  store i64 %mul1077, i64* %dt_off, align 8, !dbg !5262
  %206 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5263
  %nr_irqs1078 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %206, i32 0, i32 9, !dbg !5265
  %207 = load i32, i32* %nr_irqs1078, align 8, !dbg !5265
  %cmp1079 = icmp eq i32 %207, 1, !dbg !5266
  br i1 %cmp1079, label %if.then1081, label %if.else1082, !dbg !5267

if.then1081:                                      ; preds = %if.end1066
  store i32 0, i32* %pos, align 4, !dbg !5268
  br label %if.end1084, !dbg !5269

if.else1082:                                      ; preds = %if.end1066
  %208 = load i32, i32* %off_alloc, align 4, !dbg !5270
  %209 = load i32, i32* %j, align 4, !dbg !5271
  %210 = load i32, i32* %alloc, align 4, !dbg !5272
  %rem = urem i32 %209, %210, !dbg !5273
  %add1083 = add i32 %208, %rem, !dbg !5274
  store i32 %add1083, i32* %pos, align 4, !dbg !5275
  br label %if.end1084

if.end1084:                                       ; preds = %if.else1082, %if.then1081
  %211 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5276
  %irq1085 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %211, i32 0, i32 8, !dbg !5277
  %212 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %irq1085, align 8, !dbg !5277
  %213 = load i32, i32* %pos, align 4, !dbg !5278
  %idxprom1086 = zext i32 %213 to i64, !dbg !5276
  %arrayidx1087 = getelementptr %struct.dw_edma_irq, %struct.dw_edma_irq* %212, i64 %idxprom1086, !dbg !5276
  store %struct.dw_edma_irq* %arrayidx1087, %struct.dw_edma_irq** %irq, align 8, !dbg !5279
  %214 = load i8, i8* %write.addr, align 1, !dbg !5280
  %tobool1088 = trunc i8 %214 to i1, !dbg !5280
  br i1 %tobool1088, label %if.then1089, label %if.else1094, !dbg !5282

if.then1089:                                      ; preds = %if.end1084
  %215 = load i32, i32* %j, align 4, !dbg !5283
  %sh_prom1090 = zext i32 %215 to i64, !dbg !5283
  %shl1091 = shl i64 1, %sh_prom1090, !dbg !5283
  %216 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %irq, align 8, !dbg !5284
  %wr_mask = getelementptr inbounds %struct.dw_edma_irq, %struct.dw_edma_irq* %216, i32 0, i32 1, !dbg !5285
  %217 = load i32, i32* %wr_mask, align 4, !dbg !5286
  %conv1092 = zext i32 %217 to i64, !dbg !5286
  %or = or i64 %conv1092, %shl1091, !dbg !5286
  %conv1093 = trunc i64 %or to i32, !dbg !5286
  store i32 %conv1093, i32* %wr_mask, align 4, !dbg !5286
  br label %if.end1100, !dbg !5284

if.else1094:                                      ; preds = %if.end1084
  %218 = load i32, i32* %j, align 4, !dbg !5287
  %sh_prom1095 = zext i32 %218 to i64, !dbg !5287
  %shl1096 = shl i64 1, %sh_prom1095, !dbg !5287
  %219 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %irq, align 8, !dbg !5288
  %rd_mask = getelementptr inbounds %struct.dw_edma_irq, %struct.dw_edma_irq* %219, i32 0, i32 2, !dbg !5289
  %220 = load i32, i32* %rd_mask, align 8, !dbg !5290
  %conv1097 = zext i32 %220 to i64, !dbg !5290
  %or1098 = or i64 %conv1097, %shl1096, !dbg !5290
  %conv1099 = trunc i64 %or1098 to i32, !dbg !5290
  store i32 %conv1099, i32* %rd_mask, align 8, !dbg !5290
  br label %if.end1100

if.end1100:                                       ; preds = %if.else1094, %if.then1089
  %221 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5291
  %222 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %irq, align 8, !dbg !5292
  %dw1101 = getelementptr inbounds %struct.dw_edma_irq, %struct.dw_edma_irq* %222, i32 0, i32 3, !dbg !5293
  store %struct.dw_edma* %221, %struct.dw_edma** %dw1101, align 8, !dbg !5294
  %223 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5295
  %msi = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %223, i32 0, i32 7, !dbg !5296
  %224 = bitcast %struct.msi_msg* %msi to i8*, !dbg !5297
  %225 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %irq, align 8, !dbg !5298
  %msi1102 = getelementptr inbounds %struct.dw_edma_irq, %struct.dw_edma_irq* %225, i32 0, i32 0, !dbg !5299
  %226 = bitcast %struct.msi_msg* %msi1102 to i8*, !dbg !5297
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* align 8 %226, i64 12, i1 false), !dbg !5297
  %227 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5300
  %vc1103 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %227, i32 0, i32 0, !dbg !5301
  %desc_free = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc1103, i32 0, i32 2, !dbg !5302
  store void (%struct.virt_dma_desc*)* @vchan_free_desc, void (%struct.virt_dma_desc*)** %desc_free, align 8, !dbg !5303
  %228 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5304
  %vc1104 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %228, i32 0, i32 0, !dbg !5305
  %229 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5306
  call void @vchan_init(%struct.virt_dma_chan* %vc1104, %struct.dma_device* %229) #9, !dbg !5307
  %230 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5308
  %dt_region1105 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %230, i32 0, i32 7, !dbg !5309
  %paddr = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %dt_region1105, i32 0, i32 0, !dbg !5310
  %231 = load i64, i64* %paddr, align 8, !dbg !5310
  %232 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5311
  %dt_off1106 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %232, i32 0, i32 6, !dbg !5312
  %233 = load i64, i64* %dt_off1106, align 8, !dbg !5312
  %add1107 = add i64 %231, %233, !dbg !5313
  %234 = load %struct.dw_edma_region*, %struct.dw_edma_region** %dt_region, align 8, !dbg !5314
  %paddr1108 = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %234, i32 0, i32 0, !dbg !5315
  store i64 %add1107, i64* %paddr1108, align 8, !dbg !5316
  %235 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5317
  %dt_region1109 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %235, i32 0, i32 7, !dbg !5318
  %vaddr = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %dt_region1109, i32 0, i32 1, !dbg !5319
  %236 = load i8*, i8** %vaddr, align 8, !dbg !5319
  %237 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5320
  %dt_off1110 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %237, i32 0, i32 6, !dbg !5321
  %238 = load i64, i64* %dt_off1110, align 8, !dbg !5321
  %add.ptr = getelementptr i8, i8* %236, i64 %238, !dbg !5322
  %239 = load %struct.dw_edma_region*, %struct.dw_edma_region** %dt_region, align 8, !dbg !5323
  %vaddr1111 = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %239, i32 0, i32 1, !dbg !5324
  store i8* %add.ptr, i8** %vaddr1111, align 8, !dbg !5325
  %240 = load i64, i64* %dt_chunk, align 8, !dbg !5326
  %241 = load %struct.dw_edma_region*, %struct.dw_edma_region** %dt_region, align 8, !dbg !5327
  %sz1112 = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %241, i32 0, i32 2, !dbg !5328
  store i64 %240, i64* %sz1112, align 8, !dbg !5329
  %242 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5330
  %call1113 = call i32 @dw_edma_v0_core_device_config(%struct.dw_edma_chan* %242) #9, !dbg !5331
  br label %for.inc, !dbg !5332

for.inc:                                          ; preds = %if.end1100
  %243 = load i32, i32* %j, align 4, !dbg !5333
  %inc = add i32 %243, 1, !dbg !5333
  store i32 %inc, i32* %j, align 4, !dbg !5333
  %244 = load i32, i32* %i, align 4, !dbg !5334
  %inc1114 = add i32 %244, 1, !dbg !5334
  store i32 %inc1114, i32* %i, align 4, !dbg !5334
  br label %for.cond, !dbg !5335, !llvm.loop !5336

for.end:                                          ; preds = %land.end
  %245 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5338
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %245, i32 0, i32 6, !dbg !5338
  call void @__dma_cap_zero(%struct.dma_cap_mask_t* %cap_mask) #9, !dbg !5338
  %246 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5339
  %cap_mask1115 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %246, i32 0, i32 6, !dbg !5339
  call void @__dma_cap_set(i32 10, %struct.dma_cap_mask_t* %cap_mask1115) #9, !dbg !5339
  %247 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5340
  %cap_mask1116 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %247, i32 0, i32 6, !dbg !5340
  call void @__dma_cap_set(i32 11, %struct.dma_cap_mask_t* %cap_mask1116) #9, !dbg !5340
  %248 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5341
  %cap_mask1117 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %248, i32 0, i32 6, !dbg !5341
  call void @__dma_cap_set(i32 8, %struct.dma_cap_mask_t* %cap_mask1117) #9, !dbg !5341
  %249 = load i8, i8* %write.addr, align 1, !dbg !5342
  %tobool1118 = trunc i8 %249 to i1, !dbg !5342
  %250 = zext i1 %tobool1118 to i64, !dbg !5342
  %cond1120 = select i1 %tobool1118, i32 2, i32 1, !dbg !5342
  %sh_prom1121 = zext i32 %cond1120 to i64, !dbg !5342
  %shl1122 = shl i64 1, %sh_prom1121, !dbg !5342
  %conv1123 = trunc i64 %shl1122 to i32, !dbg !5342
  %251 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5343
  %directions = getelementptr inbounds %struct.dma_device, %struct.dma_device* %251, i32 0, i32 21, !dbg !5344
  store i32 %conv1123, i32* %directions, align 8, !dbg !5345
  %252 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5346
  %src_addr_widths = getelementptr inbounds %struct.dma_device, %struct.dma_device* %252, i32 0, i32 19, !dbg !5347
  store i32 16, i32* %src_addr_widths, align 8, !dbg !5348
  %253 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5349
  %dst_addr_widths = getelementptr inbounds %struct.dma_device, %struct.dma_device* %253, i32 0, i32 20, !dbg !5350
  store i32 16, i32* %dst_addr_widths, align 4, !dbg !5351
  %254 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5352
  %residue_granularity = getelementptr inbounds %struct.dma_device, %struct.dma_device* %254, i32 0, i32 26, !dbg !5353
  store i32 0, i32* %residue_granularity, align 4, !dbg !5354
  %255 = load i32, i32* %cnt, align 4, !dbg !5355
  %256 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5356
  %chancnt = getelementptr inbounds %struct.dma_device, %struct.dma_device* %256, i32 0, i32 1, !dbg !5357
  store i32 %255, i32* %chancnt, align 4, !dbg !5358
  %257 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !5359
  %dev1124 = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %257, i32 0, i32 0, !dbg !5360
  %258 = load %struct.device*, %struct.device** %dev1124, align 8, !dbg !5360
  %259 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5361
  %dev1125 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %259, i32 0, i32 15, !dbg !5362
  store %struct.device* %258, %struct.device** %dev1125, align 8, !dbg !5363
  %260 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5364
  %device_alloc_chan_resources = getelementptr inbounds %struct.dma_device, %struct.dma_device* %260, i32 0, i32 27, !dbg !5365
  store i32 (%struct.dma_chan*)* @dw_edma_alloc_chan_resources, i32 (%struct.dma_chan*)** %device_alloc_chan_resources, align 8, !dbg !5366
  %261 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5367
  %device_free_chan_resources = getelementptr inbounds %struct.dma_device, %struct.dma_device* %261, i32 0, i32 28, !dbg !5368
  store void (%struct.dma_chan*)* @dw_edma_free_chan_resources, void (%struct.dma_chan*)** %device_free_chan_resources, align 8, !dbg !5369
  %262 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5370
  %device_config = getelementptr inbounds %struct.dma_device, %struct.dma_device* %262, i32 0, i32 42, !dbg !5371
  store i32 (%struct.dma_chan*, %struct.dma_slave_config*)* @dw_edma_device_config, i32 (%struct.dma_chan*, %struct.dma_slave_config*)** %device_config, align 8, !dbg !5372
  %263 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5373
  %device_pause = getelementptr inbounds %struct.dma_device, %struct.dma_device* %263, i32 0, i32 43, !dbg !5374
  store i32 (%struct.dma_chan*)* @dw_edma_device_pause, i32 (%struct.dma_chan*)** %device_pause, align 8, !dbg !5375
  %264 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5376
  %device_resume = getelementptr inbounds %struct.dma_device, %struct.dma_device* %264, i32 0, i32 44, !dbg !5377
  store i32 (%struct.dma_chan*)* @dw_edma_device_resume, i32 (%struct.dma_chan*)** %device_resume, align 8, !dbg !5378
  %265 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5379
  %device_terminate_all = getelementptr inbounds %struct.dma_device, %struct.dma_device* %265, i32 0, i32 45, !dbg !5380
  store i32 (%struct.dma_chan*)* @dw_edma_device_terminate_all, i32 (%struct.dma_chan*)** %device_terminate_all, align 8, !dbg !5381
  %266 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5382
  %device_issue_pending = getelementptr inbounds %struct.dma_device, %struct.dma_device* %266, i32 0, i32 48, !dbg !5383
  store void (%struct.dma_chan*)* @dw_edma_device_issue_pending, void (%struct.dma_chan*)** %device_issue_pending, align 8, !dbg !5384
  %267 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5385
  %device_tx_status = getelementptr inbounds %struct.dma_device, %struct.dma_device* %267, i32 0, i32 47, !dbg !5386
  store i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)* @dw_edma_device_tx_status, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)** %device_tx_status, align 8, !dbg !5387
  %268 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5388
  %device_prep_slave_sg = getelementptr inbounds %struct.dma_device, %struct.dma_device* %268, i32 0, i32 37, !dbg !5389
  store %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)* @dw_edma_device_prep_slave_sg, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)** %device_prep_slave_sg, align 8, !dbg !5390
  %269 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5391
  %device_prep_dma_cyclic = getelementptr inbounds %struct.dma_device, %struct.dma_device* %269, i32 0, i32 38, !dbg !5392
  store %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)* @dw_edma_device_prep_dma_cyclic, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)** %device_prep_dma_cyclic, align 8, !dbg !5393
  %270 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5394
  %dev1126 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %270, i32 0, i32 15, !dbg !5395
  %271 = load %struct.device*, %struct.device** %dev1126, align 8, !dbg !5395
  %call1127 = call i32 @dma_set_max_seg_size(%struct.device* %271, i32 -1) #9, !dbg !5396
  %272 = load %struct.dma_device*, %struct.dma_device** %dma, align 8, !dbg !5397
  %call1128 = call i32 @dma_async_device_register(%struct.dma_device* %272) #9, !dbg !5398
  store i32 %call1128, i32* %err, align 4, !dbg !5399
  %273 = load i32, i32* %err, align 4, !dbg !5400
  store i32 %273, i32* %retval, align 4, !dbg !5401
  br label %return, !dbg !5401

return:                                           ; preds = %for.end, %if.then1065
  %274 = load i32, i32* %retval, align 4, !dbg !5402
  ret i32 %274, !dbg !5402
}

; Function Attrs: noredzone
declare dso_local void @pm_runtime_enable(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local void @dw_edma_v0_core_debugfs_on(%struct.dw_edma_chip*) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dw_edma_remove(%struct.dw_edma_chip* %chip) #0 !dbg !5403 {
entry:
  %chip.addr = alloca %struct.dw_edma_chip*, align 8
  %chan = alloca %struct.dw_edma_chan*, align 8
  %_chan = alloca %struct.dw_edma_chan*, align 8
  %dev = alloca %struct.device*, align 8
  %dw = alloca %struct.dw_edma*, align 8
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dw_edma_chan*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.dw_edma_chan*, align 8
  %__mptr24 = alloca i8*, align 8
  %tmp31 = alloca %struct.dw_edma_chan*, align 8
  %__mptr34 = alloca i8*, align 8
  %tmp39 = alloca %struct.dw_edma_chan*, align 8
  %__mptr41 = alloca i8*, align 8
  %tmp48 = alloca %struct.dw_edma_chan*, align 8
  %__mptr65 = alloca i8*, align 8
  %tmp72 = alloca %struct.dw_edma_chan*, align 8
  store %struct.dw_edma_chip* %chip, %struct.dw_edma_chip** %chip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chip** %chip.addr, metadata !5404, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !5406, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %_chan, metadata !5408, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !5410, metadata !DIExpression()), !dbg !5411
  %0 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !5412
  %dev1 = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %0, i32 0, i32 0, !dbg !5413
  %1 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !5413
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !5411
  call void @llvm.dbg.declare(metadata %struct.dw_edma** %dw, metadata !5414, metadata !DIExpression()), !dbg !5415
  %2 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip.addr, align 8, !dbg !5416
  %dw2 = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %2, i32 0, i32 3, !dbg !5417
  %3 = load %struct.dw_edma*, %struct.dw_edma** %dw2, align 8, !dbg !5417
  store %struct.dw_edma* %3, %struct.dw_edma** %dw, align 8, !dbg !5415
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5418, metadata !DIExpression()), !dbg !5419
  %4 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5420
  call void @dw_edma_v0_core_off(%struct.dw_edma* %4) #9, !dbg !5421
  %5 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5422
  %nr_irqs = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %5, i32 0, i32 9, !dbg !5424
  %6 = load i32, i32* %nr_irqs, align 8, !dbg !5424
  %sub = sub i32 %6, 1, !dbg !5425
  store i32 %sub, i32* %i, align 4, !dbg !5426
  br label %for.cond, !dbg !5427

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !5428
  %cmp = icmp sge i32 %7, 0, !dbg !5430
  br i1 %cmp, label %for.body, label %for.end, !dbg !5431

for.body:                                         ; preds = %for.cond
  %8 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5432
  %ops = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %8, i32 0, i32 13, !dbg !5433
  %9 = load %struct.dw_edma_core_ops*, %struct.dw_edma_core_ops** %ops, align 8, !dbg !5433
  %irq_vector = getelementptr inbounds %struct.dw_edma_core_ops, %struct.dw_edma_core_ops* %9, i32 0, i32 0, !dbg !5434
  %10 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %irq_vector, align 8, !dbg !5434
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5435
  %12 = load i32, i32* %i, align 4, !dbg !5436
  %call = call i32 %10(%struct.device* %11, i32 %12) #9, !dbg !5432
  %13 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5437
  %irq = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %13, i32 0, i32 8, !dbg !5438
  %14 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %irq, align 8, !dbg !5438
  %15 = load i32, i32* %i, align 4, !dbg !5439
  %idxprom = sext i32 %15 to i64, !dbg !5437
  %arrayidx = getelementptr %struct.dw_edma_irq, %struct.dw_edma_irq* %14, i64 %idxprom, !dbg !5437
  %16 = bitcast %struct.dw_edma_irq* %arrayidx to i8*, !dbg !5440
  %call3 = call i8* @free_irq(i32 %call, i8* %16) #9, !dbg !5441
  br label %for.inc, !dbg !5441

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !5442
  %dec = add i32 %17, -1, !dbg !5442
  store i32 %dec, i32* %i, align 4, !dbg !5442
  br label %for.cond, !dbg !5443, !llvm.loop !5444

for.end:                                          ; preds = %for.cond
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5446
  call void @pm_runtime_disable(%struct.device* %18) #9, !dbg !5447
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5448, metadata !DIExpression()), !dbg !5451
  %19 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5451
  %wr_edma = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %19, i32 0, i32 1, !dbg !5451
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %wr_edma, i32 0, i32 3, !dbg !5451
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %channels, i32 0, i32 0, !dbg !5451
  %20 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5451
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !5451
  store i8* %21, i8** %__mptr, align 8, !dbg !5451
  br label %do.body, !dbg !5451

do.body:                                          ; preds = %for.end
  br label %do.end, !dbg !5452

do.end:                                           ; preds = %do.body
  %22 = load i8*, i8** %__mptr, align 8, !dbg !5451
  %add.ptr = getelementptr i8, i8* %22, i64 -48, !dbg !5451
  %23 = bitcast i8* %add.ptr to %struct.dw_edma_chan*, !dbg !5451
  store %struct.dw_edma_chan* %23, %struct.dw_edma_chan** %tmp, align 8, !dbg !5452
  %24 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %tmp, align 8, !dbg !5451
  store %struct.dw_edma_chan* %24, %struct.dw_edma_chan** %chan, align 8, !dbg !5454
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !5455, metadata !DIExpression()), !dbg !5457
  %25 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5457
  %vc = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %25, i32 0, i32 0, !dbg !5457
  %chan5 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 0, !dbg !5457
  %device_node = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan5, i32 0, i32 7, !dbg !5457
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node, i32 0, i32 0, !dbg !5457
  %26 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !5457
  %27 = bitcast %struct.list_head* %26 to i8*, !dbg !5457
  store i8* %27, i8** %__mptr4, align 8, !dbg !5457
  br label %do.body7, !dbg !5457

do.body7:                                         ; preds = %do.end
  br label %do.end8, !dbg !5458

do.end8:                                          ; preds = %do.body7
  %28 = load i8*, i8** %__mptr4, align 8, !dbg !5457
  %add.ptr10 = getelementptr i8, i8* %28, i64 -48, !dbg !5457
  %29 = bitcast i8* %add.ptr10 to %struct.dw_edma_chan*, !dbg !5457
  store %struct.dw_edma_chan* %29, %struct.dw_edma_chan** %tmp9, align 8, !dbg !5458
  %30 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %tmp9, align 8, !dbg !5457
  store %struct.dw_edma_chan* %30, %struct.dw_edma_chan** %_chan, align 8, !dbg !5454
  br label %for.cond11, !dbg !5454

for.cond11:                                       ; preds = %do.end30, %do.end8
  %31 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5460
  %vc12 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %31, i32 0, i32 0, !dbg !5460
  %chan13 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc12, i32 0, i32 0, !dbg !5460
  %device_node14 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan13, i32 0, i32 7, !dbg !5460
  %32 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5460
  %wr_edma15 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %32, i32 0, i32 1, !dbg !5460
  %channels16 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %wr_edma15, i32 0, i32 3, !dbg !5460
  %cmp17 = icmp eq %struct.list_head* %device_node14, %channels16, !dbg !5460
  %lnot = xor i1 %cmp17, true, !dbg !5460
  br i1 %lnot, label %for.body18, label %for.end33, !dbg !5454

for.body18:                                       ; preds = %for.cond11
  %33 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5462
  %vc19 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %33, i32 0, i32 0, !dbg !5464
  %chan20 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc19, i32 0, i32 0, !dbg !5465
  %device_node21 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan20, i32 0, i32 7, !dbg !5466
  call void @list_del(%struct.list_head* %device_node21) #9, !dbg !5467
  %34 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5468
  %vc22 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %34, i32 0, i32 0, !dbg !5469
  %task = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc22, i32 0, i32 1, !dbg !5470
  call void @tasklet_kill(%struct.tasklet_struct* %task) #9, !dbg !5471
  br label %for.inc23, !dbg !5472

for.inc23:                                        ; preds = %for.body18
  %35 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %_chan, align 8, !dbg !5460
  store %struct.dw_edma_chan* %35, %struct.dw_edma_chan** %chan, align 8, !dbg !5460
  call void @llvm.dbg.declare(metadata i8** %__mptr24, metadata !5473, metadata !DIExpression()), !dbg !5475
  %36 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %_chan, align 8, !dbg !5475
  %vc25 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %36, i32 0, i32 0, !dbg !5475
  %chan26 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc25, i32 0, i32 0, !dbg !5475
  %device_node27 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan26, i32 0, i32 7, !dbg !5475
  %next28 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node27, i32 0, i32 0, !dbg !5475
  %37 = load %struct.list_head*, %struct.list_head** %next28, align 8, !dbg !5475
  %38 = bitcast %struct.list_head* %37 to i8*, !dbg !5475
  store i8* %38, i8** %__mptr24, align 8, !dbg !5475
  br label %do.body29, !dbg !5475

do.body29:                                        ; preds = %for.inc23
  br label %do.end30, !dbg !5476

do.end30:                                         ; preds = %do.body29
  %39 = load i8*, i8** %__mptr24, align 8, !dbg !5475
  %add.ptr32 = getelementptr i8, i8* %39, i64 -48, !dbg !5475
  %40 = bitcast i8* %add.ptr32 to %struct.dw_edma_chan*, !dbg !5475
  store %struct.dw_edma_chan* %40, %struct.dw_edma_chan** %tmp31, align 8, !dbg !5476
  %41 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %tmp31, align 8, !dbg !5475
  store %struct.dw_edma_chan* %41, %struct.dw_edma_chan** %_chan, align 8, !dbg !5460
  br label %for.cond11, !dbg !5460, !llvm.loop !5478

for.end33:                                        ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata i8** %__mptr34, metadata !5480, metadata !DIExpression()), !dbg !5483
  %42 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5483
  %rd_edma = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %42, i32 0, i32 3, !dbg !5483
  %channels35 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %rd_edma, i32 0, i32 3, !dbg !5483
  %next36 = getelementptr inbounds %struct.list_head, %struct.list_head* %channels35, i32 0, i32 0, !dbg !5483
  %43 = load %struct.list_head*, %struct.list_head** %next36, align 8, !dbg !5483
  %44 = bitcast %struct.list_head* %43 to i8*, !dbg !5483
  store i8* %44, i8** %__mptr34, align 8, !dbg !5483
  br label %do.body37, !dbg !5483

do.body37:                                        ; preds = %for.end33
  br label %do.end38, !dbg !5484

do.end38:                                         ; preds = %do.body37
  %45 = load i8*, i8** %__mptr34, align 8, !dbg !5483
  %add.ptr40 = getelementptr i8, i8* %45, i64 -48, !dbg !5483
  %46 = bitcast i8* %add.ptr40 to %struct.dw_edma_chan*, !dbg !5483
  store %struct.dw_edma_chan* %46, %struct.dw_edma_chan** %tmp39, align 8, !dbg !5484
  %47 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %tmp39, align 8, !dbg !5483
  store %struct.dw_edma_chan* %47, %struct.dw_edma_chan** %chan, align 8, !dbg !5486
  call void @llvm.dbg.declare(metadata i8** %__mptr41, metadata !5487, metadata !DIExpression()), !dbg !5489
  %48 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5489
  %vc42 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %48, i32 0, i32 0, !dbg !5489
  %chan43 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc42, i32 0, i32 0, !dbg !5489
  %device_node44 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan43, i32 0, i32 7, !dbg !5489
  %next45 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node44, i32 0, i32 0, !dbg !5489
  %49 = load %struct.list_head*, %struct.list_head** %next45, align 8, !dbg !5489
  %50 = bitcast %struct.list_head* %49 to i8*, !dbg !5489
  store i8* %50, i8** %__mptr41, align 8, !dbg !5489
  br label %do.body46, !dbg !5489

do.body46:                                        ; preds = %do.end38
  br label %do.end47, !dbg !5490

do.end47:                                         ; preds = %do.body46
  %51 = load i8*, i8** %__mptr41, align 8, !dbg !5489
  %add.ptr49 = getelementptr i8, i8* %51, i64 -48, !dbg !5489
  %52 = bitcast i8* %add.ptr49 to %struct.dw_edma_chan*, !dbg !5489
  store %struct.dw_edma_chan* %52, %struct.dw_edma_chan** %tmp48, align 8, !dbg !5490
  %53 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %tmp48, align 8, !dbg !5489
  store %struct.dw_edma_chan* %53, %struct.dw_edma_chan** %_chan, align 8, !dbg !5486
  br label %for.cond50, !dbg !5486

for.cond50:                                       ; preds = %do.end71, %do.end47
  %54 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5492
  %vc51 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %54, i32 0, i32 0, !dbg !5492
  %chan52 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc51, i32 0, i32 0, !dbg !5492
  %device_node53 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan52, i32 0, i32 7, !dbg !5492
  %55 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5492
  %rd_edma54 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %55, i32 0, i32 3, !dbg !5492
  %channels55 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %rd_edma54, i32 0, i32 3, !dbg !5492
  %cmp56 = icmp eq %struct.list_head* %device_node53, %channels55, !dbg !5492
  %lnot57 = xor i1 %cmp56, true, !dbg !5492
  br i1 %lnot57, label %for.body58, label %for.end74, !dbg !5486

for.body58:                                       ; preds = %for.cond50
  %56 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5494
  %vc59 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %56, i32 0, i32 0, !dbg !5496
  %chan60 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc59, i32 0, i32 0, !dbg !5497
  %device_node61 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan60, i32 0, i32 7, !dbg !5498
  call void @list_del(%struct.list_head* %device_node61) #9, !dbg !5499
  %57 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5500
  %vc62 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %57, i32 0, i32 0, !dbg !5501
  %task63 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc62, i32 0, i32 1, !dbg !5502
  call void @tasklet_kill(%struct.tasklet_struct* %task63) #9, !dbg !5503
  br label %for.inc64, !dbg !5504

for.inc64:                                        ; preds = %for.body58
  %58 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %_chan, align 8, !dbg !5492
  store %struct.dw_edma_chan* %58, %struct.dw_edma_chan** %chan, align 8, !dbg !5492
  call void @llvm.dbg.declare(metadata i8** %__mptr65, metadata !5505, metadata !DIExpression()), !dbg !5507
  %59 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %_chan, align 8, !dbg !5507
  %vc66 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %59, i32 0, i32 0, !dbg !5507
  %chan67 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc66, i32 0, i32 0, !dbg !5507
  %device_node68 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan67, i32 0, i32 7, !dbg !5507
  %next69 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node68, i32 0, i32 0, !dbg !5507
  %60 = load %struct.list_head*, %struct.list_head** %next69, align 8, !dbg !5507
  %61 = bitcast %struct.list_head* %60 to i8*, !dbg !5507
  store i8* %61, i8** %__mptr65, align 8, !dbg !5507
  br label %do.body70, !dbg !5507

do.body70:                                        ; preds = %for.inc64
  br label %do.end71, !dbg !5508

do.end71:                                         ; preds = %do.body70
  %62 = load i8*, i8** %__mptr65, align 8, !dbg !5507
  %add.ptr73 = getelementptr i8, i8* %62, i64 -48, !dbg !5507
  %63 = bitcast i8* %add.ptr73 to %struct.dw_edma_chan*, !dbg !5507
  store %struct.dw_edma_chan* %63, %struct.dw_edma_chan** %tmp72, align 8, !dbg !5508
  %64 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %tmp72, align 8, !dbg !5507
  store %struct.dw_edma_chan* %64, %struct.dw_edma_chan** %_chan, align 8, !dbg !5492
  br label %for.cond50, !dbg !5492, !llvm.loop !5510

for.end74:                                        ; preds = %for.cond50
  %65 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5512
  %wr_edma75 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %65, i32 0, i32 1, !dbg !5513
  call void @dma_async_device_unregister(%struct.dma_device* %wr_edma75) #9, !dbg !5514
  %66 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5515
  %rd_edma76 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %66, i32 0, i32 3, !dbg !5516
  call void @dma_async_device_unregister(%struct.dma_device* %rd_edma76) #9, !dbg !5517
  call void @dw_edma_v0_core_debugfs_off() #9, !dbg !5518
  ret i32 0, !dbg !5519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_disable(%struct.device* %dev) #0 !dbg !5520 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5522, metadata !DIExpression()), !dbg !5523
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5524
  call void @__pm_runtime_disable(%struct.device* %0, i1 zeroext true) #9, !dbg !5525
  ret void, !dbg !5526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !5527 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !5531, metadata !DIExpression()), !dbg !5532
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5533
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !5534
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5535
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5536
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !5537
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5538
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !5539
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !5540
  ret void, !dbg !5541
}

; Function Attrs: noredzone
declare dso_local void @tasklet_kill(%struct.tasklet_struct*) #3

; Function Attrs: noredzone
declare dso_local void @dma_async_device_unregister(%struct.dma_device*) #3

; Function Attrs: noredzone
declare dso_local void @dw_edma_v0_core_debugfs_off() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kmalloc_array(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !5542 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5543, metadata !DIExpression()), !dbg !5544
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5545, metadata !DIExpression()), !dbg !5546
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5547, metadata !DIExpression()), !dbg !5548
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5549, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !5551, metadata !DIExpression()), !dbg !5552
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !5553, metadata !DIExpression()), !dbg !5556
  %0 = load i64, i64* %n.addr, align 8, !dbg !5556
  store i64 %0, i64* %__a, align 8, !dbg !5556
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !5557, metadata !DIExpression()), !dbg !5556
  %1 = load i64, i64* %size.addr, align 8, !dbg !5556
  store i64 %1, i64* %__b, align 8, !dbg !5556
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !5558, metadata !DIExpression()), !dbg !5556
  store i64* %bytes, i64** %__d, align 8, !dbg !5556
  %cmp = icmp eq i64* %__a, %__b, !dbg !5556
  %conv = zext i1 %cmp to i32, !dbg !5556
  %2 = load i64*, i64** %__d, align 8, !dbg !5556
  %cmp1 = icmp eq i64* %__a, %2, !dbg !5556
  %conv2 = zext i1 %cmp1 to i32, !dbg !5556
  %3 = load i64, i64* %__a, align 8, !dbg !5556
  %4 = load i64, i64* %__b, align 8, !dbg !5556
  %5 = load i64*, i64** %__d, align 8, !dbg !5556
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !5556
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !5556
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !5556
  store i64 %8, i64* %5, align 8, !dbg !5556
  %frombool = zext i1 %7 to i8, !dbg !5556
  store i8 %frombool, i8* %tmp, align 1, !dbg !5556
  %9 = load i8, i8* %tmp, align 1, !dbg !5556
  %tobool = trunc i8 %9 to i1, !dbg !5556
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #9, !dbg !5559
  %lnot = xor i1 %call, true, !dbg !5559
  %lnot3 = xor i1 %lnot, true, !dbg !5559
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5559
  %conv4 = sext i32 %lnot.ext to i64, !dbg !5559
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !5559
  br i1 %tobool5, label %if.then, label %if.end, !dbg !5560

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !5561
  br label %return, !dbg !5561

if.end:                                           ; preds = %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5562
  %11 = load i64, i64* %bytes, align 8, !dbg !5563
  %12 = load i32, i32* %flags.addr, align 4, !dbg !5564
  %call6 = call noalias i8* @devm_kmalloc(%struct.device* %10, i64 %11, i32 %12) #9, !dbg !5565
  store i8* %call6, i8** %retval, align 8, !dbg !5566
  br label %return, !dbg !5566

return:                                           ; preds = %if.end, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !5567
  ret i8* %13, !dbg !5567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !5568 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !5572, metadata !DIExpression()), !dbg !5573
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !5574
  %tobool = trunc i8 %0 to i1, !dbg !5574
  %lnot = xor i1 %tobool, true, !dbg !5574
  %lnot1 = xor i1 %lnot, true, !dbg !5574
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5574
  %conv = sext i32 %lnot.ext to i64, !dbg !5574
  %tobool2 = icmp ne i64 %conv, 0, !dbg !5574
  ret i1 %tobool2, !dbg !5575
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kmalloc(%struct.device*, i64, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #0 !dbg !5576 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5579, metadata !DIExpression()), !dbg !5580
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !5581, metadata !DIExpression()), !dbg !5582
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !5583, metadata !DIExpression()), !dbg !5584
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5585, metadata !DIExpression()), !dbg !5586
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !5587, metadata !DIExpression()), !dbg !5588
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5589
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !5590
  %2 = load i64, i64* %flags.addr, align 8, !dbg !5591
  %3 = load i8*, i8** %name.addr, align 8, !dbg !5592
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !5593
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #9, !dbg !5594
  ret i32 %call, !dbg !5595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_edma_interrupt_common(i32 %irq, i8* %data) #0 !dbg !5596 {
entry:
  %irq.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5597, metadata !DIExpression()), !dbg !5598
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5599, metadata !DIExpression()), !dbg !5600
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5601
  %1 = load i8*, i8** %data.addr, align 8, !dbg !5602
  %call = call i32 @dw_edma_interrupt(i32 %0, i8* %1, i1 zeroext true) #9, !dbg !5603
  %2 = load i32, i32* %irq.addr, align 4, !dbg !5604
  %3 = load i8*, i8** %data.addr, align 8, !dbg !5605
  %call1 = call i32 @dw_edma_interrupt(i32 %2, i8* %3, i1 zeroext false) #9, !dbg !5606
  ret i32 1, !dbg !5607
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.msi_desc* @irq_get_msi_desc(i32 %irq) #0 !dbg !5608 {
entry:
  %irq.addr = alloca i32, align 4
  %d = alloca %struct.irq_data*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5611, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d, metadata !5613, metadata !DIExpression()), !dbg !5614
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5615
  %call = call %struct.irq_data* @irq_get_irq_data(i32 %0) #9, !dbg !5616
  store %struct.irq_data* %call, %struct.irq_data** %d, align 8, !dbg !5614
  %1 = load %struct.irq_data*, %struct.irq_data** %d, align 8, !dbg !5617
  %tobool = icmp ne %struct.irq_data* %1, null, !dbg !5617
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5617

cond.true:                                        ; preds = %entry
  %2 = load %struct.irq_data*, %struct.irq_data** %d, align 8, !dbg !5618
  %common = getelementptr inbounds %struct.irq_data, %struct.irq_data* %2, i32 0, i32 3, !dbg !5619
  %3 = load %struct.irq_common_data*, %struct.irq_common_data** %common, align 8, !dbg !5619
  %msi_desc = getelementptr inbounds %struct.irq_common_data, %struct.irq_common_data* %3, i32 0, i32 2, !dbg !5620
  %4 = load %struct.msi_desc*, %struct.msi_desc** %msi_desc, align 8, !dbg !5620
  br label %cond.end, !dbg !5617

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5617

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.msi_desc* [ %4, %cond.true ], [ null, %cond.false ], !dbg !5617
  ret %struct.msi_desc* %cond, !dbg !5621
}

; Function Attrs: noredzone
declare dso_local void @get_cached_msi_msg(i32, %struct.msi_msg*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_edma_dec_irq_alloc(i32* %nr_irqs, i32* %alloc, i16 zeroext %cnt) #0 !dbg !5622 {
entry:
  %nr_irqs.addr = alloca i32*, align 8
  %alloc.addr = alloca i32*, align 8
  %cnt.addr = alloca i16, align 2
  store i32* %nr_irqs, i32** %nr_irqs.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %nr_irqs.addr, metadata !5625, metadata !DIExpression()), !dbg !5626
  store i32* %alloc, i32** %alloc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %alloc.addr, metadata !5627, metadata !DIExpression()), !dbg !5628
  store i16 %cnt, i16* %cnt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cnt.addr, metadata !5629, metadata !DIExpression()), !dbg !5630
  %0 = load i32*, i32** %nr_irqs.addr, align 8, !dbg !5631
  %1 = load i32, i32* %0, align 4, !dbg !5633
  %tobool = icmp ne i32 %1, 0, !dbg !5633
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5634

land.lhs.true:                                    ; preds = %entry
  %2 = load i32*, i32** %alloc.addr, align 8, !dbg !5635
  %3 = load i32, i32* %2, align 4, !dbg !5636
  %4 = load i16, i16* %cnt.addr, align 2, !dbg !5637
  %conv = zext i16 %4 to i32, !dbg !5637
  %cmp = icmp ult i32 %3, %conv, !dbg !5638
  br i1 %cmp, label %if.then, label %if.end, !dbg !5639

if.then:                                          ; preds = %land.lhs.true
  %5 = load i32*, i32** %alloc.addr, align 8, !dbg !5640
  %6 = load i32, i32* %5, align 4, !dbg !5642
  %inc = add i32 %6, 1, !dbg !5642
  store i32 %inc, i32* %5, align 4, !dbg !5642
  %7 = load i32*, i32** %nr_irqs.addr, align 8, !dbg !5643
  %8 = load i32, i32* %7, align 4, !dbg !5644
  %dec = add i32 %8, -1, !dbg !5644
  store i32 %dec, i32* %7, align 4, !dbg !5644
  br label %if.end, !dbg !5645

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_edma_add_irq_mask(i32* %mask, i32 %alloc, i16 zeroext %cnt) #0 !dbg !5647 {
entry:
  %mask.addr = alloca i32*, align 8
  %alloc.addr = alloca i32, align 4
  %cnt.addr = alloca i16, align 2
  store i32* %mask, i32** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mask.addr, metadata !5650, metadata !DIExpression()), !dbg !5651
  store i32 %alloc, i32* %alloc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc.addr, metadata !5652, metadata !DIExpression()), !dbg !5653
  store i16 %cnt, i16* %cnt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cnt.addr, metadata !5654, metadata !DIExpression()), !dbg !5655
  br label %while.cond, !dbg !5656

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32*, i32** %mask.addr, align 8, !dbg !5657
  %1 = load i32, i32* %0, align 4, !dbg !5658
  %2 = load i32, i32* %alloc.addr, align 4, !dbg !5659
  %mul = mul i32 %1, %2, !dbg !5660
  %3 = load i16, i16* %cnt.addr, align 2, !dbg !5661
  %conv = zext i16 %3 to i32, !dbg !5661
  %cmp = icmp ult i32 %mul, %conv, !dbg !5662
  br i1 %cmp, label %while.body, label %while.end, !dbg !5656

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %mask.addr, align 8, !dbg !5663
  %5 = load i32, i32* %4, align 4, !dbg !5664
  %inc = add i32 %5, 1, !dbg !5664
  store i32 %inc, i32* %4, align 4, !dbg !5664
  br label %while.cond, !dbg !5656, !llvm.loop !5665

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5666
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_edma_interrupt_write(i32 %irq, i8* %data) #0 !dbg !5667 {
entry:
  %irq.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5668, metadata !DIExpression()), !dbg !5669
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5670, metadata !DIExpression()), !dbg !5671
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5672
  %1 = load i8*, i8** %data.addr, align 8, !dbg !5673
  %call = call i32 @dw_edma_interrupt(i32 %0, i8* %1, i1 zeroext true) #9, !dbg !5674
  ret i32 %call, !dbg !5675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_edma_interrupt_read(i32 %irq, i8* %data) #0 !dbg !5676 {
entry:
  %irq.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5677, metadata !DIExpression()), !dbg !5678
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5679, metadata !DIExpression()), !dbg !5680
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5681
  %1 = load i8*, i8** %data.addr, align 8, !dbg !5682
  %call = call i32 @dw_edma_interrupt(i32 %0, i8* %1, i1 zeroext false) #9, !dbg !5683
  ret i32 %call, !dbg !5684
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_edma_interrupt(i32 %irq, i8* %data, i1 zeroext %write) #0 !dbg !5685 {
entry:
  %irq.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %write.addr = alloca i8, align 1
  %dw_irq = alloca %struct.dw_edma_irq*, align 8
  %dw = alloca %struct.dw_edma*, align 8
  %total = alloca i64, align 8
  %pos = alloca i64, align 8
  %val = alloca i64, align 8
  %off = alloca i64, align 8
  %mask = alloca i32, align 4
  %chan = alloca %struct.dw_edma_chan*, align 8
  %chan26 = alloca %struct.dw_edma_chan*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5688, metadata !DIExpression()), !dbg !5689
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5690, metadata !DIExpression()), !dbg !5691
  %frombool = zext i1 %write to i8
  store i8 %frombool, i8* %write.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %write.addr, metadata !5692, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.declare(metadata %struct.dw_edma_irq** %dw_irq, metadata !5694, metadata !DIExpression()), !dbg !5695
  %0 = load i8*, i8** %data.addr, align 8, !dbg !5696
  %1 = bitcast i8* %0 to %struct.dw_edma_irq*, !dbg !5696
  store %struct.dw_edma_irq* %1, %struct.dw_edma_irq** %dw_irq, align 8, !dbg !5695
  call void @llvm.dbg.declare(metadata %struct.dw_edma** %dw, metadata !5697, metadata !DIExpression()), !dbg !5698
  %2 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %dw_irq, align 8, !dbg !5699
  %dw1 = getelementptr inbounds %struct.dw_edma_irq, %struct.dw_edma_irq* %2, i32 0, i32 3, !dbg !5700
  %3 = load %struct.dw_edma*, %struct.dw_edma** %dw1, align 8, !dbg !5700
  store %struct.dw_edma* %3, %struct.dw_edma** %dw, align 8, !dbg !5698
  call void @llvm.dbg.declare(metadata i64* %total, metadata !5701, metadata !DIExpression()), !dbg !5702
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !5703, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.declare(metadata i64* %val, metadata !5705, metadata !DIExpression()), !dbg !5706
  call void @llvm.dbg.declare(metadata i64* %off, metadata !5707, metadata !DIExpression()), !dbg !5708
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !5709, metadata !DIExpression()), !dbg !5710
  %4 = load i8, i8* %write.addr, align 1, !dbg !5711
  %tobool = trunc i8 %4 to i1, !dbg !5711
  br i1 %tobool, label %if.then, label %if.else, !dbg !5713

if.then:                                          ; preds = %entry
  %5 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5714
  %wr_ch_cnt = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %5, i32 0, i32 2, !dbg !5716
  %6 = load i16, i16* %wr_ch_cnt, align 8, !dbg !5716
  %conv = zext i16 %6 to i64, !dbg !5714
  store i64 %conv, i64* %total, align 8, !dbg !5717
  store i64 0, i64* %off, align 8, !dbg !5718
  %7 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %dw_irq, align 8, !dbg !5719
  %wr_mask = getelementptr inbounds %struct.dw_edma_irq, %struct.dw_edma_irq* %7, i32 0, i32 1, !dbg !5720
  %8 = load i32, i32* %wr_mask, align 4, !dbg !5720
  store i32 %8, i32* %mask, align 4, !dbg !5721
  br label %if.end, !dbg !5722

if.else:                                          ; preds = %entry
  %9 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5723
  %rd_ch_cnt = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %9, i32 0, i32 4, !dbg !5725
  %10 = load i16, i16* %rd_ch_cnt, align 8, !dbg !5725
  %conv2 = zext i16 %10 to i64, !dbg !5723
  store i64 %conv2, i64* %total, align 8, !dbg !5726
  %11 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5727
  %wr_ch_cnt3 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %11, i32 0, i32 2, !dbg !5728
  %12 = load i16, i16* %wr_ch_cnt3, align 8, !dbg !5728
  %conv4 = zext i16 %12 to i64, !dbg !5727
  store i64 %conv4, i64* %off, align 8, !dbg !5729
  %13 = load %struct.dw_edma_irq*, %struct.dw_edma_irq** %dw_irq, align 8, !dbg !5730
  %rd_mask = getelementptr inbounds %struct.dw_edma_irq, %struct.dw_edma_irq* %13, i32 0, i32 2, !dbg !5731
  %14 = load i32, i32* %rd_mask, align 8, !dbg !5731
  store i32 %14, i32* %mask, align 4, !dbg !5732
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5733
  %16 = load i8, i8* %write.addr, align 1, !dbg !5734
  %tobool5 = trunc i8 %16 to i1, !dbg !5734
  %17 = zext i1 %tobool5 to i64, !dbg !5734
  %cond = select i1 %tobool5, i32 0, i32 1, !dbg !5734
  %call = call i32 @dw_edma_v0_core_status_done_int(%struct.dw_edma* %15, i32 %cond) #9, !dbg !5735
  %conv7 = zext i32 %call to i64, !dbg !5735
  store i64 %conv7, i64* %val, align 8, !dbg !5736
  %18 = load i32, i32* %mask, align 4, !dbg !5737
  %conv8 = zext i32 %18 to i64, !dbg !5737
  %19 = load i64, i64* %val, align 8, !dbg !5738
  %and = and i64 %19, %conv8, !dbg !5738
  store i64 %and, i64* %val, align 8, !dbg !5738
  %20 = load i64, i64* %total, align 8, !dbg !5739
  %call9 = call i64 @find_first_bit(i64* %val, i64 %20) #9, !dbg !5739
  store i64 %call9, i64* %pos, align 8, !dbg !5739
  br label %for.cond, !dbg !5739

for.cond:                                         ; preds = %for.inc, %if.end
  %21 = load i64, i64* %pos, align 8, !dbg !5741
  %22 = load i64, i64* %total, align 8, !dbg !5741
  %cmp = icmp ult i64 %21, %22, !dbg !5741
  br i1 %cmp, label %for.body, label %for.end, !dbg !5739

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !5743, metadata !DIExpression()), !dbg !5745
  %23 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5746
  %chan11 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %23, i32 0, i32 12, !dbg !5747
  %24 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan11, align 8, !dbg !5747
  %25 = load i64, i64* %pos, align 8, !dbg !5748
  %26 = load i64, i64* %off, align 8, !dbg !5749
  %add = add i64 %25, %26, !dbg !5750
  %arrayidx = getelementptr %struct.dw_edma_chan, %struct.dw_edma_chan* %24, i64 %add, !dbg !5746
  store %struct.dw_edma_chan* %arrayidx, %struct.dw_edma_chan** %chan, align 8, !dbg !5745
  %27 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !5751
  call void @dw_edma_done_interrupt(%struct.dw_edma_chan* %27) #9, !dbg !5752
  br label %for.inc, !dbg !5753

for.inc:                                          ; preds = %for.body
  %28 = load i64, i64* %total, align 8, !dbg !5741
  %29 = load i64, i64* %pos, align 8, !dbg !5741
  %add12 = add i64 %29, 1, !dbg !5741
  %call13 = call i64 @find_next_bit(i64* %val, i64 %28, i64 %add12) #9, !dbg !5741
  store i64 %call13, i64* %pos, align 8, !dbg !5741
  br label %for.cond, !dbg !5741, !llvm.loop !5754

for.end:                                          ; preds = %for.cond
  %30 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5756
  %31 = load i8, i8* %write.addr, align 1, !dbg !5757
  %tobool14 = trunc i8 %31 to i1, !dbg !5757
  %32 = zext i1 %tobool14 to i64, !dbg !5757
  %cond16 = select i1 %tobool14, i32 0, i32 1, !dbg !5757
  %call17 = call i32 @dw_edma_v0_core_status_abort_int(%struct.dw_edma* %30, i32 %cond16) #9, !dbg !5758
  %conv18 = zext i32 %call17 to i64, !dbg !5758
  store i64 %conv18, i64* %val, align 8, !dbg !5759
  %33 = load i32, i32* %mask, align 4, !dbg !5760
  %conv19 = zext i32 %33 to i64, !dbg !5760
  %34 = load i64, i64* %val, align 8, !dbg !5761
  %and20 = and i64 %34, %conv19, !dbg !5761
  store i64 %and20, i64* %val, align 8, !dbg !5761
  %35 = load i64, i64* %total, align 8, !dbg !5762
  %call21 = call i64 @find_first_bit(i64* %val, i64 %35) #9, !dbg !5762
  store i64 %call21, i64* %pos, align 8, !dbg !5762
  br label %for.cond22, !dbg !5762

for.cond22:                                       ; preds = %for.inc30, %for.end
  %36 = load i64, i64* %pos, align 8, !dbg !5764
  %37 = load i64, i64* %total, align 8, !dbg !5764
  %cmp23 = icmp ult i64 %36, %37, !dbg !5764
  br i1 %cmp23, label %for.body25, label %for.end33, !dbg !5762

for.body25:                                       ; preds = %for.cond22
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan26, metadata !5766, metadata !DIExpression()), !dbg !5768
  %38 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !5769
  %chan27 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %38, i32 0, i32 12, !dbg !5770
  %39 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan27, align 8, !dbg !5770
  %40 = load i64, i64* %pos, align 8, !dbg !5771
  %41 = load i64, i64* %off, align 8, !dbg !5772
  %add28 = add i64 %40, %41, !dbg !5773
  %arrayidx29 = getelementptr %struct.dw_edma_chan, %struct.dw_edma_chan* %39, i64 %add28, !dbg !5769
  store %struct.dw_edma_chan* %arrayidx29, %struct.dw_edma_chan** %chan26, align 8, !dbg !5768
  %42 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan26, align 8, !dbg !5774
  call void @dw_edma_abort_interrupt(%struct.dw_edma_chan* %42) #9, !dbg !5775
  br label %for.inc30, !dbg !5776

for.inc30:                                        ; preds = %for.body25
  %43 = load i64, i64* %total, align 8, !dbg !5764
  %44 = load i64, i64* %pos, align 8, !dbg !5764
  %add31 = add i64 %44, 1, !dbg !5764
  %call32 = call i64 @find_next_bit(i64* %val, i64 %43, i64 %add31) #9, !dbg !5764
  store i64 %call32, i64* %pos, align 8, !dbg !5764
  br label %for.cond22, !dbg !5764, !llvm.loop !5777

for.end33:                                        ; preds = %for.cond22
  ret i32 1, !dbg !5779
}

; Function Attrs: noredzone
declare dso_local i32 @dw_edma_v0_core_status_done_int(%struct.dw_edma*, i32) #3

; Function Attrs: noredzone
declare dso_local i64 @find_first_bit(i64*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_edma_done_interrupt(%struct.dw_edma_chan* %chan) #0 !dbg !5780 {
entry:
  %lock.addr.i35 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i35, metadata !5783, metadata !DIExpression()), !dbg !5788
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5790, metadata !DIExpression()), !dbg !5791
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5792, metadata !DIExpression()), !dbg !5797
  %chan.addr = alloca %struct.dw_edma_chan*, align 8
  %desc = alloca %struct.dw_edma_desc*, align 8
  %vd = alloca %struct.virt_dma_desc*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.dw_edma_chan* %chan, %struct.dw_edma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan.addr, metadata !5804, metadata !DIExpression()), !dbg !5805
  call void @llvm.dbg.declare(metadata %struct.dw_edma_desc** %desc, metadata !5806, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd, metadata !5808, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5810, metadata !DIExpression()), !dbg !5811
  %0 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5812
  call void @dw_edma_v0_core_clear_done_int(%struct.dw_edma_chan* %0) #9, !dbg !5813
  br label %do.body, !dbg !5814

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5815

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5816, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5819, metadata !DIExpression()), !dbg !5818
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5818
  %conv = zext i1 %cmp to i32, !dbg !5818
  store i32 1, i32* %tmp, align 4, !dbg !5818
  %1 = load i32, i32* %tmp, align 4, !dbg !5818
  br label %do.body2, !dbg !5820

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5821

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5822

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5824, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5828, metadata !DIExpression()), !dbg !5827
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5827
  %conv8 = zext i1 %cmp7 to i32, !dbg !5827
  store i32 1, i32* %tmp9, align 4, !dbg !5827
  %2 = load i32, i32* %tmp9, align 4, !dbg !5827
  %call = call i64 @arch_local_irq_save() #9, !dbg !5829
  store i64 %call, i64* %flags, align 8, !dbg !5829
  br label %do.end, !dbg !5829

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5822

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5821

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !5830, !srcloc !5831
  br label %do.body12, !dbg !5830

do.body12:                                        ; preds = %do.body11
  %3 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5832
  %vc = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %3, i32 0, i32 0, !dbg !5832
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 3, !dbg !5832
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5833
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !5834
  %rlock.i = bitcast %union.anon.3* %5 to %struct.raw_spinlock*, !dbg !5834
  br label %do.end14, !dbg !5832

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5830

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5821

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5820

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5815

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5835
  %vc19 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %6, i32 0, i32 0, !dbg !5836
  %call20 = call %struct.virt_dma_desc* @vchan_next_desc(%struct.virt_dma_chan* %vc19) #9, !dbg !5837
  store %struct.virt_dma_desc* %call20, %struct.virt_dma_desc** %vd, align 8, !dbg !5838
  %7 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !5839
  %tobool = icmp ne %struct.virt_dma_desc* %7, null, !dbg !5839
  br i1 %tobool, label %if.then, label %if.end32, !dbg !5841

if.then:                                          ; preds = %do.end18
  %8 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5842
  %request = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %8, i32 0, i32 8, !dbg !5844
  %9 = load i32, i32* %request, align 4, !dbg !5844
  switch i32 %9, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb25
    i32 2, label %sw.bb29
  ], !dbg !5845

sw.bb:                                            ; preds = %if.then
  %10 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !5846
  %call21 = call %struct.dw_edma_desc* @vd2dw_edma_desc(%struct.virt_dma_desc* %10) #9, !dbg !5848
  store %struct.dw_edma_desc* %call21, %struct.dw_edma_desc** %desc, align 8, !dbg !5849
  %11 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !5850
  %chunks_alloc = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %11, i32 0, i32 3, !dbg !5852
  %12 = load i32, i32* %chunks_alloc, align 8, !dbg !5852
  %tobool22 = icmp ne i32 %12, 0, !dbg !5850
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !5853

if.then23:                                        ; preds = %sw.bb
  %13 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5854
  %status = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %13, i32 0, i32 9, !dbg !5856
  store i32 2, i32* %status, align 8, !dbg !5857
  %14 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5858
  call void @dw_edma_start_transfer(%struct.dw_edma_chan* %14) #9, !dbg !5859
  br label %if.end, !dbg !5860

if.else:                                          ; preds = %sw.bb
  %15 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !5861
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %15, i32 0, i32 2, !dbg !5863
  call void @list_del(%struct.list_head* %node) #9, !dbg !5864
  %16 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !5865
  call void @vchan_cookie_complete(%struct.virt_dma_desc* %16) #9, !dbg !5866
  %17 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5867
  %status24 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %17, i32 0, i32 9, !dbg !5868
  store i32 0, i32* %status24, align 8, !dbg !5869
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then23
  br label %sw.epilog, !dbg !5870

sw.bb25:                                          ; preds = %if.then
  %18 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !5871
  %node26 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %18, i32 0, i32 2, !dbg !5872
  call void @list_del(%struct.list_head* %node26) #9, !dbg !5873
  %19 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !5874
  call void @vchan_cookie_complete(%struct.virt_dma_desc* %19) #9, !dbg !5875
  %20 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5876
  %request27 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %20, i32 0, i32 8, !dbg !5877
  store i32 0, i32* %request27, align 4, !dbg !5878
  %21 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5879
  %status28 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %21, i32 0, i32 9, !dbg !5880
  store i32 0, i32* %status28, align 8, !dbg !5881
  br label %sw.epilog, !dbg !5882

sw.bb29:                                          ; preds = %if.then
  %22 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5883
  %request30 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %22, i32 0, i32 8, !dbg !5884
  store i32 0, i32* %request30, align 4, !dbg !5885
  %23 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5886
  %status31 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %23, i32 0, i32 9, !dbg !5887
  store i32 1, i32* %status31, align 8, !dbg !5888
  br label %sw.epilog, !dbg !5889

sw.default:                                       ; preds = %if.then
  br label %sw.epilog, !dbg !5890

sw.epilog:                                        ; preds = %sw.default, %sw.bb29, %sw.bb25, %if.end
  br label %if.end32, !dbg !5891

if.end32:                                         ; preds = %sw.epilog, %do.end18
  %24 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5892
  %vc33 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %24, i32 0, i32 0, !dbg !5893
  %lock34 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc33, i32 0, i32 3, !dbg !5894
  %25 = load i64, i64* %flags, align 8, !dbg !5895
  store %struct.spinlock* %lock34, %struct.spinlock** %lock.addr.i35, align 8
  store i64 %25, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !364, metadata !5896, metadata !DIExpression()) #5, !dbg !5899
  call void @llvm.dbg.declare(metadata !364, metadata !5900, metadata !DIExpression()) #5, !dbg !5899
  store i32 1, i32* %tmp.i, align 4, !dbg !5899
  %26 = load i32, i32* %tmp.i, align 4, !dbg !5899
  call void @llvm.dbg.declare(metadata !364, metadata !5901, metadata !DIExpression()) #5, !dbg !5906
  call void @llvm.dbg.declare(metadata !364, metadata !5907, metadata !DIExpression()) #5, !dbg !5906
  store i32 1, i32* %tmp8.i, align 4, !dbg !5906
  %27 = load i32, i32* %tmp8.i, align 4, !dbg !5906
  %28 = load i64, i64* %flags.addr.i, align 8, !dbg !5908
  call void @arch_local_irq_restore(i64 %28) #11, !dbg !5908
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !5909, !srcloc !5911
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i35, align 8, !dbg !5912
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !5912
  %rlock.i36 = bitcast %union.anon.3* %30 to %struct.raw_spinlock*, !dbg !5912
  ret void, !dbg !5914
}

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #3

; Function Attrs: noredzone
declare dso_local i32 @dw_edma_v0_core_status_abort_int(%struct.dw_edma*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_edma_abort_interrupt(%struct.dw_edma_chan* %chan) #0 !dbg !5915 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !5783, metadata !DIExpression()), !dbg !5916
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5790, metadata !DIExpression()), !dbg !5918
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5792, metadata !DIExpression()), !dbg !5919
  %chan.addr = alloca %struct.dw_edma_chan*, align 8
  %vd = alloca %struct.virt_dma_desc*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.dw_edma_chan* %chan, %struct.dw_edma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan.addr, metadata !5926, metadata !DIExpression()), !dbg !5927
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd, metadata !5928, metadata !DIExpression()), !dbg !5929
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5930, metadata !DIExpression()), !dbg !5931
  %0 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5932
  call void @dw_edma_v0_core_clear_abort_int(%struct.dw_edma_chan* %0) #9, !dbg !5933
  br label %do.body, !dbg !5934

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5935

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5936, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5939, metadata !DIExpression()), !dbg !5938
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5938
  %conv = zext i1 %cmp to i32, !dbg !5938
  store i32 1, i32* %tmp, align 4, !dbg !5938
  %1 = load i32, i32* %tmp, align 4, !dbg !5938
  br label %do.body2, !dbg !5940

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5941

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5942

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5944, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5948, metadata !DIExpression()), !dbg !5947
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5947
  %conv8 = zext i1 %cmp7 to i32, !dbg !5947
  store i32 1, i32* %tmp9, align 4, !dbg !5947
  %2 = load i32, i32* %tmp9, align 4, !dbg !5947
  %call = call i64 @arch_local_irq_save() #9, !dbg !5949
  store i64 %call, i64* %flags, align 8, !dbg !5949
  br label %do.end, !dbg !5949

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5942

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5941

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !5950, !srcloc !5951
  br label %do.body12, !dbg !5950

do.body12:                                        ; preds = %do.body11
  %3 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5952
  %vc = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %3, i32 0, i32 0, !dbg !5952
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 3, !dbg !5952
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5953
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !5954
  %rlock.i = bitcast %union.anon.3* %5 to %struct.raw_spinlock*, !dbg !5954
  br label %do.end14, !dbg !5952

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5950

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5941

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5940

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5935

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5955
  %vc19 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %6, i32 0, i32 0, !dbg !5956
  %call20 = call %struct.virt_dma_desc* @vchan_next_desc(%struct.virt_dma_chan* %vc19) #9, !dbg !5957
  store %struct.virt_dma_desc* %call20, %struct.virt_dma_desc** %vd, align 8, !dbg !5958
  %7 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !5959
  %tobool = icmp ne %struct.virt_dma_desc* %7, null, !dbg !5959
  br i1 %tobool, label %if.then, label %if.end, !dbg !5961

if.then:                                          ; preds = %do.end18
  %8 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !5962
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %8, i32 0, i32 2, !dbg !5964
  call void @list_del(%struct.list_head* %node) #9, !dbg !5965
  %9 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !5966
  call void @vchan_cookie_complete(%struct.virt_dma_desc* %9) #9, !dbg !5967
  br label %if.end, !dbg !5968

if.end:                                           ; preds = %if.then, %do.end18
  %10 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5969
  %vc21 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %10, i32 0, i32 0, !dbg !5970
  %lock22 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc21, i32 0, i32 3, !dbg !5971
  %11 = load i64, i64* %flags, align 8, !dbg !5972
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !364, metadata !5896, metadata !DIExpression()) #5, !dbg !5973
  call void @llvm.dbg.declare(metadata !364, metadata !5900, metadata !DIExpression()) #5, !dbg !5973
  store i32 1, i32* %tmp.i, align 4, !dbg !5973
  %12 = load i32, i32* %tmp.i, align 4, !dbg !5973
  call void @llvm.dbg.declare(metadata !364, metadata !5901, metadata !DIExpression()) #5, !dbg !5974
  call void @llvm.dbg.declare(metadata !364, metadata !5907, metadata !DIExpression()) #5, !dbg !5974
  store i32 1, i32* %tmp8.i, align 4, !dbg !5974
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !5974
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !5975
  call void @arch_local_irq_restore(i64 %14) #11, !dbg !5975
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !5976, !srcloc !5911
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !5977
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !5977
  %rlock.i24 = bitcast %union.anon.3* %16 to %struct.raw_spinlock*, !dbg !5977
  %17 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5978
  %request = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %17, i32 0, i32 8, !dbg !5979
  store i32 0, i32* %request, align 4, !dbg !5980
  %18 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !5981
  %status = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %18, i32 0, i32 9, !dbg !5982
  store i32 0, i32* %status, align 8, !dbg !5983
  ret void, !dbg !5984
}

; Function Attrs: noredzone
declare dso_local void @dw_edma_v0_core_clear_done_int(%struct.dw_edma_chan*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !5985 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !5989, metadata !DIExpression()), !dbg !5990
  %call = call i64 @arch_local_save_flags() #9, !dbg !5991
  store i64 %call, i64* %f, align 8, !dbg !5992
  call void @arch_local_irq_disable() #9, !dbg !5993
  %0 = load i64, i64* %f, align 8, !dbg !5994
  ret i64 %0, !dbg !5995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.virt_dma_desc* @vchan_next_desc(%struct.virt_dma_chan* %vc) #0 !dbg !5996 {
entry:
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %head__ = alloca %struct.list_head*, align 8
  %pos__ = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp1 = alloca %struct.virt_dma_desc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp4 = alloca %struct.virt_dma_desc*, align 8
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !5999, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.declare(metadata %struct.list_head** %head__, metadata !6001, metadata !DIExpression()), !dbg !6003
  %0 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !6003
  %desc_issued = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %0, i32 0, i32 6, !dbg !6003
  store %struct.list_head* %desc_issued, %struct.list_head** %head__, align 8, !dbg !6003
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos__, metadata !6004, metadata !DIExpression()), !dbg !6003
  br label %do.body, !dbg !6005

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6007

do.end:                                           ; preds = %do.body
  %1 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !6005
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6005
  %2 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6005
  store %struct.list_head* %2, %struct.list_head** %tmp, align 8, !dbg !6007
  %3 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !6005
  store %struct.list_head* %3, %struct.list_head** %pos__, align 8, !dbg !6003
  %4 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !6003
  %5 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !6003
  %cmp = icmp ne %struct.list_head* %4, %5, !dbg !6003
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6003

cond.true:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6009, metadata !DIExpression()), !dbg !6011
  %6 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !6011
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !6011
  store i8* %7, i8** %__mptr, align 8, !dbg !6011
  br label %do.body2, !dbg !6011

do.body2:                                         ; preds = %cond.true
  br label %do.end3, !dbg !6012

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr, align 8, !dbg !6011
  %add.ptr = getelementptr i8, i8* %8, i64 -96, !dbg !6011
  %9 = bitcast i8* %add.ptr to %struct.virt_dma_desc*, !dbg !6011
  store %struct.virt_dma_desc* %9, %struct.virt_dma_desc** %tmp4, align 8, !dbg !6012
  %10 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %tmp4, align 8, !dbg !6011
  br label %cond.end, !dbg !6003

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !6003

cond.end:                                         ; preds = %cond.false, %do.end3
  %cond = phi %struct.virt_dma_desc* [ %10, %do.end3 ], [ null, %cond.false ], !dbg !6003
  store %struct.virt_dma_desc* %cond, %struct.virt_dma_desc** %tmp1, align 8, !dbg !6003
  %11 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %tmp1, align 8, !dbg !6003
  ret %struct.virt_dma_desc* %11, !dbg !6014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dw_edma_desc* @vd2dw_edma_desc(%struct.virt_dma_desc* %vd) #0 !dbg !6015 {
entry:
  %vd.addr = alloca %struct.virt_dma_desc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dw_edma_desc*, align 8
  store %struct.virt_dma_desc* %vd, %struct.virt_dma_desc** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd.addr, metadata !6018, metadata !DIExpression()), !dbg !6019
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6020, metadata !DIExpression()), !dbg !6022
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !6022
  %1 = bitcast %struct.virt_dma_desc* %0 to i8*, !dbg !6022
  store i8* %1, i8** %__mptr, align 8, !dbg !6022
  br label %do.body, !dbg !6022

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6023

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6022
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6022
  %3 = bitcast i8* %add.ptr to %struct.dw_edma_desc*, !dbg !6022
  store %struct.dw_edma_desc* %3, %struct.dw_edma_desc** %tmp, align 8, !dbg !6023
  %4 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %tmp, align 8, !dbg !6022
  ret %struct.dw_edma_desc* %4, !dbg !6025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_edma_start_transfer(%struct.dw_edma_chan* %chan) #0 !dbg !6026 {
entry:
  %chan.addr = alloca %struct.dw_edma_chan*, align 8
  %child = alloca %struct.dw_edma_chunk*, align 8
  %desc = alloca %struct.dw_edma_desc*, align 8
  %vd = alloca %struct.virt_dma_desc*, align 8
  %head__ = alloca %struct.list_head*, align 8
  %pos__ = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp5 = alloca %struct.dw_edma_chunk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp8 = alloca %struct.dw_edma_chunk*, align 8
  store %struct.dw_edma_chan* %chan, %struct.dw_edma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan.addr, metadata !6027, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chunk** %child, metadata !6029, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.declare(metadata %struct.dw_edma_desc** %desc, metadata !6031, metadata !DIExpression()), !dbg !6032
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd, metadata !6033, metadata !DIExpression()), !dbg !6034
  %0 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !6035
  %vc = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %0, i32 0, i32 0, !dbg !6036
  %call = call %struct.virt_dma_desc* @vchan_next_desc(%struct.virt_dma_chan* %vc) #9, !dbg !6037
  store %struct.virt_dma_desc* %call, %struct.virt_dma_desc** %vd, align 8, !dbg !6038
  %1 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !6039
  %tobool = icmp ne %struct.virt_dma_desc* %1, null, !dbg !6039
  br i1 %tobool, label %if.end, label %if.then, !dbg !6041

if.then:                                          ; preds = %entry
  br label %return, !dbg !6042

if.end:                                           ; preds = %entry
  %2 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !6043
  %call1 = call %struct.dw_edma_desc* @vd2dw_edma_desc(%struct.virt_dma_desc* %2) #9, !dbg !6044
  store %struct.dw_edma_desc* %call1, %struct.dw_edma_desc** %desc, align 8, !dbg !6045
  %3 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !6046
  %tobool2 = icmp ne %struct.dw_edma_desc* %3, null, !dbg !6046
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6048

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !6049

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.list_head** %head__, metadata !6050, metadata !DIExpression()), !dbg !6052
  %4 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !6052
  %chunk = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %4, i32 0, i32 2, !dbg !6052
  %5 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !6052
  %list = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %5, i32 0, i32 0, !dbg !6052
  store %struct.list_head* %list, %struct.list_head** %head__, align 8, !dbg !6052
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos__, metadata !6053, metadata !DIExpression()), !dbg !6052
  br label %do.body, !dbg !6054

do.body:                                          ; preds = %if.end4
  br label %do.end, !dbg !6056

do.end:                                           ; preds = %do.body
  %6 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !6054
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !6054
  %7 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6054
  store %struct.list_head* %7, %struct.list_head** %tmp, align 8, !dbg !6056
  %8 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !6054
  store %struct.list_head* %8, %struct.list_head** %pos__, align 8, !dbg !6052
  %9 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !6052
  %10 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !6052
  %cmp = icmp ne %struct.list_head* %9, %10, !dbg !6052
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6052

cond.true:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6058, metadata !DIExpression()), !dbg !6060
  %11 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !6060
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !6060
  store i8* %12, i8** %__mptr, align 8, !dbg !6060
  br label %do.body6, !dbg !6060

do.body6:                                         ; preds = %cond.true
  br label %do.end7, !dbg !6061

do.end7:                                          ; preds = %do.body6
  %13 = load i8*, i8** %__mptr, align 8, !dbg !6060
  %add.ptr = getelementptr i8, i8* %13, i64 0, !dbg !6060
  %14 = bitcast i8* %add.ptr to %struct.dw_edma_chunk*, !dbg !6060
  store %struct.dw_edma_chunk* %14, %struct.dw_edma_chunk** %tmp8, align 8, !dbg !6061
  %15 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %tmp8, align 8, !dbg !6060
  br label %cond.end, !dbg !6052

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !6052

cond.end:                                         ; preds = %cond.false, %do.end7
  %cond = phi %struct.dw_edma_chunk* [ %15, %do.end7 ], [ null, %cond.false ], !dbg !6052
  store %struct.dw_edma_chunk* %cond, %struct.dw_edma_chunk** %tmp5, align 8, !dbg !6052
  %16 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %tmp5, align 8, !dbg !6052
  store %struct.dw_edma_chunk* %16, %struct.dw_edma_chunk** %child, align 8, !dbg !6063
  %17 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %child, align 8, !dbg !6064
  %tobool9 = icmp ne %struct.dw_edma_chunk* %17, null, !dbg !6064
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !6066

if.then10:                                        ; preds = %cond.end
  br label %return, !dbg !6067

if.end11:                                         ; preds = %cond.end
  %18 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %child, align 8, !dbg !6068
  %19 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !6069
  %xfer_sz = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %19, i32 0, i32 5, !dbg !6070
  %20 = load i32, i32* %xfer_sz, align 8, !dbg !6070
  %tobool12 = icmp ne i32 %20, 0, !dbg !6071
  %lnot = xor i1 %tobool12, true, !dbg !6071
  call void @dw_edma_v0_core_start(%struct.dw_edma_chunk* %18, i1 zeroext %lnot) #9, !dbg !6072
  %21 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %child, align 8, !dbg !6073
  %ll_region = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %21, i32 0, i32 5, !dbg !6074
  %sz = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %ll_region, i32 0, i32 2, !dbg !6075
  %22 = load i64, i64* %sz, align 8, !dbg !6075
  %23 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !6076
  %xfer_sz13 = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %23, i32 0, i32 5, !dbg !6077
  %24 = load i32, i32* %xfer_sz13, align 8, !dbg !6078
  %conv = zext i32 %24 to i64, !dbg !6078
  %add = add i64 %conv, %22, !dbg !6078
  %conv14 = trunc i64 %add to i32, !dbg !6078
  store i32 %conv14, i32* %xfer_sz13, align 8, !dbg !6078
  %25 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %child, align 8, !dbg !6079
  call void @dw_edma_free_burst(%struct.dw_edma_chunk* %25) #9, !dbg !6080
  %26 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %child, align 8, !dbg !6081
  %list15 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %26, i32 0, i32 0, !dbg !6082
  call void @list_del(%struct.list_head* %list15) #9, !dbg !6083
  %27 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %child, align 8, !dbg !6084
  %28 = bitcast %struct.dw_edma_chunk* %27 to i8*, !dbg !6084
  call void @kfree(i8* %28) #9, !dbg !6085
  %29 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !6086
  %chunks_alloc = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %29, i32 0, i32 3, !dbg !6087
  %30 = load i32, i32* %chunks_alloc, align 8, !dbg !6088
  %dec = add i32 %30, -1, !dbg !6088
  store i32 %dec, i32* %chunks_alloc, align 8, !dbg !6088
  br label %return, !dbg !6089

return:                                           ; preds = %if.end11, %if.then10, %if.then3, %if.then
  ret void, !dbg !6089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_cookie_complete(%struct.virt_dma_desc* %vd) #0 !dbg !6090 {
entry:
  %vd.addr = alloca %struct.virt_dma_desc*, align 8
  %vc = alloca %struct.virt_dma_chan*, align 8
  %cookie = alloca i32, align 4
  store %struct.virt_dma_desc* %vd, %struct.virt_dma_desc** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd.addr, metadata !6091, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc, metadata !6093, metadata !DIExpression()), !dbg !6094
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !6095
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %0, i32 0, i32 0, !dbg !6096
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx, i32 0, i32 3, !dbg !6097
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6097
  %call = call %struct.virt_dma_chan* @to_virt_chan(%struct.dma_chan* %1) #9, !dbg !6098
  store %struct.virt_dma_chan* %call, %struct.virt_dma_chan** %vc, align 8, !dbg !6094
  call void @llvm.dbg.declare(metadata i32* %cookie, metadata !6099, metadata !DIExpression()), !dbg !6100
  %2 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !6101
  %tx1 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %2, i32 0, i32 0, !dbg !6102
  %cookie2 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx1, i32 0, i32 0, !dbg !6103
  %3 = load i32, i32* %cookie2, align 8, !dbg !6103
  store i32 %3, i32* %cookie, align 4, !dbg !6104
  %4 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !6105
  %tx3 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %4, i32 0, i32 0, !dbg !6106
  call void @dma_cookie_complete(%struct.dma_async_tx_descriptor* %tx3) #9, !dbg !6107
  %5 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !6108
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %5, i32 0, i32 2, !dbg !6109
  %6 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !6110
  %desc_completed = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %6, i32 0, i32 7, !dbg !6111
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* %desc_completed) #9, !dbg !6112
  %7 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !6113
  %task = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %7, i32 0, i32 1, !dbg !6114
  call void @tasklet_schedule(%struct.tasklet_struct* %task) #9, !dbg !6115
  ret void, !dbg !6116
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !6117 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !6118, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6121, metadata !DIExpression()), !dbg !6120
  %0 = load i64, i64* %__edi, align 8, !dbg !6120
  store i64 %0, i64* %__edi, align 8, !dbg !6120
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6122, metadata !DIExpression()), !dbg !6120
  %1 = load i64, i64* %__esi, align 8, !dbg !6120
  store i64 %1, i64* %__esi, align 8, !dbg !6120
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6123, metadata !DIExpression()), !dbg !6120
  %2 = load i64, i64* %__edx, align 8, !dbg !6120
  store i64 %2, i64* %__edx, align 8, !dbg !6120
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6124, metadata !DIExpression()), !dbg !6120
  %3 = load i64, i64* %__ecx, align 8, !dbg !6120
  store i64 %3, i64* %__ecx, align 8, !dbg !6120
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6125, metadata !DIExpression()), !dbg !6120
  %4 = load i64, i64* %__eax, align 8, !dbg !6120
  store i64 %4, i64* %__eax, align 8, !dbg !6120
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !6120
  %6 = call i64 @llvm.read_register.i64(metadata !4735), !dbg !6126
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #5, !dbg !6126, !srcloc !6129
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6126
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6126
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6126
  call void @llvm.write_register.i64(metadata !4735, i64 %asmresult1), !dbg !6126
  %8 = load i64, i64* %__eax, align 8, !dbg !6126
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !6130, metadata !DIExpression()), !dbg !6132
  store i64 -1, i64* %__mask, align 8, !dbg !6132
  %9 = load i64, i64* %__mask, align 8, !dbg !6132
  store i64 %9, i64* %tmp, align 8, !dbg !6132
  %10 = load i64, i64* %tmp, align 8, !dbg !6132
  %and = and i64 %8, %10, !dbg !6126
  store i64 %and, i64* %__ret, align 8, !dbg !6126
  %11 = load i64, i64* %__ret, align 8, !dbg !6120
  store i64 %11, i64* %tmp2, align 8, !dbg !6133
  %12 = load i64, i64* %tmp2, align 8, !dbg !6120
  ret i64 %12, !dbg !6134
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !6135 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6136, metadata !DIExpression()), !dbg !6138
  %0 = load i64, i64* %__edi, align 8, !dbg !6138
  store i64 %0, i64* %__edi, align 8, !dbg !6138
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6139, metadata !DIExpression()), !dbg !6138
  %1 = load i64, i64* %__esi, align 8, !dbg !6138
  store i64 %1, i64* %__esi, align 8, !dbg !6138
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6140, metadata !DIExpression()), !dbg !6138
  %2 = load i64, i64* %__edx, align 8, !dbg !6138
  store i64 %2, i64* %__edx, align 8, !dbg !6138
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6141, metadata !DIExpression()), !dbg !6138
  %3 = load i64, i64* %__ecx, align 8, !dbg !6138
  store i64 %3, i64* %__ecx, align 8, !dbg !6138
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6142, metadata !DIExpression()), !dbg !6138
  %4 = load i64, i64* %__eax, align 8, !dbg !6138
  store i64 %4, i64* %__eax, align 8, !dbg !6138
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !6138
  %6 = call i64 @llvm.read_register.i64(metadata !4735), !dbg !6138
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #5, !dbg !6138, !srcloc !6143
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6138
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6138
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6138
  call void @llvm.write_register.i64(metadata !4735, i64 %asmresult1), !dbg !6138
  ret void, !dbg !6144
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #4

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #5

; Function Attrs: noredzone
declare dso_local void @dw_edma_v0_core_start(%struct.dw_edma_chunk*, i1 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_edma_free_burst(%struct.dw_edma_chunk* %chunk) #0 !dbg !6145 {
entry:
  %chunk.addr = alloca %struct.dw_edma_chunk*, align 8
  %child = alloca %struct.dw_edma_burst*, align 8
  %_next = alloca %struct.dw_edma_burst*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dw_edma_burst*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp6 = alloca %struct.dw_edma_burst*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.dw_edma_burst*, align 8
  store %struct.dw_edma_chunk* %chunk, %struct.dw_edma_chunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chunk** %chunk.addr, metadata !6148, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.declare(metadata %struct.dw_edma_burst** %child, metadata !6150, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.declare(metadata %struct.dw_edma_burst** %_next, metadata !6152, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6154, metadata !DIExpression()), !dbg !6157
  %0 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk.addr, align 8, !dbg !6157
  %burst = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %0, i32 0, i32 2, !dbg !6157
  %1 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !6157
  %list = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %1, i32 0, i32 0, !dbg !6157
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !6157
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6157
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !6157
  store i8* %3, i8** %__mptr, align 8, !dbg !6157
  br label %do.body, !dbg !6157

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6158

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !6157
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !6157
  %5 = bitcast i8* %add.ptr to %struct.dw_edma_burst*, !dbg !6157
  store %struct.dw_edma_burst* %5, %struct.dw_edma_burst** %tmp, align 8, !dbg !6158
  %6 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %tmp, align 8, !dbg !6157
  store %struct.dw_edma_burst* %6, %struct.dw_edma_burst** %child, align 8, !dbg !6160
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !6161, metadata !DIExpression()), !dbg !6163
  %7 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %child, align 8, !dbg !6163
  %list2 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %7, i32 0, i32 0, !dbg !6163
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %list2, i32 0, i32 0, !dbg !6163
  %8 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !6163
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !6163
  store i8* %9, i8** %__mptr1, align 8, !dbg !6163
  br label %do.body4, !dbg !6163

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !6164

do.end5:                                          ; preds = %do.body4
  %10 = load i8*, i8** %__mptr1, align 8, !dbg !6163
  %add.ptr7 = getelementptr i8, i8* %10, i64 0, !dbg !6163
  %11 = bitcast i8* %add.ptr7 to %struct.dw_edma_burst*, !dbg !6163
  store %struct.dw_edma_burst* %11, %struct.dw_edma_burst** %tmp6, align 8, !dbg !6164
  %12 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %tmp6, align 8, !dbg !6163
  store %struct.dw_edma_burst* %12, %struct.dw_edma_burst** %_next, align 8, !dbg !6160
  br label %for.cond, !dbg !6160

for.cond:                                         ; preds = %do.end16, %do.end5
  %13 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %child, align 8, !dbg !6166
  %list8 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %13, i32 0, i32 0, !dbg !6166
  %14 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk.addr, align 8, !dbg !6166
  %burst9 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %14, i32 0, i32 2, !dbg !6166
  %15 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst9, align 8, !dbg !6166
  %list10 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %15, i32 0, i32 0, !dbg !6166
  %cmp = icmp eq %struct.list_head* %list8, %list10, !dbg !6166
  %lnot = xor i1 %cmp, true, !dbg !6166
  br i1 %lnot, label %for.body, label %for.end, !dbg !6160

for.body:                                         ; preds = %for.cond
  %16 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %child, align 8, !dbg !6168
  %list11 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %16, i32 0, i32 0, !dbg !6170
  call void @list_del(%struct.list_head* %list11) #9, !dbg !6171
  %17 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %child, align 8, !dbg !6172
  %18 = bitcast %struct.dw_edma_burst* %17 to i8*, !dbg !6172
  call void @kfree(i8* %18) #9, !dbg !6173
  %19 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk.addr, align 8, !dbg !6174
  %bursts_alloc = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %19, i32 0, i32 3, !dbg !6175
  %20 = load i32, i32* %bursts_alloc, align 8, !dbg !6176
  %dec = add i32 %20, -1, !dbg !6176
  store i32 %dec, i32* %bursts_alloc, align 8, !dbg !6176
  br label %for.inc, !dbg !6177

for.inc:                                          ; preds = %for.body
  %21 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %_next, align 8, !dbg !6166
  store %struct.dw_edma_burst* %21, %struct.dw_edma_burst** %child, align 8, !dbg !6166
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !6178, metadata !DIExpression()), !dbg !6180
  %22 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %_next, align 8, !dbg !6180
  %list13 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %22, i32 0, i32 0, !dbg !6180
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %list13, i32 0, i32 0, !dbg !6180
  %23 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !6180
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !6180
  store i8* %24, i8** %__mptr12, align 8, !dbg !6180
  br label %do.body15, !dbg !6180

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !6181

do.end16:                                         ; preds = %do.body15
  %25 = load i8*, i8** %__mptr12, align 8, !dbg !6180
  %add.ptr18 = getelementptr i8, i8* %25, i64 0, !dbg !6180
  %26 = bitcast i8* %add.ptr18 to %struct.dw_edma_burst*, !dbg !6180
  store %struct.dw_edma_burst* %26, %struct.dw_edma_burst** %tmp17, align 8, !dbg !6181
  %27 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %tmp17, align 8, !dbg !6180
  store %struct.dw_edma_burst* %27, %struct.dw_edma_burst** %_next, align 8, !dbg !6166
  br label %for.cond, !dbg !6166, !llvm.loop !6183

for.end:                                          ; preds = %for.cond
  %28 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %child, align 8, !dbg !6185
  %29 = bitcast %struct.dw_edma_burst* %28 to i8*, !dbg !6185
  call void @kfree(i8* %29) #9, !dbg !6186
  %30 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk.addr, align 8, !dbg !6187
  %burst19 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %30, i32 0, i32 2, !dbg !6188
  store %struct.dw_edma_burst* null, %struct.dw_edma_burst** %burst19, align 8, !dbg !6189
  ret void, !dbg !6190
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.virt_dma_chan* @to_virt_chan(%struct.dma_chan* %chan) #0 !dbg !6191 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.virt_dma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !6194, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6196, metadata !DIExpression()), !dbg !6198
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6198
  %1 = bitcast %struct.dma_chan* %0 to i8*, !dbg !6198
  store i8* %1, i8** %__mptr, align 8, !dbg !6198
  br label %do.body, !dbg !6198

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6199

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6198
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6198
  %3 = bitcast i8* %add.ptr to %struct.virt_dma_chan*, !dbg !6198
  store %struct.virt_dma_chan* %3, %struct.virt_dma_chan** %tmp, align 8, !dbg !6199
  %4 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %tmp, align 8, !dbg !6198
  ret %struct.virt_dma_chan* %4, !dbg !6201
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_cookie_complete(%struct.dma_async_tx_descriptor* %tx) #0 !dbg !6202 {
entry:
  %tx.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  store %struct.dma_async_tx_descriptor* %tx, %struct.dma_async_tx_descriptor** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %tx.addr, metadata !6206, metadata !DIExpression()), !dbg !6207
  br label %do.body, !dbg !6208

do.body:                                          ; preds = %entry
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !6209
  %cookie = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %0, i32 0, i32 0, !dbg !6209
  %1 = load i32, i32* %cookie, align 8, !dbg !6209
  %cmp = icmp slt i32 %1, 1, !dbg !6209
  %lnot = xor i1 %cmp, true, !dbg !6209
  %lnot1 = xor i1 %lnot, true, !dbg !6209
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6209
  %conv = sext i32 %lnot.ext to i64, !dbg !6209
  %tobool = icmp ne i64 %conv, 0, !dbg !6209
  br i1 %tobool, label %if.then, label %if.end, !dbg !6212

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !6209

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !6213

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !6215

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !6213

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 54, i32 0, i64 12) #5, !dbg !6217, !srcloc !6219
  br label %do.end5, !dbg !6217

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !6213

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 241) #5, !dbg !6220, !srcloc !6223
  unreachable, !dbg !6224

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !6213

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !6213

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !6212

do.end9:                                          ; preds = %if.end
  %2 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !6225
  %cookie10 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %2, i32 0, i32 0, !dbg !6226
  %3 = load i32, i32* %cookie10, align 8, !dbg !6226
  %4 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !6227
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %4, i32 0, i32 3, !dbg !6228
  %5 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6228
  %completed_cookie = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %5, i32 0, i32 3, !dbg !6229
  store i32 %3, i32* %completed_cookie, align 4, !dbg !6230
  %6 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !6231
  %cookie11 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %6, i32 0, i32 0, !dbg !6232
  store i32 0, i32* %cookie11, align 8, !dbg !6233
  ret void, !dbg !6234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !6235 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6238, metadata !DIExpression()), !dbg !6239
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6240, metadata !DIExpression()), !dbg !6241
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6242
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6243
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6244
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !6244
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6245
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #9, !dbg !6246
  ret void, !dbg !6247
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #0 !dbg !6248 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !6249, metadata !DIExpression()), !dbg !6250
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !6251
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !6253
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #9, !dbg !6254
  br i1 %call, label %if.end, label %if.then, !dbg !6255

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !6256
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #9, !dbg !6257
  br label %if.end, !dbg !6257

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6258
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !6259 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6262, metadata !DIExpression()), !dbg !6263
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !6264, metadata !DIExpression()), !dbg !6265
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !6266, metadata !DIExpression()), !dbg !6267
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6268
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6270
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6271
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #9, !dbg !6272
  br i1 %call, label %if.end, label %if.then, !dbg !6273

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !6274

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6275
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6276
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !6277
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !6278
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6279
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6280
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !6281
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !6282
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6283
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6284
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !6285
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !6286
  br label %do.body, !dbg !6287

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !6288

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !6290

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !6288

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6292
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6292
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !6292
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !6292
  br label %do.end7, !dbg !6292

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !6288

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !6294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !6295 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6298, metadata !DIExpression()), !dbg !6299
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !6300, metadata !DIExpression()), !dbg !6301
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !6302, metadata !DIExpression()), !dbg !6303
  ret i1 true, !dbg !6304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !6305 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !6311, metadata !DIExpression()), !dbg !6314
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !6316, metadata !DIExpression()), !dbg !6317
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !6318, metadata !DIExpression()), !dbg !6320
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6321, metadata !DIExpression()), !dbg !6329
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6331, metadata !DIExpression()), !dbg !6332
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !6333, metadata !DIExpression()), !dbg !6334
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !6335, metadata !DIExpression()), !dbg !6336
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !6337
  %1 = load i64, i64* %nr.addr, align 8, !dbg !6338
  %div = sdiv i64 %1, 64, !dbg !6338
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !6339
  %2 = bitcast i64* %add.ptr to i8*, !dbg !6337
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !6340
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6341
  %conv.i = trunc i64 %4 to i32, !dbg !6341
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !6342
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !6343
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !6343
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #11, !dbg !6343
  %7 = load i64, i64* %nr.addr, align 8, !dbg !6344
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !6345
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !6320
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !6320
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #5, !dbg !6320, !srcloc !6346
  store i8 %11, i8* %c.i, align 1, !dbg !6320
  %12 = load i8, i8* %c.i, align 1, !dbg !6320
  %tobool.i = trunc i8 %12 to i1, !dbg !6320
  %frombool.i = zext i1 %tobool.i to i8, !dbg !6320
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !6320
  %13 = load i8, i8* %tmp.i, align 1, !dbg !6320
  %tobool1.i = trunc i8 %13 to i1, !dbg !6320
  ret i1 %tobool1.i, !dbg !6347
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !6348 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6352, metadata !DIExpression()), !dbg !6353
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6354, metadata !DIExpression()), !dbg !6355
  ret i1 true, !dbg !6356
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !6357 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6361, metadata !DIExpression()), !dbg !6362
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6363, metadata !DIExpression()), !dbg !6364
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6365, metadata !DIExpression()), !dbg !6366
  ret void, !dbg !6367
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !6368 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !6369, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6371, metadata !DIExpression()), !dbg !6373
  %0 = load i64, i64* %__edi, align 8, !dbg !6373
  store i64 %0, i64* %__edi, align 8, !dbg !6373
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6374, metadata !DIExpression()), !dbg !6373
  %1 = load i64, i64* %__esi, align 8, !dbg !6373
  store i64 %1, i64* %__esi, align 8, !dbg !6373
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6375, metadata !DIExpression()), !dbg !6373
  %2 = load i64, i64* %__edx, align 8, !dbg !6373
  store i64 %2, i64* %__edx, align 8, !dbg !6373
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6376, metadata !DIExpression()), !dbg !6373
  %3 = load i64, i64* %__ecx, align 8, !dbg !6373
  store i64 %3, i64* %__ecx, align 8, !dbg !6373
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6377, metadata !DIExpression()), !dbg !6373
  %4 = load i64, i64* %__eax, align 8, !dbg !6373
  store i64 %4, i64* %__eax, align 8, !dbg !6373
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !6373
  %6 = call i64 @llvm.read_register.i64(metadata !4735), !dbg !6373
  %7 = load i64, i64* %f.addr, align 8, !dbg !6373
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #5, !dbg !6373, !srcloc !6378
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !6373
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !6373
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6373
  call void @llvm.write_register.i64(metadata !4735, i64 %asmresult1), !dbg !6373
  ret void, !dbg !6379
}

; Function Attrs: noredzone
declare dso_local void @dw_edma_v0_core_clear_abort_int(%struct.dw_edma_chan*) #3

; Function Attrs: noredzone
declare dso_local %struct.irq_data* @irq_get_irq_data(i32) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u32(i32 %n) #7 !dbg !6380 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6384, metadata !DIExpression()), !dbg !6388
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !6390, metadata !DIExpression()), !dbg !6391
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6392, metadata !DIExpression()), !dbg !6393
  %0 = load i32, i32* %n.addr, align 4, !dbg !6394
  store i32 %0, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !6395
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #4, !dbg !6396, !srcloc !6397
  store i32 %2, i32* %r.i, align 4, !dbg !6396
  %3 = load i32, i32* %r.i, align 4, !dbg !6398
  %add.i = add i32 %3, 1, !dbg !6399
  %sub = sub i32 %add.i, 1, !dbg !6400
  ret i32 %sub, !dbg !6401
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__roundup_pow_of_two(i64 %n) #7 !dbg !6402 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6405, metadata !DIExpression()), !dbg !6406
  %0 = load i64, i64* %n.addr, align 8, !dbg !6407
  %sub = sub i64 %0, 1, !dbg !6408
  %call = call i32 @fls_long(i64 %sub) #9, !dbg !6409
  %sh_prom = zext i32 %call to i64, !dbg !6410
  %shl = shl i64 1, %sh_prom, !dbg !6410
  ret i64 %shl, !dbg !6411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !6412 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !6413, metadata !DIExpression()), !dbg !6414
  br label %do.body, !dbg !6415

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6416

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !6418

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !6416

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6420
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6420
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6420
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !6420
  br label %do.end3, !dbg !6420

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !6416

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6422
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6423
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !6424
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !6425
  ret void, !dbg !6426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kzalloc(%struct.device* %dev, i64 %size, i32 %gfp) #0 !dbg !6427 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6430, metadata !DIExpression()), !dbg !6431
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6432, metadata !DIExpression()), !dbg !6433
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !6434, metadata !DIExpression()), !dbg !6435
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6436
  %1 = load i64, i64* %size.addr, align 8, !dbg !6437
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !6438
  %or = or i32 %2, 256, !dbg !6439
  %call = call noalias i8* @devm_kmalloc(%struct.device* %0, i64 %1, i32 %or) #9, !dbg !6440
  ret i8* %call, !dbg !6441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_free_desc(%struct.virt_dma_desc* %vdesc) #0 !dbg !6442 {
entry:
  %vdesc.addr = alloca %struct.virt_dma_desc*, align 8
  store %struct.virt_dma_desc* %vdesc, %struct.virt_dma_desc** %vdesc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vdesc.addr, metadata !6443, metadata !DIExpression()), !dbg !6444
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vdesc.addr, align 8, !dbg !6445
  %call = call %struct.dw_edma_desc* @vd2dw_edma_desc(%struct.virt_dma_desc* %0) #9, !dbg !6446
  call void @dw_edma_free_desc(%struct.dw_edma_desc* %call) #9, !dbg !6447
  ret void, !dbg !6448
}

; Function Attrs: noredzone
declare dso_local void @vchan_init(%struct.virt_dma_chan*, %struct.dma_device*) #3

; Function Attrs: noredzone
declare dso_local i32 @dw_edma_v0_core_device_config(%struct.dw_edma_chan*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dma_cap_zero(%struct.dma_cap_mask_t* %dstp) #0 !dbg !6449 {
entry:
  %dstp.addr = alloca %struct.dma_cap_mask_t*, align 8
  store %struct.dma_cap_mask_t* %dstp, %struct.dma_cap_mask_t** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %dstp.addr, metadata !6453, metadata !DIExpression()), !dbg !6454
  %0 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %dstp.addr, align 8, !dbg !6455
  %bits = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %0, i32 0, i32 0, !dbg !6456
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !6455
  call void @bitmap_zero(i64* %arraydecay, i32 16) #9, !dbg !6457
  ret void, !dbg !6458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dma_cap_set(i32 %tx_type, %struct.dma_cap_mask_t* %dstp) #0 !dbg !6459 {
entry:
  %tx_type.addr = alloca i32, align 4
  %dstp.addr = alloca %struct.dma_cap_mask_t*, align 8
  store i32 %tx_type, i32* %tx_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tx_type.addr, metadata !6462, metadata !DIExpression()), !dbg !6463
  store %struct.dma_cap_mask_t* %dstp, %struct.dma_cap_mask_t** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %dstp.addr, metadata !6464, metadata !DIExpression()), !dbg !6465
  %0 = load i32, i32* %tx_type.addr, align 4, !dbg !6466
  %conv = zext i32 %0 to i64, !dbg !6466
  %1 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %dstp.addr, align 8, !dbg !6467
  %bits = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %1, i32 0, i32 0, !dbg !6468
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !6467
  call void @set_bit(i64 %conv, i64* %arraydecay) #9, !dbg !6469
  ret void, !dbg !6470
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_edma_alloc_chan_resources(%struct.dma_chan* %dchan) #0 !dbg !6471 {
entry:
  %retval = alloca i32, align 4
  %dchan.addr = alloca %struct.dma_chan*, align 8
  %chan = alloca %struct.dw_edma_chan*, align 8
  store %struct.dma_chan* %dchan, %struct.dma_chan** %dchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %dchan.addr, metadata !6472, metadata !DIExpression()), !dbg !6473
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !6474, metadata !DIExpression()), !dbg !6475
  %0 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !6476
  %call = call %struct.dw_edma_chan* @dchan2dw_edma_chan(%struct.dma_chan* %0) #9, !dbg !6477
  store %struct.dw_edma_chan* %call, %struct.dw_edma_chan** %chan, align 8, !dbg !6475
  %1 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6478
  %status = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %1, i32 0, i32 9, !dbg !6480
  %2 = load i32, i32* %status, align 8, !dbg !6480
  %cmp = icmp ne i32 %2, 0, !dbg !6481
  br i1 %cmp, label %if.then, label %if.end, !dbg !6482

if.then:                                          ; preds = %entry
  store i32 -16, i32* %retval, align 4, !dbg !6483
  br label %return, !dbg !6483

if.end:                                           ; preds = %entry
  %3 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6484
  %chip = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %3, i32 0, i32 1, !dbg !6485
  %4 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip, align 8, !dbg !6485
  %dev = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %4, i32 0, i32 0, !dbg !6486
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6486
  %call1 = call i32 @pm_runtime_get(%struct.device* %5) #9, !dbg !6487
  store i32 0, i32* %retval, align 4, !dbg !6488
  br label %return, !dbg !6488

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !6489
  ret i32 %6, !dbg !6489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_edma_free_chan_resources(%struct.dma_chan* %dchan) #0 !dbg !6490 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !6491, metadata !DIExpression()), !dbg !6496
  %dchan.addr = alloca %struct.dma_chan*, align 8
  %timeout = alloca i64, align 8
  %chan = alloca %struct.dw_edma_chan*, align 8
  %ret = alloca i32, align 4
  store %struct.dma_chan* %dchan, %struct.dma_chan** %dchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %dchan.addr, metadata !6498, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !6500, metadata !DIExpression()), !dbg !6501
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !6502
  store i32 5000, i32* %m.addr.i, align 4
  %1 = load i32, i32* %m.addr.i, align 4, !dbg !6503
  %2 = call i1 @llvm.is.constant.i32(i32 %1) #5, !dbg !6505
  br i1 %2, label %if.then.i, label %if.else.i, !dbg !6506

if.then.i:                                        ; preds = %entry
  %3 = load i32, i32* %m.addr.i, align 4, !dbg !6507
  %cmp.i = icmp slt i32 %3, 0, !dbg !6510
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6511

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !6512
  br label %msecs_to_jiffies.exit, !dbg !6512

if.end.i:                                         ; preds = %if.then.i
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !6513
  %call.i = call i64 @_msecs_to_jiffies(i32 %4) #11, !dbg !6514
  store i64 %call.i, i64* %retval.i, align 8, !dbg !6515
  br label %msecs_to_jiffies.exit, !dbg !6515

if.else.i:                                        ; preds = %entry
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !6516
  %call2.i = call i64 @__msecs_to_jiffies(i32 %5) #11, !dbg !6518
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !6519
  br label %msecs_to_jiffies.exit, !dbg !6519

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %6 = load i64, i64* %retval.i, align 8, !dbg !6520
  %add = add i64 %0, %6, !dbg !6521
  store i64 %add, i64* %timeout, align 8, !dbg !6501
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !6522, metadata !DIExpression()), !dbg !6523
  %7 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !6524
  %call1 = call %struct.dw_edma_chan* @dchan2dw_edma_chan(%struct.dma_chan* %7) #9, !dbg !6525
  store %struct.dw_edma_chan* %call1, %struct.dw_edma_chan** %chan, align 8, !dbg !6523
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6526, metadata !DIExpression()), !dbg !6527
  br label %while.cond, !dbg !6528

while.cond:                                       ; preds = %if.end6, %msecs_to_jiffies.exit
  %8 = load volatile i64, i64* @jiffies, align 8, !dbg !6529
  %9 = load i64, i64* %timeout, align 8, !dbg !6529
  %sub = sub i64 %8, %9, !dbg !6529
  %cmp = icmp slt i64 %sub, 0, !dbg !6529
  br i1 %cmp, label %while.body, label %while.end, !dbg !6528

while.body:                                       ; preds = %while.cond
  %10 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !6530
  %call2 = call i32 @dw_edma_device_terminate_all(%struct.dma_chan* %10) #9, !dbg !6532
  store i32 %call2, i32* %ret, align 4, !dbg !6533
  %11 = load i32, i32* %ret, align 4, !dbg !6534
  %tobool = icmp ne i32 %11, 0, !dbg !6534
  br i1 %tobool, label %if.end, label %if.then, !dbg !6536

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !6537

if.end:                                           ; preds = %while.body
  %12 = load volatile i64, i64* @jiffies, align 8, !dbg !6538
  %13 = load i64, i64* %timeout, align 8, !dbg !6538
  %sub3 = sub i64 %12, %13, !dbg !6538
  %cmp4 = icmp sge i64 %sub3, 0, !dbg !6538
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !6540

if.then5:                                         ; preds = %if.end
  br label %return, !dbg !6541

if.end6:                                          ; preds = %if.end
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6542, !srcloc !6548
  br label %while.cond, !dbg !6528, !llvm.loop !6549

while.end:                                        ; preds = %if.then, %while.cond
  %14 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6551
  %chip = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %14, i32 0, i32 1, !dbg !6552
  %15 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip, align 8, !dbg !6552
  %dev = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %15, i32 0, i32 0, !dbg !6553
  %16 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6553
  %call7 = call i32 @pm_runtime_put(%struct.device* %16) #9, !dbg !6554
  br label %return, !dbg !6555

return:                                           ; preds = %while.end, %if.then5
  ret void, !dbg !6555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_edma_device_config(%struct.dma_chan* %dchan, %struct.dma_slave_config* %config) #0 !dbg !6556 {
entry:
  %dchan.addr = alloca %struct.dma_chan*, align 8
  %config.addr = alloca %struct.dma_slave_config*, align 8
  %chan = alloca %struct.dw_edma_chan*, align 8
  store %struct.dma_chan* %dchan, %struct.dma_chan** %dchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %dchan.addr, metadata !6557, metadata !DIExpression()), !dbg !6558
  store %struct.dma_slave_config* %config, %struct.dma_slave_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_slave_config** %config.addr, metadata !6559, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !6561, metadata !DIExpression()), !dbg !6562
  %0 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !6563
  %call = call %struct.dw_edma_chan* @dchan2dw_edma_chan(%struct.dma_chan* %0) #9, !dbg !6564
  store %struct.dw_edma_chan* %call, %struct.dw_edma_chan** %chan, align 8, !dbg !6562
  %1 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6565
  %config1 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %1, i32 0, i32 11, !dbg !6566
  %2 = bitcast %struct.dma_slave_config* %config1 to i8*, !dbg !6567
  %3 = load %struct.dma_slave_config*, %struct.dma_slave_config** %config.addr, align 8, !dbg !6568
  %4 = bitcast %struct.dma_slave_config* %3 to i8*, !dbg !6567
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %4, i64 56, i1 false), !dbg !6567
  %5 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6569
  %configured = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %5, i32 0, i32 10, !dbg !6570
  store i8 1, i8* %configured, align 4, !dbg !6571
  ret i32 0, !dbg !6572
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_edma_device_pause(%struct.dma_chan* %dchan) #0 !dbg !6573 {
entry:
  %dchan.addr = alloca %struct.dma_chan*, align 8
  %chan = alloca %struct.dw_edma_chan*, align 8
  %err = alloca i32, align 4
  store %struct.dma_chan* %dchan, %struct.dma_chan** %dchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %dchan.addr, metadata !6574, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !6576, metadata !DIExpression()), !dbg !6577
  %0 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !6578
  %call = call %struct.dw_edma_chan* @dchan2dw_edma_chan(%struct.dma_chan* %0) #9, !dbg !6579
  store %struct.dw_edma_chan* %call, %struct.dw_edma_chan** %chan, align 8, !dbg !6577
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6580, metadata !DIExpression()), !dbg !6581
  store i32 0, i32* %err, align 4, !dbg !6581
  %1 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6582
  %configured = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %1, i32 0, i32 10, !dbg !6584
  %2 = load i8, i8* %configured, align 4, !dbg !6584
  %tobool = icmp ne i8 %2, 0, !dbg !6582
  br i1 %tobool, label %if.else, label %if.then, !dbg !6585

if.then:                                          ; preds = %entry
  store i32 -1, i32* %err, align 4, !dbg !6586
  br label %if.end8, !dbg !6587

if.else:                                          ; preds = %entry
  %3 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6588
  %status = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %3, i32 0, i32 9, !dbg !6590
  %4 = load i32, i32* %status, align 8, !dbg !6590
  %cmp = icmp ne i32 %4, 2, !dbg !6591
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !6592

if.then1:                                         ; preds = %if.else
  store i32 -1, i32* %err, align 4, !dbg !6593
  br label %if.end7, !dbg !6594

if.else2:                                         ; preds = %if.else
  %5 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6595
  %request = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %5, i32 0, i32 8, !dbg !6597
  %6 = load i32, i32* %request, align 4, !dbg !6597
  %cmp3 = icmp ne i32 %6, 0, !dbg !6598
  br i1 %cmp3, label %if.then4, label %if.else5, !dbg !6599

if.then4:                                         ; preds = %if.else2
  store i32 -1, i32* %err, align 4, !dbg !6600
  br label %if.end, !dbg !6601

if.else5:                                         ; preds = %if.else2
  %7 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6602
  %request6 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %7, i32 0, i32 8, !dbg !6603
  store i32 2, i32* %request6, align 4, !dbg !6604
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then4
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then1
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then
  %8 = load i32, i32* %err, align 4, !dbg !6605
  ret i32 %8, !dbg !6606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_edma_device_resume(%struct.dma_chan* %dchan) #0 !dbg !6607 {
entry:
  %dchan.addr = alloca %struct.dma_chan*, align 8
  %chan = alloca %struct.dw_edma_chan*, align 8
  %err = alloca i32, align 4
  store %struct.dma_chan* %dchan, %struct.dma_chan** %dchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %dchan.addr, metadata !6608, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !6610, metadata !DIExpression()), !dbg !6611
  %0 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !6612
  %call = call %struct.dw_edma_chan* @dchan2dw_edma_chan(%struct.dma_chan* %0) #9, !dbg !6613
  store %struct.dw_edma_chan* %call, %struct.dw_edma_chan** %chan, align 8, !dbg !6611
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6614, metadata !DIExpression()), !dbg !6615
  store i32 0, i32* %err, align 4, !dbg !6615
  %1 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6616
  %configured = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %1, i32 0, i32 10, !dbg !6618
  %2 = load i8, i8* %configured, align 4, !dbg !6618
  %tobool = icmp ne i8 %2, 0, !dbg !6616
  br i1 %tobool, label %if.else, label %if.then, !dbg !6619

if.then:                                          ; preds = %entry
  store i32 -1, i32* %err, align 4, !dbg !6620
  br label %if.end8, !dbg !6622

if.else:                                          ; preds = %entry
  %3 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6623
  %status = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %3, i32 0, i32 9, !dbg !6625
  %4 = load i32, i32* %status, align 8, !dbg !6625
  %cmp = icmp ne i32 %4, 1, !dbg !6626
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !6627

if.then1:                                         ; preds = %if.else
  store i32 -1, i32* %err, align 4, !dbg !6628
  br label %if.end7, !dbg !6630

if.else2:                                         ; preds = %if.else
  %5 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6631
  %request = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %5, i32 0, i32 8, !dbg !6633
  %6 = load i32, i32* %request, align 4, !dbg !6633
  %cmp3 = icmp ne i32 %6, 0, !dbg !6634
  br i1 %cmp3, label %if.then4, label %if.else5, !dbg !6635

if.then4:                                         ; preds = %if.else2
  store i32 -1, i32* %err, align 4, !dbg !6636
  br label %if.end, !dbg !6638

if.else5:                                         ; preds = %if.else2
  %7 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6639
  %status6 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %7, i32 0, i32 9, !dbg !6641
  store i32 2, i32* %status6, align 8, !dbg !6642
  %8 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6643
  call void @dw_edma_start_transfer(%struct.dw_edma_chan* %8) #9, !dbg !6644
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then4
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then1
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then
  %9 = load i32, i32* %err, align 4, !dbg !6645
  ret i32 %9, !dbg !6646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_edma_device_terminate_all(%struct.dma_chan* %dchan) #0 !dbg !6647 {
entry:
  %dchan.addr = alloca %struct.dma_chan*, align 8
  %chan = alloca %struct.dw_edma_chan*, align 8
  %err = alloca i32, align 4
  %head = alloca %struct.list_head, align 8
  store %struct.dma_chan* %dchan, %struct.dma_chan** %dchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %dchan.addr, metadata !6648, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !6650, metadata !DIExpression()), !dbg !6651
  %0 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !6652
  %call = call %struct.dw_edma_chan* @dchan2dw_edma_chan(%struct.dma_chan* %0) #9, !dbg !6653
  store %struct.dw_edma_chan* %call, %struct.dw_edma_chan** %chan, align 8, !dbg !6651
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6654, metadata !DIExpression()), !dbg !6655
  store i32 0, i32* %err, align 4, !dbg !6655
  call void @llvm.dbg.declare(metadata %struct.list_head* %head, metadata !6656, metadata !DIExpression()), !dbg !6657
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0, !dbg !6657
  store %struct.list_head* %head, %struct.list_head** %next, align 8, !dbg !6657
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1, !dbg !6657
  store %struct.list_head* %head, %struct.list_head** %prev, align 8, !dbg !6657
  %1 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6658
  %configured = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %1, i32 0, i32 10, !dbg !6660
  %2 = load i8, i8* %configured, align 4, !dbg !6660
  %tobool = icmp ne i8 %2, 0, !dbg !6658
  br i1 %tobool, label %if.else, label %if.then, !dbg !6661

if.then:                                          ; preds = %entry
  br label %if.end23, !dbg !6662

if.else:                                          ; preds = %entry
  %3 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6664
  %status = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %3, i32 0, i32 9, !dbg !6666
  %4 = load i32, i32* %status, align 8, !dbg !6666
  %cmp = icmp eq i32 %4, 1, !dbg !6667
  br i1 %cmp, label %if.then1, label %if.else4, !dbg !6668

if.then1:                                         ; preds = %if.else
  %5 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6669
  %status2 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %5, i32 0, i32 9, !dbg !6671
  store i32 0, i32* %status2, align 8, !dbg !6672
  %6 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6673
  %configured3 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %6, i32 0, i32 10, !dbg !6674
  store i8 0, i8* %configured3, align 4, !dbg !6675
  br label %if.end22, !dbg !6676

if.else4:                                         ; preds = %if.else
  %7 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6677
  %status5 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %7, i32 0, i32 9, !dbg !6679
  %8 = load i32, i32* %status5, align 8, !dbg !6679
  %cmp6 = icmp eq i32 %8, 0, !dbg !6680
  br i1 %cmp6, label %if.then7, label %if.else9, !dbg !6681

if.then7:                                         ; preds = %if.else4
  %9 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6682
  %configured8 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %9, i32 0, i32 10, !dbg !6684
  store i8 0, i8* %configured8, align 4, !dbg !6685
  br label %if.end21, !dbg !6686

if.else9:                                         ; preds = %if.else4
  %10 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6687
  %call10 = call i32 @dw_edma_v0_core_ch_status(%struct.dw_edma_chan* %10) #9, !dbg !6689
  %cmp11 = icmp eq i32 %call10, 0, !dbg !6690
  br i1 %cmp11, label %if.then12, label %if.else15, !dbg !6691

if.then12:                                        ; preds = %if.else9
  %11 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6692
  %status13 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %11, i32 0, i32 9, !dbg !6694
  store i32 0, i32* %status13, align 8, !dbg !6695
  %12 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6696
  %configured14 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %12, i32 0, i32 10, !dbg !6697
  store i8 0, i8* %configured14, align 4, !dbg !6698
  br label %if.end20, !dbg !6699

if.else15:                                        ; preds = %if.else9
  %13 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6700
  %request = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %13, i32 0, i32 8, !dbg !6702
  %14 = load i32, i32* %request, align 4, !dbg !6702
  %cmp16 = icmp ugt i32 %14, 2, !dbg !6703
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !6704

if.then17:                                        ; preds = %if.else15
  store i32 -1, i32* %err, align 4, !dbg !6705
  br label %if.end, !dbg !6707

if.else18:                                        ; preds = %if.else15
  %15 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6708
  %request19 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %15, i32 0, i32 8, !dbg !6710
  store i32 1, i32* %request19, align 4, !dbg !6711
  br label %if.end

if.end:                                           ; preds = %if.else18, %if.then17
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then12
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then7
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then1
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then
  %16 = load i32, i32* %err, align 4, !dbg !6712
  ret i32 %16, !dbg !6713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_edma_device_issue_pending(%struct.dma_chan* %dchan) #0 !dbg !6714 {
entry:
  %lock.addr.i33 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i33, metadata !5783, metadata !DIExpression()), !dbg !6715
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5790, metadata !DIExpression()), !dbg !6717
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5792, metadata !DIExpression()), !dbg !6718
  %dchan.addr = alloca %struct.dma_chan*, align 8
  %chan = alloca %struct.dw_edma_chan*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.dma_chan* %dchan, %struct.dma_chan** %dchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %dchan.addr, metadata !6725, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !6727, metadata !DIExpression()), !dbg !6728
  %0 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !6729
  %call = call %struct.dw_edma_chan* @dchan2dw_edma_chan(%struct.dma_chan* %0) #9, !dbg !6730
  store %struct.dw_edma_chan* %call, %struct.dw_edma_chan** %chan, align 8, !dbg !6728
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6731, metadata !DIExpression()), !dbg !6732
  br label %do.body, !dbg !6733

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6734

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6735, metadata !DIExpression()), !dbg !6737
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6738, metadata !DIExpression()), !dbg !6737
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6737
  %conv = zext i1 %cmp to i32, !dbg !6737
  store i32 1, i32* %tmp, align 4, !dbg !6737
  %1 = load i32, i32* %tmp, align 4, !dbg !6737
  br label %do.body2, !dbg !6739

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6740

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6741

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6743, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6747, metadata !DIExpression()), !dbg !6746
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6746
  %conv8 = zext i1 %cmp7 to i32, !dbg !6746
  store i32 1, i32* %tmp9, align 4, !dbg !6746
  %2 = load i32, i32* %tmp9, align 4, !dbg !6746
  %call10 = call i64 @arch_local_irq_save() #9, !dbg !6748
  store i64 %call10, i64* %flags, align 8, !dbg !6748
  br label %do.end, !dbg !6748

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !6741

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !6740

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6749, !srcloc !6750
  br label %do.body13, !dbg !6749

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6751
  %vc = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %3, i32 0, i32 0, !dbg !6751
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 3, !dbg !6751
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6752
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !6753
  %rlock.i = bitcast %union.anon.3* %5 to %struct.raw_spinlock*, !dbg !6753
  br label %do.end15, !dbg !6751

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !6749

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6740

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6739

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6734

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6754
  %configured = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %6, i32 0, i32 10, !dbg !6756
  %7 = load i8, i8* %configured, align 4, !dbg !6756
  %conv20 = zext i8 %7 to i32, !dbg !6754
  %tobool = icmp ne i32 %conv20, 0, !dbg !6754
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6757

land.lhs.true:                                    ; preds = %do.end19
  %8 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6758
  %request = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %8, i32 0, i32 8, !dbg !6759
  %9 = load i32, i32* %request, align 4, !dbg !6759
  %cmp21 = icmp eq i32 %9, 0, !dbg !6760
  br i1 %cmp21, label %land.lhs.true23, label %if.end, !dbg !6761

land.lhs.true23:                                  ; preds = %land.lhs.true
  %10 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6762
  %status = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %10, i32 0, i32 9, !dbg !6763
  %11 = load i32, i32* %status, align 8, !dbg !6763
  %cmp24 = icmp eq i32 %11, 0, !dbg !6764
  br i1 %cmp24, label %land.lhs.true26, label %if.end, !dbg !6765

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %12 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6766
  %vc27 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %12, i32 0, i32 0, !dbg !6767
  %call28 = call zeroext i1 @vchan_issue_pending(%struct.virt_dma_chan* %vc27) #9, !dbg !6768
  br i1 %call28, label %if.then, label %if.end, !dbg !6769

if.then:                                          ; preds = %land.lhs.true26
  %13 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6770
  %status30 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %13, i32 0, i32 9, !dbg !6772
  store i32 2, i32* %status30, align 8, !dbg !6773
  %14 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6774
  call void @dw_edma_start_transfer(%struct.dw_edma_chan* %14) #9, !dbg !6775
  br label %if.end, !dbg !6776

if.end:                                           ; preds = %if.then, %land.lhs.true26, %land.lhs.true23, %land.lhs.true, %do.end19
  %15 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6777
  %vc31 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %15, i32 0, i32 0, !dbg !6778
  %lock32 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc31, i32 0, i32 3, !dbg !6779
  %16 = load i64, i64* %flags, align 8, !dbg !6780
  store %struct.spinlock* %lock32, %struct.spinlock** %lock.addr.i33, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !364, metadata !5896, metadata !DIExpression()) #5, !dbg !6781
  call void @llvm.dbg.declare(metadata !364, metadata !5900, metadata !DIExpression()) #5, !dbg !6781
  store i32 1, i32* %tmp.i, align 4, !dbg !6781
  %17 = load i32, i32* %tmp.i, align 4, !dbg !6781
  call void @llvm.dbg.declare(metadata !364, metadata !5901, metadata !DIExpression()) #5, !dbg !6782
  call void @llvm.dbg.declare(metadata !364, metadata !5907, metadata !DIExpression()) #5, !dbg !6782
  store i32 1, i32* %tmp8.i, align 4, !dbg !6782
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !6782
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !6783
  call void @arch_local_irq_restore(i64 %19) #11, !dbg !6783
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6784, !srcloc !5911
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i33, align 8, !dbg !6785
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !6785
  %rlock.i34 = bitcast %union.anon.3* %21 to %struct.raw_spinlock*, !dbg !6785
  ret void, !dbg !6786
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_edma_device_tx_status(%struct.dma_chan* %dchan, i32 %cookie, %struct.dma_tx_state* %txstate) #0 !dbg !6787 {
entry:
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !5783, metadata !DIExpression()), !dbg !6788
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5790, metadata !DIExpression()), !dbg !6790
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5792, metadata !DIExpression()), !dbg !6791
  %retval = alloca i32, align 4
  %dchan.addr = alloca %struct.dma_chan*, align 8
  %cookie.addr = alloca i32, align 4
  %txstate.addr = alloca %struct.dma_tx_state*, align 8
  %chan = alloca %struct.dw_edma_chan*, align 8
  %desc = alloca %struct.dw_edma_desc*, align 8
  %vd = alloca %struct.virt_dma_desc*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %residue = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  store %struct.dma_chan* %dchan, %struct.dma_chan** %dchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %dchan.addr, metadata !6798, metadata !DIExpression()), !dbg !6799
  store i32 %cookie, i32* %cookie.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cookie.addr, metadata !6800, metadata !DIExpression()), !dbg !6801
  store %struct.dma_tx_state* %txstate, %struct.dma_tx_state** %txstate.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_tx_state** %txstate.addr, metadata !6802, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !6804, metadata !DIExpression()), !dbg !6805
  %0 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !6806
  %call = call %struct.dw_edma_chan* @dchan2dw_edma_chan(%struct.dma_chan* %0) #9, !dbg !6807
  store %struct.dw_edma_chan* %call, %struct.dw_edma_chan** %chan, align 8, !dbg !6805
  call void @llvm.dbg.declare(metadata %struct.dw_edma_desc** %desc, metadata !6808, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd, metadata !6810, metadata !DIExpression()), !dbg !6811
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6812, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6814, metadata !DIExpression()), !dbg !6815
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !6816, metadata !DIExpression()), !dbg !6817
  store i32 0, i32* %residue, align 4, !dbg !6817
  %1 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !6818
  %2 = load i32, i32* %cookie.addr, align 4, !dbg !6819
  %3 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !6820
  %call1 = call i32 @dma_cookie_status(%struct.dma_chan* %1, i32 %2, %struct.dma_tx_state* %3) #9, !dbg !6821
  store i32 %call1, i32* %ret, align 4, !dbg !6822
  %4 = load i32, i32* %ret, align 4, !dbg !6823
  %cmp = icmp eq i32 %4, 0, !dbg !6825
  br i1 %cmp, label %if.then, label %if.end, !dbg !6826

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !6827
  store i32 %5, i32* %retval, align 4, !dbg !6828
  br label %return, !dbg !6828

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %ret, align 4, !dbg !6829
  %cmp2 = icmp eq i32 %6, 1, !dbg !6831
  br i1 %cmp2, label %land.lhs.true, label %if.end5, !dbg !6832

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6833
  %status = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %7, i32 0, i32 9, !dbg !6834
  %8 = load i32, i32* %status, align 8, !dbg !6834
  %cmp3 = icmp eq i32 %8, 1, !dbg !6835
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6836

if.then4:                                         ; preds = %land.lhs.true
  store i32 2, i32* %ret, align 4, !dbg !6837
  br label %if.end5, !dbg !6838

if.end5:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %9 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !6839
  %tobool = icmp ne %struct.dma_tx_state* %9, null, !dbg !6839
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !6841

if.then6:                                         ; preds = %if.end5
  br label %ret_residue, !dbg !6842

if.end7:                                          ; preds = %if.end5
  br label %do.body, !dbg !6843

do.body:                                          ; preds = %if.end7
  br label %do.body8, !dbg !6844

do.body8:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6845, metadata !DIExpression()), !dbg !6847
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6848, metadata !DIExpression()), !dbg !6847
  %cmp9 = icmp eq i64* %__dummy, %__dummy2, !dbg !6847
  %conv = zext i1 %cmp9 to i32, !dbg !6847
  store i32 1, i32* %tmp, align 4, !dbg !6847
  %10 = load i32, i32* %tmp, align 4, !dbg !6847
  br label %do.body10, !dbg !6849

do.body10:                                        ; preds = %do.body8
  br label %do.body11, !dbg !6850

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !6851

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !6853, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !6857, metadata !DIExpression()), !dbg !6856
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !6856
  %conv16 = zext i1 %cmp15 to i32, !dbg !6856
  store i32 1, i32* %tmp17, align 4, !dbg !6856
  %11 = load i32, i32* %tmp17, align 4, !dbg !6856
  %call18 = call i64 @arch_local_irq_save() #9, !dbg !6858
  store i64 %call18, i64* %flags, align 8, !dbg !6858
  br label %do.end, !dbg !6858

do.end:                                           ; preds = %do.body12
  br label %do.end19, !dbg !6851

do.end19:                                         ; preds = %do.end
  br label %do.body20, !dbg !6850

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6859, !srcloc !6860
  br label %do.body21, !dbg !6859

do.body21:                                        ; preds = %do.body20
  %12 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6861
  %vc = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %12, i32 0, i32 0, !dbg !6861
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 3, !dbg !6861
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6862
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !6863
  %rlock.i = bitcast %union.anon.3* %14 to %struct.raw_spinlock*, !dbg !6863
  br label %do.end23, !dbg !6861

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !6859

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !6850

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !6849

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !6844

do.end27:                                         ; preds = %do.end26
  %15 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6864
  %vc28 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %15, i32 0, i32 0, !dbg !6865
  %16 = load i32, i32* %cookie.addr, align 4, !dbg !6866
  %call29 = call %struct.virt_dma_desc* @vchan_find_desc(%struct.virt_dma_chan* %vc28, i32 %16) #9, !dbg !6867
  store %struct.virt_dma_desc* %call29, %struct.virt_dma_desc** %vd, align 8, !dbg !6868
  %17 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !6869
  %tobool30 = icmp ne %struct.virt_dma_desc* %17, null, !dbg !6869
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !6871

if.then31:                                        ; preds = %do.end27
  %18 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !6872
  %call32 = call %struct.dw_edma_desc* @vd2dw_edma_desc(%struct.virt_dma_desc* %18) #9, !dbg !6874
  store %struct.dw_edma_desc* %call32, %struct.dw_edma_desc** %desc, align 8, !dbg !6875
  %19 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !6876
  %tobool33 = icmp ne %struct.dw_edma_desc* %19, null, !dbg !6876
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !6878

if.then34:                                        ; preds = %if.then31
  %20 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !6879
  %alloc_sz = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %20, i32 0, i32 4, !dbg !6880
  %21 = load i32, i32* %alloc_sz, align 4, !dbg !6880
  %22 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !6881
  %xfer_sz = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %22, i32 0, i32 5, !dbg !6882
  %23 = load i32, i32* %xfer_sz, align 8, !dbg !6882
  %sub = sub i32 %21, %23, !dbg !6883
  store i32 %sub, i32* %residue, align 4, !dbg !6884
  br label %if.end35, !dbg !6885

if.end35:                                         ; preds = %if.then34, %if.then31
  br label %if.end36, !dbg !6886

if.end36:                                         ; preds = %if.end35, %do.end27
  %24 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !6887
  %vc37 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %24, i32 0, i32 0, !dbg !6888
  %lock38 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc37, i32 0, i32 3, !dbg !6889
  %25 = load i64, i64* %flags, align 8, !dbg !6890
  store %struct.spinlock* %lock38, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %25, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !364, metadata !5896, metadata !DIExpression()) #5, !dbg !6891
  call void @llvm.dbg.declare(metadata !364, metadata !5900, metadata !DIExpression()) #5, !dbg !6891
  store i32 1, i32* %tmp.i, align 4, !dbg !6891
  %26 = load i32, i32* %tmp.i, align 4, !dbg !6891
  call void @llvm.dbg.declare(metadata !364, metadata !5901, metadata !DIExpression()) #5, !dbg !6892
  call void @llvm.dbg.declare(metadata !364, metadata !5907, metadata !DIExpression()) #5, !dbg !6892
  store i32 1, i32* %tmp8.i, align 4, !dbg !6892
  %27 = load i32, i32* %tmp8.i, align 4, !dbg !6892
  %28 = load i64, i64* %flags.addr.i, align 8, !dbg !6893
  call void @arch_local_irq_restore(i64 %28) #11, !dbg !6893
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !6894, !srcloc !5911
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !6895
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !6895
  %rlock.i40 = bitcast %union.anon.3* %30 to %struct.raw_spinlock*, !dbg !6895
  br label %ret_residue, !dbg !6896

ret_residue:                                      ; preds = %if.end36, %if.then6
  call void @llvm.dbg.label(metadata !6897), !dbg !6898
  %31 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !6899
  %32 = load i32, i32* %residue, align 4, !dbg !6900
  call void @dma_set_residue(%struct.dma_tx_state* %31, i32 %32) #9, !dbg !6901
  %33 = load i32, i32* %ret, align 4, !dbg !6902
  store i32 %33, i32* %retval, align 4, !dbg !6903
  br label %return, !dbg !6903

return:                                           ; preds = %ret_residue, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !6904
  ret i32 %34, !dbg !6904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @dw_edma_device_prep_slave_sg(%struct.dma_chan* %dchan, %struct.scatterlist* %sgl, i32 %len, i32 %direction, i64 %flags, i8* %context) #0 !dbg !6905 {
entry:
  %dchan.addr = alloca %struct.dma_chan*, align 8
  %sgl.addr = alloca %struct.scatterlist*, align 8
  %len.addr = alloca i32, align 4
  %direction.addr = alloca i32, align 4
  %flags.addr = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %xfer = alloca %struct.dw_edma_transfer, align 8
  store %struct.dma_chan* %dchan, %struct.dma_chan** %dchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %dchan.addr, metadata !6906, metadata !DIExpression()), !dbg !6907
  store %struct.scatterlist* %sgl, %struct.scatterlist** %sgl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sgl.addr, metadata !6908, metadata !DIExpression()), !dbg !6909
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !6910, metadata !DIExpression()), !dbg !6911
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !6912, metadata !DIExpression()), !dbg !6913
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !6914, metadata !DIExpression()), !dbg !6915
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !6916, metadata !DIExpression()), !dbg !6917
  call void @llvm.dbg.declare(metadata %struct.dw_edma_transfer* %xfer, metadata !6918, metadata !DIExpression()), !dbg !6939
  %0 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !6940
  %dchan1 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 0, !dbg !6941
  store %struct.dma_chan* %0, %struct.dma_chan** %dchan1, align 8, !dbg !6942
  %1 = load i32, i32* %direction.addr, align 4, !dbg !6943
  %direction2 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 2, !dbg !6944
  store i32 %1, i32* %direction2, align 8, !dbg !6945
  %2 = load %struct.scatterlist*, %struct.scatterlist** %sgl.addr, align 8, !dbg !6946
  %xfer3 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 1, !dbg !6947
  %sg = bitcast %union.dw_edma_xfer* %xfer3 to %struct.dw_edma_sg*, !dbg !6948
  %sgl4 = getelementptr inbounds %struct.dw_edma_sg, %struct.dw_edma_sg* %sg, i32 0, i32 0, !dbg !6949
  store %struct.scatterlist* %2, %struct.scatterlist** %sgl4, align 8, !dbg !6950
  %3 = load i32, i32* %len.addr, align 4, !dbg !6951
  %xfer5 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 1, !dbg !6952
  %sg6 = bitcast %union.dw_edma_xfer* %xfer5 to %struct.dw_edma_sg*, !dbg !6953
  %len7 = getelementptr inbounds %struct.dw_edma_sg, %struct.dw_edma_sg* %sg6, i32 0, i32 1, !dbg !6954
  store i32 %3, i32* %len7, align 8, !dbg !6955
  %4 = load i64, i64* %flags.addr, align 8, !dbg !6956
  %flags8 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 3, !dbg !6957
  store i64 %4, i64* %flags8, align 8, !dbg !6958
  %cyclic = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 4, !dbg !6959
  store i8 0, i8* %cyclic, align 8, !dbg !6960
  %call = call %struct.dma_async_tx_descriptor* @dw_edma_device_transfer(%struct.dw_edma_transfer* %xfer) #9, !dbg !6961
  ret %struct.dma_async_tx_descriptor* %call, !dbg !6962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @dw_edma_device_prep_dma_cyclic(%struct.dma_chan* %dchan, i64 %paddr, i64 %len, i64 %count, i32 %direction, i64 %flags) #0 !dbg !6963 {
entry:
  %dchan.addr = alloca %struct.dma_chan*, align 8
  %paddr.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %count.addr = alloca i64, align 8
  %direction.addr = alloca i32, align 4
  %flags.addr = alloca i64, align 8
  %xfer = alloca %struct.dw_edma_transfer, align 8
  store %struct.dma_chan* %dchan, %struct.dma_chan** %dchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %dchan.addr, metadata !6964, metadata !DIExpression()), !dbg !6965
  store i64 %paddr, i64* %paddr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %paddr.addr, metadata !6966, metadata !DIExpression()), !dbg !6967
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6968, metadata !DIExpression()), !dbg !6969
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !6970, metadata !DIExpression()), !dbg !6971
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !6972, metadata !DIExpression()), !dbg !6973
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !6974, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.declare(metadata %struct.dw_edma_transfer* %xfer, metadata !6976, metadata !DIExpression()), !dbg !6977
  %0 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !6978
  %dchan1 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 0, !dbg !6979
  store %struct.dma_chan* %0, %struct.dma_chan** %dchan1, align 8, !dbg !6980
  %1 = load i32, i32* %direction.addr, align 4, !dbg !6981
  %direction2 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 2, !dbg !6982
  store i32 %1, i32* %direction2, align 8, !dbg !6983
  %2 = load i64, i64* %paddr.addr, align 8, !dbg !6984
  %xfer3 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 1, !dbg !6985
  %cyclic = bitcast %union.dw_edma_xfer* %xfer3 to %struct.dw_edma_cyclic*, !dbg !6986
  %paddr4 = getelementptr inbounds %struct.dw_edma_cyclic, %struct.dw_edma_cyclic* %cyclic, i32 0, i32 0, !dbg !6987
  store i64 %2, i64* %paddr4, align 8, !dbg !6988
  %3 = load i64, i64* %len.addr, align 8, !dbg !6989
  %xfer5 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 1, !dbg !6990
  %cyclic6 = bitcast %union.dw_edma_xfer* %xfer5 to %struct.dw_edma_cyclic*, !dbg !6991
  %len7 = getelementptr inbounds %struct.dw_edma_cyclic, %struct.dw_edma_cyclic* %cyclic6, i32 0, i32 1, !dbg !6992
  store i64 %3, i64* %len7, align 8, !dbg !6993
  %4 = load i64, i64* %count.addr, align 8, !dbg !6994
  %xfer8 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 1, !dbg !6995
  %cyclic9 = bitcast %union.dw_edma_xfer* %xfer8 to %struct.dw_edma_cyclic*, !dbg !6996
  %cnt = getelementptr inbounds %struct.dw_edma_cyclic, %struct.dw_edma_cyclic* %cyclic9, i32 0, i32 2, !dbg !6997
  store i64 %4, i64* %cnt, align 8, !dbg !6998
  %5 = load i64, i64* %flags.addr, align 8, !dbg !6999
  %flags10 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 3, !dbg !7000
  store i64 %5, i64* %flags10, align 8, !dbg !7001
  %cyclic11 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %xfer, i32 0, i32 4, !dbg !7002
  store i8 1, i8* %cyclic11, align 8, !dbg !7003
  %call = call %struct.dma_async_tx_descriptor* @dw_edma_device_transfer(%struct.dw_edma_transfer* %xfer) #9, !dbg !7004
  ret %struct.dma_async_tx_descriptor* %call, !dbg !7005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_set_max_seg_size(%struct.device* %dev, i32 %size) #0 !dbg !7006 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7008, metadata !DIExpression()), !dbg !7009
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7010, metadata !DIExpression()), !dbg !7011
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7012
  %dma_parms = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 20, !dbg !7014
  %1 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms, align 8, !dbg !7014
  %tobool = icmp ne %struct.device_dma_parameters* %1, null, !dbg !7012
  br i1 %tobool, label %if.then, label %if.end, !dbg !7015

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %size.addr, align 4, !dbg !7016
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7018
  %dma_parms1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 20, !dbg !7019
  %4 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms1, align 8, !dbg !7019
  %max_segment_size = getelementptr inbounds %struct.device_dma_parameters, %struct.device_dma_parameters* %4, i32 0, i32 0, !dbg !7020
  store i32 %2, i32* %max_segment_size, align 8, !dbg !7021
  store i32 0, i32* %retval, align 4, !dbg !7022
  br label %return, !dbg !7022

if.end:                                           ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !7023
  br label %return, !dbg !7023

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !7024
  ret i32 %5, !dbg !7024
}

; Function Attrs: noredzone
declare dso_local i32 @dma_async_device_register(%struct.dma_device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fls_long(i64 %l) #0 !dbg !7025 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7029, metadata !DIExpression()), !dbg !7033
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7035, metadata !DIExpression()), !dbg !7036
  %l.addr = alloca i64, align 8
  store i64 %l, i64* %l.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %l.addr, metadata !7037, metadata !DIExpression()), !dbg !7038
  %0 = load i64, i64* %l.addr, align 8, !dbg !7039
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7036
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !7040
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !7041
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #4, !dbg !7040, !srcloc !7042
  store i32 %3, i32* %bitpos.i, align 4, !dbg !7040
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !7043
  %add.i = add i32 %4, 1, !dbg !7044
  ret i32 %add.i, !dbg !7045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_edma_free_desc(%struct.dw_edma_desc* %desc) #0 !dbg !7046 {
entry:
  %desc.addr = alloca %struct.dw_edma_desc*, align 8
  store %struct.dw_edma_desc* %desc, %struct.dw_edma_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_desc** %desc.addr, metadata !7049, metadata !DIExpression()), !dbg !7050
  %0 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7051
  call void @dw_edma_free_chunk(%struct.dw_edma_desc* %0) #9, !dbg !7052
  %1 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7053
  %2 = bitcast %struct.dw_edma_desc* %1 to i8*, !dbg !7053
  call void @kfree(i8* %2) #9, !dbg !7054
  ret void, !dbg !7055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_edma_free_chunk(%struct.dw_edma_desc* %desc) #0 !dbg !7056 {
entry:
  %desc.addr = alloca %struct.dw_edma_desc*, align 8
  %child = alloca %struct.dw_edma_chunk*, align 8
  %_next = alloca %struct.dw_edma_chunk*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dw_edma_chunk*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp7 = alloca %struct.dw_edma_chunk*, align 8
  %__mptr13 = alloca i8*, align 8
  %tmp18 = alloca %struct.dw_edma_chunk*, align 8
  store %struct.dw_edma_desc* %desc, %struct.dw_edma_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_desc** %desc.addr, metadata !7057, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chunk** %child, metadata !7059, metadata !DIExpression()), !dbg !7060
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chunk** %_next, metadata !7061, metadata !DIExpression()), !dbg !7062
  %0 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7063
  %chunk = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %0, i32 0, i32 2, !dbg !7065
  %1 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7065
  %tobool = icmp ne %struct.dw_edma_chunk* %1, null, !dbg !7063
  br i1 %tobool, label %if.end, label %if.then, !dbg !7066

if.then:                                          ; preds = %entry
  br label %return, !dbg !7067

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7068, metadata !DIExpression()), !dbg !7071
  %2 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7071
  %chunk1 = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %2, i32 0, i32 2, !dbg !7071
  %3 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk1, align 8, !dbg !7071
  %list = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %3, i32 0, i32 0, !dbg !7071
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !7071
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7071
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !7071
  store i8* %5, i8** %__mptr, align 8, !dbg !7071
  br label %do.body, !dbg !7071

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !7072

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !7071
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !7071
  %7 = bitcast i8* %add.ptr to %struct.dw_edma_chunk*, !dbg !7071
  store %struct.dw_edma_chunk* %7, %struct.dw_edma_chunk** %tmp, align 8, !dbg !7072
  %8 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %tmp, align 8, !dbg !7071
  store %struct.dw_edma_chunk* %8, %struct.dw_edma_chunk** %child, align 8, !dbg !7074
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !7075, metadata !DIExpression()), !dbg !7077
  %9 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %child, align 8, !dbg !7077
  %list3 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %9, i32 0, i32 0, !dbg !7077
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %list3, i32 0, i32 0, !dbg !7077
  %10 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !7077
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !7077
  store i8* %11, i8** %__mptr2, align 8, !dbg !7077
  br label %do.body5, !dbg !7077

do.body5:                                         ; preds = %do.end
  br label %do.end6, !dbg !7078

do.end6:                                          ; preds = %do.body5
  %12 = load i8*, i8** %__mptr2, align 8, !dbg !7077
  %add.ptr8 = getelementptr i8, i8* %12, i64 0, !dbg !7077
  %13 = bitcast i8* %add.ptr8 to %struct.dw_edma_chunk*, !dbg !7077
  store %struct.dw_edma_chunk* %13, %struct.dw_edma_chunk** %tmp7, align 8, !dbg !7078
  %14 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %tmp7, align 8, !dbg !7077
  store %struct.dw_edma_chunk* %14, %struct.dw_edma_chunk** %_next, align 8, !dbg !7074
  br label %for.cond, !dbg !7074

for.cond:                                         ; preds = %do.end17, %do.end6
  %15 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %child, align 8, !dbg !7080
  %list9 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %15, i32 0, i32 0, !dbg !7080
  %16 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7080
  %chunk10 = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %16, i32 0, i32 2, !dbg !7080
  %17 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk10, align 8, !dbg !7080
  %list11 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %17, i32 0, i32 0, !dbg !7080
  %cmp = icmp eq %struct.list_head* %list9, %list11, !dbg !7080
  %lnot = xor i1 %cmp, true, !dbg !7080
  br i1 %lnot, label %for.body, label %for.end, !dbg !7074

for.body:                                         ; preds = %for.cond
  %18 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %child, align 8, !dbg !7082
  call void @dw_edma_free_burst(%struct.dw_edma_chunk* %18) #9, !dbg !7084
  %19 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %child, align 8, !dbg !7085
  %list12 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %19, i32 0, i32 0, !dbg !7086
  call void @list_del(%struct.list_head* %list12) #9, !dbg !7087
  %20 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %child, align 8, !dbg !7088
  %21 = bitcast %struct.dw_edma_chunk* %20 to i8*, !dbg !7088
  call void @kfree(i8* %21) #9, !dbg !7089
  %22 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7090
  %chunks_alloc = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %22, i32 0, i32 3, !dbg !7091
  %23 = load i32, i32* %chunks_alloc, align 8, !dbg !7092
  %dec = add i32 %23, -1, !dbg !7092
  store i32 %dec, i32* %chunks_alloc, align 8, !dbg !7092
  br label %for.inc, !dbg !7093

for.inc:                                          ; preds = %for.body
  %24 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %_next, align 8, !dbg !7080
  store %struct.dw_edma_chunk* %24, %struct.dw_edma_chunk** %child, align 8, !dbg !7080
  call void @llvm.dbg.declare(metadata i8** %__mptr13, metadata !7094, metadata !DIExpression()), !dbg !7096
  %25 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %_next, align 8, !dbg !7096
  %list14 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %25, i32 0, i32 0, !dbg !7096
  %next15 = getelementptr inbounds %struct.list_head, %struct.list_head* %list14, i32 0, i32 0, !dbg !7096
  %26 = load %struct.list_head*, %struct.list_head** %next15, align 8, !dbg !7096
  %27 = bitcast %struct.list_head* %26 to i8*, !dbg !7096
  store i8* %27, i8** %__mptr13, align 8, !dbg !7096
  br label %do.body16, !dbg !7096

do.body16:                                        ; preds = %for.inc
  br label %do.end17, !dbg !7097

do.end17:                                         ; preds = %do.body16
  %28 = load i8*, i8** %__mptr13, align 8, !dbg !7096
  %add.ptr19 = getelementptr i8, i8* %28, i64 0, !dbg !7096
  %29 = bitcast i8* %add.ptr19 to %struct.dw_edma_chunk*, !dbg !7096
  store %struct.dw_edma_chunk* %29, %struct.dw_edma_chunk** %tmp18, align 8, !dbg !7097
  %30 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %tmp18, align 8, !dbg !7096
  store %struct.dw_edma_chunk* %30, %struct.dw_edma_chunk** %_next, align 8, !dbg !7080
  br label %for.cond, !dbg !7080, !llvm.loop !7099

for.end:                                          ; preds = %for.cond
  %31 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %child, align 8, !dbg !7101
  %32 = bitcast %struct.dw_edma_chunk* %31 to i8*, !dbg !7101
  call void @kfree(i8* %32) #9, !dbg !7102
  %33 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7103
  %chunk20 = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %33, i32 0, i32 2, !dbg !7104
  store %struct.dw_edma_chunk* null, %struct.dw_edma_chunk** %chunk20, align 8, !dbg !7105
  br label %return, !dbg !7106

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !7106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_zero(i64* %dst, i32 %nbits) #0 !dbg !7107 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !7113, metadata !DIExpression()), !dbg !7114
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7115, metadata !DIExpression()), !dbg !7116
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !7117
  %conv = zext i32 %0 to i64, !dbg !7117
  %add = add i64 %conv, 64, !dbg !7117
  %sub = sub i64 %add, 1, !dbg !7117
  %div = udiv i64 %sub, 64, !dbg !7117
  %mul = mul i64 %div, 8, !dbg !7118
  %conv1 = trunc i64 %mul to i32, !dbg !7117
  store i32 %conv1, i32* %len, align 4, !dbg !7116
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !7119
  %2 = bitcast i64* %1 to i8*, !dbg !7120
  %3 = load i32, i32* %len, align 4, !dbg !7121
  %conv2 = zext i32 %3 to i64, !dbg !7121
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 %conv2, i1 false), !dbg !7120
  ret void, !dbg !7122
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !7123 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7126, metadata !DIExpression()), !dbg !7128
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7130, metadata !DIExpression()), !dbg !7131
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7132, metadata !DIExpression()), !dbg !7134
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7136, metadata !DIExpression()), !dbg !7137
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7138, metadata !DIExpression()), !dbg !7139
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7140, metadata !DIExpression()), !dbg !7141
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7142
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7143
  %div = sdiv i64 %1, 64, !dbg !7143
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7144
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7142
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7145
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7146
  %conv.i = trunc i64 %4 to i32, !dbg !7146
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !7147
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7148
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7148
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #11, !dbg !7148
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7149
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7150
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7151
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #5, !dbg !7153
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7154

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7155
  %12 = bitcast i64* %11 to i8*, !dbg !7155
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7155
  %shr.i = ashr i64 %13, 3, !dbg !7155
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7155
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7157
  %and.i = and i64 %14, 7, !dbg !7157
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7157
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7157
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #5, !dbg !7158, !srcloc !7159
  br label %arch_set_bit.exit, !dbg !7160

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7161
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7163
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #5, !dbg !7164, !srcloc !7165
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7166
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dw_edma_chan* @dchan2dw_edma_chan(%struct.dma_chan* %dchan) #0 !dbg !7167 {
entry:
  %dchan.addr = alloca %struct.dma_chan*, align 8
  store %struct.dma_chan* %dchan, %struct.dma_chan** %dchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %dchan.addr, metadata !7170, metadata !DIExpression()), !dbg !7171
  %0 = load %struct.dma_chan*, %struct.dma_chan** %dchan.addr, align 8, !dbg !7172
  %call = call %struct.virt_dma_chan* @to_virt_chan(%struct.dma_chan* %0) #9, !dbg !7173
  %call1 = call %struct.dw_edma_chan* @vc2dw_edma_chan(%struct.virt_dma_chan* %call) #9, !dbg !7174
  ret %struct.dw_edma_chan* %call1, !dbg !7175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_get(%struct.device* %dev) #0 !dbg !7176 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7177, metadata !DIExpression()), !dbg !7178
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7179
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 5) #9, !dbg !7180
  ret i32 %call, !dbg !7181
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dw_edma_chan* @vc2dw_edma_chan(%struct.virt_dma_chan* %vc) #0 !dbg !7182 {
entry:
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dw_edma_chan*, align 8
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !7185, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7187, metadata !DIExpression()), !dbg !7189
  %0 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !7189
  %1 = bitcast %struct.virt_dma_chan* %0 to i8*, !dbg !7189
  store i8* %1, i8** %__mptr, align 8, !dbg !7189
  br label %do.body, !dbg !7189

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7190

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7189
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7189
  %3 = bitcast i8* %add.ptr to %struct.dw_edma_chan*, !dbg !7189
  store %struct.dw_edma_chan* %3, %struct.dw_edma_chan** %tmp, align 8, !dbg !7190
  %4 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %tmp, align 8, !dbg !7189
  ret %struct.dw_edma_chan* %4, !dbg !7192
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_resume(%struct.device*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put(%struct.device* %dev) #0 !dbg !7193 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7194, metadata !DIExpression()), !dbg !7195
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7196
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 5) #9, !dbg !7197
  ret i32 %call, !dbg !7198
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !7199 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !7200, metadata !DIExpression()), !dbg !7201
  %0 = load i32, i32* %m.addr, align 4, !dbg !7202
  %conv = zext i32 %0 to i64, !dbg !7202
  %add = add i64 %conv, 4, !dbg !7203
  %sub = sub i64 %add, 1, !dbg !7204
  %div = sdiv i64 %sub, 4, !dbg !7205
  ret i64 %div, !dbg !7206
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #3

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_idle(%struct.device*, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @dw_edma_v0_core_ch_status(%struct.dw_edma_chan*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @vchan_issue_pending(%struct.virt_dma_chan* %vc) #0 !dbg !7207 {
entry:
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !7210, metadata !DIExpression()), !dbg !7211
  %0 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !7212
  %desc_submitted = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %0, i32 0, i32 5, !dbg !7213
  %1 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !7214
  %desc_issued = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %1, i32 0, i32 6, !dbg !7215
  call void @list_splice_tail_init(%struct.list_head* %desc_submitted, %struct.list_head* %desc_issued) #9, !dbg !7216
  %2 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !7217
  %desc_issued1 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %2, i32 0, i32 6, !dbg !7218
  %call = call i32 @list_empty(%struct.list_head* %desc_issued1) #9, !dbg !7219
  %tobool = icmp ne i32 %call, 0, !dbg !7220
  %lnot = xor i1 %tobool, true, !dbg !7220
  ret i1 %lnot, !dbg !7221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice_tail_init(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !7222 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !7223, metadata !DIExpression()), !dbg !7224
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7225, metadata !DIExpression()), !dbg !7226
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7227
  %call = call i32 @list_empty(%struct.list_head* %0) #9, !dbg !7229
  %tobool = icmp ne i32 %call, 0, !dbg !7229
  br i1 %tobool, label %if.end, label %if.then, !dbg !7230

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7231
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7233
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !7234
  %3 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7234
  %4 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7235
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %3, %struct.list_head* %4) #9, !dbg !7236
  %5 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7237
  call void @INIT_LIST_HEAD(%struct.list_head* %5) #9, !dbg !7238
  br label %if.end, !dbg !7239

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7240
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !7241 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7246, metadata !DIExpression()), !dbg !7247
  br label %do.body, !dbg !7248

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7250

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7248
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !7248
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7248
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !7250
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !7248
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7252
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !7253
  %conv = zext i1 %cmp to i32, !dbg !7253
  ret i32 %conv, !dbg !7254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_splice(%struct.list_head* %list, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7255 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %first = alloca %struct.list_head*, align 8
  %last = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !7258, metadata !DIExpression()), !dbg !7259
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7260, metadata !DIExpression()), !dbg !7261
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7262, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.declare(metadata %struct.list_head** %first, metadata !7264, metadata !DIExpression()), !dbg !7265
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7266
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !7267
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !7267
  store %struct.list_head* %1, %struct.list_head** %first, align 8, !dbg !7265
  call void @llvm.dbg.declare(metadata %struct.list_head** %last, metadata !7268, metadata !DIExpression()), !dbg !7269
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7270
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !7271
  %3 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !7271
  store %struct.list_head* %3, %struct.list_head** %last, align 8, !dbg !7269
  %4 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7272
  %5 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !7273
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 1, !dbg !7274
  store %struct.list_head* %4, %struct.list_head** %prev3, align 8, !dbg !7275
  %6 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !7276
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7277
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !7278
  store %struct.list_head* %6, %struct.list_head** %next4, align 8, !dbg !7279
  %8 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7280
  %9 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !7281
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !7282
  store %struct.list_head* %8, %struct.list_head** %next5, align 8, !dbg !7283
  %10 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !7284
  %11 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7285
  %prev6 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 1, !dbg !7286
  store %struct.list_head* %10, %struct.list_head** %prev6, align 8, !dbg !7287
  ret void, !dbg !7288
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_cookie_status(%struct.dma_chan* %chan, i32 %cookie, %struct.dma_tx_state* %state) #0 !dbg !7289 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %cookie.addr = alloca i32, align 4
  %state.addr = alloca %struct.dma_tx_state*, align 8
  %used = alloca i32, align 4
  %complete = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !7290, metadata !DIExpression()), !dbg !7291
  store i32 %cookie, i32* %cookie.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cookie.addr, metadata !7292, metadata !DIExpression()), !dbg !7293
  store %struct.dma_tx_state* %state, %struct.dma_tx_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_tx_state** %state.addr, metadata !7294, metadata !DIExpression()), !dbg !7295
  call void @llvm.dbg.declare(metadata i32* %used, metadata !7296, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.declare(metadata i32* %complete, metadata !7298, metadata !DIExpression()), !dbg !7299
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7300
  %cookie1 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 2, !dbg !7301
  %1 = load i32, i32* %cookie1, align 8, !dbg !7301
  store i32 %1, i32* %used, align 4, !dbg !7302
  %2 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7303
  %completed_cookie = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %2, i32 0, i32 3, !dbg !7304
  %3 = load i32, i32* %completed_cookie, align 4, !dbg !7304
  store i32 %3, i32* %complete, align 4, !dbg !7305
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7306, !srcloc !7307
  %4 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !7308
  %tobool = icmp ne %struct.dma_tx_state* %4, null, !dbg !7308
  br i1 %tobool, label %if.then, label %if.end, !dbg !7310

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %complete, align 4, !dbg !7311
  %6 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !7313
  %last = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %6, i32 0, i32 0, !dbg !7314
  store i32 %5, i32* %last, align 4, !dbg !7315
  %7 = load i32, i32* %used, align 4, !dbg !7316
  %8 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !7317
  %used2 = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %8, i32 0, i32 1, !dbg !7318
  store i32 %7, i32* %used2, align 4, !dbg !7319
  %9 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !7320
  %residue = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %9, i32 0, i32 2, !dbg !7321
  store i32 0, i32* %residue, align 4, !dbg !7322
  %10 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !7323
  %in_flight_bytes = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %10, i32 0, i32 3, !dbg !7324
  store i32 0, i32* %in_flight_bytes, align 4, !dbg !7325
  br label %if.end, !dbg !7326

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %cookie.addr, align 4, !dbg !7327
  %12 = load i32, i32* %complete, align 4, !dbg !7328
  %13 = load i32, i32* %used, align 4, !dbg !7329
  %call = call i32 @dma_async_is_complete(i32 %11, i32 %12, i32 %13) #9, !dbg !7330
  ret i32 %call, !dbg !7331
}

; Function Attrs: noredzone
declare dso_local %struct.virt_dma_desc* @vchan_find_desc(%struct.virt_dma_chan*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_set_residue(%struct.dma_tx_state* %state, i32 %residue) #0 !dbg !7332 {
entry:
  %state.addr = alloca %struct.dma_tx_state*, align 8
  %residue.addr = alloca i32, align 4
  store %struct.dma_tx_state* %state, %struct.dma_tx_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_tx_state** %state.addr, metadata !7335, metadata !DIExpression()), !dbg !7336
  store i32 %residue, i32* %residue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %residue.addr, metadata !7337, metadata !DIExpression()), !dbg !7338
  %0 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !7339
  %tobool = icmp ne %struct.dma_tx_state* %0, null, !dbg !7339
  br i1 %tobool, label %if.then, label %if.end, !dbg !7341

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %residue.addr, align 4, !dbg !7342
  %2 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !7343
  %residue1 = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %2, i32 0, i32 2, !dbg !7344
  store i32 %1, i32* %residue1, align 4, !dbg !7345
  br label %if.end, !dbg !7343

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_async_is_complete(i32 %cookie, i32 %last_complete, i32 %last_used) #0 !dbg !7347 {
entry:
  %retval = alloca i32, align 4
  %cookie.addr = alloca i32, align 4
  %last_complete.addr = alloca i32, align 4
  %last_used.addr = alloca i32, align 4
  store i32 %cookie, i32* %cookie.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cookie.addr, metadata !7350, metadata !DIExpression()), !dbg !7351
  store i32 %last_complete, i32* %last_complete.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last_complete.addr, metadata !7352, metadata !DIExpression()), !dbg !7353
  store i32 %last_used, i32* %last_used.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last_used.addr, metadata !7354, metadata !DIExpression()), !dbg !7355
  %0 = load i32, i32* %last_complete.addr, align 4, !dbg !7356
  %1 = load i32, i32* %last_used.addr, align 4, !dbg !7358
  %cmp = icmp sle i32 %0, %1, !dbg !7359
  br i1 %cmp, label %if.then, label %if.else, !dbg !7360

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %cookie.addr, align 4, !dbg !7361
  %3 = load i32, i32* %last_complete.addr, align 4, !dbg !7364
  %cmp1 = icmp sle i32 %2, %3, !dbg !7365
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !7366

lor.lhs.false:                                    ; preds = %if.then
  %4 = load i32, i32* %cookie.addr, align 4, !dbg !7367
  %5 = load i32, i32* %last_used.addr, align 4, !dbg !7368
  %cmp2 = icmp sgt i32 %4, %5, !dbg !7369
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !7370

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  store i32 0, i32* %retval, align 4, !dbg !7371
  br label %return, !dbg !7371

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end8, !dbg !7372

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %cookie.addr, align 4, !dbg !7373
  %7 = load i32, i32* %last_complete.addr, align 4, !dbg !7376
  %cmp4 = icmp sle i32 %6, %7, !dbg !7377
  br i1 %cmp4, label %land.lhs.true, label %if.end7, !dbg !7378

land.lhs.true:                                    ; preds = %if.else
  %8 = load i32, i32* %cookie.addr, align 4, !dbg !7379
  %9 = load i32, i32* %last_used.addr, align 4, !dbg !7380
  %cmp5 = icmp sgt i32 %8, %9, !dbg !7381
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !7382

if.then6:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !7383
  br label %return, !dbg !7383

if.end7:                                          ; preds = %land.lhs.true, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end
  store i32 1, i32* %retval, align 4, !dbg !7384
  br label %return, !dbg !7384

return:                                           ; preds = %if.end8, %if.then6, %if.then3
  %10 = load i32, i32* %retval, align 4, !dbg !7385
  ret i32 %10, !dbg !7385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @dw_edma_device_transfer(%struct.dw_edma_transfer* %xfer) #0 !dbg !7386 {
entry:
  %retval = alloca %struct.dma_async_tx_descriptor*, align 8
  %xfer.addr = alloca %struct.dw_edma_transfer*, align 8
  %chan = alloca %struct.dw_edma_chan*, align 8
  %dir = alloca i32, align 4
  %src_addr = alloca i64, align 8
  %dst_addr = alloca i64, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %chunk = alloca %struct.dw_edma_chunk*, align 8
  %burst = alloca %struct.dw_edma_burst*, align 8
  %desc = alloca %struct.dw_edma_desc*, align 8
  %cnt = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.dw_edma_transfer* %xfer, %struct.dw_edma_transfer** %xfer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_transfer** %xfer.addr, metadata !7390, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !7392, metadata !DIExpression()), !dbg !7393
  %0 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7394
  %dchan = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %0, i32 0, i32 0, !dbg !7395
  %1 = load %struct.dma_chan*, %struct.dma_chan** %dchan, align 8, !dbg !7395
  %call = call %struct.dw_edma_chan* @dchan2dw_edma_chan(%struct.dma_chan* %1) #9, !dbg !7396
  store %struct.dw_edma_chan* %call, %struct.dw_edma_chan** %chan, align 8, !dbg !7393
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !7397, metadata !DIExpression()), !dbg !7398
  %2 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7399
  %direction = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %2, i32 0, i32 2, !dbg !7400
  %3 = load i32, i32* %direction, align 8, !dbg !7400
  store i32 %3, i32* %dir, align 4, !dbg !7398
  call void @llvm.dbg.declare(metadata i64* %src_addr, metadata !7401, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.declare(metadata i64* %dst_addr, metadata !7403, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !7405, metadata !DIExpression()), !dbg !7406
  store %struct.scatterlist* null, %struct.scatterlist** %sg, align 8, !dbg !7406
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chunk** %chunk, metadata !7407, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.declare(metadata %struct.dw_edma_burst** %burst, metadata !7409, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.declare(metadata %struct.dw_edma_desc** %desc, metadata !7411, metadata !DIExpression()), !dbg !7412
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !7413, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7415, metadata !DIExpression()), !dbg !7416
  %4 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7417
  %configured = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %4, i32 0, i32 10, !dbg !7419
  %5 = load i8, i8* %configured, align 4, !dbg !7419
  %tobool = icmp ne i8 %5, 0, !dbg !7417
  br i1 %tobool, label %if.end, label %if.then, !dbg !7420

if.then:                                          ; preds = %entry
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !7421
  br label %return, !dbg !7421

if.end:                                           ; preds = %entry
  %6 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7422
  %config = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %6, i32 0, i32 11, !dbg !7423
  %direction1 = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %config, i32 0, i32 0, !dbg !7424
  %7 = load i32, i32* %direction1, align 8, !dbg !7424
  switch i32 %7, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb6
  ], !dbg !7425

sw.bb:                                            ; preds = %if.end
  %8 = load i32, i32* %dir, align 4, !dbg !7426
  %cmp = icmp eq i32 %8, 2, !dbg !7429
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !7430

land.lhs.true:                                    ; preds = %sw.bb
  %9 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7431
  %dir2 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %9, i32 0, i32 3, !dbg !7432
  %10 = load i32, i32* %dir2, align 4, !dbg !7432
  %cmp3 = icmp eq i32 %10, 1, !dbg !7433
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7434

if.then4:                                         ; preds = %land.lhs.true
  br label %sw.epilog, !dbg !7435

if.end5:                                          ; preds = %land.lhs.true, %sw.bb
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !7436
  br label %return, !dbg !7436

sw.bb6:                                           ; preds = %if.end
  %11 = load i32, i32* %dir, align 4, !dbg !7437
  %cmp7 = icmp eq i32 %11, 1, !dbg !7439
  br i1 %cmp7, label %land.lhs.true8, label %if.end12, !dbg !7440

land.lhs.true8:                                   ; preds = %sw.bb6
  %12 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7441
  %dir9 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %12, i32 0, i32 3, !dbg !7442
  %13 = load i32, i32* %dir9, align 4, !dbg !7442
  %cmp10 = icmp eq i32 %13, 0, !dbg !7443
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !7444

if.then11:                                        ; preds = %land.lhs.true8
  br label %sw.epilog, !dbg !7445

if.end12:                                         ; preds = %land.lhs.true8, %sw.bb6
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !7446
  br label %return, !dbg !7446

sw.default:                                       ; preds = %if.end
  %14 = load i32, i32* %dir, align 4, !dbg !7447
  %cmp13 = icmp eq i32 %14, 1, !dbg !7449
  br i1 %cmp13, label %land.lhs.true14, label %if.end18, !dbg !7450

land.lhs.true14:                                  ; preds = %sw.default
  %15 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7451
  %dir15 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %15, i32 0, i32 3, !dbg !7452
  %16 = load i32, i32* %dir15, align 4, !dbg !7452
  %cmp16 = icmp eq i32 %16, 1, !dbg !7453
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !7454

if.then17:                                        ; preds = %land.lhs.true14
  br label %sw.epilog, !dbg !7455

if.end18:                                         ; preds = %land.lhs.true14, %sw.default
  %17 = load i32, i32* %dir, align 4, !dbg !7456
  %cmp19 = icmp eq i32 %17, 2, !dbg !7458
  br i1 %cmp19, label %land.lhs.true20, label %if.end24, !dbg !7459

land.lhs.true20:                                  ; preds = %if.end18
  %18 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7460
  %dir21 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %18, i32 0, i32 3, !dbg !7461
  %19 = load i32, i32* %dir21, align 4, !dbg !7461
  %cmp22 = icmp eq i32 %19, 0, !dbg !7462
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !7463

if.then23:                                        ; preds = %land.lhs.true20
  br label %sw.epilog, !dbg !7464

if.end24:                                         ; preds = %land.lhs.true20, %if.end18
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !7465
  br label %return, !dbg !7465

sw.epilog:                                        ; preds = %if.then23, %if.then17, %if.then11, %if.then4
  %20 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7466
  %cyclic = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %20, i32 0, i32 4, !dbg !7468
  %21 = load i8, i8* %cyclic, align 8, !dbg !7468
  %tobool25 = trunc i8 %21 to i1, !dbg !7468
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !7469

if.then26:                                        ; preds = %sw.epilog
  %22 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7470
  %xfer27 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %22, i32 0, i32 1, !dbg !7473
  %cyclic28 = bitcast %union.dw_edma_xfer* %xfer27 to %struct.dw_edma_cyclic*, !dbg !7474
  %len = getelementptr inbounds %struct.dw_edma_cyclic, %struct.dw_edma_cyclic* %cyclic28, i32 0, i32 1, !dbg !7475
  %23 = load i64, i64* %len, align 8, !dbg !7475
  %tobool29 = icmp ne i64 %23, 0, !dbg !7470
  br i1 %tobool29, label %lor.lhs.false, label %if.then34, !dbg !7476

lor.lhs.false:                                    ; preds = %if.then26
  %24 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7477
  %xfer30 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %24, i32 0, i32 1, !dbg !7478
  %cyclic31 = bitcast %union.dw_edma_xfer* %xfer30 to %struct.dw_edma_cyclic*, !dbg !7479
  %cnt32 = getelementptr inbounds %struct.dw_edma_cyclic, %struct.dw_edma_cyclic* %cyclic31, i32 0, i32 2, !dbg !7480
  %25 = load i64, i64* %cnt32, align 8, !dbg !7480
  %tobool33 = icmp ne i64 %25, 0, !dbg !7477
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !7481

if.then34:                                        ; preds = %lor.lhs.false, %if.then26
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !7482
  br label %return, !dbg !7482

if.end35:                                         ; preds = %lor.lhs.false
  br label %if.end42, !dbg !7483

if.else:                                          ; preds = %sw.epilog
  %26 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7484
  %xfer36 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %26, i32 0, i32 1, !dbg !7487
  %sg37 = bitcast %union.dw_edma_xfer* %xfer36 to %struct.dw_edma_sg*, !dbg !7488
  %len38 = getelementptr inbounds %struct.dw_edma_sg, %struct.dw_edma_sg* %sg37, i32 0, i32 1, !dbg !7489
  %27 = load i32, i32* %len38, align 8, !dbg !7489
  %cmp39 = icmp ult i32 %27, 1, !dbg !7490
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !7491

if.then40:                                        ; preds = %if.else
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !7492
  br label %return, !dbg !7492

if.end41:                                         ; preds = %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end35
  %28 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7493
  %call43 = call %struct.dw_edma_desc* @dw_edma_alloc_desc(%struct.dw_edma_chan* %28) #9, !dbg !7494
  store %struct.dw_edma_desc* %call43, %struct.dw_edma_desc** %desc, align 8, !dbg !7495
  %29 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !7496
  %tobool44 = icmp ne %struct.dw_edma_desc* %29, null, !dbg !7496
  %lnot = xor i1 %tobool44, true, !dbg !7496
  %lnot45 = xor i1 %lnot, true, !dbg !7496
  %lnot46 = xor i1 %lnot45, true, !dbg !7496
  %lnot.ext = zext i1 %lnot46 to i32, !dbg !7496
  %conv = sext i32 %lnot.ext to i64, !dbg !7496
  %tobool47 = icmp ne i64 %conv, 0, !dbg !7496
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !7498

if.then48:                                        ; preds = %if.end42
  br label %err_alloc, !dbg !7499

if.end49:                                         ; preds = %if.end42
  %30 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !7500
  %call50 = call %struct.dw_edma_chunk* @dw_edma_alloc_chunk(%struct.dw_edma_desc* %30) #9, !dbg !7501
  store %struct.dw_edma_chunk* %call50, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7502
  %31 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7503
  %tobool51 = icmp ne %struct.dw_edma_chunk* %31, null, !dbg !7503
  %lnot52 = xor i1 %tobool51, true, !dbg !7503
  %lnot54 = xor i1 %lnot52, true, !dbg !7503
  %lnot56 = xor i1 %lnot54, true, !dbg !7503
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !7503
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !7503
  %tobool59 = icmp ne i64 %conv58, 0, !dbg !7503
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !7505

if.then60:                                        ; preds = %if.end49
  br label %err_alloc, !dbg !7506

if.end61:                                         ; preds = %if.end49
  %32 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7507
  %config62 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %32, i32 0, i32 11, !dbg !7508
  %src_addr63 = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %config62, i32 0, i32 1, !dbg !7509
  %33 = load i64, i64* %src_addr63, align 8, !dbg !7509
  store i64 %33, i64* %src_addr, align 8, !dbg !7510
  %34 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7511
  %config64 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %34, i32 0, i32 11, !dbg !7512
  %dst_addr65 = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %config64, i32 0, i32 2, !dbg !7513
  %35 = load i64, i64* %dst_addr65, align 8, !dbg !7513
  store i64 %35, i64* %dst_addr, align 8, !dbg !7514
  %36 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7515
  %cyclic66 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %36, i32 0, i32 4, !dbg !7517
  %37 = load i8, i8* %cyclic66, align 8, !dbg !7517
  %tobool67 = trunc i8 %37 to i1, !dbg !7517
  br i1 %tobool67, label %if.then68, label %if.else73, !dbg !7518

if.then68:                                        ; preds = %if.end61
  %38 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7519
  %xfer69 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %38, i32 0, i32 1, !dbg !7521
  %cyclic70 = bitcast %union.dw_edma_xfer* %xfer69 to %struct.dw_edma_cyclic*, !dbg !7522
  %cnt71 = getelementptr inbounds %struct.dw_edma_cyclic, %struct.dw_edma_cyclic* %cyclic70, i32 0, i32 2, !dbg !7523
  %39 = load i64, i64* %cnt71, align 8, !dbg !7523
  %conv72 = trunc i64 %39 to i32, !dbg !7519
  store i32 %conv72, i32* %cnt, align 4, !dbg !7524
  br label %if.end79, !dbg !7525

if.else73:                                        ; preds = %if.end61
  %40 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7526
  %xfer74 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %40, i32 0, i32 1, !dbg !7528
  %sg75 = bitcast %union.dw_edma_xfer* %xfer74 to %struct.dw_edma_sg*, !dbg !7529
  %len76 = getelementptr inbounds %struct.dw_edma_sg, %struct.dw_edma_sg* %sg75, i32 0, i32 1, !dbg !7530
  %41 = load i32, i32* %len76, align 8, !dbg !7530
  store i32 %41, i32* %cnt, align 4, !dbg !7531
  %42 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7532
  %xfer77 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %42, i32 0, i32 1, !dbg !7533
  %sg78 = bitcast %union.dw_edma_xfer* %xfer77 to %struct.dw_edma_sg*, !dbg !7534
  %sgl = getelementptr inbounds %struct.dw_edma_sg, %struct.dw_edma_sg* %sg78, i32 0, i32 0, !dbg !7535
  %43 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !7535
  store %struct.scatterlist* %43, %struct.scatterlist** %sg, align 8, !dbg !7536
  br label %if.end79

if.end79:                                         ; preds = %if.else73, %if.then68
  store i32 0, i32* %i, align 4, !dbg !7537
  br label %for.cond, !dbg !7539

for.cond:                                         ; preds = %for.inc, %if.end79
  %44 = load i32, i32* %i, align 4, !dbg !7540
  %45 = load i32, i32* %cnt, align 4, !dbg !7542
  %cmp80 = icmp ult i32 %44, %45, !dbg !7543
  br i1 %cmp80, label %for.body, label %for.end, !dbg !7544

for.body:                                         ; preds = %for.cond
  %46 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7545
  %cyclic82 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %46, i32 0, i32 4, !dbg !7548
  %47 = load i8, i8* %cyclic82, align 8, !dbg !7548
  %tobool83 = trunc i8 %47 to i1, !dbg !7548
  br i1 %tobool83, label %if.end87, label %land.lhs.true84, !dbg !7549

land.lhs.true84:                                  ; preds = %for.body
  %48 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !7550
  %tobool85 = icmp ne %struct.scatterlist* %48, null, !dbg !7550
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !7551

if.then86:                                        ; preds = %land.lhs.true84
  br label %for.end, !dbg !7552

if.end87:                                         ; preds = %land.lhs.true84, %for.body
  %49 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7553
  %bursts_alloc = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %49, i32 0, i32 3, !dbg !7555
  %50 = load i32, i32* %bursts_alloc, align 8, !dbg !7555
  %51 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7556
  %ll_max = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %51, i32 0, i32 5, !dbg !7557
  %52 = load i32, i32* %ll_max, align 8, !dbg !7557
  %cmp88 = icmp eq i32 %50, %52, !dbg !7558
  br i1 %cmp88, label %if.then90, label %if.end103, !dbg !7559

if.then90:                                        ; preds = %if.end87
  %53 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !7560
  %call91 = call %struct.dw_edma_chunk* @dw_edma_alloc_chunk(%struct.dw_edma_desc* %53) #9, !dbg !7562
  store %struct.dw_edma_chunk* %call91, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7563
  %54 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7564
  %tobool92 = icmp ne %struct.dw_edma_chunk* %54, null, !dbg !7564
  %lnot93 = xor i1 %tobool92, true, !dbg !7564
  %lnot95 = xor i1 %lnot93, true, !dbg !7564
  %lnot97 = xor i1 %lnot95, true, !dbg !7564
  %lnot.ext98 = zext i1 %lnot97 to i32, !dbg !7564
  %conv99 = sext i32 %lnot.ext98 to i64, !dbg !7564
  %tobool100 = icmp ne i64 %conv99, 0, !dbg !7564
  br i1 %tobool100, label %if.then101, label %if.end102, !dbg !7566

if.then101:                                       ; preds = %if.then90
  br label %err_alloc, !dbg !7567

if.end102:                                        ; preds = %if.then90
  br label %if.end103, !dbg !7568

if.end103:                                        ; preds = %if.end102, %if.end87
  %55 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7569
  %call104 = call %struct.dw_edma_burst* @dw_edma_alloc_burst(%struct.dw_edma_chunk* %55) #9, !dbg !7570
  store %struct.dw_edma_burst* %call104, %struct.dw_edma_burst** %burst, align 8, !dbg !7571
  %56 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7572
  %tobool105 = icmp ne %struct.dw_edma_burst* %56, null, !dbg !7572
  %lnot106 = xor i1 %tobool105, true, !dbg !7572
  %lnot108 = xor i1 %lnot106, true, !dbg !7572
  %lnot110 = xor i1 %lnot108, true, !dbg !7572
  %lnot.ext111 = zext i1 %lnot110 to i32, !dbg !7572
  %conv112 = sext i32 %lnot.ext111 to i64, !dbg !7572
  %tobool113 = icmp ne i64 %conv112, 0, !dbg !7572
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !7574

if.then114:                                       ; preds = %if.end103
  br label %err_alloc, !dbg !7575

if.end115:                                        ; preds = %if.end103
  %57 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7576
  %cyclic116 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %57, i32 0, i32 4, !dbg !7578
  %58 = load i8, i8* %cyclic116, align 8, !dbg !7578
  %tobool117 = trunc i8 %58 to i1, !dbg !7578
  br i1 %tobool117, label %if.then118, label %if.else123, !dbg !7579

if.then118:                                       ; preds = %if.end115
  %59 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7580
  %xfer119 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %59, i32 0, i32 1, !dbg !7581
  %cyclic120 = bitcast %union.dw_edma_xfer* %xfer119 to %struct.dw_edma_cyclic*, !dbg !7582
  %len121 = getelementptr inbounds %struct.dw_edma_cyclic, %struct.dw_edma_cyclic* %cyclic120, i32 0, i32 1, !dbg !7583
  %60 = load i64, i64* %len121, align 8, !dbg !7583
  %conv122 = trunc i64 %60 to i32, !dbg !7580
  %61 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7584
  %sz = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %61, i32 0, i32 3, !dbg !7585
  store i32 %conv122, i32* %sz, align 8, !dbg !7586
  br label %if.end125, !dbg !7584

if.else123:                                       ; preds = %if.end115
  %62 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !7587
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %62, i32 0, i32 4, !dbg !7587
  %63 = load i32, i32* %dma_length, align 8, !dbg !7587
  %64 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7588
  %sz124 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %64, i32 0, i32 3, !dbg !7589
  store i32 %63, i32* %sz124, align 8, !dbg !7590
  br label %if.end125

if.end125:                                        ; preds = %if.else123, %if.then118
  %65 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7591
  %sz126 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %65, i32 0, i32 3, !dbg !7592
  %66 = load i32, i32* %sz126, align 8, !dbg !7592
  %conv127 = zext i32 %66 to i64, !dbg !7591
  %67 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7593
  %ll_region = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %67, i32 0, i32 5, !dbg !7594
  %sz128 = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %ll_region, i32 0, i32 2, !dbg !7595
  %68 = load i64, i64* %sz128, align 8, !dbg !7596
  %add = add i64 %68, %conv127, !dbg !7596
  store i64 %add, i64* %sz128, align 8, !dbg !7596
  %69 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7597
  %sz129 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %69, i32 0, i32 3, !dbg !7598
  %70 = load i32, i32* %sz129, align 8, !dbg !7598
  %71 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !7599
  %alloc_sz = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %71, i32 0, i32 4, !dbg !7600
  %72 = load i32, i32* %alloc_sz, align 4, !dbg !7601
  %add130 = add i32 %72, %70, !dbg !7601
  store i32 %add130, i32* %alloc_sz, align 4, !dbg !7601
  %73 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7602
  %dir131 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %73, i32 0, i32 3, !dbg !7604
  %74 = load i32, i32* %dir131, align 4, !dbg !7604
  %cmp132 = icmp eq i32 %74, 0, !dbg !7605
  br i1 %cmp132, label %if.then134, label %if.else143, !dbg !7606

if.then134:                                       ; preds = %if.end125
  %75 = load i64, i64* %src_addr, align 8, !dbg !7607
  %76 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7609
  %sar = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %76, i32 0, i32 1, !dbg !7610
  store i64 %75, i64* %sar, align 8, !dbg !7611
  %77 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7612
  %cyclic135 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %77, i32 0, i32 4, !dbg !7614
  %78 = load i8, i8* %cyclic135, align 8, !dbg !7614
  %tobool136 = trunc i8 %78 to i1, !dbg !7614
  br i1 %tobool136, label %if.then137, label %if.else140, !dbg !7615

if.then137:                                       ; preds = %if.then134
  %79 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7616
  %xfer138 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %79, i32 0, i32 1, !dbg !7618
  %cyclic139 = bitcast %union.dw_edma_xfer* %xfer138 to %struct.dw_edma_cyclic*, !dbg !7619
  %paddr = getelementptr inbounds %struct.dw_edma_cyclic, %struct.dw_edma_cyclic* %cyclic139, i32 0, i32 0, !dbg !7620
  %80 = load i64, i64* %paddr, align 8, !dbg !7620
  %81 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7621
  %dar = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %81, i32 0, i32 2, !dbg !7622
  store i64 %80, i64* %dar, align 8, !dbg !7623
  br label %if.end142, !dbg !7624

if.else140:                                       ; preds = %if.then134
  %82 = load i64, i64* %dst_addr, align 8, !dbg !7625
  %83 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7627
  %dar141 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %83, i32 0, i32 2, !dbg !7628
  store i64 %82, i64* %dar141, align 8, !dbg !7629
  br label %if.end142

if.end142:                                        ; preds = %if.else140, %if.then137
  br label %if.end155, !dbg !7630

if.else143:                                       ; preds = %if.end125
  %84 = load i64, i64* %dst_addr, align 8, !dbg !7631
  %85 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7633
  %dar144 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %85, i32 0, i32 2, !dbg !7634
  store i64 %84, i64* %dar144, align 8, !dbg !7635
  %86 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7636
  %cyclic145 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %86, i32 0, i32 4, !dbg !7638
  %87 = load i8, i8* %cyclic145, align 8, !dbg !7638
  %tobool146 = trunc i8 %87 to i1, !dbg !7638
  br i1 %tobool146, label %if.then147, label %if.else152, !dbg !7639

if.then147:                                       ; preds = %if.else143
  %88 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7640
  %xfer148 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %88, i32 0, i32 1, !dbg !7642
  %cyclic149 = bitcast %union.dw_edma_xfer* %xfer148 to %struct.dw_edma_cyclic*, !dbg !7643
  %paddr150 = getelementptr inbounds %struct.dw_edma_cyclic, %struct.dw_edma_cyclic* %cyclic149, i32 0, i32 0, !dbg !7644
  %89 = load i64, i64* %paddr150, align 8, !dbg !7644
  %90 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7645
  %sar151 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %90, i32 0, i32 1, !dbg !7646
  store i64 %89, i64* %sar151, align 8, !dbg !7647
  br label %if.end154, !dbg !7648

if.else152:                                       ; preds = %if.else143
  %91 = load i64, i64* %src_addr, align 8, !dbg !7649
  %92 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7651
  %sar153 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %92, i32 0, i32 1, !dbg !7652
  store i64 %91, i64* %sar153, align 8, !dbg !7653
  br label %if.end154

if.end154:                                        ; preds = %if.else152, %if.then147
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.end142
  %93 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7654
  %cyclic156 = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %93, i32 0, i32 4, !dbg !7656
  %94 = load i8, i8* %cyclic156, align 8, !dbg !7656
  %tobool157 = trunc i8 %94 to i1, !dbg !7656
  br i1 %tobool157, label %if.end166, label %if.then158, !dbg !7657

if.then158:                                       ; preds = %if.end155
  %95 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !7658
  %dma_length159 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %95, i32 0, i32 4, !dbg !7658
  %96 = load i32, i32* %dma_length159, align 8, !dbg !7658
  %conv160 = zext i32 %96 to i64, !dbg !7658
  %97 = load i64, i64* %src_addr, align 8, !dbg !7660
  %add161 = add i64 %97, %conv160, !dbg !7660
  store i64 %add161, i64* %src_addr, align 8, !dbg !7660
  %98 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !7661
  %dma_length162 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %98, i32 0, i32 4, !dbg !7661
  %99 = load i32, i32* %dma_length162, align 8, !dbg !7661
  %conv163 = zext i32 %99 to i64, !dbg !7661
  %100 = load i64, i64* %dst_addr, align 8, !dbg !7662
  %add164 = add i64 %100, %conv163, !dbg !7662
  store i64 %add164, i64* %dst_addr, align 8, !dbg !7662
  %101 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !7663
  %call165 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %101) #9, !dbg !7664
  store %struct.scatterlist* %call165, %struct.scatterlist** %sg, align 8, !dbg !7665
  br label %if.end166, !dbg !7666

if.end166:                                        ; preds = %if.then158, %if.end155
  br label %for.inc, !dbg !7667

for.inc:                                          ; preds = %if.end166
  %102 = load i32, i32* %i, align 4, !dbg !7668
  %inc = add i32 %102, 1, !dbg !7668
  store i32 %inc, i32* %i, align 4, !dbg !7668
  br label %for.cond, !dbg !7669, !llvm.loop !7670

for.end:                                          ; preds = %if.then86, %for.cond
  %103 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7672
  %vc = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %103, i32 0, i32 0, !dbg !7673
  %104 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !7674
  %vd = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %104, i32 0, i32 0, !dbg !7675
  %105 = load %struct.dw_edma_transfer*, %struct.dw_edma_transfer** %xfer.addr, align 8, !dbg !7676
  %flags = getelementptr inbounds %struct.dw_edma_transfer, %struct.dw_edma_transfer* %105, i32 0, i32 3, !dbg !7677
  %106 = load i64, i64* %flags, align 8, !dbg !7677
  %call167 = call %struct.dma_async_tx_descriptor* @vchan_tx_prep(%struct.virt_dma_chan* %vc, %struct.virt_dma_desc* %vd, i64 %106) #9, !dbg !7678
  store %struct.dma_async_tx_descriptor* %call167, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !7679
  br label %return, !dbg !7679

err_alloc:                                        ; preds = %if.then114, %if.then101, %if.then60, %if.then48
  call void @llvm.dbg.label(metadata !7680), !dbg !7681
  %107 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !7682
  %tobool168 = icmp ne %struct.dw_edma_desc* %107, null, !dbg !7682
  br i1 %tobool168, label %if.then169, label %if.end170, !dbg !7684

if.then169:                                       ; preds = %err_alloc
  %108 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !7685
  call void @dw_edma_free_desc(%struct.dw_edma_desc* %108) #9, !dbg !7686
  br label %if.end170, !dbg !7686

if.end170:                                        ; preds = %if.then169, %err_alloc
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !7687
  br label %return, !dbg !7687

return:                                           ; preds = %if.end170, %for.end, %if.then40, %if.then34, %if.end24, %if.end12, %if.end5, %if.then
  %109 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !7688
  ret %struct.dma_async_tx_descriptor* %109, !dbg !7688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dw_edma_desc* @dw_edma_alloc_desc(%struct.dw_edma_chan* %chan) #0 !dbg !7689 {
entry:
  %retval = alloca %struct.dw_edma_desc*, align 8
  %chan.addr = alloca %struct.dw_edma_chan*, align 8
  %desc = alloca %struct.dw_edma_desc*, align 8
  store %struct.dw_edma_chan* %chan, %struct.dw_edma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan.addr, metadata !7692, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.declare(metadata %struct.dw_edma_desc** %desc, metadata !7694, metadata !DIExpression()), !dbg !7695
  %call = call i8* @kzalloc(i64 144, i32 2048) #9, !dbg !7696
  %0 = bitcast i8* %call to %struct.dw_edma_desc*, !dbg !7696
  store %struct.dw_edma_desc* %0, %struct.dw_edma_desc** %desc, align 8, !dbg !7697
  %1 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !7698
  %tobool = icmp ne %struct.dw_edma_desc* %1, null, !dbg !7698
  %lnot = xor i1 %tobool, true, !dbg !7698
  %lnot1 = xor i1 %lnot, true, !dbg !7698
  %lnot2 = xor i1 %lnot1, true, !dbg !7698
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7698
  %conv = sext i32 %lnot.ext to i64, !dbg !7698
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7698
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7700

if.then:                                          ; preds = %entry
  store %struct.dw_edma_desc* null, %struct.dw_edma_desc** %retval, align 8, !dbg !7701
  br label %return, !dbg !7701

if.end:                                           ; preds = %entry
  %2 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan.addr, align 8, !dbg !7702
  %3 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !7703
  %chan4 = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %3, i32 0, i32 1, !dbg !7704
  store %struct.dw_edma_chan* %2, %struct.dw_edma_chan** %chan4, align 8, !dbg !7705
  %4 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !7706
  %call5 = call %struct.dw_edma_chunk* @dw_edma_alloc_chunk(%struct.dw_edma_desc* %4) #9, !dbg !7708
  %tobool6 = icmp ne %struct.dw_edma_chunk* %call5, null, !dbg !7708
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !7709

if.then7:                                         ; preds = %if.end
  %5 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !7710
  %6 = bitcast %struct.dw_edma_desc* %5 to i8*, !dbg !7710
  call void @kfree(i8* %6) #9, !dbg !7712
  store %struct.dw_edma_desc* null, %struct.dw_edma_desc** %retval, align 8, !dbg !7713
  br label %return, !dbg !7713

if.end8:                                          ; preds = %if.end
  %7 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc, align 8, !dbg !7714
  store %struct.dw_edma_desc* %7, %struct.dw_edma_desc** %retval, align 8, !dbg !7715
  br label %return, !dbg !7715

return:                                           ; preds = %if.end8, %if.then7, %if.then
  %8 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %retval, align 8, !dbg !7716
  ret %struct.dw_edma_desc* %8, !dbg !7716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dw_edma_chunk* @dw_edma_alloc_chunk(%struct.dw_edma_desc* %desc) #0 !dbg !7717 {
entry:
  %retval = alloca %struct.dw_edma_chunk*, align 8
  %desc.addr = alloca %struct.dw_edma_desc*, align 8
  %chan = alloca %struct.dw_edma_chan*, align 8
  %dw = alloca %struct.dw_edma*, align 8
  %chunk = alloca %struct.dw_edma_chunk*, align 8
  store %struct.dw_edma_desc* %desc, %struct.dw_edma_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_desc** %desc.addr, metadata !7720, metadata !DIExpression()), !dbg !7721
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chan** %chan, metadata !7722, metadata !DIExpression()), !dbg !7723
  %0 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7724
  %chan1 = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %0, i32 0, i32 1, !dbg !7725
  %1 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan1, align 8, !dbg !7725
  store %struct.dw_edma_chan* %1, %struct.dw_edma_chan** %chan, align 8, !dbg !7723
  call void @llvm.dbg.declare(metadata %struct.dw_edma** %dw, metadata !7726, metadata !DIExpression()), !dbg !7727
  %2 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7728
  %chip = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %2, i32 0, i32 1, !dbg !7729
  %3 = load %struct.dw_edma_chip*, %struct.dw_edma_chip** %chip, align 8, !dbg !7729
  %dw2 = getelementptr inbounds %struct.dw_edma_chip, %struct.dw_edma_chip* %3, i32 0, i32 3, !dbg !7730
  %4 = load %struct.dw_edma*, %struct.dw_edma** %dw2, align 8, !dbg !7730
  store %struct.dw_edma* %4, %struct.dw_edma** %dw, align 8, !dbg !7727
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chunk** %chunk, metadata !7731, metadata !DIExpression()), !dbg !7732
  %call = call i8* @kzalloc(i64 64, i32 2048) #9, !dbg !7733
  %5 = bitcast i8* %call to %struct.dw_edma_chunk*, !dbg !7733
  store %struct.dw_edma_chunk* %5, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7734
  %6 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7735
  %tobool = icmp ne %struct.dw_edma_chunk* %6, null, !dbg !7735
  %lnot = xor i1 %tobool, true, !dbg !7735
  %lnot3 = xor i1 %lnot, true, !dbg !7735
  %lnot4 = xor i1 %lnot3, true, !dbg !7735
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !7735
  %conv = sext i32 %lnot.ext to i64, !dbg !7735
  %tobool5 = icmp ne i64 %conv, 0, !dbg !7735
  br i1 %tobool5, label %if.then, label %if.end, !dbg !7737

if.then:                                          ; preds = %entry
  store %struct.dw_edma_chunk* null, %struct.dw_edma_chunk** %retval, align 8, !dbg !7738
  br label %return, !dbg !7738

if.end:                                           ; preds = %entry
  %7 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7739
  %list = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %7, i32 0, i32 0, !dbg !7740
  call void @INIT_LIST_HEAD(%struct.list_head* %list) #9, !dbg !7741
  %8 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7742
  %9 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7743
  %chan6 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %9, i32 0, i32 1, !dbg !7744
  store %struct.dw_edma_chan* %8, %struct.dw_edma_chan** %chan6, align 8, !dbg !7745
  %10 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7746
  %chunks_alloc = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %10, i32 0, i32 3, !dbg !7747
  %11 = load i32, i32* %chunks_alloc, align 8, !dbg !7747
  %rem = urem i32 %11, 2, !dbg !7748
  %tobool7 = icmp ne i32 %rem, 0, !dbg !7749
  %lnot8 = xor i1 %tobool7, true, !dbg !7749
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !7749
  %conv10 = trunc i32 %lnot.ext9 to i8, !dbg !7749
  %12 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7750
  %cb = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %12, i32 0, i32 4, !dbg !7751
  store i8 %conv10, i8* %cb, align 4, !dbg !7752
  %13 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !7753
  %ll_region = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %13, i32 0, i32 6, !dbg !7754
  %paddr = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %ll_region, i32 0, i32 0, !dbg !7755
  %14 = load i64, i64* %paddr, align 8, !dbg !7755
  %15 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7756
  %ll_off = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %15, i32 0, i32 4, !dbg !7757
  %16 = load i64, i64* %ll_off, align 8, !dbg !7757
  %add = add i64 %14, %16, !dbg !7758
  %17 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7759
  %ll_region11 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %17, i32 0, i32 5, !dbg !7760
  %paddr12 = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %ll_region11, i32 0, i32 0, !dbg !7761
  store i64 %add, i64* %paddr12, align 8, !dbg !7762
  %18 = load %struct.dw_edma*, %struct.dw_edma** %dw, align 8, !dbg !7763
  %ll_region13 = getelementptr inbounds %struct.dw_edma, %struct.dw_edma* %18, i32 0, i32 6, !dbg !7764
  %vaddr = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %ll_region13, i32 0, i32 1, !dbg !7765
  %19 = load i8*, i8** %vaddr, align 8, !dbg !7765
  %20 = load %struct.dw_edma_chan*, %struct.dw_edma_chan** %chan, align 8, !dbg !7766
  %ll_off14 = getelementptr inbounds %struct.dw_edma_chan, %struct.dw_edma_chan* %20, i32 0, i32 4, !dbg !7767
  %21 = load i64, i64* %ll_off14, align 8, !dbg !7767
  %add.ptr = getelementptr i8, i8* %19, i64 %21, !dbg !7768
  %22 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7769
  %ll_region15 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %22, i32 0, i32 5, !dbg !7770
  %vaddr16 = getelementptr inbounds %struct.dw_edma_region, %struct.dw_edma_region* %ll_region15, i32 0, i32 1, !dbg !7771
  store i8* %add.ptr, i8** %vaddr16, align 8, !dbg !7772
  %23 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7773
  %chunk17 = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %23, i32 0, i32 2, !dbg !7775
  %24 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk17, align 8, !dbg !7775
  %tobool18 = icmp ne %struct.dw_edma_chunk* %24, null, !dbg !7773
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !7776

if.then19:                                        ; preds = %if.end
  %25 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7777
  %chunks_alloc20 = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %25, i32 0, i32 3, !dbg !7779
  %26 = load i32, i32* %chunks_alloc20, align 8, !dbg !7780
  %inc = add i32 %26, 1, !dbg !7780
  store i32 %inc, i32* %chunks_alloc20, align 8, !dbg !7780
  %27 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7781
  %list21 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %27, i32 0, i32 0, !dbg !7782
  %28 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7783
  %chunk22 = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %28, i32 0, i32 2, !dbg !7784
  %29 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk22, align 8, !dbg !7784
  %list23 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %29, i32 0, i32 0, !dbg !7785
  call void @list_add_tail(%struct.list_head* %list21, %struct.list_head* %list23) #9, !dbg !7786
  %30 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7787
  %call24 = call %struct.dw_edma_burst* @dw_edma_alloc_burst(%struct.dw_edma_chunk* %30) #9, !dbg !7789
  %tobool25 = icmp ne %struct.dw_edma_burst* %call24, null, !dbg !7789
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !7790

if.then26:                                        ; preds = %if.then19
  %31 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7791
  %32 = bitcast %struct.dw_edma_chunk* %31 to i8*, !dbg !7791
  call void @kfree(i8* %32) #9, !dbg !7793
  store %struct.dw_edma_chunk* null, %struct.dw_edma_chunk** %retval, align 8, !dbg !7794
  br label %return, !dbg !7794

if.end27:                                         ; preds = %if.then19
  br label %if.end30, !dbg !7795

if.else:                                          ; preds = %if.end
  %33 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7796
  %burst = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %33, i32 0, i32 2, !dbg !7798
  store %struct.dw_edma_burst* null, %struct.dw_edma_burst** %burst, align 8, !dbg !7799
  %34 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7800
  %chunks_alloc28 = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %34, i32 0, i32 3, !dbg !7801
  store i32 0, i32* %chunks_alloc28, align 8, !dbg !7802
  %35 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7803
  %36 = load %struct.dw_edma_desc*, %struct.dw_edma_desc** %desc.addr, align 8, !dbg !7804
  %chunk29 = getelementptr inbounds %struct.dw_edma_desc, %struct.dw_edma_desc* %36, i32 0, i32 2, !dbg !7805
  store %struct.dw_edma_chunk* %35, %struct.dw_edma_chunk** %chunk29, align 8, !dbg !7806
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.end27
  %37 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk, align 8, !dbg !7807
  store %struct.dw_edma_chunk* %37, %struct.dw_edma_chunk** %retval, align 8, !dbg !7808
  br label %return, !dbg !7808

return:                                           ; preds = %if.end30, %if.then26, %if.then
  %38 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %retval, align 8, !dbg !7809
  ret %struct.dw_edma_chunk* %38, !dbg !7809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dw_edma_burst* @dw_edma_alloc_burst(%struct.dw_edma_chunk* %chunk) #0 !dbg !7810 {
entry:
  %retval = alloca %struct.dw_edma_burst*, align 8
  %chunk.addr = alloca %struct.dw_edma_chunk*, align 8
  %burst = alloca %struct.dw_edma_burst*, align 8
  store %struct.dw_edma_chunk* %chunk, %struct.dw_edma_chunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_edma_chunk** %chunk.addr, metadata !7813, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.declare(metadata %struct.dw_edma_burst** %burst, metadata !7815, metadata !DIExpression()), !dbg !7816
  %call = call i8* @kzalloc(i64 40, i32 2048) #9, !dbg !7817
  %0 = bitcast i8* %call to %struct.dw_edma_burst*, !dbg !7817
  store %struct.dw_edma_burst* %0, %struct.dw_edma_burst** %burst, align 8, !dbg !7818
  %1 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7819
  %tobool = icmp ne %struct.dw_edma_burst* %1, null, !dbg !7819
  %lnot = xor i1 %tobool, true, !dbg !7819
  %lnot1 = xor i1 %lnot, true, !dbg !7819
  %lnot2 = xor i1 %lnot1, true, !dbg !7819
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7819
  %conv = sext i32 %lnot.ext to i64, !dbg !7819
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7819
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7821

if.then:                                          ; preds = %entry
  store %struct.dw_edma_burst* null, %struct.dw_edma_burst** %retval, align 8, !dbg !7822
  br label %return, !dbg !7822

if.end:                                           ; preds = %entry
  %2 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7823
  %list = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %2, i32 0, i32 0, !dbg !7824
  call void @INIT_LIST_HEAD(%struct.list_head* %list) #9, !dbg !7825
  %3 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk.addr, align 8, !dbg !7826
  %burst4 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %3, i32 0, i32 2, !dbg !7828
  %4 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst4, align 8, !dbg !7828
  %tobool5 = icmp ne %struct.dw_edma_burst* %4, null, !dbg !7826
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !7829

if.then6:                                         ; preds = %if.end
  %5 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk.addr, align 8, !dbg !7830
  %bursts_alloc = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %5, i32 0, i32 3, !dbg !7832
  %6 = load i32, i32* %bursts_alloc, align 8, !dbg !7833
  %inc = add i32 %6, 1, !dbg !7833
  store i32 %inc, i32* %bursts_alloc, align 8, !dbg !7833
  %7 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7834
  %list7 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %7, i32 0, i32 0, !dbg !7835
  %8 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk.addr, align 8, !dbg !7836
  %burst8 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %8, i32 0, i32 2, !dbg !7837
  %9 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst8, align 8, !dbg !7837
  %list9 = getelementptr inbounds %struct.dw_edma_burst, %struct.dw_edma_burst* %9, i32 0, i32 0, !dbg !7838
  call void @list_add_tail(%struct.list_head* %list7, %struct.list_head* %list9) #9, !dbg !7839
  br label %if.end12, !dbg !7840

if.else:                                          ; preds = %if.end
  %10 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk.addr, align 8, !dbg !7841
  %bursts_alloc10 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %10, i32 0, i32 3, !dbg !7843
  store i32 0, i32* %bursts_alloc10, align 8, !dbg !7844
  %11 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7845
  %12 = load %struct.dw_edma_chunk*, %struct.dw_edma_chunk** %chunk.addr, align 8, !dbg !7846
  %burst11 = getelementptr inbounds %struct.dw_edma_chunk, %struct.dw_edma_chunk* %12, i32 0, i32 2, !dbg !7847
  store %struct.dw_edma_burst* %11, %struct.dw_edma_burst** %burst11, align 8, !dbg !7848
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then6
  %13 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %burst, align 8, !dbg !7849
  store %struct.dw_edma_burst* %13, %struct.dw_edma_burst** %retval, align 8, !dbg !7850
  br label %return, !dbg !7850

return:                                           ; preds = %if.end12, %if.then
  %14 = load %struct.dw_edma_burst*, %struct.dw_edma_burst** %retval, align 8, !dbg !7851
  ret %struct.dw_edma_burst* %14, !dbg !7851
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @vchan_tx_prep(%struct.virt_dma_chan* %vc, %struct.virt_dma_desc* %vd, i64 %tx_flags) #0 !dbg !7852 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !5783, metadata !DIExpression()), !dbg !7855
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5790, metadata !DIExpression()), !dbg !7857
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5792, metadata !DIExpression()), !dbg !7858
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %vd.addr = alloca %struct.virt_dma_desc*, align 8
  %tx_flags.addr = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !7865, metadata !DIExpression()), !dbg !7866
  store %struct.virt_dma_desc* %vd, %struct.virt_dma_desc** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd.addr, metadata !7867, metadata !DIExpression()), !dbg !7868
  store i64 %tx_flags, i64* %tx_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tx_flags.addr, metadata !7869, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7871, metadata !DIExpression()), !dbg !7872
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7873
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %0, i32 0, i32 0, !dbg !7874
  %1 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !7875
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %1, i32 0, i32 0, !dbg !7876
  call void @dma_async_tx_descriptor_init(%struct.dma_async_tx_descriptor* %tx, %struct.dma_chan* %chan) #9, !dbg !7877
  %2 = load i64, i64* %tx_flags.addr, align 8, !dbg !7878
  %conv = trunc i64 %2 to i32, !dbg !7878
  %3 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7879
  %tx1 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %3, i32 0, i32 0, !dbg !7880
  %flags2 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx1, i32 0, i32 1, !dbg !7881
  store i32 %conv, i32* %flags2, align 4, !dbg !7882
  %4 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7883
  %tx3 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %4, i32 0, i32 0, !dbg !7884
  %tx_submit = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx3, i32 0, i32 4, !dbg !7885
  store i32 (%struct.dma_async_tx_descriptor*)* @vchan_tx_submit, i32 (%struct.dma_async_tx_descriptor*)** %tx_submit, align 8, !dbg !7886
  %5 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7887
  %tx4 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %5, i32 0, i32 0, !dbg !7888
  %desc_free = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx4, i32 0, i32 5, !dbg !7889
  store i32 (%struct.dma_async_tx_descriptor*)* @vchan_tx_desc_free, i32 (%struct.dma_async_tx_descriptor*)** %desc_free, align 8, !dbg !7890
  %6 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7891
  %tx_result = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %6, i32 0, i32 1, !dbg !7892
  %result = getelementptr inbounds %struct.dmaengine_result, %struct.dmaengine_result* %tx_result, i32 0, i32 0, !dbg !7893
  store i32 0, i32* %result, align 8, !dbg !7894
  %7 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7895
  %tx_result5 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %7, i32 0, i32 1, !dbg !7896
  %residue = getelementptr inbounds %struct.dmaengine_result, %struct.dmaengine_result* %tx_result5, i32 0, i32 1, !dbg !7897
  store i32 0, i32* %residue, align 4, !dbg !7898
  br label %do.body, !dbg !7899

do.body:                                          ; preds = %entry
  br label %do.body6, !dbg !7900

do.body6:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7901, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7904, metadata !DIExpression()), !dbg !7903
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7903
  %conv7 = zext i1 %cmp to i32, !dbg !7903
  store i32 1, i32* %tmp, align 4, !dbg !7903
  %8 = load i32, i32* %tmp, align 4, !dbg !7903
  br label %do.body8, !dbg !7905

do.body8:                                         ; preds = %do.body6
  br label %do.body9, !dbg !7906

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !7907

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !7909, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !7913, metadata !DIExpression()), !dbg !7912
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !7912
  %conv14 = zext i1 %cmp13 to i32, !dbg !7912
  store i32 1, i32* %tmp15, align 4, !dbg !7912
  %9 = load i32, i32* %tmp15, align 4, !dbg !7912
  %call = call i64 @arch_local_irq_save() #9, !dbg !7914
  store i64 %call, i64* %flags, align 8, !dbg !7914
  br label %do.end, !dbg !7914

do.end:                                           ; preds = %do.body10
  br label %do.end16, !dbg !7907

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !7906

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7915, !srcloc !7916
  br label %do.body18, !dbg !7915

do.body18:                                        ; preds = %do.body17
  %10 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !7917
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %10, i32 0, i32 3, !dbg !7917
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7918
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !7919
  %rlock.i = bitcast %union.anon.3* %12 to %struct.raw_spinlock*, !dbg !7919
  br label %do.end20, !dbg !7917

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !7915

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !7906

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !7905

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !7900

do.end24:                                         ; preds = %do.end23
  %13 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7920
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %13, i32 0, i32 2, !dbg !7921
  %14 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !7922
  %desc_allocated = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %14, i32 0, i32 4, !dbg !7923
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* %desc_allocated) #9, !dbg !7924
  %15 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !7925
  %lock25 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %15, i32 0, i32 3, !dbg !7926
  %16 = load i64, i64* %flags, align 8, !dbg !7927
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !364, metadata !5896, metadata !DIExpression()) #5, !dbg !7928
  call void @llvm.dbg.declare(metadata !364, metadata !5900, metadata !DIExpression()) #5, !dbg !7928
  store i32 1, i32* %tmp.i, align 4, !dbg !7928
  %17 = load i32, i32* %tmp.i, align 4, !dbg !7928
  call void @llvm.dbg.declare(metadata !364, metadata !5901, metadata !DIExpression()) #5, !dbg !7929
  call void @llvm.dbg.declare(metadata !364, metadata !5907, metadata !DIExpression()) #5, !dbg !7929
  store i32 1, i32* %tmp8.i, align 4, !dbg !7929
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !7929
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !7930
  call void @arch_local_irq_restore(i64 %19) #11, !dbg !7930
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !7931, !srcloc !5911
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !7932
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !7932
  %rlock.i28 = bitcast %union.anon.3* %21 to %struct.raw_spinlock*, !dbg !7932
  %22 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7933
  %tx26 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %22, i32 0, i32 0, !dbg !7934
  ret %struct.dma_async_tx_descriptor* %tx26, !dbg !7935
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !7936 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7939, metadata !DIExpression()), !dbg !7943
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7949, metadata !DIExpression()), !dbg !7950
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7951, metadata !DIExpression()), !dbg !7952
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7953, metadata !DIExpression()), !dbg !7954
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7955, metadata !DIExpression()), !dbg !7959
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7961, metadata !DIExpression()), !dbg !7965
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7967, metadata !DIExpression()), !dbg !7971
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7976, metadata !DIExpression()), !dbg !7977
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7978, metadata !DIExpression()), !dbg !7979
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7980, metadata !DIExpression()), !dbg !7981
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7982, metadata !DIExpression()), !dbg !7983
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7984, metadata !DIExpression()), !dbg !7985
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7986, metadata !DIExpression()), !dbg !7987
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7988, metadata !DIExpression()), !dbg !7989
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7990, metadata !DIExpression()), !dbg !7991
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7992, metadata !DIExpression()), !dbg !7993
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7994, metadata !DIExpression()), !dbg !7995
  %0 = load i64, i64* %size.addr, align 8, !dbg !7996
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7997
  %or = or i32 %1, 256, !dbg !7998
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7999
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #5, !dbg !8000
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !8001

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8002
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !8003
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8004

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !8005
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !8006
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8007
  %call.i.i = call i32 @get_order(i64 %7) #10, !dbg !8008
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7985
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !8009
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8010
  %10 = load i32, i32* %order.i.i, align 4, !dbg !8011
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8012
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8013
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8014
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #11, !dbg !8015
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8015
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8015
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8015
  call void @llvm.assume(i1 %maskcond.i.i.i) #5, !dbg !8015
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8016
  br label %kmalloc.exit, !dbg !8016

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !8017
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8018
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !8018
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8020

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8021
  br label %kmalloc_index.exit.i, !dbg !8021

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8022
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !8024
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8025

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8026
  br label %kmalloc_index.exit.i, !dbg !8026

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8027
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !8029
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8030

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8031
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !8032
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8033

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8034
  br label %kmalloc_index.exit.i, !dbg !8034

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8035
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !8037
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8038

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8039
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !8040
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8041

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8042
  br label %kmalloc_index.exit.i, !dbg !8042

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8043
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !8045
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8046

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8047
  br label %kmalloc_index.exit.i, !dbg !8047

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8048
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !8050
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8051

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8052
  br label %kmalloc_index.exit.i, !dbg !8052

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8053
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !8055
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8056

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8057
  br label %kmalloc_index.exit.i, !dbg !8057

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8058
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !8060
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8061

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8062
  br label %kmalloc_index.exit.i, !dbg !8062

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8063
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !8065
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8066

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8067
  br label %kmalloc_index.exit.i, !dbg !8067

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8068
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !8070
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8071

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8072
  br label %kmalloc_index.exit.i, !dbg !8072

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8073
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !8075
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8076

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8077
  br label %kmalloc_index.exit.i, !dbg !8077

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8078
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !8080
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8081

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8082
  br label %kmalloc_index.exit.i, !dbg !8082

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8083
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !8085
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8086

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8087
  br label %kmalloc_index.exit.i, !dbg !8087

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8088
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !8090
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8091

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8092
  br label %kmalloc_index.exit.i, !dbg !8092

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8093
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !8095
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8096

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8097
  br label %kmalloc_index.exit.i, !dbg !8097

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8098
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !8100
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8101

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8102
  br label %kmalloc_index.exit.i, !dbg !8102

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8103
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !8105
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8106

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8107
  br label %kmalloc_index.exit.i, !dbg !8107

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8108
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !8110
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8111

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8112
  br label %kmalloc_index.exit.i, !dbg !8112

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8113
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !8115
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8116

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8117
  br label %kmalloc_index.exit.i, !dbg !8117

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8118
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !8120
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8121

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8122
  br label %kmalloc_index.exit.i, !dbg !8122

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8123
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !8125
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8126

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8127
  br label %kmalloc_index.exit.i, !dbg !8127

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8128
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !8130
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8131

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8132
  br label %kmalloc_index.exit.i, !dbg !8132

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8133
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !8135
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8136

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8137
  br label %kmalloc_index.exit.i, !dbg !8137

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8138
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !8140
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8141

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8142
  br label %kmalloc_index.exit.i, !dbg !8142

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8143
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !8145
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8146

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8147
  br label %kmalloc_index.exit.i, !dbg !8147

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8148
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !8150
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8151

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8152
  br label %kmalloc_index.exit.i, !dbg !8152

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8153
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !8155
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8156

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8157
  br label %kmalloc_index.exit.i, !dbg !8157

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8158
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !8160
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8161

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8162
  br label %kmalloc_index.exit.i, !dbg !8162

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i32 382, i32 0, i64 12) #5, !dbg !8163, !srcloc !8166
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 232) #5, !dbg !8167, !srcloc !8170
  unreachable, !dbg !8171

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !8172
  store i32 %45, i32* %index.i, align 4, !dbg !8173
  %46 = load i32, i32* %index.i, align 4, !dbg !8174
  %tobool.i = icmp ne i32 %46, 0, !dbg !8174
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8176

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8177
  br label %kmalloc.exit, !dbg !8177

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !8178
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8179
  %and.i.i = and i32 %48, 17, !dbg !8179
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8179
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8179
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8179
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8179
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8181

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8182
  br label %kmalloc_type.exit.i, !dbg !8182

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8183
  %and2.i.i = and i32 %49, 1, !dbg !8184
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8183
  %50 = zext i1 %tobool3.i.i to i64, !dbg !8183
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8183
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8185
  br label %kmalloc_type.exit.i, !dbg !8185

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !8186
  %idxprom.i = zext i32 %51 to i64, !dbg !8187
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8187
  %52 = load i32, i32* %index.i, align 4, !dbg !8188
  %idxprom6.i = zext i32 %52 to i64, !dbg !8187
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8187
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8187
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !8189
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !8190
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8191
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8192
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #11, !dbg !8193
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8193
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8193
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8193
  call void @llvm.assume(i1 %maskcond.i.i) #5, !dbg !8193
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7954
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8194
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !8195
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8196
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8197
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #11, !dbg !8198
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8199
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !8200
  store i8* %62, i8** %retval.i, align 8, !dbg !8201
  br label %kmalloc.exit, !dbg !8201

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !8202
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !8203
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #11, !dbg !8204
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8204
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8204
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8204
  call void @llvm.assume(i1 %maskcond.i) #5, !dbg !8204
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8205
  br label %kmalloc.exit, !dbg !8205

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !8206
  ret i8* %65, !dbg !8207
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !8208 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7029, metadata !DIExpression()), !dbg !8212
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7035, metadata !DIExpression()), !dbg !8214
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8215, metadata !DIExpression()), !dbg !8216
  %0 = load i64, i64* %size.addr, align 8, !dbg !8217
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8219
  br i1 %1, label %if.then, label %if.end447, !dbg !8220

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8221
  %tobool = icmp ne i64 %2, 0, !dbg !8221
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8224

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8225
  br label %return, !dbg !8225

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8226
  %cmp = icmp ult i64 %3, 4096, !dbg !8228
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8229

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8230
  br label %return, !dbg !8230

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub = sub i64 %4, 1, !dbg !8231
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8231
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8231

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub4 = sub i64 %6, 1, !dbg !8231
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8231
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8231

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub6 = sub i64 %8, 1, !dbg !8231
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8231
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8231

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8231

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub9 = sub i64 %9, 1, !dbg !8231
  %and = and i64 %sub9, -9223372036854775808, !dbg !8231
  %tobool10 = icmp ne i64 %and, 0, !dbg !8231
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8231

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8231

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub13 = sub i64 %10, 1, !dbg !8231
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8231
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8231
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8231

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8231

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub18 = sub i64 %11, 1, !dbg !8231
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8231
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8231
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8231

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8231

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub23 = sub i64 %12, 1, !dbg !8231
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8231
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8231
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8231

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8231

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub28 = sub i64 %13, 1, !dbg !8231
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8231
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8231
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8231

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8231

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub33 = sub i64 %14, 1, !dbg !8231
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8231
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8231
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8231

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8231

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub38 = sub i64 %15, 1, !dbg !8231
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8231
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8231
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8231

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8231

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub43 = sub i64 %16, 1, !dbg !8231
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8231
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8231
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8231

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8231

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub48 = sub i64 %17, 1, !dbg !8231
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8231
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8231
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8231

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8231

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub53 = sub i64 %18, 1, !dbg !8231
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8231
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8231
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8231

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8231

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub58 = sub i64 %19, 1, !dbg !8231
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8231
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8231
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8231

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8231

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub63 = sub i64 %20, 1, !dbg !8231
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8231
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8231
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8231

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8231

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub68 = sub i64 %21, 1, !dbg !8231
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8231
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8231
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8231

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8231

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub73 = sub i64 %22, 1, !dbg !8231
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8231
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8231
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8231

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8231

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub78 = sub i64 %23, 1, !dbg !8231
  %and79 = and i64 %sub78, 562949953421312, !dbg !8231
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8231
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8231

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8231

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub83 = sub i64 %24, 1, !dbg !8231
  %and84 = and i64 %sub83, 281474976710656, !dbg !8231
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8231
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8231

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8231

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub88 = sub i64 %25, 1, !dbg !8231
  %and89 = and i64 %sub88, 140737488355328, !dbg !8231
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8231
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8231

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8231

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub93 = sub i64 %26, 1, !dbg !8231
  %and94 = and i64 %sub93, 70368744177664, !dbg !8231
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8231
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8231

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8231

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub98 = sub i64 %27, 1, !dbg !8231
  %and99 = and i64 %sub98, 35184372088832, !dbg !8231
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8231
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8231

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8231

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub103 = sub i64 %28, 1, !dbg !8231
  %and104 = and i64 %sub103, 17592186044416, !dbg !8231
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8231
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8231

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8231

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub108 = sub i64 %29, 1, !dbg !8231
  %and109 = and i64 %sub108, 8796093022208, !dbg !8231
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8231
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8231

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8231

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub113 = sub i64 %30, 1, !dbg !8231
  %and114 = and i64 %sub113, 4398046511104, !dbg !8231
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8231
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8231

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8231

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub118 = sub i64 %31, 1, !dbg !8231
  %and119 = and i64 %sub118, 2199023255552, !dbg !8231
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8231
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8231

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8231

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub123 = sub i64 %32, 1, !dbg !8231
  %and124 = and i64 %sub123, 1099511627776, !dbg !8231
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8231
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8231

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8231

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub128 = sub i64 %33, 1, !dbg !8231
  %and129 = and i64 %sub128, 549755813888, !dbg !8231
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8231
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8231

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8231

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub133 = sub i64 %34, 1, !dbg !8231
  %and134 = and i64 %sub133, 274877906944, !dbg !8231
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8231
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8231

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8231

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub138 = sub i64 %35, 1, !dbg !8231
  %and139 = and i64 %sub138, 137438953472, !dbg !8231
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8231
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8231

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8231

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub143 = sub i64 %36, 1, !dbg !8231
  %and144 = and i64 %sub143, 68719476736, !dbg !8231
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8231
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8231

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8231

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub148 = sub i64 %37, 1, !dbg !8231
  %and149 = and i64 %sub148, 34359738368, !dbg !8231
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8231
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8231

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8231

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub153 = sub i64 %38, 1, !dbg !8231
  %and154 = and i64 %sub153, 17179869184, !dbg !8231
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8231
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8231

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8231

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub158 = sub i64 %39, 1, !dbg !8231
  %and159 = and i64 %sub158, 8589934592, !dbg !8231
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8231
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8231

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8231

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub163 = sub i64 %40, 1, !dbg !8231
  %and164 = and i64 %sub163, 4294967296, !dbg !8231
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8231
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8231

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8231

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub168 = sub i64 %41, 1, !dbg !8231
  %and169 = and i64 %sub168, 2147483648, !dbg !8231
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8231
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8231

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8231

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub173 = sub i64 %42, 1, !dbg !8231
  %and174 = and i64 %sub173, 1073741824, !dbg !8231
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8231
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8231

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8231

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub178 = sub i64 %43, 1, !dbg !8231
  %and179 = and i64 %sub178, 536870912, !dbg !8231
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8231
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8231

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8231

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub183 = sub i64 %44, 1, !dbg !8231
  %and184 = and i64 %sub183, 268435456, !dbg !8231
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8231
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8231

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8231

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub188 = sub i64 %45, 1, !dbg !8231
  %and189 = and i64 %sub188, 134217728, !dbg !8231
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8231
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8231

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8231

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub193 = sub i64 %46, 1, !dbg !8231
  %and194 = and i64 %sub193, 67108864, !dbg !8231
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8231
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8231

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8231

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub198 = sub i64 %47, 1, !dbg !8231
  %and199 = and i64 %sub198, 33554432, !dbg !8231
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8231
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8231

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8231

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub203 = sub i64 %48, 1, !dbg !8231
  %and204 = and i64 %sub203, 16777216, !dbg !8231
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8231
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8231

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8231

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub208 = sub i64 %49, 1, !dbg !8231
  %and209 = and i64 %sub208, 8388608, !dbg !8231
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8231
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8231

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8231

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub213 = sub i64 %50, 1, !dbg !8231
  %and214 = and i64 %sub213, 4194304, !dbg !8231
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8231
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8231

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8231

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub218 = sub i64 %51, 1, !dbg !8231
  %and219 = and i64 %sub218, 2097152, !dbg !8231
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8231
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8231

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8231

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub223 = sub i64 %52, 1, !dbg !8231
  %and224 = and i64 %sub223, 1048576, !dbg !8231
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8231
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8231

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8231

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub228 = sub i64 %53, 1, !dbg !8231
  %and229 = and i64 %sub228, 524288, !dbg !8231
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8231
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8231

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8231

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub233 = sub i64 %54, 1, !dbg !8231
  %and234 = and i64 %sub233, 262144, !dbg !8231
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8231
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8231

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8231

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub238 = sub i64 %55, 1, !dbg !8231
  %and239 = and i64 %sub238, 131072, !dbg !8231
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8231
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8231

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8231

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub243 = sub i64 %56, 1, !dbg !8231
  %and244 = and i64 %sub243, 65536, !dbg !8231
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8231
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8231

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8231

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub248 = sub i64 %57, 1, !dbg !8231
  %and249 = and i64 %sub248, 32768, !dbg !8231
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8231
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8231

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8231

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub253 = sub i64 %58, 1, !dbg !8231
  %and254 = and i64 %sub253, 16384, !dbg !8231
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8231
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8231

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8231

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub258 = sub i64 %59, 1, !dbg !8231
  %and259 = and i64 %sub258, 8192, !dbg !8231
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8231
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8231

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8231

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub263 = sub i64 %60, 1, !dbg !8231
  %and264 = and i64 %sub263, 4096, !dbg !8231
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8231
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8231

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8231

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub268 = sub i64 %61, 1, !dbg !8231
  %and269 = and i64 %sub268, 2048, !dbg !8231
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8231
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8231

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8231

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub273 = sub i64 %62, 1, !dbg !8231
  %and274 = and i64 %sub273, 1024, !dbg !8231
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8231
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8231

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8231

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub278 = sub i64 %63, 1, !dbg !8231
  %and279 = and i64 %sub278, 512, !dbg !8231
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8231
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8231

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8231

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub283 = sub i64 %64, 1, !dbg !8231
  %and284 = and i64 %sub283, 256, !dbg !8231
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8231
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8231

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8231

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub288 = sub i64 %65, 1, !dbg !8231
  %and289 = and i64 %sub288, 128, !dbg !8231
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8231
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8231

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8231

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub293 = sub i64 %66, 1, !dbg !8231
  %and294 = and i64 %sub293, 64, !dbg !8231
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8231
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8231

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8231

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub298 = sub i64 %67, 1, !dbg !8231
  %and299 = and i64 %sub298, 32, !dbg !8231
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8231
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8231

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8231

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub303 = sub i64 %68, 1, !dbg !8231
  %and304 = and i64 %sub303, 16, !dbg !8231
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8231
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8231

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8231

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub308 = sub i64 %69, 1, !dbg !8231
  %and309 = and i64 %sub308, 8, !dbg !8231
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8231
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8231

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8231

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub313 = sub i64 %70, 1, !dbg !8231
  %and314 = and i64 %sub313, 4, !dbg !8231
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8231
  %71 = zext i1 %tobool315 to i64, !dbg !8231
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8231
  br label %cond.end, !dbg !8231

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8231
  br label %cond.end317, !dbg !8231

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8231
  br label %cond.end319, !dbg !8231

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8231
  br label %cond.end321, !dbg !8231

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8231
  br label %cond.end323, !dbg !8231

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8231
  br label %cond.end325, !dbg !8231

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8231
  br label %cond.end327, !dbg !8231

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8231
  br label %cond.end329, !dbg !8231

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8231
  br label %cond.end331, !dbg !8231

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8231
  br label %cond.end333, !dbg !8231

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8231
  br label %cond.end335, !dbg !8231

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8231
  br label %cond.end337, !dbg !8231

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8231
  br label %cond.end339, !dbg !8231

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8231
  br label %cond.end341, !dbg !8231

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8231
  br label %cond.end343, !dbg !8231

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8231
  br label %cond.end345, !dbg !8231

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8231
  br label %cond.end347, !dbg !8231

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8231
  br label %cond.end349, !dbg !8231

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8231
  br label %cond.end351, !dbg !8231

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8231
  br label %cond.end353, !dbg !8231

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8231
  br label %cond.end355, !dbg !8231

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8231
  br label %cond.end357, !dbg !8231

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8231
  br label %cond.end359, !dbg !8231

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8231
  br label %cond.end361, !dbg !8231

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8231
  br label %cond.end363, !dbg !8231

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8231
  br label %cond.end365, !dbg !8231

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8231
  br label %cond.end367, !dbg !8231

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8231
  br label %cond.end369, !dbg !8231

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8231
  br label %cond.end371, !dbg !8231

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8231
  br label %cond.end373, !dbg !8231

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8231
  br label %cond.end375, !dbg !8231

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8231
  br label %cond.end377, !dbg !8231

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8231
  br label %cond.end379, !dbg !8231

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8231
  br label %cond.end381, !dbg !8231

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8231
  br label %cond.end383, !dbg !8231

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8231
  br label %cond.end385, !dbg !8231

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8231
  br label %cond.end387, !dbg !8231

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8231
  br label %cond.end389, !dbg !8231

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8231
  br label %cond.end391, !dbg !8231

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8231
  br label %cond.end393, !dbg !8231

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8231
  br label %cond.end395, !dbg !8231

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8231
  br label %cond.end397, !dbg !8231

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8231
  br label %cond.end399, !dbg !8231

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8231
  br label %cond.end401, !dbg !8231

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8231
  br label %cond.end403, !dbg !8231

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8231
  br label %cond.end405, !dbg !8231

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8231
  br label %cond.end407, !dbg !8231

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8231
  br label %cond.end409, !dbg !8231

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8231
  br label %cond.end411, !dbg !8231

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8231
  br label %cond.end413, !dbg !8231

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8231
  br label %cond.end415, !dbg !8231

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8231
  br label %cond.end417, !dbg !8231

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8231
  br label %cond.end419, !dbg !8231

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8231
  br label %cond.end421, !dbg !8231

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8231
  br label %cond.end423, !dbg !8231

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8231
  br label %cond.end425, !dbg !8231

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8231
  br label %cond.end427, !dbg !8231

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8231
  br label %cond.end429, !dbg !8231

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8231
  br label %cond.end431, !dbg !8231

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8231
  br label %cond.end433, !dbg !8231

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8231
  br label %cond.end435, !dbg !8231

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8231
  br label %cond.end437, !dbg !8231

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8231
  br label %cond.end440, !dbg !8231

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8231

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8231
  br label %cond.end444, !dbg !8231

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8231
  %sub443 = sub i64 %72, 1, !dbg !8231
  %call = call i32 @__ilog2_u64(i64 %sub443) #10, !dbg !8231
  br label %cond.end444, !dbg !8231

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8231
  %sub446 = sub i32 %cond445, 12, !dbg !8232
  %add = add i32 %sub446, 1, !dbg !8233
  store i32 %add, i32* %retval, align 4, !dbg !8234
  br label %return, !dbg !8234

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8235
  %dec = add i64 %73, -1, !dbg !8235
  store i64 %dec, i64* %size.addr, align 8, !dbg !8235
  %74 = load i64, i64* %size.addr, align 8, !dbg !8236
  %shr = lshr i64 %74, 12, !dbg !8236
  store i64 %shr, i64* %size.addr, align 8, !dbg !8236
  %75 = load i64, i64* %size.addr, align 8, !dbg !8237
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8214
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8238
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8239
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #4, !dbg !8238, !srcloc !7042
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8238
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8240
  %add.i = add i32 %79, 1, !dbg !8241
  store i32 %add.i, i32* %retval, align 4, !dbg !8242
  br label %return, !dbg !8242

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8243
  ret i32 %80, !dbg !8243
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !8244 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7029, metadata !DIExpression()), !dbg !8247
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7035, metadata !DIExpression()), !dbg !8249
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8250, metadata !DIExpression()), !dbg !8251
  %0 = load i64, i64* %n.addr, align 8, !dbg !8252
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8249
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !8253
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !8254
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #4, !dbg !8253, !srcloc !7042
  store i32 %3, i32* %bitpos.i, align 4, !dbg !8253
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !8255
  %add.i = add i32 %4, 1, !dbg !8256
  %sub = sub i32 %add.i, 1, !dbg !8257
  ret i32 %sub, !dbg !8258
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !8259 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8263, metadata !DIExpression()), !dbg !8264
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8265, metadata !DIExpression()), !dbg !8266
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8267, metadata !DIExpression()), !dbg !8268
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8269, metadata !DIExpression()), !dbg !8270
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8271
  ret i8* %0, !dbg !8272
}

; Function Attrs: noredzone
declare dso_local void @dma_async_tx_descriptor_init(%struct.dma_async_tx_descriptor*, %struct.dma_chan*) #3

; Function Attrs: noredzone
declare dso_local i32 @vchan_tx_submit(%struct.dma_async_tx_descriptor*) #3

; Function Attrs: noredzone
declare dso_local i32 @vchan_tx_desc_free(%struct.dma_async_tx_descriptor*) #3

; Function Attrs: noredzone
declare dso_local void @__pm_runtime_disable(%struct.device*, i1 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !8273 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8274, metadata !DIExpression()), !dbg !8275
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8276
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #9, !dbg !8278
  br i1 %call, label %if.end, label %if.then, !dbg !8279

if.then:                                          ; preds = %entry
  br label %return, !dbg !8280

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8281
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8282
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8282
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8283
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8284
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8284
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #9, !dbg !8285
  br label %return, !dbg !8286

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !8287 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8290, metadata !DIExpression()), !dbg !8291
  ret i1 true, !dbg !8292
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8293 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8294, metadata !DIExpression()), !dbg !8295
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8296, metadata !DIExpression()), !dbg !8297
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8298
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8299
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8300
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !8301
  br label %do.body, !dbg !8302

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !8303

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !8305

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !8303

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8307
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8307
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8307
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !8307
  br label %do.end5, !dbg !8307

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !8303

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !8309
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind willreturn }
attributes #9 = { noredzone }
attributes #10 = { noredzone nounwind readnone }
attributes #11 = { noredzone nounwind }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4735}
!llvm.module.flags = !{!4736, !4737, !4738, !4739}
!llvm.ident = !{!4740}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file263", scope: !2, file: !3, line: 963, type: !4732, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !249, globals: !4718, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/dma/dw-edma/dw-edma-core.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !107, !114, !122, !128, !134, !143, !148, !160, !166, !170, !177, !188, !195, !200, !204, !209, !214, !219, !223, !242}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !94, line: 76, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106}
!96 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!103 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !108, line: 478, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112, !113}
!110 = !DIEnumerator(name: "IRQCHIP_STATE_PENDING", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "IRQCHIP_STATE_ACTIVE", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "IRQCHIP_STATE_MASKED", value: 2, isUnsigned: true)
!113 = !DIEnumerator(name: "IRQCHIP_STATE_LINE_LEVEL", value: 3, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_gc_flags", file: !115, line: 1084, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120, !121}
!117 = !DIEnumerator(name: "IRQ_GC_INIT_MASK_CACHE", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "IRQ_GC_INIT_NESTED_LOCK", value: 2, isUnsigned: true)
!119 = !DIEnumerator(name: "IRQ_GC_MASK_CACHE_PER_TYPE", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "IRQ_GC_NO_MASK", value: 8, isUnsigned: true)
!121 = !DIEnumerator(name: "IRQ_GC_BE_IO", value: 16, isUnsigned: true)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !123, line: 11, baseType: !7, size: 32, elements: !124)
!123 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!124 = !{!125, !126, !127}
!125 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!127 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_desc_metadata_mode", file: !129, line: 288, baseType: !7, size: 32, elements: !130)
!129 = !DIFile(filename: "./include/linux/dmaengine.h", directory: "/home/lizy2001/genbc/linux")
!130 = !{!131, !132, !133}
!131 = !DIEnumerator(name: "DESC_METADATA_NONE", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "DESC_METADATA_CLIENT", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "DESC_METADATA_ENGINE", value: 2, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_alignment", file: !129, line: 732, baseType: !7, size: 32, elements: !135)
!135 = !{!136, !137, !138, !139, !140, !141, !142}
!136 = !DIEnumerator(name: "DMAENGINE_ALIGN_1_BYTE", value: 0, isUnsigned: true)
!137 = !DIEnumerator(name: "DMAENGINE_ALIGN_2_BYTES", value: 1, isUnsigned: true)
!138 = !DIEnumerator(name: "DMAENGINE_ALIGN_4_BYTES", value: 2, isUnsigned: true)
!139 = !DIEnumerator(name: "DMAENGINE_ALIGN_8_BYTES", value: 3, isUnsigned: true)
!140 = !DIEnumerator(name: "DMAENGINE_ALIGN_16_BYTES", value: 4, isUnsigned: true)
!141 = !DIEnumerator(name: "DMAENGINE_ALIGN_32_BYTES", value: 5, isUnsigned: true)
!142 = !DIEnumerator(name: "DMAENGINE_ALIGN_64_BYTES", value: 6, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_residue_granularity", file: !129, line: 468, baseType: !7, size: 32, elements: !144)
!144 = !{!145, !146, !147}
!145 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_DESCRIPTOR", value: 0, isUnsigned: true)
!146 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_SEGMENT", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_BURST", value: 2, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_ctrl_flags", file: !129, line: 194, baseType: !7, size: 32, elements: !149)
!149 = !{!150, !151, !152, !153, !154, !155, !156, !157, !158, !159}
!150 = !DIEnumerator(name: "DMA_PREP_INTERRUPT", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DMA_CTRL_ACK", value: 2, isUnsigned: true)
!152 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_P", value: 4, isUnsigned: true)
!153 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_Q", value: 8, isUnsigned: true)
!154 = !DIEnumerator(name: "DMA_PREP_CONTINUE", value: 16, isUnsigned: true)
!155 = !DIEnumerator(name: "DMA_PREP_FENCE", value: 32, isUnsigned: true)
!156 = !DIEnumerator(name: "DMA_CTRL_REUSE", value: 64, isUnsigned: true)
!157 = !DIEnumerator(name: "DMA_PREP_CMD", value: 128, isUnsigned: true)
!158 = !DIEnumerator(name: "DMA_PREP_REPEAT", value: 256, isUnsigned: true)
!159 = !DIEnumerator(name: "DMA_PREP_LOAD_EOT", value: 512, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_tx_result", file: !129, line: 533, baseType: !7, size: 32, elements: !161)
!161 = !{!162, !163, !164, !165}
!162 = !DIEnumerator(name: "DMA_TRANS_NOERROR", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "DMA_TRANS_READ_FAILED", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "DMA_TRANS_WRITE_FAILED", value: 2, isUnsigned: true)
!165 = !DIEnumerator(name: "DMA_TRANS_ABORTED", value: 3, isUnsigned: true)
!166 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sum_check_flags", file: !129, line: 220, baseType: !7, size: 32, elements: !167)
!167 = !{!168, !169}
!168 = !DIEnumerator(name: "SUM_CHECK_P_RESULT", value: 1, isUnsigned: true)
!169 = !DIEnumerator(name: "SUM_CHECK_Q_RESULT", value: 2, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_transfer_direction", file: !129, line: 79, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173, !174, !175, !176}
!172 = !DIEnumerator(name: "DMA_MEM_TO_MEM", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "DMA_MEM_TO_DEV", value: 1, isUnsigned: true)
!174 = !DIEnumerator(name: "DMA_DEV_TO_MEM", value: 2, isUnsigned: true)
!175 = !DIEnumerator(name: "DMA_DEV_TO_DEV", value: 3, isUnsigned: true)
!176 = !DIEnumerator(name: "DMA_TRANS_NONE", value: 4, isUnsigned: true)
!177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_slave_buswidth", file: !129, line: 371, baseType: !7, size: 32, elements: !178)
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187}
!179 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_UNDEFINED", value: 0, isUnsigned: true)
!180 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_1_BYTE", value: 1, isUnsigned: true)
!181 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_2_BYTES", value: 2, isUnsigned: true)
!182 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_3_BYTES", value: 3, isUnsigned: true)
!183 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_4_BYTES", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_8_BYTES", value: 8, isUnsigned: true)
!185 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_16_BYTES", value: 16, isUnsigned: true)
!186 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_32_BYTES", value: 32, isUnsigned: true)
!187 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_64_BYTES", value: 64, isUnsigned: true)
!188 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_status", file: !129, line: 37, baseType: !7, size: 32, elements: !189)
!189 = !{!190, !191, !192, !193, !194}
!190 = !DIEnumerator(name: "DMA_COMPLETE", value: 0, isUnsigned: true)
!191 = !DIEnumerator(name: "DMA_IN_PROGRESS", value: 1, isUnsigned: true)
!192 = !DIEnumerator(name: "DMA_PAUSED", value: 2, isUnsigned: true)
!193 = !DIEnumerator(name: "DMA_ERROR", value: 3, isUnsigned: true)
!194 = !DIEnumerator(name: "DMA_OUT_OF_ORDER", value: 4, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dw_edma_mode", file: !196, line: 24, baseType: !7, size: 32, elements: !197)
!196 = !DIFile(filename: "drivers/dma/dw-edma/dw-edma-core.h", directory: "/home/lizy2001/genbc/linux")
!197 = !{!198, !199}
!198 = !DIEnumerator(name: "EDMA_MODE_LEGACY", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "EDMA_MODE_UNROLL", value: 1, isUnsigned: true)
!200 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dw_edma_dir", file: !196, line: 19, baseType: !7, size: 32, elements: !201)
!201 = !{!202, !203}
!202 = !DIEnumerator(name: "EDMA_DIR_WRITE", value: 0, isUnsigned: true)
!203 = !DIEnumerator(name: "EDMA_DIR_READ", value: 1, isUnsigned: true)
!204 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dw_edma_request", file: !196, line: 29, baseType: !7, size: 32, elements: !205)
!205 = !{!206, !207, !208}
!206 = !DIEnumerator(name: "EDMA_REQ_NONE", value: 0, isUnsigned: true)
!207 = !DIEnumerator(name: "EDMA_REQ_STOP", value: 1, isUnsigned: true)
!208 = !DIEnumerator(name: "EDMA_REQ_PAUSE", value: 2, isUnsigned: true)
!209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dw_edma_status", file: !196, line: 35, baseType: !7, size: 32, elements: !210)
!210 = !{!211, !212, !213}
!211 = !DIEnumerator(name: "EDMA_ST_IDLE", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "EDMA_ST_PAUSE", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "EDMA_ST_BUSY", value: 2, isUnsigned: true)
!214 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !215, line: 10, baseType: !7, size: 32, elements: !216)
!215 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!216 = !{!217, !218}
!217 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!218 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!219 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !108, line: 651, baseType: !7, size: 32, elements: !220)
!220 = !{!221, !222}
!221 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!222 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_transaction_type", file: !129, line: 51, baseType: !7, size: 32, elements: !224)
!224 = !{!225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241}
!225 = !DIEnumerator(name: "DMA_MEMCPY", value: 0, isUnsigned: true)
!226 = !DIEnumerator(name: "DMA_XOR", value: 1, isUnsigned: true)
!227 = !DIEnumerator(name: "DMA_PQ", value: 2, isUnsigned: true)
!228 = !DIEnumerator(name: "DMA_XOR_VAL", value: 3, isUnsigned: true)
!229 = !DIEnumerator(name: "DMA_PQ_VAL", value: 4, isUnsigned: true)
!230 = !DIEnumerator(name: "DMA_MEMSET", value: 5, isUnsigned: true)
!231 = !DIEnumerator(name: "DMA_MEMSET_SG", value: 6, isUnsigned: true)
!232 = !DIEnumerator(name: "DMA_INTERRUPT", value: 7, isUnsigned: true)
!233 = !DIEnumerator(name: "DMA_PRIVATE", value: 8, isUnsigned: true)
!234 = !DIEnumerator(name: "DMA_ASYNC_TX", value: 9, isUnsigned: true)
!235 = !DIEnumerator(name: "DMA_SLAVE", value: 10, isUnsigned: true)
!236 = !DIEnumerator(name: "DMA_CYCLIC", value: 11, isUnsigned: true)
!237 = !DIEnumerator(name: "DMA_INTERLEAVE", value: 12, isUnsigned: true)
!238 = !DIEnumerator(name: "DMA_COMPLETION_NO_ORDER", value: 13, isUnsigned: true)
!239 = !DIEnumerator(name: "DMA_REPEAT", value: 14, isUnsigned: true)
!240 = !DIEnumerator(name: "DMA_LOAD_EOT", value: 15, isUnsigned: true)
!241 = !DIEnumerator(name: "DMA_TX_TYPE_END", value: 16, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !243, line: 305, baseType: !7, size: 32, elements: !244)
!243 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!244 = !{!245, !246, !247, !248}
!245 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!246 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!247 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!248 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!249 = !{!250, !252, !253, !320, !4685, !4612, !4688, !4694, !4700, !4713, !4714, !530, !4715, !4717, !426, !281}
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !251, line: 148, baseType: !7)
!251 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_edma_chan", file: !196, line: 79, size: 2880, elements: !255)
!255 = !{!256, !4625, !4673, !4674, !4675, !4678, !4679, !4680, !4681, !4682, !4683, !4684}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "vc", scope: !254, file: !196, line: 80, baseType: !257, size: 1920)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "virt_dma_chan", file: !258, line: 22, size: 1920, elements: !259)
!258 = !DIFile(filename: "drivers/dma/dw-edma/../virt-dma.h", directory: "/home/lizy2001/genbc/linux")
!259 = !{!260, !4588, !4608, !4618, !4619, !4620, !4621, !4622, !4623, !4624}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !257, file: !258, line: 23, baseType: !261, size: 832)
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan", file: !129, line: 329, size: 832, elements: !262)
!262 = !{!263, !4556, !4557, !4558, !4559, !4560, !4567, !4568, !4569, !4575, !4576, !4577, !4586, !4587}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !261, file: !129, line: 330, baseType: !264, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_device", file: !129, line: 844, size: 3072, elements: !266)
!266 = !{!267, !282, !283, !284, !290, !291, !314, !323, !324, !326, !327, !328, !329, !330, !331, !332, !4338, !4339, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4356, !4360, !4425, !4430, !4435, !4439, !4443, !4447, !4460, !4464, !4468, !4472, !4496, !4500, !4518, !4536, !4537, !4538, !4539, !4540, !4551, !4552}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !265, file: !129, line: 845, baseType: !268, size: 32)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !269, line: 19, size: 32, elements: !270)
!269 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!270 = !{!271}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !268, file: !269, line: 20, baseType: !272, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !273, line: 113, baseType: !274)
!273 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !273, line: 111, size: 32, elements: !275)
!275 = !{!276}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !274, file: !273, line: 112, baseType: !277, size: 32)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !251, line: 168, baseType: !278)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !251, line: 166, size: 32, elements: !279)
!279 = !{!280}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !278, file: !251, line: 167, baseType: !281, size: 32)
!281 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "chancnt", scope: !265, file: !129, line: 846, baseType: !7, size: 32, offset: 32)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "privatecnt", scope: !265, file: !129, line: 847, baseType: !7, size: 32, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !265, file: !129, line: 848, baseType: !285, size: 128, offset: 128)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !251, line: 178, size: 128, elements: !286)
!286 = !{!287, !289}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !285, file: !251, line: 179, baseType: !288, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !285, file: !251, line: 179, baseType: !288, size: 64, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "global_node", scope: !265, file: !129, line: 849, baseType: !285, size: 128, offset: 256)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !265, file: !129, line: 850, baseType: !292, size: 192, offset: 384)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_filter", file: !129, line: 762, size: 192, elements: !293)
!293 = !{!294, !302, !303}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !292, file: !129, line: 763, baseType: !295, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_filter_fn", file: !129, line: 529, baseType: !296)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = !DISubroutineType(types: !298)
!298 = !{!299, !301, !252}
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !251, line: 30, baseType: !300)
!300 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "mapcnt", scope: !292, file: !129, line: 764, baseType: !281, size: 32, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !292, file: !129, line: 765, baseType: !304, size: 64, offset: 128)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_map", file: !129, line: 749, size: 192, elements: !307)
!307 = !{!308, !312, !313}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "devname", scope: !306, file: !129, line: 750, baseType: !309, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !311)
!311 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !306, file: !129, line: 751, baseType: !309, size: 64, offset: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !306, file: !129, line: 752, baseType: !252, size: 64, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "cap_mask", scope: !265, file: !129, line: 851, baseType: !315, size: 64, offset: 576)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cap_mask_t", file: !129, line: 230, baseType: !316)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !129, line: 230, size: 64, elements: !317)
!317 = !{!318}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !316, file: !129, line: 230, baseType: !319, size: 64)
!319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 64, elements: !321)
!320 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!321 = !{!322}
!322 = !DISubrange(count: 1)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_modes", scope: !265, file: !129, line: 852, baseType: !128, size: 32, offset: 640)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "max_xor", scope: !265, file: !129, line: 853, baseType: !325, size: 16, offset: 672)
!325 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "max_pq", scope: !265, file: !129, line: 854, baseType: !325, size: 16, offset: 688)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "copy_align", scope: !265, file: !129, line: 855, baseType: !134, size: 32, offset: 704)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "xor_align", scope: !265, file: !129, line: 856, baseType: !134, size: 32, offset: 736)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "pq_align", scope: !265, file: !129, line: 857, baseType: !134, size: 32, offset: 768)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "fill_align", scope: !265, file: !129, line: 858, baseType: !134, size: 32, offset: 800)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !265, file: !129, line: 861, baseType: !281, size: 32, offset: 832)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !265, file: !129, line: 862, baseType: !333, size: 64, offset: 896)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !335)
!335 = !{!336, !3511, !3512, !3515, !3516, !3567, !3658, !3659, !3660, !3661, !3662, !3671, !3776, !3789, !4265, !4266, !4270, !4272, !4273, !4274, !4278, !4284, !4285, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4326, !4327, !4328, !4331, !4334, !4335, !4336, !4337}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !334, file: !73, line: 462, baseType: !337, size: 512)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !338, line: 64, size: 512, elements: !339)
!338 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!339 = !{!340, !341, !342, !344, !404, !3366, !3505, !3506, !3507, !3508, !3509, !3510}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !337, file: !338, line: 65, baseType: !309, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !337, file: !338, line: 66, baseType: !285, size: 128, offset: 64)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !337, file: !338, line: 67, baseType: !343, size: 64, offset: 192)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !337, file: !338, line: 68, baseType: !345, size: 64, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !338, line: 192, size: 704, elements: !347)
!347 = !{!348, !349, !365, !366}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !346, file: !338, line: 193, baseType: !285, size: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !346, file: !338, line: 194, baseType: !350, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !351, line: 83, baseType: !352)
!351 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !351, line: 71, elements: !353)
!353 = !{!354}
!354 = !DIDerivedType(tag: DW_TAG_member, scope: !352, file: !351, line: 72, baseType: !355)
!355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !352, file: !351, line: 72, elements: !356)
!356 = !{!357}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !355, file: !351, line: 73, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !351, line: 20, elements: !359)
!359 = !{!360}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !358, file: !351, line: 21, baseType: !361)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !362, line: 25, baseType: !363)
!362 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !362, line: 25, elements: !364)
!364 = !{}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !346, file: !338, line: 195, baseType: !337, size: 512, offset: 128)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !346, file: !338, line: 196, baseType: !367, size: 64, offset: 640)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !338, line: 156, size: 192, elements: !370)
!370 = !{!371, !376, !381}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !369, file: !338, line: 157, baseType: !372, size: 64)
!372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!374 = !DISubroutineType(types: !375)
!375 = !{!281, !345, !343}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !369, file: !338, line: 158, baseType: !377, size: 64, offset: 64)
!377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !378)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DISubroutineType(types: !380)
!380 = !{!309, !345, !343}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !369, file: !338, line: 159, baseType: !382, size: 64, offset: 128)
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = !DISubroutineType(types: !385)
!385 = !{!281, !345, !343, !386}
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !338, line: 148, size: 20736, elements: !388)
!388 = !{!389, !394, !398, !399, !403}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !387, file: !338, line: 149, baseType: !390, size: 192)
!390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !391, size: 192, elements: !392)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!392 = !{!393}
!393 = !DISubrange(count: 3)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !387, file: !338, line: 150, baseType: !395, size: 4096, offset: 192)
!395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !391, size: 4096, elements: !396)
!396 = !{!397}
!397 = !DISubrange(count: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !387, file: !338, line: 151, baseType: !281, size: 32, offset: 4288)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !387, file: !338, line: 152, baseType: !400, size: 16384, offset: 4320)
!400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 16384, elements: !401)
!401 = !{!402}
!402 = !DISubrange(count: 2048)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !387, file: !338, line: 153, baseType: !281, size: 32, offset: 20704)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !337, file: !338, line: 69, baseType: !405, size: 64, offset: 320)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !338, line: 138, size: 448, elements: !407)
!407 = !{!408, !412, !440, !442, !3328, !3356, !3360}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !406, file: !338, line: 139, baseType: !409, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!410 = !DISubroutineType(types: !411)
!411 = !{null, !343}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !406, file: !338, line: 140, baseType: !413, size: 64, offset: 64)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !415)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !416, line: 230, size: 128, elements: !417)
!416 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!417 = !{!418, !433}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !415, file: !416, line: 231, baseType: !419, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DISubroutineType(types: !421)
!421 = !{!422, !343, !427, !391}
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !251, line: 60, baseType: !423)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !424, line: 73, baseType: !425)
!424 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !424, line: 15, baseType: !426)
!426 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !416, line: 30, size: 128, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !428, file: !416, line: 31, baseType: !309, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !428, file: !416, line: 32, baseType: !432, size: 16, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !251, line: 19, baseType: !325)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !415, file: !416, line: 232, baseType: !434, size: 64, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DISubroutineType(types: !436)
!436 = !{!422, !343, !427, !309, !437}
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !251, line: 55, baseType: !438)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !424, line: 72, baseType: !439)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !424, line: 16, baseType: !320)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !406, file: !338, line: 141, baseType: !441, size: 64, offset: 128)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !406, file: !338, line: 142, baseType: !443, size: 64, offset: 192)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !446)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !416, line: 84, size: 320, elements: !447)
!447 = !{!448, !449, !453, !3325, !3326}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !446, file: !416, line: 85, baseType: !309, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !446, file: !416, line: 86, baseType: !450, size: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DISubroutineType(types: !452)
!452 = !{!432, !343, !427, !281}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !446, file: !416, line: 88, baseType: !454, size: 64, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DISubroutineType(types: !456)
!456 = !{!432, !343, !457, !281}
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !416, line: 168, size: 448, elements: !459)
!459 = !{!460, !461, !462, !463, !3320, !3321}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !458, file: !416, line: 169, baseType: !428, size: 128)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !458, file: !416, line: 170, baseType: !437, size: 64, offset: 128)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !458, file: !416, line: 171, baseType: !252, size: 64, offset: 192)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !458, file: !416, line: 172, baseType: !464, size: 64, offset: 256)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DISubroutineType(types: !466)
!466 = !{!422, !467, !343, !457, !391, !644, !437}
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !469)
!469 = !{!470, !488, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3303, !3304, !3313, !3314, !3315, !3316, !3317, !3318, !3319}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !468, file: !44, line: 920, baseType: !471, size: 128)
!471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !468, file: !44, line: 917, size: 128, elements: !472)
!472 = !{!473, !479}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !471, file: !44, line: 918, baseType: !474, size: 64)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !475, line: 58, size: 64, elements: !476)
!475 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!476 = !{!477}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !474, file: !475, line: 59, baseType: !478, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !471, file: !44, line: 919, baseType: !480, size: 128, align: 64)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !251, line: 216, size: 128, align: 64, elements: !481)
!481 = !{!482, !484}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !480, file: !251, line: 217, baseType: !483, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !480, file: !251, line: 218, baseType: !485, size: 64, offset: 64)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{null, !483}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !468, file: !44, line: 921, baseType: !489, size: 128, offset: 128)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !490, line: 8, size: 128, elements: !491)
!490 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!491 = !{!492, !496}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !489, file: !490, line: 9, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !495, line: 18, flags: DIFlagFwdDecl)
!495 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!496 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !489, file: !490, line: 10, baseType: !497, size: 64, offset: 64)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !495, line: 89, size: 1536, elements: !499)
!499 = !{!500, !501, !511, !519, !520, !543, !3253, !3255, !3267, !3268, !3269, !3270, !3271, !3277, !3278, !3279}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !498, file: !495, line: 91, baseType: !7, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !498, file: !495, line: 92, baseType: !502, size: 32, offset: 32)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !503, line: 277, baseType: !504)
!503 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !503, line: 277, size: 32, elements: !505)
!505 = !{!506}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !504, file: !503, line: 277, baseType: !507, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !503, line: 70, baseType: !508)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !503, line: 65, size: 32, elements: !509)
!509 = !{!510}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !508, file: !503, line: 66, baseType: !7, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !498, file: !495, line: 93, baseType: !512, size: 128, offset: 64)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !513, line: 38, size: 128, elements: !514)
!513 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!514 = !{!515, !517}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !512, file: !513, line: 39, baseType: !516, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !512, file: !513, line: 39, baseType: !518, size: 64, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !498, file: !495, line: 94, baseType: !497, size: 64, offset: 192)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !498, file: !495, line: 95, baseType: !521, size: 128, offset: 256)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !495, line: 47, size: 128, elements: !522)
!522 = !{!523, !539}
!523 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !495, line: 48, baseType: !524, size: 64)
!524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !521, file: !495, line: 48, size: 64, elements: !525)
!525 = !{!526, !535}
!526 = !DIDerivedType(tag: DW_TAG_member, scope: !524, file: !495, line: 49, baseType: !527, size: 64)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !524, file: !495, line: 49, size: 64, elements: !528)
!528 = !{!529, !534}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !527, file: !495, line: 50, baseType: !530, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !531, line: 21, baseType: !532)
!531 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !533, line: 27, baseType: !7)
!533 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!534 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !527, file: !495, line: 50, baseType: !530, size: 32, offset: 32)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !524, file: !495, line: 52, baseType: !536, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !531, line: 23, baseType: !537)
!537 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !533, line: 31, baseType: !538)
!538 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !521, file: !495, line: 54, baseType: !540, size: 64, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !542)
!542 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !498, file: !495, line: 96, baseType: !544, size: 64, offset: 384)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !546)
!546 = !{!547, !548, !549, !557, !564, !565, !711, !2964, !2965, !2966, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3229, !3237, !3238, !3239, !3249, !3250, !3251, !3252}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !545, file: !44, line: 611, baseType: !432, size: 16)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !545, file: !44, line: 612, baseType: !325, size: 16, offset: 16)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !545, file: !44, line: 613, baseType: !550, size: 32, offset: 32)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !551, line: 23, baseType: !552)
!551 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !551, line: 21, size: 32, elements: !553)
!553 = !{!554}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !552, file: !551, line: 22, baseType: !555, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !251, line: 32, baseType: !556)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !424, line: 49, baseType: !7)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !545, file: !44, line: 614, baseType: !558, size: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !551, line: 28, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !551, line: 26, size: 32, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !559, file: !551, line: 27, baseType: !562, size: 32)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !251, line: 33, baseType: !563)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !424, line: 50, baseType: !7)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !545, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !545, file: !44, line: 622, baseType: !566, size: 64, offset: 128)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !569)
!569 = !{!570, !574, !587, !591, !597, !601, !605, !609, !613, !617, !621, !622, !628, !632, !658, !687, !691, !697, !702, !706, !707}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !568, file: !44, line: 1865, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DISubroutineType(types: !573)
!573 = !{!497, !544, !497, !7}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !568, file: !44, line: 1866, baseType: !575, size: 64, offset: 64)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DISubroutineType(types: !577)
!577 = !{!309, !497, !544, !578}
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !580, line: 10, size: 128, elements: !581)
!580 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!581 = !{!582, !586}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !579, file: !580, line: 11, baseType: !583, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{null, !252}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !579, file: !580, line: 12, baseType: !252, size: 64, offset: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !568, file: !44, line: 1867, baseType: !588, size: 64, offset: 128)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!281, !544, !281}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !568, file: !44, line: 1868, baseType: !592, size: 64, offset: 192)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DISubroutineType(types: !594)
!594 = !{!595, !544, !281}
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !568, file: !44, line: 1870, baseType: !598, size: 64, offset: 256)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DISubroutineType(types: !600)
!600 = !{!281, !497, !391, !281}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !568, file: !44, line: 1872, baseType: !602, size: 64, offset: 320)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DISubroutineType(types: !604)
!604 = !{!281, !544, !497, !432, !299}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !568, file: !44, line: 1873, baseType: !606, size: 64, offset: 384)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DISubroutineType(types: !608)
!608 = !{!281, !497, !544, !497}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !568, file: !44, line: 1874, baseType: !610, size: 64, offset: 448)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DISubroutineType(types: !612)
!612 = !{!281, !544, !497}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !568, file: !44, line: 1875, baseType: !614, size: 64, offset: 512)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DISubroutineType(types: !616)
!616 = !{!281, !544, !497, !309}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !568, file: !44, line: 1876, baseType: !618, size: 64, offset: 576)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DISubroutineType(types: !620)
!620 = !{!281, !544, !497, !432}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !568, file: !44, line: 1877, baseType: !610, size: 64, offset: 640)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !568, file: !44, line: 1878, baseType: !623, size: 64, offset: 704)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DISubroutineType(types: !625)
!625 = !{!281, !544, !497, !432, !626}
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !251, line: 16, baseType: !627)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !251, line: 13, baseType: !530)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !568, file: !44, line: 1879, baseType: !629, size: 64, offset: 768)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DISubroutineType(types: !631)
!631 = !{!281, !544, !497, !544, !497, !7}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !568, file: !44, line: 1881, baseType: !633, size: 64, offset: 832)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DISubroutineType(types: !635)
!635 = !{!281, !497, !636}
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !638)
!638 = !{!639, !640, !641, !642, !643, !647, !655, !656, !657}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !637, file: !44, line: 220, baseType: !7, size: 32)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !637, file: !44, line: 221, baseType: !432, size: 16, offset: 32)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !637, file: !44, line: 222, baseType: !550, size: 32, offset: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !637, file: !44, line: 223, baseType: !558, size: 32, offset: 96)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !637, file: !44, line: 224, baseType: !644, size: 64, offset: 128)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !251, line: 46, baseType: !645)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !424, line: 88, baseType: !646)
!646 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !637, file: !44, line: 225, baseType: !648, size: 128, offset: 192)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !649, line: 13, size: 128, elements: !650)
!649 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!650 = !{!651, !654}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !648, file: !649, line: 14, baseType: !652, size: 64)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !649, line: 8, baseType: !653)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !533, line: 30, baseType: !646)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !648, file: !649, line: 15, baseType: !426, size: 64, offset: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !637, file: !44, line: 226, baseType: !648, size: 128, offset: 320)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !637, file: !44, line: 227, baseType: !648, size: 128, offset: 448)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !637, file: !44, line: 234, baseType: !467, size: 64, offset: 576)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !568, file: !44, line: 1882, baseType: !659, size: 64, offset: 896)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{!281, !662, !664, !530, !7}
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !489)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !666, line: 22, size: 1152, elements: !667)
!666 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!667 = !{!668, !669, !670, !671, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !665, file: !666, line: 23, baseType: !530, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !665, file: !666, line: 24, baseType: !432, size: 16, offset: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !665, file: !666, line: 25, baseType: !7, size: 32, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !665, file: !666, line: 26, baseType: !672, size: 32, offset: 96)
!672 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !251, line: 104, baseType: !530)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !665, file: !666, line: 27, baseType: !536, size: 64, offset: 128)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !665, file: !666, line: 28, baseType: !536, size: 64, offset: 192)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !665, file: !666, line: 37, baseType: !536, size: 64, offset: 256)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !665, file: !666, line: 38, baseType: !626, size: 32, offset: 320)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !665, file: !666, line: 39, baseType: !626, size: 32, offset: 352)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !665, file: !666, line: 40, baseType: !550, size: 32, offset: 384)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !665, file: !666, line: 41, baseType: !558, size: 32, offset: 416)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !665, file: !666, line: 42, baseType: !644, size: 64, offset: 448)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !665, file: !666, line: 43, baseType: !648, size: 128, offset: 512)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !665, file: !666, line: 44, baseType: !648, size: 128, offset: 640)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !665, file: !666, line: 45, baseType: !648, size: 128, offset: 768)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !665, file: !666, line: 46, baseType: !648, size: 128, offset: 896)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !665, file: !666, line: 47, baseType: !536, size: 64, offset: 1024)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !665, file: !666, line: 48, baseType: !536, size: 64, offset: 1088)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !568, file: !44, line: 1883, baseType: !688, size: 64, offset: 960)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DISubroutineType(types: !690)
!690 = !{!422, !497, !391, !437}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !568, file: !44, line: 1884, baseType: !692, size: 64, offset: 1024)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DISubroutineType(types: !694)
!694 = !{!281, !544, !695, !536, !536}
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !568, file: !44, line: 1886, baseType: !698, size: 64, offset: 1088)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DISubroutineType(types: !700)
!700 = !{!281, !544, !701, !281}
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !568, file: !44, line: 1887, baseType: !703, size: 64, offset: 1152)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{!281, !544, !497, !467, !7, !432}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !568, file: !44, line: 1890, baseType: !618, size: 64, offset: 1216)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !568, file: !44, line: 1891, baseType: !708, size: 64, offset: 1280)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DISubroutineType(types: !710)
!710 = !{!281, !544, !595, !281}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !545, file: !44, line: 623, baseType: !712, size: 64, offset: 192)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !714)
!714 = !{!715, !716, !717, !718, !719, !720, !770, !2571, !2653, !2736, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2752, !2756, !2757, !2760, !2761, !2764, !2765, !2766, !2807, !2834, !2835, !2836, !2837, !2838, !2839, !2842, !2844, !2851, !2852, !2854, !2855, !2856, !2915, !2916, !2931, !2932, !2933, !2934, !2935, !2938, !2939, !2940, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !713, file: !44, line: 1417, baseType: !285, size: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !713, file: !44, line: 1418, baseType: !626, size: 32, offset: 128)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !713, file: !44, line: 1419, baseType: !542, size: 8, offset: 160)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !713, file: !44, line: 1420, baseType: !320, size: 64, offset: 192)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !713, file: !44, line: 1421, baseType: !644, size: 64, offset: 256)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !713, file: !44, line: 1422, baseType: !721, size: 64, offset: 320)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !723)
!723 = !{!724, !725, !726, !733, !737, !741, !745, !749, !750, !760, !763, !764, !765, !767, !768, !769}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !722, file: !44, line: 2229, baseType: !309, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !722, file: !44, line: 2230, baseType: !281, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !722, file: !44, line: 2238, baseType: !727, size: 64, offset: 128)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DISubroutineType(types: !729)
!729 = !{!281, !730}
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !732, line: 28, flags: DIFlagFwdDecl)
!732 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!733 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !722, file: !44, line: 2239, baseType: !734, size: 64, offset: 192)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !736)
!736 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !722, file: !44, line: 2240, baseType: !738, size: 64, offset: 256)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{!497, !721, !281, !309, !252}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !722, file: !44, line: 2242, baseType: !742, size: 64, offset: 320)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{null, !712}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !722, file: !44, line: 2243, baseType: !746, size: 64, offset: 384)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !748, line: 76, flags: DIFlagFwdDecl)
!748 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!749 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !722, file: !44, line: 2244, baseType: !721, size: 64, offset: 448)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !722, file: !44, line: 2245, baseType: !751, size: 64, offset: 512)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !251, line: 182, size: 64, elements: !752)
!752 = !{!753}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !751, file: !251, line: 183, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !251, line: 186, size: 128, elements: !756)
!756 = !{!757, !758}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !755, file: !251, line: 187, baseType: !754, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !755, file: !251, line: 187, baseType: !759, size: 64, offset: 64)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !722, file: !44, line: 2247, baseType: !761, offset: 576)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !762, line: 187, elements: !364)
!762 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!763 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !722, file: !44, line: 2248, baseType: !761, offset: 576)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !722, file: !44, line: 2249, baseType: !761, offset: 576)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !722, file: !44, line: 2250, baseType: !766, offset: 576)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !761, elements: !392)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !722, file: !44, line: 2252, baseType: !761, offset: 576)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !722, file: !44, line: 2253, baseType: !761, offset: 576)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !722, file: !44, line: 2254, baseType: !761, offset: 576)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !713, file: !44, line: 1423, baseType: !771, size: 64, offset: 384)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !773)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !774)
!774 = !{!775, !779, !783, !784, !788, !794, !798, !799, !800, !804, !808, !809, !810, !811, !817, !822, !823, !830, !831, !832, !833, !2555, !2570}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !773, file: !44, line: 1936, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!544, !712}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !773, file: !44, line: 1937, baseType: !780, size: 64, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{null, !544}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !773, file: !44, line: 1938, baseType: !780, size: 64, offset: 128)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !773, file: !44, line: 1940, baseType: !785, size: 64, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{null, !544, !281}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !773, file: !44, line: 1941, baseType: !789, size: 64, offset: 256)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DISubroutineType(types: !791)
!791 = !{!281, !544, !792}
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !773, file: !44, line: 1942, baseType: !795, size: 64, offset: 320)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DISubroutineType(types: !797)
!797 = !{!281, !544}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !773, file: !44, line: 1943, baseType: !780, size: 64, offset: 384)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !773, file: !44, line: 1944, baseType: !742, size: 64, offset: 448)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !773, file: !44, line: 1945, baseType: !801, size: 64, offset: 512)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DISubroutineType(types: !803)
!803 = !{!281, !712, !281}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !773, file: !44, line: 1946, baseType: !805, size: 64, offset: 576)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DISubroutineType(types: !807)
!807 = !{!281, !712}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !773, file: !44, line: 1947, baseType: !805, size: 64, offset: 640)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !773, file: !44, line: 1948, baseType: !805, size: 64, offset: 704)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !773, file: !44, line: 1949, baseType: !805, size: 64, offset: 768)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !773, file: !44, line: 1950, baseType: !812, size: 64, offset: 832)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DISubroutineType(types: !814)
!814 = !{!281, !497, !815}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !773, file: !44, line: 1951, baseType: !818, size: 64, offset: 896)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{!281, !712, !821, !391}
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !773, file: !44, line: 1952, baseType: !742, size: 64, offset: 960)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !773, file: !44, line: 1954, baseType: !824, size: 64, offset: 1024)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!281, !827, !497}
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !829, line: 539, flags: DIFlagFwdDecl)
!829 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!830 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !773, file: !44, line: 1955, baseType: !824, size: 64, offset: 1088)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !773, file: !44, line: 1956, baseType: !824, size: 64, offset: 1152)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !773, file: !44, line: 1957, baseType: !824, size: 64, offset: 1216)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !773, file: !44, line: 1963, baseType: !834, size: 64, offset: 1280)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DISubroutineType(types: !836)
!836 = !{!281, !712, !837, !250}
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !839, line: 68, size: 512, align: 128, elements: !840)
!839 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!840 = !{!841, !842, !2547, !2554}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !838, file: !839, line: 69, baseType: !320, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, scope: !838, file: !839, line: 77, baseType: !843, size: 320, offset: 64)
!843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !838, file: !839, line: 77, size: 320, elements: !844)
!844 = !{!845, !1068, !1073, !1101, !1109, !1115, !2478, !2546}
!845 = !DIDerivedType(tag: DW_TAG_member, scope: !843, file: !839, line: 78, baseType: !846, size: 320)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !843, file: !839, line: 78, size: 320, elements: !847)
!847 = !{!848, !849, !1066, !1067}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !846, file: !839, line: 84, baseType: !285, size: 128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !846, file: !839, line: 86, baseType: !850, size: 64, offset: 128)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !852)
!852 = !{!853, !854, !861, !862, !863, !878, !894, !895, !896, !897, !1059, !1060, !1063, !1064, !1065}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !851, file: !44, line: 452, baseType: !544, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !851, file: !44, line: 453, baseType: !855, size: 128, offset: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !856, line: 292, size: 128, elements: !857)
!856 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!857 = !{!858, !859, !860}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !855, file: !856, line: 293, baseType: !350)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !855, file: !856, line: 295, baseType: !250, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !855, file: !856, line: 296, baseType: !252, size: 64, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !851, file: !44, line: 454, baseType: !250, size: 32, offset: 192)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !851, file: !44, line: 455, baseType: !277, size: 32, offset: 224)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !851, file: !44, line: 460, baseType: !864, size: 128, offset: 256)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !865, line: 125, size: 128, elements: !866)
!865 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!866 = !{!867, !877}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !864, file: !865, line: 126, baseType: !868, size: 64)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !865, line: 31, size: 64, elements: !869)
!869 = !{!870}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !868, file: !865, line: 32, baseType: !871, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !865, line: 24, size: 192, align: 64, elements: !873)
!873 = !{!874, !875, !876}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !872, file: !865, line: 25, baseType: !320, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !872, file: !865, line: 26, baseType: !871, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !872, file: !865, line: 27, baseType: !871, size: 64, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !864, file: !865, line: 127, baseType: !871, size: 64, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !851, file: !44, line: 461, baseType: !879, size: 256, offset: 384)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !880, line: 35, size: 256, elements: !881)
!880 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!881 = !{!882, !890, !891, !893}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !879, file: !880, line: 36, baseType: !883, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !884, line: 13, baseType: !885)
!884 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !251, line: 175, baseType: !886)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !251, line: 173, size: 64, elements: !887)
!887 = !{!888}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !886, file: !251, line: 174, baseType: !889, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !531, line: 22, baseType: !653)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !879, file: !880, line: 42, baseType: !883, size: 64, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !879, file: !880, line: 46, baseType: !892, offset: 128)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !351, line: 29, baseType: !358)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !879, file: !880, line: 47, baseType: !285, size: 128, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !851, file: !44, line: 462, baseType: !320, size: 64, offset: 640)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !851, file: !44, line: 463, baseType: !320, size: 64, offset: 704)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !851, file: !44, line: 464, baseType: !320, size: 64, offset: 768)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !851, file: !44, line: 465, baseType: !898, size: 64, offset: 832)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !900)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !901)
!901 = !{!902, !906, !910, !914, !918, !922, !928, !934, !938, !943, !947, !951, !955, !1023, !1027, !1033, !1034, !1035, !1039, !1044, !1048, !1055}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !900, file: !44, line: 368, baseType: !903, size: 64)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{!281, !837, !792}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !900, file: !44, line: 369, baseType: !907, size: 64, offset: 64)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{!281, !467, !837}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !900, file: !44, line: 372, baseType: !911, size: 64, offset: 128)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!281, !850, !792}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !900, file: !44, line: 375, baseType: !915, size: 64, offset: 192)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{!281, !837}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !900, file: !44, line: 381, baseType: !919, size: 64, offset: 256)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DISubroutineType(types: !921)
!921 = !{!281, !467, !850, !288, !7}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !900, file: !44, line: 383, baseType: !923, size: 64, offset: 320)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{null, !926}
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !900, file: !44, line: 385, baseType: !929, size: 64, offset: 384)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!281, !467, !850, !644, !7, !7, !932, !933}
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !900, file: !44, line: 388, baseType: !935, size: 64, offset: 448)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DISubroutineType(types: !937)
!937 = !{!281, !467, !850, !644, !7, !7, !837, !252}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !900, file: !44, line: 393, baseType: !939, size: 64, offset: 512)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DISubroutineType(types: !941)
!941 = !{!942, !850, !942}
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !251, line: 125, baseType: !536)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !900, file: !44, line: 394, baseType: !944, size: 64, offset: 576)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = !DISubroutineType(types: !946)
!946 = !{null, !837, !7, !7}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !900, file: !44, line: 395, baseType: !948, size: 64, offset: 640)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DISubroutineType(types: !950)
!950 = !{!281, !837, !250}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !900, file: !44, line: 396, baseType: !952, size: 64, offset: 704)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DISubroutineType(types: !954)
!954 = !{null, !837}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !900, file: !44, line: 397, baseType: !956, size: 64, offset: 768)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DISubroutineType(types: !958)
!958 = !{!422, !959, !981}
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !961)
!961 = !{!962, !963, !964, !968, !969, !970, !973, !974}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !960, file: !44, line: 321, baseType: !467, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !960, file: !44, line: 326, baseType: !644, size: 64, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !960, file: !44, line: 327, baseType: !965, size: 64, offset: 128)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{null, !959, !426, !426}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !960, file: !44, line: 328, baseType: !252, size: 64, offset: 192)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !960, file: !44, line: 329, baseType: !281, size: 32, offset: 256)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !960, file: !44, line: 330, baseType: !971, size: 16, offset: 288)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !531, line: 19, baseType: !972)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !533, line: 24, baseType: !325)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !960, file: !44, line: 331, baseType: !971, size: 16, offset: 304)
!974 = !DIDerivedType(tag: DW_TAG_member, scope: !960, file: !44, line: 332, baseType: !975, size: 64, offset: 320)
!975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !960, file: !44, line: 332, size: 64, elements: !976)
!976 = !{!977, !978}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !975, file: !44, line: 333, baseType: !7, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !975, file: !44, line: 334, baseType: !979, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !983, line: 29, size: 320, elements: !984)
!983 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!984 = !{!985, !986, !987, !988, !1014}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !982, file: !983, line: 35, baseType: !7, size: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !982, file: !983, line: 36, baseType: !437, size: 64, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !982, file: !983, line: 37, baseType: !437, size: 64, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !983, line: 38, baseType: !989, size: 64, offset: 192)
!989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !982, file: !983, line: 38, size: 64, elements: !990)
!990 = !{!991, !999, !1006, !1010}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !989, file: !983, line: 39, baseType: !992, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !995, line: 17, size: 128, elements: !996)
!995 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!996 = !{!997, !998}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !994, file: !995, line: 19, baseType: !252, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !994, file: !995, line: 20, baseType: !438, size: 64, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !989, file: !983, line: 40, baseType: !1000, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !983, line: 15, size: 128, elements: !1003)
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1002, file: !983, line: 16, baseType: !252, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1002, file: !983, line: 17, baseType: !437, size: 64, offset: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !989, file: !983, line: 41, baseType: !1007, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!1009 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !983, line: 41, flags: DIFlagFwdDecl)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !989, file: !983, line: 42, baseType: !1011, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1013, line: 53, flags: DIFlagFwdDecl)
!1013 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1014 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !983, line: 44, baseType: !1015, size: 64, offset: 256)
!1015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !982, file: !983, line: 44, size: 64, elements: !1016)
!1016 = !{!1017, !1018}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1015, file: !983, line: 45, baseType: !320, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, scope: !1015, file: !983, line: 46, baseType: !1019, size: 64)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1015, file: !983, line: 46, size: 64, elements: !1020)
!1020 = !{!1021, !1022}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1019, file: !983, line: 47, baseType: !7, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1019, file: !983, line: 48, baseType: !7, size: 32, offset: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !900, file: !44, line: 402, baseType: !1024, size: 64, offset: 832)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!281, !850, !837, !837, !5}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !900, file: !44, line: 404, baseType: !1028, size: 64, offset: 896)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!299, !837, !1031}
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1032, line: 305, baseType: !7)
!1032 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !900, file: !44, line: 405, baseType: !952, size: 64, offset: 960)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !900, file: !44, line: 406, baseType: !915, size: 64, offset: 1024)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !900, file: !44, line: 407, baseType: !1036, size: 64, offset: 1088)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!281, !837, !320, !320}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !900, file: !44, line: 409, baseType: !1040, size: 64, offset: 1152)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{null, !837, !1043, !1043}
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !900, file: !44, line: 410, baseType: !1045, size: 64, offset: 1216)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!281, !850, !837}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !900, file: !44, line: 413, baseType: !1049, size: 64, offset: 1280)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!281, !1052, !467, !1054}
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !900, file: !44, line: 415, baseType: !1056, size: 64, offset: 1344)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !467}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !851, file: !44, line: 466, baseType: !320, size: 64, offset: 896)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !851, file: !44, line: 467, baseType: !1061, size: 32, offset: 960)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1062, line: 8, baseType: !530)
!1062 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !851, file: !44, line: 468, baseType: !350, offset: 992)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !851, file: !44, line: 469, baseType: !285, size: 128, offset: 1024)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !851, file: !44, line: 470, baseType: !252, size: 64, offset: 1152)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !846, file: !839, line: 87, baseType: !320, size: 64, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !846, file: !839, line: 94, baseType: !320, size: 64, offset: 256)
!1068 = !DIDerivedType(tag: DW_TAG_member, scope: !843, file: !839, line: 96, baseType: !1069, size: 64)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !843, file: !839, line: 96, size: 64, elements: !1070)
!1070 = !{!1071}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1069, file: !839, line: 101, baseType: !1072, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !251, line: 143, baseType: !536)
!1073 = !DIDerivedType(tag: DW_TAG_member, scope: !843, file: !839, line: 103, baseType: !1074, size: 320)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !843, file: !839, line: 103, size: 320, elements: !1075)
!1075 = !{!1076, !1086, !1089, !1090}
!1076 = !DIDerivedType(tag: DW_TAG_member, scope: !1074, file: !839, line: 104, baseType: !1077, size: 128)
!1077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1074, file: !839, line: 104, size: 128, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1077, file: !839, line: 105, baseType: !285, size: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, scope: !1077, file: !839, line: 106, baseType: !1081, size: 128)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1077, file: !839, line: 106, size: 128, elements: !1082)
!1082 = !{!1083, !1084, !1085}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1081, file: !839, line: 107, baseType: !837, size: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1081, file: !839, line: 109, baseType: !281, size: 32, offset: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1081, file: !839, line: 110, baseType: !281, size: 32, offset: 96)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1074, file: !839, line: 117, baseType: !1087, size: 64, offset: 128)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !839, line: 117, flags: DIFlagFwdDecl)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1074, file: !839, line: 119, baseType: !252, size: 64, offset: 192)
!1090 = !DIDerivedType(tag: DW_TAG_member, scope: !1074, file: !839, line: 120, baseType: !1091, size: 64, offset: 256)
!1091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1074, file: !839, line: 120, size: 64, elements: !1092)
!1092 = !{!1093, !1094, !1095}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1091, file: !839, line: 121, baseType: !252, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1091, file: !839, line: 122, baseType: !320, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, scope: !1091, file: !839, line: 123, baseType: !1096, size: 32)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1091, file: !839, line: 123, size: 32, elements: !1097)
!1097 = !{!1098, !1099, !1100}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1096, file: !839, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1096, file: !839, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1096, file: !839, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1101 = !DIDerivedType(tag: DW_TAG_member, scope: !843, file: !839, line: 130, baseType: !1102, size: 192)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !843, file: !839, line: 130, size: 192, elements: !1103)
!1103 = !{!1104, !1105, !1106, !1107, !1108}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1102, file: !839, line: 131, baseType: !320, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1102, file: !839, line: 134, baseType: !542, size: 8, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1102, file: !839, line: 135, baseType: !542, size: 8, offset: 72)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1102, file: !839, line: 136, baseType: !277, size: 32, offset: 96)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1102, file: !839, line: 137, baseType: !7, size: 32, offset: 128)
!1109 = !DIDerivedType(tag: DW_TAG_member, scope: !843, file: !839, line: 139, baseType: !1110, size: 256)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !843, file: !839, line: 139, size: 256, elements: !1111)
!1111 = !{!1112, !1113, !1114}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1110, file: !839, line: 140, baseType: !320, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1110, file: !839, line: 141, baseType: !277, size: 32, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1110, file: !839, line: 143, baseType: !285, size: 128, offset: 128)
!1115 = !DIDerivedType(tag: DW_TAG_member, scope: !843, file: !839, line: 145, baseType: !1116, size: 256)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !843, file: !839, line: 145, size: 256, elements: !1117)
!1117 = !{!1118, !1119, !1121, !1122, !2477}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1116, file: !839, line: 146, baseType: !320, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1116, file: !839, line: 147, baseType: !1120, size: 64, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !829, line: 509, baseType: !837)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1116, file: !839, line: 148, baseType: !320, size: 64, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, scope: !1116, file: !839, line: 149, baseType: !1123, size: 64, offset: 192)
!1123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1116, file: !839, line: 149, size: 64, elements: !1124)
!1124 = !{!1125, !2476}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1123, file: !839, line: 150, baseType: !1126, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !839, line: 388, size: 7296, elements: !1128)
!1128 = !{!1129, !2472}
!1129 = !DIDerivedType(tag: DW_TAG_member, scope: !1127, file: !839, line: 389, baseType: !1130, size: 7296)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1127, file: !839, line: 389, size: 7296, elements: !1131)
!1131 = !{!1132, !1250, !1251, !1252, !1256, !1257, !1258, !1259, !1260, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1301, !1309, !1312, !1358, !1359, !2456, !2457, !2460, !2461, !2462, !2465, !2466, !2467, !2470, !2471}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1130, file: !839, line: 390, baseType: !1133, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !839, line: 305, size: 1472, elements: !1135)
!1135 = !{!1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1150, !1151, !1156, !1157, !1160, !1244, !1245, !1246, !1247, !1248}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1134, file: !839, line: 308, baseType: !320, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1134, file: !839, line: 309, baseType: !320, size: 64, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1134, file: !839, line: 313, baseType: !1133, size: 64, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1134, file: !839, line: 313, baseType: !1133, size: 64, offset: 192)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1134, file: !839, line: 315, baseType: !872, size: 192, align: 64, offset: 256)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1134, file: !839, line: 323, baseType: !320, size: 64, offset: 448)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1134, file: !839, line: 327, baseType: !1126, size: 64, offset: 512)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1134, file: !839, line: 333, baseType: !1144, size: 64, offset: 576)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !829, line: 284, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !829, line: 284, size: 64, elements: !1146)
!1146 = !{!1147}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1145, file: !829, line: 284, baseType: !1148, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1149, line: 19, baseType: !320)
!1149 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1134, file: !839, line: 334, baseType: !320, size: 64, offset: 640)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1134, file: !839, line: 343, baseType: !1152, size: 256, offset: 704)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1134, file: !839, line: 340, size: 256, elements: !1153)
!1153 = !{!1154, !1155}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1152, file: !839, line: 341, baseType: !872, size: 192, align: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1152, file: !839, line: 342, baseType: !320, size: 64, offset: 192)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1134, file: !839, line: 351, baseType: !285, size: 128, offset: 960)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1134, file: !839, line: 353, baseType: !1158, size: 64, offset: 1088)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !839, line: 353, flags: DIFlagFwdDecl)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1134, file: !839, line: 356, baseType: !1161, size: 64, offset: 1152)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1164)
!1164 = !{!1165, !1169, !1170, !1174, !1178, !1218, !1222, !1226, !1230, !1231, !1232, !1236, !1240}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1163, file: !14, line: 558, baseType: !1166, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{null, !1133}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1163, file: !14, line: 559, baseType: !1166, size: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1163, file: !14, line: 560, baseType: !1171, size: 64, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!281, !1133, !320}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1163, file: !14, line: 561, baseType: !1175, size: 64, offset: 192)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!281, !1133}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1163, file: !14, line: 562, baseType: !1179, size: 64, offset: 256)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{!1182, !1183}
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !839, line: 682, baseType: !7)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1185)
!1185 = !{!1186, !1187, !1188, !1189, !1190, !1191, !1198, !1205, !1211, !1212, !1213, !1215, !1217}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1184, file: !14, line: 509, baseType: !1133, size: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1184, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1184, file: !14, line: 511, baseType: !250, size: 32, offset: 96)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1184, file: !14, line: 512, baseType: !320, size: 64, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1184, file: !14, line: 513, baseType: !320, size: 64, offset: 192)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1184, file: !14, line: 514, baseType: !1192, size: 64, offset: 256)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !829, line: 385, baseType: !1194)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !829, line: 385, size: 64, elements: !1195)
!1195 = !{!1196}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1194, file: !829, line: 385, baseType: !1197, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1149, line: 15, baseType: !320)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1184, file: !14, line: 516, baseType: !1199, size: 64, offset: 320)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !829, line: 359, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !829, line: 359, size: 64, elements: !1202)
!1202 = !{!1203}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1201, file: !829, line: 359, baseType: !1204, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1149, line: 16, baseType: !320)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1184, file: !14, line: 519, baseType: !1206, size: 64, offset: 384)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1149, line: 21, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1149, line: 21, size: 64, elements: !1208)
!1208 = !{!1209}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1207, file: !1149, line: 21, baseType: !1210, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1149, line: 14, baseType: !320)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1184, file: !14, line: 521, baseType: !837, size: 64, offset: 448)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1184, file: !14, line: 522, baseType: !837, size: 64, offset: 512)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1184, file: !14, line: 528, baseType: !1214, size: 64, offset: 576)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1184, file: !14, line: 532, baseType: !1216, size: 64, offset: 640)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1184, file: !14, line: 536, baseType: !1120, size: 64, offset: 704)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1163, file: !14, line: 563, baseType: !1219, size: 64, offset: 320)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!1182, !1183, !13}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1163, file: !14, line: 565, baseType: !1223, size: 64, offset: 384)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{null, !1183, !320, !320}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1163, file: !14, line: 567, baseType: !1227, size: 64, offset: 448)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!320, !1133}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1163, file: !14, line: 571, baseType: !1179, size: 64, offset: 512)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1163, file: !14, line: 574, baseType: !1179, size: 64, offset: 576)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1163, file: !14, line: 579, baseType: !1233, size: 64, offset: 640)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!281, !1133, !320, !252, !281, !281}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1163, file: !14, line: 585, baseType: !1237, size: 64, offset: 704)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!309, !1133}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1163, file: !14, line: 615, baseType: !1241, size: 64, offset: 768)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!837, !1133, !320}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1134, file: !839, line: 359, baseType: !320, size: 64, offset: 1216)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1134, file: !839, line: 361, baseType: !467, size: 64, offset: 1280)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1134, file: !839, line: 362, baseType: !252, size: 64, offset: 1344)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1134, file: !839, line: 365, baseType: !883, size: 64, offset: 1408)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1134, file: !839, line: 373, baseType: !1249, offset: 1472)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !839, line: 296, elements: !364)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1130, file: !839, line: 391, baseType: !868, size: 64, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1130, file: !839, line: 392, baseType: !536, size: 64, offset: 128)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1130, file: !839, line: 394, baseType: !1253, size: 64, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!320, !467, !320, !320, !320, !320}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1130, file: !839, line: 398, baseType: !320, size: 64, offset: 256)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1130, file: !839, line: 399, baseType: !320, size: 64, offset: 320)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1130, file: !839, line: 405, baseType: !320, size: 64, offset: 384)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1130, file: !839, line: 406, baseType: !320, size: 64, offset: 448)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1130, file: !839, line: 407, baseType: !1261, size: 64, offset: 512)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !829, line: 286, baseType: !1263)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !829, line: 286, size: 64, elements: !1264)
!1264 = !{!1265}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1263, file: !829, line: 286, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1149, line: 18, baseType: !320)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1130, file: !839, line: 416, baseType: !277, size: 32, offset: 576)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1130, file: !839, line: 428, baseType: !277, size: 32, offset: 608)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1130, file: !839, line: 437, baseType: !277, size: 32, offset: 640)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1130, file: !839, line: 447, baseType: !277, size: 32, offset: 672)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1130, file: !839, line: 450, baseType: !883, size: 64, offset: 704)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1130, file: !839, line: 452, baseType: !281, size: 32, offset: 768)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1130, file: !839, line: 454, baseType: !350, offset: 800)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1130, file: !839, line: 457, baseType: !879, size: 256, offset: 832)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1130, file: !839, line: 459, baseType: !285, size: 128, offset: 1088)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1130, file: !839, line: 466, baseType: !320, size: 64, offset: 1216)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1130, file: !839, line: 467, baseType: !320, size: 64, offset: 1280)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1130, file: !839, line: 469, baseType: !320, size: 64, offset: 1344)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1130, file: !839, line: 470, baseType: !320, size: 64, offset: 1408)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1130, file: !839, line: 471, baseType: !885, size: 64, offset: 1472)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1130, file: !839, line: 472, baseType: !320, size: 64, offset: 1536)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1130, file: !839, line: 473, baseType: !320, size: 64, offset: 1600)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1130, file: !839, line: 474, baseType: !320, size: 64, offset: 1664)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1130, file: !839, line: 475, baseType: !320, size: 64, offset: 1728)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1130, file: !839, line: 477, baseType: !350, offset: 1792)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1130, file: !839, line: 478, baseType: !320, size: 64, offset: 1792)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1130, file: !839, line: 478, baseType: !320, size: 64, offset: 1856)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1130, file: !839, line: 478, baseType: !320, size: 64, offset: 1920)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1130, file: !839, line: 478, baseType: !320, size: 64, offset: 1984)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1130, file: !839, line: 479, baseType: !320, size: 64, offset: 2048)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1130, file: !839, line: 479, baseType: !320, size: 64, offset: 2112)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1130, file: !839, line: 479, baseType: !320, size: 64, offset: 2176)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1130, file: !839, line: 480, baseType: !320, size: 64, offset: 2240)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1130, file: !839, line: 480, baseType: !320, size: 64, offset: 2304)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1130, file: !839, line: 480, baseType: !320, size: 64, offset: 2368)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1130, file: !839, line: 480, baseType: !320, size: 64, offset: 2432)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1130, file: !839, line: 482, baseType: !1298, size: 2816, offset: 2496)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 2816, elements: !1299)
!1299 = !{!1300}
!1300 = !DISubrange(count: 44)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1130, file: !839, line: 488, baseType: !1302, size: 256, offset: 5312)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1303, line: 60, size: 256, elements: !1304)
!1303 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1304 = !{!1305}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1302, file: !1303, line: 61, baseType: !1306, size: 256)
!1306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !883, size: 256, elements: !1307)
!1307 = !{!1308}
!1308 = !DISubrange(count: 4)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1130, file: !839, line: 490, baseType: !1310, size: 64, offset: 5568)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !839, line: 490, flags: DIFlagFwdDecl)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1130, file: !839, line: 493, baseType: !1313, size: 896, offset: 5632)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1314, line: 53, baseType: !1315)
!1314 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1314, line: 13, size: 896, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320, !1323, !1324, !1331, !1332, !1352, !1353, !1354}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1315, file: !1314, line: 18, baseType: !536, size: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1315, file: !1314, line: 28, baseType: !885, size: 64, offset: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1315, file: !1314, line: 31, baseType: !879, size: 256, offset: 128)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1315, file: !1314, line: 32, baseType: !1321, size: 64, offset: 384)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1314, line: 32, flags: DIFlagFwdDecl)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1315, file: !1314, line: 37, baseType: !325, size: 16, offset: 448)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1315, file: !1314, line: 40, baseType: !1325, size: 192, offset: 512)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1326, line: 53, size: 192, elements: !1327)
!1326 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1327 = !{!1328, !1329, !1330}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1325, file: !1326, line: 54, baseType: !883, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1325, file: !1326, line: 55, baseType: !350, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1325, file: !1326, line: 59, baseType: !285, size: 128, offset: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1315, file: !1314, line: 41, baseType: !252, size: 64, offset: 704)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1315, file: !1314, line: 42, baseType: !1333, size: 64, offset: 768)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1335)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1336, line: 13, size: 896, elements: !1337)
!1336 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !{!1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1335, file: !1336, line: 14, baseType: !252, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1335, file: !1336, line: 15, baseType: !320, size: 64, offset: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1335, file: !1336, line: 17, baseType: !320, size: 64, offset: 128)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1335, file: !1336, line: 17, baseType: !320, size: 64, offset: 192)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1335, file: !1336, line: 19, baseType: !426, size: 64, offset: 256)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1335, file: !1336, line: 21, baseType: !426, size: 64, offset: 320)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1335, file: !1336, line: 22, baseType: !426, size: 64, offset: 384)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1335, file: !1336, line: 23, baseType: !426, size: 64, offset: 448)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1335, file: !1336, line: 24, baseType: !426, size: 64, offset: 512)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1335, file: !1336, line: 25, baseType: !426, size: 64, offset: 576)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1335, file: !1336, line: 26, baseType: !426, size: 64, offset: 640)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1335, file: !1336, line: 27, baseType: !426, size: 64, offset: 704)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1335, file: !1336, line: 28, baseType: !426, size: 64, offset: 768)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1335, file: !1336, line: 29, baseType: !426, size: 64, offset: 832)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1315, file: !1314, line: 44, baseType: !277, size: 32, offset: 832)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1315, file: !1314, line: 50, baseType: !971, size: 16, offset: 864)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1315, file: !1314, line: 51, baseType: !1355, size: 16, offset: 880)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !531, line: 18, baseType: !1356)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !533, line: 23, baseType: !1357)
!1357 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1130, file: !839, line: 495, baseType: !320, size: 64, offset: 6528)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1130, file: !839, line: 497, baseType: !1360, size: 64, offset: 6592)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !839, line: 381, size: 384, elements: !1362)
!1362 = !{!1363, !1364, !2455}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1361, file: !839, line: 382, baseType: !277, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1361, file: !839, line: 383, baseType: !1365, size: 128, offset: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !839, line: 376, size: 128, elements: !1366)
!1366 = !{!1367, !2453}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1365, file: !839, line: 377, baseType: !1368, size: 64)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1013, line: 640, size: 48640, elements: !1370)
!1370 = !{!1371, !1377, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1392, !1410, !1421, !1506, !1507, !1508, !1516, !1517, !1519, !1520, !1521, !1522, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1601, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1639, !1641, !1642, !1643, !1655, !1656, !1657, !1658, !1659, !1660, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1684, !1689, !1873, !1874, !1875, !1876, !1880, !1883, !1886, !1889, !1892, !1896, !1997, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2043, !2044, !2045, !2046, !2047, !2052, !2053, !2054, !2057, !2058, !2061, !2064, !2067, !2070, !2113, !2116, !2117, !2196, !2197, !2200, !2201, !2204, !2205, !2206, !2210, !2211, !2212, !2225, !2226, !2227, !2237, !2242, !2243, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1369, file: !1013, line: 646, baseType: !1372, size: 128)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1373, line: 56, size: 128, elements: !1374)
!1373 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1374 = !{!1375, !1376}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1372, file: !1373, line: 57, baseType: !320, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1372, file: !1373, line: 58, baseType: !530, size: 32, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1369, file: !1013, line: 649, baseType: !1378, size: 64, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !426)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1369, file: !1013, line: 657, baseType: !252, size: 64, offset: 192)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1369, file: !1013, line: 658, baseType: !272, size: 32, offset: 256)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1369, file: !1013, line: 660, baseType: !7, size: 32, offset: 288)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1369, file: !1013, line: 661, baseType: !7, size: 32, offset: 320)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1369, file: !1013, line: 684, baseType: !281, size: 32, offset: 352)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1369, file: !1013, line: 686, baseType: !281, size: 32, offset: 384)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1369, file: !1013, line: 687, baseType: !281, size: 32, offset: 416)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1369, file: !1013, line: 688, baseType: !281, size: 32, offset: 448)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1369, file: !1013, line: 689, baseType: !7, size: 32, offset: 480)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1369, file: !1013, line: 691, baseType: !1389, size: 64, offset: 512)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1391)
!1391 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1013, line: 691, flags: DIFlagFwdDecl)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1369, file: !1013, line: 692, baseType: !1393, size: 832, offset: 576)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1013, line: 451, size: 832, elements: !1394)
!1394 = !{!1395, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1393, file: !1013, line: 453, baseType: !1396, size: 128)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1013, line: 325, size: 128, elements: !1397)
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1396, file: !1013, line: 326, baseType: !320, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1396, file: !1013, line: 327, baseType: !530, size: 32, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1393, file: !1013, line: 454, baseType: !872, size: 192, align: 64, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1393, file: !1013, line: 455, baseType: !285, size: 128, offset: 320)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1393, file: !1013, line: 456, baseType: !7, size: 32, offset: 448)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1393, file: !1013, line: 458, baseType: !536, size: 64, offset: 512)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1393, file: !1013, line: 459, baseType: !536, size: 64, offset: 576)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1393, file: !1013, line: 460, baseType: !536, size: 64, offset: 640)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1393, file: !1013, line: 461, baseType: !536, size: 64, offset: 704)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1393, file: !1013, line: 463, baseType: !536, size: 64, offset: 768)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1393, file: !1013, line: 465, baseType: !1409, offset: 832)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1013, line: 415, elements: !364)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1369, file: !1013, line: 693, baseType: !1411, size: 384, offset: 1408)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1013, line: 489, size: 384, elements: !1412)
!1412 = !{!1413, !1414, !1415, !1416, !1417, !1418, !1419}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1411, file: !1013, line: 490, baseType: !285, size: 128)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1411, file: !1013, line: 491, baseType: !320, size: 64, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1411, file: !1013, line: 492, baseType: !320, size: 64, offset: 192)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1411, file: !1013, line: 493, baseType: !7, size: 32, offset: 256)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1411, file: !1013, line: 494, baseType: !325, size: 16, offset: 288)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1411, file: !1013, line: 495, baseType: !325, size: 16, offset: 304)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1411, file: !1013, line: 497, baseType: !1420, size: 64, offset: 320)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1369, file: !1013, line: 697, baseType: !1422, size: 1792, offset: 1792)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1013, line: 507, size: 1792, elements: !1423)
!1423 = !{!1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1503, !1504}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1422, file: !1013, line: 508, baseType: !872, size: 192, align: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1422, file: !1013, line: 515, baseType: !536, size: 64, offset: 192)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1422, file: !1013, line: 516, baseType: !536, size: 64, offset: 256)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1422, file: !1013, line: 517, baseType: !536, size: 64, offset: 320)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1422, file: !1013, line: 518, baseType: !536, size: 64, offset: 384)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1422, file: !1013, line: 519, baseType: !536, size: 64, offset: 448)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1422, file: !1013, line: 526, baseType: !889, size: 64, offset: 512)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1422, file: !1013, line: 527, baseType: !536, size: 64, offset: 576)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1422, file: !1013, line: 528, baseType: !7, size: 32, offset: 640)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1422, file: !1013, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1422, file: !1013, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1422, file: !1013, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1422, file: !1013, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1422, file: !1013, line: 563, baseType: !1438, size: 512, offset: 704)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1439)
!1439 = !{!1440, !1448, !1449, !1454, !1497, !1500, !1501, !1502}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1438, file: !20, line: 119, baseType: !1441, size: 256)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1442, line: 9, size: 256, elements: !1443)
!1442 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1443 = !{!1444, !1445}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1441, file: !1442, line: 10, baseType: !872, size: 192, align: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1441, file: !1442, line: 11, baseType: !1446, size: 64, offset: 192)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1447, line: 29, baseType: !889)
!1447 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1438, file: !20, line: 120, baseType: !1446, size: 64, offset: 256)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1438, file: !20, line: 121, baseType: !1450, size: 64, offset: 320)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!19, !1453}
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1438, file: !20, line: 122, baseType: !1455, size: 64, offset: 384)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1457)
!1457 = !{!1458, !1478, !1479, !1482, !1487, !1488, !1492, !1496}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1456, file: !20, line: 160, baseType: !1459, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1460, file: !20, line: 215, baseType: !892)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1460, file: !20, line: 216, baseType: !7, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1460, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1460, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1460, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1460, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1460, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1460, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1460, file: !20, line: 233, baseType: !1446, size: 64, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1460, file: !20, line: 234, baseType: !1453, size: 64, offset: 192)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1460, file: !20, line: 235, baseType: !1446, size: 64, offset: 256)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1460, file: !20, line: 236, baseType: !1453, size: 64, offset: 320)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1460, file: !20, line: 237, baseType: !1475, size: 4096, offset: 512)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1456, size: 4096, elements: !1476)
!1476 = !{!1477}
!1477 = !DISubrange(count: 8)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1456, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1456, file: !20, line: 162, baseType: !1480, size: 32, offset: 96)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !251, line: 27, baseType: !1481)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !424, line: 96, baseType: !281)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1456, file: !20, line: 163, baseType: !1483, size: 32, offset: 128)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !503, line: 276, baseType: !1484)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !503, line: 276, size: 32, elements: !1485)
!1485 = !{!1486}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1484, file: !503, line: 276, baseType: !507, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1456, file: !20, line: 164, baseType: !1453, size: 64, offset: 192)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1456, file: !20, line: 165, baseType: !1489, size: 128, offset: 256)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1442, line: 14, size: 128, elements: !1490)
!1490 = !{!1491}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1489, file: !1442, line: 15, baseType: !864, size: 128)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1456, file: !20, line: 166, baseType: !1493, size: 64, offset: 384)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!1446}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1456, file: !20, line: 167, baseType: !1446, size: 64, offset: 448)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1438, file: !20, line: 123, baseType: !1498, size: 8, offset: 448)
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !531, line: 17, baseType: !1499)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !533, line: 21, baseType: !542)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1438, file: !20, line: 124, baseType: !1498, size: 8, offset: 456)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1438, file: !20, line: 125, baseType: !1498, size: 8, offset: 464)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1438, file: !20, line: 126, baseType: !1498, size: 8, offset: 472)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1422, file: !1013, line: 572, baseType: !1438, size: 512, offset: 1216)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1422, file: !1013, line: 580, baseType: !1505, size: 64, offset: 1728)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1369, file: !1013, line: 721, baseType: !7, size: 32, offset: 3584)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1369, file: !1013, line: 722, baseType: !281, size: 32, offset: 3616)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1369, file: !1013, line: 723, baseType: !1509, size: 64, offset: 3648)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1511)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1512, line: 17, baseType: !1513)
!1512 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1512, line: 17, size: 64, elements: !1514)
!1514 = !{!1515}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1513, file: !1512, line: 17, baseType: !319, size: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1369, file: !1013, line: 724, baseType: !1511, size: 64, offset: 3712)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1369, file: !1013, line: 749, baseType: !1518, offset: 3776)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1013, line: 290, elements: !364)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1369, file: !1013, line: 751, baseType: !285, size: 128, offset: 3776)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1369, file: !1013, line: 757, baseType: !1126, size: 64, offset: 3904)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1369, file: !1013, line: 758, baseType: !1126, size: 64, offset: 3968)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1369, file: !1013, line: 761, baseType: !1523, size: 320, offset: 4032)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1303, line: 34, size: 320, elements: !1524)
!1524 = !{!1525, !1526}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1523, file: !1303, line: 35, baseType: !536, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1523, file: !1303, line: 36, baseType: !1527, size: 256, offset: 64)
!1527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1133, size: 256, elements: !1307)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1369, file: !1013, line: 766, baseType: !281, size: 32, offset: 4352)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1369, file: !1013, line: 767, baseType: !281, size: 32, offset: 4384)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1369, file: !1013, line: 768, baseType: !281, size: 32, offset: 4416)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1369, file: !1013, line: 770, baseType: !281, size: 32, offset: 4448)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1369, file: !1013, line: 772, baseType: !320, size: 64, offset: 4480)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1369, file: !1013, line: 775, baseType: !7, size: 32, offset: 4544)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1369, file: !1013, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1369, file: !1013, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1369, file: !1013, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1369, file: !1013, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1369, file: !1013, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1369, file: !1013, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1369, file: !1013, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1369, file: !1013, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1369, file: !1013, line: 831, baseType: !320, size: 64, offset: 4672)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1369, file: !1013, line: 833, baseType: !1544, size: 384, offset: 4736)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1545)
!1545 = !{!1546, !1551}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1544, file: !25, line: 26, baseType: !1547, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!426, !1550}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, scope: !1544, file: !25, line: 27, baseType: !1552, size: 320, offset: 64)
!1552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1544, file: !25, line: 27, size: 320, elements: !1553)
!1553 = !{!1554, !1564, !1591}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1552, file: !25, line: 36, baseType: !1555, size: 320)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1552, file: !25, line: 29, size: 320, elements: !1556)
!1556 = !{!1557, !1559, !1560, !1561, !1562, !1563}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1555, file: !25, line: 30, baseType: !1558, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1555, file: !25, line: 31, baseType: !530, size: 32, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1555, file: !25, line: 32, baseType: !530, size: 32, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1555, file: !25, line: 33, baseType: !530, size: 32, offset: 128)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1555, file: !25, line: 34, baseType: !536, size: 64, offset: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1555, file: !25, line: 35, baseType: !1558, size: 64, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1552, file: !25, line: 46, baseType: !1565, size: 192)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1552, file: !25, line: 38, size: 192, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1590}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1565, file: !25, line: 39, baseType: !1480, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1565, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, scope: !1565, file: !25, line: 41, baseType: !1570, size: 64, offset: 64)
!1570 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1565, file: !25, line: 41, size: 64, elements: !1571)
!1571 = !{!1572, !1580}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1570, file: !25, line: 42, baseType: !1573, size: 64)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1575, line: 7, size: 128, elements: !1576)
!1575 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1576 = !{!1577, !1579}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1574, file: !1575, line: 8, baseType: !1578, size: 64)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !424, line: 93, baseType: !646)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1574, file: !1575, line: 9, baseType: !646, size: 64, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1570, file: !25, line: 43, baseType: !1581, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1583, line: 7, size: 64, elements: !1584)
!1583 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1584 = !{!1585, !1589}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1582, file: !1583, line: 8, baseType: !1586, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1583, line: 5, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !531, line: 20, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !533, line: 26, baseType: !281)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1582, file: !1583, line: 9, baseType: !1587, size: 32, offset: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1565, file: !25, line: 45, baseType: !536, size: 64, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1552, file: !25, line: 54, baseType: !1592, size: 256)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1552, file: !25, line: 48, size: 256, elements: !1593)
!1593 = !{!1594, !1597, !1598, !1599, !1600}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1592, file: !25, line: 49, baseType: !1595, size: 64)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1592, file: !25, line: 50, baseType: !281, size: 32, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1592, file: !25, line: 51, baseType: !281, size: 32, offset: 96)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1592, file: !25, line: 52, baseType: !320, size: 64, offset: 128)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1592, file: !25, line: 53, baseType: !320, size: 64, offset: 192)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1369, file: !1013, line: 835, baseType: !1602, size: 32, offset: 5120)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !251, line: 22, baseType: !1603)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !424, line: 28, baseType: !281)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1369, file: !1013, line: 836, baseType: !1602, size: 32, offset: 5152)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1369, file: !1013, line: 840, baseType: !320, size: 64, offset: 5184)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1369, file: !1013, line: 849, baseType: !1368, size: 64, offset: 5248)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1369, file: !1013, line: 852, baseType: !1368, size: 64, offset: 5312)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1369, file: !1013, line: 857, baseType: !285, size: 128, offset: 5376)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1369, file: !1013, line: 858, baseType: !285, size: 128, offset: 5504)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1369, file: !1013, line: 859, baseType: !1368, size: 64, offset: 5632)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1369, file: !1013, line: 867, baseType: !285, size: 128, offset: 5696)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1369, file: !1013, line: 868, baseType: !285, size: 128, offset: 5824)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1369, file: !1013, line: 871, baseType: !1614, size: 64, offset: 5952)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1616)
!1616 = !{!1617, !1618, !1619, !1620, !1622, !1623, !1630, !1631}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1615, file: !53, line: 61, baseType: !272, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1615, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1615, file: !53, line: 63, baseType: !350, offset: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1615, file: !53, line: 65, baseType: !1621, size: 256, offset: 64)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !751, size: 256, elements: !1307)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1615, file: !53, line: 66, baseType: !751, size: 64, offset: 320)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1615, file: !53, line: 68, baseType: !1624, size: 128, offset: 384)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1625, line: 40, baseType: !1626)
!1625 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1625, line: 36, size: 128, elements: !1627)
!1627 = !{!1628, !1629}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1626, file: !1625, line: 37, baseType: !350)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1626, file: !1625, line: 38, baseType: !285, size: 128)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1615, file: !53, line: 69, baseType: !480, size: 128, align: 64, offset: 512)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1615, file: !53, line: 70, baseType: !1632, size: 128, offset: 640)
!1632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1633, size: 128, elements: !321)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1634)
!1634 = !{!1635, !1636}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1633, file: !53, line: 55, baseType: !281, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1633, file: !53, line: 56, baseType: !1637, size: 64, offset: 64)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1369, file: !1013, line: 872, baseType: !1640, size: 512, offset: 6016)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !755, size: 512, elements: !1307)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1369, file: !1013, line: 873, baseType: !285, size: 128, offset: 6528)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1369, file: !1013, line: 874, baseType: !285, size: 128, offset: 6656)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1369, file: !1013, line: 876, baseType: !1644, size: 64, offset: 6784)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1646, line: 26, size: 192, elements: !1647)
!1646 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1647 = !{!1648, !1649}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1645, file: !1646, line: 27, baseType: !7, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1645, file: !1646, line: 28, baseType: !1650, size: 128, offset: 64)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1651, line: 43, size: 128, elements: !1652)
!1651 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1652 = !{!1653, !1654}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1650, file: !1651, line: 44, baseType: !892)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1650, file: !1651, line: 45, baseType: !285, size: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1369, file: !1013, line: 879, baseType: !821, size: 64, offset: 6848)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1369, file: !1013, line: 882, baseType: !821, size: 64, offset: 6912)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1369, file: !1013, line: 884, baseType: !536, size: 64, offset: 6976)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1369, file: !1013, line: 885, baseType: !536, size: 64, offset: 7040)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1369, file: !1013, line: 890, baseType: !536, size: 64, offset: 7104)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1369, file: !1013, line: 891, baseType: !1661, size: 128, offset: 7168)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1013, line: 242, size: 128, elements: !1662)
!1662 = !{!1663, !1664, !1665}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1661, file: !1013, line: 244, baseType: !536, size: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1661, file: !1013, line: 245, baseType: !536, size: 64, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1661, file: !1013, line: 246, baseType: !892, offset: 128)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1369, file: !1013, line: 900, baseType: !320, size: 64, offset: 7296)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1369, file: !1013, line: 901, baseType: !320, size: 64, offset: 7360)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1369, file: !1013, line: 904, baseType: !536, size: 64, offset: 7424)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1369, file: !1013, line: 907, baseType: !536, size: 64, offset: 7488)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1369, file: !1013, line: 910, baseType: !320, size: 64, offset: 7552)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1369, file: !1013, line: 911, baseType: !320, size: 64, offset: 7616)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1369, file: !1013, line: 914, baseType: !1673, size: 640, offset: 7680)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1674, line: 123, size: 640, elements: !1675)
!1674 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1675 = !{!1676, !1682, !1683}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1673, file: !1674, line: 124, baseType: !1677, size: 576)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1678, size: 576, elements: !392)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1674, line: 108, size: 192, elements: !1679)
!1679 = !{!1680, !1681}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1678, file: !1674, line: 109, baseType: !536, size: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1678, file: !1674, line: 110, baseType: !1489, size: 128, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1673, file: !1674, line: 125, baseType: !7, size: 32, offset: 576)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1673, file: !1674, line: 126, baseType: !7, size: 32, offset: 608)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1369, file: !1013, line: 917, baseType: !1685, size: 192, offset: 8320)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1674, line: 134, size: 192, elements: !1686)
!1686 = !{!1687, !1688}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1685, file: !1674, line: 135, baseType: !480, size: 128, align: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1685, file: !1674, line: 136, baseType: !7, size: 32, offset: 128)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1369, file: !1013, line: 923, baseType: !1690, size: 64, offset: 8512)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1692)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1693, line: 111, size: 1280, elements: !1694)
!1693 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1694 = !{!1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1714, !1715, !1716, !1717, !1718, !1719, !1826, !1827, !1828, !1829, !1855, !1858, !1868}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1692, file: !1693, line: 112, baseType: !277, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1692, file: !1693, line: 120, baseType: !550, size: 32, offset: 32)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1692, file: !1693, line: 121, baseType: !558, size: 32, offset: 64)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1692, file: !1693, line: 122, baseType: !550, size: 32, offset: 96)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1692, file: !1693, line: 123, baseType: !558, size: 32, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1692, file: !1693, line: 124, baseType: !550, size: 32, offset: 160)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1692, file: !1693, line: 125, baseType: !558, size: 32, offset: 192)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1692, file: !1693, line: 126, baseType: !550, size: 32, offset: 224)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1692, file: !1693, line: 127, baseType: !558, size: 32, offset: 256)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1692, file: !1693, line: 128, baseType: !7, size: 32, offset: 288)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1692, file: !1693, line: 129, baseType: !1706, size: 64, offset: 320)
!1706 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1707, line: 26, baseType: !1708)
!1707 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1707, line: 24, size: 64, elements: !1709)
!1709 = !{!1710}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1708, file: !1707, line: 25, baseType: !1711, size: 64)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 64, elements: !1712)
!1712 = !{!1713}
!1713 = !DISubrange(count: 2)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1692, file: !1693, line: 130, baseType: !1706, size: 64, offset: 384)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1692, file: !1693, line: 131, baseType: !1706, size: 64, offset: 448)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1692, file: !1693, line: 132, baseType: !1706, size: 64, offset: 512)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1692, file: !1693, line: 133, baseType: !1706, size: 64, offset: 576)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1692, file: !1693, line: 135, baseType: !542, size: 8, offset: 640)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1692, file: !1693, line: 137, baseType: !1720, size: 64, offset: 704)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1722, line: 189, size: 1664, elements: !1723)
!1722 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1723 = !{!1724, !1725, !1728, !1733, !1734, !1737, !1738, !1743, !1744, !1745, !1746, !1748, !1749, !1750, !1751, !1752, !1790, !1811}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1721, file: !1722, line: 190, baseType: !272, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1721, file: !1722, line: 191, baseType: !1726, size: 32, offset: 32)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1722, line: 28, baseType: !1727)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !251, line: 98, baseType: !1587)
!1728 = !DIDerivedType(tag: DW_TAG_member, scope: !1721, file: !1722, line: 192, baseType: !1729, size: 192, offset: 64)
!1729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1721, file: !1722, line: 192, size: 192, elements: !1730)
!1730 = !{!1731, !1732}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1729, file: !1722, line: 193, baseType: !285, size: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1729, file: !1722, line: 194, baseType: !872, size: 192, align: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1721, file: !1722, line: 199, baseType: !879, size: 256, offset: 256)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1721, file: !1722, line: 200, baseType: !1735, size: 64, offset: 512)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1722, line: 200, flags: DIFlagFwdDecl)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1721, file: !1722, line: 201, baseType: !252, size: 64, offset: 576)
!1738 = !DIDerivedType(tag: DW_TAG_member, scope: !1721, file: !1722, line: 202, baseType: !1739, size: 64, offset: 640)
!1739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1721, file: !1722, line: 202, size: 64, elements: !1740)
!1740 = !{!1741, !1742}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1739, file: !1722, line: 203, baseType: !652, size: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1739, file: !1722, line: 204, baseType: !652, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1721, file: !1722, line: 206, baseType: !652, size: 64, offset: 704)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1721, file: !1722, line: 207, baseType: !550, size: 32, offset: 768)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1721, file: !1722, line: 208, baseType: !558, size: 32, offset: 800)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1721, file: !1722, line: 209, baseType: !1747, size: 32, offset: 832)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1722, line: 31, baseType: !672)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1721, file: !1722, line: 210, baseType: !325, size: 16, offset: 864)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1721, file: !1722, line: 211, baseType: !325, size: 16, offset: 880)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1721, file: !1722, line: 215, baseType: !1357, size: 16, offset: 896)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1721, file: !1722, line: 222, baseType: !320, size: 64, offset: 960)
!1752 = !DIDerivedType(tag: DW_TAG_member, scope: !1721, file: !1722, line: 239, baseType: !1753, size: 320, offset: 1024)
!1753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1721, file: !1722, line: 239, size: 320, elements: !1754)
!1754 = !{!1755, !1782}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1753, file: !1722, line: 240, baseType: !1756, size: 320)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1722, line: 108, size: 320, elements: !1757)
!1757 = !{!1758, !1759, !1771, !1774, !1781}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1756, file: !1722, line: 110, baseType: !320, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, scope: !1756, file: !1722, line: 111, baseType: !1760, size: 64, offset: 64)
!1760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1756, file: !1722, line: 111, size: 64, elements: !1761)
!1761 = !{!1762, !1770}
!1762 = !DIDerivedType(tag: DW_TAG_member, scope: !1760, file: !1722, line: 112, baseType: !1763, size: 64)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1760, file: !1722, line: 112, size: 64, elements: !1764)
!1764 = !{!1765, !1766}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1763, file: !1722, line: 114, baseType: !971, size: 16)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1763, file: !1722, line: 115, baseType: !1767, size: 48, offset: 16)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 48, elements: !1768)
!1768 = !{!1769}
!1769 = !DISubrange(count: 6)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1760, file: !1722, line: 121, baseType: !320, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1756, file: !1722, line: 123, baseType: !1772, size: 64, offset: 128)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1722, line: 96, flags: DIFlagFwdDecl)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1756, file: !1722, line: 124, baseType: !1775, size: 64, offset: 192)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1722, line: 102, size: 192, elements: !1777)
!1777 = !{!1778, !1779, !1780}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1776, file: !1722, line: 103, baseType: !480, size: 128, align: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1776, file: !1722, line: 104, baseType: !272, size: 32, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1776, file: !1722, line: 105, baseType: !299, size: 8, offset: 160)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1756, file: !1722, line: 125, baseType: !309, size: 64, offset: 256)
!1782 = !DIDerivedType(tag: DW_TAG_member, scope: !1753, file: !1722, line: 241, baseType: !1783, size: 320)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !1722, line: 241, size: 320, elements: !1784)
!1784 = !{!1785, !1786, !1787, !1788, !1789}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1783, file: !1722, line: 242, baseType: !320, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1783, file: !1722, line: 243, baseType: !320, size: 64, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1783, file: !1722, line: 244, baseType: !1772, size: 64, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1783, file: !1722, line: 245, baseType: !1775, size: 64, offset: 192)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1783, file: !1722, line: 246, baseType: !391, size: 64, offset: 256)
!1790 = !DIDerivedType(tag: DW_TAG_member, scope: !1721, file: !1722, line: 254, baseType: !1791, size: 256, offset: 1344)
!1791 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1721, file: !1722, line: 254, size: 256, elements: !1792)
!1792 = !{!1793, !1799}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1791, file: !1722, line: 255, baseType: !1794, size: 256)
!1794 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1722, line: 128, size: 256, elements: !1795)
!1795 = !{!1796, !1797}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1794, file: !1722, line: 129, baseType: !252, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1794, file: !1722, line: 130, baseType: !1798, size: 256)
!1798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !252, size: 256, elements: !1307)
!1799 = !DIDerivedType(tag: DW_TAG_member, scope: !1791, file: !1722, line: 256, baseType: !1800, size: 256)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1791, file: !1722, line: 256, size: 256, elements: !1801)
!1801 = !{!1802, !1803}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1800, file: !1722, line: 258, baseType: !285, size: 128)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1800, file: !1722, line: 259, baseType: !1804, size: 128, offset: 128)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1805, line: 22, size: 128, elements: !1806)
!1805 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1806 = !{!1807, !1810}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1804, file: !1805, line: 23, baseType: !1808, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1805, line: 23, flags: DIFlagFwdDecl)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1804, file: !1805, line: 24, baseType: !320, size: 64, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1721, file: !1722, line: 274, baseType: !1812, size: 64, offset: 1600)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1722, line: 170, size: 192, elements: !1814)
!1814 = !{!1815, !1824, !1825}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1813, file: !1722, line: 171, baseType: !1816, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1722, line: 165, baseType: !1817)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!281, !1720, !1820, !1822, !1720}
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1773)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1794)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1813, file: !1722, line: 172, baseType: !1720, size: 64, offset: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1813, file: !1722, line: 173, baseType: !1772, size: 64, offset: 128)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1692, file: !1693, line: 138, baseType: !1720, size: 64, offset: 768)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1692, file: !1693, line: 139, baseType: !1720, size: 64, offset: 832)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1692, file: !1693, line: 140, baseType: !1720, size: 64, offset: 896)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1692, file: !1693, line: 145, baseType: !1830, size: 64, offset: 960)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1832, line: 13, size: 896, elements: !1833)
!1832 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1833 = !{!1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1831, file: !1832, line: 14, baseType: !272, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1831, file: !1832, line: 15, baseType: !277, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1831, file: !1832, line: 16, baseType: !277, size: 32, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1831, file: !1832, line: 21, baseType: !883, size: 64, offset: 128)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1831, file: !1832, line: 27, baseType: !320, size: 64, offset: 192)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1831, file: !1832, line: 28, baseType: !320, size: 64, offset: 256)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1831, file: !1832, line: 29, baseType: !883, size: 64, offset: 320)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1831, file: !1832, line: 32, baseType: !755, size: 128, offset: 384)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1831, file: !1832, line: 33, baseType: !550, size: 32, offset: 512)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1831, file: !1832, line: 37, baseType: !883, size: 64, offset: 576)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1831, file: !1832, line: 44, baseType: !1845, size: 256, offset: 640)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1846, line: 15, size: 256, elements: !1847)
!1846 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1847 = !{!1848, !1849, !1850, !1851, !1852, !1853, !1854}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1845, file: !1846, line: 16, baseType: !892)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1845, file: !1846, line: 18, baseType: !281, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1845, file: !1846, line: 19, baseType: !281, size: 32, offset: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1845, file: !1846, line: 20, baseType: !281, size: 32, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1845, file: !1846, line: 21, baseType: !281, size: 32, offset: 96)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1845, file: !1846, line: 22, baseType: !320, size: 64, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1845, file: !1846, line: 23, baseType: !320, size: 64, offset: 192)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1692, file: !1693, line: 146, baseType: !1856, size: 64, offset: 1024)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !551, line: 18, flags: DIFlagFwdDecl)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1692, file: !1693, line: 147, baseType: !1859, size: 64, offset: 1088)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1693, line: 25, size: 64, elements: !1861)
!1861 = !{!1862, !1863, !1864}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1860, file: !1693, line: 26, baseType: !277, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1860, file: !1693, line: 27, baseType: !281, size: 32, offset: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1860, file: !1693, line: 28, baseType: !1865, offset: 64)
!1865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !558, elements: !1866)
!1866 = !{!1867}
!1867 = !DISubrange(count: 0)
!1868 = !DIDerivedType(tag: DW_TAG_member, scope: !1692, file: !1693, line: 149, baseType: !1869, size: 128, offset: 1152)
!1869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1692, file: !1693, line: 149, size: 128, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1869, file: !1693, line: 150, baseType: !281, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1869, file: !1693, line: 151, baseType: !480, size: 128, align: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1369, file: !1013, line: 926, baseType: !1690, size: 64, offset: 8576)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1369, file: !1013, line: 929, baseType: !1690, size: 64, offset: 8640)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1369, file: !1013, line: 933, baseType: !1720, size: 64, offset: 8704)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1369, file: !1013, line: 943, baseType: !1877, size: 128, offset: 8768)
!1877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 128, elements: !1878)
!1878 = !{!1879}
!1879 = !DISubrange(count: 16)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1369, file: !1013, line: 945, baseType: !1881, size: 64, offset: 8896)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1013, line: 49, flags: DIFlagFwdDecl)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1369, file: !1013, line: 956, baseType: !1884, size: 64, offset: 8960)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1013, line: 45, flags: DIFlagFwdDecl)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1369, file: !1013, line: 959, baseType: !1887, size: 64, offset: 9024)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1013, line: 959, flags: DIFlagFwdDecl)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1369, file: !1013, line: 962, baseType: !1890, size: 64, offset: 9088)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!1891 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1013, line: 66, flags: DIFlagFwdDecl)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1369, file: !1013, line: 966, baseType: !1893, size: 64, offset: 9152)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1895, line: 35, flags: DIFlagFwdDecl)
!1895 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1369, file: !1013, line: 969, baseType: !1897, size: 64, offset: 9216)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1899, line: 82, size: 7296, elements: !1900)
!1899 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1900 = !{!1901, !1902, !1903, !1904, !1905, !1906, !1907, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1936, !1945, !1946, !1948, !1949, !1950, !1953, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1983, !1984, !1991, !1992, !1993, !1994, !1995, !1996}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1898, file: !1899, line: 83, baseType: !272, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1898, file: !1899, line: 84, baseType: !277, size: 32, offset: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1898, file: !1899, line: 85, baseType: !281, size: 32, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1898, file: !1899, line: 86, baseType: !285, size: 128, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1898, file: !1899, line: 88, baseType: !1624, size: 128, offset: 256)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1898, file: !1899, line: 91, baseType: !1368, size: 64, offset: 384)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1898, file: !1899, line: 94, baseType: !1908, size: 192, offset: 448)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1909, line: 30, size: 192, elements: !1910)
!1909 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1910 = !{!1911, !1912}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1908, file: !1909, line: 31, baseType: !285, size: 128)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1908, file: !1909, line: 32, baseType: !1913, size: 64, offset: 128)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1914, line: 25, baseType: !1915)
!1914 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1914, line: 23, size: 64, elements: !1916)
!1916 = !{!1917}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1915, file: !1914, line: 24, baseType: !319, size: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1898, file: !1899, line: 97, baseType: !751, size: 64, offset: 640)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1898, file: !1899, line: 100, baseType: !281, size: 32, offset: 704)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1898, file: !1899, line: 106, baseType: !281, size: 32, offset: 736)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1898, file: !1899, line: 107, baseType: !1368, size: 64, offset: 768)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1898, file: !1899, line: 110, baseType: !281, size: 32, offset: 832)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1898, file: !1899, line: 111, baseType: !7, size: 32, offset: 864)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1898, file: !1899, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1898, file: !1899, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1898, file: !1899, line: 128, baseType: !281, size: 32, offset: 928)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1898, file: !1899, line: 129, baseType: !285, size: 128, offset: 960)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1898, file: !1899, line: 132, baseType: !1438, size: 512, offset: 1088)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1898, file: !1899, line: 133, baseType: !1446, size: 64, offset: 1600)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1898, file: !1899, line: 140, baseType: !1931, size: 256, offset: 1664)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1932, size: 256, elements: !1712)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1899, line: 38, size: 128, elements: !1933)
!1933 = !{!1934, !1935}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1932, file: !1899, line: 39, baseType: !536, size: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1932, file: !1899, line: 40, baseType: !536, size: 64, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1898, file: !1899, line: 146, baseType: !1937, size: 192, offset: 1920)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1899, line: 66, size: 192, elements: !1938)
!1938 = !{!1939}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1937, file: !1899, line: 67, baseType: !1940, size: 192)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1899, line: 47, size: 192, elements: !1941)
!1941 = !{!1942, !1943, !1944}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1940, file: !1899, line: 48, baseType: !885, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1940, file: !1899, line: 49, baseType: !885, size: 64, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1940, file: !1899, line: 50, baseType: !885, size: 64, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1898, file: !1899, line: 150, baseType: !1673, size: 640, offset: 2112)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1898, file: !1899, line: 153, baseType: !1947, size: 256, offset: 2752)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1614, size: 256, elements: !1307)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1898, file: !1899, line: 159, baseType: !1614, size: 64, offset: 3008)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1898, file: !1899, line: 162, baseType: !281, size: 32, offset: 3072)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1898, file: !1899, line: 164, baseType: !1951, size: 64, offset: 3136)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1899, line: 164, flags: DIFlagFwdDecl)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1898, file: !1899, line: 175, baseType: !1954, size: 32, offset: 3200)
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !503, line: 805, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !503, line: 798, size: 32, elements: !1956)
!1956 = !{!1957, !1958}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1955, file: !503, line: 803, baseType: !502, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1955, file: !503, line: 804, baseType: !350, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1898, file: !1899, line: 176, baseType: !536, size: 64, offset: 3264)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1898, file: !1899, line: 176, baseType: !536, size: 64, offset: 3328)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1898, file: !1899, line: 176, baseType: !536, size: 64, offset: 3392)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1898, file: !1899, line: 176, baseType: !536, size: 64, offset: 3456)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1898, file: !1899, line: 177, baseType: !536, size: 64, offset: 3520)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1898, file: !1899, line: 178, baseType: !536, size: 64, offset: 3584)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1898, file: !1899, line: 179, baseType: !1661, size: 128, offset: 3648)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1898, file: !1899, line: 180, baseType: !320, size: 64, offset: 3776)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1898, file: !1899, line: 180, baseType: !320, size: 64, offset: 3840)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1898, file: !1899, line: 180, baseType: !320, size: 64, offset: 3904)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1898, file: !1899, line: 180, baseType: !320, size: 64, offset: 3968)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1898, file: !1899, line: 181, baseType: !320, size: 64, offset: 4032)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1898, file: !1899, line: 181, baseType: !320, size: 64, offset: 4096)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1898, file: !1899, line: 181, baseType: !320, size: 64, offset: 4160)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1898, file: !1899, line: 181, baseType: !320, size: 64, offset: 4224)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1898, file: !1899, line: 182, baseType: !320, size: 64, offset: 4288)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1898, file: !1899, line: 182, baseType: !320, size: 64, offset: 4352)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1898, file: !1899, line: 182, baseType: !320, size: 64, offset: 4416)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1898, file: !1899, line: 182, baseType: !320, size: 64, offset: 4480)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1898, file: !1899, line: 183, baseType: !320, size: 64, offset: 4544)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1898, file: !1899, line: 183, baseType: !320, size: 64, offset: 4608)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1898, file: !1899, line: 184, baseType: !1981, offset: 4672)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1982, line: 12, elements: !364)
!1982 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1898, file: !1899, line: 192, baseType: !538, size: 64, offset: 4672)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1898, file: !1899, line: 203, baseType: !1985, size: 2048, offset: 4736)
!1985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1986, size: 2048, elements: !1878)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1987, line: 43, size: 128, elements: !1988)
!1987 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1988 = !{!1989, !1990}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1986, file: !1987, line: 44, baseType: !439, size: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1986, file: !1987, line: 45, baseType: !439, size: 64, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1898, file: !1899, line: 220, baseType: !299, size: 8, offset: 6784)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1898, file: !1899, line: 221, baseType: !1357, size: 16, offset: 6800)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1898, file: !1899, line: 222, baseType: !1357, size: 16, offset: 6816)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1898, file: !1899, line: 224, baseType: !1126, size: 64, offset: 6848)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1898, file: !1899, line: 227, baseType: !1325, size: 192, offset: 6912)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1898, file: !1899, line: 233, baseType: !1325, size: 192, offset: 7104)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1369, file: !1013, line: 970, baseType: !1998, size: 64, offset: 9280)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1899, line: 20, size: 16576, elements: !2000)
!2000 = !{!2001, !2002, !2003, !2004}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1999, file: !1899, line: 21, baseType: !350)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1999, file: !1899, line: 22, baseType: !272, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1999, file: !1899, line: 23, baseType: !1624, size: 128, offset: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1999, file: !1899, line: 24, baseType: !2005, size: 16384, offset: 192)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2006, size: 16384, elements: !396)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1909, line: 49, size: 256, elements: !2007)
!2007 = !{!2008}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2006, file: !1909, line: 50, baseType: !2009, size: 256)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1909, line: 35, size: 256, elements: !2010)
!2010 = !{!2011, !2018, !2019, !2025}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2009, file: !1909, line: 37, baseType: !2012, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2013, line: 19, baseType: !2014)
!2013 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2013, line: 18, baseType: !2016)
!2016 = !DISubroutineType(types: !2017)
!2017 = !{null, !281}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2009, file: !1909, line: 38, baseType: !320, size: 64, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2009, file: !1909, line: 44, baseType: !2020, size: 64, offset: 128)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2013, line: 22, baseType: !2021)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2013, line: 21, baseType: !2023)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{null}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2009, file: !1909, line: 46, baseType: !1913, size: 64, offset: 192)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1369, file: !1013, line: 971, baseType: !1913, size: 64, offset: 9344)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1369, file: !1013, line: 972, baseType: !1913, size: 64, offset: 9408)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1369, file: !1013, line: 974, baseType: !1913, size: 64, offset: 9472)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1369, file: !1013, line: 975, baseType: !1908, size: 192, offset: 9536)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1369, file: !1013, line: 976, baseType: !320, size: 64, offset: 9728)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1369, file: !1013, line: 977, baseType: !437, size: 64, offset: 9792)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1369, file: !1013, line: 978, baseType: !7, size: 32, offset: 9856)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1369, file: !1013, line: 980, baseType: !483, size: 64, offset: 9920)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1369, file: !1013, line: 989, baseType: !2035, size: 128, offset: 9984)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2036, line: 35, size: 128, elements: !2037)
!2036 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2037 = !{!2038, !2039, !2040}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2035, file: !2036, line: 36, baseType: !281, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2035, file: !2036, line: 37, baseType: !277, size: 32, offset: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2035, file: !2036, line: 38, baseType: !2041, size: 64, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2036, line: 23, flags: DIFlagFwdDecl)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1369, file: !1013, line: 992, baseType: !536, size: 64, offset: 10112)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1369, file: !1013, line: 993, baseType: !536, size: 64, offset: 10176)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1369, file: !1013, line: 996, baseType: !350, offset: 10240)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1369, file: !1013, line: 999, baseType: !892, offset: 10240)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1369, file: !1013, line: 1001, baseType: !2048, size: 64, offset: 10240)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1013, line: 636, size: 64, elements: !2049)
!2049 = !{!2050}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2048, file: !1013, line: 637, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1369, file: !1013, line: 1005, baseType: !864, size: 128, offset: 10304)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1369, file: !1013, line: 1007, baseType: !1368, size: 64, offset: 10432)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1369, file: !1013, line: 1009, baseType: !2055, size: 64, offset: 10496)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1013, line: 1009, flags: DIFlagFwdDecl)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1369, file: !1013, line: 1043, baseType: !252, size: 64, offset: 10560)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1369, file: !1013, line: 1046, baseType: !2059, size: 64, offset: 10624)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1013, line: 41, flags: DIFlagFwdDecl)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1369, file: !1013, line: 1050, baseType: !2062, size: 64, offset: 10688)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1013, line: 42, flags: DIFlagFwdDecl)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1369, file: !1013, line: 1054, baseType: !2065, size: 64, offset: 10752)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2066 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1013, line: 55, flags: DIFlagFwdDecl)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1369, file: !1013, line: 1056, baseType: !2068, size: 64, offset: 10816)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1013, line: 40, flags: DIFlagFwdDecl)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1369, file: !1013, line: 1058, baseType: !2071, size: 64, offset: 10880)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2073, line: 99, size: 704, elements: !2074)
!2073 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2074 = !{!2075, !2076, !2077, !2078, !2079, !2080, !2081, !2100, !2101}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2072, file: !2073, line: 100, baseType: !883, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2072, file: !2073, line: 101, baseType: !277, size: 32, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2072, file: !2073, line: 102, baseType: !277, size: 32, offset: 96)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2072, file: !2073, line: 105, baseType: !350, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2072, file: !2073, line: 107, baseType: !325, size: 16, offset: 128)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2072, file: !2073, line: 109, baseType: !855, size: 128, offset: 192)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2072, file: !2073, line: 110, baseType: !2082, size: 64, offset: 320)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2073, line: 73, size: 448, elements: !2084)
!2084 = !{!2085, !2088, !2089, !2094, !2099}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2083, file: !2073, line: 74, baseType: !2086, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2073, line: 74, flags: DIFlagFwdDecl)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2083, file: !2073, line: 75, baseType: !2071, size: 64, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, scope: !2083, file: !2073, line: 83, baseType: !2090, size: 128, offset: 128)
!2090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2083, file: !2073, line: 83, size: 128, elements: !2091)
!2091 = !{!2092, !2093}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2090, file: !2073, line: 84, baseType: !285, size: 128)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2090, file: !2073, line: 85, baseType: !1087, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, scope: !2083, file: !2073, line: 87, baseType: !2095, size: 128, offset: 256)
!2095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2083, file: !2073, line: 87, size: 128, elements: !2096)
!2096 = !{!2097, !2098}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2095, file: !2073, line: 88, baseType: !755, size: 128)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2095, file: !2073, line: 89, baseType: !480, size: 128, align: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2083, file: !2073, line: 92, baseType: !7, size: 32, offset: 384)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2072, file: !2073, line: 111, baseType: !751, size: 64, offset: 384)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2072, file: !2073, line: 113, baseType: !2102, size: 256, offset: 448)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2103, line: 102, size: 256, elements: !2104)
!2103 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2104 = !{!2105, !2106, !2107}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2102, file: !2103, line: 103, baseType: !883, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2102, file: !2103, line: 104, baseType: !285, size: 128, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2102, file: !2103, line: 105, baseType: !2108, size: 64, offset: 192)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2103, line: 21, baseType: !2109)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2110 = !DISubroutineType(types: !2111)
!2111 = !{null, !2112}
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1369, file: !1013, line: 1061, baseType: !2114, size: 64, offset: 10944)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!2115 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1013, line: 43, flags: DIFlagFwdDecl)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1369, file: !1013, line: 1064, baseType: !320, size: 64, offset: 11008)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1369, file: !1013, line: 1065, baseType: !2118, size: 64, offset: 11072)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1909, line: 14, baseType: !2120)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1909, line: 12, size: 384, elements: !2121)
!2121 = !{!2122}
!2122 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !1909, line: 13, baseType: !2123, size: 384)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2120, file: !1909, line: 13, size: 384, elements: !2124)
!2124 = !{!2125, !2126, !2127, !2128}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2123, file: !1909, line: 13, baseType: !281, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2123, file: !1909, line: 13, baseType: !281, size: 32, offset: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2123, file: !1909, line: 13, baseType: !281, size: 32, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2123, file: !1909, line: 13, baseType: !2129, size: 256, offset: 128)
!2129 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2130, line: 32, size: 256, elements: !2131)
!2130 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2131 = !{!2132, !2137, !2150, !2156, !2165, !2185, !2190}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2129, file: !2130, line: 37, baseType: !2133, size: 64)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2129, file: !2130, line: 34, size: 64, elements: !2134)
!2134 = !{!2135, !2136}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2133, file: !2130, line: 35, baseType: !1603, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2133, file: !2130, line: 36, baseType: !556, size: 32, offset: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2129, file: !2130, line: 45, baseType: !2138, size: 192)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2129, file: !2130, line: 40, size: 192, elements: !2139)
!2139 = !{!2140, !2142, !2143, !2149}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2138, file: !2130, line: 41, baseType: !2141, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !424, line: 95, baseType: !281)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2138, file: !2130, line: 42, baseType: !281, size: 32, offset: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2138, file: !2130, line: 43, baseType: !2144, size: 64, offset: 64)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2130, line: 11, baseType: !2145)
!2145 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2130, line: 8, size: 64, elements: !2146)
!2146 = !{!2147, !2148}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2145, file: !2130, line: 9, baseType: !281, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2145, file: !2130, line: 10, baseType: !252, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2138, file: !2130, line: 44, baseType: !281, size: 32, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2129, file: !2130, line: 52, baseType: !2151, size: 128)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2129, file: !2130, line: 48, size: 128, elements: !2152)
!2152 = !{!2153, !2154, !2155}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2151, file: !2130, line: 49, baseType: !1603, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2151, file: !2130, line: 50, baseType: !556, size: 32, offset: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2151, file: !2130, line: 51, baseType: !2144, size: 64, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2129, file: !2130, line: 61, baseType: !2157, size: 256)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2129, file: !2130, line: 55, size: 256, elements: !2158)
!2158 = !{!2159, !2160, !2161, !2162, !2164}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2157, file: !2130, line: 56, baseType: !1603, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2157, file: !2130, line: 57, baseType: !556, size: 32, offset: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2157, file: !2130, line: 58, baseType: !281, size: 32, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2157, file: !2130, line: 59, baseType: !2163, size: 64, offset: 128)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !424, line: 94, baseType: !425)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2157, file: !2130, line: 60, baseType: !2163, size: 64, offset: 192)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2129, file: !2130, line: 95, baseType: !2166, size: 256)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2129, file: !2130, line: 64, size: 256, elements: !2167)
!2167 = !{!2168, !2169}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2166, file: !2130, line: 65, baseType: !252, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, scope: !2166, file: !2130, line: 77, baseType: !2170, size: 192, offset: 64)
!2170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2166, file: !2130, line: 77, size: 192, elements: !2171)
!2171 = !{!2172, !2173, !2180}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2170, file: !2130, line: 82, baseType: !1357, size: 16)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2170, file: !2130, line: 88, baseType: !2174, size: 192)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2170, file: !2130, line: 84, size: 192, elements: !2175)
!2175 = !{!2176, !2178, !2179}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2174, file: !2130, line: 85, baseType: !2177, size: 64)
!2177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 64, elements: !1476)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2174, file: !2130, line: 86, baseType: !252, size: 64, offset: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2174, file: !2130, line: 87, baseType: !252, size: 64, offset: 128)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2170, file: !2130, line: 93, baseType: !2181, size: 96)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2170, file: !2130, line: 90, size: 96, elements: !2182)
!2182 = !{!2183, !2184}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2181, file: !2130, line: 91, baseType: !2177, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2181, file: !2130, line: 92, baseType: !532, size: 32, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2129, file: !2130, line: 101, baseType: !2186, size: 128)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2129, file: !2130, line: 98, size: 128, elements: !2187)
!2187 = !{!2188, !2189}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2186, file: !2130, line: 99, baseType: !426, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2186, file: !2130, line: 100, baseType: !281, size: 32, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2129, file: !2130, line: 108, baseType: !2191, size: 128)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2129, file: !2130, line: 104, size: 128, elements: !2192)
!2192 = !{!2193, !2194, !2195}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2191, file: !2130, line: 105, baseType: !252, size: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2191, file: !2130, line: 106, baseType: !281, size: 32, offset: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2191, file: !2130, line: 107, baseType: !7, size: 32, offset: 96)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1369, file: !1013, line: 1067, baseType: !1981, offset: 11136)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1369, file: !1013, line: 1099, baseType: !2198, size: 64, offset: 11136)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1013, line: 56, flags: DIFlagFwdDecl)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1369, file: !1013, line: 1103, baseType: !285, size: 128, offset: 11200)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1369, file: !1013, line: 1104, baseType: !2202, size: 64, offset: 11328)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1013, line: 46, flags: DIFlagFwdDecl)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1369, file: !1013, line: 1105, baseType: !1325, size: 192, offset: 11392)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1369, file: !1013, line: 1106, baseType: !7, size: 32, offset: 11584)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1369, file: !1013, line: 1109, baseType: !2207, size: 128, offset: 11648)
!2207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2208, size: 128, elements: !1712)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64)
!2209 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1013, line: 51, flags: DIFlagFwdDecl)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1369, file: !1013, line: 1110, baseType: !1325, size: 192, offset: 11776)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1369, file: !1013, line: 1111, baseType: !285, size: 128, offset: 11968)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1369, file: !1013, line: 1173, baseType: !2213, size: 64, offset: 12096)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2215, line: 62, size: 256, align: 256, elements: !2216)
!2215 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2216 = !{!2217, !2218, !2219, !2224}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2214, file: !2215, line: 75, baseType: !532, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2214, file: !2215, line: 90, baseType: !532, size: 32, offset: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2214, file: !2215, line: 124, baseType: !2220, size: 64, offset: 64)
!2220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2214, file: !2215, line: 109, size: 64, elements: !2221)
!2221 = !{!2222, !2223}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2220, file: !2215, line: 110, baseType: !537, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2220, file: !2215, line: 112, baseType: !537, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2214, file: !2215, line: 144, baseType: !532, size: 32, offset: 128)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1369, file: !1013, line: 1174, baseType: !530, size: 32, offset: 12160)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1369, file: !1013, line: 1179, baseType: !320, size: 64, offset: 12224)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1369, file: !1013, line: 1182, baseType: !2228, size: 128, offset: 12288)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1303, line: 76, size: 128, elements: !2229)
!2229 = !{!2230, !2235, !2236}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2228, file: !1303, line: 85, baseType: !2231, size: 64)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2232, line: 7, size: 64, elements: !2233)
!2232 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2233 = !{!2234}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2231, file: !2232, line: 12, baseType: !1513, size: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2228, file: !1303, line: 88, baseType: !299, size: 8, offset: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2228, file: !1303, line: 95, baseType: !299, size: 8, offset: 72)
!2237 = !DIDerivedType(tag: DW_TAG_member, scope: !1369, file: !1013, line: 1184, baseType: !2238, size: 128, offset: 12416)
!2238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1369, file: !1013, line: 1184, size: 128, elements: !2239)
!2239 = !{!2240, !2241}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2238, file: !1013, line: 1185, baseType: !272, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2238, file: !1013, line: 1186, baseType: !480, size: 128, align: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1369, file: !1013, line: 1190, baseType: !1011, size: 64, offset: 12544)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1369, file: !1013, line: 1192, baseType: !2244, size: 128, offset: 12608)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1303, line: 64, size: 128, elements: !2245)
!2245 = !{!2246, !2247, !2248}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2244, file: !1303, line: 65, baseType: !837, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2244, file: !1303, line: 67, baseType: !532, size: 32, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2244, file: !1303, line: 68, baseType: !532, size: 32, offset: 96)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1369, file: !1013, line: 1206, baseType: !281, size: 32, offset: 12736)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1369, file: !1013, line: 1207, baseType: !281, size: 32, offset: 12768)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1369, file: !1013, line: 1209, baseType: !320, size: 64, offset: 12800)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1369, file: !1013, line: 1219, baseType: !536, size: 64, offset: 12864)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1369, file: !1013, line: 1220, baseType: !536, size: 64, offset: 12928)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1369, file: !1013, line: 1317, baseType: !281, size: 32, offset: 12992)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1369, file: !1013, line: 1319, baseType: !1368, size: 64, offset: 13056)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1369, file: !1013, line: 1322, baseType: !2257, size: 64, offset: 13120)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2259, line: 56, size: 512, elements: !2260)
!2259 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2260 = !{!2261, !2262, !2263, !2264, !2265, !2266, !2267, !2269}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2258, file: !2259, line: 57, baseType: !2257, size: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2258, file: !2259, line: 58, baseType: !252, size: 64, offset: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2258, file: !2259, line: 59, baseType: !320, size: 64, offset: 128)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2258, file: !2259, line: 60, baseType: !320, size: 64, offset: 192)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2258, file: !2259, line: 61, baseType: !932, size: 64, offset: 256)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2258, file: !2259, line: 62, baseType: !7, size: 32, offset: 320)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2258, file: !2259, line: 63, baseType: !2268, size: 64, offset: 384)
!2268 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !251, line: 153, baseType: !536)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2258, file: !2259, line: 64, baseType: !2270, size: 64, offset: 448)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1369, file: !1013, line: 1326, baseType: !272, size: 32, offset: 13184)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1369, file: !1013, line: 1342, baseType: !252, size: 64, offset: 13248)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1369, file: !1013, line: 1343, baseType: !537, size: 64, offset: 13312)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1369, file: !1013, line: 1344, baseType: !536, size: 64, offset: 13376)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1369, file: !1013, line: 1345, baseType: !537, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1369, file: !1013, line: 1346, baseType: !537, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1369, file: !1013, line: 1347, baseType: !537, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1369, file: !1013, line: 1348, baseType: !480, size: 128, align: 64, offset: 13504)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1369, file: !1013, line: 1358, baseType: !2281, size: 34816, offset: 13824)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2282, line: 485, size: 34816, elements: !2283)
!2282 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2283 = !{!2284, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2313, !2314, !2315, !2316, !2317, !2318, !2321, !2322, !2323}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2281, file: !2282, line: 487, baseType: !2285, size: 192)
!2285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2286, size: 192, elements: !392)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2287, line: 16, size: 64, elements: !2288)
!2287 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2288 = !{!2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2286, file: !2287, line: 17, baseType: !971, size: 16)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2286, file: !2287, line: 18, baseType: !971, size: 16, offset: 16)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2286, file: !2287, line: 19, baseType: !971, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2286, file: !2287, line: 19, baseType: !971, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2286, file: !2287, line: 19, baseType: !971, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2286, file: !2287, line: 19, baseType: !971, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2286, file: !2287, line: 19, baseType: !971, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2286, file: !2287, line: 20, baseType: !971, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2286, file: !2287, line: 20, baseType: !971, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2286, file: !2287, line: 20, baseType: !971, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2286, file: !2287, line: 20, baseType: !971, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2286, file: !2287, line: 20, baseType: !971, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2286, file: !2287, line: 20, baseType: !971, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2281, file: !2282, line: 491, baseType: !320, size: 64, offset: 192)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2281, file: !2282, line: 495, baseType: !325, size: 16, offset: 256)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2281, file: !2282, line: 496, baseType: !325, size: 16, offset: 272)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2281, file: !2282, line: 497, baseType: !325, size: 16, offset: 288)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2281, file: !2282, line: 498, baseType: !325, size: 16, offset: 304)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2281, file: !2282, line: 502, baseType: !320, size: 64, offset: 320)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2281, file: !2282, line: 503, baseType: !320, size: 64, offset: 384)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2281, file: !2282, line: 514, baseType: !2310, size: 256, offset: 448)
!2310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2311, size: 256, elements: !1307)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2282, line: 483, flags: DIFlagFwdDecl)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2281, file: !2282, line: 516, baseType: !320, size: 64, offset: 704)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2281, file: !2282, line: 518, baseType: !320, size: 64, offset: 768)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2281, file: !2282, line: 520, baseType: !320, size: 64, offset: 832)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2281, file: !2282, line: 521, baseType: !320, size: 64, offset: 896)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2281, file: !2282, line: 522, baseType: !320, size: 64, offset: 960)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2281, file: !2282, line: 528, baseType: !2319, size: 64, offset: 1024)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2282, line: 10, flags: DIFlagFwdDecl)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2281, file: !2282, line: 535, baseType: !320, size: 64, offset: 1088)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2281, file: !2282, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2281, file: !2282, line: 540, baseType: !2324, size: 33280, offset: 1536)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2325, line: 317, size: 33280, elements: !2326)
!2325 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2326 = !{!2327, !2328, !2329}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2324, file: !2325, line: 330, baseType: !7, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2324, file: !2325, line: 337, baseType: !320, size: 64, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2324, file: !2325, line: 348, baseType: !2330, size: 32768, offset: 512)
!2330 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2325, line: 304, size: 32768, elements: !2331)
!2331 = !{!2332, !2347, !2386, !2436, !2449}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2330, file: !2325, line: 305, baseType: !2333, size: 896)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2325, line: 12, size: 896, elements: !2334)
!2334 = !{!2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2346}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2333, file: !2325, line: 13, baseType: !530, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2333, file: !2325, line: 14, baseType: !530, size: 32, offset: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2333, file: !2325, line: 15, baseType: !530, size: 32, offset: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2333, file: !2325, line: 16, baseType: !530, size: 32, offset: 96)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2333, file: !2325, line: 17, baseType: !530, size: 32, offset: 128)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2333, file: !2325, line: 18, baseType: !530, size: 32, offset: 160)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2333, file: !2325, line: 19, baseType: !530, size: 32, offset: 192)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2333, file: !2325, line: 22, baseType: !2343, size: 640, offset: 224)
!2343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, size: 640, elements: !2344)
!2344 = !{!2345}
!2345 = !DISubrange(count: 20)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2333, file: !2325, line: 25, baseType: !530, size: 32, offset: 864)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2330, file: !2325, line: 306, baseType: !2348, size: 4096, align: 128)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2325, line: 34, size: 4096, align: 128, elements: !2349)
!2349 = !{!2350, !2351, !2352, !2353, !2354, !2369, !2370, !2371, !2375, !2377, !2381}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2348, file: !2325, line: 35, baseType: !971, size: 16)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2348, file: !2325, line: 36, baseType: !971, size: 16, offset: 16)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2348, file: !2325, line: 37, baseType: !971, size: 16, offset: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2348, file: !2325, line: 38, baseType: !971, size: 16, offset: 48)
!2354 = !DIDerivedType(tag: DW_TAG_member, scope: !2348, file: !2325, line: 39, baseType: !2355, size: 128, offset: 64)
!2355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2348, file: !2325, line: 39, size: 128, elements: !2356)
!2356 = !{!2357, !2362}
!2357 = !DIDerivedType(tag: DW_TAG_member, scope: !2355, file: !2325, line: 40, baseType: !2358, size: 128)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2355, file: !2325, line: 40, size: 128, elements: !2359)
!2359 = !{!2360, !2361}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2358, file: !2325, line: 41, baseType: !536, size: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2358, file: !2325, line: 42, baseType: !536, size: 64, offset: 64)
!2362 = !DIDerivedType(tag: DW_TAG_member, scope: !2355, file: !2325, line: 44, baseType: !2363, size: 128)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2355, file: !2325, line: 44, size: 128, elements: !2364)
!2364 = !{!2365, !2366, !2367, !2368}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2363, file: !2325, line: 45, baseType: !530, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2363, file: !2325, line: 46, baseType: !530, size: 32, offset: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2363, file: !2325, line: 47, baseType: !530, size: 32, offset: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2363, file: !2325, line: 48, baseType: !530, size: 32, offset: 96)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2348, file: !2325, line: 51, baseType: !530, size: 32, offset: 192)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2348, file: !2325, line: 52, baseType: !530, size: 32, offset: 224)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2348, file: !2325, line: 55, baseType: !2372, size: 1024, offset: 256)
!2372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, size: 1024, elements: !2373)
!2373 = !{!2374}
!2374 = !DISubrange(count: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2348, file: !2325, line: 58, baseType: !2376, size: 2048, offset: 1280)
!2376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, size: 2048, elements: !396)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2348, file: !2325, line: 60, baseType: !2378, size: 384, offset: 3328)
!2378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, size: 384, elements: !2379)
!2379 = !{!2380}
!2380 = !DISubrange(count: 12)
!2381 = !DIDerivedType(tag: DW_TAG_member, scope: !2348, file: !2325, line: 62, baseType: !2382, size: 384, offset: 3712)
!2382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2348, file: !2325, line: 62, size: 384, elements: !2383)
!2383 = !{!2384, !2385}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2382, file: !2325, line: 63, baseType: !2378, size: 384)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2382, file: !2325, line: 64, baseType: !2378, size: 384)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2330, file: !2325, line: 307, baseType: !2387, size: 1088)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2325, line: 79, size: 1088, elements: !2388)
!2388 = !{!2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2435}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2387, file: !2325, line: 80, baseType: !530, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2387, file: !2325, line: 81, baseType: !530, size: 32, offset: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2387, file: !2325, line: 82, baseType: !530, size: 32, offset: 64)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2387, file: !2325, line: 83, baseType: !530, size: 32, offset: 96)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2387, file: !2325, line: 84, baseType: !530, size: 32, offset: 128)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2387, file: !2325, line: 85, baseType: !530, size: 32, offset: 160)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2387, file: !2325, line: 86, baseType: !530, size: 32, offset: 192)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2387, file: !2325, line: 88, baseType: !2343, size: 640, offset: 224)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2387, file: !2325, line: 89, baseType: !1498, size: 8, offset: 864)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2387, file: !2325, line: 90, baseType: !1498, size: 8, offset: 872)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2387, file: !2325, line: 91, baseType: !1498, size: 8, offset: 880)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2387, file: !2325, line: 92, baseType: !1498, size: 8, offset: 888)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2387, file: !2325, line: 93, baseType: !1498, size: 8, offset: 896)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2387, file: !2325, line: 94, baseType: !1498, size: 8, offset: 904)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2387, file: !2325, line: 95, baseType: !2404, size: 64, offset: 960)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2406, line: 11, size: 128, elements: !2407)
!2406 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2407 = !{!2408, !2409}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2405, file: !2406, line: 12, baseType: !426, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2405, file: !2406, line: 13, baseType: !2410, size: 64, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2412, line: 56, size: 1344, elements: !2413)
!2412 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2413 = !{!2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2411, file: !2412, line: 61, baseType: !320, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2411, file: !2412, line: 62, baseType: !320, size: 64, offset: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2411, file: !2412, line: 63, baseType: !320, size: 64, offset: 128)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2411, file: !2412, line: 64, baseType: !320, size: 64, offset: 192)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2411, file: !2412, line: 65, baseType: !320, size: 64, offset: 256)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2411, file: !2412, line: 66, baseType: !320, size: 64, offset: 320)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2411, file: !2412, line: 68, baseType: !320, size: 64, offset: 384)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2411, file: !2412, line: 69, baseType: !320, size: 64, offset: 448)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2411, file: !2412, line: 70, baseType: !320, size: 64, offset: 512)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2411, file: !2412, line: 71, baseType: !320, size: 64, offset: 576)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2411, file: !2412, line: 72, baseType: !320, size: 64, offset: 640)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2411, file: !2412, line: 73, baseType: !320, size: 64, offset: 704)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2411, file: !2412, line: 74, baseType: !320, size: 64, offset: 768)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2411, file: !2412, line: 75, baseType: !320, size: 64, offset: 832)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2411, file: !2412, line: 76, baseType: !320, size: 64, offset: 896)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2411, file: !2412, line: 81, baseType: !320, size: 64, offset: 960)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2411, file: !2412, line: 83, baseType: !320, size: 64, offset: 1024)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2411, file: !2412, line: 84, baseType: !320, size: 64, offset: 1088)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2411, file: !2412, line: 85, baseType: !320, size: 64, offset: 1152)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2411, file: !2412, line: 86, baseType: !320, size: 64, offset: 1216)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2411, file: !2412, line: 87, baseType: !320, size: 64, offset: 1280)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2387, file: !2325, line: 96, baseType: !530, size: 32, offset: 1024)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2330, file: !2325, line: 308, baseType: !2437, size: 4608, align: 512)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2325, line: 289, size: 4608, align: 512, elements: !2438)
!2438 = !{!2439, !2440, !2447}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2437, file: !2325, line: 290, baseType: !2348, size: 4096, align: 128)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2437, file: !2325, line: 291, baseType: !2441, size: 512, offset: 4096)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2325, line: 268, size: 512, elements: !2442)
!2442 = !{!2443, !2444, !2445}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2441, file: !2325, line: 269, baseType: !536, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2441, file: !2325, line: 270, baseType: !536, size: 64, offset: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2441, file: !2325, line: 271, baseType: !2446, size: 384, offset: 128)
!2446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 384, elements: !1768)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2437, file: !2325, line: 292, baseType: !2448, offset: 4608)
!2448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1498, elements: !1866)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2330, file: !2325, line: 309, baseType: !2450, size: 32768)
!2450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1498, size: 32768, elements: !2451)
!2451 = !{!2452}
!2452 = !DISubrange(count: 4096)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1365, file: !839, line: 378, baseType: !2454, size: 64, offset: 64)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1361, file: !839, line: 384, baseType: !1645, size: 192, offset: 192)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1130, file: !839, line: 500, baseType: !350, offset: 6656)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1130, file: !839, line: 501, baseType: !2458, size: 64, offset: 6656)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !839, line: 387, flags: DIFlagFwdDecl)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1130, file: !839, line: 516, baseType: !1856, size: 64, offset: 6720)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1130, file: !839, line: 519, baseType: !467, size: 64, offset: 6784)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1130, file: !839, line: 521, baseType: !2463, size: 64, offset: 6848)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !839, line: 521, flags: DIFlagFwdDecl)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1130, file: !839, line: 545, baseType: !277, size: 32, offset: 6912)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1130, file: !839, line: 548, baseType: !299, size: 8, offset: 6944)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1130, file: !839, line: 550, baseType: !2468, offset: 6952)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2469, line: 142, elements: !364)
!2469 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1130, file: !839, line: 554, baseType: !2102, size: 256, offset: 6976)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1130, file: !839, line: 557, baseType: !530, size: 32, offset: 7232)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1127, file: !839, line: 565, baseType: !2473, offset: 7296)
!2473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, elements: !2474)
!2474 = !{!2475}
!2475 = !DISubrange(count: -1)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1123, file: !839, line: 151, baseType: !277, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1116, file: !839, line: 156, baseType: !350, offset: 256)
!2478 = !DIDerivedType(tag: DW_TAG_member, scope: !843, file: !839, line: 159, baseType: !2479, size: 128)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !843, file: !839, line: 159, size: 128, elements: !2480)
!2480 = !{!2481, !2545}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2479, file: !839, line: 161, baseType: !2482, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2484)
!2484 = !{!2485, !2495, !2516, !2517, !2518, !2519, !2520, !2532, !2533, !2534}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2483, file: !31, line: 111, baseType: !2486, size: 384)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2487)
!2487 = !{!2488, !2490, !2491, !2492, !2493, !2494}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2486, file: !31, line: 20, baseType: !2489, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !320)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2486, file: !31, line: 21, baseType: !2489, size: 64, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2486, file: !31, line: 22, baseType: !2489, size: 64, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2486, file: !31, line: 23, baseType: !320, size: 64, offset: 192)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2486, file: !31, line: 24, baseType: !320, size: 64, offset: 256)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2486, file: !31, line: 25, baseType: !320, size: 64, offset: 320)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2483, file: !31, line: 112, baseType: !2496, size: 64, offset: 384)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2498, line: 105, size: 128, elements: !2499)
!2498 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2497, file: !2498, line: 110, baseType: !320, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2497, file: !2498, line: 118, baseType: !2502, size: 64, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2498, line: 95, size: 448, elements: !2504)
!2504 = !{!2505, !2506, !2511, !2512, !2513, !2514, !2515}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2503, file: !2498, line: 96, baseType: !883, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2503, file: !2498, line: 97, baseType: !2507, size: 64, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2498, line: 60, baseType: !2509)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{null, !2496}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2503, file: !2498, line: 98, baseType: !2507, size: 64, offset: 128)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2503, file: !2498, line: 99, baseType: !299, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2503, file: !2498, line: 100, baseType: !299, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2503, file: !2498, line: 101, baseType: !480, size: 128, align: 64, offset: 256)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2503, file: !2498, line: 102, baseType: !2496, size: 64, offset: 384)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2483, file: !31, line: 113, baseType: !2497, size: 128, offset: 448)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2483, file: !31, line: 114, baseType: !1645, size: 192, offset: 576)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2483, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2483, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2483, file: !31, line: 117, baseType: !2521, size: 64, offset: 832)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2523)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2524)
!2524 = !{!2525, !2526, !2530, !2531}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2523, file: !31, line: 73, baseType: !952, size: 64)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2523, file: !31, line: 78, baseType: !2527, size: 64, offset: 64)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{null, !2482}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2523, file: !31, line: 83, baseType: !2527, size: 64, offset: 128)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2523, file: !31, line: 89, baseType: !1179, size: 64, offset: 192)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2483, file: !31, line: 118, baseType: !252, size: 64, offset: 896)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2483, file: !31, line: 119, baseType: !281, size: 32, offset: 960)
!2534 = !DIDerivedType(tag: DW_TAG_member, scope: !2483, file: !31, line: 120, baseType: !2535, size: 128, offset: 1024)
!2535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2483, file: !31, line: 120, size: 128, elements: !2536)
!2536 = !{!2537, !2543}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2535, file: !31, line: 121, baseType: !2538, size: 128)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2539, line: 6, size: 128, elements: !2540)
!2539 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2540 = !{!2541, !2542}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2538, file: !2539, line: 7, baseType: !536, size: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2538, file: !2539, line: 8, baseType: !536, size: 64, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2535, file: !31, line: 122, baseType: !2544)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2538, elements: !1866)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2479, file: !839, line: 162, baseType: !252, size: 64, offset: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !843, file: !839, line: 176, baseType: !480, size: 128, align: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, scope: !838, file: !839, line: 179, baseType: !2548, size: 32, offset: 384)
!2548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !838, file: !839, line: 179, size: 32, elements: !2549)
!2549 = !{!2550, !2551, !2552, !2553}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2548, file: !839, line: 184, baseType: !277, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2548, file: !839, line: 192, baseType: !7, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2548, file: !839, line: 194, baseType: !7, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2548, file: !839, line: 195, baseType: !281, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !838, file: !839, line: 199, baseType: !277, size: 32, offset: 416)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !773, file: !44, line: 1964, baseType: !2556, size: 64, offset: 1344)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 64)
!2557 = !DISubroutineType(types: !2558)
!2558 = !{!426, !712, !2559}
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2561, line: 12, size: 256, elements: !2562)
!2561 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2562 = !{!2563, !2564, !2565, !2566, !2567}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2560, file: !2561, line: 13, baseType: !250, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2560, file: !2561, line: 16, baseType: !281, size: 32, offset: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2560, file: !2561, line: 23, baseType: !320, size: 64, offset: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2560, file: !2561, line: 30, baseType: !320, size: 64, offset: 128)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2560, file: !2561, line: 33, baseType: !2568, size: 64, offset: 192)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !839, line: 27, flags: DIFlagFwdDecl)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !773, file: !44, line: 1966, baseType: !2556, size: 64, offset: 1408)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !713, file: !44, line: 1424, baseType: !2572, size: 64, offset: 448)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64)
!2573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2574)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2575)
!2575 = !{!2576, !2622, !2626, !2630, !2631, !2632, !2633, !2634, !2639, !2644, !2648}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2574, file: !38, line: 323, baseType: !2577, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!281, !2580}
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2582)
!2582 = !{!2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2607, !2608, !2609}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2581, file: !38, line: 295, baseType: !755, size: 128)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2581, file: !38, line: 296, baseType: !285, size: 128, offset: 128)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2581, file: !38, line: 297, baseType: !285, size: 128, offset: 256)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2581, file: !38, line: 298, baseType: !285, size: 128, offset: 384)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2581, file: !38, line: 299, baseType: !1325, size: 192, offset: 512)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2581, file: !38, line: 300, baseType: !350, offset: 704)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2581, file: !38, line: 301, baseType: !277, size: 32, offset: 704)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2581, file: !38, line: 302, baseType: !712, size: 64, offset: 768)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2581, file: !38, line: 303, baseType: !2592, size: 64, offset: 832)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2593)
!2593 = !{!2594, !2606}
!2594 = !DIDerivedType(tag: DW_TAG_member, scope: !2592, file: !38, line: 69, baseType: !2595, size: 32)
!2595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2592, file: !38, line: 69, size: 32, elements: !2596)
!2596 = !{!2597, !2598, !2599}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2595, file: !38, line: 70, baseType: !550, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2595, file: !38, line: 71, baseType: !558, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2595, file: !38, line: 72, baseType: !2600, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2601, line: 24, baseType: !2602)
!2601 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2601, line: 22, size: 32, elements: !2603)
!2603 = !{!2604}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2602, file: !2601, line: 23, baseType: !2605, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2601, line: 20, baseType: !556)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2592, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2581, file: !38, line: 304, baseType: !644, size: 64, offset: 896)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2581, file: !38, line: 305, baseType: !320, size: 64, offset: 960)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2581, file: !38, line: 306, baseType: !2610, size: 576, offset: 1024)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2611)
!2611 = !{!2612, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2610, file: !38, line: 206, baseType: !2613, size: 64)
!2613 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !646)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2610, file: !38, line: 207, baseType: !2613, size: 64, offset: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2610, file: !38, line: 208, baseType: !2613, size: 64, offset: 128)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2610, file: !38, line: 209, baseType: !2613, size: 64, offset: 192)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2610, file: !38, line: 210, baseType: !2613, size: 64, offset: 256)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2610, file: !38, line: 211, baseType: !2613, size: 64, offset: 320)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2610, file: !38, line: 212, baseType: !2613, size: 64, offset: 384)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2610, file: !38, line: 213, baseType: !652, size: 64, offset: 448)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2610, file: !38, line: 214, baseType: !652, size: 64, offset: 512)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2574, file: !38, line: 324, baseType: !2623, size: 64, offset: 64)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = !DISubroutineType(types: !2625)
!2625 = !{!2580, !712, !281}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2574, file: !38, line: 325, baseType: !2627, size: 64, offset: 128)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{null, !2580}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2574, file: !38, line: 326, baseType: !2577, size: 64, offset: 192)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2574, file: !38, line: 327, baseType: !2577, size: 64, offset: 256)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2574, file: !38, line: 328, baseType: !2577, size: 64, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2574, file: !38, line: 329, baseType: !801, size: 64, offset: 384)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2574, file: !38, line: 332, baseType: !2635, size: 64, offset: 448)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{!2638, !544}
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2574, file: !38, line: 333, baseType: !2640, size: 64, offset: 512)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{!281, !544, !2643}
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2574, file: !38, line: 335, baseType: !2645, size: 64, offset: 576)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{!281, !544, !2638}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2574, file: !38, line: 337, baseType: !2649, size: 64, offset: 640)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = !DISubroutineType(types: !2651)
!2651 = !{!281, !712, !2652}
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !713, file: !44, line: 1425, baseType: !2654, size: 64, offset: 512)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2656)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2657)
!2657 = !{!2658, !2662, !2663, !2667, !2668, !2669, !2684, !2707, !2711, !2712, !2735}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2656, file: !38, line: 429, baseType: !2659, size: 64)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = !DISubroutineType(types: !2661)
!2661 = !{!281, !712, !281, !281, !662}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2656, file: !38, line: 430, baseType: !801, size: 64, offset: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2656, file: !38, line: 431, baseType: !2664, size: 64, offset: 128)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{!281, !712, !7}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2656, file: !38, line: 432, baseType: !2664, size: 64, offset: 192)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2656, file: !38, line: 433, baseType: !801, size: 64, offset: 256)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2656, file: !38, line: 434, baseType: !2670, size: 64, offset: 320)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = !DISubroutineType(types: !2672)
!2672 = !{!281, !712, !281, !2673}
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2675)
!2675 = !{!2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2674, file: !38, line: 416, baseType: !281, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2674, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2674, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2674, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2674, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2674, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2674, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2674, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2656, file: !38, line: 435, baseType: !2685, size: 64, offset: 384)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = !DISubroutineType(types: !2687)
!2687 = !{!281, !712, !2592, !2688}
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2690)
!2690 = !{!2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2689, file: !38, line: 344, baseType: !281, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2689, file: !38, line: 345, baseType: !536, size: 64, offset: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2689, file: !38, line: 346, baseType: !536, size: 64, offset: 128)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2689, file: !38, line: 347, baseType: !536, size: 64, offset: 192)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2689, file: !38, line: 348, baseType: !536, size: 64, offset: 256)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2689, file: !38, line: 349, baseType: !536, size: 64, offset: 320)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2689, file: !38, line: 350, baseType: !536, size: 64, offset: 384)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2689, file: !38, line: 351, baseType: !889, size: 64, offset: 448)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2689, file: !38, line: 353, baseType: !889, size: 64, offset: 512)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2689, file: !38, line: 354, baseType: !281, size: 32, offset: 576)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2689, file: !38, line: 355, baseType: !281, size: 32, offset: 608)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2689, file: !38, line: 356, baseType: !536, size: 64, offset: 640)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2689, file: !38, line: 357, baseType: !536, size: 64, offset: 704)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2689, file: !38, line: 358, baseType: !536, size: 64, offset: 768)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2689, file: !38, line: 359, baseType: !889, size: 64, offset: 832)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2689, file: !38, line: 360, baseType: !281, size: 32, offset: 896)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2656, file: !38, line: 436, baseType: !2708, size: 64, offset: 448)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2709 = !DISubroutineType(types: !2710)
!2710 = !{!281, !712, !2652, !2688}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2656, file: !38, line: 438, baseType: !2685, size: 64, offset: 512)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2656, file: !38, line: 439, baseType: !2713, size: 64, offset: 576)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!281, !712, !2716}
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2718)
!2718 = !{!2719, !2720}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2717, file: !38, line: 410, baseType: !7, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2717, file: !38, line: 411, baseType: !2721, size: 1344, offset: 64)
!2721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2722, size: 1344, elements: !392)
!2722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2723)
!2723 = !{!2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2734}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2722, file: !38, line: 396, baseType: !7, size: 32)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2722, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2722, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2722, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2722, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2722, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2722, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2722, file: !38, line: 404, baseType: !538, size: 64, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2722, file: !38, line: 405, baseType: !2733, size: 64, offset: 320)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !251, line: 126, baseType: !536)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2722, file: !38, line: 406, baseType: !2733, size: 64, offset: 384)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2656, file: !38, line: 440, baseType: !2664, size: 64, offset: 640)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !713, file: !44, line: 1426, baseType: !2737, size: 64, offset: 576)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2739)
!2739 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !713, file: !44, line: 1427, baseType: !320, size: 64, offset: 640)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !713, file: !44, line: 1428, baseType: !320, size: 64, offset: 704)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !713, file: !44, line: 1429, baseType: !320, size: 64, offset: 768)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !713, file: !44, line: 1430, baseType: !497, size: 64, offset: 832)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !713, file: !44, line: 1431, baseType: !879, size: 256, offset: 896)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !713, file: !44, line: 1432, baseType: !281, size: 32, offset: 1152)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !713, file: !44, line: 1433, baseType: !277, size: 32, offset: 1184)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !713, file: !44, line: 1437, baseType: !2748, size: 64, offset: 1216)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2751)
!2751 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !713, file: !44, line: 1449, baseType: !2753, size: 64, offset: 1280)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !513, line: 34, size: 64, elements: !2754)
!2754 = !{!2755}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2753, file: !513, line: 35, baseType: !516, size: 64)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !713, file: !44, line: 1450, baseType: !285, size: 128, offset: 1344)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !713, file: !44, line: 1451, baseType: !2758, size: 64, offset: 1472)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !713, file: !44, line: 1452, baseType: !2068, size: 64, offset: 1536)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !713, file: !44, line: 1453, baseType: !2762, size: 64, offset: 1600)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !713, file: !44, line: 1454, baseType: !755, size: 128, offset: 1664)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !713, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !713, file: !44, line: 1456, baseType: !2767, size: 2432, offset: 1856)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2768)
!2768 = !{!2769, !2770, !2771, !2773, !2805}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2767, file: !38, line: 519, baseType: !7, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2767, file: !38, line: 520, baseType: !879, size: 256, offset: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2767, file: !38, line: 521, baseType: !2772, size: 192, offset: 320)
!2772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 192, elements: !392)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2767, file: !38, line: 522, baseType: !2774, size: 1728, offset: 512)
!2774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2775, size: 1728, elements: !392)
!2775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2776)
!2776 = !{!2777, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2775, file: !38, line: 223, baseType: !2778, size: 64)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64)
!2779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2780)
!2780 = !{!2781, !2782, !2795, !2796}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2779, file: !38, line: 444, baseType: !281, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2779, file: !38, line: 445, baseType: !2783, size: 64, offset: 64)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2785)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2785, file: !38, line: 311, baseType: !801, size: 64)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2785, file: !38, line: 312, baseType: !801, size: 64, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2785, file: !38, line: 313, baseType: !801, size: 64, offset: 128)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2785, file: !38, line: 314, baseType: !801, size: 64, offset: 192)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2785, file: !38, line: 315, baseType: !2577, size: 64, offset: 256)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2785, file: !38, line: 316, baseType: !2577, size: 64, offset: 320)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2785, file: !38, line: 317, baseType: !2577, size: 64, offset: 384)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2785, file: !38, line: 318, baseType: !2649, size: 64, offset: 448)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2779, file: !38, line: 446, baseType: !746, size: 64, offset: 128)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2779, file: !38, line: 447, baseType: !2778, size: 64, offset: 192)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2775, file: !38, line: 224, baseType: !281, size: 32, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2775, file: !38, line: 226, baseType: !285, size: 128, offset: 128)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2775, file: !38, line: 227, baseType: !320, size: 64, offset: 256)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2775, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2775, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2775, file: !38, line: 230, baseType: !2613, size: 64, offset: 384)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2775, file: !38, line: 231, baseType: !2613, size: 64, offset: 448)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2775, file: !38, line: 232, baseType: !252, size: 64, offset: 512)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2767, file: !38, line: 523, baseType: !2806, size: 192, offset: 2240)
!2806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2783, size: 192, elements: !392)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !713, file: !44, line: 1458, baseType: !2808, size: 2112, offset: 4288)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2809)
!2809 = !{!2810, !2811, !2812}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2808, file: !44, line: 1411, baseType: !281, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2808, file: !44, line: 1412, baseType: !1624, size: 128, offset: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2808, file: !44, line: 1413, baseType: !2813, size: 1920, offset: 192)
!2813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2814, size: 1920, elements: !392)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2815, line: 12, size: 640, elements: !2816)
!2815 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2816 = !{!2817, !2825, !2827, !2832, !2833}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2814, file: !2815, line: 13, baseType: !2818, size: 320)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2819, line: 17, size: 320, elements: !2820)
!2819 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2820 = !{!2821, !2822, !2823, !2824}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2818, file: !2819, line: 18, baseType: !281, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2818, file: !2819, line: 19, baseType: !281, size: 32, offset: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2818, file: !2819, line: 20, baseType: !1624, size: 128, offset: 64)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2818, file: !2819, line: 22, baseType: !480, size: 128, align: 64, offset: 192)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2814, file: !2815, line: 14, baseType: !2826, size: 64, offset: 320)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2814, file: !2815, line: 15, baseType: !2828, size: 64, offset: 384)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2829, line: 16, size: 64, elements: !2830)
!2829 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2830 = !{!2831}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2828, file: !2829, line: 17, baseType: !1368, size: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2814, file: !2815, line: 16, baseType: !1624, size: 128, offset: 448)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2814, file: !2815, line: 17, baseType: !277, size: 32, offset: 576)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !713, file: !44, line: 1465, baseType: !252, size: 64, offset: 6400)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !713, file: !44, line: 1468, baseType: !530, size: 32, offset: 6464)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !713, file: !44, line: 1470, baseType: !652, size: 64, offset: 6528)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !713, file: !44, line: 1471, baseType: !652, size: 64, offset: 6592)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !713, file: !44, line: 1473, baseType: !532, size: 32, offset: 6656)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !713, file: !44, line: 1474, baseType: !2840, size: 64, offset: 6720)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !713, file: !44, line: 1477, baseType: !2843, size: 256, offset: 6784)
!2843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 256, elements: !2373)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !713, file: !44, line: 1478, baseType: !2845, size: 128, offset: 7040)
!2845 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2846, line: 18, baseType: !2847)
!2846 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2846, line: 16, size: 128, elements: !2848)
!2848 = !{!2849}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2847, file: !2846, line: 17, baseType: !2850, size: 128)
!2850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1499, size: 128, elements: !1878)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !713, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !713, file: !44, line: 1481, baseType: !2853, size: 32, offset: 7200)
!2853 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !251, line: 150, baseType: !7)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !713, file: !44, line: 1487, baseType: !1325, size: 192, offset: 7232)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !713, file: !44, line: 1493, baseType: !309, size: 64, offset: 7424)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !713, file: !44, line: 1495, baseType: !2857, size: 64, offset: 7488)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2859)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !495, line: 135, size: 1024, align: 512, elements: !2860)
!2860 = !{!2861, !2865, !2866, !2873, !2879, !2883, !2887, !2891, !2892, !2896, !2900, !2905, !2909}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2859, file: !495, line: 136, baseType: !2862, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{!281, !497, !7}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2859, file: !495, line: 137, baseType: !2862, size: 64, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2859, file: !495, line: 138, baseType: !2867, size: 64, offset: 128)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{!281, !2870, !2872}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !498)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2859, file: !495, line: 139, baseType: !2874, size: 64, offset: 192)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 64)
!2875 = !DISubroutineType(types: !2876)
!2876 = !{!281, !2870, !7, !309, !2877}
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !521)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2859, file: !495, line: 141, baseType: !2880, size: 64, offset: 256)
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 64)
!2881 = !DISubroutineType(types: !2882)
!2882 = !{!281, !2870}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2859, file: !495, line: 142, baseType: !2884, size: 64, offset: 320)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = !DISubroutineType(types: !2886)
!2886 = !{!281, !497}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2859, file: !495, line: 143, baseType: !2888, size: 64, offset: 384)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{null, !497}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2859, file: !495, line: 144, baseType: !2888, size: 64, offset: 448)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2859, file: !495, line: 145, baseType: !2893, size: 64, offset: 512)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DISubroutineType(types: !2895)
!2895 = !{null, !497, !544}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2859, file: !495, line: 146, baseType: !2897, size: 64, offset: 576)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!391, !497, !391, !281}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2859, file: !495, line: 147, baseType: !2901, size: 64, offset: 640)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!493, !2904}
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2859, file: !495, line: 148, baseType: !2906, size: 64, offset: 704)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = !DISubroutineType(types: !2908)
!2908 = !{!281, !662, !299}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2859, file: !495, line: 149, baseType: !2910, size: 64, offset: 768)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{!497, !497, !2913}
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 64)
!2914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !713, file: !44, line: 1500, baseType: !281, size: 32, offset: 7552)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !713, file: !44, line: 1502, baseType: !2917, size: 448, offset: 7616)
!2917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2561, line: 60, size: 448, elements: !2918)
!2918 = !{!2919, !2924, !2925, !2926, !2927, !2928, !2929}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2917, file: !2561, line: 61, baseType: !2920, size: 64)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = !DISubroutineType(types: !2922)
!2922 = !{!320, !2923, !2559}
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2917, file: !2561, line: 63, baseType: !2920, size: 64, offset: 64)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2917, file: !2561, line: 66, baseType: !426, size: 64, offset: 128)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2917, file: !2561, line: 67, baseType: !281, size: 32, offset: 192)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2917, file: !2561, line: 68, baseType: !7, size: 32, offset: 224)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2917, file: !2561, line: 71, baseType: !285, size: 128, offset: 256)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2917, file: !2561, line: 77, baseType: !2930, size: 64, offset: 384)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !713, file: !44, line: 1505, baseType: !883, size: 64, offset: 8064)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !713, file: !44, line: 1508, baseType: !883, size: 64, offset: 8128)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !713, file: !44, line: 1511, baseType: !281, size: 32, offset: 8192)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !713, file: !44, line: 1514, baseType: !1061, size: 32, offset: 8224)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !713, file: !44, line: 1517, baseType: !2936, size: 64, offset: 8256)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 64)
!2937 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2103, line: 18, flags: DIFlagFwdDecl)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !713, file: !44, line: 1518, baseType: !751, size: 64, offset: 8320)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !713, file: !44, line: 1525, baseType: !1856, size: 64, offset: 8384)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !713, file: !44, line: 1532, baseType: !2941, size: 64, offset: 8448)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2942, line: 52, size: 64, elements: !2943)
!2942 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2943 = !{!2944}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2941, file: !2942, line: 53, baseType: !2945, size: 64)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 64)
!2946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2942, line: 40, size: 256, elements: !2947)
!2947 = !{!2948, !2949, !2954}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2946, file: !2942, line: 42, baseType: !350)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2946, file: !2942, line: 44, baseType: !2950, size: 192)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2942, line: 28, size: 192, elements: !2951)
!2951 = !{!2952, !2953}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2950, file: !2942, line: 29, baseType: !285, size: 128)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2950, file: !2942, line: 31, baseType: !426, size: 64, offset: 128)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2946, file: !2942, line: 49, baseType: !426, size: 64, offset: 192)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !713, file: !44, line: 1533, baseType: !2941, size: 64, offset: 8512)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !713, file: !44, line: 1534, baseType: !480, size: 128, align: 64, offset: 8576)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !713, file: !44, line: 1535, baseType: !2102, size: 256, offset: 8704)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !713, file: !44, line: 1537, baseType: !1325, size: 192, offset: 8960)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !713, file: !44, line: 1542, baseType: !281, size: 32, offset: 9152)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !713, file: !44, line: 1545, baseType: !350, offset: 9184)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !713, file: !44, line: 1546, baseType: !285, size: 128, offset: 9216)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !713, file: !44, line: 1548, baseType: !350, offset: 9344)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !713, file: !44, line: 1549, baseType: !285, size: 128, offset: 9344)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !545, file: !44, line: 624, baseType: !850, size: 64, offset: 256)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !545, file: !44, line: 631, baseType: !320, size: 64, offset: 320)
!2966 = !DIDerivedType(tag: DW_TAG_member, scope: !545, file: !44, line: 639, baseType: !2967, size: 32, offset: 384)
!2967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !545, file: !44, line: 639, size: 32, elements: !2968)
!2968 = !{!2969, !2971}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2967, file: !44, line: 640, baseType: !2970, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2967, file: !44, line: 641, baseType: !7, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !545, file: !44, line: 643, baseType: !626, size: 32, offset: 416)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !545, file: !44, line: 644, baseType: !644, size: 64, offset: 448)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !545, file: !44, line: 645, baseType: !648, size: 128, offset: 512)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !545, file: !44, line: 646, baseType: !648, size: 128, offset: 640)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !545, file: !44, line: 647, baseType: !648, size: 128, offset: 768)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !545, file: !44, line: 648, baseType: !350, offset: 896)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !545, file: !44, line: 649, baseType: !325, size: 16, offset: 896)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !545, file: !44, line: 650, baseType: !1498, size: 8, offset: 912)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !545, file: !44, line: 651, baseType: !1498, size: 8, offset: 920)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !545, file: !44, line: 652, baseType: !2733, size: 64, offset: 960)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !545, file: !44, line: 659, baseType: !320, size: 64, offset: 1024)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !545, file: !44, line: 660, baseType: !879, size: 256, offset: 1088)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !545, file: !44, line: 662, baseType: !320, size: 64, offset: 1344)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !545, file: !44, line: 663, baseType: !320, size: 64, offset: 1408)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !545, file: !44, line: 665, baseType: !755, size: 128, offset: 1472)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !545, file: !44, line: 666, baseType: !285, size: 128, offset: 1600)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !545, file: !44, line: 675, baseType: !285, size: 128, offset: 1728)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !545, file: !44, line: 676, baseType: !285, size: 128, offset: 1856)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !545, file: !44, line: 677, baseType: !285, size: 128, offset: 1984)
!2991 = !DIDerivedType(tag: DW_TAG_member, scope: !545, file: !44, line: 678, baseType: !2992, size: 128, offset: 2112)
!2992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !545, file: !44, line: 678, size: 128, elements: !2993)
!2993 = !{!2994, !2995}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2992, file: !44, line: 679, baseType: !751, size: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2992, file: !44, line: 680, baseType: !480, size: 128, align: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !545, file: !44, line: 682, baseType: !885, size: 64, offset: 2240)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !545, file: !44, line: 683, baseType: !885, size: 64, offset: 2304)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !545, file: !44, line: 684, baseType: !277, size: 32, offset: 2368)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !545, file: !44, line: 685, baseType: !277, size: 32, offset: 2400)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !545, file: !44, line: 686, baseType: !277, size: 32, offset: 2432)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !545, file: !44, line: 688, baseType: !277, size: 32, offset: 2464)
!3002 = !DIDerivedType(tag: DW_TAG_member, scope: !545, file: !44, line: 690, baseType: !3003, size: 64, offset: 2496)
!3003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !545, file: !44, line: 690, size: 64, elements: !3004)
!3004 = !{!3005, !3228}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3003, file: !44, line: 691, baseType: !3006, size: 64)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3008)
!3008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !3009)
!3009 = !{!3010, !3011, !3015, !3020, !3024, !3025, !3026, !3030, !3043, !3044, !3052, !3056, !3057, !3061, !3062, !3066, !3071, !3072, !3076, !3080, !3188, !3192, !3193, !3197, !3198, !3202, !3206, !3211, !3215, !3219, !3223, !3227}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3008, file: !44, line: 1823, baseType: !746, size: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3008, file: !44, line: 1824, baseType: !3012, size: 64, offset: 64)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 64)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{!644, !467, !644, !281}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3008, file: !44, line: 1825, baseType: !3016, size: 64, offset: 128)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DISubroutineType(types: !3018)
!3018 = !{!422, !467, !391, !437, !3019}
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3008, file: !44, line: 1826, baseType: !3021, size: 64, offset: 192)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{!422, !467, !309, !437, !3019}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3008, file: !44, line: 1827, baseType: !956, size: 64, offset: 256)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3008, file: !44, line: 1828, baseType: !956, size: 64, offset: 320)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3008, file: !44, line: 1829, baseType: !3027, size: 64, offset: 384)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{!281, !959, !299}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3008, file: !44, line: 1830, baseType: !3031, size: 64, offset: 448)
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 64)
!3032 = !DISubroutineType(types: !3033)
!3033 = !{!281, !467, !3034}
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !3036)
!3036 = !{!3037, !3042}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3035, file: !44, line: 1777, baseType: !3038, size: 64)
!3038 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !3039)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = !DISubroutineType(types: !3041)
!3041 = !{!281, !3034, !309, !281, !644, !536, !7}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3035, file: !44, line: 1778, baseType: !644, size: 64, offset: 64)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3008, file: !44, line: 1831, baseType: !3031, size: 64, offset: 512)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3008, file: !44, line: 1832, baseType: !3045, size: 64, offset: 576)
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{!3048, !467, !3050}
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3049, line: 52, baseType: !7)
!3049 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !732, line: 27, flags: DIFlagFwdDecl)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3008, file: !44, line: 1833, baseType: !3053, size: 64, offset: 640)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!426, !467, !7, !320}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3008, file: !44, line: 1834, baseType: !3053, size: 64, offset: 704)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3008, file: !44, line: 1835, baseType: !3058, size: 64, offset: 768)
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 64)
!3059 = !DISubroutineType(types: !3060)
!3060 = !{!281, !467, !1133}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3008, file: !44, line: 1836, baseType: !320, size: 64, offset: 832)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3008, file: !44, line: 1837, baseType: !3063, size: 64, offset: 896)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DISubroutineType(types: !3065)
!3065 = !{!281, !544, !467}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3008, file: !44, line: 1838, baseType: !3067, size: 64, offset: 960)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = !DISubroutineType(types: !3069)
!3069 = !{!281, !467, !3070}
!3070 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !252)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3008, file: !44, line: 1839, baseType: !3063, size: 64, offset: 1024)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3008, file: !44, line: 1840, baseType: !3073, size: 64, offset: 1088)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!281, !467, !644, !644, !281}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3008, file: !44, line: 1841, baseType: !3077, size: 64, offset: 1152)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{!281, !281, !467, !281}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3008, file: !44, line: 1842, baseType: !3081, size: 64, offset: 1216)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{!281, !467, !281, !3084}
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3086)
!3086 = !{!3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3118, !3119, !3120, !3133, !3164}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3085, file: !44, line: 1063, baseType: !3084, size: 64)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3085, file: !44, line: 1064, baseType: !285, size: 128, offset: 64)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3085, file: !44, line: 1065, baseType: !755, size: 128, offset: 192)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3085, file: !44, line: 1066, baseType: !285, size: 128, offset: 320)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3085, file: !44, line: 1069, baseType: !285, size: 128, offset: 448)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3085, file: !44, line: 1072, baseType: !3070, size: 64, offset: 576)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3085, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3085, file: !44, line: 1074, baseType: !542, size: 8, offset: 672)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3085, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3085, file: !44, line: 1076, baseType: !281, size: 32, offset: 736)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3085, file: !44, line: 1077, baseType: !1624, size: 128, offset: 768)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3085, file: !44, line: 1078, baseType: !467, size: 64, offset: 896)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3085, file: !44, line: 1079, baseType: !644, size: 64, offset: 960)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3085, file: !44, line: 1080, baseType: !644, size: 64, offset: 1024)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3085, file: !44, line: 1082, baseType: !3102, size: 64, offset: 1088)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3104)
!3104 = !{!3105, !3113, !3114, !3115, !3116, !3117}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3103, file: !44, line: 1315, baseType: !3106)
!3106 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3107, line: 20, baseType: !3108)
!3107 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3107, line: 11, elements: !3109)
!3109 = !{!3110}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3108, file: !3107, line: 12, baseType: !3111)
!3111 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !362, line: 33, baseType: !3112)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !362, line: 31, elements: !364)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3103, file: !44, line: 1316, baseType: !281, size: 32)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3103, file: !44, line: 1317, baseType: !281, size: 32, offset: 32)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3103, file: !44, line: 1318, baseType: !3102, size: 64, offset: 64)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3103, file: !44, line: 1319, baseType: !467, size: 64, offset: 128)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3103, file: !44, line: 1320, baseType: !480, size: 128, align: 64, offset: 192)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3085, file: !44, line: 1084, baseType: !320, size: 64, offset: 1152)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3085, file: !44, line: 1085, baseType: !320, size: 64, offset: 1216)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3085, file: !44, line: 1087, baseType: !3121, size: 64, offset: 1280)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3123)
!3123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3124)
!3124 = !{!3125, !3129}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3123, file: !44, line: 1012, baseType: !3126, size: 64)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{null, !3084, !3084}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3123, file: !44, line: 1013, baseType: !3130, size: 64, offset: 64)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = !DISubroutineType(types: !3132)
!3132 = !{null, !3084}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3085, file: !44, line: 1088, baseType: !3134, size: 64, offset: 1344)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3136)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3137)
!3137 = !{!3138, !3142, !3146, !3147, !3151, !3155, !3159, !3163}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3136, file: !44, line: 1017, baseType: !3139, size: 64)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{!3070, !3070}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3136, file: !44, line: 1018, baseType: !3143, size: 64, offset: 64)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{null, !3070}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3136, file: !44, line: 1019, baseType: !3130, size: 64, offset: 128)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3136, file: !44, line: 1020, baseType: !3148, size: 64, offset: 192)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!281, !3084, !281}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3136, file: !44, line: 1021, baseType: !3152, size: 64, offset: 256)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{!299, !3084}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3136, file: !44, line: 1022, baseType: !3156, size: 64, offset: 320)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{!281, !3084, !281, !288}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3136, file: !44, line: 1023, baseType: !3160, size: 64, offset: 384)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{null, !3084, !933}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3136, file: !44, line: 1024, baseType: !3152, size: 64, offset: 448)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3085, file: !44, line: 1097, baseType: !3165, size: 256, offset: 1408)
!3165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3085, file: !44, line: 1089, size: 256, elements: !3166)
!3166 = !{!3167, !3176, !3182}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3165, file: !44, line: 1090, baseType: !3168, size: 256)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3169, line: 10, size: 256, elements: !3170)
!3169 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3170 = !{!3171, !3172, !3175}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3168, file: !3169, line: 11, baseType: !530, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3168, file: !3169, line: 12, baseType: !3173, size: 64, offset: 64)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3169, line: 5, flags: DIFlagFwdDecl)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3168, file: !3169, line: 13, baseType: !285, size: 128, offset: 128)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3165, file: !44, line: 1091, baseType: !3177, size: 64)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3169, line: 17, size: 64, elements: !3178)
!3178 = !{!3179}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3177, file: !3169, line: 18, baseType: !3180, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 64)
!3181 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3169, line: 16, flags: DIFlagFwdDecl)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3165, file: !44, line: 1096, baseType: !3183, size: 192)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3165, file: !44, line: 1092, size: 192, elements: !3184)
!3184 = !{!3185, !3186, !3187}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3183, file: !44, line: 1093, baseType: !285, size: 128)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3183, file: !44, line: 1094, baseType: !281, size: 32, offset: 128)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3183, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3008, file: !44, line: 1843, baseType: !3189, size: 64, offset: 1280)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DISubroutineType(types: !3191)
!3191 = !{!422, !467, !837, !281, !437, !3019, !281}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3008, file: !44, line: 1844, baseType: !1253, size: 64, offset: 1344)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3008, file: !44, line: 1845, baseType: !3194, size: 64, offset: 1408)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!281, !281}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3008, file: !44, line: 1846, baseType: !3081, size: 64, offset: 1472)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3008, file: !44, line: 1847, baseType: !3199, size: 64, offset: 1536)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = !DISubroutineType(types: !3201)
!3201 = !{!422, !1011, !467, !3019, !437, !7}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3008, file: !44, line: 1848, baseType: !3203, size: 64, offset: 1600)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 64)
!3204 = !DISubroutineType(types: !3205)
!3205 = !{!422, !467, !3019, !1011, !437, !7}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3008, file: !44, line: 1849, baseType: !3207, size: 64, offset: 1664)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 64)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{!281, !467, !426, !3210, !933}
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3008, file: !44, line: 1850, baseType: !3212, size: 64, offset: 1728)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3213 = !DISubroutineType(types: !3214)
!3214 = !{!426, !467, !281, !644, !644}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3008, file: !44, line: 1852, baseType: !3216, size: 64, offset: 1792)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 64)
!3217 = !DISubroutineType(types: !3218)
!3218 = !{null, !827, !467}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3008, file: !44, line: 1856, baseType: !3220, size: 64, offset: 1856)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!422, !467, !644, !467, !644, !437, !7}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3008, file: !44, line: 1858, baseType: !3224, size: 64, offset: 1920)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = !DISubroutineType(types: !3226)
!3226 = !{!644, !467, !644, !467, !644, !644, !7}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3008, file: !44, line: 1861, baseType: !3073, size: 64, offset: 1984)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3003, file: !44, line: 692, baseType: !780, size: 64)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !545, file: !44, line: 694, baseType: !3230, size: 64, offset: 2560)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3232)
!3232 = !{!3233, !3234, !3235, !3236}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3231, file: !44, line: 1101, baseType: !350)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3231, file: !44, line: 1102, baseType: !285, size: 128)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3231, file: !44, line: 1103, baseType: !285, size: 128, offset: 128)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3231, file: !44, line: 1104, baseType: !285, size: 128, offset: 256)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !545, file: !44, line: 695, baseType: !851, size: 1216, align: 64, offset: 2624)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !545, file: !44, line: 696, baseType: !285, size: 128, offset: 3840)
!3239 = !DIDerivedType(tag: DW_TAG_member, scope: !545, file: !44, line: 697, baseType: !3240, size: 64, offset: 3968)
!3240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !545, file: !44, line: 697, size: 64, elements: !3241)
!3241 = !{!3242, !3243, !3244, !3247, !3248}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3240, file: !44, line: 698, baseType: !1011, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3240, file: !44, line: 699, baseType: !2758, size: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3240, file: !44, line: 700, baseType: !3245, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3240, file: !44, line: 701, baseType: !391, size: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3240, file: !44, line: 702, baseType: !7, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !545, file: !44, line: 705, baseType: !532, size: 32, offset: 4032)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !545, file: !44, line: 708, baseType: !532, size: 32, offset: 4064)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !545, file: !44, line: 709, baseType: !2840, size: 64, offset: 4096)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !545, file: !44, line: 720, baseType: !252, size: 64, offset: 4160)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !498, file: !495, line: 98, baseType: !3254, size: 256, offset: 448)
!3254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !542, size: 256, elements: !2373)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !498, file: !495, line: 101, baseType: !3256, size: 32, offset: 704)
!3256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3257, line: 25, size: 32, elements: !3258)
!3257 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3258 = !{!3259}
!3259 = !DIDerivedType(tag: DW_TAG_member, scope: !3256, file: !3257, line: 26, baseType: !3260, size: 32)
!3260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3256, file: !3257, line: 26, size: 32, elements: !3261)
!3261 = !{!3262}
!3262 = !DIDerivedType(tag: DW_TAG_member, scope: !3260, file: !3257, line: 30, baseType: !3263, size: 32)
!3263 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3260, file: !3257, line: 30, size: 32, elements: !3264)
!3264 = !{!3265, !3266}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3263, file: !3257, line: 31, baseType: !350)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3263, file: !3257, line: 32, baseType: !281, size: 32)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !498, file: !495, line: 102, baseType: !2857, size: 64, offset: 768)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !498, file: !495, line: 103, baseType: !712, size: 64, offset: 832)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !498, file: !495, line: 104, baseType: !320, size: 64, offset: 896)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !498, file: !495, line: 105, baseType: !252, size: 64, offset: 960)
!3271 = !DIDerivedType(tag: DW_TAG_member, scope: !498, file: !495, line: 107, baseType: !3272, size: 128, offset: 1024)
!3272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !498, file: !495, line: 107, size: 128, elements: !3273)
!3273 = !{!3274, !3275}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3272, file: !495, line: 108, baseType: !285, size: 128)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3272, file: !495, line: 109, baseType: !3276, size: 64)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !498, file: !495, line: 111, baseType: !285, size: 128, offset: 1152)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !498, file: !495, line: 112, baseType: !285, size: 128, offset: 1280)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !498, file: !495, line: 120, baseType: !3280, size: 128, offset: 1408)
!3280 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !498, file: !495, line: 116, size: 128, elements: !3281)
!3281 = !{!3282, !3283, !3284}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3280, file: !495, line: 117, baseType: !755, size: 128)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3280, file: !495, line: 118, baseType: !512, size: 128)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3280, file: !495, line: 119, baseType: !480, size: 128, align: 64)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !468, file: !44, line: 922, baseType: !544, size: 64, offset: 256)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !468, file: !44, line: 923, baseType: !3006, size: 64, offset: 320)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !468, file: !44, line: 929, baseType: !350, offset: 384)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !468, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !468, file: !44, line: 931, baseType: !883, size: 64, offset: 448)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !468, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !468, file: !44, line: 933, baseType: !2853, size: 32, offset: 544)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !468, file: !44, line: 934, baseType: !1325, size: 192, offset: 576)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !468, file: !44, line: 935, baseType: !644, size: 64, offset: 768)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !468, file: !44, line: 936, baseType: !3295, size: 192, offset: 832)
!3295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3296)
!3296 = !{!3297, !3298, !3299, !3300, !3301, !3302}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3295, file: !44, line: 886, baseType: !3106)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3295, file: !44, line: 887, baseType: !1614, size: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3295, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3295, file: !44, line: 889, baseType: !550, size: 32, offset: 96)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3295, file: !44, line: 889, baseType: !550, size: 32, offset: 128)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3295, file: !44, line: 890, baseType: !281, size: 32, offset: 160)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !468, file: !44, line: 937, baseType: !1690, size: 64, offset: 1024)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !468, file: !44, line: 938, baseType: !3305, size: 256, offset: 1088)
!3305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3306)
!3306 = !{!3307, !3308, !3309, !3310, !3311, !3312}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3305, file: !44, line: 897, baseType: !320, size: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3305, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3305, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3305, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3305, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3305, file: !44, line: 904, baseType: !644, size: 64, offset: 192)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !468, file: !44, line: 940, baseType: !536, size: 64, offset: 1344)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !468, file: !44, line: 945, baseType: !252, size: 64, offset: 1408)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !468, file: !44, line: 949, baseType: !285, size: 128, offset: 1472)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !468, file: !44, line: 950, baseType: !285, size: 128, offset: 1600)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !468, file: !44, line: 952, baseType: !850, size: 64, offset: 1728)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !468, file: !44, line: 953, baseType: !1061, size: 32, offset: 1792)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !468, file: !44, line: 954, baseType: !1061, size: 32, offset: 1824)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !458, file: !416, line: 174, baseType: !464, size: 64, offset: 320)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !458, file: !416, line: 176, baseType: !3322, size: 64, offset: 384)
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3323 = !DISubroutineType(types: !3324)
!3324 = !{!281, !467, !343, !457, !1133}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !446, file: !416, line: 90, baseType: !441, size: 64, offset: 192)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !446, file: !416, line: 91, baseType: !3327, size: 64, offset: 256)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !406, file: !338, line: 143, baseType: !3329, size: 64, offset: 256)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 64)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{!3332, !343}
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3334)
!3334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3335)
!3335 = !{!3336, !3337, !3341, !3345, !3351, !3355}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3334, file: !61, line: 40, baseType: !60, size: 32)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3334, file: !61, line: 41, baseType: !3338, size: 64, offset: 64)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!299}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3334, file: !61, line: 42, baseType: !3342, size: 64, offset: 128)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = !DISubroutineType(types: !3344)
!3344 = !{!252}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3334, file: !61, line: 43, baseType: !3346, size: 64, offset: 192)
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 64)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{!2270, !3349}
!3349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3350, size: 64)
!3350 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3334, file: !61, line: 44, baseType: !3352, size: 64, offset: 256)
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 64)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!2270}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3334, file: !61, line: 45, baseType: !583, size: 64, offset: 320)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !406, file: !338, line: 144, baseType: !3357, size: 64, offset: 320)
!3357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3358, size: 64)
!3358 = !DISubroutineType(types: !3359)
!3359 = !{!2270, !343}
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !406, file: !338, line: 145, baseType: !3361, size: 64, offset: 384)
!3361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3362, size: 64)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{null, !343, !3364, !3365}
!3364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !337, file: !338, line: 70, baseType: !3367, size: 64, offset: 384)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !732, line: 123, size: 1024, elements: !3369)
!3369 = !{!3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3498, !3499, !3500, !3501, !3502}
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3368, file: !732, line: 124, baseType: !277, size: 32)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3368, file: !732, line: 125, baseType: !277, size: 32, offset: 32)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3368, file: !732, line: 135, baseType: !3367, size: 64, offset: 64)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3368, file: !732, line: 136, baseType: !309, size: 64, offset: 128)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3368, file: !732, line: 138, baseType: !872, size: 192, align: 64, offset: 192)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3368, file: !732, line: 140, baseType: !2270, size: 64, offset: 384)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3368, file: !732, line: 141, baseType: !7, size: 32, offset: 448)
!3377 = !DIDerivedType(tag: DW_TAG_member, scope: !3368, file: !732, line: 142, baseType: !3378, size: 256, offset: 512)
!3378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3368, file: !732, line: 142, size: 256, elements: !3379)
!3379 = !{!3380, !3426, !3430}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3378, file: !732, line: 143, baseType: !3381, size: 192)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !732, line: 91, size: 192, elements: !3382)
!3382 = !{!3383, !3384, !3385}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3381, file: !732, line: 92, baseType: !320, size: 64)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3381, file: !732, line: 94, baseType: !868, size: 64, offset: 64)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3381, file: !732, line: 100, baseType: !3386, size: 64, offset: 128)
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 64)
!3387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !732, line: 180, size: 704, elements: !3388)
!3388 = !{!3389, !3390, !3391, !3398, !3399, !3400, !3424, !3425}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3387, file: !732, line: 182, baseType: !3367, size: 64)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3387, file: !732, line: 183, baseType: !7, size: 32, offset: 64)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3387, file: !732, line: 186, baseType: !3392, size: 192, offset: 128)
!3392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3393, line: 19, size: 192, elements: !3394)
!3393 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3394 = !{!3395, !3396, !3397}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3392, file: !3393, line: 20, baseType: !855, size: 128)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3392, file: !3393, line: 21, baseType: !7, size: 32, offset: 128)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3392, file: !3393, line: 22, baseType: !7, size: 32, offset: 160)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3387, file: !732, line: 187, baseType: !530, size: 32, offset: 320)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3387, file: !732, line: 188, baseType: !530, size: 32, offset: 352)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3387, file: !732, line: 189, baseType: !3401, size: 64, offset: 384)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !732, line: 168, size: 320, elements: !3403)
!3403 = !{!3404, !3408, !3412, !3416, !3420}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3402, file: !732, line: 169, baseType: !3405, size: 64)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{!281, !827, !3386}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3402, file: !732, line: 171, baseType: !3409, size: 64, offset: 64)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!281, !3367, !309, !432}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3402, file: !732, line: 173, baseType: !3413, size: 64, offset: 128)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!281, !3367}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3402, file: !732, line: 174, baseType: !3417, size: 64, offset: 192)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!281, !3367, !3367, !309}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3402, file: !732, line: 176, baseType: !3421, size: 64, offset: 256)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 64)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!281, !827, !3367, !3386}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3387, file: !732, line: 192, baseType: !285, size: 128, offset: 448)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3387, file: !732, line: 194, baseType: !1624, size: 128, offset: 576)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3378, file: !732, line: 144, baseType: !3427, size: 64)
!3427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !732, line: 103, size: 64, elements: !3428)
!3428 = !{!3429}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3427, file: !732, line: 104, baseType: !3367, size: 64)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3378, file: !732, line: 145, baseType: !3431, size: 256)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !732, line: 107, size: 256, elements: !3432)
!3432 = !{!3433, !3493, !3496, !3497}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3431, file: !732, line: 108, baseType: !3434, size: 64)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3436)
!3436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !732, line: 217, size: 768, elements: !3437)
!3437 = !{!3438, !3458, !3462, !3466, !3470, !3474, !3478, !3482, !3483, !3484, !3485, !3489}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3436, file: !732, line: 222, baseType: !3439, size: 64)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!3440 = !DISubroutineType(types: !3441)
!3441 = !{!281, !3442}
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !732, line: 197, size: 1088, elements: !3444)
!3444 = !{!3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3443, file: !732, line: 199, baseType: !3367, size: 64)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3443, file: !732, line: 200, baseType: !467, size: 64, offset: 64)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3443, file: !732, line: 201, baseType: !827, size: 64, offset: 128)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3443, file: !732, line: 202, baseType: !252, size: 64, offset: 192)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3443, file: !732, line: 205, baseType: !1325, size: 192, offset: 256)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3443, file: !732, line: 206, baseType: !1325, size: 192, offset: 448)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3443, file: !732, line: 207, baseType: !281, size: 32, offset: 640)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3443, file: !732, line: 208, baseType: !285, size: 128, offset: 704)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3443, file: !732, line: 209, baseType: !391, size: 64, offset: 832)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3443, file: !732, line: 211, baseType: !437, size: 64, offset: 896)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3443, file: !732, line: 212, baseType: !299, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3443, file: !732, line: 213, baseType: !299, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3443, file: !732, line: 214, baseType: !1161, size: 64, offset: 1024)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3436, file: !732, line: 223, baseType: !3459, size: 64, offset: 64)
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{null, !3442}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3436, file: !732, line: 236, baseType: !3463, size: 64, offset: 128)
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = !DISubroutineType(types: !3465)
!3465 = !{!281, !827, !252}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3436, file: !732, line: 238, baseType: !3467, size: 64, offset: 192)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!252, !827, !3019}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3436, file: !732, line: 239, baseType: !3471, size: 64, offset: 256)
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 64)
!3472 = !DISubroutineType(types: !3473)
!3473 = !{!252, !827, !252, !3019}
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3436, file: !732, line: 240, baseType: !3475, size: 64, offset: 320)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{null, !827, !252}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3436, file: !732, line: 242, baseType: !3479, size: 64, offset: 384)
!3479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3480, size: 64)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{!422, !3442, !391, !437, !644}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3436, file: !732, line: 252, baseType: !437, size: 64, offset: 448)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3436, file: !732, line: 259, baseType: !299, size: 8, offset: 512)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3436, file: !732, line: 260, baseType: !3479, size: 64, offset: 576)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3436, file: !732, line: 263, baseType: !3486, size: 64, offset: 640)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!3048, !3442, !3050}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3436, file: !732, line: 266, baseType: !3490, size: 64, offset: 704)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{!281, !3442, !1133}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3431, file: !732, line: 109, baseType: !3494, size: 64, offset: 64)
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 64)
!3495 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !732, line: 31, flags: DIFlagFwdDecl)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3431, file: !732, line: 110, baseType: !644, size: 64, offset: 128)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3431, file: !732, line: 111, baseType: !3367, size: 64, offset: 192)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3368, file: !732, line: 148, baseType: !252, size: 64, offset: 768)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3368, file: !732, line: 154, baseType: !536, size: 64, offset: 832)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3368, file: !732, line: 156, baseType: !325, size: 16, offset: 896)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3368, file: !732, line: 157, baseType: !432, size: 16, offset: 912)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3368, file: !732, line: 158, baseType: !3503, size: 64, offset: 960)
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !732, line: 32, flags: DIFlagFwdDecl)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !337, file: !338, line: 71, baseType: !268, size: 32, offset: 448)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !337, file: !338, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !337, file: !338, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !337, file: !338, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !337, file: !338, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !337, file: !338, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !334, file: !73, line: 463, baseType: !333, size: 64, offset: 512)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !334, file: !73, line: 465, baseType: !3513, size: 64, offset: 576)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !334, file: !73, line: 467, baseType: !309, size: 64, offset: 640)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !334, file: !73, line: 468, baseType: !3517, size: 64, offset: 704)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3519)
!3519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3520)
!3520 = !{!3521, !3522, !3523, !3527, !3532, !3536}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3519, file: !73, line: 88, baseType: !309, size: 64)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3519, file: !73, line: 89, baseType: !443, size: 64, offset: 64)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3519, file: !73, line: 90, baseType: !3524, size: 64, offset: 128)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DISubroutineType(types: !3526)
!3526 = !{!281, !333, !386}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3519, file: !73, line: 91, baseType: !3528, size: 64, offset: 192)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!391, !333, !3531, !3364, !3365}
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3519, file: !73, line: 93, baseType: !3533, size: 64, offset: 256)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{null, !333}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3519, file: !73, line: 95, baseType: !3537, size: 64, offset: 320)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3539)
!3539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3540)
!3540 = !{!3541, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3539, file: !80, line: 279, baseType: !3542, size: 64)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!281, !333}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3539, file: !80, line: 280, baseType: !3533, size: 64, offset: 64)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3539, file: !80, line: 281, baseType: !3542, size: 64, offset: 128)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3539, file: !80, line: 282, baseType: !3542, size: 64, offset: 192)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3539, file: !80, line: 283, baseType: !3542, size: 64, offset: 256)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3539, file: !80, line: 284, baseType: !3542, size: 64, offset: 320)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3539, file: !80, line: 285, baseType: !3542, size: 64, offset: 384)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3539, file: !80, line: 286, baseType: !3542, size: 64, offset: 448)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3539, file: !80, line: 287, baseType: !3542, size: 64, offset: 512)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3539, file: !80, line: 288, baseType: !3542, size: 64, offset: 576)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3539, file: !80, line: 289, baseType: !3542, size: 64, offset: 640)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3539, file: !80, line: 290, baseType: !3542, size: 64, offset: 704)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3539, file: !80, line: 291, baseType: !3542, size: 64, offset: 768)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3539, file: !80, line: 292, baseType: !3542, size: 64, offset: 832)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3539, file: !80, line: 293, baseType: !3542, size: 64, offset: 896)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3539, file: !80, line: 294, baseType: !3542, size: 64, offset: 960)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3539, file: !80, line: 295, baseType: !3542, size: 64, offset: 1024)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3539, file: !80, line: 296, baseType: !3542, size: 64, offset: 1088)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3539, file: !80, line: 297, baseType: !3542, size: 64, offset: 1152)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3539, file: !80, line: 298, baseType: !3542, size: 64, offset: 1216)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3539, file: !80, line: 299, baseType: !3542, size: 64, offset: 1280)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3539, file: !80, line: 300, baseType: !3542, size: 64, offset: 1344)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3539, file: !80, line: 301, baseType: !3542, size: 64, offset: 1408)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !334, file: !73, line: 470, baseType: !3568, size: 64, offset: 768)
!3568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 64)
!3569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3570, line: 82, size: 1408, elements: !3571)
!3570 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3571 = !{!3572, !3573, !3574, !3575, !3576, !3577, !3578, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3653, !3656, !3657}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3569, file: !3570, line: 83, baseType: !309, size: 64)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3569, file: !3570, line: 84, baseType: !309, size: 64, offset: 64)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3569, file: !3570, line: 85, baseType: !333, size: 64, offset: 128)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3569, file: !3570, line: 86, baseType: !443, size: 64, offset: 192)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3569, file: !3570, line: 87, baseType: !443, size: 64, offset: 256)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3569, file: !3570, line: 88, baseType: !443, size: 64, offset: 320)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3569, file: !3570, line: 90, baseType: !3579, size: 64, offset: 384)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{!281, !333, !3582}
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3583, size: 64)
!3583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3584)
!3584 = !{!3585, !3586, !3587, !3588, !3589, !3590, !3591, !3604, !3617, !3618, !3619, !3620, !3621, !3629, !3630, !3631, !3632, !3633, !3634}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3583, file: !67, line: 96, baseType: !309, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3583, file: !67, line: 97, baseType: !3568, size: 64, offset: 64)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3583, file: !67, line: 99, baseType: !746, size: 64, offset: 128)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3583, file: !67, line: 100, baseType: !309, size: 64, offset: 192)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3583, file: !67, line: 102, baseType: !299, size: 8, offset: 256)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3583, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3583, file: !67, line: 105, baseType: !3592, size: 64, offset: 320)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3594)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3595, line: 262, size: 1600, elements: !3596)
!3595 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3596 = !{!3597, !3598, !3599, !3603}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3594, file: !3595, line: 263, baseType: !2843, size: 256)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3594, file: !3595, line: 264, baseType: !2843, size: 256, offset: 256)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3594, file: !3595, line: 265, baseType: !3600, size: 1024, offset: 512)
!3600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 1024, elements: !3601)
!3601 = !{!3602}
!3602 = !DISubrange(count: 128)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3594, file: !3595, line: 266, baseType: !2270, size: 64, offset: 1536)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3583, file: !67, line: 106, baseType: !3605, size: 64, offset: 384)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3607)
!3607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3595, line: 210, size: 256, elements: !3608)
!3608 = !{!3609, !3613, !3615, !3616}
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3607, file: !3595, line: 211, baseType: !3610, size: 72)
!3610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1499, size: 72, elements: !3611)
!3611 = !{!3612}
!3612 = !DISubrange(count: 9)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3607, file: !3595, line: 212, baseType: !3614, size: 64, offset: 128)
!3614 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3595, line: 14, baseType: !320)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3607, file: !3595, line: 213, baseType: !532, size: 32, offset: 192)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3607, file: !3595, line: 214, baseType: !532, size: 32, offset: 224)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3583, file: !67, line: 108, baseType: !3542, size: 64, offset: 448)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3583, file: !67, line: 109, baseType: !3533, size: 64, offset: 512)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3583, file: !67, line: 110, baseType: !3542, size: 64, offset: 576)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3583, file: !67, line: 111, baseType: !3533, size: 64, offset: 640)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3583, file: !67, line: 112, baseType: !3622, size: 64, offset: 704)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{!281, !333, !3625}
!3625 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3626)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3627)
!3627 = !{!3628}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3626, file: !80, line: 51, baseType: !281, size: 32)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3583, file: !67, line: 113, baseType: !3542, size: 64, offset: 768)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3583, file: !67, line: 114, baseType: !443, size: 64, offset: 832)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3583, file: !67, line: 115, baseType: !443, size: 64, offset: 896)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3583, file: !67, line: 117, baseType: !3537, size: 64, offset: 960)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3583, file: !67, line: 118, baseType: !3533, size: 64, offset: 1024)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3583, file: !67, line: 120, baseType: !3635, size: 64, offset: 1088)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3569, file: !3570, line: 91, baseType: !3524, size: 64, offset: 448)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3569, file: !3570, line: 92, baseType: !3542, size: 64, offset: 512)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3569, file: !3570, line: 93, baseType: !3533, size: 64, offset: 576)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3569, file: !3570, line: 94, baseType: !3542, size: 64, offset: 640)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3569, file: !3570, line: 95, baseType: !3533, size: 64, offset: 704)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3569, file: !3570, line: 97, baseType: !3542, size: 64, offset: 768)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3569, file: !3570, line: 98, baseType: !3542, size: 64, offset: 832)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3569, file: !3570, line: 100, baseType: !3622, size: 64, offset: 896)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3569, file: !3570, line: 101, baseType: !3542, size: 64, offset: 960)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3569, file: !3570, line: 103, baseType: !3542, size: 64, offset: 1024)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3569, file: !3570, line: 105, baseType: !3542, size: 64, offset: 1088)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3569, file: !3570, line: 107, baseType: !3537, size: 64, offset: 1152)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3569, file: !3570, line: 109, baseType: !3650, size: 64, offset: 1216)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3652)
!3652 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3570, line: 109, flags: DIFlagFwdDecl)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3569, file: !3570, line: 111, baseType: !3654, size: 64, offset: 1280)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3570, line: 111, flags: DIFlagFwdDecl)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3569, file: !3570, line: 112, baseType: !761, offset: 1344)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3569, file: !3570, line: 114, baseType: !299, size: 8, offset: 1344)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !334, file: !73, line: 471, baseType: !3582, size: 64, offset: 832)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !334, file: !73, line: 473, baseType: !252, size: 64, offset: 896)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !334, file: !73, line: 475, baseType: !252, size: 64, offset: 960)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !334, file: !73, line: 480, baseType: !1325, size: 192, offset: 1024)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !334, file: !73, line: 484, baseType: !3663, size: 576, offset: 1216)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3664)
!3664 = !{!3665, !3666, !3667, !3668, !3669, !3670}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3663, file: !73, line: 362, baseType: !285, size: 128)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3663, file: !73, line: 363, baseType: !285, size: 128, offset: 128)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3663, file: !73, line: 364, baseType: !285, size: 128, offset: 256)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3663, file: !73, line: 365, baseType: !285, size: 128, offset: 384)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3663, file: !73, line: 366, baseType: !299, size: 8, offset: 512)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3663, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !334, file: !73, line: 485, baseType: !3672, size: 2304, offset: 1792)
!3672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3673)
!3673 = !{!3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3769, !3773}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3672, file: !80, line: 566, baseType: !3625, size: 32)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3672, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3672, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3672, file: !80, line: 569, baseType: !299, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3672, file: !80, line: 570, baseType: !299, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3672, file: !80, line: 571, baseType: !299, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3672, file: !80, line: 572, baseType: !299, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3672, file: !80, line: 573, baseType: !299, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3672, file: !80, line: 574, baseType: !299, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3672, file: !80, line: 575, baseType: !299, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3672, file: !80, line: 576, baseType: !299, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3672, file: !80, line: 577, baseType: !530, size: 32, offset: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3672, file: !80, line: 578, baseType: !350, offset: 96)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3672, file: !80, line: 580, baseType: !285, size: 128, offset: 128)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3672, file: !80, line: 581, baseType: !1645, size: 192, offset: 256)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3672, file: !80, line: 582, baseType: !3690, size: 64, offset: 448)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3692, line: 43, size: 1472, elements: !3693)
!3692 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3693 = !{!3694, !3695, !3696, !3697, !3698, !3701, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3691, file: !3692, line: 44, baseType: !309, size: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3691, file: !3692, line: 45, baseType: !281, size: 32, offset: 64)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3691, file: !3692, line: 46, baseType: !285, size: 128, offset: 128)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3691, file: !3692, line: 47, baseType: !350, offset: 256)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3691, file: !3692, line: 48, baseType: !3699, size: 64, offset: 256)
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3700, size: 64)
!3700 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3691, file: !3692, line: 49, baseType: !3702, size: 320, offset: 320)
!3702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3703, line: 11, size: 320, elements: !3704)
!3703 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3704 = !{!3705, !3706, !3707, !3712}
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3702, file: !3703, line: 16, baseType: !755, size: 128)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3702, file: !3703, line: 17, baseType: !320, size: 64, offset: 128)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3702, file: !3703, line: 18, baseType: !3708, size: 64, offset: 192)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3709, size: 64)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{null, !3711}
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3702, file: !3703, line: 19, baseType: !530, size: 32, offset: 256)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3691, file: !3692, line: 50, baseType: !320, size: 64, offset: 640)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3691, file: !3692, line: 51, baseType: !1446, size: 64, offset: 704)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3691, file: !3692, line: 52, baseType: !1446, size: 64, offset: 768)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3691, file: !3692, line: 53, baseType: !1446, size: 64, offset: 832)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3691, file: !3692, line: 54, baseType: !1446, size: 64, offset: 896)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3691, file: !3692, line: 55, baseType: !1446, size: 64, offset: 960)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3691, file: !3692, line: 56, baseType: !320, size: 64, offset: 1024)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3691, file: !3692, line: 57, baseType: !320, size: 64, offset: 1088)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3691, file: !3692, line: 58, baseType: !320, size: 64, offset: 1152)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3691, file: !3692, line: 59, baseType: !320, size: 64, offset: 1216)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3691, file: !3692, line: 60, baseType: !320, size: 64, offset: 1280)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3691, file: !3692, line: 61, baseType: !333, size: 64, offset: 1344)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3691, file: !3692, line: 62, baseType: !299, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3691, file: !3692, line: 63, baseType: !299, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3672, file: !80, line: 583, baseType: !299, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3672, file: !80, line: 584, baseType: !299, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3672, file: !80, line: 585, baseType: !299, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3672, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3672, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3672, file: !80, line: 592, baseType: !1438, size: 512, offset: 576)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3672, file: !80, line: 593, baseType: !536, size: 64, offset: 1088)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3672, file: !80, line: 594, baseType: !2102, size: 256, offset: 1152)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3672, file: !80, line: 595, baseType: !1624, size: 128, offset: 1408)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3672, file: !80, line: 596, baseType: !3699, size: 64, offset: 1536)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3672, file: !80, line: 597, baseType: !277, size: 32, offset: 1600)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3672, file: !80, line: 598, baseType: !277, size: 32, offset: 1632)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3672, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3672, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3672, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3672, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3672, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3672, file: !80, line: 604, baseType: !299, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3672, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3672, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3672, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3672, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3672, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3672, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3672, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3672, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3672, file: !80, line: 613, baseType: !281, size: 32, offset: 1792)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3672, file: !80, line: 614, baseType: !281, size: 32, offset: 1824)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3672, file: !80, line: 615, baseType: !536, size: 64, offset: 1856)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3672, file: !80, line: 616, baseType: !536, size: 64, offset: 1920)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3672, file: !80, line: 617, baseType: !536, size: 64, offset: 1984)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3672, file: !80, line: 618, baseType: !536, size: 64, offset: 2048)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3672, file: !80, line: 620, baseType: !3760, size: 64, offset: 2112)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3762)
!3762 = !{!3763, !3764, !3765, !3766}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3761, file: !80, line: 537, baseType: !350)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3761, file: !80, line: 538, baseType: !7, size: 32)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3761, file: !80, line: 540, baseType: !285, size: 128, offset: 64)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3761, file: !80, line: 543, baseType: !3767, size: 64, offset: 192)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3672, file: !80, line: 621, baseType: !3770, size: 64, offset: 2176)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DISubroutineType(types: !3772)
!3772 = !{null, !333, !1587}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3672, file: !80, line: 622, baseType: !3774, size: 64, offset: 2240)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !334, file: !73, line: 486, baseType: !3777, size: 64, offset: 4096)
!3777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3778, size: 64)
!3778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3779)
!3779 = !{!3780, !3781, !3782, !3786, !3787, !3788}
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3778, file: !80, line: 643, baseType: !3539, size: 1472)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3778, file: !80, line: 644, baseType: !3542, size: 64, offset: 1472)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3778, file: !80, line: 645, baseType: !3783, size: 64, offset: 1536)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = !DISubroutineType(types: !3785)
!3785 = !{null, !333, !299}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3778, file: !80, line: 646, baseType: !3542, size: 64, offset: 1600)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3778, file: !80, line: 647, baseType: !3533, size: 64, offset: 1664)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3778, file: !80, line: 648, baseType: !3533, size: 64, offset: 1728)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !334, file: !73, line: 493, baseType: !3790, size: 64, offset: 4160)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !94, line: 162, size: 1088, elements: !3792)
!3792 = !{!3793, !3794, !3795, !4126, !4127, !4128, !4129, !4130, !4131, !4257, !4258, !4259, !4260, !4261, !4262, !4263}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3791, file: !94, line: 163, baseType: !285, size: 128)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3791, file: !94, line: 164, baseType: !309, size: 64, offset: 128)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3791, file: !94, line: 165, baseType: !3796, size: 64, offset: 192)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3798)
!3798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !94, line: 105, size: 640, elements: !3799)
!3799 = !{!3800, !3918, !3929, !3934, !3938, !3945, !3949, !3953, !4118, !4122}
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3798, file: !94, line: 106, baseType: !3801, size: 64)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 64)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!281, !3790, !3804, !93}
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3806, line: 51, size: 1344, elements: !3807)
!3806 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3807 = !{!3808, !3809, !3811, !3812, !3902, !3911, !3912, !3913, !3914, !3915, !3916, !3917}
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3805, file: !3806, line: 52, baseType: !309, size: 64)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3805, file: !3806, line: 53, baseType: !3810, size: 32, offset: 64)
!3810 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3806, line: 28, baseType: !530)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3805, file: !3806, line: 54, baseType: !309, size: 64, offset: 128)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3805, file: !3806, line: 55, baseType: !3813, size: 192, offset: 192)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3814, line: 17, size: 192, elements: !3815)
!3814 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3815 = !{!3816, !3818, !3901}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3813, file: !3814, line: 18, baseType: !3817, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3813, file: !3814, line: 19, baseType: !3819, size: 64, offset: 64)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3821)
!3821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3814, line: 110, size: 1152, elements: !3822)
!3822 = !{!3823, !3827, !3831, !3837, !3843, !3847, !3851, !3856, !3860, !3861, !3865, !3869, !3873, !3884, !3885, !3886, !3887, !3897}
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3821, file: !3814, line: 111, baseType: !3824, size: 64)
!3824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3825, size: 64)
!3825 = !DISubroutineType(types: !3826)
!3826 = !{!3817, !3817}
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3821, file: !3814, line: 112, baseType: !3828, size: 64, offset: 64)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{null, !3817}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3821, file: !3814, line: 113, baseType: !3832, size: 64, offset: 128)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{!299, !3835}
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3813)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3821, file: !3814, line: 114, baseType: !3838, size: 64, offset: 192)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!2270, !3835, !3841}
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3821, file: !3814, line: 116, baseType: !3844, size: 64, offset: 256)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DISubroutineType(types: !3846)
!3846 = !{!299, !3835, !309}
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3821, file: !3814, line: 118, baseType: !3848, size: 64, offset: 320)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{!281, !3835, !309, !7, !252, !437}
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3821, file: !3814, line: 123, baseType: !3852, size: 64, offset: 384)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DISubroutineType(types: !3854)
!3854 = !{!281, !3835, !309, !3855, !437}
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3821, file: !3814, line: 126, baseType: !3857, size: 64, offset: 448)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{!309, !3835}
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3821, file: !3814, line: 127, baseType: !3857, size: 64, offset: 512)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3821, file: !3814, line: 128, baseType: !3862, size: 64, offset: 576)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!3817, !3835}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3821, file: !3814, line: 130, baseType: !3866, size: 64, offset: 640)
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3867, size: 64)
!3867 = !DISubroutineType(types: !3868)
!3868 = !{!3817, !3835, !3817}
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3821, file: !3814, line: 133, baseType: !3870, size: 64, offset: 704)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!3817, !3835, !309}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3821, file: !3814, line: 135, baseType: !3874, size: 64, offset: 768)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DISubroutineType(types: !3876)
!3876 = !{!281, !3835, !309, !309, !7, !7, !3877}
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3814, line: 43, size: 640, elements: !3879)
!3879 = !{!3880, !3881, !3882}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3878, file: !3814, line: 44, baseType: !3817, size: 64)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3878, file: !3814, line: 45, baseType: !7, size: 32, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3878, file: !3814, line: 46, baseType: !3883, size: 512, offset: 128)
!3883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 512, elements: !1476)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3821, file: !3814, line: 140, baseType: !3866, size: 64, offset: 832)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3821, file: !3814, line: 143, baseType: !3862, size: 64, offset: 896)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3821, file: !3814, line: 145, baseType: !3824, size: 64, offset: 960)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3821, file: !3814, line: 146, baseType: !3888, size: 64, offset: 1024)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{!281, !3835, !3891}
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3814, line: 29, size: 128, elements: !3893)
!3893 = !{!3894, !3895, !3896}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3892, file: !3814, line: 30, baseType: !7, size: 32)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3892, file: !3814, line: 31, baseType: !7, size: 32, offset: 32)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3892, file: !3814, line: 32, baseType: !3835, size: 64, offset: 64)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3821, file: !3814, line: 148, baseType: !3898, size: 64, offset: 1088)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{!281, !3835, !333}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3813, file: !3814, line: 20, baseType: !333, size: 64, offset: 128)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3805, file: !3806, line: 57, baseType: !3903, size: 64, offset: 384)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!3904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3806, line: 31, size: 704, elements: !3905)
!3905 = !{!3906, !3907, !3908, !3909, !3910}
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3904, file: !3806, line: 32, baseType: !391, size: 64)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3904, file: !3806, line: 33, baseType: !281, size: 32, offset: 64)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3904, file: !3806, line: 34, baseType: !252, size: 64, offset: 128)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3904, file: !3806, line: 35, baseType: !3903, size: 64, offset: 192)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3904, file: !3806, line: 43, baseType: !458, size: 448, offset: 256)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3805, file: !3806, line: 58, baseType: !3903, size: 64, offset: 448)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3805, file: !3806, line: 59, baseType: !3804, size: 64, offset: 512)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3805, file: !3806, line: 60, baseType: !3804, size: 64, offset: 576)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3805, file: !3806, line: 61, baseType: !3804, size: 64, offset: 640)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3805, file: !3806, line: 63, baseType: !337, size: 512, offset: 704)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3805, file: !3806, line: 65, baseType: !320, size: 64, offset: 1216)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3805, file: !3806, line: 66, baseType: !252, size: 64, offset: 1280)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3798, file: !94, line: 108, baseType: !3919, size: 64, offset: 64)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = !DISubroutineType(types: !3921)
!3921 = !{!281, !3790, !3922, !93}
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !94, line: 63, size: 640, elements: !3924)
!3924 = !{!3925, !3926, !3927}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3923, file: !94, line: 64, baseType: !3817, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3923, file: !94, line: 65, baseType: !281, size: 32, offset: 64)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3923, file: !94, line: 66, baseType: !3928, size: 512, offset: 96)
!3928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, size: 512, elements: !1878)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3798, file: !94, line: 110, baseType: !3930, size: 64, offset: 128)
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!281, !3790, !7, !3933}
!3933 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !251, line: 164, baseType: !320)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3798, file: !94, line: 111, baseType: !3935, size: 64, offset: 192)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{null, !3790, !7}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3798, file: !94, line: 112, baseType: !3939, size: 64, offset: 256)
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = !DISubroutineType(types: !3941)
!3941 = !{!281, !3790, !3804, !3942, !7, !3944, !2826}
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !530)
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3798, file: !94, line: 117, baseType: !3946, size: 64, offset: 320)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!281, !3790, !7, !7, !252}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3798, file: !94, line: 119, baseType: !3950, size: 64, offset: 384)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{null, !3790, !7, !7}
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3798, file: !94, line: 121, baseType: !3954, size: 64, offset: 448)
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3955, size: 64)
!3955 = !DISubroutineType(types: !3956)
!3956 = !{!281, !3790, !3957, !299}
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !115, line: 175, size: 448, elements: !3959)
!3959 = !{!3960, !3961, !3962, !3963, !4036, !4115, !4116, !4117}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3958, file: !115, line: 176, baseType: !530, size: 32)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3958, file: !115, line: 177, baseType: !7, size: 32, offset: 32)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !3958, file: !115, line: 178, baseType: !320, size: 64, offset: 64)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3958, file: !115, line: 179, baseType: !3964, size: 64, offset: 128)
!3964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3965, size: 64)
!3965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !115, line: 145, size: 256, elements: !3966)
!3966 = !{!3967, !3968, !3969, !4033}
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !3965, file: !115, line: 146, baseType: !7, size: 32)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !3965, file: !115, line: 150, baseType: !252, size: 64, offset: 64)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !3965, file: !115, line: 151, baseType: !3970, size: 64, offset: 128)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !3972, line: 85, size: 768, elements: !3973)
!3972 = !DIFile(filename: "./include/linux/msi.h", directory: "/home/lizy2001/genbc/linux")
!3973 = !{!3974, !3975, !3976, !3977, !3978, !3984, !3990, !3994, !3995}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3971, file: !3972, line: 87, baseType: !285, size: 128)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3971, file: !3972, line: 88, baseType: !7, size: 32, offset: 128)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "nvec_used", scope: !3971, file: !3972, line: 89, baseType: !7, size: 32, offset: 160)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3971, file: !3972, line: 90, baseType: !333, size: 64, offset: 192)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !3971, file: !3972, line: 91, baseType: !3979, size: 96, offset: 256)
!3979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !3972, line: 8, size: 96, elements: !3980)
!3980 = !{!3981, !3982, !3983}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "address_lo", scope: !3979, file: !3972, line: 9, baseType: !530, size: 32)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "address_hi", scope: !3979, file: !3972, line: 10, baseType: !530, size: 32, offset: 32)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3979, file: !3972, line: 11, baseType: !530, size: 32, offset: 64)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !3971, file: !3972, line: 92, baseType: !3985, size: 64, offset: 384)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_affinity_desc", file: !108, line: 308, size: 128, elements: !3987)
!3987 = !{!3988, !3989}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3986, file: !108, line: 309, baseType: !1513, size: 64)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !3986, file: !108, line: 310, baseType: !7, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "write_msi_msg", scope: !3971, file: !3972, line: 97, baseType: !3991, size: 64, offset: 448)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{null, !3970, !252}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "write_msi_msg_data", scope: !3971, file: !3972, line: 98, baseType: !252, size: 64, offset: 512)
!3995 = !DIDerivedType(tag: DW_TAG_member, scope: !3971, file: !3972, line: 100, baseType: !3996, size: 192, offset: 576)
!3996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3971, file: !3972, line: 100, size: 192, elements: !3997)
!3997 = !{!3998, !4018, !4025, !4029}
!3998 = !DIDerivedType(tag: DW_TAG_member, scope: !3996, file: !3972, line: 102, baseType: !3999, size: 192)
!3999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3996, file: !3972, line: 102, size: 192, elements: !4000)
!4000 = !{!4001, !4002, !4013}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "masked", scope: !3999, file: !3972, line: 103, baseType: !530, size: 32)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "msi_attrib", scope: !3999, file: !3972, line: 113, baseType: !4003, size: 64, offset: 32)
!4003 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3999, file: !3972, line: 104, size: 64, elements: !4004)
!4004 = !{!4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "is_msix", scope: !4003, file: !3972, line: 105, baseType: !1498, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "multiple", scope: !4003, file: !3972, line: 106, baseType: !1498, size: 3, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "multi_cap", scope: !4003, file: !3972, line: 107, baseType: !1498, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "maskbit", scope: !4003, file: !3972, line: 108, baseType: !1498, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "is_64", scope: !4003, file: !3972, line: 109, baseType: !1498, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtual", scope: !4003, file: !3972, line: 110, baseType: !1498, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "entry_nr", scope: !4003, file: !3972, line: 111, baseType: !971, size: 16, offset: 16)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "default_irq", scope: !4003, file: !3972, line: 112, baseType: !7, size: 32, offset: 32)
!4013 = !DIDerivedType(tag: DW_TAG_member, scope: !3999, file: !3972, line: 114, baseType: !4014, size: 64, offset: 128)
!4014 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3999, file: !3972, line: 114, size: 64, elements: !4015)
!4015 = !{!4016, !4017}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pos", scope: !4014, file: !3972, line: 115, baseType: !1498, size: 8)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "mask_base", scope: !4014, file: !3972, line: 116, baseType: !252, size: 64)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "platform", scope: !3996, file: !3972, line: 127, baseType: !4019, size: 128)
!4019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_msi_desc", file: !3972, line: 37, size: 128, elements: !4020)
!4020 = !{!4021, !4024}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "msi_priv_data", scope: !4019, file: !3972, line: 38, baseType: !4022, size: 64)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DICompositeType(tag: DW_TAG_structure_type, name: "platform_msi_priv_data", file: !3972, line: 19, flags: DIFlagFwdDecl)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "msi_index", scope: !4019, file: !3972, line: 39, baseType: !971, size: 16, offset: 64)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "fsl_mc", scope: !3996, file: !3972, line: 128, baseType: !4026, size: 16)
!4026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fsl_mc_msi_desc", file: !3972, line: 46, size: 16, elements: !4027)
!4027 = !{!4028}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "msi_index", scope: !4026, file: !3972, line: 47, baseType: !971, size: 16)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "inta", scope: !3996, file: !3972, line: 129, baseType: !4030, size: 16)
!4030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ti_sci_inta_msi_desc", file: !3972, line: 54, size: 16, elements: !4031)
!4031 = !{!4032}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index", scope: !4030, file: !3972, line: 55, baseType: !971, size: 16)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !3965, file: !115, line: 152, baseType: !4034, size: 64, offset: 192)
!4034 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1512, line: 756, baseType: !4035)
!4035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1513, size: 64, elements: !321)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !3958, file: !115, line: 180, baseType: !4037, size: 64, offset: 192)
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4038, size: 64)
!4038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !115, line: 503, size: 2304, elements: !4039)
!4039 = !{!4040, !4041, !4042, !4046, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4063, !4067, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4084, !4085, !4086, !4091, !4092, !4096, !4100, !4104, !4108, !4112, !4113, !4114}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !4038, file: !115, line: 504, baseType: !333, size: 64)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4038, file: !115, line: 505, baseType: !309, size: 64, offset: 64)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !4038, file: !115, line: 506, baseType: !4043, size: 64, offset: 128)
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{!7, !3957}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !4038, file: !115, line: 507, baseType: !4047, size: 64, offset: 192)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{null, !3957}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !4038, file: !115, line: 508, baseType: !4047, size: 64, offset: 256)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !4038, file: !115, line: 509, baseType: !4047, size: 64, offset: 320)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !4038, file: !115, line: 511, baseType: !4047, size: 64, offset: 384)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !4038, file: !115, line: 512, baseType: !4047, size: 64, offset: 448)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !4038, file: !115, line: 513, baseType: !4047, size: 64, offset: 512)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !4038, file: !115, line: 514, baseType: !4047, size: 64, offset: 576)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !4038, file: !115, line: 515, baseType: !4047, size: 64, offset: 640)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !4038, file: !115, line: 517, baseType: !4058, size: 64, offset: 704)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{!281, !3957, !4061, !299}
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !4038, file: !115, line: 518, baseType: !4064, size: 64, offset: 768)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = !DISubroutineType(types: !4066)
!4066 = !{!281, !3957}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !4038, file: !115, line: 519, baseType: !4068, size: 64, offset: 832)
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4069, size: 64)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!281, !3957, !7}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !4038, file: !115, line: 520, baseType: !4068, size: 64, offset: 896)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !4038, file: !115, line: 522, baseType: !4047, size: 64, offset: 960)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !4038, file: !115, line: 523, baseType: !4047, size: 64, offset: 1024)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !4038, file: !115, line: 525, baseType: !4047, size: 64, offset: 1088)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !4038, file: !115, line: 526, baseType: !4047, size: 64, offset: 1152)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !4038, file: !115, line: 528, baseType: !4047, size: 64, offset: 1216)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !4038, file: !115, line: 529, baseType: !4047, size: 64, offset: 1280)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !4038, file: !115, line: 530, baseType: !4047, size: 64, offset: 1344)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !4038, file: !115, line: 532, baseType: !4047, size: 64, offset: 1408)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !4038, file: !115, line: 534, baseType: !4081, size: 64, offset: 1472)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{null, !3957, !827}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !4038, file: !115, line: 535, baseType: !4064, size: 64, offset: 1536)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !4038, file: !115, line: 536, baseType: !4047, size: 64, offset: 1600)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !4038, file: !115, line: 538, baseType: !4087, size: 64, offset: 1664)
!4087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4088, size: 64)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{null, !3957, !4090}
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !4038, file: !115, line: 539, baseType: !4087, size: 64, offset: 1728)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !4038, file: !115, line: 541, baseType: !4093, size: 64, offset: 1792)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{!281, !3957, !107, !1043}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !4038, file: !115, line: 542, baseType: !4097, size: 64, offset: 1856)
!4097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4098, size: 64)
!4098 = !DISubroutineType(types: !4099)
!4099 = !{!281, !3957, !107, !299}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !4038, file: !115, line: 544, baseType: !4101, size: 64, offset: 1920)
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4102, size: 64)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{!281, !3957, !252}
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !4038, file: !115, line: 546, baseType: !4105, size: 64, offset: 1984)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{null, !3957, !7}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !4038, file: !115, line: 547, baseType: !4109, size: 64, offset: 2048)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{null, !3957, !4061}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !4038, file: !115, line: 549, baseType: !4064, size: 64, offset: 2112)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !4038, file: !115, line: 550, baseType: !4047, size: 64, offset: 2176)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4038, file: !115, line: 552, baseType: !320, size: 64, offset: 2240)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !3958, file: !115, line: 181, baseType: !3790, size: 64, offset: 256)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !3958, file: !115, line: 183, baseType: !3957, size: 64, offset: 320)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !3958, file: !115, line: 185, baseType: !252, size: 64, offset: 384)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3798, file: !94, line: 122, baseType: !4119, size: 64, offset: 512)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{null, !3790, !3957}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3798, file: !94, line: 123, baseType: !4123, size: 64, offset: 576)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!281, !3790, !3922, !3944, !2826}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3791, file: !94, line: 166, baseType: !252, size: 64, offset: 256)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3791, file: !94, line: 167, baseType: !7, size: 32, offset: 320)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3791, file: !94, line: 168, baseType: !7, size: 32, offset: 352)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3791, file: !94, line: 171, baseType: !3817, size: 64, offset: 384)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3791, file: !94, line: 172, baseType: !93, size: 32, offset: 448)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3791, file: !94, line: 173, baseType: !4132, size: 64, offset: 512)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !115, line: 1101, size: 192, elements: !4134)
!4134 = !{!4135, !4136, !4137, !4138, !4139, !4140}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_per_chip", scope: !4133, file: !115, line: 1102, baseType: !7, size: 32)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !4133, file: !115, line: 1103, baseType: !7, size: 32, offset: 32)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_clear", scope: !4133, file: !115, line: 1104, baseType: !7, size: 32, offset: 64)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_set", scope: !4133, file: !115, line: 1105, baseType: !7, size: 32, offset: 96)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "gc_flags", scope: !4133, file: !115, line: 1106, baseType: !114, size: 32, offset: 128)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4133, file: !115, line: 1107, baseType: !4141, offset: 192)
!4141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4142, elements: !2474)
!4142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4143, size: 64)
!4143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_generic", file: !115, line: 1051, size: 960, elements: !4144)
!4144 = !{!4145, !4146, !4147, !4151, !4155, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173}
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4143, file: !115, line: 1052, baseType: !892)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "reg_base", scope: !4143, file: !115, line: 1053, baseType: !252, size: 64)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "reg_readl", scope: !4143, file: !115, line: 1054, baseType: !4148, size: 64, offset: 64)
!4148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4149, size: 64)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{!530, !252}
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "reg_writel", scope: !4143, file: !115, line: 1055, baseType: !4152, size: 64, offset: 128)
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4153, size: 64)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{null, !530, !252}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4143, file: !115, line: 1056, baseType: !4156, size: 64, offset: 192)
!4156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!4157 = !DISubroutineType(types: !4158)
!4158 = !{null, !4142}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4143, file: !115, line: 1057, baseType: !4156, size: 64, offset: 256)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !4143, file: !115, line: 1058, baseType: !7, size: 32, offset: 320)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cnt", scope: !4143, file: !115, line: 1059, baseType: !7, size: 32, offset: 352)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !4143, file: !115, line: 1060, baseType: !530, size: 32, offset: 384)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "type_cache", scope: !4143, file: !115, line: 1061, baseType: !530, size: 32, offset: 416)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "polarity_cache", scope: !4143, file: !115, line: 1062, baseType: !530, size: 32, offset: 448)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "wake_enabled", scope: !4143, file: !115, line: 1063, baseType: !530, size: 32, offset: 480)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "wake_active", scope: !4143, file: !115, line: 1064, baseType: !530, size: 32, offset: 512)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "num_ct", scope: !4143, file: !115, line: 1065, baseType: !7, size: 32, offset: 544)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4143, file: !115, line: 1066, baseType: !252, size: 64, offset: 576)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "installed", scope: !4143, file: !115, line: 1067, baseType: !320, size: 64, offset: 640)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4143, file: !115, line: 1068, baseType: !320, size: 64, offset: 704)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !4143, file: !115, line: 1069, baseType: !3790, size: 64, offset: 768)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4143, file: !115, line: 1070, baseType: !285, size: 128, offset: 832)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "chip_types", scope: !4143, file: !115, line: 1071, baseType: !4174, offset: 960)
!4174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4175, elements: !2474)
!4175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_type", file: !115, line: 1009, size: 2944, elements: !4176)
!4176 = !{!4177, !4178, !4188, !4254, !4255, !4256}
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !4175, file: !115, line: 1010, baseType: !4038, size: 2304)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4175, file: !115, line: 1011, baseType: !4179, size: 448, offset: 2304)
!4179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_regs", file: !115, line: 986, size: 448, elements: !4180)
!4180 = !{!4181, !4182, !4183, !4184, !4185, !4186, !4187}
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !4179, file: !115, line: 987, baseType: !320, size: 64)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !4179, file: !115, line: 988, baseType: !320, size: 64, offset: 64)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4179, file: !115, line: 989, baseType: !320, size: 64, offset: 128)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !4179, file: !115, line: 990, baseType: !320, size: 64, offset: 192)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "eoi", scope: !4179, file: !115, line: 991, baseType: !320, size: 64, offset: 256)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4179, file: !115, line: 992, baseType: !320, size: 64, offset: 320)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !4179, file: !115, line: 993, baseType: !320, size: 64, offset: 384)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4175, file: !115, line: 1012, baseType: !4189, size: 64, offset: 2752)
!4189 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_flow_handler_t", file: !4190, line: 12, baseType: !4191)
!4190 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{null, !4194}
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_desc", file: !4196, line: 55, size: 2880, elements: !4197)
!4196 = !DIFile(filename: "./include/linux/irqdesc.h", directory: "/home/lizy2001/genbc/linux")
!4197 = !{!4198, !4199, !4200, !4201, !4202, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "irq_common_data", scope: !4195, file: !4196, line: 56, baseType: !3965, size: 256)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "irq_data", scope: !4195, file: !4196, line: 57, baseType: !3958, size: 448, offset: 256)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "kstat_irqs", scope: !4195, file: !4196, line: 58, baseType: !2826, size: 64, offset: 704)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !4195, file: !4196, line: 59, baseType: !4189, size: 64, offset: 768)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4195, file: !4196, line: 60, baseType: !4203, size: 64, offset: 832)
!4203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4204, size: 64)
!4204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irqaction", file: !108, line: 110, size: 768, elements: !4205)
!4205 = !{!4206, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4204, file: !108, line: 111, baseType: !4207, size: 64)
!4207 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !108, line: 92, baseType: !4208)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!4211, !281, !252}
!4211 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !123, line: 17, baseType: !122)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4204, file: !108, line: 112, baseType: !252, size: 64, offset: 64)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_dev_id", scope: !4204, file: !108, line: 113, baseType: !252, size: 64, offset: 128)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4204, file: !108, line: 114, baseType: !4203, size: 64, offset: 192)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "thread_fn", scope: !4204, file: !108, line: 115, baseType: !4207, size: 64, offset: 256)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !4204, file: !108, line: 116, baseType: !1368, size: 64, offset: 320)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4204, file: !108, line: 117, baseType: !4203, size: 64, offset: 384)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4204, file: !108, line: 118, baseType: !7, size: 32, offset: 448)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4204, file: !108, line: 119, baseType: !7, size: 32, offset: 480)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "thread_flags", scope: !4204, file: !108, line: 120, baseType: !320, size: 64, offset: 512)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "thread_mask", scope: !4204, file: !108, line: 121, baseType: !320, size: 64, offset: 576)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4204, file: !108, line: 122, baseType: !309, size: 64, offset: 640)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4204, file: !108, line: 123, baseType: !4224, size: 64, offset: 704)
!4224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4225, size: 64)
!4225 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !108, line: 123, flags: DIFlagFwdDecl)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "status_use_accessors", scope: !4195, file: !4196, line: 61, baseType: !7, size: 32, offset: 896)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "core_internal_state__do_not_mess_with_it", scope: !4195, file: !4196, line: 62, baseType: !7, size: 32, offset: 928)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4195, file: !4196, line: 63, baseType: !7, size: 32, offset: 960)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "wake_depth", scope: !4195, file: !4196, line: 64, baseType: !7, size: 32, offset: 992)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "tot_count", scope: !4195, file: !4196, line: 65, baseType: !7, size: 32, offset: 1024)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !4195, file: !4196, line: 66, baseType: !7, size: 32, offset: 1056)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "last_unhandled", scope: !4195, file: !4196, line: 67, baseType: !320, size: 64, offset: 1088)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_unhandled", scope: !4195, file: !4196, line: 68, baseType: !7, size: 32, offset: 1152)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled", scope: !4195, file: !4196, line: 69, baseType: !277, size: 32, offset: 1184)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled_last", scope: !4195, file: !4196, line: 70, baseType: !281, size: 32, offset: 1216)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4195, file: !4196, line: 71, baseType: !892, offset: 1248)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_enabled", scope: !4195, file: !4196, line: 72, baseType: !4238, size: 64, offset: 1280)
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_affinity", scope: !4195, file: !4196, line: 73, baseType: !4061, size: 64, offset: 1344)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "threads_oneshot", scope: !4195, file: !4196, line: 81, baseType: !320, size: 64, offset: 1408)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "threads_active", scope: !4195, file: !4196, line: 82, baseType: !277, size: 32, offset: 1472)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_threads", scope: !4195, file: !4196, line: 83, baseType: !1624, size: 128, offset: 1536)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "nr_actions", scope: !4195, file: !4196, line: 85, baseType: !7, size: 32, offset: 1664)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "no_suspend_depth", scope: !4195, file: !4196, line: 86, baseType: !7, size: 32, offset: 1696)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "cond_suspend_depth", scope: !4195, file: !4196, line: 87, baseType: !7, size: 32, offset: 1728)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "force_resume_depth", scope: !4195, file: !4196, line: 88, baseType: !7, size: 32, offset: 1760)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4195, file: !4196, line: 91, baseType: !4224, size: 64, offset: 1792)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4195, file: !4196, line: 98, baseType: !480, size: 128, align: 64, offset: 1856)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4195, file: !4196, line: 99, baseType: !337, size: 512, offset: 1984)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "request_mutex", scope: !4195, file: !4196, line: 101, baseType: !1325, size: 192, offset: 2496)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "parent_irq", scope: !4195, file: !4196, line: 102, baseType: !281, size: 32, offset: 2688)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4195, file: !4196, line: 103, baseType: !746, size: 64, offset: 2752)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4195, file: !4196, line: 104, baseType: !309, size: 64, offset: 2816)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4175, file: !115, line: 1013, baseType: !530, size: 32, offset: 2816)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache_priv", scope: !4175, file: !115, line: 1014, baseType: !530, size: 32, offset: 2848)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !4175, file: !115, line: 1015, baseType: !1558, size: 64, offset: 2880)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3791, file: !94, line: 175, baseType: !3790, size: 64, offset: 576)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3791, file: !94, line: 182, baseType: !3933, size: 64, offset: 640)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3791, file: !94, line: 183, baseType: !7, size: 32, offset: 704)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3791, file: !94, line: 184, baseType: !7, size: 32, offset: 736)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3791, file: !94, line: 185, baseType: !855, size: 128, offset: 768)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3791, file: !94, line: 186, baseType: !1325, size: 192, offset: 896)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3791, file: !94, line: 187, baseType: !4264, offset: 1088)
!4264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2474)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !334, file: !73, line: 499, baseType: !285, size: 128, offset: 4224)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !334, file: !73, line: 502, baseType: !4267, size: 64, offset: 4352)
!4267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4268, size: 64)
!4268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4269)
!4269 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !334, file: !73, line: 504, baseType: !4271, size: 64, offset: 4416)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !334, file: !73, line: 505, baseType: !536, size: 64, offset: 4480)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !334, file: !73, line: 510, baseType: !536, size: 64, offset: 4544)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !334, file: !73, line: 511, baseType: !4275, size: 64, offset: 4608)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4277)
!4277 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !334, file: !73, line: 513, baseType: !4279, size: 64, offset: 4672)
!4279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4280, size: 64)
!4280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !4281)
!4281 = !{!4282, !4283}
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4280, file: !73, line: 293, baseType: !7, size: 32)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4280, file: !73, line: 294, baseType: !320, size: 64, offset: 64)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !334, file: !73, line: 515, baseType: !285, size: 128, offset: 4736)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !334, file: !73, line: 526, baseType: !4286, offset: 4864)
!4286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4287, line: 5, elements: !364)
!4287 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !334, file: !73, line: 528, baseType: !3804, size: 64, offset: 4864)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !334, file: !73, line: 529, baseType: !3817, size: 64, offset: 4928)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !334, file: !73, line: 534, baseType: !626, size: 32, offset: 4992)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !334, file: !73, line: 535, baseType: !530, size: 32, offset: 5024)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !334, file: !73, line: 537, baseType: !350, offset: 5056)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !334, file: !73, line: 538, baseType: !285, size: 128, offset: 5056)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !334, file: !73, line: 540, baseType: !4295, size: 64, offset: 5184)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4297, line: 54, size: 960, elements: !4298)
!4297 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4298 = !{!4299, !4300, !4301, !4302, !4303, !4304, !4305, !4309, !4313, !4314, !4315, !4316, !4320, !4324, !4325}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4296, file: !4297, line: 55, baseType: !309, size: 64)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4296, file: !4297, line: 56, baseType: !746, size: 64, offset: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4296, file: !4297, line: 58, baseType: !443, size: 64, offset: 128)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4296, file: !4297, line: 59, baseType: !443, size: 64, offset: 192)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4296, file: !4297, line: 60, baseType: !343, size: 64, offset: 256)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4296, file: !4297, line: 62, baseType: !3524, size: 64, offset: 320)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4296, file: !4297, line: 63, baseType: !4306, size: 64, offset: 384)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4307, size: 64)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{!391, !333, !3531}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4296, file: !4297, line: 65, baseType: !4310, size: 64, offset: 448)
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{null, !4295}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4296, file: !4297, line: 66, baseType: !3533, size: 64, offset: 512)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4296, file: !4297, line: 68, baseType: !3542, size: 64, offset: 576)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4296, file: !4297, line: 70, baseType: !3332, size: 64, offset: 640)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4296, file: !4297, line: 71, baseType: !4317, size: 64, offset: 704)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{!2270, !333}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4296, file: !4297, line: 73, baseType: !4321, size: 64, offset: 768)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{null, !333, !3364, !3365}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4296, file: !4297, line: 75, baseType: !3537, size: 64, offset: 832)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4296, file: !4297, line: 77, baseType: !3654, size: 64, offset: 896)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !334, file: !73, line: 541, baseType: !443, size: 64, offset: 5248)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !334, file: !73, line: 543, baseType: !3533, size: 64, offset: 5312)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !334, file: !73, line: 544, baseType: !4329, size: 64, offset: 5376)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !334, file: !73, line: 545, baseType: !4332, size: 64, offset: 5440)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !334, file: !73, line: 547, baseType: !299, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !334, file: !73, line: 548, baseType: !299, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !334, file: !73, line: 549, baseType: !299, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !334, file: !73, line: 550, baseType: !299, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !265, file: !129, line: 863, baseType: !746, size: 64, offset: 960)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "chan_ida", scope: !265, file: !129, line: 864, baseType: !4340, size: 128, offset: 1024)
!4340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3393, line: 244, size: 128, elements: !4341)
!4341 = !{!4342}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4340, file: !3393, line: 245, baseType: !855, size: 128)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mutex", scope: !265, file: !129, line: 865, baseType: !1325, size: 192, offset: 1152)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !265, file: !129, line: 867, baseType: !530, size: 32, offset: 1344)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !265, file: !129, line: 868, baseType: !530, size: 32, offset: 1376)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !265, file: !129, line: 869, baseType: !530, size: 32, offset: 1408)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !265, file: !129, line: 870, baseType: !530, size: 32, offset: 1440)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !265, file: !129, line: 871, baseType: !530, size: 32, offset: 1472)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !265, file: !129, line: 872, baseType: !530, size: 32, offset: 1504)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !265, file: !129, line: 873, baseType: !299, size: 8, offset: 1536)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !265, file: !129, line: 874, baseType: !143, size: 32, offset: 1568)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "device_alloc_chan_resources", scope: !265, file: !129, line: 876, baseType: !4353, size: 64, offset: 1600)
!4353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4354, size: 64)
!4354 = !DISubroutineType(types: !4355)
!4355 = !{!281, !301}
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "device_free_chan_resources", scope: !265, file: !129, line: 877, baseType: !4357, size: 64, offset: 1664)
!4357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 64)
!4358 = !DISubroutineType(types: !4359)
!4359 = !{null, !301}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memcpy", scope: !265, file: !129, line: 879, baseType: !4361, size: 64, offset: 1728)
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 64)
!4362 = !DISubroutineType(types: !4363)
!4363 = !{!4364, !301, !1072, !1072, !437, !320}
!4364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 64)
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_async_tx_descriptor", file: !129, line: 598, size: 704, elements: !4366)
!4366 = !{!4367, !4369, !4370, !4371, !4372, !4376, !4380, !4382, !4393, !4394, !4407, !4408}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !4365, file: !129, line: 599, baseType: !4368, size: 32)
!4368 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cookie_t", file: !129, line: 22, baseType: !1587)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4365, file: !129, line: 600, baseType: !148, size: 32, offset: 32)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !4365, file: !129, line: 601, baseType: !1072, size: 64, offset: 64)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4365, file: !129, line: 602, baseType: !301, size: 64, offset: 128)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "tx_submit", scope: !4365, file: !129, line: 603, baseType: !4373, size: 64, offset: 192)
!4373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4374, size: 64)
!4374 = !DISubroutineType(types: !4375)
!4375 = !{!4368, !4364}
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "desc_free", scope: !4365, file: !129, line: 604, baseType: !4377, size: 64, offset: 256)
!4377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4378, size: 64)
!4378 = !DISubroutineType(types: !4379)
!4379 = !{!281, !4364}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4365, file: !129, line: 605, baseType: !4381, size: 64, offset: 320)
!4381 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback", file: !129, line: 531, baseType: !583)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "callback_result", scope: !4365, file: !129, line: 606, baseType: !4383, size: 64, offset: 384)
!4383 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback_result", file: !129, line: 545, baseType: !4384)
!4384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4385, size: 64)
!4385 = !DISubroutineType(types: !4386)
!4386 = !{null, !252, !4387}
!4387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4388, size: 64)
!4388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4389)
!4389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_result", file: !129, line: 540, size: 64, elements: !4390)
!4390 = !{!4391, !4392}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4389, file: !129, line: 541, baseType: !160, size: 32)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !4389, file: !129, line: 542, baseType: !530, size: 32, offset: 32)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "callback_param", scope: !4365, file: !129, line: 607, baseType: !252, size: 64, offset: 448)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4365, file: !129, line: 608, baseType: !4395, size: 64, offset: 512)
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 64)
!4396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_unmap_data", file: !129, line: 548, size: 256, elements: !4397)
!4397 = !{!4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "map_cnt", scope: !4396, file: !129, line: 552, baseType: !1498, size: 8)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "to_cnt", scope: !4396, file: !129, line: 554, baseType: !1498, size: 8, offset: 8)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "from_cnt", scope: !4396, file: !129, line: 555, baseType: !1498, size: 8, offset: 16)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "bidi_cnt", scope: !4396, file: !129, line: 556, baseType: !1498, size: 8, offset: 24)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4396, file: !129, line: 557, baseType: !333, size: 64, offset: 64)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4396, file: !129, line: 558, baseType: !268, size: 32, offset: 128)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4396, file: !129, line: 559, baseType: !437, size: 64, offset: 192)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4396, file: !129, line: 560, baseType: !4406, offset: 256)
!4406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1072, elements: !2474)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_mode", scope: !4365, file: !129, line: 609, baseType: !128, size: 32, offset: 576)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_ops", scope: !4365, file: !129, line: 610, baseType: !4409, size: 64, offset: 640)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 64)
!4410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_descriptor_metadata_ops", file: !129, line: 565, size: 192, elements: !4411)
!4411 = !{!4412, !4416, !4421}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4410, file: !129, line: 566, baseType: !4413, size: 64)
!4413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4414, size: 64)
!4414 = !DISubroutineType(types: !4415)
!4415 = !{!281, !4364, !252, !437}
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "get_ptr", scope: !4410, file: !129, line: 569, baseType: !4417, size: 64, offset: 64)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 64)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!252, !4364, !4420, !4420}
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "set_len", scope: !4410, file: !129, line: 571, baseType: !4422, size: 64, offset: 128)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!281, !4364, !437}
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor", scope: !265, file: !129, line: 882, baseType: !4426, size: 64, offset: 1792)
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!4364, !301, !1072, !4429, !7, !437, !320}
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor_val", scope: !265, file: !129, line: 885, baseType: !4431, size: 64, offset: 1856)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!4364, !301, !4429, !7, !437, !4434, !320}
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq", scope: !265, file: !129, line: 888, baseType: !4436, size: 64, offset: 1920)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = !DISubroutineType(types: !4438)
!4438 = !{!4364, !301, !4429, !4429, !7, !540, !437, !320}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq_val", scope: !265, file: !129, line: 892, baseType: !4440, size: 64, offset: 1984)
!4440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4441, size: 64)
!4441 = !DISubroutineType(types: !4442)
!4442 = !{!4364, !301, !4429, !4429, !7, !540, !437, !4434, !320}
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset", scope: !265, file: !129, line: 896, baseType: !4444, size: 64, offset: 2048)
!4444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4445, size: 64)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!4364, !301, !1072, !281, !437, !320}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset_sg", scope: !265, file: !129, line: 899, baseType: !4448, size: 64, offset: 2112)
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4449, size: 64)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{!4364, !301, !4451, !7, !281, !320}
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4452, size: 64)
!4452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4453, line: 11, size: 256, elements: !4454)
!4453 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4454 = !{!4455, !4456, !4457, !4458, !4459}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4452, file: !4453, line: 12, baseType: !320, size: 64)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4452, file: !4453, line: 13, baseType: !7, size: 32, offset: 64)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4452, file: !4453, line: 14, baseType: !7, size: 32, offset: 96)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4452, file: !4453, line: 15, baseType: !1072, size: 64, offset: 128)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4452, file: !4453, line: 17, baseType: !7, size: 32, offset: 192)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_interrupt", scope: !265, file: !129, line: 902, baseType: !4461, size: 64, offset: 2176)
!4461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4462, size: 64)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{!4364, !301, !320}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_slave_sg", scope: !265, file: !129, line: 905, baseType: !4465, size: 64, offset: 2240)
!4465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4466, size: 64)
!4466 = !DISubroutineType(types: !4467)
!4467 = !{!4364, !301, !4451, !7, !170, !320, !252}
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_cyclic", scope: !265, file: !129, line: 909, baseType: !4469, size: 64, offset: 2304)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!4364, !301, !1072, !437, !437, !170, !320}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_interleaved_dma", scope: !265, file: !129, line: 913, baseType: !4473, size: 64, offset: 2368)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 64)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{!4364, !301, !4476, !320}
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 64)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_interleaved_template", file: !129, line: 150, size: 320, elements: !4478)
!4478 = !{!4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "src_start", scope: !4477, file: !129, line: 151, baseType: !1072, size: 64)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "dst_start", scope: !4477, file: !129, line: 152, baseType: !1072, size: 64, offset: 64)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4477, file: !129, line: 153, baseType: !170, size: 32, offset: 128)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "src_inc", scope: !4477, file: !129, line: 154, baseType: !299, size: 8, offset: 160)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "dst_inc", scope: !4477, file: !129, line: 155, baseType: !299, size: 8, offset: 168)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "src_sgl", scope: !4477, file: !129, line: 156, baseType: !299, size: 8, offset: 176)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "dst_sgl", scope: !4477, file: !129, line: 157, baseType: !299, size: 8, offset: 184)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "numf", scope: !4477, file: !129, line: 158, baseType: !437, size: 64, offset: 192)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !4477, file: !129, line: 159, baseType: !437, size: 64, offset: 256)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !4477, file: !129, line: 160, baseType: !4489, offset: 320)
!4489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4490, elements: !2474)
!4490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_chunk", file: !129, line: 125, size: 256, elements: !4491)
!4491 = !{!4492, !4493, !4494, !4495}
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4490, file: !129, line: 126, baseType: !437, size: 64)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "icg", scope: !4490, file: !129, line: 127, baseType: !437, size: 64, offset: 64)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "dst_icg", scope: !4490, file: !129, line: 128, baseType: !437, size: 64, offset: 128)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "src_icg", scope: !4490, file: !129, line: 129, baseType: !437, size: 64, offset: 192)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_imm_data", scope: !265, file: !129, line: 916, baseType: !4497, size: 64, offset: 2432)
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4498, size: 64)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{!4364, !301, !1072, !536, !320}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "device_caps", scope: !265, file: !129, line: 920, baseType: !4501, size: 64, offset: 2496)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 64)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{null, !301, !4504}
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_caps", file: !129, line: 497, size: 288, elements: !4506)
!4506 = !{!4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !4505, file: !129, line: 498, baseType: !530, size: 32)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !4505, file: !129, line: 499, baseType: !530, size: 32, offset: 32)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !4505, file: !129, line: 500, baseType: !530, size: 32, offset: 64)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !4505, file: !129, line: 501, baseType: !530, size: 32, offset: 96)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !4505, file: !129, line: 502, baseType: !530, size: 32, offset: 128)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !4505, file: !129, line: 503, baseType: !530, size: 32, offset: 160)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pause", scope: !4505, file: !129, line: 504, baseType: !299, size: 8, offset: 192)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_resume", scope: !4505, file: !129, line: 505, baseType: !299, size: 8, offset: 200)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_terminate", scope: !4505, file: !129, line: 506, baseType: !299, size: 8, offset: 208)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !4505, file: !129, line: 507, baseType: !143, size: 32, offset: 224)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !4505, file: !129, line: 508, baseType: !299, size: 8, offset: 256)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "device_config", scope: !265, file: !129, line: 922, baseType: !4519, size: 64, offset: 2560)
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 64)
!4520 = !DISubroutineType(types: !4521)
!4521 = !{!281, !301, !4522}
!4522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 64)
!4523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_config", file: !129, line: 434, size: 448, elements: !4524)
!4524 = !{!4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !4523, file: !129, line: 435, baseType: !170, size: 32)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr", scope: !4523, file: !129, line: 436, baseType: !2268, size: 64, offset: 64)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr", scope: !4523, file: !129, line: 437, baseType: !2268, size: 64, offset: 128)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_width", scope: !4523, file: !129, line: 438, baseType: !177, size: 32, offset: 192)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_width", scope: !4523, file: !129, line: 439, baseType: !177, size: 32, offset: 224)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "src_maxburst", scope: !4523, file: !129, line: 440, baseType: !530, size: 32, offset: 256)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "dst_maxburst", scope: !4523, file: !129, line: 441, baseType: !530, size: 32, offset: 288)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "src_port_window_size", scope: !4523, file: !129, line: 442, baseType: !530, size: 32, offset: 320)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "dst_port_window_size", scope: !4523, file: !129, line: 443, baseType: !530, size: 32, offset: 352)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "device_fc", scope: !4523, file: !129, line: 444, baseType: !299, size: 8, offset: 384)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "slave_id", scope: !4523, file: !129, line: 445, baseType: !7, size: 32, offset: 416)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "device_pause", scope: !265, file: !129, line: 924, baseType: !4353, size: 64, offset: 2624)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "device_resume", scope: !265, file: !129, line: 925, baseType: !4353, size: 64, offset: 2688)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "device_terminate_all", scope: !265, file: !129, line: 926, baseType: !4353, size: 64, offset: 2752)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "device_synchronize", scope: !265, file: !129, line: 927, baseType: !4357, size: 64, offset: 2816)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "device_tx_status", scope: !265, file: !129, line: 929, baseType: !4541, size: 64, offset: 2880)
!4541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4542, size: 64)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!188, !301, !4368, !4544}
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4545, size: 64)
!4545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_tx_state", file: !129, line: 721, size: 128, elements: !4546)
!4546 = !{!4547, !4548, !4549, !4550}
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4545, file: !129, line: 722, baseType: !4368, size: 32)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4545, file: !129, line: 723, baseType: !4368, size: 32, offset: 32)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !4545, file: !129, line: 724, baseType: !530, size: 32, offset: 64)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "in_flight_bytes", scope: !4545, file: !129, line: 725, baseType: !530, size: 32, offset: 96)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "device_issue_pending", scope: !265, file: !129, line: 932, baseType: !4357, size: 64, offset: 2944)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "device_release", scope: !265, file: !129, line: 933, baseType: !4553, size: 64, offset: 3008)
!4553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4554, size: 64)
!4554 = !DISubroutineType(types: !4555)
!4555 = !{null, !264}
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !261, file: !129, line: 331, baseType: !333, size: 64, offset: 64)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !261, file: !129, line: 332, baseType: !4368, size: 32, offset: 128)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "completed_cookie", scope: !261, file: !129, line: 333, baseType: !4368, size: 32, offset: 160)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "chan_id", scope: !261, file: !129, line: 336, baseType: !281, size: 32, offset: 192)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !261, file: !129, line: 337, baseType: !4561, size: 64, offset: 256)
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4562, size: 64)
!4562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_dev", file: !129, line: 361, size: 5696, elements: !4563)
!4563 = !{!4564, !4565, !4566}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4562, file: !129, line: 362, baseType: !301, size: 64)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4562, file: !129, line: 363, baseType: !334, size: 5568, offset: 64)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4562, file: !129, line: 364, baseType: !281, size: 32, offset: 5632)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !261, file: !129, line: 338, baseType: !309, size: 64, offset: 320)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "device_node", scope: !261, file: !129, line: 343, baseType: !285, size: 128, offset: 384)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !261, file: !129, line: 344, baseType: !4570, size: 64, offset: 512)
!4570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4571, size: 64)
!4571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_percpu", file: !129, line: 294, size: 128, elements: !4572)
!4572 = !{!4573, !4574}
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "memcpy_count", scope: !4571, file: !129, line: 296, baseType: !320, size: 64)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_transferred", scope: !4571, file: !129, line: 297, baseType: !320, size: 64, offset: 64)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "client_count", scope: !261, file: !129, line: 345, baseType: !281, size: 32, offset: 576)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "table_count", scope: !261, file: !129, line: 346, baseType: !281, size: 32, offset: 608)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "router", scope: !261, file: !129, line: 349, baseType: !4578, size: 64, offset: 640)
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4579, size: 64)
!4579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_router", file: !129, line: 305, size: 128, elements: !4580)
!4580 = !{!4581, !4582}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4579, file: !129, line: 306, baseType: !333, size: 64)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "route_free", scope: !4579, file: !129, line: 307, baseType: !4583, size: 64, offset: 64)
!4583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4584, size: 64)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{null, !333, !252}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "route_data", scope: !261, file: !129, line: 350, baseType: !252, size: 64, offset: 704)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !261, file: !129, line: 352, baseType: !252, size: 64, offset: 768)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !257, file: !258, line: 24, baseType: !4589, size: 320, offset: 832)
!4589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !108, line: 609, size: 320, elements: !4590)
!4590 = !{!4591, !4593, !4594, !4595, !4596, !4607}
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4589, file: !108, line: 611, baseType: !4592, size: 64)
!4592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4589, size: 64)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4589, file: !108, line: 612, baseType: !320, size: 64, offset: 64)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4589, file: !108, line: 613, baseType: !277, size: 32, offset: 128)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !4589, file: !108, line: 614, baseType: !299, size: 8, offset: 160)
!4596 = !DIDerivedType(tag: DW_TAG_member, scope: !4589, file: !108, line: 615, baseType: !4597, size: 64, offset: 192)
!4597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4589, file: !108, line: 615, size: 64, elements: !4598)
!4598 = !{!4599, !4603}
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4597, file: !108, line: 616, baseType: !4600, size: 64)
!4600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4601, size: 64)
!4601 = !DISubroutineType(types: !4602)
!4602 = !{null, !320}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4597, file: !108, line: 617, baseType: !4604, size: 64)
!4604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4605, size: 64)
!4605 = !DISubroutineType(types: !4606)
!4606 = !{null, !4592}
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4589, file: !108, line: 619, baseType: !320, size: 64, offset: 256)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "desc_free", scope: !257, file: !258, line: 25, baseType: !4609, size: 64, offset: 1152)
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4610, size: 64)
!4610 = !DISubroutineType(types: !4611)
!4611 = !{null, !4612}
!4612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4613, size: 64)
!4613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "virt_dma_desc", file: !258, line: 15, size: 896, elements: !4614)
!4614 = !{!4615, !4616, !4617}
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4613, file: !258, line: 16, baseType: !4365, size: 704)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "tx_result", scope: !4613, file: !258, line: 17, baseType: !4389, size: 64, offset: 704)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4613, file: !258, line: 19, baseType: !285, size: 128, offset: 768)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !257, file: !258, line: 27, baseType: !350, offset: 1216)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "desc_allocated", scope: !257, file: !258, line: 30, baseType: !285, size: 128, offset: 1216)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "desc_submitted", scope: !257, file: !258, line: 31, baseType: !285, size: 128, offset: 1344)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "desc_issued", scope: !257, file: !258, line: 32, baseType: !285, size: 128, offset: 1472)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "desc_completed", scope: !257, file: !258, line: 33, baseType: !285, size: 128, offset: 1600)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "desc_terminated", scope: !257, file: !258, line: 34, baseType: !285, size: 128, offset: 1728)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic", scope: !257, file: !258, line: 36, baseType: !4612, size: 64, offset: 1856)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !254, file: !196, line: 81, baseType: !4626, size: 64, offset: 1920)
!4626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4627, size: 64)
!4627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_edma_chip", file: !4628, line: 24, size: 192, elements: !4629)
!4628 = !DIFile(filename: "./include/linux/dma/edma.h", directory: "/home/lizy2001/genbc/linux")
!4629 = !{!4630, !4631, !4632, !4633}
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4627, file: !4628, line: 25, baseType: !333, size: 64)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4627, file: !4628, line: 26, baseType: !281, size: 32, offset: 64)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4627, file: !4628, line: 27, baseType: !281, size: 32, offset: 96)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !4627, file: !4628, line: 28, baseType: !4634, size: 64, offset: 128)
!4634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4635, size: 64)
!4635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_edma", file: !196, line: 110, size: 7360, elements: !4636)
!4636 = !{!4637, !4639, !4640, !4641, !4642, !4643, !4649, !4650, !4651, !4659, !4660, !4661, !4662, !4663, !4672}
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4635, file: !196, line: 111, baseType: !4638, size: 160)
!4638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 160, elements: !2344)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "wr_edma", scope: !4635, file: !196, line: 113, baseType: !265, size: 3072, offset: 192)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "wr_ch_cnt", scope: !4635, file: !196, line: 114, baseType: !971, size: 16, offset: 3264)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "rd_edma", scope: !4635, file: !196, line: 116, baseType: !265, size: 3072, offset: 3328)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "rd_ch_cnt", scope: !4635, file: !196, line: 117, baseType: !971, size: 16, offset: 6400)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "rg_region", scope: !4635, file: !196, line: 119, baseType: !4644, size: 192, offset: 6464)
!4644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_edma_region", file: !196, line: 51, size: 192, elements: !4645)
!4645 = !{!4646, !4647, !4648}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "paddr", scope: !4644, file: !196, line: 52, baseType: !2268, size: 64)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "vaddr", scope: !4644, file: !196, line: 53, baseType: !252, size: 64, offset: 64)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !4644, file: !196, line: 54, baseType: !437, size: 64, offset: 128)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "ll_region", scope: !4635, file: !196, line: 120, baseType: !4644, size: 192, offset: 6656)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "dt_region", scope: !4635, file: !196, line: 121, baseType: !4644, size: 192, offset: 6848)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4635, file: !196, line: 123, baseType: !4652, size: 64, offset: 7040)
!4652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4653, size: 64)
!4653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_edma_irq", file: !196, line: 99, size: 256, elements: !4654)
!4654 = !{!4655, !4656, !4657, !4658}
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4653, file: !196, line: 100, baseType: !3979, size: 96)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "wr_mask", scope: !4653, file: !196, line: 101, baseType: !530, size: 32, offset: 96)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "rd_mask", scope: !4653, file: !196, line: 102, baseType: !530, size: 32, offset: 128)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !4653, file: !196, line: 103, baseType: !4634, size: 64, offset: 192)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "nr_irqs", scope: !4635, file: !196, line: 124, baseType: !281, size: 32, offset: 7104)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4635, file: !196, line: 126, baseType: !530, size: 32, offset: 7136)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4635, file: !196, line: 127, baseType: !195, size: 32, offset: 7168)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4635, file: !196, line: 129, baseType: !253, size: 64, offset: 7232)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4635, file: !196, line: 130, baseType: !4664, size: 64, offset: 7296)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4665, size: 64)
!4665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4666)
!4666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_edma_core_ops", file: !196, line: 106, size: 64, elements: !4667)
!4667 = !{!4668}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "irq_vector", scope: !4666, file: !196, line: 107, baseType: !4669, size: 64)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{!281, !333, !7}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4635, file: !196, line: 132, baseType: !892, offset: 7360)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !254, file: !196, line: 82, baseType: !281, size: 32, offset: 1984)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !254, file: !196, line: 83, baseType: !200, size: 32, offset: 2016)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "ll_off", scope: !254, file: !196, line: 85, baseType: !4676, size: 64, offset: 2048)
!4676 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !251, line: 21, baseType: !4677)
!4677 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_off_t", file: !424, line: 87, baseType: !425)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "ll_max", scope: !254, file: !196, line: 86, baseType: !530, size: 32, offset: 2112)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "dt_off", scope: !254, file: !196, line: 88, baseType: !4676, size: 64, offset: 2176)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !254, file: !196, line: 90, baseType: !3979, size: 96, offset: 2240)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !254, file: !196, line: 92, baseType: !204, size: 32, offset: 2336)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !254, file: !196, line: 93, baseType: !209, size: 32, offset: 2368)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "configured", scope: !254, file: !196, line: 94, baseType: !1498, size: 8, offset: 2400)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !254, file: !196, line: 96, baseType: !4523, size: 448, offset: 2432)
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4687)
!4687 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !288)
!4688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4689, size: 64)
!4689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_edma_desc", file: !196, line: 68, size: 1152, elements: !4690)
!4690 = !{!4691, !4692, !4693, !4710, !4711, !4712}
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !4689, file: !196, line: 69, baseType: !4613, size: 896)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4689, file: !196, line: 70, baseType: !253, size: 64, offset: 896)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !4689, file: !196, line: 71, baseType: !4694, size: 64, offset: 960)
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_edma_chunk", file: !196, line: 57, size: 512, elements: !4696)
!4696 = !{!4697, !4698, !4699, !4707, !4708, !4709}
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4695, file: !196, line: 58, baseType: !285, size: 128)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4695, file: !196, line: 59, baseType: !253, size: 64, offset: 128)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !4695, file: !196, line: 60, baseType: !4700, size: 64, offset: 192)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!4701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_edma_burst", file: !196, line: 44, size: 320, elements: !4702)
!4702 = !{!4703, !4704, !4705, !4706}
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4701, file: !196, line: 45, baseType: !285, size: 128)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "sar", scope: !4701, file: !196, line: 46, baseType: !536, size: 64, offset: 128)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "dar", scope: !4701, file: !196, line: 47, baseType: !536, size: 64, offset: 192)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !4701, file: !196, line: 48, baseType: !530, size: 32, offset: 256)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "bursts_alloc", scope: !4695, file: !196, line: 62, baseType: !530, size: 32, offset: 256)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !4695, file: !196, line: 64, baseType: !1498, size: 8, offset: 288)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "ll_region", scope: !4695, file: !196, line: 65, baseType: !4644, size: 192, offset: 320)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "chunks_alloc", scope: !4689, file: !196, line: 73, baseType: !530, size: 32, offset: 1024)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_sz", scope: !4689, file: !196, line: 75, baseType: !530, size: 32, offset: 1056)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_sz", scope: !4689, file: !196, line: 76, baseType: !530, size: 32, offset: 1088)
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4716, size: 64)
!4716 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !311)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!4718 = !{!0, !4719, !4724, !4729}
!4719 = !DIGlobalVariableExpression(var: !4720, expr: !DIExpression())
!4720 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license264", scope: !2, file: !3, line: 963, type: !4721, isLocal: true, isDefinition: true, align: 8)
!4721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !310, size: 184, elements: !4722)
!4722 = !{!4723}
!4723 = !DISubrange(count: 23)
!4724 = !DIGlobalVariableExpression(var: !4725, expr: !DIExpression())
!4725 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description265", scope: !2, file: !3, line: 964, type: !4726, isLocal: true, isDefinition: true, align: 8)
!4726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !310, size: 544, elements: !4727)
!4727 = !{!4728}
!4728 = !DISubrange(count: 68)
!4729 = !DIGlobalVariableExpression(var: !4730, expr: !DIExpression())
!4730 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author266", scope: !2, file: !3, line: 965, type: !4731, isLocal: true, isDefinition: true, align: 8)
!4731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !310, size: 512, elements: !396)
!4732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !310, size: 328, elements: !4733)
!4733 = !{!4734}
!4734 = !DISubrange(count: 41)
!4735 = !{!"rsp"}
!4736 = !{i32 7, !"Dwarf Version", i32 4}
!4737 = !{i32 2, !"Debug Info Version", i32 3}
!4738 = !{i32 1, !"wchar_size", i32 2}
!4739 = !{i32 1, !"Code Model", i32 2}
!4740 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4741 = distinct !DISubprogram(name: "dw_edma_probe", scope: !3, file: !3, line: 845, type: !4742, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !364)
!4742 = !DISubroutineType(types: !4743)
!4743 = !{!281, !4626}
!4744 = !DILocalVariable(name: "chip", arg: 1, scope: !4741, file: !3, line: 845, type: !4626)
!4745 = !DILocation(line: 845, column: 40, scope: !4741)
!4746 = !DILocalVariable(name: "dev", scope: !4741, file: !3, line: 847, type: !333)
!4747 = !DILocation(line: 847, column: 17, scope: !4741)
!4748 = !DILocalVariable(name: "dw", scope: !4741, file: !3, line: 848, type: !4634)
!4749 = !DILocation(line: 848, column: 18, scope: !4741)
!4750 = !DILocalVariable(name: "wr_alloc", scope: !4741, file: !3, line: 849, type: !530)
!4751 = !DILocation(line: 849, column: 6, scope: !4741)
!4752 = !DILocalVariable(name: "rd_alloc", scope: !4741, file: !3, line: 850, type: !530)
!4753 = !DILocation(line: 850, column: 6, scope: !4741)
!4754 = !DILocalVariable(name: "i", scope: !4741, file: !3, line: 851, type: !281)
!4755 = !DILocation(line: 851, column: 6, scope: !4741)
!4756 = !DILocalVariable(name: "err", scope: !4741, file: !3, line: 851, type: !281)
!4757 = !DILocation(line: 851, column: 9, scope: !4741)
!4758 = !DILocation(line: 853, column: 7, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 853, column: 6)
!4760 = !DILocation(line: 853, column: 6, scope: !4741)
!4761 = !DILocation(line: 854, column: 3, scope: !4759)
!4762 = !DILocation(line: 856, column: 8, scope: !4741)
!4763 = !DILocation(line: 856, column: 14, scope: !4741)
!4764 = !DILocation(line: 856, column: 6, scope: !4741)
!4765 = !DILocation(line: 857, column: 7, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 857, column: 6)
!4767 = !DILocation(line: 857, column: 6, scope: !4741)
!4768 = !DILocation(line: 858, column: 3, scope: !4766)
!4769 = !DILocation(line: 860, column: 7, scope: !4741)
!4770 = !DILocation(line: 860, column: 13, scope: !4741)
!4771 = !DILocation(line: 860, column: 5, scope: !4741)
!4772 = !DILocation(line: 861, column: 7, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 861, column: 6)
!4774 = !DILocation(line: 861, column: 10, scope: !4773)
!4775 = !DILocation(line: 861, column: 14, scope: !4773)
!4776 = !DILocation(line: 861, column: 18, scope: !4773)
!4777 = !DILocation(line: 861, column: 22, scope: !4773)
!4778 = !DILocation(line: 861, column: 26, scope: !4773)
!4779 = !DILocation(line: 861, column: 30, scope: !4773)
!4780 = !DILocation(line: 861, column: 34, scope: !4773)
!4781 = !DILocation(line: 861, column: 38, scope: !4773)
!4782 = !DILocation(line: 861, column: 42, scope: !4773)
!4783 = !DILocation(line: 861, column: 47, scope: !4773)
!4784 = !DILocation(line: 861, column: 6, scope: !4741)
!4785 = !DILocation(line: 862, column: 3, scope: !4773)
!4786 = !DILocation(line: 864, column: 2, scope: !4741)
!4787 = !DILocation(line: 864, column: 2, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 864, column: 2)
!4789 = !DILocation(line: 867, column: 43, scope: !4741)
!4790 = !DILocation(line: 867, column: 18, scope: !4741)
!4791 = !DILocation(line: 867, column: 2, scope: !4741)
!4792 = !DILocation(line: 867, column: 6, scope: !4741)
!4793 = !DILocation(line: 867, column: 16, scope: !4741)
!4794 = !DILocation(line: 868, column: 7, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 868, column: 6)
!4796 = !DILocation(line: 868, column: 11, scope: !4795)
!4797 = !DILocation(line: 868, column: 6, scope: !4741)
!4798 = !DILocation(line: 869, column: 3, scope: !4795)
!4799 = !DILocation(line: 872, column: 43, scope: !4741)
!4800 = !DILocation(line: 872, column: 18, scope: !4741)
!4801 = !DILocation(line: 872, column: 2, scope: !4741)
!4802 = !DILocation(line: 872, column: 6, scope: !4741)
!4803 = !DILocation(line: 872, column: 16, scope: !4741)
!4804 = !DILocation(line: 873, column: 7, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 873, column: 6)
!4806 = !DILocation(line: 873, column: 11, scope: !4805)
!4807 = !DILocation(line: 873, column: 6, scope: !4741)
!4808 = !DILocation(line: 874, column: 3, scope: !4805)
!4809 = !DILocation(line: 880, column: 26, scope: !4741)
!4810 = !DILocation(line: 880, column: 31, scope: !4741)
!4811 = !DILocation(line: 880, column: 35, scope: !4741)
!4812 = !DILocation(line: 880, column: 47, scope: !4741)
!4813 = !DILocation(line: 880, column: 51, scope: !4741)
!4814 = !DILocation(line: 880, column: 45, scope: !4741)
!4815 = !DILocation(line: 880, column: 13, scope: !4741)
!4816 = !DILocation(line: 880, column: 2, scope: !4741)
!4817 = !DILocation(line: 880, column: 6, scope: !4741)
!4818 = !DILocation(line: 880, column: 11, scope: !4741)
!4819 = !DILocation(line: 882, column: 7, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 882, column: 6)
!4821 = !DILocation(line: 882, column: 11, scope: !4820)
!4822 = !DILocation(line: 882, column: 6, scope: !4741)
!4823 = !DILocation(line: 883, column: 3, scope: !4820)
!4824 = !DILocation(line: 885, column: 11, scope: !4741)
!4825 = !DILocation(line: 885, column: 15, scope: !4741)
!4826 = !DILocation(line: 885, column: 58, scope: !4741)
!4827 = !DILocation(line: 885, column: 64, scope: !4741)
!4828 = !DILocation(line: 885, column: 2, scope: !4741)
!4829 = !DILocation(line: 888, column: 22, scope: !4741)
!4830 = !DILocation(line: 888, column: 2, scope: !4741)
!4831 = !DILocation(line: 891, column: 28, scope: !4741)
!4832 = !DILocation(line: 891, column: 8, scope: !4741)
!4833 = !DILocation(line: 891, column: 6, scope: !4741)
!4834 = !DILocation(line: 892, column: 6, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 892, column: 6)
!4836 = !DILocation(line: 892, column: 6, scope: !4741)
!4837 = !DILocation(line: 893, column: 10, scope: !4835)
!4838 = !DILocation(line: 893, column: 3, scope: !4835)
!4839 = !DILocation(line: 896, column: 30, scope: !4741)
!4840 = !DILocation(line: 896, column: 42, scope: !4741)
!4841 = !DILocation(line: 896, column: 52, scope: !4741)
!4842 = !DILocation(line: 896, column: 8, scope: !4741)
!4843 = !DILocation(line: 896, column: 6, scope: !4741)
!4844 = !DILocation(line: 897, column: 6, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 897, column: 6)
!4846 = !DILocation(line: 897, column: 6, scope: !4741)
!4847 = !DILocation(line: 898, column: 3, scope: !4845)
!4848 = !DILocation(line: 901, column: 30, scope: !4741)
!4849 = !DILocation(line: 901, column: 43, scope: !4741)
!4850 = !DILocation(line: 901, column: 53, scope: !4741)
!4851 = !DILocation(line: 901, column: 8, scope: !4741)
!4852 = !DILocation(line: 901, column: 6, scope: !4741)
!4853 = !DILocation(line: 902, column: 6, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 902, column: 6)
!4855 = !DILocation(line: 902, column: 6, scope: !4741)
!4856 = !DILocation(line: 903, column: 3, scope: !4854)
!4857 = !DILocation(line: 906, column: 20, scope: !4741)
!4858 = !DILocation(line: 906, column: 2, scope: !4741)
!4859 = !DILocation(line: 909, column: 29, scope: !4741)
!4860 = !DILocation(line: 909, column: 2, scope: !4741)
!4861 = !DILocation(line: 911, column: 2, scope: !4741)
!4862 = !DILabel(scope: !4741, name: "err_irq_free", file: !3, line: 913)
!4863 = !DILocation(line: 913, column: 1, scope: !4741)
!4864 = !DILocation(line: 914, column: 12, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 914, column: 2)
!4866 = !DILocation(line: 914, column: 16, scope: !4865)
!4867 = !DILocation(line: 914, column: 24, scope: !4865)
!4868 = !DILocation(line: 914, column: 9, scope: !4865)
!4869 = !DILocation(line: 914, column: 7, scope: !4865)
!4870 = !DILocation(line: 914, column: 30, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 914, column: 2)
!4872 = !DILocation(line: 914, column: 32, scope: !4871)
!4873 = !DILocation(line: 914, column: 2, scope: !4865)
!4874 = !DILocation(line: 915, column: 12, scope: !4871)
!4875 = !DILocation(line: 915, column: 16, scope: !4871)
!4876 = !DILocation(line: 915, column: 21, scope: !4871)
!4877 = !DILocation(line: 915, column: 32, scope: !4871)
!4878 = !DILocation(line: 915, column: 37, scope: !4871)
!4879 = !DILocation(line: 915, column: 42, scope: !4871)
!4880 = !DILocation(line: 915, column: 46, scope: !4871)
!4881 = !DILocation(line: 915, column: 50, scope: !4871)
!4882 = !DILocation(line: 915, column: 41, scope: !4871)
!4883 = !DILocation(line: 915, column: 3, scope: !4871)
!4884 = !DILocation(line: 914, column: 39, scope: !4871)
!4885 = !DILocation(line: 914, column: 2, scope: !4871)
!4886 = distinct !{!4886, !4873, !4887}
!4887 = !DILocation(line: 915, column: 52, scope: !4865)
!4888 = !DILocation(line: 917, column: 2, scope: !4741)
!4889 = !DILocation(line: 917, column: 6, scope: !4741)
!4890 = !DILocation(line: 917, column: 14, scope: !4741)
!4891 = !DILocation(line: 919, column: 9, scope: !4741)
!4892 = !DILocation(line: 919, column: 2, scope: !4741)
!4893 = !DILocation(line: 920, column: 1, scope: !4741)
!4894 = distinct !DISubprogram(name: "devm_kcalloc", scope: !73, file: !73, line: 229, type: !4895, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!252, !333, !437, !437, !250}
!4897 = !DILocalVariable(name: "dev", arg: 1, scope: !4894, file: !73, line: 229, type: !333)
!4898 = !DILocation(line: 229, column: 49, scope: !4894)
!4899 = !DILocalVariable(name: "n", arg: 2, scope: !4894, file: !73, line: 230, type: !437)
!4900 = !DILocation(line: 230, column: 13, scope: !4894)
!4901 = !DILocalVariable(name: "size", arg: 3, scope: !4894, file: !73, line: 230, type: !437)
!4902 = !DILocation(line: 230, column: 23, scope: !4894)
!4903 = !DILocalVariable(name: "flags", arg: 4, scope: !4894, file: !73, line: 230, type: !250)
!4904 = !DILocation(line: 230, column: 35, scope: !4894)
!4905 = !DILocation(line: 232, column: 28, scope: !4894)
!4906 = !DILocation(line: 232, column: 33, scope: !4894)
!4907 = !DILocation(line: 232, column: 36, scope: !4894)
!4908 = !DILocation(line: 232, column: 42, scope: !4894)
!4909 = !DILocation(line: 232, column: 48, scope: !4894)
!4910 = !DILocation(line: 232, column: 9, scope: !4894)
!4911 = !DILocation(line: 232, column: 2, scope: !4894)
!4912 = distinct !DISubprogram(name: "dw_edma_irq_request", scope: !3, file: !3, line: 782, type: !4913, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!4913 = !DISubroutineType(types: !4914)
!4914 = !{!281, !4626, !1558, !1558}
!4915 = !DILocalVariable(name: "chip", arg: 1, scope: !4912, file: !3, line: 782, type: !4626)
!4916 = !DILocation(line: 782, column: 53, scope: !4912)
!4917 = !DILocalVariable(name: "wr_alloc", arg: 2, scope: !4912, file: !3, line: 783, type: !1558)
!4918 = !DILocation(line: 783, column: 16, scope: !4912)
!4919 = !DILocalVariable(name: "rd_alloc", arg: 3, scope: !4912, file: !3, line: 783, type: !1558)
!4920 = !DILocation(line: 783, column: 31, scope: !4912)
!4921 = !DILocalVariable(name: "dev", scope: !4912, file: !3, line: 785, type: !333)
!4922 = !DILocation(line: 785, column: 17, scope: !4912)
!4923 = !DILocation(line: 785, column: 23, scope: !4912)
!4924 = !DILocation(line: 785, column: 29, scope: !4912)
!4925 = !DILocalVariable(name: "dw", scope: !4912, file: !3, line: 786, type: !4634)
!4926 = !DILocation(line: 786, column: 18, scope: !4912)
!4927 = !DILocation(line: 786, column: 23, scope: !4912)
!4928 = !DILocation(line: 786, column: 29, scope: !4912)
!4929 = !DILocalVariable(name: "wr_mask", scope: !4912, file: !3, line: 787, type: !530)
!4930 = !DILocation(line: 787, column: 6, scope: !4912)
!4931 = !DILocalVariable(name: "rd_mask", scope: !4912, file: !3, line: 788, type: !530)
!4932 = !DILocation(line: 788, column: 6, scope: !4912)
!4933 = !DILocalVariable(name: "i", scope: !4912, file: !3, line: 789, type: !281)
!4934 = !DILocation(line: 789, column: 6, scope: !4912)
!4935 = !DILocalVariable(name: "err", scope: !4912, file: !3, line: 789, type: !281)
!4936 = !DILocation(line: 789, column: 9, scope: !4912)
!4937 = !DILocalVariable(name: "ch_cnt", scope: !4912, file: !3, line: 790, type: !530)
!4938 = !DILocation(line: 790, column: 6, scope: !4912)
!4939 = !DILocalVariable(name: "irq", scope: !4912, file: !3, line: 791, type: !281)
!4940 = !DILocation(line: 791, column: 6, scope: !4912)
!4941 = !DILocation(line: 793, column: 11, scope: !4912)
!4942 = !DILocation(line: 793, column: 15, scope: !4912)
!4943 = !DILocation(line: 793, column: 27, scope: !4912)
!4944 = !DILocation(line: 793, column: 31, scope: !4912)
!4945 = !DILocation(line: 793, column: 25, scope: !4912)
!4946 = !DILocation(line: 793, column: 9, scope: !4912)
!4947 = !DILocation(line: 795, column: 6, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 795, column: 6)
!4949 = !DILocation(line: 795, column: 10, scope: !4948)
!4950 = !DILocation(line: 795, column: 18, scope: !4948)
!4951 = !DILocation(line: 795, column: 6, scope: !4912)
!4952 = !DILocation(line: 796, column: 3, scope: !4948)
!4953 = !DILocation(line: 798, column: 6, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 798, column: 6)
!4955 = !DILocation(line: 798, column: 10, scope: !4954)
!4956 = !DILocation(line: 798, column: 18, scope: !4954)
!4957 = !DILocation(line: 798, column: 6, scope: !4912)
!4958 = !DILocation(line: 800, column: 9, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 798, column: 24)
!4960 = !DILocation(line: 800, column: 13, scope: !4959)
!4961 = !DILocation(line: 800, column: 18, scope: !4959)
!4962 = !DILocation(line: 800, column: 29, scope: !4959)
!4963 = !DILocation(line: 800, column: 7, scope: !4959)
!4964 = !DILocation(line: 801, column: 21, scope: !4959)
!4965 = !DILocation(line: 802, column: 20, scope: !4959)
!4966 = !DILocation(line: 802, column: 24, scope: !4959)
!4967 = !DILocation(line: 802, column: 31, scope: !4959)
!4968 = !DILocation(line: 802, column: 35, scope: !4959)
!4969 = !DILocation(line: 802, column: 30, scope: !4959)
!4970 = !DILocation(line: 801, column: 9, scope: !4959)
!4971 = !DILocation(line: 801, column: 7, scope: !4959)
!4972 = !DILocation(line: 803, column: 7, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4959, file: !3, line: 803, column: 7)
!4974 = !DILocation(line: 803, column: 7, scope: !4959)
!4975 = !DILocation(line: 804, column: 4, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4973, file: !3, line: 803, column: 12)
!4977 = !DILocation(line: 804, column: 8, scope: !4976)
!4978 = !DILocation(line: 804, column: 16, scope: !4976)
!4979 = !DILocation(line: 805, column: 11, scope: !4976)
!4980 = !DILocation(line: 805, column: 4, scope: !4976)
!4981 = !DILocation(line: 808, column: 24, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4959, file: !3, line: 808, column: 7)
!4983 = !DILocation(line: 808, column: 7, scope: !4982)
!4984 = !DILocation(line: 808, column: 7, scope: !4959)
!4985 = !DILocation(line: 809, column: 23, scope: !4982)
!4986 = !DILocation(line: 809, column: 29, scope: !4982)
!4987 = !DILocation(line: 809, column: 33, scope: !4982)
!4988 = !DILocation(line: 809, column: 40, scope: !4982)
!4989 = !DILocation(line: 809, column: 4, scope: !4982)
!4990 = !DILocation(line: 810, column: 2, scope: !4959)
!4991 = !DILocalVariable(name: "tmp", scope: !4992, file: !3, line: 812, type: !281)
!4992 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 810, column: 9)
!4993 = !DILocation(line: 812, column: 7, scope: !4992)
!4994 = !DILocation(line: 812, column: 13, scope: !4992)
!4995 = !DILocation(line: 812, column: 17, scope: !4992)
!4996 = !DILocation(line: 814, column: 3, scope: !4992)
!4997 = !DILocation(line: 814, column: 10, scope: !4992)
!4998 = !DILocation(line: 814, column: 14, scope: !4992)
!4999 = !DILocation(line: 814, column: 19, scope: !4992)
!5000 = !DILocation(line: 814, column: 18, scope: !4992)
!5001 = !DILocation(line: 814, column: 31, scope: !4992)
!5002 = !DILocation(line: 814, column: 30, scope: !4992)
!5003 = !DILocation(line: 814, column: 28, scope: !4992)
!5004 = !DILocation(line: 814, column: 43, scope: !4992)
!5005 = !DILocation(line: 814, column: 41, scope: !4992)
!5006 = !DILocation(line: 0, scope: !4992)
!5007 = !DILocation(line: 815, column: 32, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4992, file: !3, line: 814, column: 51)
!5009 = !DILocation(line: 815, column: 42, scope: !5008)
!5010 = !DILocation(line: 815, column: 46, scope: !5008)
!5011 = !DILocation(line: 815, column: 4, scope: !5008)
!5012 = !DILocation(line: 816, column: 32, scope: !5008)
!5013 = !DILocation(line: 816, column: 42, scope: !5008)
!5014 = !DILocation(line: 816, column: 46, scope: !5008)
!5015 = !DILocation(line: 816, column: 4, scope: !5008)
!5016 = distinct !{!5016, !4996, !5017}
!5017 = !DILocation(line: 817, column: 3, scope: !4992)
!5018 = !DILocation(line: 819, column: 35, scope: !4992)
!5019 = !DILocation(line: 819, column: 34, scope: !4992)
!5020 = !DILocation(line: 819, column: 45, scope: !4992)
!5021 = !DILocation(line: 819, column: 49, scope: !4992)
!5022 = !DILocation(line: 819, column: 3, scope: !4992)
!5023 = !DILocation(line: 820, column: 35, scope: !4992)
!5024 = !DILocation(line: 820, column: 34, scope: !4992)
!5025 = !DILocation(line: 820, column: 45, scope: !4992)
!5026 = !DILocation(line: 820, column: 49, scope: !4992)
!5027 = !DILocation(line: 820, column: 3, scope: !4992)
!5028 = !DILocation(line: 822, column: 10, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !4992, file: !3, line: 822, column: 3)
!5030 = !DILocation(line: 822, column: 8, scope: !5029)
!5031 = !DILocation(line: 822, column: 15, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 822, column: 3)
!5033 = !DILocation(line: 822, column: 21, scope: !5032)
!5034 = !DILocation(line: 822, column: 20, scope: !5032)
!5035 = !DILocation(line: 822, column: 33, scope: !5032)
!5036 = !DILocation(line: 822, column: 32, scope: !5032)
!5037 = !DILocation(line: 822, column: 30, scope: !5032)
!5038 = !DILocation(line: 822, column: 17, scope: !5032)
!5039 = !DILocation(line: 822, column: 3, scope: !5029)
!5040 = !DILocation(line: 823, column: 10, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 822, column: 49)
!5042 = !DILocation(line: 823, column: 14, scope: !5041)
!5043 = !DILocation(line: 823, column: 19, scope: !5041)
!5044 = !DILocation(line: 823, column: 30, scope: !5041)
!5045 = !DILocation(line: 823, column: 35, scope: !5041)
!5046 = !DILocation(line: 823, column: 8, scope: !5041)
!5047 = !DILocation(line: 824, column: 22, scope: !5041)
!5048 = !DILocation(line: 825, column: 8, scope: !5041)
!5049 = !DILocation(line: 825, column: 13, scope: !5041)
!5050 = !DILocation(line: 825, column: 12, scope: !5041)
!5051 = !DILocation(line: 825, column: 10, scope: !5041)
!5052 = !DILocation(line: 828, column: 21, scope: !5041)
!5053 = !DILocation(line: 828, column: 25, scope: !5041)
!5054 = !DILocation(line: 829, column: 9, scope: !5041)
!5055 = !DILocation(line: 829, column: 13, scope: !5041)
!5056 = !DILocation(line: 829, column: 17, scope: !5041)
!5057 = !DILocation(line: 829, column: 8, scope: !5041)
!5058 = !DILocation(line: 824, column: 10, scope: !5041)
!5059 = !DILocation(line: 824, column: 8, scope: !5041)
!5060 = !DILocation(line: 830, column: 8, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5041, file: !3, line: 830, column: 8)
!5062 = !DILocation(line: 830, column: 8, scope: !5041)
!5063 = !DILocation(line: 831, column: 19, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 830, column: 13)
!5065 = !DILocation(line: 831, column: 5, scope: !5064)
!5066 = !DILocation(line: 831, column: 9, scope: !5064)
!5067 = !DILocation(line: 831, column: 17, scope: !5064)
!5068 = !DILocation(line: 832, column: 12, scope: !5064)
!5069 = !DILocation(line: 832, column: 5, scope: !5064)
!5070 = !DILocation(line: 835, column: 25, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5041, file: !3, line: 835, column: 8)
!5072 = !DILocation(line: 835, column: 8, scope: !5071)
!5073 = !DILocation(line: 835, column: 8, scope: !5041)
!5074 = !DILocation(line: 836, column: 24, scope: !5071)
!5075 = !DILocation(line: 836, column: 30, scope: !5071)
!5076 = !DILocation(line: 836, column: 34, scope: !5071)
!5077 = !DILocation(line: 836, column: 38, scope: !5071)
!5078 = !DILocation(line: 836, column: 41, scope: !5071)
!5079 = !DILocation(line: 836, column: 5, scope: !5071)
!5080 = !DILocation(line: 837, column: 3, scope: !5041)
!5081 = !DILocation(line: 822, column: 45, scope: !5032)
!5082 = !DILocation(line: 822, column: 3, scope: !5032)
!5083 = distinct !{!5083, !5039, !5084}
!5084 = !DILocation(line: 837, column: 3, scope: !5029)
!5085 = !DILocation(line: 839, column: 17, scope: !4992)
!5086 = !DILocation(line: 839, column: 3, scope: !4992)
!5087 = !DILocation(line: 839, column: 7, scope: !4992)
!5088 = !DILocation(line: 839, column: 15, scope: !4992)
!5089 = !DILocation(line: 842, column: 9, scope: !4912)
!5090 = !DILocation(line: 842, column: 2, scope: !4912)
!5091 = !DILocation(line: 843, column: 1, scope: !4912)
!5092 = distinct !DISubprogram(name: "dw_edma_channel_setup", scope: !3, file: !3, line: 638, type: !5093, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5093 = !DISubroutineType(types: !5094)
!5094 = !{!281, !4626, !299, !530, !530}
!5095 = !DILocalVariable(name: "chip", arg: 1, scope: !5092, file: !3, line: 638, type: !4626)
!5096 = !DILocation(line: 638, column: 55, scope: !5092)
!5097 = !DILocalVariable(name: "write", arg: 2, scope: !5092, file: !3, line: 638, type: !299)
!5098 = !DILocation(line: 638, column: 66, scope: !5092)
!5099 = !DILocalVariable(name: "wr_alloc", arg: 3, scope: !5092, file: !3, line: 639, type: !530)
!5100 = !DILocation(line: 639, column: 10, scope: !5092)
!5101 = !DILocalVariable(name: "rd_alloc", arg: 4, scope: !5092, file: !3, line: 639, type: !530)
!5102 = !DILocation(line: 639, column: 24, scope: !5092)
!5103 = !DILocalVariable(name: "dt_region", scope: !5092, file: !3, line: 641, type: !5104)
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!5105 = !DILocation(line: 641, column: 25, scope: !5092)
!5106 = !DILocalVariable(name: "dev", scope: !5092, file: !3, line: 642, type: !333)
!5107 = !DILocation(line: 642, column: 17, scope: !5092)
!5108 = !DILocation(line: 642, column: 23, scope: !5092)
!5109 = !DILocation(line: 642, column: 29, scope: !5092)
!5110 = !DILocalVariable(name: "dw", scope: !5092, file: !3, line: 643, type: !4634)
!5111 = !DILocation(line: 643, column: 18, scope: !5092)
!5112 = !DILocation(line: 643, column: 23, scope: !5092)
!5113 = !DILocation(line: 643, column: 29, scope: !5092)
!5114 = !DILocalVariable(name: "chan", scope: !5092, file: !3, line: 644, type: !253)
!5115 = !DILocation(line: 644, column: 23, scope: !5092)
!5116 = !DILocalVariable(name: "ll_chunk", scope: !5092, file: !3, line: 645, type: !437)
!5117 = !DILocation(line: 645, column: 9, scope: !5092)
!5118 = !DILocalVariable(name: "dt_chunk", scope: !5092, file: !3, line: 645, type: !437)
!5119 = !DILocation(line: 645, column: 19, scope: !5092)
!5120 = !DILocalVariable(name: "irq", scope: !5092, file: !3, line: 646, type: !4652)
!5121 = !DILocation(line: 646, column: 22, scope: !5092)
!5122 = !DILocalVariable(name: "dma", scope: !5092, file: !3, line: 647, type: !264)
!5123 = !DILocation(line: 647, column: 21, scope: !5092)
!5124 = !DILocalVariable(name: "i", scope: !5092, file: !3, line: 648, type: !530)
!5125 = !DILocation(line: 648, column: 6, scope: !5092)
!5126 = !DILocalVariable(name: "j", scope: !5092, file: !3, line: 648, type: !530)
!5127 = !DILocation(line: 648, column: 9, scope: !5092)
!5128 = !DILocalVariable(name: "cnt", scope: !5092, file: !3, line: 648, type: !530)
!5129 = !DILocation(line: 648, column: 12, scope: !5092)
!5130 = !DILocalVariable(name: "ch_cnt", scope: !5092, file: !3, line: 648, type: !530)
!5131 = !DILocation(line: 648, column: 17, scope: !5092)
!5132 = !DILocalVariable(name: "alloc", scope: !5092, file: !3, line: 649, type: !530)
!5133 = !DILocation(line: 649, column: 6, scope: !5092)
!5134 = !DILocalVariable(name: "off_alloc", scope: !5092, file: !3, line: 649, type: !530)
!5135 = !DILocation(line: 649, column: 13, scope: !5092)
!5136 = !DILocalVariable(name: "err", scope: !5092, file: !3, line: 650, type: !281)
!5137 = !DILocation(line: 650, column: 6, scope: !5092)
!5138 = !DILocalVariable(name: "pos", scope: !5092, file: !3, line: 651, type: !530)
!5139 = !DILocation(line: 651, column: 6, scope: !5092)
!5140 = !DILocation(line: 653, column: 11, scope: !5092)
!5141 = !DILocation(line: 653, column: 15, scope: !5092)
!5142 = !DILocation(line: 653, column: 27, scope: !5092)
!5143 = !DILocation(line: 653, column: 31, scope: !5092)
!5144 = !DILocation(line: 653, column: 25, scope: !5092)
!5145 = !DILocation(line: 653, column: 9, scope: !5092)
!5146 = !DILocation(line: 654, column: 13, scope: !5092)
!5147 = !DILocation(line: 654, column: 17, scope: !5092)
!5148 = !DILocation(line: 654, column: 27, scope: !5092)
!5149 = !DILocation(line: 654, column: 11, scope: !5092)
!5150 = !DILocation(line: 655, column: 13, scope: !5092)
!5151 = !DILocation(line: 655, column: 17, scope: !5092)
!5152 = !DILocation(line: 655, column: 27, scope: !5092)
!5153 = !DILocation(line: 655, column: 11, scope: !5092)
!5154 = !DILocation(line: 658, column: 14, scope: !5092)
!5155 = !DILocation(line: 658, column: 11, scope: !5092)
!5156 = !DILocation(line: 661, column: 14, scope: !5092)
!5157 = !DILocation(line: 661, column: 11, scope: !5092)
!5158 = !DILocation(line: 663, column: 6, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 663, column: 6)
!5160 = !DILocation(line: 663, column: 6, scope: !5092)
!5161 = !DILocation(line: 664, column: 5, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 663, column: 13)
!5163 = !DILocation(line: 665, column: 9, scope: !5162)
!5164 = !DILocation(line: 665, column: 13, scope: !5162)
!5165 = !DILocation(line: 665, column: 7, scope: !5162)
!5166 = !DILocation(line: 666, column: 10, scope: !5162)
!5167 = !DILocation(line: 666, column: 14, scope: !5162)
!5168 = !DILocation(line: 666, column: 7, scope: !5162)
!5169 = !DILocation(line: 667, column: 11, scope: !5162)
!5170 = !DILocation(line: 667, column: 9, scope: !5162)
!5171 = !DILocation(line: 668, column: 13, scope: !5162)
!5172 = !DILocation(line: 669, column: 2, scope: !5162)
!5173 = !DILocation(line: 670, column: 7, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 669, column: 9)
!5175 = !DILocation(line: 670, column: 11, scope: !5174)
!5176 = !DILocation(line: 670, column: 5, scope: !5174)
!5177 = !DILocation(line: 671, column: 9, scope: !5174)
!5178 = !DILocation(line: 671, column: 13, scope: !5174)
!5179 = !DILocation(line: 671, column: 7, scope: !5174)
!5180 = !DILocation(line: 672, column: 10, scope: !5174)
!5181 = !DILocation(line: 672, column: 14, scope: !5174)
!5182 = !DILocation(line: 672, column: 7, scope: !5174)
!5183 = !DILocation(line: 673, column: 11, scope: !5174)
!5184 = !DILocation(line: 673, column: 9, scope: !5174)
!5185 = !DILocation(line: 674, column: 15, scope: !5174)
!5186 = !DILocation(line: 674, column: 13, scope: !5174)
!5187 = !DILocation(line: 677, column: 18, scope: !5092)
!5188 = !DILocation(line: 677, column: 23, scope: !5092)
!5189 = !DILocation(line: 677, column: 2, scope: !5092)
!5190 = !DILocation(line: 678, column: 9, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 678, column: 2)
!5192 = !DILocation(line: 678, column: 7, scope: !5191)
!5193 = !DILocation(line: 678, column: 15, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 678, column: 2)
!5195 = !DILocation(line: 678, column: 21, scope: !5194)
!5196 = !DILocation(line: 678, column: 24, scope: !5194)
!5197 = !DILocation(line: 678, column: 28, scope: !5194)
!5198 = !DILocation(line: 678, column: 36, scope: !5194)
!5199 = !DILocation(line: 678, column: 42, scope: !5194)
!5200 = !DILocation(line: 678, column: 45, scope: !5194)
!5201 = !DILocation(line: 678, column: 49, scope: !5194)
!5202 = !DILocation(line: 678, column: 47, scope: !5194)
!5203 = !DILocation(line: 0, scope: !5194)
!5204 = !DILocation(line: 678, column: 2, scope: !5191)
!5205 = !DILocation(line: 679, column: 11, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 678, column: 64)
!5207 = !DILocation(line: 679, column: 15, scope: !5206)
!5208 = !DILocation(line: 679, column: 20, scope: !5206)
!5209 = !DILocation(line: 679, column: 8, scope: !5206)
!5210 = !DILocation(line: 681, column: 28, scope: !5206)
!5211 = !DILocation(line: 681, column: 15, scope: !5206)
!5212 = !DILocation(line: 681, column: 13, scope: !5206)
!5213 = !DILocation(line: 682, column: 8, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 682, column: 7)
!5215 = !DILocation(line: 682, column: 7, scope: !5206)
!5216 = !DILocation(line: 683, column: 4, scope: !5214)
!5217 = !DILocation(line: 685, column: 27, scope: !5206)
!5218 = !DILocation(line: 685, column: 3, scope: !5206)
!5219 = !DILocation(line: 685, column: 9, scope: !5206)
!5220 = !DILocation(line: 685, column: 12, scope: !5206)
!5221 = !DILocation(line: 685, column: 17, scope: !5206)
!5222 = !DILocation(line: 685, column: 25, scope: !5206)
!5223 = !DILocation(line: 687, column: 16, scope: !5206)
!5224 = !DILocation(line: 687, column: 3, scope: !5206)
!5225 = !DILocation(line: 687, column: 9, scope: !5206)
!5226 = !DILocation(line: 687, column: 14, scope: !5206)
!5227 = !DILocation(line: 688, column: 14, scope: !5206)
!5228 = !DILocation(line: 688, column: 3, scope: !5206)
!5229 = !DILocation(line: 688, column: 9, scope: !5206)
!5230 = !DILocation(line: 688, column: 12, scope: !5206)
!5231 = !DILocation(line: 689, column: 15, scope: !5206)
!5232 = !DILocation(line: 689, column: 3, scope: !5206)
!5233 = !DILocation(line: 689, column: 9, scope: !5206)
!5234 = !DILocation(line: 689, column: 13, scope: !5206)
!5235 = !DILocation(line: 690, column: 3, scope: !5206)
!5236 = !DILocation(line: 690, column: 9, scope: !5206)
!5237 = !DILocation(line: 690, column: 20, scope: !5206)
!5238 = !DILocation(line: 691, column: 3, scope: !5206)
!5239 = !DILocation(line: 691, column: 9, scope: !5206)
!5240 = !DILocation(line: 691, column: 17, scope: !5206)
!5241 = !DILocation(line: 692, column: 3, scope: !5206)
!5242 = !DILocation(line: 692, column: 9, scope: !5206)
!5243 = !DILocation(line: 692, column: 16, scope: !5206)
!5244 = !DILocation(line: 694, column: 19, scope: !5206)
!5245 = !DILocation(line: 694, column: 30, scope: !5206)
!5246 = !DILocation(line: 694, column: 28, scope: !5206)
!5247 = !DILocation(line: 694, column: 3, scope: !5206)
!5248 = !DILocation(line: 694, column: 9, scope: !5206)
!5249 = !DILocation(line: 694, column: 16, scope: !5206)
!5250 = !DILocation(line: 695, column: 19, scope: !5206)
!5251 = !DILocation(line: 695, column: 28, scope: !5206)
!5252 = !DILocation(line: 695, column: 42, scope: !5206)
!5253 = !DILocation(line: 695, column: 18, scope: !5206)
!5254 = !DILocation(line: 695, column: 3, scope: !5206)
!5255 = !DILocation(line: 695, column: 9, scope: !5206)
!5256 = !DILocation(line: 695, column: 16, scope: !5206)
!5257 = !DILocation(line: 697, column: 19, scope: !5206)
!5258 = !DILocation(line: 697, column: 30, scope: !5206)
!5259 = !DILocation(line: 697, column: 28, scope: !5206)
!5260 = !DILocation(line: 697, column: 3, scope: !5206)
!5261 = !DILocation(line: 697, column: 9, scope: !5206)
!5262 = !DILocation(line: 697, column: 16, scope: !5206)
!5263 = !DILocation(line: 703, column: 7, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 703, column: 7)
!5265 = !DILocation(line: 703, column: 11, scope: !5264)
!5266 = !DILocation(line: 703, column: 19, scope: !5264)
!5267 = !DILocation(line: 703, column: 7, scope: !5206)
!5268 = !DILocation(line: 704, column: 8, scope: !5264)
!5269 = !DILocation(line: 704, column: 4, scope: !5264)
!5270 = !DILocation(line: 706, column: 10, scope: !5264)
!5271 = !DILocation(line: 706, column: 23, scope: !5264)
!5272 = !DILocation(line: 706, column: 27, scope: !5264)
!5273 = !DILocation(line: 706, column: 25, scope: !5264)
!5274 = !DILocation(line: 706, column: 20, scope: !5264)
!5275 = !DILocation(line: 706, column: 8, scope: !5264)
!5276 = !DILocation(line: 708, column: 10, scope: !5206)
!5277 = !DILocation(line: 708, column: 14, scope: !5206)
!5278 = !DILocation(line: 708, column: 18, scope: !5206)
!5279 = !DILocation(line: 708, column: 7, scope: !5206)
!5280 = !DILocation(line: 710, column: 7, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 710, column: 7)
!5282 = !DILocation(line: 710, column: 7, scope: !5206)
!5283 = !DILocation(line: 711, column: 20, scope: !5281)
!5284 = !DILocation(line: 711, column: 4, scope: !5281)
!5285 = !DILocation(line: 711, column: 9, scope: !5281)
!5286 = !DILocation(line: 711, column: 17, scope: !5281)
!5287 = !DILocation(line: 713, column: 20, scope: !5281)
!5288 = !DILocation(line: 713, column: 4, scope: !5281)
!5289 = !DILocation(line: 713, column: 9, scope: !5281)
!5290 = !DILocation(line: 713, column: 17, scope: !5281)
!5291 = !DILocation(line: 715, column: 13, scope: !5206)
!5292 = !DILocation(line: 715, column: 3, scope: !5206)
!5293 = !DILocation(line: 715, column: 8, scope: !5206)
!5294 = !DILocation(line: 715, column: 11, scope: !5206)
!5295 = !DILocation(line: 716, column: 11, scope: !5206)
!5296 = !DILocation(line: 716, column: 17, scope: !5206)
!5297 = !DILocation(line: 716, column: 3, scope: !5206)
!5298 = !DILocation(line: 716, column: 23, scope: !5206)
!5299 = !DILocation(line: 716, column: 28, scope: !5206)
!5300 = !DILocation(line: 723, column: 3, scope: !5206)
!5301 = !DILocation(line: 723, column: 9, scope: !5206)
!5302 = !DILocation(line: 723, column: 12, scope: !5206)
!5303 = !DILocation(line: 723, column: 22, scope: !5206)
!5304 = !DILocation(line: 724, column: 15, scope: !5206)
!5305 = !DILocation(line: 724, column: 21, scope: !5206)
!5306 = !DILocation(line: 724, column: 25, scope: !5206)
!5307 = !DILocation(line: 724, column: 3, scope: !5206)
!5308 = !DILocation(line: 726, column: 22, scope: !5206)
!5309 = !DILocation(line: 726, column: 26, scope: !5206)
!5310 = !DILocation(line: 726, column: 36, scope: !5206)
!5311 = !DILocation(line: 726, column: 44, scope: !5206)
!5312 = !DILocation(line: 726, column: 50, scope: !5206)
!5313 = !DILocation(line: 726, column: 42, scope: !5206)
!5314 = !DILocation(line: 726, column: 3, scope: !5206)
!5315 = !DILocation(line: 726, column: 14, scope: !5206)
!5316 = !DILocation(line: 726, column: 20, scope: !5206)
!5317 = !DILocation(line: 727, column: 22, scope: !5206)
!5318 = !DILocation(line: 727, column: 26, scope: !5206)
!5319 = !DILocation(line: 727, column: 36, scope: !5206)
!5320 = !DILocation(line: 727, column: 44, scope: !5206)
!5321 = !DILocation(line: 727, column: 50, scope: !5206)
!5322 = !DILocation(line: 727, column: 42, scope: !5206)
!5323 = !DILocation(line: 727, column: 3, scope: !5206)
!5324 = !DILocation(line: 727, column: 14, scope: !5206)
!5325 = !DILocation(line: 727, column: 20, scope: !5206)
!5326 = !DILocation(line: 728, column: 19, scope: !5206)
!5327 = !DILocation(line: 728, column: 3, scope: !5206)
!5328 = !DILocation(line: 728, column: 14, scope: !5206)
!5329 = !DILocation(line: 728, column: 17, scope: !5206)
!5330 = !DILocation(line: 733, column: 33, scope: !5206)
!5331 = !DILocation(line: 733, column: 3, scope: !5206)
!5332 = !DILocation(line: 734, column: 2, scope: !5206)
!5333 = !DILocation(line: 678, column: 55, scope: !5194)
!5334 = !DILocation(line: 678, column: 60, scope: !5194)
!5335 = !DILocation(line: 678, column: 2, scope: !5194)
!5336 = distinct !{!5336, !5204, !5337}
!5337 = !DILocation(line: 734, column: 2, scope: !5191)
!5338 = !DILocation(line: 737, column: 2, scope: !5092)
!5339 = !DILocation(line: 738, column: 2, scope: !5092)
!5340 = !DILocation(line: 739, column: 2, scope: !5092)
!5341 = !DILocation(line: 740, column: 2, scope: !5092)
!5342 = !DILocation(line: 741, column: 20, scope: !5092)
!5343 = !DILocation(line: 741, column: 2, scope: !5092)
!5344 = !DILocation(line: 741, column: 7, scope: !5092)
!5345 = !DILocation(line: 741, column: 18, scope: !5092)
!5346 = !DILocation(line: 742, column: 2, scope: !5092)
!5347 = !DILocation(line: 742, column: 7, scope: !5092)
!5348 = !DILocation(line: 742, column: 23, scope: !5092)
!5349 = !DILocation(line: 743, column: 2, scope: !5092)
!5350 = !DILocation(line: 743, column: 7, scope: !5092)
!5351 = !DILocation(line: 743, column: 23, scope: !5092)
!5352 = !DILocation(line: 744, column: 2, scope: !5092)
!5353 = !DILocation(line: 744, column: 7, scope: !5092)
!5354 = !DILocation(line: 744, column: 27, scope: !5092)
!5355 = !DILocation(line: 745, column: 17, scope: !5092)
!5356 = !DILocation(line: 745, column: 2, scope: !5092)
!5357 = !DILocation(line: 745, column: 7, scope: !5092)
!5358 = !DILocation(line: 745, column: 15, scope: !5092)
!5359 = !DILocation(line: 748, column: 13, scope: !5092)
!5360 = !DILocation(line: 748, column: 19, scope: !5092)
!5361 = !DILocation(line: 748, column: 2, scope: !5092)
!5362 = !DILocation(line: 748, column: 7, scope: !5092)
!5363 = !DILocation(line: 748, column: 11, scope: !5092)
!5364 = !DILocation(line: 749, column: 2, scope: !5092)
!5365 = !DILocation(line: 749, column: 7, scope: !5092)
!5366 = !DILocation(line: 749, column: 35, scope: !5092)
!5367 = !DILocation(line: 750, column: 2, scope: !5092)
!5368 = !DILocation(line: 750, column: 7, scope: !5092)
!5369 = !DILocation(line: 750, column: 34, scope: !5092)
!5370 = !DILocation(line: 751, column: 2, scope: !5092)
!5371 = !DILocation(line: 751, column: 7, scope: !5092)
!5372 = !DILocation(line: 751, column: 21, scope: !5092)
!5373 = !DILocation(line: 752, column: 2, scope: !5092)
!5374 = !DILocation(line: 752, column: 7, scope: !5092)
!5375 = !DILocation(line: 752, column: 20, scope: !5092)
!5376 = !DILocation(line: 753, column: 2, scope: !5092)
!5377 = !DILocation(line: 753, column: 7, scope: !5092)
!5378 = !DILocation(line: 753, column: 21, scope: !5092)
!5379 = !DILocation(line: 754, column: 2, scope: !5092)
!5380 = !DILocation(line: 754, column: 7, scope: !5092)
!5381 = !DILocation(line: 754, column: 28, scope: !5092)
!5382 = !DILocation(line: 755, column: 2, scope: !5092)
!5383 = !DILocation(line: 755, column: 7, scope: !5092)
!5384 = !DILocation(line: 755, column: 28, scope: !5092)
!5385 = !DILocation(line: 756, column: 2, scope: !5092)
!5386 = !DILocation(line: 756, column: 7, scope: !5092)
!5387 = !DILocation(line: 756, column: 24, scope: !5092)
!5388 = !DILocation(line: 757, column: 2, scope: !5092)
!5389 = !DILocation(line: 757, column: 7, scope: !5092)
!5390 = !DILocation(line: 757, column: 28, scope: !5092)
!5391 = !DILocation(line: 758, column: 2, scope: !5092)
!5392 = !DILocation(line: 758, column: 7, scope: !5092)
!5393 = !DILocation(line: 758, column: 30, scope: !5092)
!5394 = !DILocation(line: 760, column: 23, scope: !5092)
!5395 = !DILocation(line: 760, column: 28, scope: !5092)
!5396 = !DILocation(line: 760, column: 2, scope: !5092)
!5397 = !DILocation(line: 763, column: 34, scope: !5092)
!5398 = !DILocation(line: 763, column: 8, scope: !5092)
!5399 = !DILocation(line: 763, column: 6, scope: !5092)
!5400 = !DILocation(line: 765, column: 9, scope: !5092)
!5401 = !DILocation(line: 765, column: 2, scope: !5092)
!5402 = !DILocation(line: 766, column: 1, scope: !5092)
!5403 = distinct !DISubprogram(name: "dw_edma_remove", scope: !3, file: !3, line: 923, type: !4742, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5404 = !DILocalVariable(name: "chip", arg: 1, scope: !5403, file: !3, line: 923, type: !4626)
!5405 = !DILocation(line: 923, column: 41, scope: !5403)
!5406 = !DILocalVariable(name: "chan", scope: !5403, file: !3, line: 925, type: !253)
!5407 = !DILocation(line: 925, column: 23, scope: !5403)
!5408 = !DILocalVariable(name: "_chan", scope: !5403, file: !3, line: 925, type: !253)
!5409 = !DILocation(line: 925, column: 30, scope: !5403)
!5410 = !DILocalVariable(name: "dev", scope: !5403, file: !3, line: 926, type: !333)
!5411 = !DILocation(line: 926, column: 17, scope: !5403)
!5412 = !DILocation(line: 926, column: 23, scope: !5403)
!5413 = !DILocation(line: 926, column: 29, scope: !5403)
!5414 = !DILocalVariable(name: "dw", scope: !5403, file: !3, line: 927, type: !4634)
!5415 = !DILocation(line: 927, column: 18, scope: !5403)
!5416 = !DILocation(line: 927, column: 23, scope: !5403)
!5417 = !DILocation(line: 927, column: 29, scope: !5403)
!5418 = !DILocalVariable(name: "i", scope: !5403, file: !3, line: 928, type: !281)
!5419 = !DILocation(line: 928, column: 6, scope: !5403)
!5420 = !DILocation(line: 931, column: 22, scope: !5403)
!5421 = !DILocation(line: 931, column: 2, scope: !5403)
!5422 = !DILocation(line: 934, column: 12, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 934, column: 2)
!5424 = !DILocation(line: 934, column: 16, scope: !5423)
!5425 = !DILocation(line: 934, column: 24, scope: !5423)
!5426 = !DILocation(line: 934, column: 9, scope: !5423)
!5427 = !DILocation(line: 934, column: 7, scope: !5423)
!5428 = !DILocation(line: 934, column: 30, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 934, column: 2)
!5430 = !DILocation(line: 934, column: 32, scope: !5429)
!5431 = !DILocation(line: 934, column: 2, scope: !5423)
!5432 = !DILocation(line: 935, column: 12, scope: !5429)
!5433 = !DILocation(line: 935, column: 16, scope: !5429)
!5434 = !DILocation(line: 935, column: 21, scope: !5429)
!5435 = !DILocation(line: 935, column: 32, scope: !5429)
!5436 = !DILocation(line: 935, column: 37, scope: !5429)
!5437 = !DILocation(line: 935, column: 42, scope: !5429)
!5438 = !DILocation(line: 935, column: 46, scope: !5429)
!5439 = !DILocation(line: 935, column: 50, scope: !5429)
!5440 = !DILocation(line: 935, column: 41, scope: !5429)
!5441 = !DILocation(line: 935, column: 3, scope: !5429)
!5442 = !DILocation(line: 934, column: 39, scope: !5429)
!5443 = !DILocation(line: 934, column: 2, scope: !5429)
!5444 = distinct !{!5444, !5431, !5445}
!5445 = !DILocation(line: 935, column: 52, scope: !5423)
!5446 = !DILocation(line: 938, column: 21, scope: !5403)
!5447 = !DILocation(line: 938, column: 2, scope: !5403)
!5448 = !DILocalVariable(name: "__mptr", scope: !5449, file: !3, line: 940, type: !252)
!5449 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 940, column: 2)
!5450 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 940, column: 2)
!5451 = !DILocation(line: 940, column: 2, scope: !5449)
!5452 = !DILocation(line: 940, column: 2, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 940, column: 2)
!5454 = !DILocation(line: 940, column: 2, scope: !5450)
!5455 = !DILocalVariable(name: "__mptr", scope: !5456, file: !3, line: 940, type: !252)
!5456 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 940, column: 2)
!5457 = !DILocation(line: 940, column: 2, scope: !5456)
!5458 = !DILocation(line: 940, column: 2, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 940, column: 2)
!5460 = !DILocation(line: 940, column: 2, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 940, column: 2)
!5462 = !DILocation(line: 942, column: 13, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 941, column: 27)
!5464 = !DILocation(line: 942, column: 19, scope: !5463)
!5465 = !DILocation(line: 942, column: 22, scope: !5463)
!5466 = !DILocation(line: 942, column: 27, scope: !5463)
!5467 = !DILocation(line: 942, column: 3, scope: !5463)
!5468 = !DILocation(line: 943, column: 17, scope: !5463)
!5469 = !DILocation(line: 943, column: 23, scope: !5463)
!5470 = !DILocation(line: 943, column: 26, scope: !5463)
!5471 = !DILocation(line: 943, column: 3, scope: !5463)
!5472 = !DILocation(line: 944, column: 2, scope: !5463)
!5473 = !DILocalVariable(name: "__mptr", scope: !5474, file: !3, line: 940, type: !252)
!5474 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 940, column: 2)
!5475 = !DILocation(line: 940, column: 2, scope: !5474)
!5476 = !DILocation(line: 940, column: 2, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 940, column: 2)
!5478 = distinct !{!5478, !5454, !5479}
!5479 = !DILocation(line: 944, column: 2, scope: !5450)
!5480 = !DILocalVariable(name: "__mptr", scope: !5481, file: !3, line: 946, type: !252)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 946, column: 2)
!5482 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 946, column: 2)
!5483 = !DILocation(line: 946, column: 2, scope: !5481)
!5484 = !DILocation(line: 946, column: 2, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 946, column: 2)
!5486 = !DILocation(line: 946, column: 2, scope: !5482)
!5487 = !DILocalVariable(name: "__mptr", scope: !5488, file: !3, line: 946, type: !252)
!5488 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 946, column: 2)
!5489 = !DILocation(line: 946, column: 2, scope: !5488)
!5490 = !DILocation(line: 946, column: 2, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 946, column: 2)
!5492 = !DILocation(line: 946, column: 2, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 946, column: 2)
!5494 = !DILocation(line: 948, column: 13, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 947, column: 27)
!5496 = !DILocation(line: 948, column: 19, scope: !5495)
!5497 = !DILocation(line: 948, column: 22, scope: !5495)
!5498 = !DILocation(line: 948, column: 27, scope: !5495)
!5499 = !DILocation(line: 948, column: 3, scope: !5495)
!5500 = !DILocation(line: 949, column: 17, scope: !5495)
!5501 = !DILocation(line: 949, column: 23, scope: !5495)
!5502 = !DILocation(line: 949, column: 26, scope: !5495)
!5503 = !DILocation(line: 949, column: 3, scope: !5495)
!5504 = !DILocation(line: 950, column: 2, scope: !5495)
!5505 = !DILocalVariable(name: "__mptr", scope: !5506, file: !3, line: 946, type: !252)
!5506 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 946, column: 2)
!5507 = !DILocation(line: 946, column: 2, scope: !5506)
!5508 = !DILocation(line: 946, column: 2, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 946, column: 2)
!5510 = distinct !{!5510, !5486, !5511}
!5511 = !DILocation(line: 950, column: 2, scope: !5482)
!5512 = !DILocation(line: 953, column: 31, scope: !5403)
!5513 = !DILocation(line: 953, column: 35, scope: !5403)
!5514 = !DILocation(line: 953, column: 2, scope: !5403)
!5515 = !DILocation(line: 954, column: 31, scope: !5403)
!5516 = !DILocation(line: 954, column: 35, scope: !5403)
!5517 = !DILocation(line: 954, column: 2, scope: !5403)
!5518 = !DILocation(line: 957, column: 2, scope: !5403)
!5519 = !DILocation(line: 959, column: 2, scope: !5403)
!5520 = distinct !DISubprogram(name: "pm_runtime_disable", scope: !5521, file: !5521, line: 524, type: !3534, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5521 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!5522 = !DILocalVariable(name: "dev", arg: 1, scope: !5520, file: !5521, line: 524, type: !333)
!5523 = !DILocation(line: 524, column: 54, scope: !5520)
!5524 = !DILocation(line: 526, column: 23, scope: !5520)
!5525 = !DILocation(line: 526, column: 2, scope: !5520)
!5526 = !DILocation(line: 527, column: 1, scope: !5520)
!5527 = distinct !DISubprogram(name: "list_del", scope: !5528, file: !5528, line: 144, type: !5529, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5528 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!5529 = !DISubroutineType(types: !5530)
!5530 = !{null, !288}
!5531 = !DILocalVariable(name: "entry", arg: 1, scope: !5527, file: !5528, line: 144, type: !288)
!5532 = !DILocation(line: 144, column: 47, scope: !5527)
!5533 = !DILocation(line: 146, column: 19, scope: !5527)
!5534 = !DILocation(line: 146, column: 2, scope: !5527)
!5535 = !DILocation(line: 147, column: 2, scope: !5527)
!5536 = !DILocation(line: 147, column: 9, scope: !5527)
!5537 = !DILocation(line: 147, column: 14, scope: !5527)
!5538 = !DILocation(line: 148, column: 2, scope: !5527)
!5539 = !DILocation(line: 148, column: 9, scope: !5527)
!5540 = !DILocation(line: 148, column: 14, scope: !5527)
!5541 = !DILocation(line: 149, column: 1, scope: !5527)
!5542 = distinct !DISubprogram(name: "devm_kmalloc_array", scope: !73, file: !73, line: 219, type: !4895, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5543 = !DILocalVariable(name: "dev", arg: 1, scope: !5542, file: !73, line: 219, type: !333)
!5544 = !DILocation(line: 219, column: 55, scope: !5542)
!5545 = !DILocalVariable(name: "n", arg: 2, scope: !5542, file: !73, line: 220, type: !437)
!5546 = !DILocation(line: 220, column: 19, scope: !5542)
!5547 = !DILocalVariable(name: "size", arg: 3, scope: !5542, file: !73, line: 220, type: !437)
!5548 = !DILocation(line: 220, column: 29, scope: !5542)
!5549 = !DILocalVariable(name: "flags", arg: 4, scope: !5542, file: !73, line: 220, type: !250)
!5550 = !DILocation(line: 220, column: 41, scope: !5542)
!5551 = !DILocalVariable(name: "bytes", scope: !5542, file: !73, line: 222, type: !437)
!5552 = !DILocation(line: 222, column: 9, scope: !5542)
!5553 = !DILocalVariable(name: "__a", scope: !5554, file: !73, line: 224, type: !437)
!5554 = distinct !DILexicalBlock(scope: !5555, file: !73, line: 224, column: 6)
!5555 = distinct !DILexicalBlock(scope: !5542, file: !73, line: 224, column: 6)
!5556 = !DILocation(line: 224, column: 6, scope: !5554)
!5557 = !DILocalVariable(name: "__b", scope: !5554, file: !73, line: 224, type: !437)
!5558 = !DILocalVariable(name: "__d", scope: !5554, file: !73, line: 224, type: !4420)
!5559 = !DILocation(line: 224, column: 6, scope: !5555)
!5560 = !DILocation(line: 224, column: 6, scope: !5542)
!5561 = !DILocation(line: 225, column: 3, scope: !5555)
!5562 = !DILocation(line: 227, column: 22, scope: !5542)
!5563 = !DILocation(line: 227, column: 27, scope: !5542)
!5564 = !DILocation(line: 227, column: 34, scope: !5542)
!5565 = !DILocation(line: 227, column: 9, scope: !5542)
!5566 = !DILocation(line: 227, column: 2, scope: !5542)
!5567 = !DILocation(line: 228, column: 1, scope: !5542)
!5568 = distinct !DISubprogram(name: "__must_check_overflow", scope: !5569, file: !5569, line: 52, type: !5570, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5569 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!5570 = !DISubroutineType(types: !5571)
!5571 = !{!299, !299}
!5572 = !DILocalVariable(name: "overflow", arg: 1, scope: !5568, file: !5569, line: 52, type: !299)
!5573 = !DILocation(line: 52, column: 60, scope: !5568)
!5574 = !DILocation(line: 54, column: 9, scope: !5568)
!5575 = !DILocation(line: 54, column: 2, scope: !5568)
!5576 = distinct !DISubprogram(name: "request_irq", scope: !108, file: !108, line: 157, type: !5577, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5577 = !DISubroutineType(types: !5578)
!5578 = !{!281, !7, !4207, !320, !309, !252}
!5579 = !DILocalVariable(name: "irq", arg: 1, scope: !5576, file: !108, line: 157, type: !7)
!5580 = !DILocation(line: 157, column: 26, scope: !5576)
!5581 = !DILocalVariable(name: "handler", arg: 2, scope: !5576, file: !108, line: 157, type: !4207)
!5582 = !DILocation(line: 157, column: 45, scope: !5576)
!5583 = !DILocalVariable(name: "flags", arg: 3, scope: !5576, file: !108, line: 157, type: !320)
!5584 = !DILocation(line: 157, column: 68, scope: !5576)
!5585 = !DILocalVariable(name: "name", arg: 4, scope: !5576, file: !108, line: 158, type: !309)
!5586 = !DILocation(line: 158, column: 18, scope: !5576)
!5587 = !DILocalVariable(name: "dev", arg: 5, scope: !5576, file: !108, line: 158, type: !252)
!5588 = !DILocation(line: 158, column: 30, scope: !5576)
!5589 = !DILocation(line: 160, column: 30, scope: !5576)
!5590 = !DILocation(line: 160, column: 35, scope: !5576)
!5591 = !DILocation(line: 160, column: 50, scope: !5576)
!5592 = !DILocation(line: 160, column: 57, scope: !5576)
!5593 = !DILocation(line: 160, column: 63, scope: !5576)
!5594 = !DILocation(line: 160, column: 9, scope: !5576)
!5595 = !DILocation(line: 160, column: 2, scope: !5576)
!5596 = distinct !DISubprogram(name: "dw_edma_interrupt_common", scope: !3, file: !3, line: 598, type: !4209, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5597 = !DILocalVariable(name: "irq", arg: 1, scope: !5596, file: !3, line: 598, type: !281)
!5598 = !DILocation(line: 598, column: 49, scope: !5596)
!5599 = !DILocalVariable(name: "data", arg: 2, scope: !5596, file: !3, line: 598, type: !252)
!5600 = !DILocation(line: 598, column: 60, scope: !5596)
!5601 = !DILocation(line: 600, column: 20, scope: !5596)
!5602 = !DILocation(line: 600, column: 25, scope: !5596)
!5603 = !DILocation(line: 600, column: 2, scope: !5596)
!5604 = !DILocation(line: 601, column: 20, scope: !5596)
!5605 = !DILocation(line: 601, column: 25, scope: !5596)
!5606 = !DILocation(line: 601, column: 2, scope: !5596)
!5607 = !DILocation(line: 603, column: 2, scope: !5596)
!5608 = distinct !DISubprogram(name: "irq_get_msi_desc", scope: !115, file: !115, line: 844, type: !5609, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5609 = !DISubroutineType(types: !5610)
!5610 = !{!3970, !7}
!5611 = !DILocalVariable(name: "irq", arg: 1, scope: !5608, file: !115, line: 844, type: !7)
!5612 = !DILocation(line: 844, column: 62, scope: !5608)
!5613 = !DILocalVariable(name: "d", scope: !5608, file: !115, line: 846, type: !3957)
!5614 = !DILocation(line: 846, column: 19, scope: !5608)
!5615 = !DILocation(line: 846, column: 40, scope: !5608)
!5616 = !DILocation(line: 846, column: 23, scope: !5608)
!5617 = !DILocation(line: 847, column: 9, scope: !5608)
!5618 = !DILocation(line: 847, column: 13, scope: !5608)
!5619 = !DILocation(line: 847, column: 16, scope: !5608)
!5620 = !DILocation(line: 847, column: 24, scope: !5608)
!5621 = !DILocation(line: 847, column: 2, scope: !5608)
!5622 = distinct !DISubprogram(name: "dw_edma_dec_irq_alloc", scope: !3, file: !3, line: 768, type: !5623, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5623 = !DISubroutineType(types: !5624)
!5624 = !{null, !821, !1558, !971}
!5625 = !DILocalVariable(name: "nr_irqs", arg: 1, scope: !5622, file: !3, line: 768, type: !821)
!5626 = !DILocation(line: 768, column: 47, scope: !5622)
!5627 = !DILocalVariable(name: "alloc", arg: 2, scope: !5622, file: !3, line: 768, type: !1558)
!5628 = !DILocation(line: 768, column: 61, scope: !5622)
!5629 = !DILocalVariable(name: "cnt", arg: 3, scope: !5622, file: !3, line: 768, type: !971)
!5630 = !DILocation(line: 768, column: 72, scope: !5622)
!5631 = !DILocation(line: 770, column: 7, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5622, file: !3, line: 770, column: 6)
!5633 = !DILocation(line: 770, column: 6, scope: !5632)
!5634 = !DILocation(line: 770, column: 15, scope: !5632)
!5635 = !DILocation(line: 770, column: 19, scope: !5632)
!5636 = !DILocation(line: 770, column: 18, scope: !5632)
!5637 = !DILocation(line: 770, column: 27, scope: !5632)
!5638 = !DILocation(line: 770, column: 25, scope: !5632)
!5639 = !DILocation(line: 770, column: 6, scope: !5622)
!5640 = !DILocation(line: 771, column: 5, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 770, column: 32)
!5642 = !DILocation(line: 771, column: 11, scope: !5641)
!5643 = !DILocation(line: 772, column: 5, scope: !5641)
!5644 = !DILocation(line: 772, column: 13, scope: !5641)
!5645 = !DILocation(line: 773, column: 2, scope: !5641)
!5646 = !DILocation(line: 774, column: 1, scope: !5622)
!5647 = distinct !DISubprogram(name: "dw_edma_add_irq_mask", scope: !3, file: !3, line: 776, type: !5648, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5648 = !DISubroutineType(types: !5649)
!5649 = !{null, !1558, !530, !971}
!5650 = !DILocalVariable(name: "mask", arg: 1, scope: !5647, file: !3, line: 776, type: !1558)
!5651 = !DILocation(line: 776, column: 46, scope: !5647)
!5652 = !DILocalVariable(name: "alloc", arg: 2, scope: !5647, file: !3, line: 776, type: !530)
!5653 = !DILocation(line: 776, column: 56, scope: !5647)
!5654 = !DILocalVariable(name: "cnt", arg: 3, scope: !5647, file: !3, line: 776, type: !971)
!5655 = !DILocation(line: 776, column: 67, scope: !5647)
!5656 = !DILocation(line: 778, column: 2, scope: !5647)
!5657 = !DILocation(line: 778, column: 10, scope: !5647)
!5658 = !DILocation(line: 778, column: 9, scope: !5647)
!5659 = !DILocation(line: 778, column: 17, scope: !5647)
!5660 = !DILocation(line: 778, column: 15, scope: !5647)
!5661 = !DILocation(line: 778, column: 25, scope: !5647)
!5662 = !DILocation(line: 778, column: 23, scope: !5647)
!5663 = !DILocation(line: 779, column: 5, scope: !5647)
!5664 = !DILocation(line: 779, column: 10, scope: !5647)
!5665 = distinct !{!5665, !5656, !5664}
!5666 = !DILocation(line: 780, column: 1, scope: !5647)
!5667 = distinct !DISubprogram(name: "dw_edma_interrupt_write", scope: !3, file: !3, line: 588, type: !4209, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5668 = !DILocalVariable(name: "irq", arg: 1, scope: !5667, file: !3, line: 588, type: !281)
!5669 = !DILocation(line: 588, column: 55, scope: !5667)
!5670 = !DILocalVariable(name: "data", arg: 2, scope: !5667, file: !3, line: 588, type: !252)
!5671 = !DILocation(line: 588, column: 66, scope: !5667)
!5672 = !DILocation(line: 590, column: 27, scope: !5667)
!5673 = !DILocation(line: 590, column: 32, scope: !5667)
!5674 = !DILocation(line: 590, column: 9, scope: !5667)
!5675 = !DILocation(line: 590, column: 2, scope: !5667)
!5676 = distinct !DISubprogram(name: "dw_edma_interrupt_read", scope: !3, file: !3, line: 593, type: !4209, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5677 = !DILocalVariable(name: "irq", arg: 1, scope: !5676, file: !3, line: 593, type: !281)
!5678 = !DILocation(line: 593, column: 54, scope: !5676)
!5679 = !DILocalVariable(name: "data", arg: 2, scope: !5676, file: !3, line: 593, type: !252)
!5680 = !DILocation(line: 593, column: 65, scope: !5676)
!5681 = !DILocation(line: 595, column: 27, scope: !5676)
!5682 = !DILocation(line: 595, column: 32, scope: !5676)
!5683 = !DILocation(line: 595, column: 9, scope: !5676)
!5684 = !DILocation(line: 595, column: 2, scope: !5676)
!5685 = distinct !DISubprogram(name: "dw_edma_interrupt", scope: !3, file: !3, line: 547, type: !5686, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!4211, !281, !252, !299}
!5688 = !DILocalVariable(name: "irq", arg: 1, scope: !5685, file: !3, line: 547, type: !281)
!5689 = !DILocation(line: 547, column: 42, scope: !5685)
!5690 = !DILocalVariable(name: "data", arg: 2, scope: !5685, file: !3, line: 547, type: !252)
!5691 = !DILocation(line: 547, column: 53, scope: !5685)
!5692 = !DILocalVariable(name: "write", arg: 3, scope: !5685, file: !3, line: 547, type: !299)
!5693 = !DILocation(line: 547, column: 64, scope: !5685)
!5694 = !DILocalVariable(name: "dw_irq", scope: !5685, file: !3, line: 549, type: !4652)
!5695 = !DILocation(line: 549, column: 22, scope: !5685)
!5696 = !DILocation(line: 549, column: 31, scope: !5685)
!5697 = !DILocalVariable(name: "dw", scope: !5685, file: !3, line: 550, type: !4634)
!5698 = !DILocation(line: 550, column: 18, scope: !5685)
!5699 = !DILocation(line: 550, column: 23, scope: !5685)
!5700 = !DILocation(line: 550, column: 31, scope: !5685)
!5701 = !DILocalVariable(name: "total", scope: !5685, file: !3, line: 551, type: !320)
!5702 = !DILocation(line: 551, column: 16, scope: !5685)
!5703 = !DILocalVariable(name: "pos", scope: !5685, file: !3, line: 551, type: !320)
!5704 = !DILocation(line: 551, column: 23, scope: !5685)
!5705 = !DILocalVariable(name: "val", scope: !5685, file: !3, line: 551, type: !320)
!5706 = !DILocation(line: 551, column: 28, scope: !5685)
!5707 = !DILocalVariable(name: "off", scope: !5685, file: !3, line: 552, type: !320)
!5708 = !DILocation(line: 552, column: 16, scope: !5685)
!5709 = !DILocalVariable(name: "mask", scope: !5685, file: !3, line: 553, type: !530)
!5710 = !DILocation(line: 553, column: 6, scope: !5685)
!5711 = !DILocation(line: 555, column: 6, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 555, column: 6)
!5713 = !DILocation(line: 555, column: 6, scope: !5685)
!5714 = !DILocation(line: 556, column: 11, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 555, column: 13)
!5716 = !DILocation(line: 556, column: 15, scope: !5715)
!5717 = !DILocation(line: 556, column: 9, scope: !5715)
!5718 = !DILocation(line: 557, column: 7, scope: !5715)
!5719 = !DILocation(line: 558, column: 10, scope: !5715)
!5720 = !DILocation(line: 558, column: 18, scope: !5715)
!5721 = !DILocation(line: 558, column: 8, scope: !5715)
!5722 = !DILocation(line: 559, column: 2, scope: !5715)
!5723 = !DILocation(line: 560, column: 11, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 559, column: 9)
!5725 = !DILocation(line: 560, column: 15, scope: !5724)
!5726 = !DILocation(line: 560, column: 9, scope: !5724)
!5727 = !DILocation(line: 561, column: 9, scope: !5724)
!5728 = !DILocation(line: 561, column: 13, scope: !5724)
!5729 = !DILocation(line: 561, column: 7, scope: !5724)
!5730 = !DILocation(line: 562, column: 10, scope: !5724)
!5731 = !DILocation(line: 562, column: 18, scope: !5724)
!5732 = !DILocation(line: 562, column: 8, scope: !5724)
!5733 = !DILocation(line: 565, column: 40, scope: !5685)
!5734 = !DILocation(line: 565, column: 44, scope: !5685)
!5735 = !DILocation(line: 565, column: 8, scope: !5685)
!5736 = !DILocation(line: 565, column: 6, scope: !5685)
!5737 = !DILocation(line: 568, column: 9, scope: !5685)
!5738 = !DILocation(line: 568, column: 6, scope: !5685)
!5739 = !DILocation(line: 569, column: 2, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 569, column: 2)
!5741 = !DILocation(line: 569, column: 2, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 569, column: 2)
!5743 = !DILocalVariable(name: "chan", scope: !5744, file: !3, line: 570, type: !253)
!5744 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 569, column: 37)
!5745 = !DILocation(line: 570, column: 24, scope: !5744)
!5746 = !DILocation(line: 570, column: 32, scope: !5744)
!5747 = !DILocation(line: 570, column: 36, scope: !5744)
!5748 = !DILocation(line: 570, column: 41, scope: !5744)
!5749 = !DILocation(line: 570, column: 47, scope: !5744)
!5750 = !DILocation(line: 570, column: 45, scope: !5744)
!5751 = !DILocation(line: 572, column: 26, scope: !5744)
!5752 = !DILocation(line: 572, column: 3, scope: !5744)
!5753 = !DILocation(line: 573, column: 2, scope: !5744)
!5754 = distinct !{!5754, !5739, !5755}
!5755 = !DILocation(line: 573, column: 2, scope: !5740)
!5756 = !DILocation(line: 575, column: 41, scope: !5685)
!5757 = !DILocation(line: 575, column: 45, scope: !5685)
!5758 = !DILocation(line: 575, column: 8, scope: !5685)
!5759 = !DILocation(line: 575, column: 6, scope: !5685)
!5760 = !DILocation(line: 578, column: 9, scope: !5685)
!5761 = !DILocation(line: 578, column: 6, scope: !5685)
!5762 = !DILocation(line: 579, column: 2, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 579, column: 2)
!5764 = !DILocation(line: 579, column: 2, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 579, column: 2)
!5766 = !DILocalVariable(name: "chan", scope: !5767, file: !3, line: 580, type: !253)
!5767 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 579, column: 37)
!5768 = !DILocation(line: 580, column: 24, scope: !5767)
!5769 = !DILocation(line: 580, column: 32, scope: !5767)
!5770 = !DILocation(line: 580, column: 36, scope: !5767)
!5771 = !DILocation(line: 580, column: 41, scope: !5767)
!5772 = !DILocation(line: 580, column: 47, scope: !5767)
!5773 = !DILocation(line: 580, column: 45, scope: !5767)
!5774 = !DILocation(line: 582, column: 27, scope: !5767)
!5775 = !DILocation(line: 582, column: 3, scope: !5767)
!5776 = !DILocation(line: 583, column: 2, scope: !5767)
!5777 = distinct !{!5777, !5762, !5778}
!5778 = !DILocation(line: 583, column: 2, scope: !5763)
!5779 = !DILocation(line: 585, column: 2, scope: !5685)
!5780 = distinct !DISubprogram(name: "dw_edma_done_interrupt", scope: !3, file: !3, line: 486, type: !5781, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{null, !253}
!5783 = !DILocalVariable(name: "lock", arg: 1, scope: !5784, file: !5785, line: 407, type: !1216)
!5784 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5785, file: !5785, line: 407, type: !5786, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5785 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5786 = !DISubroutineType(types: !5787)
!5787 = !{null, !1216, !320}
!5788 = !DILocation(line: 407, column: 64, scope: !5784, inlinedAt: !5789)
!5789 = distinct !DILocation(line: 526, column: 2, scope: !5780)
!5790 = !DILocalVariable(name: "flags", arg: 2, scope: !5784, file: !5785, line: 407, type: !320)
!5791 = !DILocation(line: 407, column: 84, scope: !5784, inlinedAt: !5789)
!5792 = !DILocalVariable(name: "lock", arg: 1, scope: !5793, file: !5785, line: 327, type: !1216)
!5793 = distinct !DISubprogram(name: "spinlock_check", scope: !5785, file: !5785, line: 327, type: !5794, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5794 = !DISubroutineType(types: !5795)
!5795 = !{!5796, !1216}
!5796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!5797 = !DILocation(line: 327, column: 67, scope: !5793, inlinedAt: !5798)
!5798 = distinct !DILocation(line: 494, column: 2, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 494, column: 2)
!5800 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 494, column: 2)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 494, column: 2)
!5802 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 494, column: 2)
!5803 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 494, column: 2)
!5804 = !DILocalVariable(name: "chan", arg: 1, scope: !5780, file: !3, line: 486, type: !253)
!5805 = !DILocation(line: 486, column: 57, scope: !5780)
!5806 = !DILocalVariable(name: "desc", scope: !5780, file: !3, line: 488, type: !4688)
!5807 = !DILocation(line: 488, column: 23, scope: !5780)
!5808 = !DILocalVariable(name: "vd", scope: !5780, file: !3, line: 489, type: !4612)
!5809 = !DILocation(line: 489, column: 24, scope: !5780)
!5810 = !DILocalVariable(name: "flags", scope: !5780, file: !3, line: 490, type: !320)
!5811 = !DILocation(line: 490, column: 16, scope: !5780)
!5812 = !DILocation(line: 492, column: 33, scope: !5780)
!5813 = !DILocation(line: 492, column: 2, scope: !5780)
!5814 = !DILocation(line: 494, column: 2, scope: !5780)
!5815 = !DILocation(line: 494, column: 2, scope: !5803)
!5816 = !DILocalVariable(name: "__dummy", scope: !5817, file: !3, line: 494, type: !320)
!5817 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 494, column: 2)
!5818 = !DILocation(line: 494, column: 2, scope: !5817)
!5819 = !DILocalVariable(name: "__dummy2", scope: !5817, file: !3, line: 494, type: !320)
!5820 = !DILocation(line: 494, column: 2, scope: !5802)
!5821 = !DILocation(line: 494, column: 2, scope: !5801)
!5822 = !DILocation(line: 494, column: 2, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 494, column: 2)
!5824 = !DILocalVariable(name: "__dummy", scope: !5825, file: !3, line: 494, type: !320)
!5825 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 494, column: 2)
!5826 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 494, column: 2)
!5827 = !DILocation(line: 494, column: 2, scope: !5825)
!5828 = !DILocalVariable(name: "__dummy2", scope: !5825, file: !3, line: 494, type: !320)
!5829 = !DILocation(line: 494, column: 2, scope: !5826)
!5830 = !DILocation(line: 494, column: 2, scope: !5800)
!5831 = !{i32 -2141656969}
!5832 = !DILocation(line: 494, column: 2, scope: !5799)
!5833 = !DILocation(line: 329, column: 10, scope: !5793, inlinedAt: !5798)
!5834 = !DILocation(line: 329, column: 16, scope: !5793, inlinedAt: !5798)
!5835 = !DILocation(line: 495, column: 24, scope: !5780)
!5836 = !DILocation(line: 495, column: 30, scope: !5780)
!5837 = !DILocation(line: 495, column: 7, scope: !5780)
!5838 = !DILocation(line: 495, column: 5, scope: !5780)
!5839 = !DILocation(line: 496, column: 6, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 496, column: 6)
!5841 = !DILocation(line: 496, column: 6, scope: !5780)
!5842 = !DILocation(line: 497, column: 11, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 496, column: 10)
!5844 = !DILocation(line: 497, column: 17, scope: !5843)
!5845 = !DILocation(line: 497, column: 3, scope: !5843)
!5846 = !DILocation(line: 499, column: 27, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 497, column: 26)
!5848 = !DILocation(line: 499, column: 11, scope: !5847)
!5849 = !DILocation(line: 499, column: 9, scope: !5847)
!5850 = !DILocation(line: 500, column: 8, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 500, column: 8)
!5852 = !DILocation(line: 500, column: 14, scope: !5851)
!5853 = !DILocation(line: 500, column: 8, scope: !5847)
!5854 = !DILocation(line: 501, column: 5, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 500, column: 28)
!5856 = !DILocation(line: 501, column: 11, scope: !5855)
!5857 = !DILocation(line: 501, column: 18, scope: !5855)
!5858 = !DILocation(line: 502, column: 28, scope: !5855)
!5859 = !DILocation(line: 502, column: 5, scope: !5855)
!5860 = !DILocation(line: 503, column: 4, scope: !5855)
!5861 = !DILocation(line: 504, column: 15, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 503, column: 11)
!5863 = !DILocation(line: 504, column: 19, scope: !5862)
!5864 = !DILocation(line: 504, column: 5, scope: !5862)
!5865 = !DILocation(line: 505, column: 27, scope: !5862)
!5866 = !DILocation(line: 505, column: 5, scope: !5862)
!5867 = !DILocation(line: 506, column: 5, scope: !5862)
!5868 = !DILocation(line: 506, column: 11, scope: !5862)
!5869 = !DILocation(line: 506, column: 18, scope: !5862)
!5870 = !DILocation(line: 508, column: 4, scope: !5847)
!5871 = !DILocation(line: 511, column: 14, scope: !5847)
!5872 = !DILocation(line: 511, column: 18, scope: !5847)
!5873 = !DILocation(line: 511, column: 4, scope: !5847)
!5874 = !DILocation(line: 512, column: 26, scope: !5847)
!5875 = !DILocation(line: 512, column: 4, scope: !5847)
!5876 = !DILocation(line: 513, column: 4, scope: !5847)
!5877 = !DILocation(line: 513, column: 10, scope: !5847)
!5878 = !DILocation(line: 513, column: 18, scope: !5847)
!5879 = !DILocation(line: 514, column: 4, scope: !5847)
!5880 = !DILocation(line: 514, column: 10, scope: !5847)
!5881 = !DILocation(line: 514, column: 17, scope: !5847)
!5882 = !DILocation(line: 515, column: 4, scope: !5847)
!5883 = !DILocation(line: 518, column: 4, scope: !5847)
!5884 = !DILocation(line: 518, column: 10, scope: !5847)
!5885 = !DILocation(line: 518, column: 18, scope: !5847)
!5886 = !DILocation(line: 519, column: 4, scope: !5847)
!5887 = !DILocation(line: 519, column: 10, scope: !5847)
!5888 = !DILocation(line: 519, column: 17, scope: !5847)
!5889 = !DILocation(line: 520, column: 4, scope: !5847)
!5890 = !DILocation(line: 523, column: 4, scope: !5847)
!5891 = !DILocation(line: 525, column: 2, scope: !5843)
!5892 = !DILocation(line: 526, column: 26, scope: !5780)
!5893 = !DILocation(line: 526, column: 32, scope: !5780)
!5894 = !DILocation(line: 526, column: 35, scope: !5780)
!5895 = !DILocation(line: 526, column: 41, scope: !5780)
!5896 = !DILocalVariable(name: "__dummy", scope: !5897, file: !5785, line: 409, type: !320)
!5897 = distinct !DILexicalBlock(scope: !5898, file: !5785, line: 409, column: 2)
!5898 = distinct !DILexicalBlock(scope: !5784, file: !5785, line: 409, column: 2)
!5899 = !DILocation(line: 409, column: 2, scope: !5897, inlinedAt: !5789)
!5900 = !DILocalVariable(name: "__dummy2", scope: !5897, file: !5785, line: 409, type: !320)
!5901 = !DILocalVariable(name: "__dummy", scope: !5902, file: !5785, line: 409, type: !320)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !5785, line: 409, column: 2)
!5903 = distinct !DILexicalBlock(scope: !5904, file: !5785, line: 409, column: 2)
!5904 = distinct !DILexicalBlock(scope: !5905, file: !5785, line: 409, column: 2)
!5905 = distinct !DILexicalBlock(scope: !5898, file: !5785, line: 409, column: 2)
!5906 = !DILocation(line: 409, column: 2, scope: !5902, inlinedAt: !5789)
!5907 = !DILocalVariable(name: "__dummy2", scope: !5902, file: !5785, line: 409, type: !320)
!5908 = !DILocation(line: 409, column: 2, scope: !5903, inlinedAt: !5789)
!5909 = !DILocation(line: 409, column: 2, scope: !5910, inlinedAt: !5789)
!5910 = distinct !DILexicalBlock(scope: !5905, file: !5785, line: 409, column: 2)
!5911 = !{i32 -2145455324}
!5912 = !DILocation(line: 409, column: 2, scope: !5913, inlinedAt: !5789)
!5913 = distinct !DILexicalBlock(scope: !5910, file: !5785, line: 409, column: 2)
!5914 = !DILocation(line: 527, column: 1, scope: !5780)
!5915 = distinct !DISubprogram(name: "dw_edma_abort_interrupt", scope: !3, file: !3, line: 529, type: !5781, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5916 = !DILocation(line: 407, column: 64, scope: !5784, inlinedAt: !5917)
!5917 = distinct !DILocation(line: 542, column: 2, scope: !5915)
!5918 = !DILocation(line: 407, column: 84, scope: !5784, inlinedAt: !5917)
!5919 = !DILocation(line: 327, column: 67, scope: !5793, inlinedAt: !5920)
!5920 = distinct !DILocation(line: 536, column: 2, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 536, column: 2)
!5922 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 536, column: 2)
!5923 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 536, column: 2)
!5924 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 536, column: 2)
!5925 = distinct !DILexicalBlock(scope: !5915, file: !3, line: 536, column: 2)
!5926 = !DILocalVariable(name: "chan", arg: 1, scope: !5915, file: !3, line: 529, type: !253)
!5927 = !DILocation(line: 529, column: 58, scope: !5915)
!5928 = !DILocalVariable(name: "vd", scope: !5915, file: !3, line: 531, type: !4612)
!5929 = !DILocation(line: 531, column: 24, scope: !5915)
!5930 = !DILocalVariable(name: "flags", scope: !5915, file: !3, line: 532, type: !320)
!5931 = !DILocation(line: 532, column: 16, scope: !5915)
!5932 = !DILocation(line: 534, column: 34, scope: !5915)
!5933 = !DILocation(line: 534, column: 2, scope: !5915)
!5934 = !DILocation(line: 536, column: 2, scope: !5915)
!5935 = !DILocation(line: 536, column: 2, scope: !5925)
!5936 = !DILocalVariable(name: "__dummy", scope: !5937, file: !3, line: 536, type: !320)
!5937 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 536, column: 2)
!5938 = !DILocation(line: 536, column: 2, scope: !5937)
!5939 = !DILocalVariable(name: "__dummy2", scope: !5937, file: !3, line: 536, type: !320)
!5940 = !DILocation(line: 536, column: 2, scope: !5924)
!5941 = !DILocation(line: 536, column: 2, scope: !5923)
!5942 = !DILocation(line: 536, column: 2, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 536, column: 2)
!5944 = !DILocalVariable(name: "__dummy", scope: !5945, file: !3, line: 536, type: !320)
!5945 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 536, column: 2)
!5946 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 536, column: 2)
!5947 = !DILocation(line: 536, column: 2, scope: !5945)
!5948 = !DILocalVariable(name: "__dummy2", scope: !5945, file: !3, line: 536, type: !320)
!5949 = !DILocation(line: 536, column: 2, scope: !5946)
!5950 = !DILocation(line: 536, column: 2, scope: !5922)
!5951 = !{i32 -2141655929}
!5952 = !DILocation(line: 536, column: 2, scope: !5921)
!5953 = !DILocation(line: 329, column: 10, scope: !5793, inlinedAt: !5920)
!5954 = !DILocation(line: 329, column: 16, scope: !5793, inlinedAt: !5920)
!5955 = !DILocation(line: 537, column: 24, scope: !5915)
!5956 = !DILocation(line: 537, column: 30, scope: !5915)
!5957 = !DILocation(line: 537, column: 7, scope: !5915)
!5958 = !DILocation(line: 537, column: 5, scope: !5915)
!5959 = !DILocation(line: 538, column: 6, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5915, file: !3, line: 538, column: 6)
!5961 = !DILocation(line: 538, column: 6, scope: !5915)
!5962 = !DILocation(line: 539, column: 13, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 538, column: 10)
!5964 = !DILocation(line: 539, column: 17, scope: !5963)
!5965 = !DILocation(line: 539, column: 3, scope: !5963)
!5966 = !DILocation(line: 540, column: 25, scope: !5963)
!5967 = !DILocation(line: 540, column: 3, scope: !5963)
!5968 = !DILocation(line: 541, column: 2, scope: !5963)
!5969 = !DILocation(line: 542, column: 26, scope: !5915)
!5970 = !DILocation(line: 542, column: 32, scope: !5915)
!5971 = !DILocation(line: 542, column: 35, scope: !5915)
!5972 = !DILocation(line: 542, column: 41, scope: !5915)
!5973 = !DILocation(line: 409, column: 2, scope: !5897, inlinedAt: !5917)
!5974 = !DILocation(line: 409, column: 2, scope: !5902, inlinedAt: !5917)
!5975 = !DILocation(line: 409, column: 2, scope: !5903, inlinedAt: !5917)
!5976 = !DILocation(line: 409, column: 2, scope: !5910, inlinedAt: !5917)
!5977 = !DILocation(line: 409, column: 2, scope: !5913, inlinedAt: !5917)
!5978 = !DILocation(line: 543, column: 2, scope: !5915)
!5979 = !DILocation(line: 543, column: 8, scope: !5915)
!5980 = !DILocation(line: 543, column: 16, scope: !5915)
!5981 = !DILocation(line: 544, column: 2, scope: !5915)
!5982 = !DILocation(line: 544, column: 8, scope: !5915)
!5983 = !DILocation(line: 544, column: 15, scope: !5915)
!5984 = !DILocation(line: 545, column: 1, scope: !5915)
!5985 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !5986, file: !5986, line: 666, type: !5987, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5986 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!5987 = !DISubroutineType(types: !5988)
!5988 = !{!320}
!5989 = !DILocalVariable(name: "f", scope: !5985, file: !5986, line: 668, type: !320)
!5990 = !DILocation(line: 668, column: 16, scope: !5985)
!5991 = !DILocation(line: 670, column: 6, scope: !5985)
!5992 = !DILocation(line: 670, column: 4, scope: !5985)
!5993 = !DILocation(line: 671, column: 2, scope: !5985)
!5994 = !DILocation(line: 672, column: 9, scope: !5985)
!5995 = !DILocation(line: 672, column: 2, scope: !5985)
!5996 = distinct !DISubprogram(name: "vchan_next_desc", scope: !258, file: !258, line: 161, type: !5997, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!5997 = !DISubroutineType(types: !5998)
!5998 = !{!4612, !4713}
!5999 = !DILocalVariable(name: "vc", arg: 1, scope: !5996, file: !258, line: 161, type: !4713)
!6000 = !DILocation(line: 161, column: 75, scope: !5996)
!6001 = !DILocalVariable(name: "head__", scope: !6002, file: !258, line: 163, type: !288)
!6002 = distinct !DILexicalBlock(scope: !5996, file: !258, line: 163, column: 9)
!6003 = !DILocation(line: 163, column: 9, scope: !6002)
!6004 = !DILocalVariable(name: "pos__", scope: !6002, file: !258, line: 163, type: !288)
!6005 = !DILocation(line: 163, column: 9, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6002, file: !258, line: 163, column: 9)
!6007 = !DILocation(line: 163, column: 9, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6006, file: !258, line: 163, column: 9)
!6009 = !DILocalVariable(name: "__mptr", scope: !6010, file: !258, line: 163, type: !252)
!6010 = distinct !DILexicalBlock(scope: !6002, file: !258, line: 163, column: 9)
!6011 = !DILocation(line: 163, column: 9, scope: !6010)
!6012 = !DILocation(line: 163, column: 9, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6010, file: !258, line: 163, column: 9)
!6014 = !DILocation(line: 163, column: 2, scope: !5996)
!6015 = distinct !DISubprogram(name: "vd2dw_edma_desc", scope: !3, file: !3, line: 38, type: !6016, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!4688, !4612}
!6018 = !DILocalVariable(name: "vd", arg: 1, scope: !6015, file: !3, line: 38, type: !4612)
!6019 = !DILocation(line: 38, column: 60, scope: !6015)
!6020 = !DILocalVariable(name: "__mptr", scope: !6021, file: !3, line: 40, type: !252)
!6021 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 40, column: 9)
!6022 = !DILocation(line: 40, column: 9, scope: !6021)
!6023 = !DILocation(line: 40, column: 9, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6021, file: !3, line: 40, column: 9)
!6025 = !DILocation(line: 40, column: 2, scope: !6015)
!6026 = distinct !DISubprogram(name: "dw_edma_start_transfer", scope: !3, file: !3, line: 169, type: !5781, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6027 = !DILocalVariable(name: "chan", arg: 1, scope: !6026, file: !3, line: 169, type: !253)
!6028 = !DILocation(line: 169, column: 57, scope: !6026)
!6029 = !DILocalVariable(name: "child", scope: !6026, file: !3, line: 171, type: !4694)
!6030 = !DILocation(line: 171, column: 24, scope: !6026)
!6031 = !DILocalVariable(name: "desc", scope: !6026, file: !3, line: 172, type: !4688)
!6032 = !DILocation(line: 172, column: 23, scope: !6026)
!6033 = !DILocalVariable(name: "vd", scope: !6026, file: !3, line: 173, type: !4612)
!6034 = !DILocation(line: 173, column: 24, scope: !6026)
!6035 = !DILocation(line: 175, column: 24, scope: !6026)
!6036 = !DILocation(line: 175, column: 30, scope: !6026)
!6037 = !DILocation(line: 175, column: 7, scope: !6026)
!6038 = !DILocation(line: 175, column: 5, scope: !6026)
!6039 = !DILocation(line: 176, column: 7, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 176, column: 6)
!6041 = !DILocation(line: 176, column: 6, scope: !6026)
!6042 = !DILocation(line: 177, column: 3, scope: !6040)
!6043 = !DILocation(line: 179, column: 25, scope: !6026)
!6044 = !DILocation(line: 179, column: 9, scope: !6026)
!6045 = !DILocation(line: 179, column: 7, scope: !6026)
!6046 = !DILocation(line: 180, column: 7, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 180, column: 6)
!6048 = !DILocation(line: 180, column: 6, scope: !6026)
!6049 = !DILocation(line: 181, column: 3, scope: !6047)
!6050 = !DILocalVariable(name: "head__", scope: !6051, file: !3, line: 183, type: !288)
!6051 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 183, column: 10)
!6052 = !DILocation(line: 183, column: 10, scope: !6051)
!6053 = !DILocalVariable(name: "pos__", scope: !6051, file: !3, line: 183, type: !288)
!6054 = !DILocation(line: 183, column: 10, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 183, column: 10)
!6056 = !DILocation(line: 183, column: 10, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 183, column: 10)
!6058 = !DILocalVariable(name: "__mptr", scope: !6059, file: !3, line: 183, type: !252)
!6059 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 183, column: 10)
!6060 = !DILocation(line: 183, column: 10, scope: !6059)
!6061 = !DILocation(line: 183, column: 10, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 183, column: 10)
!6063 = !DILocation(line: 183, column: 8, scope: !6026)
!6064 = !DILocation(line: 185, column: 7, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 185, column: 6)
!6066 = !DILocation(line: 185, column: 6, scope: !6026)
!6067 = !DILocation(line: 186, column: 3, scope: !6065)
!6068 = !DILocation(line: 188, column: 24, scope: !6026)
!6069 = !DILocation(line: 188, column: 32, scope: !6026)
!6070 = !DILocation(line: 188, column: 38, scope: !6026)
!6071 = !DILocation(line: 188, column: 31, scope: !6026)
!6072 = !DILocation(line: 188, column: 2, scope: !6026)
!6073 = !DILocation(line: 189, column: 19, scope: !6026)
!6074 = !DILocation(line: 189, column: 26, scope: !6026)
!6075 = !DILocation(line: 189, column: 36, scope: !6026)
!6076 = !DILocation(line: 189, column: 2, scope: !6026)
!6077 = !DILocation(line: 189, column: 8, scope: !6026)
!6078 = !DILocation(line: 189, column: 16, scope: !6026)
!6079 = !DILocation(line: 190, column: 21, scope: !6026)
!6080 = !DILocation(line: 190, column: 2, scope: !6026)
!6081 = !DILocation(line: 191, column: 12, scope: !6026)
!6082 = !DILocation(line: 191, column: 19, scope: !6026)
!6083 = !DILocation(line: 191, column: 2, scope: !6026)
!6084 = !DILocation(line: 192, column: 8, scope: !6026)
!6085 = !DILocation(line: 192, column: 2, scope: !6026)
!6086 = !DILocation(line: 193, column: 2, scope: !6026)
!6087 = !DILocation(line: 193, column: 8, scope: !6026)
!6088 = !DILocation(line: 193, column: 20, scope: !6026)
!6089 = !DILocation(line: 194, column: 1, scope: !6026)
!6090 = distinct !DISubprogram(name: "vchan_cookie_complete", scope: !258, file: !258, line: 94, type: !4610, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6091 = !DILocalVariable(name: "vd", arg: 1, scope: !6090, file: !258, line: 94, type: !4612)
!6092 = !DILocation(line: 94, column: 64, scope: !6090)
!6093 = !DILocalVariable(name: "vc", scope: !6090, file: !258, line: 96, type: !4713)
!6094 = !DILocation(line: 96, column: 24, scope: !6090)
!6095 = !DILocation(line: 96, column: 42, scope: !6090)
!6096 = !DILocation(line: 96, column: 46, scope: !6090)
!6097 = !DILocation(line: 96, column: 49, scope: !6090)
!6098 = !DILocation(line: 96, column: 29, scope: !6090)
!6099 = !DILocalVariable(name: "cookie", scope: !6090, file: !258, line: 97, type: !4368)
!6100 = !DILocation(line: 97, column: 15, scope: !6090)
!6101 = !DILocation(line: 99, column: 11, scope: !6090)
!6102 = !DILocation(line: 99, column: 15, scope: !6090)
!6103 = !DILocation(line: 99, column: 18, scope: !6090)
!6104 = !DILocation(line: 99, column: 9, scope: !6090)
!6105 = !DILocation(line: 100, column: 23, scope: !6090)
!6106 = !DILocation(line: 100, column: 27, scope: !6090)
!6107 = !DILocation(line: 100, column: 2, scope: !6090)
!6108 = !DILocation(line: 103, column: 17, scope: !6090)
!6109 = !DILocation(line: 103, column: 21, scope: !6090)
!6110 = !DILocation(line: 103, column: 28, scope: !6090)
!6111 = !DILocation(line: 103, column: 32, scope: !6090)
!6112 = !DILocation(line: 103, column: 2, scope: !6090)
!6113 = !DILocation(line: 105, column: 20, scope: !6090)
!6114 = !DILocation(line: 105, column: 24, scope: !6090)
!6115 = !DILocation(line: 105, column: 2, scope: !6090)
!6116 = !DILocation(line: 106, column: 1, scope: !6090)
!6117 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !5986, file: !5986, line: 646, type: !5987, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6118 = !DILocalVariable(name: "__ret", scope: !6119, file: !5986, line: 648, type: !320)
!6119 = distinct !DILexicalBlock(scope: !6117, file: !5986, line: 648, column: 9)
!6120 = !DILocation(line: 648, column: 9, scope: !6119)
!6121 = !DILocalVariable(name: "__edi", scope: !6119, file: !5986, line: 648, type: !320)
!6122 = !DILocalVariable(name: "__esi", scope: !6119, file: !5986, line: 648, type: !320)
!6123 = !DILocalVariable(name: "__edx", scope: !6119, file: !5986, line: 648, type: !320)
!6124 = !DILocalVariable(name: "__ecx", scope: !6119, file: !5986, line: 648, type: !320)
!6125 = !DILocalVariable(name: "__eax", scope: !6119, file: !5986, line: 648, type: !320)
!6126 = !DILocation(line: 648, column: 9, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6128, file: !5986, line: 648, column: 9)
!6128 = distinct !DILexicalBlock(scope: !6119, file: !5986, line: 648, column: 9)
!6129 = !{i32 -2145768893, i32 -2145766578, i32 -2145766344, i32 -2145766293, i32 -2145766265, i32 -2145766240, i32 -2145766556, i32 -2145766543, i32 -2145766105, i32 -2145765986, i32 -2145766451, i32 -2145766424, i32 -2145766396, i32 -2145766366}
!6130 = !DILocalVariable(name: "__mask", scope: !6131, file: !5986, line: 648, type: !320)
!6131 = distinct !DILexicalBlock(scope: !6127, file: !5986, line: 648, column: 9)
!6132 = !DILocation(line: 648, column: 9, scope: !6131)
!6133 = !DILocation(line: 648, column: 9, scope: !6128)
!6134 = !DILocation(line: 648, column: 2, scope: !6117)
!6135 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !5986, file: !5986, line: 656, type: !2023, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6136 = !DILocalVariable(name: "__edi", scope: !6137, file: !5986, line: 658, type: !320)
!6137 = distinct !DILexicalBlock(scope: !6135, file: !5986, line: 658, column: 2)
!6138 = !DILocation(line: 658, column: 2, scope: !6137)
!6139 = !DILocalVariable(name: "__esi", scope: !6137, file: !5986, line: 658, type: !320)
!6140 = !DILocalVariable(name: "__edx", scope: !6137, file: !5986, line: 658, type: !320)
!6141 = !DILocalVariable(name: "__ecx", scope: !6137, file: !5986, line: 658, type: !320)
!6142 = !DILocalVariable(name: "__eax", scope: !6137, file: !5986, line: 658, type: !320)
!6143 = !{i32 -2145761799, i32 -2145761067, i32 -2145760833, i32 -2145760782, i32 -2145760754, i32 -2145760729, i32 -2145761045, i32 -2145761032, i32 -2145760594, i32 -2145760475, i32 -2145760940, i32 -2145760913, i32 -2145760885, i32 -2145760855}
!6144 = !DILocation(line: 659, column: 1, scope: !6135)
!6145 = distinct !DISubprogram(name: "dw_edma_free_burst", scope: !3, file: !3, line: 122, type: !6146, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6146 = !DISubroutineType(types: !6147)
!6147 = !{null, !4694}
!6148 = !DILocalVariable(name: "chunk", arg: 1, scope: !6145, file: !3, line: 122, type: !4694)
!6149 = !DILocation(line: 122, column: 54, scope: !6145)
!6150 = !DILocalVariable(name: "child", scope: !6145, file: !3, line: 124, type: !4700)
!6151 = !DILocation(line: 124, column: 24, scope: !6145)
!6152 = !DILocalVariable(name: "_next", scope: !6145, file: !3, line: 124, type: !4700)
!6153 = !DILocation(line: 124, column: 32, scope: !6145)
!6154 = !DILocalVariable(name: "__mptr", scope: !6155, file: !3, line: 127, type: !252)
!6155 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 127, column: 2)
!6156 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 127, column: 2)
!6157 = !DILocation(line: 127, column: 2, scope: !6155)
!6158 = !DILocation(line: 127, column: 2, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 127, column: 2)
!6160 = !DILocation(line: 127, column: 2, scope: !6156)
!6161 = !DILocalVariable(name: "__mptr", scope: !6162, file: !3, line: 127, type: !252)
!6162 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 127, column: 2)
!6163 = !DILocation(line: 127, column: 2, scope: !6162)
!6164 = !DILocation(line: 127, column: 2, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6162, file: !3, line: 127, column: 2)
!6166 = !DILocation(line: 127, column: 2, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 127, column: 2)
!6168 = !DILocation(line: 128, column: 13, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 127, column: 68)
!6170 = !DILocation(line: 128, column: 20, scope: !6169)
!6171 = !DILocation(line: 128, column: 3, scope: !6169)
!6172 = !DILocation(line: 129, column: 9, scope: !6169)
!6173 = !DILocation(line: 129, column: 3, scope: !6169)
!6174 = !DILocation(line: 130, column: 3, scope: !6169)
!6175 = !DILocation(line: 130, column: 10, scope: !6169)
!6176 = !DILocation(line: 130, column: 22, scope: !6169)
!6177 = !DILocation(line: 131, column: 2, scope: !6169)
!6178 = !DILocalVariable(name: "__mptr", scope: !6179, file: !3, line: 127, type: !252)
!6179 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 127, column: 2)
!6180 = !DILocation(line: 127, column: 2, scope: !6179)
!6181 = !DILocation(line: 127, column: 2, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 127, column: 2)
!6183 = distinct !{!6183, !6160, !6184}
!6184 = !DILocation(line: 131, column: 2, scope: !6156)
!6185 = !DILocation(line: 134, column: 8, scope: !6145)
!6186 = !DILocation(line: 134, column: 2, scope: !6145)
!6187 = !DILocation(line: 135, column: 2, scope: !6145)
!6188 = !DILocation(line: 135, column: 9, scope: !6145)
!6189 = !DILocation(line: 135, column: 15, scope: !6145)
!6190 = !DILocation(line: 136, column: 1, scope: !6145)
!6191 = distinct !DISubprogram(name: "to_virt_chan", scope: !258, file: !258, line: 39, type: !6192, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6192 = !DISubroutineType(types: !6193)
!6193 = !{!4713, !301}
!6194 = !DILocalVariable(name: "chan", arg: 1, scope: !6191, file: !258, line: 39, type: !301)
!6195 = !DILocation(line: 39, column: 67, scope: !6191)
!6196 = !DILocalVariable(name: "__mptr", scope: !6197, file: !258, line: 41, type: !252)
!6197 = distinct !DILexicalBlock(scope: !6191, file: !258, line: 41, column: 9)
!6198 = !DILocation(line: 41, column: 9, scope: !6197)
!6199 = !DILocation(line: 41, column: 9, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6197, file: !258, line: 41, column: 9)
!6201 = !DILocation(line: 41, column: 2, scope: !6191)
!6202 = distinct !DISubprogram(name: "dma_cookie_complete", scope: !6203, file: !6203, line: 52, type: !6204, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6203 = !DIFile(filename: "drivers/dma/dw-edma/../dmaengine.h", directory: "/home/lizy2001/genbc/linux")
!6204 = !DISubroutineType(types: !6205)
!6205 = !{null, !4364}
!6206 = !DILocalVariable(name: "tx", arg: 1, scope: !6202, file: !6203, line: 52, type: !4364)
!6207 = !DILocation(line: 52, column: 72, scope: !6202)
!6208 = !DILocation(line: 54, column: 2, scope: !6202)
!6209 = !DILocation(line: 54, column: 2, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6211, file: !6203, line: 54, column: 2)
!6211 = distinct !DILexicalBlock(scope: !6202, file: !6203, line: 54, column: 2)
!6212 = !DILocation(line: 54, column: 2, scope: !6211)
!6213 = !DILocation(line: 54, column: 2, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6210, file: !6203, line: 54, column: 2)
!6215 = !DILocation(line: 54, column: 2, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6214, file: !6203, line: 54, column: 2)
!6217 = !DILocation(line: 54, column: 2, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6214, file: !6203, line: 54, column: 2)
!6219 = !{i32 -2141698451, i32 -2141698422, i32 -2141698376, i32 -2141698318, i32 -2141698264, i32 -2141698210, i32 -2141698155, i32 -2141698124}
!6220 = !DILocation(line: 54, column: 2, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !6203, line: 54, column: 2)
!6222 = distinct !DILexicalBlock(scope: !6214, file: !6203, line: 54, column: 2)
!6223 = !{i32 -2141697668, i32 -2141697661, i32 -2141697607, i32 -2141697576, i32 -2141697546}
!6224 = !DILocation(line: 54, column: 2, scope: !6222)
!6225 = !DILocation(line: 55, column: 31, scope: !6202)
!6226 = !DILocation(line: 55, column: 35, scope: !6202)
!6227 = !DILocation(line: 55, column: 2, scope: !6202)
!6228 = !DILocation(line: 55, column: 6, scope: !6202)
!6229 = !DILocation(line: 55, column: 12, scope: !6202)
!6230 = !DILocation(line: 55, column: 29, scope: !6202)
!6231 = !DILocation(line: 56, column: 2, scope: !6202)
!6232 = !DILocation(line: 56, column: 6, scope: !6202)
!6233 = !DILocation(line: 56, column: 13, scope: !6202)
!6234 = !DILocation(line: 57, column: 1, scope: !6202)
!6235 = distinct !DISubprogram(name: "list_add_tail", scope: !5528, file: !5528, line: 98, type: !6236, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6236 = !DISubroutineType(types: !6237)
!6237 = !{null, !288, !288}
!6238 = !DILocalVariable(name: "new", arg: 1, scope: !6235, file: !5528, line: 98, type: !288)
!6239 = !DILocation(line: 98, column: 52, scope: !6235)
!6240 = !DILocalVariable(name: "head", arg: 2, scope: !6235, file: !5528, line: 98, type: !288)
!6241 = !DILocation(line: 98, column: 75, scope: !6235)
!6242 = !DILocation(line: 100, column: 13, scope: !6235)
!6243 = !DILocation(line: 100, column: 18, scope: !6235)
!6244 = !DILocation(line: 100, column: 24, scope: !6235)
!6245 = !DILocation(line: 100, column: 30, scope: !6235)
!6246 = !DILocation(line: 100, column: 2, scope: !6235)
!6247 = !DILocation(line: 101, column: 1, scope: !6235)
!6248 = distinct !DISubprogram(name: "tasklet_schedule", scope: !108, file: !108, line: 681, type: !4605, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6249 = !DILocalVariable(name: "t", arg: 1, scope: !6248, file: !108, line: 681, type: !4592)
!6250 = !DILocation(line: 681, column: 60, scope: !6248)
!6251 = !DILocation(line: 683, column: 46, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6248, file: !108, line: 683, column: 6)
!6253 = !DILocation(line: 683, column: 49, scope: !6252)
!6254 = !DILocation(line: 683, column: 7, scope: !6252)
!6255 = !DILocation(line: 683, column: 6, scope: !6248)
!6256 = !DILocation(line: 684, column: 22, scope: !6252)
!6257 = !DILocation(line: 684, column: 3, scope: !6252)
!6258 = !DILocation(line: 685, column: 1, scope: !6248)
!6259 = distinct !DISubprogram(name: "__list_add", scope: !5528, file: !5528, line: 63, type: !6260, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{null, !288, !288, !288}
!6262 = !DILocalVariable(name: "new", arg: 1, scope: !6259, file: !5528, line: 63, type: !288)
!6263 = !DILocation(line: 63, column: 49, scope: !6259)
!6264 = !DILocalVariable(name: "prev", arg: 2, scope: !6259, file: !5528, line: 64, type: !288)
!6265 = !DILocation(line: 64, column: 28, scope: !6259)
!6266 = !DILocalVariable(name: "next", arg: 3, scope: !6259, file: !5528, line: 65, type: !288)
!6267 = !DILocation(line: 65, column: 28, scope: !6259)
!6268 = !DILocation(line: 67, column: 24, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6259, file: !5528, line: 67, column: 6)
!6270 = !DILocation(line: 67, column: 29, scope: !6269)
!6271 = !DILocation(line: 67, column: 35, scope: !6269)
!6272 = !DILocation(line: 67, column: 7, scope: !6269)
!6273 = !DILocation(line: 67, column: 6, scope: !6259)
!6274 = !DILocation(line: 68, column: 3, scope: !6269)
!6275 = !DILocation(line: 70, column: 15, scope: !6259)
!6276 = !DILocation(line: 70, column: 2, scope: !6259)
!6277 = !DILocation(line: 70, column: 8, scope: !6259)
!6278 = !DILocation(line: 70, column: 13, scope: !6259)
!6279 = !DILocation(line: 71, column: 14, scope: !6259)
!6280 = !DILocation(line: 71, column: 2, scope: !6259)
!6281 = !DILocation(line: 71, column: 7, scope: !6259)
!6282 = !DILocation(line: 71, column: 12, scope: !6259)
!6283 = !DILocation(line: 72, column: 14, scope: !6259)
!6284 = !DILocation(line: 72, column: 2, scope: !6259)
!6285 = !DILocation(line: 72, column: 7, scope: !6259)
!6286 = !DILocation(line: 72, column: 12, scope: !6259)
!6287 = !DILocation(line: 73, column: 2, scope: !6259)
!6288 = !DILocation(line: 73, column: 2, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6259, file: !5528, line: 73, column: 2)
!6290 = !DILocation(line: 73, column: 2, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6289, file: !5528, line: 73, column: 2)
!6292 = !DILocation(line: 73, column: 2, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6289, file: !5528, line: 73, column: 2)
!6294 = !DILocation(line: 74, column: 1, scope: !6259)
!6295 = distinct !DISubprogram(name: "__list_add_valid", scope: !5528, file: !5528, line: 45, type: !6296, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{!299, !288, !288, !288}
!6298 = !DILocalVariable(name: "new", arg: 1, scope: !6295, file: !5528, line: 45, type: !288)
!6299 = !DILocation(line: 45, column: 55, scope: !6295)
!6300 = !DILocalVariable(name: "prev", arg: 2, scope: !6295, file: !5528, line: 46, type: !288)
!6301 = !DILocation(line: 46, column: 23, scope: !6295)
!6302 = !DILocalVariable(name: "next", arg: 3, scope: !6295, file: !5528, line: 47, type: !288)
!6303 = !DILocation(line: 47, column: 23, scope: !6295)
!6304 = !DILocation(line: 49, column: 2, scope: !6295)
!6305 = distinct !DISubprogram(name: "test_and_set_bit", scope: !6306, file: !6306, line: 68, type: !6307, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6306 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!6307 = !DISubroutineType(types: !6308)
!6308 = !{!299, !426, !6309}
!6309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6310, size: 64)
!6310 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !320)
!6311 = !DILocalVariable(name: "nr", arg: 1, scope: !6312, file: !6313, line: 136, type: !426)
!6312 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !6313, file: !6313, line: 136, type: !6307, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6313 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6314 = !DILocation(line: 136, column: 28, scope: !6312, inlinedAt: !6315)
!6315 = distinct !DILocation(line: 71, column: 9, scope: !6305)
!6316 = !DILocalVariable(name: "addr", arg: 2, scope: !6312, file: !6313, line: 136, type: !6309)
!6317 = !DILocation(line: 136, column: 56, scope: !6312, inlinedAt: !6315)
!6318 = !DILocalVariable(name: "c", scope: !6319, file: !6313, line: 138, type: !299)
!6319 = distinct !DILexicalBlock(scope: !6312, file: !6313, line: 138, column: 9)
!6320 = !DILocation(line: 138, column: 9, scope: !6319, inlinedAt: !6315)
!6321 = !DILocalVariable(name: "v", arg: 1, scope: !6322, file: !6323, line: 99, type: !6326)
!6322 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !6323, file: !6323, line: 99, type: !6324, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6323 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6324 = !DISubroutineType(types: !6325)
!6325 = !{null, !6326, !437}
!6326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6327, size: 64)
!6327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6328)
!6328 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6329 = !DILocation(line: 99, column: 79, scope: !6322, inlinedAt: !6330)
!6330 = distinct !DILocation(line: 70, column: 2, scope: !6305)
!6331 = !DILocalVariable(name: "size", arg: 2, scope: !6322, file: !6323, line: 99, type: !437)
!6332 = !DILocation(line: 99, column: 89, scope: !6322, inlinedAt: !6330)
!6333 = !DILocalVariable(name: "nr", arg: 1, scope: !6305, file: !6306, line: 68, type: !426)
!6334 = !DILocation(line: 68, column: 42, scope: !6305)
!6335 = !DILocalVariable(name: "addr", arg: 2, scope: !6305, file: !6306, line: 68, type: !6309)
!6336 = !DILocation(line: 68, column: 70, scope: !6305)
!6337 = !DILocation(line: 70, column: 31, scope: !6305)
!6338 = !DILocation(line: 70, column: 38, scope: !6305)
!6339 = !DILocation(line: 70, column: 36, scope: !6305)
!6340 = !DILocation(line: 101, column: 20, scope: !6322, inlinedAt: !6330)
!6341 = !DILocation(line: 101, column: 23, scope: !6322, inlinedAt: !6330)
!6342 = !DILocation(line: 101, column: 2, scope: !6322, inlinedAt: !6330)
!6343 = !DILocation(line: 102, column: 2, scope: !6322, inlinedAt: !6330)
!6344 = !DILocation(line: 71, column: 31, scope: !6305)
!6345 = !DILocation(line: 71, column: 35, scope: !6305)
!6346 = !{i32 -2147128669, i32 -2147128573}
!6347 = !DILocation(line: 71, column: 2, scope: !6305)
!6348 = distinct !DISubprogram(name: "kasan_check_write", scope: !6349, file: !6349, line: 38, type: !6350, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6349 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!6350 = !DISubroutineType(types: !6351)
!6351 = !{!299, !6326, !7}
!6352 = !DILocalVariable(name: "p", arg: 1, scope: !6348, file: !6349, line: 38, type: !6326)
!6353 = !DILocation(line: 38, column: 59, scope: !6348)
!6354 = !DILocalVariable(name: "size", arg: 2, scope: !6348, file: !6349, line: 38, type: !7)
!6355 = !DILocation(line: 38, column: 75, scope: !6348)
!6356 = !DILocation(line: 40, column: 2, scope: !6348)
!6357 = distinct !DISubprogram(name: "kcsan_check_access", scope: !6358, file: !6358, line: 178, type: !6359, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6358 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!6359 = !DISubroutineType(types: !6360)
!6360 = !{null, !6326, !437, !281}
!6361 = !DILocalVariable(name: "ptr", arg: 1, scope: !6357, file: !6358, line: 178, type: !6326)
!6362 = !DILocation(line: 178, column: 60, scope: !6357)
!6363 = !DILocalVariable(name: "size", arg: 2, scope: !6357, file: !6358, line: 178, type: !437)
!6364 = !DILocation(line: 178, column: 72, scope: !6357)
!6365 = !DILocalVariable(name: "type", arg: 3, scope: !6357, file: !6358, line: 179, type: !281)
!6366 = !DILocation(line: 179, column: 15, scope: !6357)
!6367 = !DILocation(line: 179, column: 23, scope: !6357)
!6368 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !5986, file: !5986, line: 651, type: !4601, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6369 = !DILocalVariable(name: "f", arg: 1, scope: !6368, file: !5986, line: 651, type: !320)
!6370 = !DILocation(line: 651, column: 65, scope: !6368)
!6371 = !DILocalVariable(name: "__edi", scope: !6372, file: !5986, line: 653, type: !320)
!6372 = distinct !DILexicalBlock(scope: !6368, file: !5986, line: 653, column: 2)
!6373 = !DILocation(line: 653, column: 2, scope: !6372)
!6374 = !DILocalVariable(name: "__esi", scope: !6372, file: !5986, line: 653, type: !320)
!6375 = !DILocalVariable(name: "__edx", scope: !6372, file: !5986, line: 653, type: !320)
!6376 = !DILocalVariable(name: "__ecx", scope: !6372, file: !5986, line: 653, type: !320)
!6377 = !DILocalVariable(name: "__eax", scope: !6372, file: !5986, line: 653, type: !320)
!6378 = !{i32 -2145764426, i32 -2145763676, i32 -2145763442, i32 -2145763391, i32 -2145763363, i32 -2145763338, i32 -2145763654, i32 -2145763641, i32 -2145763203, i32 -2145763084, i32 -2145763549, i32 -2145763522, i32 -2145763494, i32 -2145763464}
!6379 = !DILocation(line: 654, column: 1, scope: !6368)
!6380 = distinct !DISubprogram(name: "__ilog2_u32", scope: !6381, file: !6381, line: 22, type: !6382, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6381 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!6382 = !DISubroutineType(types: !6383)
!6383 = !{!281, !530}
!6384 = !DILocalVariable(name: "x", arg: 1, scope: !6385, file: !6313, line: 324, type: !7)
!6385 = distinct !DISubprogram(name: "fls", scope: !6313, file: !6313, line: 324, type: !6386, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6386 = !DISubroutineType(types: !6387)
!6387 = !{!281, !7}
!6388 = !DILocation(line: 324, column: 45, scope: !6385, inlinedAt: !6389)
!6389 = distinct !DILocation(line: 24, column: 9, scope: !6380)
!6390 = !DILocalVariable(name: "r", scope: !6385, file: !6313, line: 326, type: !281)
!6391 = !DILocation(line: 326, column: 6, scope: !6385, inlinedAt: !6389)
!6392 = !DILocalVariable(name: "n", arg: 1, scope: !6380, file: !6381, line: 22, type: !530)
!6393 = !DILocation(line: 22, column: 21, scope: !6380)
!6394 = !DILocation(line: 24, column: 13, scope: !6380)
!6395 = !DILocation(line: 340, column: 14, scope: !6385, inlinedAt: !6389)
!6396 = !DILocation(line: 338, column: 2, scope: !6385, inlinedAt: !6389)
!6397 = !{i32 318100}
!6398 = !DILocation(line: 351, column: 9, scope: !6385, inlinedAt: !6389)
!6399 = !DILocation(line: 351, column: 11, scope: !6385, inlinedAt: !6389)
!6400 = !DILocation(line: 24, column: 16, scope: !6380)
!6401 = !DILocation(line: 24, column: 2, scope: !6380)
!6402 = distinct !DISubprogram(name: "__roundup_pow_of_two", scope: !6381, file: !6381, line: 55, type: !6403, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6403 = !DISubroutineType(types: !6404)
!6404 = !{!320, !320}
!6405 = !DILocalVariable(name: "n", arg: 1, scope: !6402, file: !6381, line: 55, type: !320)
!6406 = !DILocation(line: 55, column: 50, scope: !6402)
!6407 = !DILocation(line: 57, column: 25, scope: !6402)
!6408 = !DILocation(line: 57, column: 27, scope: !6402)
!6409 = !DILocation(line: 57, column: 16, scope: !6402)
!6410 = !DILocation(line: 57, column: 13, scope: !6402)
!6411 = !DILocation(line: 57, column: 2, scope: !6402)
!6412 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !5528, file: !5528, line: 33, type: !5529, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6413 = !DILocalVariable(name: "list", arg: 1, scope: !6412, file: !5528, line: 33, type: !288)
!6414 = !DILocation(line: 33, column: 53, scope: !6412)
!6415 = !DILocation(line: 35, column: 2, scope: !6412)
!6416 = !DILocation(line: 35, column: 2, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6412, file: !5528, line: 35, column: 2)
!6418 = !DILocation(line: 35, column: 2, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6417, file: !5528, line: 35, column: 2)
!6420 = !DILocation(line: 35, column: 2, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6417, file: !5528, line: 35, column: 2)
!6422 = !DILocation(line: 36, column: 15, scope: !6412)
!6423 = !DILocation(line: 36, column: 2, scope: !6412)
!6424 = !DILocation(line: 36, column: 8, scope: !6412)
!6425 = !DILocation(line: 36, column: 13, scope: !6412)
!6426 = !DILocation(line: 37, column: 1, scope: !6412)
!6427 = distinct !DISubprogram(name: "devm_kzalloc", scope: !73, file: !73, line: 215, type: !6428, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6428 = !DISubroutineType(types: !6429)
!6429 = !{!252, !333, !437, !250}
!6430 = !DILocalVariable(name: "dev", arg: 1, scope: !6427, file: !73, line: 215, type: !333)
!6431 = !DILocation(line: 215, column: 49, scope: !6427)
!6432 = !DILocalVariable(name: "size", arg: 2, scope: !6427, file: !73, line: 215, type: !437)
!6433 = !DILocation(line: 215, column: 61, scope: !6427)
!6434 = !DILocalVariable(name: "gfp", arg: 3, scope: !6427, file: !73, line: 215, type: !250)
!6435 = !DILocation(line: 215, column: 73, scope: !6427)
!6436 = !DILocation(line: 217, column: 22, scope: !6427)
!6437 = !DILocation(line: 217, column: 27, scope: !6427)
!6438 = !DILocation(line: 217, column: 33, scope: !6427)
!6439 = !DILocation(line: 217, column: 37, scope: !6427)
!6440 = !DILocation(line: 217, column: 9, scope: !6427)
!6441 = !DILocation(line: 217, column: 2, scope: !6427)
!6442 = distinct !DISubprogram(name: "vchan_free_desc", scope: !3, file: !3, line: 164, type: !4610, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6443 = !DILocalVariable(name: "vdesc", arg: 1, scope: !6442, file: !3, line: 164, type: !4612)
!6444 = !DILocation(line: 164, column: 51, scope: !6442)
!6445 = !DILocation(line: 166, column: 36, scope: !6442)
!6446 = !DILocation(line: 166, column: 20, scope: !6442)
!6447 = !DILocation(line: 166, column: 2, scope: !6442)
!6448 = !DILocation(line: 167, column: 1, scope: !6442)
!6449 = distinct !DISubprogram(name: "__dma_cap_zero", scope: !129, file: !129, line: 1382, type: !6450, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6450 = !DISubroutineType(types: !6451)
!6451 = !{null, !6452}
!6452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!6453 = !DILocalVariable(name: "dstp", arg: 1, scope: !6449, file: !129, line: 1382, type: !6452)
!6454 = !DILocation(line: 1382, column: 51, scope: !6449)
!6455 = !DILocation(line: 1384, column: 14, scope: !6449)
!6456 = !DILocation(line: 1384, column: 20, scope: !6449)
!6457 = !DILocation(line: 1384, column: 2, scope: !6449)
!6458 = !DILocation(line: 1385, column: 1, scope: !6449)
!6459 = distinct !DISubprogram(name: "__dma_cap_set", scope: !129, file: !129, line: 1369, type: !6460, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6460 = !DISubroutineType(types: !6461)
!6461 = !{null, !223, !6452}
!6462 = !DILocalVariable(name: "tx_type", arg: 1, scope: !6459, file: !129, line: 1369, type: !223)
!6463 = !DILocation(line: 1369, column: 41, scope: !6459)
!6464 = !DILocalVariable(name: "dstp", arg: 2, scope: !6459, file: !129, line: 1369, type: !6452)
!6465 = !DILocation(line: 1369, column: 66, scope: !6459)
!6466 = !DILocation(line: 1371, column: 10, scope: !6459)
!6467 = !DILocation(line: 1371, column: 19, scope: !6459)
!6468 = !DILocation(line: 1371, column: 25, scope: !6459)
!6469 = !DILocation(line: 1371, column: 2, scope: !6459)
!6470 = !DILocation(line: 1372, column: 1, scope: !6459)
!6471 = distinct !DISubprogram(name: "dw_edma_alloc_chan_resources", scope: !3, file: !3, line: 606, type: !4354, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6472 = !DILocalVariable(name: "dchan", arg: 1, scope: !6471, file: !3, line: 606, type: !301)
!6473 = !DILocation(line: 606, column: 58, scope: !6471)
!6474 = !DILocalVariable(name: "chan", scope: !6471, file: !3, line: 608, type: !253)
!6475 = !DILocation(line: 608, column: 23, scope: !6471)
!6476 = !DILocation(line: 608, column: 49, scope: !6471)
!6477 = !DILocation(line: 608, column: 30, scope: !6471)
!6478 = !DILocation(line: 610, column: 6, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 610, column: 6)
!6480 = !DILocation(line: 610, column: 12, scope: !6479)
!6481 = !DILocation(line: 610, column: 19, scope: !6479)
!6482 = !DILocation(line: 610, column: 6, scope: !6471)
!6483 = !DILocation(line: 611, column: 3, scope: !6479)
!6484 = !DILocation(line: 613, column: 17, scope: !6471)
!6485 = !DILocation(line: 613, column: 23, scope: !6471)
!6486 = !DILocation(line: 613, column: 29, scope: !6471)
!6487 = !DILocation(line: 613, column: 2, scope: !6471)
!6488 = !DILocation(line: 615, column: 2, scope: !6471)
!6489 = !DILocation(line: 616, column: 1, scope: !6471)
!6490 = distinct !DISubprogram(name: "dw_edma_free_chan_resources", scope: !3, file: !3, line: 618, type: !4358, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6491 = !DILocalVariable(name: "m", arg: 1, scope: !6492, file: !6493, line: 363, type: !2970)
!6492 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !6493, file: !6493, line: 363, type: !6494, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6493 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!6494 = !DISubroutineType(types: !6495)
!6495 = !{!320, !2970}
!6496 = !DILocation(line: 363, column: 74, scope: !6492, inlinedAt: !6497)
!6497 = distinct !DILocation(line: 620, column: 36, scope: !6490)
!6498 = !DILocalVariable(name: "dchan", arg: 1, scope: !6490, file: !3, line: 618, type: !301)
!6499 = !DILocation(line: 618, column: 58, scope: !6490)
!6500 = !DILocalVariable(name: "timeout", scope: !6490, file: !3, line: 620, type: !320)
!6501 = !DILocation(line: 620, column: 16, scope: !6490)
!6502 = !DILocation(line: 620, column: 26, scope: !6490)
!6503 = !DILocation(line: 365, column: 27, scope: !6504, inlinedAt: !6497)
!6504 = distinct !DILexicalBlock(scope: !6492, file: !6493, line: 365, column: 6)
!6505 = !DILocation(line: 365, column: 6, scope: !6504, inlinedAt: !6497)
!6506 = !DILocation(line: 365, column: 6, scope: !6492, inlinedAt: !6497)
!6507 = !DILocation(line: 366, column: 12, scope: !6508, inlinedAt: !6497)
!6508 = distinct !DILexicalBlock(scope: !6509, file: !6493, line: 366, column: 7)
!6509 = distinct !DILexicalBlock(scope: !6504, file: !6493, line: 365, column: 31)
!6510 = !DILocation(line: 366, column: 14, scope: !6508, inlinedAt: !6497)
!6511 = !DILocation(line: 366, column: 7, scope: !6509, inlinedAt: !6497)
!6512 = !DILocation(line: 367, column: 4, scope: !6508, inlinedAt: !6497)
!6513 = !DILocation(line: 368, column: 28, scope: !6509, inlinedAt: !6497)
!6514 = !DILocation(line: 368, column: 10, scope: !6509, inlinedAt: !6497)
!6515 = !DILocation(line: 368, column: 3, scope: !6509, inlinedAt: !6497)
!6516 = !DILocation(line: 370, column: 29, scope: !6517, inlinedAt: !6497)
!6517 = distinct !DILexicalBlock(scope: !6504, file: !6493, line: 369, column: 9)
!6518 = !DILocation(line: 370, column: 10, scope: !6517, inlinedAt: !6497)
!6519 = !DILocation(line: 370, column: 3, scope: !6517, inlinedAt: !6497)
!6520 = !DILocation(line: 372, column: 1, scope: !6492, inlinedAt: !6497)
!6521 = !DILocation(line: 620, column: 34, scope: !6490)
!6522 = !DILocalVariable(name: "chan", scope: !6490, file: !3, line: 621, type: !253)
!6523 = !DILocation(line: 621, column: 23, scope: !6490)
!6524 = !DILocation(line: 621, column: 49, scope: !6490)
!6525 = !DILocation(line: 621, column: 30, scope: !6490)
!6526 = !DILocalVariable(name: "ret", scope: !6490, file: !3, line: 622, type: !281)
!6527 = !DILocation(line: 622, column: 6, scope: !6490)
!6528 = !DILocation(line: 624, column: 2, scope: !6490)
!6529 = !DILocation(line: 624, column: 9, scope: !6490)
!6530 = !DILocation(line: 625, column: 38, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 624, column: 40)
!6532 = !DILocation(line: 625, column: 9, scope: !6531)
!6533 = !DILocation(line: 625, column: 7, scope: !6531)
!6534 = !DILocation(line: 626, column: 8, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6531, file: !3, line: 626, column: 7)
!6536 = !DILocation(line: 626, column: 7, scope: !6531)
!6537 = !DILocation(line: 627, column: 4, scope: !6535)
!6538 = !DILocation(line: 629, column: 7, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6531, file: !3, line: 629, column: 7)
!6540 = !DILocation(line: 629, column: 7, scope: !6531)
!6541 = !DILocation(line: 630, column: 4, scope: !6539)
!6542 = !DILocation(line: 13, column: 2, scope: !6543, inlinedAt: !6545)
!6543 = distinct !DISubprogram(name: "rep_nop", scope: !6544, file: !6544, line: 11, type: !2023, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6544 = !DIFile(filename: "./arch/x86/include/asm/vdso/processor.h", directory: "/home/lizy2001/genbc/linux")
!6545 = distinct !DILocation(line: 18, column: 2, scope: !6546, inlinedAt: !6547)
!6546 = distinct !DISubprogram(name: "cpu_relax", scope: !6544, file: !6544, line: 16, type: !2023, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6547 = distinct !DILocation(line: 632, column: 3, scope: !6531)
!6548 = !{i32 1774470}
!6549 = distinct !{!6549, !6528, !6550}
!6550 = !DILocation(line: 633, column: 2, scope: !6490)
!6551 = !DILocation(line: 635, column: 17, scope: !6490)
!6552 = !DILocation(line: 635, column: 23, scope: !6490)
!6553 = !DILocation(line: 635, column: 29, scope: !6490)
!6554 = !DILocation(line: 635, column: 2, scope: !6490)
!6555 = !DILocation(line: 636, column: 1, scope: !6490)
!6556 = distinct !DISubprogram(name: "dw_edma_device_config", scope: !3, file: !3, line: 196, type: !4520, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6557 = !DILocalVariable(name: "dchan", arg: 1, scope: !6556, file: !3, line: 196, type: !301)
!6558 = !DILocation(line: 196, column: 51, scope: !6556)
!6559 = !DILocalVariable(name: "config", arg: 2, scope: !6556, file: !3, line: 197, type: !4522)
!6560 = !DILocation(line: 197, column: 31, scope: !6556)
!6561 = !DILocalVariable(name: "chan", scope: !6556, file: !3, line: 199, type: !253)
!6562 = !DILocation(line: 199, column: 23, scope: !6556)
!6563 = !DILocation(line: 199, column: 49, scope: !6556)
!6564 = !DILocation(line: 199, column: 30, scope: !6556)
!6565 = !DILocation(line: 201, column: 10, scope: !6556)
!6566 = !DILocation(line: 201, column: 16, scope: !6556)
!6567 = !DILocation(line: 201, column: 2, scope: !6556)
!6568 = !DILocation(line: 201, column: 24, scope: !6556)
!6569 = !DILocation(line: 202, column: 2, scope: !6556)
!6570 = !DILocation(line: 202, column: 8, scope: !6556)
!6571 = !DILocation(line: 202, column: 19, scope: !6556)
!6572 = !DILocation(line: 204, column: 2, scope: !6556)
!6573 = distinct !DISubprogram(name: "dw_edma_device_pause", scope: !3, file: !3, line: 207, type: !4354, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6574 = !DILocalVariable(name: "dchan", arg: 1, scope: !6573, file: !3, line: 207, type: !301)
!6575 = !DILocation(line: 207, column: 50, scope: !6573)
!6576 = !DILocalVariable(name: "chan", scope: !6573, file: !3, line: 209, type: !253)
!6577 = !DILocation(line: 209, column: 23, scope: !6573)
!6578 = !DILocation(line: 209, column: 49, scope: !6573)
!6579 = !DILocation(line: 209, column: 30, scope: !6573)
!6580 = !DILocalVariable(name: "err", scope: !6573, file: !3, line: 210, type: !281)
!6581 = !DILocation(line: 210, column: 6, scope: !6573)
!6582 = !DILocation(line: 212, column: 7, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 212, column: 6)
!6584 = !DILocation(line: 212, column: 13, scope: !6583)
!6585 = !DILocation(line: 212, column: 6, scope: !6573)
!6586 = !DILocation(line: 213, column: 7, scope: !6583)
!6587 = !DILocation(line: 213, column: 3, scope: !6583)
!6588 = !DILocation(line: 214, column: 11, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 214, column: 11)
!6590 = !DILocation(line: 214, column: 17, scope: !6589)
!6591 = !DILocation(line: 214, column: 24, scope: !6589)
!6592 = !DILocation(line: 214, column: 11, scope: !6583)
!6593 = !DILocation(line: 215, column: 7, scope: !6589)
!6594 = !DILocation(line: 215, column: 3, scope: !6589)
!6595 = !DILocation(line: 216, column: 11, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 216, column: 11)
!6597 = !DILocation(line: 216, column: 17, scope: !6596)
!6598 = !DILocation(line: 216, column: 25, scope: !6596)
!6599 = !DILocation(line: 216, column: 11, scope: !6589)
!6600 = !DILocation(line: 217, column: 7, scope: !6596)
!6601 = !DILocation(line: 217, column: 3, scope: !6596)
!6602 = !DILocation(line: 219, column: 3, scope: !6596)
!6603 = !DILocation(line: 219, column: 9, scope: !6596)
!6604 = !DILocation(line: 219, column: 17, scope: !6596)
!6605 = !DILocation(line: 221, column: 9, scope: !6573)
!6606 = !DILocation(line: 221, column: 2, scope: !6573)
!6607 = distinct !DISubprogram(name: "dw_edma_device_resume", scope: !3, file: !3, line: 224, type: !4354, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6608 = !DILocalVariable(name: "dchan", arg: 1, scope: !6607, file: !3, line: 224, type: !301)
!6609 = !DILocation(line: 224, column: 51, scope: !6607)
!6610 = !DILocalVariable(name: "chan", scope: !6607, file: !3, line: 226, type: !253)
!6611 = !DILocation(line: 226, column: 23, scope: !6607)
!6612 = !DILocation(line: 226, column: 49, scope: !6607)
!6613 = !DILocation(line: 226, column: 30, scope: !6607)
!6614 = !DILocalVariable(name: "err", scope: !6607, file: !3, line: 227, type: !281)
!6615 = !DILocation(line: 227, column: 6, scope: !6607)
!6616 = !DILocation(line: 229, column: 7, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 229, column: 6)
!6618 = !DILocation(line: 229, column: 13, scope: !6617)
!6619 = !DILocation(line: 229, column: 6, scope: !6607)
!6620 = !DILocation(line: 230, column: 7, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 229, column: 25)
!6622 = !DILocation(line: 231, column: 2, scope: !6621)
!6623 = !DILocation(line: 231, column: 13, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 231, column: 13)
!6625 = !DILocation(line: 231, column: 19, scope: !6624)
!6626 = !DILocation(line: 231, column: 26, scope: !6624)
!6627 = !DILocation(line: 231, column: 13, scope: !6617)
!6628 = !DILocation(line: 232, column: 7, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 231, column: 44)
!6630 = !DILocation(line: 233, column: 2, scope: !6629)
!6631 = !DILocation(line: 233, column: 13, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 233, column: 13)
!6633 = !DILocation(line: 233, column: 19, scope: !6632)
!6634 = !DILocation(line: 233, column: 27, scope: !6632)
!6635 = !DILocation(line: 233, column: 13, scope: !6624)
!6636 = !DILocation(line: 234, column: 7, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 233, column: 45)
!6638 = !DILocation(line: 235, column: 2, scope: !6637)
!6639 = !DILocation(line: 236, column: 3, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 235, column: 9)
!6641 = !DILocation(line: 236, column: 9, scope: !6640)
!6642 = !DILocation(line: 236, column: 16, scope: !6640)
!6643 = !DILocation(line: 237, column: 26, scope: !6640)
!6644 = !DILocation(line: 237, column: 3, scope: !6640)
!6645 = !DILocation(line: 240, column: 9, scope: !6607)
!6646 = !DILocation(line: 240, column: 2, scope: !6607)
!6647 = distinct !DISubprogram(name: "dw_edma_device_terminate_all", scope: !3, file: !3, line: 243, type: !4354, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6648 = !DILocalVariable(name: "dchan", arg: 1, scope: !6647, file: !3, line: 243, type: !301)
!6649 = !DILocation(line: 243, column: 58, scope: !6647)
!6650 = !DILocalVariable(name: "chan", scope: !6647, file: !3, line: 245, type: !253)
!6651 = !DILocation(line: 245, column: 23, scope: !6647)
!6652 = !DILocation(line: 245, column: 49, scope: !6647)
!6653 = !DILocation(line: 245, column: 30, scope: !6647)
!6654 = !DILocalVariable(name: "err", scope: !6647, file: !3, line: 246, type: !281)
!6655 = !DILocation(line: 246, column: 6, scope: !6647)
!6656 = !DILocalVariable(name: "head", scope: !6647, file: !3, line: 247, type: !285)
!6657 = !DILocation(line: 247, column: 2, scope: !6647)
!6658 = !DILocation(line: 249, column: 7, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 249, column: 6)
!6660 = !DILocation(line: 249, column: 13, scope: !6659)
!6661 = !DILocation(line: 249, column: 6, scope: !6647)
!6662 = !DILocation(line: 251, column: 2, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 249, column: 25)
!6664 = !DILocation(line: 251, column: 13, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 251, column: 13)
!6666 = !DILocation(line: 251, column: 19, scope: !6665)
!6667 = !DILocation(line: 251, column: 26, scope: !6665)
!6668 = !DILocation(line: 251, column: 13, scope: !6659)
!6669 = !DILocation(line: 252, column: 3, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 251, column: 44)
!6671 = !DILocation(line: 252, column: 9, scope: !6670)
!6672 = !DILocation(line: 252, column: 16, scope: !6670)
!6673 = !DILocation(line: 253, column: 3, scope: !6670)
!6674 = !DILocation(line: 253, column: 9, scope: !6670)
!6675 = !DILocation(line: 253, column: 20, scope: !6670)
!6676 = !DILocation(line: 254, column: 2, scope: !6670)
!6677 = !DILocation(line: 254, column: 13, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 254, column: 13)
!6679 = !DILocation(line: 254, column: 19, scope: !6678)
!6680 = !DILocation(line: 254, column: 26, scope: !6678)
!6681 = !DILocation(line: 254, column: 13, scope: !6665)
!6682 = !DILocation(line: 255, column: 3, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 254, column: 43)
!6684 = !DILocation(line: 255, column: 9, scope: !6683)
!6685 = !DILocation(line: 255, column: 20, scope: !6683)
!6686 = !DILocation(line: 256, column: 2, scope: !6683)
!6687 = !DILocation(line: 256, column: 39, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 256, column: 13)
!6689 = !DILocation(line: 256, column: 13, scope: !6688)
!6690 = !DILocation(line: 256, column: 45, scope: !6688)
!6691 = !DILocation(line: 256, column: 13, scope: !6678)
!6692 = !DILocation(line: 261, column: 3, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 256, column: 62)
!6694 = !DILocation(line: 261, column: 9, scope: !6693)
!6695 = !DILocation(line: 261, column: 16, scope: !6693)
!6696 = !DILocation(line: 262, column: 3, scope: !6693)
!6697 = !DILocation(line: 262, column: 9, scope: !6693)
!6698 = !DILocation(line: 262, column: 20, scope: !6693)
!6699 = !DILocation(line: 263, column: 2, scope: !6693)
!6700 = !DILocation(line: 263, column: 13, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 263, column: 13)
!6702 = !DILocation(line: 263, column: 19, scope: !6701)
!6703 = !DILocation(line: 263, column: 27, scope: !6701)
!6704 = !DILocation(line: 263, column: 13, scope: !6688)
!6705 = !DILocation(line: 264, column: 7, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 263, column: 45)
!6707 = !DILocation(line: 265, column: 2, scope: !6706)
!6708 = !DILocation(line: 266, column: 3, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 265, column: 9)
!6710 = !DILocation(line: 266, column: 9, scope: !6709)
!6711 = !DILocation(line: 266, column: 17, scope: !6709)
!6712 = !DILocation(line: 269, column: 9, scope: !6647)
!6713 = !DILocation(line: 269, column: 2, scope: !6647)
!6714 = distinct !DISubprogram(name: "dw_edma_device_issue_pending", scope: !3, file: !3, line: 272, type: !4358, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6715 = !DILocation(line: 407, column: 64, scope: !5784, inlinedAt: !6716)
!6716 = distinct !DILocation(line: 283, column: 2, scope: !6714)
!6717 = !DILocation(line: 407, column: 84, scope: !5784, inlinedAt: !6716)
!6718 = !DILocation(line: 327, column: 67, scope: !5793, inlinedAt: !6719)
!6719 = distinct !DILocation(line: 277, column: 2, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 277, column: 2)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 277, column: 2)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 277, column: 2)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 277, column: 2)
!6724 = distinct !DILexicalBlock(scope: !6714, file: !3, line: 277, column: 2)
!6725 = !DILocalVariable(name: "dchan", arg: 1, scope: !6714, file: !3, line: 272, type: !301)
!6726 = !DILocation(line: 272, column: 59, scope: !6714)
!6727 = !DILocalVariable(name: "chan", scope: !6714, file: !3, line: 274, type: !253)
!6728 = !DILocation(line: 274, column: 23, scope: !6714)
!6729 = !DILocation(line: 274, column: 49, scope: !6714)
!6730 = !DILocation(line: 274, column: 30, scope: !6714)
!6731 = !DILocalVariable(name: "flags", scope: !6714, file: !3, line: 275, type: !320)
!6732 = !DILocation(line: 275, column: 16, scope: !6714)
!6733 = !DILocation(line: 277, column: 2, scope: !6714)
!6734 = !DILocation(line: 277, column: 2, scope: !6724)
!6735 = !DILocalVariable(name: "__dummy", scope: !6736, file: !3, line: 277, type: !320)
!6736 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 277, column: 2)
!6737 = !DILocation(line: 277, column: 2, scope: !6736)
!6738 = !DILocalVariable(name: "__dummy2", scope: !6736, file: !3, line: 277, type: !320)
!6739 = !DILocation(line: 277, column: 2, scope: !6723)
!6740 = !DILocation(line: 277, column: 2, scope: !6722)
!6741 = !DILocation(line: 277, column: 2, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 277, column: 2)
!6743 = !DILocalVariable(name: "__dummy", scope: !6744, file: !3, line: 277, type: !320)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 277, column: 2)
!6745 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 277, column: 2)
!6746 = !DILocation(line: 277, column: 2, scope: !6744)
!6747 = !DILocalVariable(name: "__dummy2", scope: !6744, file: !3, line: 277, type: !320)
!6748 = !DILocation(line: 277, column: 2, scope: !6745)
!6749 = !DILocation(line: 277, column: 2, scope: !6721)
!6750 = !{i32 -2141659346}
!6751 = !DILocation(line: 277, column: 2, scope: !6720)
!6752 = !DILocation(line: 329, column: 10, scope: !5793, inlinedAt: !6719)
!6753 = !DILocation(line: 329, column: 16, scope: !5793, inlinedAt: !6719)
!6754 = !DILocation(line: 278, column: 6, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6714, file: !3, line: 278, column: 6)
!6756 = !DILocation(line: 278, column: 12, scope: !6755)
!6757 = !DILocation(line: 278, column: 23, scope: !6755)
!6758 = !DILocation(line: 278, column: 26, scope: !6755)
!6759 = !DILocation(line: 278, column: 32, scope: !6755)
!6760 = !DILocation(line: 278, column: 40, scope: !6755)
!6761 = !DILocation(line: 278, column: 57, scope: !6755)
!6762 = !DILocation(line: 279, column: 6, scope: !6755)
!6763 = !DILocation(line: 279, column: 12, scope: !6755)
!6764 = !DILocation(line: 279, column: 19, scope: !6755)
!6765 = !DILocation(line: 279, column: 35, scope: !6755)
!6766 = !DILocation(line: 279, column: 59, scope: !6755)
!6767 = !DILocation(line: 279, column: 65, scope: !6755)
!6768 = !DILocation(line: 279, column: 38, scope: !6755)
!6769 = !DILocation(line: 278, column: 6, scope: !6714)
!6770 = !DILocation(line: 280, column: 3, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 279, column: 70)
!6772 = !DILocation(line: 280, column: 9, scope: !6771)
!6773 = !DILocation(line: 280, column: 16, scope: !6771)
!6774 = !DILocation(line: 281, column: 26, scope: !6771)
!6775 = !DILocation(line: 281, column: 3, scope: !6771)
!6776 = !DILocation(line: 282, column: 2, scope: !6771)
!6777 = !DILocation(line: 283, column: 26, scope: !6714)
!6778 = !DILocation(line: 283, column: 32, scope: !6714)
!6779 = !DILocation(line: 283, column: 35, scope: !6714)
!6780 = !DILocation(line: 283, column: 41, scope: !6714)
!6781 = !DILocation(line: 409, column: 2, scope: !5897, inlinedAt: !6716)
!6782 = !DILocation(line: 409, column: 2, scope: !5902, inlinedAt: !6716)
!6783 = !DILocation(line: 409, column: 2, scope: !5903, inlinedAt: !6716)
!6784 = !DILocation(line: 409, column: 2, scope: !5910, inlinedAt: !6716)
!6785 = !DILocation(line: 409, column: 2, scope: !5913, inlinedAt: !6716)
!6786 = !DILocation(line: 284, column: 1, scope: !6714)
!6787 = distinct !DISubprogram(name: "dw_edma_device_tx_status", scope: !3, file: !3, line: 287, type: !4542, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6788 = !DILocation(line: 407, column: 64, scope: !5784, inlinedAt: !6789)
!6789 = distinct !DILocation(line: 314, column: 2, scope: !6787)
!6790 = !DILocation(line: 407, column: 84, scope: !5784, inlinedAt: !6789)
!6791 = !DILocation(line: 327, column: 67, scope: !5793, inlinedAt: !6792)
!6792 = distinct !DILocation(line: 307, column: 2, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 307, column: 2)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 307, column: 2)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 307, column: 2)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 307, column: 2)
!6797 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 307, column: 2)
!6798 = !DILocalVariable(name: "dchan", arg: 1, scope: !6787, file: !3, line: 287, type: !301)
!6799 = !DILocation(line: 287, column: 43, scope: !6787)
!6800 = !DILocalVariable(name: "cookie", arg: 2, scope: !6787, file: !3, line: 287, type: !4368)
!6801 = !DILocation(line: 287, column: 63, scope: !6787)
!6802 = !DILocalVariable(name: "txstate", arg: 3, scope: !6787, file: !3, line: 288, type: !4544)
!6803 = !DILocation(line: 288, column: 26, scope: !6787)
!6804 = !DILocalVariable(name: "chan", scope: !6787, file: !3, line: 290, type: !253)
!6805 = !DILocation(line: 290, column: 23, scope: !6787)
!6806 = !DILocation(line: 290, column: 49, scope: !6787)
!6807 = !DILocation(line: 290, column: 30, scope: !6787)
!6808 = !DILocalVariable(name: "desc", scope: !6787, file: !3, line: 291, type: !4688)
!6809 = !DILocation(line: 291, column: 23, scope: !6787)
!6810 = !DILocalVariable(name: "vd", scope: !6787, file: !3, line: 292, type: !4612)
!6811 = !DILocation(line: 292, column: 24, scope: !6787)
!6812 = !DILocalVariable(name: "flags", scope: !6787, file: !3, line: 293, type: !320)
!6813 = !DILocation(line: 293, column: 16, scope: !6787)
!6814 = !DILocalVariable(name: "ret", scope: !6787, file: !3, line: 294, type: !188)
!6815 = !DILocation(line: 294, column: 18, scope: !6787)
!6816 = !DILocalVariable(name: "residue", scope: !6787, file: !3, line: 295, type: !530)
!6817 = !DILocation(line: 295, column: 6, scope: !6787)
!6818 = !DILocation(line: 297, column: 26, scope: !6787)
!6819 = !DILocation(line: 297, column: 33, scope: !6787)
!6820 = !DILocation(line: 297, column: 41, scope: !6787)
!6821 = !DILocation(line: 297, column: 8, scope: !6787)
!6822 = !DILocation(line: 297, column: 6, scope: !6787)
!6823 = !DILocation(line: 298, column: 6, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 298, column: 6)
!6825 = !DILocation(line: 298, column: 10, scope: !6824)
!6826 = !DILocation(line: 298, column: 6, scope: !6787)
!6827 = !DILocation(line: 299, column: 10, scope: !6824)
!6828 = !DILocation(line: 299, column: 3, scope: !6824)
!6829 = !DILocation(line: 301, column: 6, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 301, column: 6)
!6831 = !DILocation(line: 301, column: 10, scope: !6830)
!6832 = !DILocation(line: 301, column: 29, scope: !6830)
!6833 = !DILocation(line: 301, column: 32, scope: !6830)
!6834 = !DILocation(line: 301, column: 38, scope: !6830)
!6835 = !DILocation(line: 301, column: 45, scope: !6830)
!6836 = !DILocation(line: 301, column: 6, scope: !6787)
!6837 = !DILocation(line: 302, column: 7, scope: !6830)
!6838 = !DILocation(line: 302, column: 3, scope: !6830)
!6839 = !DILocation(line: 304, column: 7, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 304, column: 6)
!6841 = !DILocation(line: 304, column: 6, scope: !6787)
!6842 = !DILocation(line: 305, column: 3, scope: !6840)
!6843 = !DILocation(line: 307, column: 2, scope: !6787)
!6844 = !DILocation(line: 307, column: 2, scope: !6797)
!6845 = !DILocalVariable(name: "__dummy", scope: !6846, file: !3, line: 307, type: !320)
!6846 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 307, column: 2)
!6847 = !DILocation(line: 307, column: 2, scope: !6846)
!6848 = !DILocalVariable(name: "__dummy2", scope: !6846, file: !3, line: 307, type: !320)
!6849 = !DILocation(line: 307, column: 2, scope: !6796)
!6850 = !DILocation(line: 307, column: 2, scope: !6795)
!6851 = !DILocation(line: 307, column: 2, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 307, column: 2)
!6853 = !DILocalVariable(name: "__dummy", scope: !6854, file: !3, line: 307, type: !320)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !3, line: 307, column: 2)
!6855 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 307, column: 2)
!6856 = !DILocation(line: 307, column: 2, scope: !6854)
!6857 = !DILocalVariable(name: "__dummy2", scope: !6854, file: !3, line: 307, type: !320)
!6858 = !DILocation(line: 307, column: 2, scope: !6855)
!6859 = !DILocation(line: 307, column: 2, scope: !6794)
!6860 = !{i32 -2141658306}
!6861 = !DILocation(line: 307, column: 2, scope: !6793)
!6862 = !DILocation(line: 329, column: 10, scope: !5793, inlinedAt: !6792)
!6863 = !DILocation(line: 329, column: 16, scope: !5793, inlinedAt: !6792)
!6864 = !DILocation(line: 308, column: 24, scope: !6787)
!6865 = !DILocation(line: 308, column: 30, scope: !6787)
!6866 = !DILocation(line: 308, column: 34, scope: !6787)
!6867 = !DILocation(line: 308, column: 7, scope: !6787)
!6868 = !DILocation(line: 308, column: 5, scope: !6787)
!6869 = !DILocation(line: 309, column: 6, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 309, column: 6)
!6871 = !DILocation(line: 309, column: 6, scope: !6787)
!6872 = !DILocation(line: 310, column: 26, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 309, column: 10)
!6874 = !DILocation(line: 310, column: 10, scope: !6873)
!6875 = !DILocation(line: 310, column: 8, scope: !6873)
!6876 = !DILocation(line: 311, column: 7, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 311, column: 7)
!6878 = !DILocation(line: 311, column: 7, scope: !6873)
!6879 = !DILocation(line: 312, column: 14, scope: !6877)
!6880 = !DILocation(line: 312, column: 20, scope: !6877)
!6881 = !DILocation(line: 312, column: 31, scope: !6877)
!6882 = !DILocation(line: 312, column: 37, scope: !6877)
!6883 = !DILocation(line: 312, column: 29, scope: !6877)
!6884 = !DILocation(line: 312, column: 12, scope: !6877)
!6885 = !DILocation(line: 312, column: 4, scope: !6877)
!6886 = !DILocation(line: 313, column: 2, scope: !6873)
!6887 = !DILocation(line: 314, column: 26, scope: !6787)
!6888 = !DILocation(line: 314, column: 32, scope: !6787)
!6889 = !DILocation(line: 314, column: 35, scope: !6787)
!6890 = !DILocation(line: 314, column: 41, scope: !6787)
!6891 = !DILocation(line: 409, column: 2, scope: !5897, inlinedAt: !6789)
!6892 = !DILocation(line: 409, column: 2, scope: !5902, inlinedAt: !6789)
!6893 = !DILocation(line: 409, column: 2, scope: !5903, inlinedAt: !6789)
!6894 = !DILocation(line: 409, column: 2, scope: !5910, inlinedAt: !6789)
!6895 = !DILocation(line: 409, column: 2, scope: !5913, inlinedAt: !6789)
!6896 = !DILocation(line: 314, column: 2, scope: !6787)
!6897 = !DILabel(scope: !6787, name: "ret_residue", file: !3, line: 316)
!6898 = !DILocation(line: 316, column: 1, scope: !6787)
!6899 = !DILocation(line: 317, column: 18, scope: !6787)
!6900 = !DILocation(line: 317, column: 27, scope: !6787)
!6901 = !DILocation(line: 317, column: 2, scope: !6787)
!6902 = !DILocation(line: 319, column: 9, scope: !6787)
!6903 = !DILocation(line: 319, column: 2, scope: !6787)
!6904 = !DILocation(line: 320, column: 1, scope: !6787)
!6905 = distinct !DISubprogram(name: "dw_edma_device_prep_slave_sg", scope: !3, file: !3, line: 450, type: !4466, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6906 = !DILocalVariable(name: "dchan", arg: 1, scope: !6905, file: !3, line: 450, type: !301)
!6907 = !DILocation(line: 450, column: 47, scope: !6905)
!6908 = !DILocalVariable(name: "sgl", arg: 2, scope: !6905, file: !3, line: 450, type: !4451)
!6909 = !DILocation(line: 450, column: 74, scope: !6905)
!6910 = !DILocalVariable(name: "len", arg: 3, scope: !6905, file: !3, line: 451, type: !7)
!6911 = !DILocation(line: 451, column: 22, scope: !6905)
!6912 = !DILocalVariable(name: "direction", arg: 4, scope: !6905, file: !3, line: 452, type: !170)
!6913 = !DILocation(line: 452, column: 37, scope: !6905)
!6914 = !DILocalVariable(name: "flags", arg: 5, scope: !6905, file: !3, line: 453, type: !320)
!6915 = !DILocation(line: 453, column: 23, scope: !6905)
!6916 = !DILocalVariable(name: "context", arg: 6, scope: !6905, file: !3, line: 453, type: !252)
!6917 = !DILocation(line: 453, column: 36, scope: !6905)
!6918 = !DILocalVariable(name: "xfer", scope: !6905, file: !3, line: 455, type: !6919)
!6919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_edma_transfer", file: !196, line: 146, size: 448, elements: !6920)
!6920 = !{!6921, !6922, !6936, !6937, !6938}
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "dchan", scope: !6919, file: !196, line: 147, baseType: !301, size: 64)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "xfer", scope: !6919, file: !196, line: 151, baseType: !6923, size: 192, offset: 64)
!6923 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "dw_edma_xfer", file: !196, line: 148, size: 192, elements: !6924)
!6924 = !{!6925, !6930}
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !6923, file: !196, line: 149, baseType: !6926, size: 128)
!6926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_edma_sg", file: !196, line: 135, size: 128, elements: !6927)
!6927 = !{!6928, !6929}
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !6926, file: !196, line: 136, baseType: !4451, size: 64)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6926, file: !196, line: 137, baseType: !7, size: 32, offset: 64)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic", scope: !6923, file: !196, line: 150, baseType: !6931, size: 192)
!6931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_edma_cyclic", file: !196, line: 140, size: 192, elements: !6932)
!6932 = !{!6933, !6934, !6935}
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "paddr", scope: !6931, file: !196, line: 141, baseType: !1072, size: 64)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6931, file: !196, line: 142, baseType: !437, size: 64, offset: 64)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !6931, file: !196, line: 143, baseType: !437, size: 64, offset: 128)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !6919, file: !196, line: 152, baseType: !170, size: 32, offset: 256)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6919, file: !196, line: 153, baseType: !320, size: 64, offset: 320)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic", scope: !6919, file: !196, line: 154, baseType: !299, size: 8, offset: 384)
!6939 = !DILocation(line: 455, column: 26, scope: !6905)
!6940 = !DILocation(line: 457, column: 15, scope: !6905)
!6941 = !DILocation(line: 457, column: 7, scope: !6905)
!6942 = !DILocation(line: 457, column: 13, scope: !6905)
!6943 = !DILocation(line: 458, column: 19, scope: !6905)
!6944 = !DILocation(line: 458, column: 7, scope: !6905)
!6945 = !DILocation(line: 458, column: 17, scope: !6905)
!6946 = !DILocation(line: 459, column: 21, scope: !6905)
!6947 = !DILocation(line: 459, column: 7, scope: !6905)
!6948 = !DILocation(line: 459, column: 12, scope: !6905)
!6949 = !DILocation(line: 459, column: 15, scope: !6905)
!6950 = !DILocation(line: 459, column: 19, scope: !6905)
!6951 = !DILocation(line: 460, column: 21, scope: !6905)
!6952 = !DILocation(line: 460, column: 7, scope: !6905)
!6953 = !DILocation(line: 460, column: 12, scope: !6905)
!6954 = !DILocation(line: 460, column: 15, scope: !6905)
!6955 = !DILocation(line: 460, column: 19, scope: !6905)
!6956 = !DILocation(line: 461, column: 15, scope: !6905)
!6957 = !DILocation(line: 461, column: 7, scope: !6905)
!6958 = !DILocation(line: 461, column: 13, scope: !6905)
!6959 = !DILocation(line: 462, column: 7, scope: !6905)
!6960 = !DILocation(line: 462, column: 14, scope: !6905)
!6961 = !DILocation(line: 464, column: 9, scope: !6905)
!6962 = !DILocation(line: 464, column: 2, scope: !6905)
!6963 = distinct !DISubprogram(name: "dw_edma_device_prep_dma_cyclic", scope: !3, file: !3, line: 468, type: !4470, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!6964 = !DILocalVariable(name: "dchan", arg: 1, scope: !6963, file: !3, line: 468, type: !301)
!6965 = !DILocation(line: 468, column: 49, scope: !6963)
!6966 = !DILocalVariable(name: "paddr", arg: 2, scope: !6963, file: !3, line: 468, type: !1072)
!6967 = !DILocation(line: 468, column: 67, scope: !6963)
!6968 = !DILocalVariable(name: "len", arg: 3, scope: !6963, file: !3, line: 469, type: !437)
!6969 = !DILocation(line: 469, column: 18, scope: !6963)
!6970 = !DILocalVariable(name: "count", arg: 4, scope: !6963, file: !3, line: 469, type: !437)
!6971 = !DILocation(line: 469, column: 30, scope: !6963)
!6972 = !DILocalVariable(name: "direction", arg: 5, scope: !6963, file: !3, line: 470, type: !170)
!6973 = !DILocation(line: 470, column: 39, scope: !6963)
!6974 = !DILocalVariable(name: "flags", arg: 6, scope: !6963, file: !3, line: 471, type: !320)
!6975 = !DILocation(line: 471, column: 25, scope: !6963)
!6976 = !DILocalVariable(name: "xfer", scope: !6963, file: !3, line: 473, type: !6919)
!6977 = !DILocation(line: 473, column: 26, scope: !6963)
!6978 = !DILocation(line: 475, column: 15, scope: !6963)
!6979 = !DILocation(line: 475, column: 7, scope: !6963)
!6980 = !DILocation(line: 475, column: 13, scope: !6963)
!6981 = !DILocation(line: 476, column: 19, scope: !6963)
!6982 = !DILocation(line: 476, column: 7, scope: !6963)
!6983 = !DILocation(line: 476, column: 17, scope: !6963)
!6984 = !DILocation(line: 477, column: 27, scope: !6963)
!6985 = !DILocation(line: 477, column: 7, scope: !6963)
!6986 = !DILocation(line: 477, column: 12, scope: !6963)
!6987 = !DILocation(line: 477, column: 19, scope: !6963)
!6988 = !DILocation(line: 477, column: 25, scope: !6963)
!6989 = !DILocation(line: 478, column: 25, scope: !6963)
!6990 = !DILocation(line: 478, column: 7, scope: !6963)
!6991 = !DILocation(line: 478, column: 12, scope: !6963)
!6992 = !DILocation(line: 478, column: 19, scope: !6963)
!6993 = !DILocation(line: 478, column: 23, scope: !6963)
!6994 = !DILocation(line: 479, column: 25, scope: !6963)
!6995 = !DILocation(line: 479, column: 7, scope: !6963)
!6996 = !DILocation(line: 479, column: 12, scope: !6963)
!6997 = !DILocation(line: 479, column: 19, scope: !6963)
!6998 = !DILocation(line: 479, column: 23, scope: !6963)
!6999 = !DILocation(line: 480, column: 15, scope: !6963)
!7000 = !DILocation(line: 480, column: 7, scope: !6963)
!7001 = !DILocation(line: 480, column: 13, scope: !6963)
!7002 = !DILocation(line: 481, column: 7, scope: !6963)
!7003 = !DILocation(line: 481, column: 14, scope: !6963)
!7004 = !DILocation(line: 483, column: 9, scope: !6963)
!7005 = !DILocation(line: 483, column: 2, scope: !6963)
!7006 = distinct !DISubprogram(name: "dma_set_max_seg_size", scope: !7007, file: !7007, line: 459, type: !4670, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7007 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!7008 = !DILocalVariable(name: "dev", arg: 1, scope: !7006, file: !7007, line: 459, type: !333)
!7009 = !DILocation(line: 459, column: 55, scope: !7006)
!7010 = !DILocalVariable(name: "size", arg: 2, scope: !7006, file: !7007, line: 459, type: !7)
!7011 = !DILocation(line: 459, column: 73, scope: !7006)
!7012 = !DILocation(line: 461, column: 6, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7006, file: !7007, line: 461, column: 6)
!7014 = !DILocation(line: 461, column: 11, scope: !7013)
!7015 = !DILocation(line: 461, column: 6, scope: !7006)
!7016 = !DILocation(line: 462, column: 38, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7013, file: !7007, line: 461, column: 22)
!7018 = !DILocation(line: 462, column: 3, scope: !7017)
!7019 = !DILocation(line: 462, column: 8, scope: !7017)
!7020 = !DILocation(line: 462, column: 19, scope: !7017)
!7021 = !DILocation(line: 462, column: 36, scope: !7017)
!7022 = !DILocation(line: 463, column: 3, scope: !7017)
!7023 = !DILocation(line: 465, column: 2, scope: !7006)
!7024 = !DILocation(line: 466, column: 1, scope: !7006)
!7025 = distinct !DISubprogram(name: "fls_long", scope: !7026, file: !7026, line: 182, type: !7027, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7026 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7027 = !DISubroutineType(types: !7028)
!7028 = !{!7, !320}
!7029 = !DILocalVariable(name: "x", arg: 1, scope: !7030, file: !6313, line: 366, type: !537)
!7030 = distinct !DISubprogram(name: "fls64", scope: !6313, file: !6313, line: 366, type: !7031, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7031 = !DISubroutineType(types: !7032)
!7032 = !{!281, !537}
!7033 = !DILocation(line: 366, column: 40, scope: !7030, inlinedAt: !7034)
!7034 = distinct !DILocation(line: 186, column: 9, scope: !7025)
!7035 = !DILocalVariable(name: "bitpos", scope: !7030, file: !6313, line: 368, type: !281)
!7036 = !DILocation(line: 368, column: 6, scope: !7030, inlinedAt: !7034)
!7037 = !DILocalVariable(name: "l", arg: 1, scope: !7025, file: !7026, line: 182, type: !320)
!7038 = !DILocation(line: 182, column: 47, scope: !7025)
!7039 = !DILocation(line: 186, column: 15, scope: !7025)
!7040 = !DILocation(line: 374, column: 2, scope: !7030, inlinedAt: !7034)
!7041 = !DILocation(line: 376, column: 14, scope: !7030, inlinedAt: !7034)
!7042 = !{i32 319066}
!7043 = !DILocation(line: 377, column: 9, scope: !7030, inlinedAt: !7034)
!7044 = !DILocation(line: 377, column: 16, scope: !7030, inlinedAt: !7034)
!7045 = !DILocation(line: 186, column: 2, scope: !7025)
!7046 = distinct !DISubprogram(name: "dw_edma_free_desc", scope: !3, file: !3, line: 158, type: !7047, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7047 = !DISubroutineType(types: !7048)
!7048 = !{null, !4688}
!7049 = !DILocalVariable(name: "desc", arg: 1, scope: !7046, file: !3, line: 158, type: !4688)
!7050 = !DILocation(line: 158, column: 52, scope: !7046)
!7051 = !DILocation(line: 160, column: 21, scope: !7046)
!7052 = !DILocation(line: 160, column: 2, scope: !7046)
!7053 = !DILocation(line: 161, column: 8, scope: !7046)
!7054 = !DILocation(line: 161, column: 2, scope: !7046)
!7055 = !DILocation(line: 162, column: 1, scope: !7046)
!7056 = distinct !DISubprogram(name: "dw_edma_free_chunk", scope: !3, file: !3, line: 138, type: !7047, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7057 = !DILocalVariable(name: "desc", arg: 1, scope: !7056, file: !3, line: 138, type: !4688)
!7058 = !DILocation(line: 138, column: 53, scope: !7056)
!7059 = !DILocalVariable(name: "child", scope: !7056, file: !3, line: 140, type: !4694)
!7060 = !DILocation(line: 140, column: 24, scope: !7056)
!7061 = !DILocalVariable(name: "_next", scope: !7056, file: !3, line: 140, type: !4694)
!7062 = !DILocation(line: 140, column: 32, scope: !7056)
!7063 = !DILocation(line: 142, column: 7, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 142, column: 6)
!7065 = !DILocation(line: 142, column: 13, scope: !7064)
!7066 = !DILocation(line: 142, column: 6, scope: !7056)
!7067 = !DILocation(line: 143, column: 3, scope: !7064)
!7068 = !DILocalVariable(name: "__mptr", scope: !7069, file: !3, line: 146, type: !252)
!7069 = distinct !DILexicalBlock(scope: !7070, file: !3, line: 146, column: 2)
!7070 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 146, column: 2)
!7071 = !DILocation(line: 146, column: 2, scope: !7069)
!7072 = !DILocation(line: 146, column: 2, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 146, column: 2)
!7074 = !DILocation(line: 146, column: 2, scope: !7070)
!7075 = !DILocalVariable(name: "__mptr", scope: !7076, file: !3, line: 146, type: !252)
!7076 = distinct !DILexicalBlock(scope: !7070, file: !3, line: 146, column: 2)
!7077 = !DILocation(line: 146, column: 2, scope: !7076)
!7078 = !DILocation(line: 146, column: 2, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 146, column: 2)
!7080 = !DILocation(line: 146, column: 2, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7070, file: !3, line: 146, column: 2)
!7082 = !DILocation(line: 147, column: 22, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 146, column: 67)
!7084 = !DILocation(line: 147, column: 3, scope: !7083)
!7085 = !DILocation(line: 148, column: 13, scope: !7083)
!7086 = !DILocation(line: 148, column: 20, scope: !7083)
!7087 = !DILocation(line: 148, column: 3, scope: !7083)
!7088 = !DILocation(line: 149, column: 9, scope: !7083)
!7089 = !DILocation(line: 149, column: 3, scope: !7083)
!7090 = !DILocation(line: 150, column: 3, scope: !7083)
!7091 = !DILocation(line: 150, column: 9, scope: !7083)
!7092 = !DILocation(line: 150, column: 21, scope: !7083)
!7093 = !DILocation(line: 151, column: 2, scope: !7083)
!7094 = !DILocalVariable(name: "__mptr", scope: !7095, file: !3, line: 146, type: !252)
!7095 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 146, column: 2)
!7096 = !DILocation(line: 146, column: 2, scope: !7095)
!7097 = !DILocation(line: 146, column: 2, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 146, column: 2)
!7099 = distinct !{!7099, !7074, !7100}
!7100 = !DILocation(line: 151, column: 2, scope: !7070)
!7101 = !DILocation(line: 154, column: 8, scope: !7056)
!7102 = !DILocation(line: 154, column: 2, scope: !7056)
!7103 = !DILocation(line: 155, column: 2, scope: !7056)
!7104 = !DILocation(line: 155, column: 8, scope: !7056)
!7105 = !DILocation(line: 155, column: 14, scope: !7056)
!7106 = !DILocation(line: 156, column: 1, scope: !7056)
!7107 = distinct !DISubprogram(name: "bitmap_zero", scope: !7108, file: !7108, line: 235, type: !7109, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7108 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!7109 = !DISubroutineType(types: !7110)
!7110 = !{null, !3944, !7}
!7111 = !DILocalVariable(name: "dst", arg: 1, scope: !7107, file: !7108, line: 235, type: !3944)
!7112 = !DILocation(line: 235, column: 47, scope: !7107)
!7113 = !DILocalVariable(name: "nbits", arg: 2, scope: !7107, file: !7108, line: 235, type: !7)
!7114 = !DILocation(line: 235, column: 65, scope: !7107)
!7115 = !DILocalVariable(name: "len", scope: !7107, file: !7108, line: 237, type: !7)
!7116 = !DILocation(line: 237, column: 15, scope: !7107)
!7117 = !DILocation(line: 237, column: 21, scope: !7107)
!7118 = !DILocation(line: 237, column: 42, scope: !7107)
!7119 = !DILocation(line: 238, column: 9, scope: !7107)
!7120 = !DILocation(line: 238, column: 2, scope: !7107)
!7121 = !DILocation(line: 238, column: 17, scope: !7107)
!7122 = !DILocation(line: 239, column: 1, scope: !7107)
!7123 = distinct !DISubprogram(name: "set_bit", scope: !6306, file: !6306, line: 26, type: !7124, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7124 = !DISubroutineType(types: !7125)
!7125 = !{null, !426, !6309}
!7126 = !DILocalVariable(name: "nr", arg: 1, scope: !7127, file: !6313, line: 52, type: !426)
!7127 = distinct !DISubprogram(name: "arch_set_bit", scope: !6313, file: !6313, line: 52, type: !7124, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7128 = !DILocation(line: 52, column: 19, scope: !7127, inlinedAt: !7129)
!7129 = distinct !DILocation(line: 29, column: 2, scope: !7123)
!7130 = !DILocalVariable(name: "addr", arg: 2, scope: !7127, file: !6313, line: 52, type: !6309)
!7131 = !DILocation(line: 52, column: 47, scope: !7127, inlinedAt: !7129)
!7132 = !DILocalVariable(name: "v", arg: 1, scope: !7133, file: !6323, line: 84, type: !6326)
!7133 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !6323, file: !6323, line: 84, type: !6324, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7134 = !DILocation(line: 84, column: 74, scope: !7133, inlinedAt: !7135)
!7135 = distinct !DILocation(line: 28, column: 2, scope: !7123)
!7136 = !DILocalVariable(name: "size", arg: 2, scope: !7133, file: !6323, line: 84, type: !437)
!7137 = !DILocation(line: 84, column: 84, scope: !7133, inlinedAt: !7135)
!7138 = !DILocalVariable(name: "nr", arg: 1, scope: !7123, file: !6306, line: 26, type: !426)
!7139 = !DILocation(line: 26, column: 33, scope: !7123)
!7140 = !DILocalVariable(name: "addr", arg: 2, scope: !7123, file: !6306, line: 26, type: !6309)
!7141 = !DILocation(line: 26, column: 61, scope: !7123)
!7142 = !DILocation(line: 28, column: 26, scope: !7123)
!7143 = !DILocation(line: 28, column: 33, scope: !7123)
!7144 = !DILocation(line: 28, column: 31, scope: !7123)
!7145 = !DILocation(line: 86, column: 20, scope: !7133, inlinedAt: !7135)
!7146 = !DILocation(line: 86, column: 23, scope: !7133, inlinedAt: !7135)
!7147 = !DILocation(line: 86, column: 2, scope: !7133, inlinedAt: !7135)
!7148 = !DILocation(line: 87, column: 2, scope: !7133, inlinedAt: !7135)
!7149 = !DILocation(line: 29, column: 15, scope: !7123)
!7150 = !DILocation(line: 29, column: 19, scope: !7123)
!7151 = !DILocation(line: 54, column: 27, scope: !7152, inlinedAt: !7129)
!7152 = distinct !DILexicalBlock(scope: !7127, file: !6313, line: 54, column: 6)
!7153 = !DILocation(line: 54, column: 6, scope: !7152, inlinedAt: !7129)
!7154 = !DILocation(line: 54, column: 6, scope: !7127, inlinedAt: !7129)
!7155 = !DILocation(line: 56, column: 6, scope: !7156, inlinedAt: !7129)
!7156 = distinct !DILexicalBlock(scope: !7152, file: !6313, line: 54, column: 32)
!7157 = !DILocation(line: 57, column: 12, scope: !7156, inlinedAt: !7129)
!7158 = !DILocation(line: 55, column: 3, scope: !7156, inlinedAt: !7129)
!7159 = !{i32 -2147133155}
!7160 = !DILocation(line: 59, column: 2, scope: !7156, inlinedAt: !7129)
!7161 = !DILocation(line: 61, column: 8, scope: !7162, inlinedAt: !7129)
!7162 = distinct !DILexicalBlock(scope: !7152, file: !6313, line: 59, column: 9)
!7163 = !DILocation(line: 61, column: 32, scope: !7162, inlinedAt: !7129)
!7164 = !DILocation(line: 60, column: 3, scope: !7162, inlinedAt: !7129)
!7165 = !{i32 -2147133023}
!7166 = !DILocation(line: 30, column: 1, scope: !7123)
!7167 = distinct !DISubprogram(name: "dchan2dw_edma_chan", scope: !196, file: !196, line: 164, type: !7168, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7168 = !DISubroutineType(types: !7169)
!7169 = !{!253, !301}
!7170 = !DILocalVariable(name: "dchan", arg: 1, scope: !7167, file: !196, line: 164, type: !301)
!7171 = !DILocation(line: 164, column: 58, scope: !7167)
!7172 = !DILocation(line: 166, column: 38, scope: !7167)
!7173 = !DILocation(line: 166, column: 25, scope: !7167)
!7174 = !DILocation(line: 166, column: 9, scope: !7167)
!7175 = !DILocation(line: 166, column: 2, scope: !7167)
!7176 = distinct !DISubprogram(name: "pm_runtime_get", scope: !5521, file: !5521, line: 368, type: !3543, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7177 = !DILocalVariable(name: "dev", arg: 1, scope: !7176, file: !5521, line: 368, type: !333)
!7178 = !DILocation(line: 368, column: 49, scope: !7176)
!7179 = !DILocation(line: 370, column: 29, scope: !7176)
!7180 = !DILocation(line: 370, column: 9, scope: !7176)
!7181 = !DILocation(line: 370, column: 2, scope: !7176)
!7182 = distinct !DISubprogram(name: "vc2dw_edma_chan", scope: !196, file: !196, line: 158, type: !7183, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{!253, !4713}
!7185 = !DILocalVariable(name: "vc", arg: 1, scope: !7182, file: !196, line: 158, type: !4713)
!7186 = !DILocation(line: 158, column: 60, scope: !7182)
!7187 = !DILocalVariable(name: "__mptr", scope: !7188, file: !196, line: 160, type: !252)
!7188 = distinct !DILexicalBlock(scope: !7182, file: !196, line: 160, column: 9)
!7189 = !DILocation(line: 160, column: 9, scope: !7188)
!7190 = !DILocation(line: 160, column: 9, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7188, file: !196, line: 160, column: 9)
!7192 = !DILocation(line: 160, column: 2, scope: !7182)
!7193 = distinct !DISubprogram(name: "pm_runtime_put", scope: !5521, file: !5521, line: 417, type: !3543, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7194 = !DILocalVariable(name: "dev", arg: 1, scope: !7193, file: !5521, line: 417, type: !333)
!7195 = !DILocation(line: 417, column: 49, scope: !7193)
!7196 = !DILocation(line: 419, column: 27, scope: !7193)
!7197 = !DILocation(line: 419, column: 9, scope: !7193)
!7198 = !DILocation(line: 419, column: 2, scope: !7193)
!7199 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !6493, file: !6493, line: 308, type: !6494, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7200 = !DILocalVariable(name: "m", arg: 1, scope: !7199, file: !6493, line: 308, type: !2970)
!7201 = !DILocation(line: 308, column: 66, scope: !7199)
!7202 = !DILocation(line: 310, column: 10, scope: !7199)
!7203 = !DILocation(line: 310, column: 12, scope: !7199)
!7204 = !DILocation(line: 310, column: 34, scope: !7199)
!7205 = !DILocation(line: 310, column: 39, scope: !7199)
!7206 = !DILocation(line: 310, column: 2, scope: !7199)
!7207 = distinct !DISubprogram(name: "vchan_issue_pending", scope: !258, file: !258, line: 82, type: !7208, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7208 = !DISubroutineType(types: !7209)
!7209 = !{!299, !4713}
!7210 = !DILocalVariable(name: "vc", arg: 1, scope: !7207, file: !258, line: 82, type: !4713)
!7211 = !DILocation(line: 82, column: 62, scope: !7207)
!7212 = !DILocation(line: 84, column: 25, scope: !7207)
!7213 = !DILocation(line: 84, column: 29, scope: !7207)
!7214 = !DILocation(line: 84, column: 46, scope: !7207)
!7215 = !DILocation(line: 84, column: 50, scope: !7207)
!7216 = !DILocation(line: 84, column: 2, scope: !7207)
!7217 = !DILocation(line: 85, column: 22, scope: !7207)
!7218 = !DILocation(line: 85, column: 26, scope: !7207)
!7219 = !DILocation(line: 85, column: 10, scope: !7207)
!7220 = !DILocation(line: 85, column: 9, scope: !7207)
!7221 = !DILocation(line: 85, column: 2, scope: !7207)
!7222 = distinct !DISubprogram(name: "list_splice_tail_init", scope: !5528, file: !5528, line: 495, type: !6236, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7223 = !DILocalVariable(name: "list", arg: 1, scope: !7222, file: !5528, line: 495, type: !288)
!7224 = !DILocation(line: 495, column: 60, scope: !7222)
!7225 = !DILocalVariable(name: "head", arg: 2, scope: !7222, file: !5528, line: 496, type: !288)
!7226 = !DILocation(line: 496, column: 25, scope: !7222)
!7227 = !DILocation(line: 498, column: 18, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7222, file: !5528, line: 498, column: 6)
!7229 = !DILocation(line: 498, column: 7, scope: !7228)
!7230 = !DILocation(line: 498, column: 6, scope: !7222)
!7231 = !DILocation(line: 499, column: 17, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7228, file: !5528, line: 498, column: 25)
!7233 = !DILocation(line: 499, column: 23, scope: !7232)
!7234 = !DILocation(line: 499, column: 29, scope: !7232)
!7235 = !DILocation(line: 499, column: 35, scope: !7232)
!7236 = !DILocation(line: 499, column: 3, scope: !7232)
!7237 = !DILocation(line: 500, column: 18, scope: !7232)
!7238 = !DILocation(line: 500, column: 3, scope: !7232)
!7239 = !DILocation(line: 501, column: 2, scope: !7232)
!7240 = !DILocation(line: 502, column: 1, scope: !7222)
!7241 = distinct !DISubprogram(name: "list_empty", scope: !5528, file: !5528, line: 280, type: !7242, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7242 = !DISubroutineType(types: !7243)
!7243 = !{!281, !7244}
!7244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7245, size: 64)
!7245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !285)
!7246 = !DILocalVariable(name: "head", arg: 1, scope: !7241, file: !5528, line: 280, type: !7244)
!7247 = !DILocation(line: 280, column: 54, scope: !7241)
!7248 = !DILocation(line: 282, column: 9, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7241, file: !5528, line: 282, column: 9)
!7250 = !DILocation(line: 282, column: 9, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7249, file: !5528, line: 282, column: 9)
!7252 = !DILocation(line: 282, column: 34, scope: !7241)
!7253 = !DILocation(line: 282, column: 31, scope: !7241)
!7254 = !DILocation(line: 282, column: 2, scope: !7241)
!7255 = distinct !DISubprogram(name: "__list_splice", scope: !5528, file: !5528, line: 433, type: !7256, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7256 = !DISubroutineType(types: !7257)
!7257 = !{null, !7244, !288, !288}
!7258 = !DILocalVariable(name: "list", arg: 1, scope: !7255, file: !5528, line: 433, type: !7244)
!7259 = !DILocation(line: 433, column: 58, scope: !7255)
!7260 = !DILocalVariable(name: "prev", arg: 2, scope: !7255, file: !5528, line: 434, type: !288)
!7261 = !DILocation(line: 434, column: 24, scope: !7255)
!7262 = !DILocalVariable(name: "next", arg: 3, scope: !7255, file: !5528, line: 435, type: !288)
!7263 = !DILocation(line: 435, column: 24, scope: !7255)
!7264 = !DILocalVariable(name: "first", scope: !7255, file: !5528, line: 437, type: !288)
!7265 = !DILocation(line: 437, column: 20, scope: !7255)
!7266 = !DILocation(line: 437, column: 28, scope: !7255)
!7267 = !DILocation(line: 437, column: 34, scope: !7255)
!7268 = !DILocalVariable(name: "last", scope: !7255, file: !5528, line: 438, type: !288)
!7269 = !DILocation(line: 438, column: 20, scope: !7255)
!7270 = !DILocation(line: 438, column: 27, scope: !7255)
!7271 = !DILocation(line: 438, column: 33, scope: !7255)
!7272 = !DILocation(line: 440, column: 16, scope: !7255)
!7273 = !DILocation(line: 440, column: 2, scope: !7255)
!7274 = !DILocation(line: 440, column: 9, scope: !7255)
!7275 = !DILocation(line: 440, column: 14, scope: !7255)
!7276 = !DILocation(line: 441, column: 15, scope: !7255)
!7277 = !DILocation(line: 441, column: 2, scope: !7255)
!7278 = !DILocation(line: 441, column: 8, scope: !7255)
!7279 = !DILocation(line: 441, column: 13, scope: !7255)
!7280 = !DILocation(line: 443, column: 15, scope: !7255)
!7281 = !DILocation(line: 443, column: 2, scope: !7255)
!7282 = !DILocation(line: 443, column: 8, scope: !7255)
!7283 = !DILocation(line: 443, column: 13, scope: !7255)
!7284 = !DILocation(line: 444, column: 15, scope: !7255)
!7285 = !DILocation(line: 444, column: 2, scope: !7255)
!7286 = !DILocation(line: 444, column: 8, scope: !7255)
!7287 = !DILocation(line: 444, column: 13, scope: !7255)
!7288 = !DILocation(line: 445, column: 1, scope: !7255)
!7289 = distinct !DISubprogram(name: "dma_cookie_status", scope: !6203, file: !6203, line: 68, type: !4542, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7290 = !DILocalVariable(name: "chan", arg: 1, scope: !7289, file: !6203, line: 68, type: !301)
!7291 = !DILocation(line: 68, column: 66, scope: !7289)
!7292 = !DILocalVariable(name: "cookie", arg: 2, scope: !7289, file: !6203, line: 69, type: !4368)
!7293 = !DILocation(line: 69, column: 15, scope: !7289)
!7294 = !DILocalVariable(name: "state", arg: 3, scope: !7289, file: !6203, line: 69, type: !4544)
!7295 = !DILocation(line: 69, column: 44, scope: !7289)
!7296 = !DILocalVariable(name: "used", scope: !7289, file: !6203, line: 71, type: !4368)
!7297 = !DILocation(line: 71, column: 15, scope: !7289)
!7298 = !DILocalVariable(name: "complete", scope: !7289, file: !6203, line: 71, type: !4368)
!7299 = !DILocation(line: 71, column: 21, scope: !7289)
!7300 = !DILocation(line: 73, column: 9, scope: !7289)
!7301 = !DILocation(line: 73, column: 15, scope: !7289)
!7302 = !DILocation(line: 73, column: 7, scope: !7289)
!7303 = !DILocation(line: 74, column: 13, scope: !7289)
!7304 = !DILocation(line: 74, column: 19, scope: !7289)
!7305 = !DILocation(line: 74, column: 11, scope: !7289)
!7306 = !DILocation(line: 75, column: 2, scope: !7289)
!7307 = !{i32 -2141697322}
!7308 = !DILocation(line: 76, column: 6, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7289, file: !6203, line: 76, column: 6)
!7310 = !DILocation(line: 76, column: 6, scope: !7289)
!7311 = !DILocation(line: 77, column: 17, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7309, file: !6203, line: 76, column: 13)
!7313 = !DILocation(line: 77, column: 3, scope: !7312)
!7314 = !DILocation(line: 77, column: 10, scope: !7312)
!7315 = !DILocation(line: 77, column: 15, scope: !7312)
!7316 = !DILocation(line: 78, column: 17, scope: !7312)
!7317 = !DILocation(line: 78, column: 3, scope: !7312)
!7318 = !DILocation(line: 78, column: 10, scope: !7312)
!7319 = !DILocation(line: 78, column: 15, scope: !7312)
!7320 = !DILocation(line: 79, column: 3, scope: !7312)
!7321 = !DILocation(line: 79, column: 10, scope: !7312)
!7322 = !DILocation(line: 79, column: 18, scope: !7312)
!7323 = !DILocation(line: 80, column: 3, scope: !7312)
!7324 = !DILocation(line: 80, column: 10, scope: !7312)
!7325 = !DILocation(line: 80, column: 26, scope: !7312)
!7326 = !DILocation(line: 81, column: 2, scope: !7312)
!7327 = !DILocation(line: 82, column: 31, scope: !7289)
!7328 = !DILocation(line: 82, column: 39, scope: !7289)
!7329 = !DILocation(line: 82, column: 49, scope: !7289)
!7330 = !DILocation(line: 82, column: 9, scope: !7289)
!7331 = !DILocation(line: 82, column: 2, scope: !7289)
!7332 = distinct !DISubprogram(name: "dma_set_residue", scope: !6203, file: !6203, line: 85, type: !7333, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7333 = !DISubroutineType(types: !7334)
!7334 = !{null, !4544, !530}
!7335 = !DILocalVariable(name: "state", arg: 1, scope: !7332, file: !6203, line: 85, type: !4544)
!7336 = !DILocation(line: 85, column: 57, scope: !7332)
!7337 = !DILocalVariable(name: "residue", arg: 2, scope: !7332, file: !6203, line: 85, type: !530)
!7338 = !DILocation(line: 85, column: 68, scope: !7332)
!7339 = !DILocation(line: 87, column: 6, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7332, file: !6203, line: 87, column: 6)
!7341 = !DILocation(line: 87, column: 6, scope: !7332)
!7342 = !DILocation(line: 88, column: 20, scope: !7340)
!7343 = !DILocation(line: 88, column: 3, scope: !7340)
!7344 = !DILocation(line: 88, column: 10, scope: !7340)
!7345 = !DILocation(line: 88, column: 18, scope: !7340)
!7346 = !DILocation(line: 89, column: 1, scope: !7332)
!7347 = distinct !DISubprogram(name: "dma_async_is_complete", scope: !129, file: !129, line: 1443, type: !7348, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7348 = !DISubroutineType(types: !7349)
!7349 = !{!188, !4368, !4368, !4368}
!7350 = !DILocalVariable(name: "cookie", arg: 1, scope: !7347, file: !129, line: 1443, type: !4368)
!7351 = !DILocation(line: 1443, column: 66, scope: !7347)
!7352 = !DILocalVariable(name: "last_complete", arg: 2, scope: !7347, file: !129, line: 1444, type: !4368)
!7353 = !DILocation(line: 1444, column: 17, scope: !7347)
!7354 = !DILocalVariable(name: "last_used", arg: 3, scope: !7347, file: !129, line: 1444, type: !4368)
!7355 = !DILocation(line: 1444, column: 45, scope: !7347)
!7356 = !DILocation(line: 1446, column: 6, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7347, file: !129, line: 1446, column: 6)
!7358 = !DILocation(line: 1446, column: 23, scope: !7357)
!7359 = !DILocation(line: 1446, column: 20, scope: !7357)
!7360 = !DILocation(line: 1446, column: 6, scope: !7347)
!7361 = !DILocation(line: 1447, column: 8, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7363, file: !129, line: 1447, column: 7)
!7363 = distinct !DILexicalBlock(scope: !7357, file: !129, line: 1446, column: 34)
!7364 = !DILocation(line: 1447, column: 18, scope: !7362)
!7365 = !DILocation(line: 1447, column: 15, scope: !7362)
!7366 = !DILocation(line: 1447, column: 33, scope: !7362)
!7367 = !DILocation(line: 1447, column: 37, scope: !7362)
!7368 = !DILocation(line: 1447, column: 46, scope: !7362)
!7369 = !DILocation(line: 1447, column: 44, scope: !7362)
!7370 = !DILocation(line: 1447, column: 7, scope: !7363)
!7371 = !DILocation(line: 1448, column: 4, scope: !7362)
!7372 = !DILocation(line: 1449, column: 2, scope: !7363)
!7373 = !DILocation(line: 1450, column: 8, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7375, file: !129, line: 1450, column: 7)
!7375 = distinct !DILexicalBlock(scope: !7357, file: !129, line: 1449, column: 9)
!7376 = !DILocation(line: 1450, column: 18, scope: !7374)
!7377 = !DILocation(line: 1450, column: 15, scope: !7374)
!7378 = !DILocation(line: 1450, column: 33, scope: !7374)
!7379 = !DILocation(line: 1450, column: 37, scope: !7374)
!7380 = !DILocation(line: 1450, column: 46, scope: !7374)
!7381 = !DILocation(line: 1450, column: 44, scope: !7374)
!7382 = !DILocation(line: 1450, column: 7, scope: !7375)
!7383 = !DILocation(line: 1451, column: 4, scope: !7374)
!7384 = !DILocation(line: 1453, column: 2, scope: !7347)
!7385 = !DILocation(line: 1454, column: 1, scope: !7347)
!7386 = distinct !DISubprogram(name: "dw_edma_device_transfer", scope: !3, file: !3, line: 323, type: !7387, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7387 = !DISubroutineType(types: !7388)
!7388 = !{!4364, !7389}
!7389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6919, size: 64)
!7390 = !DILocalVariable(name: "xfer", arg: 1, scope: !7386, file: !3, line: 323, type: !7389)
!7391 = !DILocation(line: 323, column: 50, scope: !7386)
!7392 = !DILocalVariable(name: "chan", scope: !7386, file: !3, line: 325, type: !253)
!7393 = !DILocation(line: 325, column: 23, scope: !7386)
!7394 = !DILocation(line: 325, column: 49, scope: !7386)
!7395 = !DILocation(line: 325, column: 55, scope: !7386)
!7396 = !DILocation(line: 325, column: 30, scope: !7386)
!7397 = !DILocalVariable(name: "dir", scope: !7386, file: !3, line: 326, type: !170)
!7398 = !DILocation(line: 326, column: 30, scope: !7386)
!7399 = !DILocation(line: 326, column: 36, scope: !7386)
!7400 = !DILocation(line: 326, column: 42, scope: !7386)
!7401 = !DILocalVariable(name: "src_addr", scope: !7386, file: !3, line: 327, type: !2268)
!7402 = !DILocation(line: 327, column: 14, scope: !7386)
!7403 = !DILocalVariable(name: "dst_addr", scope: !7386, file: !3, line: 327, type: !2268)
!7404 = !DILocation(line: 327, column: 24, scope: !7386)
!7405 = !DILocalVariable(name: "sg", scope: !7386, file: !3, line: 328, type: !4451)
!7406 = !DILocation(line: 328, column: 22, scope: !7386)
!7407 = !DILocalVariable(name: "chunk", scope: !7386, file: !3, line: 329, type: !4694)
!7408 = !DILocation(line: 329, column: 24, scope: !7386)
!7409 = !DILocalVariable(name: "burst", scope: !7386, file: !3, line: 330, type: !4700)
!7410 = !DILocation(line: 330, column: 24, scope: !7386)
!7411 = !DILocalVariable(name: "desc", scope: !7386, file: !3, line: 331, type: !4688)
!7412 = !DILocation(line: 331, column: 23, scope: !7386)
!7413 = !DILocalVariable(name: "cnt", scope: !7386, file: !3, line: 332, type: !530)
!7414 = !DILocation(line: 332, column: 6, scope: !7386)
!7415 = !DILocalVariable(name: "i", scope: !7386, file: !3, line: 333, type: !281)
!7416 = !DILocation(line: 333, column: 6, scope: !7386)
!7417 = !DILocation(line: 335, column: 7, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 335, column: 6)
!7419 = !DILocation(line: 335, column: 13, scope: !7418)
!7420 = !DILocation(line: 335, column: 6, scope: !7386)
!7421 = !DILocation(line: 336, column: 3, scope: !7418)
!7422 = !DILocation(line: 338, column: 10, scope: !7386)
!7423 = !DILocation(line: 338, column: 16, scope: !7386)
!7424 = !DILocation(line: 338, column: 23, scope: !7386)
!7425 = !DILocation(line: 338, column: 2, scope: !7386)
!7426 = !DILocation(line: 340, column: 7, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 340, column: 7)
!7428 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 338, column: 34)
!7429 = !DILocation(line: 340, column: 11, scope: !7427)
!7430 = !DILocation(line: 340, column: 29, scope: !7427)
!7431 = !DILocation(line: 340, column: 32, scope: !7427)
!7432 = !DILocation(line: 340, column: 38, scope: !7427)
!7433 = !DILocation(line: 340, column: 42, scope: !7427)
!7434 = !DILocation(line: 340, column: 7, scope: !7428)
!7435 = !DILocation(line: 341, column: 4, scope: !7427)
!7436 = !DILocation(line: 342, column: 3, scope: !7428)
!7437 = !DILocation(line: 344, column: 7, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 344, column: 7)
!7439 = !DILocation(line: 344, column: 11, scope: !7438)
!7440 = !DILocation(line: 344, column: 29, scope: !7438)
!7441 = !DILocation(line: 344, column: 32, scope: !7438)
!7442 = !DILocation(line: 344, column: 38, scope: !7438)
!7443 = !DILocation(line: 344, column: 42, scope: !7438)
!7444 = !DILocation(line: 344, column: 7, scope: !7428)
!7445 = !DILocation(line: 345, column: 4, scope: !7438)
!7446 = !DILocation(line: 346, column: 3, scope: !7428)
!7447 = !DILocation(line: 348, column: 7, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 348, column: 7)
!7449 = !DILocation(line: 348, column: 11, scope: !7448)
!7450 = !DILocation(line: 348, column: 29, scope: !7448)
!7451 = !DILocation(line: 348, column: 32, scope: !7448)
!7452 = !DILocation(line: 348, column: 38, scope: !7448)
!7453 = !DILocation(line: 348, column: 42, scope: !7448)
!7454 = !DILocation(line: 348, column: 7, scope: !7428)
!7455 = !DILocation(line: 349, column: 4, scope: !7448)
!7456 = !DILocation(line: 350, column: 7, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 350, column: 7)
!7458 = !DILocation(line: 350, column: 11, scope: !7457)
!7459 = !DILocation(line: 350, column: 29, scope: !7457)
!7460 = !DILocation(line: 350, column: 32, scope: !7457)
!7461 = !DILocation(line: 350, column: 38, scope: !7457)
!7462 = !DILocation(line: 350, column: 42, scope: !7457)
!7463 = !DILocation(line: 350, column: 7, scope: !7428)
!7464 = !DILocation(line: 351, column: 4, scope: !7457)
!7465 = !DILocation(line: 352, column: 3, scope: !7428)
!7466 = !DILocation(line: 355, column: 6, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 355, column: 6)
!7468 = !DILocation(line: 355, column: 12, scope: !7467)
!7469 = !DILocation(line: 355, column: 6, scope: !7386)
!7470 = !DILocation(line: 356, column: 8, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7472, file: !3, line: 356, column: 7)
!7472 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 355, column: 20)
!7473 = !DILocation(line: 356, column: 14, scope: !7471)
!7474 = !DILocation(line: 356, column: 19, scope: !7471)
!7475 = !DILocation(line: 356, column: 26, scope: !7471)
!7476 = !DILocation(line: 356, column: 30, scope: !7471)
!7477 = !DILocation(line: 356, column: 34, scope: !7471)
!7478 = !DILocation(line: 356, column: 40, scope: !7471)
!7479 = !DILocation(line: 356, column: 45, scope: !7471)
!7480 = !DILocation(line: 356, column: 52, scope: !7471)
!7481 = !DILocation(line: 356, column: 7, scope: !7472)
!7482 = !DILocation(line: 357, column: 4, scope: !7471)
!7483 = !DILocation(line: 358, column: 2, scope: !7472)
!7484 = !DILocation(line: 359, column: 7, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 359, column: 7)
!7486 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 358, column: 9)
!7487 = !DILocation(line: 359, column: 13, scope: !7485)
!7488 = !DILocation(line: 359, column: 18, scope: !7485)
!7489 = !DILocation(line: 359, column: 21, scope: !7485)
!7490 = !DILocation(line: 359, column: 25, scope: !7485)
!7491 = !DILocation(line: 359, column: 7, scope: !7486)
!7492 = !DILocation(line: 360, column: 4, scope: !7485)
!7493 = !DILocation(line: 363, column: 28, scope: !7386)
!7494 = !DILocation(line: 363, column: 9, scope: !7386)
!7495 = !DILocation(line: 363, column: 7, scope: !7386)
!7496 = !DILocation(line: 364, column: 6, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 364, column: 6)
!7498 = !DILocation(line: 364, column: 6, scope: !7386)
!7499 = !DILocation(line: 365, column: 3, scope: !7497)
!7500 = !DILocation(line: 367, column: 30, scope: !7386)
!7501 = !DILocation(line: 367, column: 10, scope: !7386)
!7502 = !DILocation(line: 367, column: 8, scope: !7386)
!7503 = !DILocation(line: 368, column: 6, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 368, column: 6)
!7505 = !DILocation(line: 368, column: 6, scope: !7386)
!7506 = !DILocation(line: 369, column: 3, scope: !7504)
!7507 = !DILocation(line: 371, column: 13, scope: !7386)
!7508 = !DILocation(line: 371, column: 19, scope: !7386)
!7509 = !DILocation(line: 371, column: 26, scope: !7386)
!7510 = !DILocation(line: 371, column: 11, scope: !7386)
!7511 = !DILocation(line: 372, column: 13, scope: !7386)
!7512 = !DILocation(line: 372, column: 19, scope: !7386)
!7513 = !DILocation(line: 372, column: 26, scope: !7386)
!7514 = !DILocation(line: 372, column: 11, scope: !7386)
!7515 = !DILocation(line: 374, column: 6, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 374, column: 6)
!7517 = !DILocation(line: 374, column: 12, scope: !7516)
!7518 = !DILocation(line: 374, column: 6, scope: !7386)
!7519 = !DILocation(line: 375, column: 9, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 374, column: 20)
!7521 = !DILocation(line: 375, column: 15, scope: !7520)
!7522 = !DILocation(line: 375, column: 20, scope: !7520)
!7523 = !DILocation(line: 375, column: 27, scope: !7520)
!7524 = !DILocation(line: 375, column: 7, scope: !7520)
!7525 = !DILocation(line: 376, column: 2, scope: !7520)
!7526 = !DILocation(line: 377, column: 9, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 376, column: 9)
!7528 = !DILocation(line: 377, column: 15, scope: !7527)
!7529 = !DILocation(line: 377, column: 20, scope: !7527)
!7530 = !DILocation(line: 377, column: 23, scope: !7527)
!7531 = !DILocation(line: 377, column: 7, scope: !7527)
!7532 = !DILocation(line: 378, column: 8, scope: !7527)
!7533 = !DILocation(line: 378, column: 14, scope: !7527)
!7534 = !DILocation(line: 378, column: 19, scope: !7527)
!7535 = !DILocation(line: 378, column: 22, scope: !7527)
!7536 = !DILocation(line: 378, column: 6, scope: !7527)
!7537 = !DILocation(line: 381, column: 9, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 381, column: 2)
!7539 = !DILocation(line: 381, column: 7, scope: !7538)
!7540 = !DILocation(line: 381, column: 14, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 381, column: 2)
!7542 = !DILocation(line: 381, column: 18, scope: !7541)
!7543 = !DILocation(line: 381, column: 16, scope: !7541)
!7544 = !DILocation(line: 381, column: 2, scope: !7538)
!7545 = !DILocation(line: 382, column: 8, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 382, column: 7)
!7547 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 381, column: 28)
!7548 = !DILocation(line: 382, column: 14, scope: !7546)
!7549 = !DILocation(line: 382, column: 21, scope: !7546)
!7550 = !DILocation(line: 382, column: 25, scope: !7546)
!7551 = !DILocation(line: 382, column: 7, scope: !7547)
!7552 = !DILocation(line: 383, column: 4, scope: !7546)
!7553 = !DILocation(line: 385, column: 7, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 385, column: 7)
!7555 = !DILocation(line: 385, column: 14, scope: !7554)
!7556 = !DILocation(line: 385, column: 30, scope: !7554)
!7557 = !DILocation(line: 385, column: 36, scope: !7554)
!7558 = !DILocation(line: 385, column: 27, scope: !7554)
!7559 = !DILocation(line: 385, column: 7, scope: !7547)
!7560 = !DILocation(line: 386, column: 32, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 385, column: 44)
!7562 = !DILocation(line: 386, column: 12, scope: !7561)
!7563 = !DILocation(line: 386, column: 10, scope: !7561)
!7564 = !DILocation(line: 387, column: 8, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7561, file: !3, line: 387, column: 8)
!7566 = !DILocation(line: 387, column: 8, scope: !7561)
!7567 = !DILocation(line: 388, column: 5, scope: !7565)
!7568 = !DILocation(line: 389, column: 3, scope: !7561)
!7569 = !DILocation(line: 391, column: 31, scope: !7547)
!7570 = !DILocation(line: 391, column: 11, scope: !7547)
!7571 = !DILocation(line: 391, column: 9, scope: !7547)
!7572 = !DILocation(line: 392, column: 7, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 392, column: 7)
!7574 = !DILocation(line: 392, column: 7, scope: !7547)
!7575 = !DILocation(line: 393, column: 4, scope: !7573)
!7576 = !DILocation(line: 395, column: 7, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 395, column: 7)
!7578 = !DILocation(line: 395, column: 13, scope: !7577)
!7579 = !DILocation(line: 395, column: 7, scope: !7547)
!7580 = !DILocation(line: 396, column: 16, scope: !7577)
!7581 = !DILocation(line: 396, column: 22, scope: !7577)
!7582 = !DILocation(line: 396, column: 27, scope: !7577)
!7583 = !DILocation(line: 396, column: 34, scope: !7577)
!7584 = !DILocation(line: 396, column: 4, scope: !7577)
!7585 = !DILocation(line: 396, column: 11, scope: !7577)
!7586 = !DILocation(line: 396, column: 14, scope: !7577)
!7587 = !DILocation(line: 398, column: 16, scope: !7577)
!7588 = !DILocation(line: 398, column: 4, scope: !7577)
!7589 = !DILocation(line: 398, column: 11, scope: !7577)
!7590 = !DILocation(line: 398, column: 14, scope: !7577)
!7591 = !DILocation(line: 400, column: 26, scope: !7547)
!7592 = !DILocation(line: 400, column: 33, scope: !7547)
!7593 = !DILocation(line: 400, column: 3, scope: !7547)
!7594 = !DILocation(line: 400, column: 10, scope: !7547)
!7595 = !DILocation(line: 400, column: 20, scope: !7547)
!7596 = !DILocation(line: 400, column: 23, scope: !7547)
!7597 = !DILocation(line: 401, column: 21, scope: !7547)
!7598 = !DILocation(line: 401, column: 28, scope: !7547)
!7599 = !DILocation(line: 401, column: 3, scope: !7547)
!7600 = !DILocation(line: 401, column: 9, scope: !7547)
!7601 = !DILocation(line: 401, column: 18, scope: !7547)
!7602 = !DILocation(line: 403, column: 7, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 403, column: 7)
!7604 = !DILocation(line: 403, column: 13, scope: !7603)
!7605 = !DILocation(line: 403, column: 17, scope: !7603)
!7606 = !DILocation(line: 403, column: 7, scope: !7547)
!7607 = !DILocation(line: 404, column: 17, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 403, column: 36)
!7609 = !DILocation(line: 404, column: 4, scope: !7608)
!7610 = !DILocation(line: 404, column: 11, scope: !7608)
!7611 = !DILocation(line: 404, column: 15, scope: !7608)
!7612 = !DILocation(line: 405, column: 8, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 405, column: 8)
!7614 = !DILocation(line: 405, column: 14, scope: !7613)
!7615 = !DILocation(line: 405, column: 8, scope: !7608)
!7616 = !DILocation(line: 406, column: 18, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 405, column: 22)
!7618 = !DILocation(line: 406, column: 24, scope: !7617)
!7619 = !DILocation(line: 406, column: 29, scope: !7617)
!7620 = !DILocation(line: 406, column: 36, scope: !7617)
!7621 = !DILocation(line: 406, column: 5, scope: !7617)
!7622 = !DILocation(line: 406, column: 12, scope: !7617)
!7623 = !DILocation(line: 406, column: 16, scope: !7617)
!7624 = !DILocation(line: 407, column: 4, scope: !7617)
!7625 = !DILocation(line: 408, column: 18, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 407, column: 11)
!7627 = !DILocation(line: 408, column: 5, scope: !7626)
!7628 = !DILocation(line: 408, column: 12, scope: !7626)
!7629 = !DILocation(line: 408, column: 16, scope: !7626)
!7630 = !DILocation(line: 417, column: 3, scope: !7608)
!7631 = !DILocation(line: 418, column: 17, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 417, column: 10)
!7633 = !DILocation(line: 418, column: 4, scope: !7632)
!7634 = !DILocation(line: 418, column: 11, scope: !7632)
!7635 = !DILocation(line: 418, column: 15, scope: !7632)
!7636 = !DILocation(line: 419, column: 8, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 419, column: 8)
!7638 = !DILocation(line: 419, column: 14, scope: !7637)
!7639 = !DILocation(line: 419, column: 8, scope: !7632)
!7640 = !DILocation(line: 420, column: 18, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 419, column: 22)
!7642 = !DILocation(line: 420, column: 24, scope: !7641)
!7643 = !DILocation(line: 420, column: 29, scope: !7641)
!7644 = !DILocation(line: 420, column: 36, scope: !7641)
!7645 = !DILocation(line: 420, column: 5, scope: !7641)
!7646 = !DILocation(line: 420, column: 12, scope: !7641)
!7647 = !DILocation(line: 420, column: 16, scope: !7641)
!7648 = !DILocation(line: 421, column: 4, scope: !7641)
!7649 = !DILocation(line: 422, column: 18, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 421, column: 11)
!7651 = !DILocation(line: 422, column: 5, scope: !7650)
!7652 = !DILocation(line: 422, column: 12, scope: !7650)
!7653 = !DILocation(line: 422, column: 16, scope: !7650)
!7654 = !DILocation(line: 433, column: 8, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 433, column: 7)
!7656 = !DILocation(line: 433, column: 14, scope: !7655)
!7657 = !DILocation(line: 433, column: 7, scope: !7547)
!7658 = !DILocation(line: 434, column: 16, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 433, column: 22)
!7660 = !DILocation(line: 434, column: 13, scope: !7659)
!7661 = !DILocation(line: 435, column: 16, scope: !7659)
!7662 = !DILocation(line: 435, column: 13, scope: !7659)
!7663 = !DILocation(line: 436, column: 17, scope: !7659)
!7664 = !DILocation(line: 436, column: 9, scope: !7659)
!7665 = !DILocation(line: 436, column: 7, scope: !7659)
!7666 = !DILocation(line: 437, column: 3, scope: !7659)
!7667 = !DILocation(line: 438, column: 2, scope: !7547)
!7668 = !DILocation(line: 381, column: 24, scope: !7541)
!7669 = !DILocation(line: 381, column: 2, scope: !7541)
!7670 = distinct !{!7670, !7544, !7671}
!7671 = !DILocation(line: 438, column: 2, scope: !7538)
!7672 = !DILocation(line: 440, column: 24, scope: !7386)
!7673 = !DILocation(line: 440, column: 30, scope: !7386)
!7674 = !DILocation(line: 440, column: 35, scope: !7386)
!7675 = !DILocation(line: 440, column: 41, scope: !7386)
!7676 = !DILocation(line: 440, column: 45, scope: !7386)
!7677 = !DILocation(line: 440, column: 51, scope: !7386)
!7678 = !DILocation(line: 440, column: 9, scope: !7386)
!7679 = !DILocation(line: 440, column: 2, scope: !7386)
!7680 = !DILabel(scope: !7386, name: "err_alloc", file: !3, line: 442)
!7681 = !DILocation(line: 442, column: 1, scope: !7386)
!7682 = !DILocation(line: 443, column: 6, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 443, column: 6)
!7684 = !DILocation(line: 443, column: 6, scope: !7386)
!7685 = !DILocation(line: 444, column: 21, scope: !7683)
!7686 = !DILocation(line: 444, column: 3, scope: !7683)
!7687 = !DILocation(line: 446, column: 2, scope: !7386)
!7688 = !DILocation(line: 447, column: 1, scope: !7386)
!7689 = distinct !DISubprogram(name: "dw_edma_alloc_desc", scope: !3, file: !3, line: 105, type: !7690, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7690 = !DISubroutineType(types: !7691)
!7691 = !{!4688, !253}
!7692 = !DILocalVariable(name: "chan", arg: 1, scope: !7689, file: !3, line: 105, type: !253)
!7693 = !DILocation(line: 105, column: 69, scope: !7689)
!7694 = !DILocalVariable(name: "desc", scope: !7689, file: !3, line: 107, type: !4688)
!7695 = !DILocation(line: 107, column: 23, scope: !7689)
!7696 = !DILocation(line: 109, column: 9, scope: !7689)
!7697 = !DILocation(line: 109, column: 7, scope: !7689)
!7698 = !DILocation(line: 110, column: 6, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 110, column: 6)
!7700 = !DILocation(line: 110, column: 6, scope: !7689)
!7701 = !DILocation(line: 111, column: 3, scope: !7699)
!7702 = !DILocation(line: 113, column: 15, scope: !7689)
!7703 = !DILocation(line: 113, column: 2, scope: !7689)
!7704 = !DILocation(line: 113, column: 8, scope: !7689)
!7705 = !DILocation(line: 113, column: 13, scope: !7689)
!7706 = !DILocation(line: 114, column: 27, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 114, column: 6)
!7708 = !DILocation(line: 114, column: 7, scope: !7707)
!7709 = !DILocation(line: 114, column: 6, scope: !7689)
!7710 = !DILocation(line: 115, column: 9, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7707, file: !3, line: 114, column: 34)
!7712 = !DILocation(line: 115, column: 3, scope: !7711)
!7713 = !DILocation(line: 116, column: 3, scope: !7711)
!7714 = !DILocation(line: 119, column: 9, scope: !7689)
!7715 = !DILocation(line: 119, column: 2, scope: !7689)
!7716 = !DILocation(line: 120, column: 1, scope: !7689)
!7717 = distinct !DISubprogram(name: "dw_edma_alloc_chunk", scope: !3, file: !3, line: 65, type: !7718, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7718 = !DISubroutineType(types: !7719)
!7719 = !{!4694, !4688}
!7720 = !DILocalVariable(name: "desc", arg: 1, scope: !7717, file: !3, line: 65, type: !4688)
!7721 = !DILocation(line: 65, column: 71, scope: !7717)
!7722 = !DILocalVariable(name: "chan", scope: !7717, file: !3, line: 67, type: !253)
!7723 = !DILocation(line: 67, column: 23, scope: !7717)
!7724 = !DILocation(line: 67, column: 30, scope: !7717)
!7725 = !DILocation(line: 67, column: 36, scope: !7717)
!7726 = !DILocalVariable(name: "dw", scope: !7717, file: !3, line: 68, type: !4634)
!7727 = !DILocation(line: 68, column: 18, scope: !7717)
!7728 = !DILocation(line: 68, column: 23, scope: !7717)
!7729 = !DILocation(line: 68, column: 29, scope: !7717)
!7730 = !DILocation(line: 68, column: 35, scope: !7717)
!7731 = !DILocalVariable(name: "chunk", scope: !7717, file: !3, line: 69, type: !4694)
!7732 = !DILocation(line: 69, column: 24, scope: !7717)
!7733 = !DILocation(line: 71, column: 10, scope: !7717)
!7734 = !DILocation(line: 71, column: 8, scope: !7717)
!7735 = !DILocation(line: 72, column: 6, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 72, column: 6)
!7737 = !DILocation(line: 72, column: 6, scope: !7717)
!7738 = !DILocation(line: 73, column: 3, scope: !7736)
!7739 = !DILocation(line: 75, column: 18, scope: !7717)
!7740 = !DILocation(line: 75, column: 25, scope: !7717)
!7741 = !DILocation(line: 75, column: 2, scope: !7717)
!7742 = !DILocation(line: 76, column: 16, scope: !7717)
!7743 = !DILocation(line: 76, column: 2, scope: !7717)
!7744 = !DILocation(line: 76, column: 9, scope: !7717)
!7745 = !DILocation(line: 76, column: 14, scope: !7717)
!7746 = !DILocation(line: 83, column: 16, scope: !7717)
!7747 = !DILocation(line: 83, column: 22, scope: !7717)
!7748 = !DILocation(line: 83, column: 35, scope: !7717)
!7749 = !DILocation(line: 83, column: 14, scope: !7717)
!7750 = !DILocation(line: 83, column: 2, scope: !7717)
!7751 = !DILocation(line: 83, column: 9, scope: !7717)
!7752 = !DILocation(line: 83, column: 12, scope: !7717)
!7753 = !DILocation(line: 84, column: 27, scope: !7717)
!7754 = !DILocation(line: 84, column: 31, scope: !7717)
!7755 = !DILocation(line: 84, column: 41, scope: !7717)
!7756 = !DILocation(line: 84, column: 49, scope: !7717)
!7757 = !DILocation(line: 84, column: 55, scope: !7717)
!7758 = !DILocation(line: 84, column: 47, scope: !7717)
!7759 = !DILocation(line: 84, column: 2, scope: !7717)
!7760 = !DILocation(line: 84, column: 9, scope: !7717)
!7761 = !DILocation(line: 84, column: 19, scope: !7717)
!7762 = !DILocation(line: 84, column: 25, scope: !7717)
!7763 = !DILocation(line: 85, column: 27, scope: !7717)
!7764 = !DILocation(line: 85, column: 31, scope: !7717)
!7765 = !DILocation(line: 85, column: 41, scope: !7717)
!7766 = !DILocation(line: 85, column: 49, scope: !7717)
!7767 = !DILocation(line: 85, column: 55, scope: !7717)
!7768 = !DILocation(line: 85, column: 47, scope: !7717)
!7769 = !DILocation(line: 85, column: 2, scope: !7717)
!7770 = !DILocation(line: 85, column: 9, scope: !7717)
!7771 = !DILocation(line: 85, column: 19, scope: !7717)
!7772 = !DILocation(line: 85, column: 25, scope: !7717)
!7773 = !DILocation(line: 87, column: 6, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 87, column: 6)
!7775 = !DILocation(line: 87, column: 12, scope: !7774)
!7776 = !DILocation(line: 87, column: 6, scope: !7717)
!7777 = !DILocation(line: 89, column: 3, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 87, column: 19)
!7779 = !DILocation(line: 89, column: 9, scope: !7778)
!7780 = !DILocation(line: 89, column: 21, scope: !7778)
!7781 = !DILocation(line: 90, column: 18, scope: !7778)
!7782 = !DILocation(line: 90, column: 25, scope: !7778)
!7783 = !DILocation(line: 90, column: 32, scope: !7778)
!7784 = !DILocation(line: 90, column: 38, scope: !7778)
!7785 = !DILocation(line: 90, column: 45, scope: !7778)
!7786 = !DILocation(line: 90, column: 3, scope: !7778)
!7787 = !DILocation(line: 91, column: 28, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 91, column: 7)
!7789 = !DILocation(line: 91, column: 8, scope: !7788)
!7790 = !DILocation(line: 91, column: 7, scope: !7778)
!7791 = !DILocation(line: 92, column: 10, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7788, file: !3, line: 91, column: 36)
!7793 = !DILocation(line: 92, column: 4, scope: !7792)
!7794 = !DILocation(line: 93, column: 4, scope: !7792)
!7795 = !DILocation(line: 95, column: 2, scope: !7778)
!7796 = !DILocation(line: 97, column: 3, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 95, column: 9)
!7798 = !DILocation(line: 97, column: 10, scope: !7797)
!7799 = !DILocation(line: 97, column: 16, scope: !7797)
!7800 = !DILocation(line: 98, column: 3, scope: !7797)
!7801 = !DILocation(line: 98, column: 9, scope: !7797)
!7802 = !DILocation(line: 98, column: 22, scope: !7797)
!7803 = !DILocation(line: 99, column: 17, scope: !7797)
!7804 = !DILocation(line: 99, column: 3, scope: !7797)
!7805 = !DILocation(line: 99, column: 9, scope: !7797)
!7806 = !DILocation(line: 99, column: 15, scope: !7797)
!7807 = !DILocation(line: 102, column: 9, scope: !7717)
!7808 = !DILocation(line: 102, column: 2, scope: !7717)
!7809 = !DILocation(line: 103, column: 1, scope: !7717)
!7810 = distinct !DISubprogram(name: "dw_edma_alloc_burst", scope: !3, file: !3, line: 43, type: !7811, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7811 = !DISubroutineType(types: !7812)
!7812 = !{!4700, !4694}
!7813 = !DILocalVariable(name: "chunk", arg: 1, scope: !7810, file: !3, line: 43, type: !4694)
!7814 = !DILocation(line: 43, column: 72, scope: !7810)
!7815 = !DILocalVariable(name: "burst", scope: !7810, file: !3, line: 45, type: !4700)
!7816 = !DILocation(line: 45, column: 24, scope: !7810)
!7817 = !DILocation(line: 47, column: 10, scope: !7810)
!7818 = !DILocation(line: 47, column: 8, scope: !7810)
!7819 = !DILocation(line: 48, column: 6, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 48, column: 6)
!7821 = !DILocation(line: 48, column: 6, scope: !7810)
!7822 = !DILocation(line: 49, column: 3, scope: !7820)
!7823 = !DILocation(line: 51, column: 18, scope: !7810)
!7824 = !DILocation(line: 51, column: 25, scope: !7810)
!7825 = !DILocation(line: 51, column: 2, scope: !7810)
!7826 = !DILocation(line: 52, column: 6, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 52, column: 6)
!7828 = !DILocation(line: 52, column: 13, scope: !7827)
!7829 = !DILocation(line: 52, column: 6, scope: !7810)
!7830 = !DILocation(line: 54, column: 3, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 52, column: 20)
!7832 = !DILocation(line: 54, column: 10, scope: !7831)
!7833 = !DILocation(line: 54, column: 22, scope: !7831)
!7834 = !DILocation(line: 55, column: 18, scope: !7831)
!7835 = !DILocation(line: 55, column: 25, scope: !7831)
!7836 = !DILocation(line: 55, column: 32, scope: !7831)
!7837 = !DILocation(line: 55, column: 39, scope: !7831)
!7838 = !DILocation(line: 55, column: 46, scope: !7831)
!7839 = !DILocation(line: 55, column: 3, scope: !7831)
!7840 = !DILocation(line: 56, column: 2, scope: !7831)
!7841 = !DILocation(line: 58, column: 3, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 56, column: 9)
!7843 = !DILocation(line: 58, column: 10, scope: !7842)
!7844 = !DILocation(line: 58, column: 23, scope: !7842)
!7845 = !DILocation(line: 59, column: 18, scope: !7842)
!7846 = !DILocation(line: 59, column: 3, scope: !7842)
!7847 = !DILocation(line: 59, column: 10, scope: !7842)
!7848 = !DILocation(line: 59, column: 16, scope: !7842)
!7849 = !DILocation(line: 62, column: 9, scope: !7810)
!7850 = !DILocation(line: 62, column: 2, scope: !7810)
!7851 = !DILocation(line: 63, column: 1, scope: !7810)
!7852 = distinct !DISubprogram(name: "vchan_tx_prep", scope: !258, file: !258, line: 56, type: !7853, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7853 = !DISubroutineType(types: !7854)
!7854 = !{!4364, !4713, !4612, !320}
!7855 = !DILocation(line: 407, column: 64, scope: !5784, inlinedAt: !7856)
!7856 = distinct !DILocation(line: 71, column: 2, scope: !7852)
!7857 = !DILocation(line: 407, column: 84, scope: !5784, inlinedAt: !7856)
!7858 = !DILocation(line: 327, column: 67, scope: !5793, inlinedAt: !7859)
!7859 = distinct !DILocation(line: 69, column: 2, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7861, file: !258, line: 69, column: 2)
!7861 = distinct !DILexicalBlock(scope: !7862, file: !258, line: 69, column: 2)
!7862 = distinct !DILexicalBlock(scope: !7863, file: !258, line: 69, column: 2)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !258, line: 69, column: 2)
!7864 = distinct !DILexicalBlock(scope: !7852, file: !258, line: 69, column: 2)
!7865 = !DILocalVariable(name: "vc", arg: 1, scope: !7852, file: !258, line: 56, type: !4713)
!7866 = !DILocation(line: 56, column: 83, scope: !7852)
!7867 = !DILocalVariable(name: "vd", arg: 2, scope: !7852, file: !258, line: 57, type: !4612)
!7868 = !DILocation(line: 57, column: 24, scope: !7852)
!7869 = !DILocalVariable(name: "tx_flags", arg: 3, scope: !7852, file: !258, line: 57, type: !320)
!7870 = !DILocation(line: 57, column: 42, scope: !7852)
!7871 = !DILocalVariable(name: "flags", scope: !7852, file: !258, line: 59, type: !320)
!7872 = !DILocation(line: 59, column: 16, scope: !7852)
!7873 = !DILocation(line: 61, column: 32, scope: !7852)
!7874 = !DILocation(line: 61, column: 36, scope: !7852)
!7875 = !DILocation(line: 61, column: 41, scope: !7852)
!7876 = !DILocation(line: 61, column: 45, scope: !7852)
!7877 = !DILocation(line: 61, column: 2, scope: !7852)
!7878 = !DILocation(line: 62, column: 17, scope: !7852)
!7879 = !DILocation(line: 62, column: 2, scope: !7852)
!7880 = !DILocation(line: 62, column: 6, scope: !7852)
!7881 = !DILocation(line: 62, column: 9, scope: !7852)
!7882 = !DILocation(line: 62, column: 15, scope: !7852)
!7883 = !DILocation(line: 63, column: 2, scope: !7852)
!7884 = !DILocation(line: 63, column: 6, scope: !7852)
!7885 = !DILocation(line: 63, column: 9, scope: !7852)
!7886 = !DILocation(line: 63, column: 19, scope: !7852)
!7887 = !DILocation(line: 64, column: 2, scope: !7852)
!7888 = !DILocation(line: 64, column: 6, scope: !7852)
!7889 = !DILocation(line: 64, column: 9, scope: !7852)
!7890 = !DILocation(line: 64, column: 19, scope: !7852)
!7891 = !DILocation(line: 66, column: 2, scope: !7852)
!7892 = !DILocation(line: 66, column: 6, scope: !7852)
!7893 = !DILocation(line: 66, column: 16, scope: !7852)
!7894 = !DILocation(line: 66, column: 23, scope: !7852)
!7895 = !DILocation(line: 67, column: 2, scope: !7852)
!7896 = !DILocation(line: 67, column: 6, scope: !7852)
!7897 = !DILocation(line: 67, column: 16, scope: !7852)
!7898 = !DILocation(line: 67, column: 24, scope: !7852)
!7899 = !DILocation(line: 69, column: 2, scope: !7852)
!7900 = !DILocation(line: 69, column: 2, scope: !7864)
!7901 = !DILocalVariable(name: "__dummy", scope: !7902, file: !258, line: 69, type: !320)
!7902 = distinct !DILexicalBlock(scope: !7863, file: !258, line: 69, column: 2)
!7903 = !DILocation(line: 69, column: 2, scope: !7902)
!7904 = !DILocalVariable(name: "__dummy2", scope: !7902, file: !258, line: 69, type: !320)
!7905 = !DILocation(line: 69, column: 2, scope: !7863)
!7906 = !DILocation(line: 69, column: 2, scope: !7862)
!7907 = !DILocation(line: 69, column: 2, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7862, file: !258, line: 69, column: 2)
!7909 = !DILocalVariable(name: "__dummy", scope: !7910, file: !258, line: 69, type: !320)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !258, line: 69, column: 2)
!7911 = distinct !DILexicalBlock(scope: !7908, file: !258, line: 69, column: 2)
!7912 = !DILocation(line: 69, column: 2, scope: !7910)
!7913 = !DILocalVariable(name: "__dummy2", scope: !7910, file: !258, line: 69, type: !320)
!7914 = !DILocation(line: 69, column: 2, scope: !7911)
!7915 = !DILocation(line: 69, column: 2, scope: !7861)
!7916 = !{i32 -2141693456}
!7917 = !DILocation(line: 69, column: 2, scope: !7860)
!7918 = !DILocation(line: 329, column: 10, scope: !5793, inlinedAt: !7859)
!7919 = !DILocation(line: 329, column: 16, scope: !5793, inlinedAt: !7859)
!7920 = !DILocation(line: 70, column: 17, scope: !7852)
!7921 = !DILocation(line: 70, column: 21, scope: !7852)
!7922 = !DILocation(line: 70, column: 28, scope: !7852)
!7923 = !DILocation(line: 70, column: 32, scope: !7852)
!7924 = !DILocation(line: 70, column: 2, scope: !7852)
!7925 = !DILocation(line: 71, column: 26, scope: !7852)
!7926 = !DILocation(line: 71, column: 30, scope: !7852)
!7927 = !DILocation(line: 71, column: 36, scope: !7852)
!7928 = !DILocation(line: 409, column: 2, scope: !5897, inlinedAt: !7856)
!7929 = !DILocation(line: 409, column: 2, scope: !5902, inlinedAt: !7856)
!7930 = !DILocation(line: 409, column: 2, scope: !5903, inlinedAt: !7856)
!7931 = !DILocation(line: 409, column: 2, scope: !5910, inlinedAt: !7856)
!7932 = !DILocation(line: 409, column: 2, scope: !5913, inlinedAt: !7856)
!7933 = !DILocation(line: 73, column: 10, scope: !7852)
!7934 = !DILocation(line: 73, column: 14, scope: !7852)
!7935 = !DILocation(line: 73, column: 2, scope: !7852)
!7936 = distinct !DISubprogram(name: "kzalloc", scope: !243, file: !243, line: 662, type: !7937, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7937 = !DISubroutineType(types: !7938)
!7938 = !{!252, !437, !250}
!7939 = !DILocalVariable(name: "s", arg: 1, scope: !7940, file: !243, line: 445, type: !1087)
!7940 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !243, file: !243, line: 445, type: !7941, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7941 = !DISubroutineType(types: !7942)
!7942 = !{!252, !1087, !250, !437}
!7943 = !DILocation(line: 445, column: 72, scope: !7940, inlinedAt: !7944)
!7944 = distinct !DILocation(line: 552, column: 10, scope: !7945, inlinedAt: !7948)
!7945 = distinct !DILexicalBlock(scope: !7946, file: !243, line: 540, column: 34)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !243, line: 540, column: 6)
!7947 = distinct !DISubprogram(name: "kmalloc", scope: !243, file: !243, line: 538, type: !7937, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7948 = distinct !DILocation(line: 664, column: 9, scope: !7936)
!7949 = !DILocalVariable(name: "flags", arg: 2, scope: !7940, file: !243, line: 446, type: !250)
!7950 = !DILocation(line: 446, column: 9, scope: !7940, inlinedAt: !7944)
!7951 = !DILocalVariable(name: "size", arg: 3, scope: !7940, file: !243, line: 446, type: !437)
!7952 = !DILocation(line: 446, column: 23, scope: !7940, inlinedAt: !7944)
!7953 = !DILocalVariable(name: "ret", scope: !7940, file: !243, line: 448, type: !252)
!7954 = !DILocation(line: 448, column: 8, scope: !7940, inlinedAt: !7944)
!7955 = !DILocalVariable(name: "flags", arg: 1, scope: !7956, file: !243, line: 318, type: !250)
!7956 = distinct !DISubprogram(name: "kmalloc_type", scope: !243, file: !243, line: 318, type: !7957, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7957 = !DISubroutineType(types: !7958)
!7958 = !{!242, !250}
!7959 = !DILocation(line: 318, column: 67, scope: !7956, inlinedAt: !7960)
!7960 = distinct !DILocation(line: 553, column: 20, scope: !7945, inlinedAt: !7948)
!7961 = !DILocalVariable(name: "size", arg: 1, scope: !7962, file: !243, line: 346, type: !437)
!7962 = distinct !DISubprogram(name: "kmalloc_index", scope: !243, file: !243, line: 346, type: !7963, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7963 = !DISubroutineType(types: !7964)
!7964 = !{!7, !437}
!7965 = !DILocation(line: 346, column: 58, scope: !7962, inlinedAt: !7966)
!7966 = distinct !DILocation(line: 547, column: 11, scope: !7945, inlinedAt: !7948)
!7967 = !DILocalVariable(name: "size", arg: 1, scope: !7968, file: !243, line: 472, type: !437)
!7968 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !243, file: !243, line: 472, type: !7969, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7969 = !DISubroutineType(types: !7970)
!7970 = !{!252, !437, !250, !7}
!7971 = !DILocation(line: 472, column: 28, scope: !7968, inlinedAt: !7972)
!7972 = distinct !DILocation(line: 481, column: 9, scope: !7973, inlinedAt: !7974)
!7973 = distinct !DISubprogram(name: "kmalloc_large", scope: !243, file: !243, line: 478, type: !7937, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!7974 = distinct !DILocation(line: 545, column: 11, scope: !7975, inlinedAt: !7948)
!7975 = distinct !DILexicalBlock(scope: !7945, file: !243, line: 544, column: 7)
!7976 = !DILocalVariable(name: "flags", arg: 2, scope: !7968, file: !243, line: 472, type: !250)
!7977 = !DILocation(line: 472, column: 40, scope: !7968, inlinedAt: !7972)
!7978 = !DILocalVariable(name: "order", arg: 3, scope: !7968, file: !243, line: 472, type: !7)
!7979 = !DILocation(line: 472, column: 60, scope: !7968, inlinedAt: !7972)
!7980 = !DILocalVariable(name: "size", arg: 1, scope: !7973, file: !243, line: 478, type: !437)
!7981 = !DILocation(line: 478, column: 51, scope: !7973, inlinedAt: !7974)
!7982 = !DILocalVariable(name: "flags", arg: 2, scope: !7973, file: !243, line: 478, type: !250)
!7983 = !DILocation(line: 478, column: 63, scope: !7973, inlinedAt: !7974)
!7984 = !DILocalVariable(name: "order", scope: !7973, file: !243, line: 480, type: !7)
!7985 = !DILocation(line: 480, column: 15, scope: !7973, inlinedAt: !7974)
!7986 = !DILocalVariable(name: "size", arg: 1, scope: !7947, file: !243, line: 538, type: !437)
!7987 = !DILocation(line: 538, column: 45, scope: !7947, inlinedAt: !7948)
!7988 = !DILocalVariable(name: "flags", arg: 2, scope: !7947, file: !243, line: 538, type: !250)
!7989 = !DILocation(line: 538, column: 57, scope: !7947, inlinedAt: !7948)
!7990 = !DILocalVariable(name: "index", scope: !7945, file: !243, line: 542, type: !7)
!7991 = !DILocation(line: 542, column: 16, scope: !7945, inlinedAt: !7948)
!7992 = !DILocalVariable(name: "size", arg: 1, scope: !7936, file: !243, line: 662, type: !437)
!7993 = !DILocation(line: 662, column: 36, scope: !7936)
!7994 = !DILocalVariable(name: "flags", arg: 2, scope: !7936, file: !243, line: 662, type: !250)
!7995 = !DILocation(line: 662, column: 48, scope: !7936)
!7996 = !DILocation(line: 664, column: 17, scope: !7936)
!7997 = !DILocation(line: 664, column: 23, scope: !7936)
!7998 = !DILocation(line: 664, column: 29, scope: !7936)
!7999 = !DILocation(line: 540, column: 27, scope: !7946, inlinedAt: !7948)
!8000 = !DILocation(line: 540, column: 6, scope: !7946, inlinedAt: !7948)
!8001 = !DILocation(line: 540, column: 6, scope: !7947, inlinedAt: !7948)
!8002 = !DILocation(line: 544, column: 7, scope: !7975, inlinedAt: !7948)
!8003 = !DILocation(line: 544, column: 12, scope: !7975, inlinedAt: !7948)
!8004 = !DILocation(line: 544, column: 7, scope: !7945, inlinedAt: !7948)
!8005 = !DILocation(line: 545, column: 25, scope: !7975, inlinedAt: !7948)
!8006 = !DILocation(line: 545, column: 31, scope: !7975, inlinedAt: !7948)
!8007 = !DILocation(line: 480, column: 33, scope: !7973, inlinedAt: !7974)
!8008 = !DILocation(line: 480, column: 23, scope: !7973, inlinedAt: !7974)
!8009 = !DILocation(line: 481, column: 29, scope: !7973, inlinedAt: !7974)
!8010 = !DILocation(line: 481, column: 35, scope: !7973, inlinedAt: !7974)
!8011 = !DILocation(line: 481, column: 42, scope: !7973, inlinedAt: !7974)
!8012 = !DILocation(line: 474, column: 23, scope: !7968, inlinedAt: !7972)
!8013 = !DILocation(line: 474, column: 29, scope: !7968, inlinedAt: !7972)
!8014 = !DILocation(line: 474, column: 36, scope: !7968, inlinedAt: !7972)
!8015 = !DILocation(line: 474, column: 9, scope: !7968, inlinedAt: !7972)
!8016 = !DILocation(line: 545, column: 4, scope: !7975, inlinedAt: !7948)
!8017 = !DILocation(line: 547, column: 25, scope: !7945, inlinedAt: !7948)
!8018 = !DILocation(line: 348, column: 7, scope: !8019, inlinedAt: !7966)
!8019 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 348, column: 6)
!8020 = !DILocation(line: 348, column: 6, scope: !7962, inlinedAt: !7966)
!8021 = !DILocation(line: 349, column: 3, scope: !8019, inlinedAt: !7966)
!8022 = !DILocation(line: 351, column: 6, scope: !8023, inlinedAt: !7966)
!8023 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 351, column: 6)
!8024 = !DILocation(line: 351, column: 11, scope: !8023, inlinedAt: !7966)
!8025 = !DILocation(line: 351, column: 6, scope: !7962, inlinedAt: !7966)
!8026 = !DILocation(line: 352, column: 3, scope: !8023, inlinedAt: !7966)
!8027 = !DILocation(line: 354, column: 32, scope: !8028, inlinedAt: !7966)
!8028 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 354, column: 6)
!8029 = !DILocation(line: 354, column: 37, scope: !8028, inlinedAt: !7966)
!8030 = !DILocation(line: 354, column: 42, scope: !8028, inlinedAt: !7966)
!8031 = !DILocation(line: 354, column: 45, scope: !8028, inlinedAt: !7966)
!8032 = !DILocation(line: 354, column: 50, scope: !8028, inlinedAt: !7966)
!8033 = !DILocation(line: 354, column: 6, scope: !7962, inlinedAt: !7966)
!8034 = !DILocation(line: 355, column: 3, scope: !8028, inlinedAt: !7966)
!8035 = !DILocation(line: 356, column: 32, scope: !8036, inlinedAt: !7966)
!8036 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 356, column: 6)
!8037 = !DILocation(line: 356, column: 37, scope: !8036, inlinedAt: !7966)
!8038 = !DILocation(line: 356, column: 43, scope: !8036, inlinedAt: !7966)
!8039 = !DILocation(line: 356, column: 46, scope: !8036, inlinedAt: !7966)
!8040 = !DILocation(line: 356, column: 51, scope: !8036, inlinedAt: !7966)
!8041 = !DILocation(line: 356, column: 6, scope: !7962, inlinedAt: !7966)
!8042 = !DILocation(line: 357, column: 3, scope: !8036, inlinedAt: !7966)
!8043 = !DILocation(line: 358, column: 6, scope: !8044, inlinedAt: !7966)
!8044 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 358, column: 6)
!8045 = !DILocation(line: 358, column: 11, scope: !8044, inlinedAt: !7966)
!8046 = !DILocation(line: 358, column: 6, scope: !7962, inlinedAt: !7966)
!8047 = !DILocation(line: 358, column: 26, scope: !8044, inlinedAt: !7966)
!8048 = !DILocation(line: 359, column: 6, scope: !8049, inlinedAt: !7966)
!8049 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 359, column: 6)
!8050 = !DILocation(line: 359, column: 11, scope: !8049, inlinedAt: !7966)
!8051 = !DILocation(line: 359, column: 6, scope: !7962, inlinedAt: !7966)
!8052 = !DILocation(line: 359, column: 26, scope: !8049, inlinedAt: !7966)
!8053 = !DILocation(line: 360, column: 6, scope: !8054, inlinedAt: !7966)
!8054 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 360, column: 6)
!8055 = !DILocation(line: 360, column: 11, scope: !8054, inlinedAt: !7966)
!8056 = !DILocation(line: 360, column: 6, scope: !7962, inlinedAt: !7966)
!8057 = !DILocation(line: 360, column: 26, scope: !8054, inlinedAt: !7966)
!8058 = !DILocation(line: 361, column: 6, scope: !8059, inlinedAt: !7966)
!8059 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 361, column: 6)
!8060 = !DILocation(line: 361, column: 11, scope: !8059, inlinedAt: !7966)
!8061 = !DILocation(line: 361, column: 6, scope: !7962, inlinedAt: !7966)
!8062 = !DILocation(line: 361, column: 26, scope: !8059, inlinedAt: !7966)
!8063 = !DILocation(line: 362, column: 6, scope: !8064, inlinedAt: !7966)
!8064 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 362, column: 6)
!8065 = !DILocation(line: 362, column: 11, scope: !8064, inlinedAt: !7966)
!8066 = !DILocation(line: 362, column: 6, scope: !7962, inlinedAt: !7966)
!8067 = !DILocation(line: 362, column: 26, scope: !8064, inlinedAt: !7966)
!8068 = !DILocation(line: 363, column: 6, scope: !8069, inlinedAt: !7966)
!8069 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 363, column: 6)
!8070 = !DILocation(line: 363, column: 11, scope: !8069, inlinedAt: !7966)
!8071 = !DILocation(line: 363, column: 6, scope: !7962, inlinedAt: !7966)
!8072 = !DILocation(line: 363, column: 26, scope: !8069, inlinedAt: !7966)
!8073 = !DILocation(line: 364, column: 6, scope: !8074, inlinedAt: !7966)
!8074 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 364, column: 6)
!8075 = !DILocation(line: 364, column: 11, scope: !8074, inlinedAt: !7966)
!8076 = !DILocation(line: 364, column: 6, scope: !7962, inlinedAt: !7966)
!8077 = !DILocation(line: 364, column: 26, scope: !8074, inlinedAt: !7966)
!8078 = !DILocation(line: 365, column: 6, scope: !8079, inlinedAt: !7966)
!8079 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 365, column: 6)
!8080 = !DILocation(line: 365, column: 11, scope: !8079, inlinedAt: !7966)
!8081 = !DILocation(line: 365, column: 6, scope: !7962, inlinedAt: !7966)
!8082 = !DILocation(line: 365, column: 26, scope: !8079, inlinedAt: !7966)
!8083 = !DILocation(line: 366, column: 6, scope: !8084, inlinedAt: !7966)
!8084 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 366, column: 6)
!8085 = !DILocation(line: 366, column: 11, scope: !8084, inlinedAt: !7966)
!8086 = !DILocation(line: 366, column: 6, scope: !7962, inlinedAt: !7966)
!8087 = !DILocation(line: 366, column: 26, scope: !8084, inlinedAt: !7966)
!8088 = !DILocation(line: 367, column: 6, scope: !8089, inlinedAt: !7966)
!8089 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 367, column: 6)
!8090 = !DILocation(line: 367, column: 11, scope: !8089, inlinedAt: !7966)
!8091 = !DILocation(line: 367, column: 6, scope: !7962, inlinedAt: !7966)
!8092 = !DILocation(line: 367, column: 26, scope: !8089, inlinedAt: !7966)
!8093 = !DILocation(line: 368, column: 6, scope: !8094, inlinedAt: !7966)
!8094 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 368, column: 6)
!8095 = !DILocation(line: 368, column: 11, scope: !8094, inlinedAt: !7966)
!8096 = !DILocation(line: 368, column: 6, scope: !7962, inlinedAt: !7966)
!8097 = !DILocation(line: 368, column: 26, scope: !8094, inlinedAt: !7966)
!8098 = !DILocation(line: 369, column: 6, scope: !8099, inlinedAt: !7966)
!8099 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 369, column: 6)
!8100 = !DILocation(line: 369, column: 11, scope: !8099, inlinedAt: !7966)
!8101 = !DILocation(line: 369, column: 6, scope: !7962, inlinedAt: !7966)
!8102 = !DILocation(line: 369, column: 26, scope: !8099, inlinedAt: !7966)
!8103 = !DILocation(line: 370, column: 6, scope: !8104, inlinedAt: !7966)
!8104 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 370, column: 6)
!8105 = !DILocation(line: 370, column: 11, scope: !8104, inlinedAt: !7966)
!8106 = !DILocation(line: 370, column: 6, scope: !7962, inlinedAt: !7966)
!8107 = !DILocation(line: 370, column: 26, scope: !8104, inlinedAt: !7966)
!8108 = !DILocation(line: 371, column: 6, scope: !8109, inlinedAt: !7966)
!8109 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 371, column: 6)
!8110 = !DILocation(line: 371, column: 11, scope: !8109, inlinedAt: !7966)
!8111 = !DILocation(line: 371, column: 6, scope: !7962, inlinedAt: !7966)
!8112 = !DILocation(line: 371, column: 26, scope: !8109, inlinedAt: !7966)
!8113 = !DILocation(line: 372, column: 6, scope: !8114, inlinedAt: !7966)
!8114 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 372, column: 6)
!8115 = !DILocation(line: 372, column: 11, scope: !8114, inlinedAt: !7966)
!8116 = !DILocation(line: 372, column: 6, scope: !7962, inlinedAt: !7966)
!8117 = !DILocation(line: 372, column: 26, scope: !8114, inlinedAt: !7966)
!8118 = !DILocation(line: 373, column: 6, scope: !8119, inlinedAt: !7966)
!8119 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 373, column: 6)
!8120 = !DILocation(line: 373, column: 11, scope: !8119, inlinedAt: !7966)
!8121 = !DILocation(line: 373, column: 6, scope: !7962, inlinedAt: !7966)
!8122 = !DILocation(line: 373, column: 26, scope: !8119, inlinedAt: !7966)
!8123 = !DILocation(line: 374, column: 6, scope: !8124, inlinedAt: !7966)
!8124 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 374, column: 6)
!8125 = !DILocation(line: 374, column: 11, scope: !8124, inlinedAt: !7966)
!8126 = !DILocation(line: 374, column: 6, scope: !7962, inlinedAt: !7966)
!8127 = !DILocation(line: 374, column: 26, scope: !8124, inlinedAt: !7966)
!8128 = !DILocation(line: 375, column: 6, scope: !8129, inlinedAt: !7966)
!8129 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 375, column: 6)
!8130 = !DILocation(line: 375, column: 11, scope: !8129, inlinedAt: !7966)
!8131 = !DILocation(line: 375, column: 6, scope: !7962, inlinedAt: !7966)
!8132 = !DILocation(line: 375, column: 27, scope: !8129, inlinedAt: !7966)
!8133 = !DILocation(line: 376, column: 6, scope: !8134, inlinedAt: !7966)
!8134 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 376, column: 6)
!8135 = !DILocation(line: 376, column: 11, scope: !8134, inlinedAt: !7966)
!8136 = !DILocation(line: 376, column: 6, scope: !7962, inlinedAt: !7966)
!8137 = !DILocation(line: 376, column: 32, scope: !8134, inlinedAt: !7966)
!8138 = !DILocation(line: 377, column: 6, scope: !8139, inlinedAt: !7966)
!8139 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 377, column: 6)
!8140 = !DILocation(line: 377, column: 11, scope: !8139, inlinedAt: !7966)
!8141 = !DILocation(line: 377, column: 6, scope: !7962, inlinedAt: !7966)
!8142 = !DILocation(line: 377, column: 32, scope: !8139, inlinedAt: !7966)
!8143 = !DILocation(line: 378, column: 6, scope: !8144, inlinedAt: !7966)
!8144 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 378, column: 6)
!8145 = !DILocation(line: 378, column: 11, scope: !8144, inlinedAt: !7966)
!8146 = !DILocation(line: 378, column: 6, scope: !7962, inlinedAt: !7966)
!8147 = !DILocation(line: 378, column: 32, scope: !8144, inlinedAt: !7966)
!8148 = !DILocation(line: 379, column: 6, scope: !8149, inlinedAt: !7966)
!8149 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 379, column: 6)
!8150 = !DILocation(line: 379, column: 11, scope: !8149, inlinedAt: !7966)
!8151 = !DILocation(line: 379, column: 6, scope: !7962, inlinedAt: !7966)
!8152 = !DILocation(line: 379, column: 33, scope: !8149, inlinedAt: !7966)
!8153 = !DILocation(line: 380, column: 6, scope: !8154, inlinedAt: !7966)
!8154 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 380, column: 6)
!8155 = !DILocation(line: 380, column: 11, scope: !8154, inlinedAt: !7966)
!8156 = !DILocation(line: 380, column: 6, scope: !7962, inlinedAt: !7966)
!8157 = !DILocation(line: 380, column: 33, scope: !8154, inlinedAt: !7966)
!8158 = !DILocation(line: 381, column: 6, scope: !8159, inlinedAt: !7966)
!8159 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 381, column: 6)
!8160 = !DILocation(line: 381, column: 11, scope: !8159, inlinedAt: !7966)
!8161 = !DILocation(line: 381, column: 6, scope: !7962, inlinedAt: !7966)
!8162 = !DILocation(line: 381, column: 33, scope: !8159, inlinedAt: !7966)
!8163 = !DILocation(line: 382, column: 2, scope: !8164, inlinedAt: !7966)
!8164 = distinct !DILexicalBlock(scope: !8165, file: !243, line: 382, column: 2)
!8165 = distinct !DILexicalBlock(scope: !7962, file: !243, line: 382, column: 2)
!8166 = !{i32 -2141947043, i32 -2141947014, i32 -2141946968, i32 -2141946910, i32 -2141946856, i32 -2141946802, i32 -2141946747, i32 -2141946716}
!8167 = !DILocation(line: 382, column: 2, scope: !8168, inlinedAt: !7966)
!8168 = distinct !DILexicalBlock(scope: !8169, file: !243, line: 382, column: 2)
!8169 = distinct !DILexicalBlock(scope: !8165, file: !243, line: 382, column: 2)
!8170 = !{i32 -2141946273, i32 -2141946266, i32 -2141946212, i32 -2141946181, i32 -2141946151}
!8171 = !DILocation(line: 382, column: 2, scope: !8169, inlinedAt: !7966)
!8172 = !DILocation(line: 386, column: 1, scope: !7962, inlinedAt: !7966)
!8173 = !DILocation(line: 547, column: 9, scope: !7945, inlinedAt: !7948)
!8174 = !DILocation(line: 549, column: 8, scope: !8175, inlinedAt: !7948)
!8175 = distinct !DILexicalBlock(scope: !7945, file: !243, line: 549, column: 7)
!8176 = !DILocation(line: 549, column: 7, scope: !7945, inlinedAt: !7948)
!8177 = !DILocation(line: 550, column: 4, scope: !8175, inlinedAt: !7948)
!8178 = !DILocation(line: 553, column: 33, scope: !7945, inlinedAt: !7948)
!8179 = !DILocation(line: 325, column: 6, scope: !8180, inlinedAt: !7960)
!8180 = distinct !DILexicalBlock(scope: !7956, file: !243, line: 325, column: 6)
!8181 = !DILocation(line: 325, column: 6, scope: !7956, inlinedAt: !7960)
!8182 = !DILocation(line: 326, column: 3, scope: !8180, inlinedAt: !7960)
!8183 = !DILocation(line: 332, column: 9, scope: !7956, inlinedAt: !7960)
!8184 = !DILocation(line: 332, column: 15, scope: !7956, inlinedAt: !7960)
!8185 = !DILocation(line: 332, column: 2, scope: !7956, inlinedAt: !7960)
!8186 = !DILocation(line: 336, column: 1, scope: !7956, inlinedAt: !7960)
!8187 = !DILocation(line: 553, column: 5, scope: !7945, inlinedAt: !7948)
!8188 = !DILocation(line: 553, column: 41, scope: !7945, inlinedAt: !7948)
!8189 = !DILocation(line: 554, column: 5, scope: !7945, inlinedAt: !7948)
!8190 = !DILocation(line: 554, column: 12, scope: !7945, inlinedAt: !7948)
!8191 = !DILocation(line: 448, column: 31, scope: !7940, inlinedAt: !7944)
!8192 = !DILocation(line: 448, column: 34, scope: !7940, inlinedAt: !7944)
!8193 = !DILocation(line: 448, column: 14, scope: !7940, inlinedAt: !7944)
!8194 = !DILocation(line: 450, column: 22, scope: !7940, inlinedAt: !7944)
!8195 = !DILocation(line: 450, column: 25, scope: !7940, inlinedAt: !7944)
!8196 = !DILocation(line: 450, column: 30, scope: !7940, inlinedAt: !7944)
!8197 = !DILocation(line: 450, column: 36, scope: !7940, inlinedAt: !7944)
!8198 = !DILocation(line: 450, column: 8, scope: !7940, inlinedAt: !7944)
!8199 = !DILocation(line: 450, column: 6, scope: !7940, inlinedAt: !7944)
!8200 = !DILocation(line: 451, column: 9, scope: !7940, inlinedAt: !7944)
!8201 = !DILocation(line: 552, column: 3, scope: !7945, inlinedAt: !7948)
!8202 = !DILocation(line: 557, column: 19, scope: !7947, inlinedAt: !7948)
!8203 = !DILocation(line: 557, column: 25, scope: !7947, inlinedAt: !7948)
!8204 = !DILocation(line: 557, column: 9, scope: !7947, inlinedAt: !7948)
!8205 = !DILocation(line: 557, column: 2, scope: !7947, inlinedAt: !7948)
!8206 = !DILocation(line: 558, column: 1, scope: !7947, inlinedAt: !7948)
!8207 = !DILocation(line: 664, column: 2, scope: !7936)
!8208 = distinct !DISubprogram(name: "get_order", scope: !8209, file: !8209, line: 29, type: !8210, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!8209 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8210 = !DISubroutineType(types: !8211)
!8211 = !{!281, !320}
!8212 = !DILocation(line: 366, column: 40, scope: !7030, inlinedAt: !8213)
!8213 = distinct !DILocation(line: 46, column: 9, scope: !8208)
!8214 = !DILocation(line: 368, column: 6, scope: !7030, inlinedAt: !8213)
!8215 = !DILocalVariable(name: "size", arg: 1, scope: !8208, file: !8209, line: 29, type: !320)
!8216 = !DILocation(line: 29, column: 63, scope: !8208)
!8217 = !DILocation(line: 31, column: 27, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8208, file: !8209, line: 31, column: 6)
!8219 = !DILocation(line: 31, column: 6, scope: !8218)
!8220 = !DILocation(line: 31, column: 6, scope: !8208)
!8221 = !DILocation(line: 32, column: 8, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8223, file: !8209, line: 32, column: 7)
!8223 = distinct !DILexicalBlock(scope: !8218, file: !8209, line: 31, column: 34)
!8224 = !DILocation(line: 32, column: 7, scope: !8223)
!8225 = !DILocation(line: 33, column: 4, scope: !8222)
!8226 = !DILocation(line: 35, column: 7, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8223, file: !8209, line: 35, column: 7)
!8228 = !DILocation(line: 35, column: 12, scope: !8227)
!8229 = !DILocation(line: 35, column: 7, scope: !8223)
!8230 = !DILocation(line: 36, column: 4, scope: !8227)
!8231 = !DILocation(line: 38, column: 10, scope: !8223)
!8232 = !DILocation(line: 38, column: 28, scope: !8223)
!8233 = !DILocation(line: 38, column: 41, scope: !8223)
!8234 = !DILocation(line: 38, column: 3, scope: !8223)
!8235 = !DILocation(line: 41, column: 6, scope: !8208)
!8236 = !DILocation(line: 42, column: 7, scope: !8208)
!8237 = !DILocation(line: 46, column: 15, scope: !8208)
!8238 = !DILocation(line: 374, column: 2, scope: !7030, inlinedAt: !8213)
!8239 = !DILocation(line: 376, column: 14, scope: !7030, inlinedAt: !8213)
!8240 = !DILocation(line: 377, column: 9, scope: !7030, inlinedAt: !8213)
!8241 = !DILocation(line: 377, column: 16, scope: !7030, inlinedAt: !8213)
!8242 = !DILocation(line: 46, column: 2, scope: !8208)
!8243 = !DILocation(line: 48, column: 1, scope: !8208)
!8244 = distinct !DISubprogram(name: "__ilog2_u64", scope: !6381, file: !6381, line: 30, type: !8245, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!8245 = !DISubroutineType(types: !8246)
!8246 = !{!281, !536}
!8247 = !DILocation(line: 366, column: 40, scope: !7030, inlinedAt: !8248)
!8248 = distinct !DILocation(line: 32, column: 9, scope: !8244)
!8249 = !DILocation(line: 368, column: 6, scope: !7030, inlinedAt: !8248)
!8250 = !DILocalVariable(name: "n", arg: 1, scope: !8244, file: !6381, line: 30, type: !536)
!8251 = !DILocation(line: 30, column: 21, scope: !8244)
!8252 = !DILocation(line: 32, column: 15, scope: !8244)
!8253 = !DILocation(line: 374, column: 2, scope: !7030, inlinedAt: !8248)
!8254 = !DILocation(line: 376, column: 14, scope: !7030, inlinedAt: !8248)
!8255 = !DILocation(line: 377, column: 9, scope: !7030, inlinedAt: !8248)
!8256 = !DILocation(line: 377, column: 16, scope: !7030, inlinedAt: !8248)
!8257 = !DILocation(line: 32, column: 18, scope: !8244)
!8258 = !DILocation(line: 32, column: 2, scope: !8244)
!8259 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8260, file: !8260, line: 137, type: !8261, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!8260 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8261 = !DISubroutineType(types: !8262)
!8262 = !{!252, !1087, !2270, !437, !250}
!8263 = !DILocalVariable(name: "s", arg: 1, scope: !8259, file: !8260, line: 137, type: !1087)
!8264 = !DILocation(line: 137, column: 54, scope: !8259)
!8265 = !DILocalVariable(name: "object", arg: 2, scope: !8259, file: !8260, line: 137, type: !2270)
!8266 = !DILocation(line: 137, column: 69, scope: !8259)
!8267 = !DILocalVariable(name: "size", arg: 3, scope: !8259, file: !8260, line: 138, type: !437)
!8268 = !DILocation(line: 138, column: 12, scope: !8259)
!8269 = !DILocalVariable(name: "flags", arg: 4, scope: !8259, file: !8260, line: 138, type: !250)
!8270 = !DILocation(line: 138, column: 24, scope: !8259)
!8271 = !DILocation(line: 140, column: 17, scope: !8259)
!8272 = !DILocation(line: 140, column: 2, scope: !8259)
!8273 = distinct !DISubprogram(name: "__list_del_entry", scope: !5528, file: !5528, line: 130, type: !5529, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!8274 = !DILocalVariable(name: "entry", arg: 1, scope: !8273, file: !5528, line: 130, type: !288)
!8275 = !DILocation(line: 130, column: 55, scope: !8273)
!8276 = !DILocation(line: 132, column: 30, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8273, file: !5528, line: 132, column: 6)
!8278 = !DILocation(line: 132, column: 7, scope: !8277)
!8279 = !DILocation(line: 132, column: 6, scope: !8273)
!8280 = !DILocation(line: 133, column: 3, scope: !8277)
!8281 = !DILocation(line: 135, column: 13, scope: !8273)
!8282 = !DILocation(line: 135, column: 20, scope: !8273)
!8283 = !DILocation(line: 135, column: 26, scope: !8273)
!8284 = !DILocation(line: 135, column: 33, scope: !8273)
!8285 = !DILocation(line: 135, column: 2, scope: !8273)
!8286 = !DILocation(line: 136, column: 1, scope: !8273)
!8287 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !5528, file: !5528, line: 51, type: !8288, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!8288 = !DISubroutineType(types: !8289)
!8289 = !{!299, !288}
!8290 = !DILocalVariable(name: "entry", arg: 1, scope: !8287, file: !5528, line: 51, type: !288)
!8291 = !DILocation(line: 51, column: 61, scope: !8287)
!8292 = !DILocation(line: 53, column: 2, scope: !8287)
!8293 = distinct !DISubprogram(name: "__list_del", scope: !5528, file: !5528, line: 110, type: !6236, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !364)
!8294 = !DILocalVariable(name: "prev", arg: 1, scope: !8293, file: !5528, line: 110, type: !288)
!8295 = !DILocation(line: 110, column: 50, scope: !8293)
!8296 = !DILocalVariable(name: "next", arg: 2, scope: !8293, file: !5528, line: 110, type: !288)
!8297 = !DILocation(line: 110, column: 75, scope: !8293)
!8298 = !DILocation(line: 112, column: 15, scope: !8293)
!8299 = !DILocation(line: 112, column: 2, scope: !8293)
!8300 = !DILocation(line: 112, column: 8, scope: !8293)
!8301 = !DILocation(line: 112, column: 13, scope: !8293)
!8302 = !DILocation(line: 113, column: 2, scope: !8293)
!8303 = !DILocation(line: 113, column: 2, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8293, file: !5528, line: 113, column: 2)
!8305 = !DILocation(line: 113, column: 2, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8304, file: !5528, line: 113, column: 2)
!8307 = !DILocation(line: 113, column: 2, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8304, file: !5528, line: 113, column: 2)
!8309 = !DILocation(line: 114, column: 1, scope: !8293)
