; ModuleID = '../bcout/drivers/dma/ti/edma.llvm.bc'
source_filename = "drivers/dma/ti/edma.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall4.init\22, \22a\22\09"
module asm "__initcall_edma_init4:\09\09\09"
module asm ".long\09edma_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.platform_driver = type { i32 (%struct.platform_device*)*, i32 (%struct.platform_device*)*, void (%struct.platform_device*)*, i32 (%struct.platform_device*, i32)*, i32 (%struct.platform_device*)*, %struct.device_driver, %struct.platform_device_id*, i8 }
%struct.platform_device = type { i8*, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, %struct.resource*, %struct.platform_device_id*, i8*, %struct.mfd_cell*, %struct.pdev_archdata }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.67, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.67 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.65, %struct.list_head, %struct.list_head, %union.anon.66 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.63 }
%union.anon.63 = type { %struct.anon.64 }
%struct.anon.64 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.55, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.55 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.56, i32 }
%union.anon.56 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.48, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.34, %union.anon.35, i32 }
%struct.request_queue = type opaque
%union.anon.34 = type { %struct.list_head }
%union.anon.35 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.36 }
%struct.anon.36 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.40 }
%struct.anon.40 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.47, i32, [12 x i8] }
%union.anon.47 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.48 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.49, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.52 }
%union.anon.49 = type { %struct.anon.50 }
%struct.anon.50 = type { i64, i64 }
%union.anon.52 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.65 = type { %struct.list_head }
%union.anon.66 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.57, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.58, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.59, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.62, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.57 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.58 = type { %struct.callback_head }
%union.anon.59 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.62 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.60 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.60 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.33 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.33 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type opaque
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.msi_msg = type opaque
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.irq_chip_regs, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.irq_chip_regs = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, i64, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, %struct.mutex, i32, %struct.module*, i8* }
%struct.irqaction = type { i32 (i32, i8*)*, i8*, i8*, %struct.irqaction*, i32 (i32, i8*)*, %struct.task_struct*, %struct.irqaction*, i32, i32, i64, i64, i8*, %struct.proc_dir_entry* }
%struct.proc_dir_entry = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.mfd_cell = type opaque
%struct.pdev_archdata = type {}
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.platform_device_id = type { [20 x i8], i64 }
%struct.edmacc_param = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.kmem_cache = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.edma_soc_info = type { i32, %struct.edma_rsv_info*, i32*, [2 x i8]*, [2 x i16]*, %struct.dma_slave_map*, i32 }
%struct.edma_rsv_info = type { [2 x i16]*, [2 x i16]* }
%struct.dma_slave_map = type { i8*, i8*, i8* }
%struct.edma_cc = type { %struct.device*, %struct.edma_soc_info*, i8*, i32, i8, i32, i32, i32, i32, i32, i8, i32, i32, i32, i64*, i64*, %struct.dma_device, %struct.dma_device*, %struct.edma_chan*, %struct.edma_tc*, i32 }
%struct.dma_device = type { %struct.kref, i32, i32, %struct.list_head, %struct.list_head, %struct.dma_filter, %struct.dma_cap_mask_t, i32, i16, i16, i32, i32, i32, i32, i32, %struct.device*, %struct.module*, %struct.ida, %struct.mutex, i32, i32, i32, i32, i32, i32, i8, i32, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64*, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i32, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64)*, void (%struct.dma_chan*, %struct.dma_slave_caps*)*, i32 (%struct.dma_chan*, %struct.dma_slave_config*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)*, void (%struct.dma_chan*)*, void (%struct.dma_device*)* }
%struct.dma_filter = type { i1 (%struct.dma_chan*, i8*)*, i32, %struct.dma_slave_map* }
%struct.dma_chan = type { %struct.dma_device*, %struct.device*, i32, i32, i32, %struct.dma_chan_dev*, i8*, %struct.list_head, %struct.dma_chan_percpu*, i32, i32, %struct.dma_router*, i8*, i8* }
%struct.dma_chan_dev = type { %struct.dma_chan*, %struct.device, i32 }
%struct.dma_chan_percpu = type { i64, i64 }
%struct.dma_router = type { %struct.device*, void (%struct.device*, i8*)* }
%struct.dma_cap_mask_t = type { [1 x i64] }
%struct.ida = type { %struct.xarray }
%struct.dma_async_tx_descriptor = type { i32, i32, i64, %struct.dma_chan*, i32 (%struct.dma_async_tx_descriptor*)*, i32 (%struct.dma_async_tx_descriptor*)*, void (i8*)*, void (i8*, %struct.dmaengine_result*)*, i8*, %struct.dmaengine_unmap_data*, i32, %struct.dma_descriptor_metadata_ops* }
%struct.dmaengine_result = type { i32, i32 }
%struct.dmaengine_unmap_data = type { i8, i8, i8, i8, %struct.device*, %struct.kref, i64, [0 x i64] }
%struct.dma_descriptor_metadata_ops = type { i32 (%struct.dma_async_tx_descriptor*, i8*, i64)*, i8* (%struct.dma_async_tx_descriptor*, i64*, i64*)*, i32 (%struct.dma_async_tx_descriptor*, i64)* }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.dma_interleaved_template = type { i64, i64, i32, i8, i8, i8, i8, i64, i64, [0 x %struct.data_chunk] }
%struct.data_chunk = type { i64, i64, i64, i64 }
%struct.dma_slave_caps = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8 }
%struct.dma_slave_config = type { i32, i64, i64, i32, i32, i32, i32, i32, i32, i8, i32 }
%struct.dma_tx_state = type { i32, i32, i32, i32 }
%struct.edma_chan = type { %struct.virt_dma_chan, %struct.list_head, %struct.edma_desc*, %struct.edma_cc*, %struct.edma_tc*, i32, i8, i8, [20 x i32], i32, %struct.dma_slave_config }
%struct.virt_dma_chan = type { %struct.dma_chan, %struct.tasklet_struct, void (%struct.virt_dma_desc*)*, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.virt_dma_desc* }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.68, i64 }
%union.anon.68 = type { void (i64)* }
%struct.virt_dma_desc = type { %struct.dma_async_tx_descriptor, %struct.dmaengine_result, %struct.list_head }
%struct.edma_desc = type { %struct.virt_dma_desc, %struct.list_head, i32, i32, i8, i32, i32, %struct.edma_chan*, i32, i32, i32, i32, i32, [0 x %struct.edma_pset] }
%struct.edma_pset = type { i32, i64, %struct.edmacc_param }
%struct.edma_tc = type { %struct.device_node*, i16 }
%struct.of_phandle_args = type { %struct.device_node*, i32, [16 x i32] }
%struct.of_dma = type { %struct.list_head, %struct.device_node*, {}*, i8* (%struct.of_phandle_args*, %struct.of_dma*)*, %struct.dma_router*, i8* }

@__UNIQUE_ID___addressable_edma_init256 = internal global i8* bitcast (i32 ()* @edma_init to i8*), section ".discard.addressable", align 8, !dbg !0
@edma_driver = internal global %struct.platform_driver { i32 (%struct.platform_device*)* @edma_probe, i32 (%struct.platform_device*)* @edma_remove, void (%struct.platform_device*)* null, i32 (%struct.platform_device*, i32)* null, i32 (%struct.platform_device*)* null, %struct.device_driver { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* getelementptr inbounds ([3 x %struct.of_device_id], [3 x %struct.of_device_id]* @edma_of_ids, i32 0, i32 0), %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @edma_pm_ops, void (%struct.device*)* null, %struct.driver_private* null }, %struct.platform_device_id* null, i8 0 }, align 8, !dbg !4685
@edma_tptc_driver = internal global %struct.platform_driver { i32 (%struct.platform_device*)* @edma_tptc_probe, i32 (%struct.platform_device*)* null, void (%struct.platform_device*)* null, i32 (%struct.platform_device*, i32)* null, i32 (%struct.platform_device*)* null, %struct.device_driver { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* getelementptr inbounds ([2 x %struct.of_device_id], [2 x %struct.of_device_id]* @edma_tptc_of_ids, i32 0, i32 0), %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* null, void (%struct.device*)* null, %struct.driver_private* null }, %struct.platform_device_id* null, i8 0 }, align 8, !dbg !4756
@__exitcall_edma_exit = internal global void ()* @edma_exit, section ".exitcall.exit", align 8, !dbg !4662
@__UNIQUE_ID_author257 = internal constant [49 x i8] c"edma.author=Matt Porter <matt.porter@linaro.org>\00", section ".modinfo", align 1, !dbg !4667
@__UNIQUE_ID_description258 = internal constant [43 x i8] c"edma.description=TI EDMA DMA engine driver\00", section ".modinfo", align 1, !dbg !4672
@__UNIQUE_ID_file259 = internal constant [30 x i8] c"edma.file=drivers/dma/ti/edma\00", section ".modinfo", align 1, !dbg !4677
@__UNIQUE_ID_license260 = internal constant [20 x i8] c"edma.license=GPL v2\00", section ".modinfo", align 1, !dbg !4682
@.str = private unnamed_addr constant [5 x i8] c"edma\00", align 1
@edma_of_ids = internal constant [3 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"ti,edma3\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast ([2 x i32]* @edma_binding_type to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"ti,edma3-tpcc\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* getelementptr (i8, i8* bitcast ([2 x i32]* @edma_binding_type to i8*), i64 4) }, %struct.of_device_id zeroinitializer], align 16, !dbg !4748
@edma_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* @edma_pm_suspend, i32 (%struct.device*)* @edma_pm_resume, i32 (%struct.device*)* @edma_pm_suspend, i32 (%struct.device*)* @edma_pm_resume, i32 (%struct.device*)* @edma_pm_suspend, i32 (%struct.device*)* @edma_pm_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !4754
@.str.1 = private unnamed_addr constant [23 x i8] c"failed to get DT data\0A\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"edma3_cc\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"no mem resource?\0A\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"pm_runtime_get_sync() failed\0A\00", align 1
@dummy_paramset = internal constant %struct.edmacc_param { i32 0, i32 0, i32 0, i32 0, i32 0, i32 65535, i32 0, i32 1 }, align 1, !dbg !4745
@.str.5 = private unnamed_addr constant [12 x i8] c"edma3_ccint\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"%s_ccint\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"CCINT (%d) failed --> %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"edma3_ccerrint\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"%s_ccerrint\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"CCERRINT (%d) failed --> %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"Can't allocate PaRAM dummy slot\0A\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"ti,tptcs\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"dma-channel-mask\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c"dma-channel-mask is not complete.\0A\00", align 1
@.str.15 = private unnamed_addr constant [43 x i8] c"dma-channel-mask is out of range or empty\0A\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"slave ddev registration failed (%d)\0A\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"memcpy ddev registration failed (%d)\0A\00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"TI EDMA DMA engine driver\0A\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"ti,edma-xbar-event-map\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"ti,edma-memcpy-channels\00", align 1
@__const.edma_setup_info_from_dt.pname = private unnamed_addr constant [24 x i8] c"ti,edma-memcpy-channels\00", align 16
@.str.21 = private unnamed_addr constant [29 x i8] c"ti,edma-reserved-slot-ranges\00", align 1
@__const.edma_setup_info_from_dt.pname.22 = private unnamed_addr constant [29 x i8] c"ti,edma-reserved-slot-ranges\00", align 16
@__const.edma_xbar_event_map.pname = private unnamed_addr constant [23 x i8] c"ti,edma-xbar-event-map\00", align 16
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.23 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"drivers/dma/ti/../dmaengine.h\00", align 1
@.str.25 = private unnamed_addr constant [36 x i8] c"Ignoring eDMA instance for linking\0A\00", align 1
@.str.26 = private unnamed_addr constant [42 x i8] c"%s: Error interrupt without error event!\0A\00", align 1
@__func__.dma_ccerr_handler = private unnamed_addr constant [18 x i8] c"dma_ccerr_handler\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"CCERR 0x%08x\0A\00", align 1
@.str.28 = private unnamed_addr constant [49 x i8] c"Legacy memcpy is enabled, things might not work\0A\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"memcpy is disabled due to OoM\0A\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"memcpy is disabled\0A\00", align 1
@.str.31 = private unnamed_addr constant [29 x i8] c"%s: Failed to allocate slot\0A\00", align 1
@__func__.edma_prep_dma_memcpy = private unnamed_addr constant [21 x i8] c"edma_prep_dma_memcpy\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"Exceeded max SG segment size\0A\00", align 1
@.str.33 = private unnamed_addr constant [35 x i8] c"%s: direction not implemented yet\0A\00", align 1
@__func__.edma_config_pset = private unnamed_addr constant [17 x i8] c"edma_config_pset\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.34 = private unnamed_addr constant [46 x i8] c"%s: SRC constant addressing is not supported\0A\00", align 1
@__func__.edma_prep_dma_interleaved = private unnamed_addr constant [26 x i8] c"edma_prep_dma_interleaved\00", align 1
@.str.35 = private unnamed_addr constant [46 x i8] c"%s: DST constant addressing is not supported\0A\00", align 1
@.str.36 = private unnamed_addr constant [23 x i8] c"%s: bad direction: %d\0A\00", align 1
@__func__.edma_prep_slave_sg = private unnamed_addr constant [19 x i8] c"edma_prep_slave_sg\00", align 1
@.str.37 = private unnamed_addr constant [30 x i8] c"%s: Undefined slave buswidth\0A\00", align 1
@__func__.edma_prep_dma_cyclic = private unnamed_addr constant [21 x i8] c"edma_prep_dma_cyclic\00", align 1
@.str.38 = private unnamed_addr constant [44 x i8] c"Period should be multiple of Buffer length\0A\00", align 1
@.str.39 = private unnamed_addr constant [45 x i8] c"Entry slot allocation failed for channel %u\0A\00", align 1
@.str.40 = private unnamed_addr constant [41 x i8] c"Channel%d is reserved, can not be used!\0A\00", align 1
@edma_binding_type = internal constant [2 x i32] [i32 0, i32 1], align 4, !dbg !4751
@.str.41 = private unnamed_addr constant [11 x i8] c"edma3-tptc\00", align 1
@edma_tptc_of_ids = internal constant [2 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"ti,edma3-tptc\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* null }, %struct.of_device_id zeroinitializer], align 16, !dbg !4758
@llvm.used = appending global [7 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_edma_init256 to i8*), i8* bitcast (void ()* @edma_exit to i8*), i8* bitcast (void ()** @__exitcall_edma_exit to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__UNIQUE_ID_author257, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_description258, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_file259, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_license260, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_init() #0 !dbg !4767 {
entry:
  %retval = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4770, metadata !DIExpression()), !dbg !4771
  %call = call i32 @__platform_driver_register(%struct.platform_driver* @edma_tptc_driver, %struct.module* null) #11, !dbg !4772
  store i32 %call, i32* %ret, align 4, !dbg !4773
  %0 = load i32, i32* %ret, align 4, !dbg !4774
  %tobool = icmp ne i32 %0, 0, !dbg !4774
  br i1 %tobool, label %if.then, label %if.end, !dbg !4776

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ret, align 4, !dbg !4777
  store i32 %1, i32* %retval, align 4, !dbg !4778
  br label %return, !dbg !4778

if.end:                                           ; preds = %entry
  %call1 = call i32 @__platform_driver_register(%struct.platform_driver* @edma_driver, %struct.module* null) #11, !dbg !4779
  store i32 %call1, i32* %retval, align 4, !dbg !4780
  br label %return, !dbg !4780

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !4781
  ret i32 %2, !dbg !4781
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @edma_exit() #1 section ".exit.text" !dbg !4782 {
entry:
  call void @platform_driver_unregister(%struct.platform_driver* @edma_driver) #11, !dbg !4783
  call void @platform_driver_unregister(%struct.platform_driver* @edma_tptc_driver) #11, !dbg !4784
  ret void, !dbg !4785
}

; Function Attrs: noredzone
declare dso_local void @platform_driver_unregister(%struct.platform_driver*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noredzone
declare dso_local i32 @__platform_driver_register(%struct.platform_driver*, %struct.module*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_probe(%struct.platform_device* %pdev) #0 !dbg !4786 {
entry:
  %map.addr.i320 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %map.addr.i320, metadata !4787, metadata !DIExpression()), !dbg !4792
  %start.addr.i321 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr.i321, metadata !4800, metadata !DIExpression()), !dbg !4801
  %nbits.addr.i322 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr.i322, metadata !4802, metadata !DIExpression()), !dbg !4803
  %map.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %map.addr.i, metadata !4804, metadata !DIExpression()), !dbg !4806
  %start.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr.i, metadata !4812, metadata !DIExpression()), !dbg !4813
  %nbits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr.i, metadata !4814, metadata !DIExpression()), !dbg !4815
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %info = alloca %struct.edma_soc_info*, align 8
  %queue_priority_mapping = alloca [2 x i8]*, align 8
  %reserved = alloca [2 x i16]*, align 8
  %i = alloca i32, align 4
  %irq = alloca i32, align 4
  %irq_name = alloca i8*, align 8
  %mem = alloca %struct.resource*, align 8
  %node = alloca %struct.device_node*, align 8
  %dev2 = alloca %struct.device*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %legacy_mode = alloca i8, align 1
  %ret = alloca i32, align 4
  %match = alloca %struct.of_device_id*, align 8
  %lowest_priority = alloca i32, align 4
  %array_max = alloca i32, align 4
  %tc_args = alloca %struct.of_phandle_args, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !4816, metadata !DIExpression()), !dbg !4817
  call void @llvm.dbg.declare(metadata %struct.edma_soc_info** %info, metadata !4818, metadata !DIExpression()), !dbg !4819
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4820
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !4821
  %platform_data = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 7, !dbg !4822
  %1 = load i8*, i8** %platform_data, align 8, !dbg !4822
  %2 = bitcast i8* %1 to %struct.edma_soc_info*, !dbg !4820
  store %struct.edma_soc_info* %2, %struct.edma_soc_info** %info, align 8, !dbg !4819
  call void @llvm.dbg.declare(metadata [2 x i8]** %queue_priority_mapping, metadata !4823, metadata !DIExpression()), !dbg !4824
  call void @llvm.dbg.declare(metadata [2 x i16]** %reserved, metadata !4825, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4827, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !4829, metadata !DIExpression()), !dbg !4830
  call void @llvm.dbg.declare(metadata i8** %irq_name, metadata !4831, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.declare(metadata %struct.resource** %mem, metadata !4833, metadata !DIExpression()), !dbg !4834
  call void @llvm.dbg.declare(metadata %struct.device_node** %node, metadata !4835, metadata !DIExpression()), !dbg !4836
  %3 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4837
  %dev1 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %3, i32 0, i32 3, !dbg !4838
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 23, !dbg !4839
  %4 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !4839
  store %struct.device_node* %4, %struct.device_node** %node, align 8, !dbg !4836
  call void @llvm.dbg.declare(metadata %struct.device** %dev2, metadata !4840, metadata !DIExpression()), !dbg !4841
  %5 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4842
  %dev3 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %5, i32 0, i32 3, !dbg !4843
  store %struct.device* %dev3, %struct.device** %dev2, align 8, !dbg !4841
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !4844, metadata !DIExpression()), !dbg !4845
  call void @llvm.dbg.declare(metadata i8* %legacy_mode, metadata !4846, metadata !DIExpression()), !dbg !4847
  store i8 1, i8* %legacy_mode, align 1, !dbg !4847
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4848, metadata !DIExpression()), !dbg !4849
  %6 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !4850
  %tobool = icmp ne %struct.device_node* %6, null, !dbg !4850
  br i1 %tobool, label %if.then, label %if.end12, !dbg !4852

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.of_device_id** %match, metadata !4853, metadata !DIExpression()), !dbg !4855
  %7 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !4856
  %call = call %struct.of_device_id* @of_match_node(%struct.of_device_id* getelementptr inbounds ([3 x %struct.of_device_id], [3 x %struct.of_device_id]* @edma_of_ids, i64 0, i64 0), %struct.device_node* %7) #11, !dbg !4857
  store %struct.of_device_id* %call, %struct.of_device_id** %match, align 8, !dbg !4858
  %8 = load %struct.of_device_id*, %struct.of_device_id** %match, align 8, !dbg !4859
  %tobool4 = icmp ne %struct.of_device_id* %8, null, !dbg !4859
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !4861

land.lhs.true:                                    ; preds = %if.then
  %9 = load %struct.of_device_id*, %struct.of_device_id** %match, align 8, !dbg !4862
  %data = getelementptr inbounds %struct.of_device_id, %struct.of_device_id* %9, i32 0, i32 3, !dbg !4863
  %10 = load i8*, i8** %data, align 8, !dbg !4863
  %11 = bitcast i8* %10 to i32*, !dbg !4864
  %12 = load i32, i32* %11, align 4, !dbg !4865
  %cmp = icmp eq i32 %12, 1, !dbg !4866
  br i1 %cmp, label %if.then5, label %if.end, !dbg !4867

if.then5:                                         ; preds = %land.lhs.true
  store i8 0, i8* %legacy_mode, align 1, !dbg !4868
  br label %if.end, !dbg !4869

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  %13 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4870
  %14 = load i8, i8* %legacy_mode, align 1, !dbg !4871
  %tobool6 = trunc i8 %14 to i1, !dbg !4871
  %call7 = call %struct.edma_soc_info* @edma_setup_info_from_dt(%struct.device* %13, i1 zeroext %tobool6) #11, !dbg !4872
  store %struct.edma_soc_info* %call7, %struct.edma_soc_info** %info, align 8, !dbg !4873
  %15 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !4874
  %16 = bitcast %struct.edma_soc_info* %15 to i8*, !dbg !4874
  %call8 = call zeroext i1 @IS_ERR(i8* %16) #11, !dbg !4876
  br i1 %call8, label %if.then9, label %if.end11, !dbg !4877

if.then9:                                         ; preds = %if.end
  %17 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4878
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !4878
  %18 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !4880
  %19 = bitcast %struct.edma_soc_info* %18 to i8*, !dbg !4880
  %call10 = call i64 @PTR_ERR(i8* %19) #11, !dbg !4881
  %conv = trunc i64 %call10 to i32, !dbg !4881
  store i32 %conv, i32* %retval, align 4, !dbg !4882
  br label %return, !dbg !4882

if.end11:                                         ; preds = %if.end
  br label %if.end12, !dbg !4883

if.end12:                                         ; preds = %if.end11, %entry
  %20 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !4884
  %tobool13 = icmp ne %struct.edma_soc_info* %20, null, !dbg !4884
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !4886

if.then14:                                        ; preds = %if.end12
  store i32 -19, i32* %retval, align 4, !dbg !4887
  br label %return, !dbg !4887

if.end15:                                         ; preds = %if.end12
  %21 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4888
  %call16 = call i32 @dma_set_mask_and_coherent(%struct.device* %21, i64 4294967295) #11, !dbg !4889
  store i32 %call16, i32* %ret, align 4, !dbg !4890
  %22 = load i32, i32* %ret, align 4, !dbg !4891
  %tobool17 = icmp ne i32 %22, 0, !dbg !4891
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !4893

if.then18:                                        ; preds = %if.end15
  %23 = load i32, i32* %ret, align 4, !dbg !4894
  store i32 %23, i32* %retval, align 4, !dbg !4895
  br label %return, !dbg !4895

if.end19:                                         ; preds = %if.end15
  %24 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4896
  %call20 = call i8* @devm_kzalloc(%struct.device* %24, i64 504, i32 3264) #11, !dbg !4897
  %25 = bitcast i8* %call20 to %struct.edma_cc*, !dbg !4897
  store %struct.edma_cc* %25, %struct.edma_cc** %ecc, align 8, !dbg !4898
  %26 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4899
  %tobool21 = icmp ne %struct.edma_cc* %26, null, !dbg !4899
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !4901

if.then22:                                        ; preds = %if.end19
  store i32 -12, i32* %retval, align 4, !dbg !4902
  br label %return, !dbg !4902

if.end23:                                         ; preds = %if.end19
  %27 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4903
  %28 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4904
  %dev24 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %28, i32 0, i32 0, !dbg !4905
  store %struct.device* %27, %struct.device** %dev24, align 8, !dbg !4906
  %29 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4907
  %id = getelementptr inbounds %struct.platform_device, %struct.platform_device* %29, i32 0, i32 1, !dbg !4908
  %30 = load i32, i32* %id, align 8, !dbg !4908
  %31 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4909
  %id25 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %31, i32 0, i32 3, !dbg !4910
  store i32 %30, i32* %id25, align 8, !dbg !4911
  %32 = load i8, i8* %legacy_mode, align 1, !dbg !4912
  %tobool26 = trunc i8 %32 to i1, !dbg !4912
  %33 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4913
  %legacy_mode27 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %33, i32 0, i32 4, !dbg !4914
  %frombool = zext i1 %tobool26 to i8, !dbg !4915
  store i8 %frombool, i8* %legacy_mode27, align 4, !dbg !4915
  %34 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4916
  %id28 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %34, i32 0, i32 3, !dbg !4918
  %35 = load i32, i32* %id28, align 8, !dbg !4918
  %cmp29 = icmp slt i32 %35, 0, !dbg !4919
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !4920

if.then31:                                        ; preds = %if.end23
  %36 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4921
  %id32 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %36, i32 0, i32 3, !dbg !4922
  store i32 0, i32* %id32, align 8, !dbg !4923
  br label %if.end33, !dbg !4921

if.end33:                                         ; preds = %if.then31, %if.end23
  %37 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4924
  %call34 = call %struct.resource* @platform_get_resource_byname(%struct.platform_device* %37, i32 512, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #11, !dbg !4925
  store %struct.resource* %call34, %struct.resource** %mem, align 8, !dbg !4926
  %38 = load %struct.resource*, %struct.resource** %mem, align 8, !dbg !4927
  %tobool35 = icmp ne %struct.resource* %38, null, !dbg !4927
  br i1 %tobool35, label %if.end41, label %if.then36, !dbg !4929

if.then36:                                        ; preds = %if.end33
  %39 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4930
  %call37 = call %struct.resource* @platform_get_resource(%struct.platform_device* %39, i32 512, i32 0) #11, !dbg !4932
  store %struct.resource* %call37, %struct.resource** %mem, align 8, !dbg !4933
  %40 = load %struct.resource*, %struct.resource** %mem, align 8, !dbg !4934
  %tobool38 = icmp ne %struct.resource* %40, null, !dbg !4934
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !4936

if.then39:                                        ; preds = %if.then36
  %41 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4937
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %41, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !4937
  store i32 -19, i32* %retval, align 4, !dbg !4939
  br label %return, !dbg !4939

if.end40:                                         ; preds = %if.then36
  br label %if.end41, !dbg !4940

if.end41:                                         ; preds = %if.end40, %if.end33
  %42 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4941
  %43 = load %struct.resource*, %struct.resource** %mem, align 8, !dbg !4942
  %call42 = call i8* @devm_ioremap_resource(%struct.device* %42, %struct.resource* %43) #11, !dbg !4943
  %44 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4944
  %base = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %44, i32 0, i32 2, !dbg !4945
  store i8* %call42, i8** %base, align 8, !dbg !4946
  %45 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4947
  %base43 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %45, i32 0, i32 2, !dbg !4949
  %46 = load i8*, i8** %base43, align 8, !dbg !4949
  %call44 = call zeroext i1 @IS_ERR(i8* %46) #11, !dbg !4950
  br i1 %call44, label %if.then45, label %if.end49, !dbg !4951

if.then45:                                        ; preds = %if.end41
  %47 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4952
  %base46 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %47, i32 0, i32 2, !dbg !4953
  %48 = load i8*, i8** %base46, align 8, !dbg !4953
  %call47 = call i64 @PTR_ERR(i8* %48) #11, !dbg !4954
  %conv48 = trunc i64 %call47 to i32, !dbg !4954
  store i32 %conv48, i32* %retval, align 4, !dbg !4955
  br label %return, !dbg !4955

if.end49:                                         ; preds = %if.end41
  %49 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4956
  %50 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4957
  %51 = bitcast %struct.edma_cc* %50 to i8*, !dbg !4957
  call void @platform_set_drvdata(%struct.platform_device* %49, i8* %51) #11, !dbg !4958
  %52 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4959
  call void @pm_runtime_enable(%struct.device* %52) #11, !dbg !4960
  %53 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4961
  %call50 = call i32 @pm_runtime_get_sync(%struct.device* %53) #11, !dbg !4962
  store i32 %call50, i32* %ret, align 4, !dbg !4963
  %54 = load i32, i32* %ret, align 4, !dbg !4964
  %cmp51 = icmp slt i32 %54, 0, !dbg !4966
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !4967

if.then53:                                        ; preds = %if.end49
  %55 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4968
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %55, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !4968
  %56 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4970
  call void @pm_runtime_disable(%struct.device* %56) #11, !dbg !4971
  %57 = load i32, i32* %ret, align 4, !dbg !4972
  store i32 %57, i32* %retval, align 4, !dbg !4973
  br label %return, !dbg !4973

if.end54:                                         ; preds = %if.end49
  %58 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4974
  %59 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !4975
  %60 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4976
  %call55 = call i32 @edma_setup_from_hw(%struct.device* %58, %struct.edma_soc_info* %59, %struct.edma_cc* %60) #11, !dbg !4977
  store i32 %call55, i32* %ret, align 4, !dbg !4978
  %61 = load i32, i32* %ret, align 4, !dbg !4979
  %tobool56 = icmp ne i32 %61, 0, !dbg !4979
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !4981

if.then57:                                        ; preds = %if.end54
  br label %err_disable_pm, !dbg !4982

if.end58:                                         ; preds = %if.end54
  %62 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4983
  %63 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4984
  %num_channels = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %63, i32 0, i32 5, !dbg !4985
  %64 = load i32, i32* %num_channels, align 8, !dbg !4985
  %conv59 = zext i32 %64 to i64, !dbg !4984
  %call60 = call i8* @devm_kcalloc(%struct.device* %62, i64 %conv59, i64 432, i32 3264) #11, !dbg !4986
  %65 = bitcast i8* %call60 to %struct.edma_chan*, !dbg !4986
  %66 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4987
  %slave_chans = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %66, i32 0, i32 18, !dbg !4988
  store %struct.edma_chan* %65, %struct.edma_chan** %slave_chans, align 8, !dbg !4989
  %67 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4990
  %68 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4991
  %num_slots = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %68, i32 0, i32 8, !dbg !4991
  %69 = load i32, i32* %num_slots, align 4, !dbg !4991
  %conv61 = zext i32 %69 to i64, !dbg !4991
  %add = add i64 %conv61, 64, !dbg !4991
  %sub = sub i64 %add, 1, !dbg !4991
  %div = udiv i64 %sub, 64, !dbg !4991
  %call62 = call i8* @devm_kcalloc(%struct.device* %67, i64 %div, i64 8, i32 3264) #11, !dbg !4992
  %70 = bitcast i8* %call62 to i64*, !dbg !4992
  %71 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4993
  %slot_inuse = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %71, i32 0, i32 14, !dbg !4994
  store i64* %70, i64** %slot_inuse, align 8, !dbg !4995
  %72 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4996
  %73 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4997
  %num_channels63 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %73, i32 0, i32 5, !dbg !4997
  %74 = load i32, i32* %num_channels63, align 8, !dbg !4997
  %conv64 = zext i32 %74 to i64, !dbg !4997
  %add65 = add i64 %conv64, 64, !dbg !4997
  %sub66 = sub i64 %add65, 1, !dbg !4997
  %div67 = udiv i64 %sub66, 64, !dbg !4997
  %call68 = call i8* @devm_kcalloc(%struct.device* %72, i64 %div67, i64 8, i32 3264) #11, !dbg !4998
  %75 = bitcast i8* %call68 to i64*, !dbg !4998
  %76 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !4999
  %channels_mask = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %76, i32 0, i32 15, !dbg !5000
  store i64* %75, i64** %channels_mask, align 8, !dbg !5001
  %77 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5002
  %slave_chans69 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %77, i32 0, i32 18, !dbg !5004
  %78 = load %struct.edma_chan*, %struct.edma_chan** %slave_chans69, align 8, !dbg !5004
  %tobool70 = icmp ne %struct.edma_chan* %78, null, !dbg !5002
  br i1 %tobool70, label %lor.lhs.false, label %if.then76, !dbg !5005

lor.lhs.false:                                    ; preds = %if.end58
  %79 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5006
  %slot_inuse71 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %79, i32 0, i32 14, !dbg !5007
  %80 = load i64*, i64** %slot_inuse71, align 8, !dbg !5007
  %tobool72 = icmp ne i64* %80, null, !dbg !5006
  br i1 %tobool72, label %lor.lhs.false73, label %if.then76, !dbg !5008

lor.lhs.false73:                                  ; preds = %lor.lhs.false
  %81 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5009
  %channels_mask74 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %81, i32 0, i32 15, !dbg !5010
  %82 = load i64*, i64** %channels_mask74, align 8, !dbg !5010
  %tobool75 = icmp ne i64* %82, null, !dbg !5009
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !5011

if.then76:                                        ; preds = %lor.lhs.false73, %lor.lhs.false, %if.end58
  store i32 -12, i32* %ret, align 4, !dbg !5012
  br label %err_disable_pm, !dbg !5014

if.end77:                                         ; preds = %lor.lhs.false73
  %83 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5015
  %channels_mask78 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %83, i32 0, i32 15, !dbg !5016
  %84 = load i64*, i64** %channels_mask78, align 8, !dbg !5016
  %85 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5017
  %num_channels79 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %85, i32 0, i32 5, !dbg !5018
  %86 = load i32, i32* %num_channels79, align 8, !dbg !5018
  call void @bitmap_fill(i64* %84, i32 %86) #11, !dbg !5019
  %87 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5020
  %default_queue = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %87, i32 0, i32 0, !dbg !5021
  %88 = load i32, i32* %default_queue, align 8, !dbg !5021
  %89 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5022
  %default_queue80 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %89, i32 0, i32 11, !dbg !5023
  store i32 %88, i32* %default_queue80, align 8, !dbg !5024
  %90 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5025
  %rsv = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %90, i32 0, i32 1, !dbg !5026
  %91 = load %struct.edma_rsv_info*, %struct.edma_rsv_info** %rsv, align 8, !dbg !5026
  %tobool81 = icmp ne %struct.edma_rsv_info* %91, null, !dbg !5025
  br i1 %tobool81, label %if.then82, label %if.end124, !dbg !5027

if.then82:                                        ; preds = %if.end77
  %92 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5028
  %rsv83 = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %92, i32 0, i32 1, !dbg !5029
  %93 = load %struct.edma_rsv_info*, %struct.edma_rsv_info** %rsv83, align 8, !dbg !5029
  %rsv_slots = getelementptr inbounds %struct.edma_rsv_info, %struct.edma_rsv_info* %93, i32 0, i32 1, !dbg !5030
  %94 = load [2 x i16]*, [2 x i16]** %rsv_slots, align 8, !dbg !5030
  store [2 x i16]* %94, [2 x i16]** %reserved, align 8, !dbg !5031
  %95 = load [2 x i16]*, [2 x i16]** %reserved, align 8, !dbg !5032
  %tobool84 = icmp ne [2 x i16]* %95, null, !dbg !5032
  br i1 %tobool84, label %if.then85, label %if.end99, !dbg !5033

if.then85:                                        ; preds = %if.then82
  store i32 0, i32* %i, align 4, !dbg !5034
  br label %for.cond, !dbg !5035

for.cond:                                         ; preds = %for.inc, %if.then85
  %96 = load [2 x i16]*, [2 x i16]** %reserved, align 8, !dbg !5036
  %97 = load i32, i32* %i, align 4, !dbg !5037
  %idxprom = sext i32 %97 to i64, !dbg !5036
  %arrayidx = getelementptr [2 x i16], [2 x i16]* %96, i64 %idxprom, !dbg !5036
  %arrayidx86 = getelementptr [2 x i16], [2 x i16]* %arrayidx, i64 0, i64 0, !dbg !5036
  %98 = load i16, i16* %arrayidx86, align 2, !dbg !5036
  %conv87 = sext i16 %98 to i32, !dbg !5036
  %cmp88 = icmp ne i32 %conv87, -1, !dbg !5038
  br i1 %cmp88, label %for.body, label %for.end, !dbg !5039

for.body:                                         ; preds = %for.cond
  %99 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5040
  %slot_inuse90 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %99, i32 0, i32 14, !dbg !5041
  %100 = load i64*, i64** %slot_inuse90, align 8, !dbg !5041
  %101 = load [2 x i16]*, [2 x i16]** %reserved, align 8, !dbg !5042
  %102 = load i32, i32* %i, align 4, !dbg !5043
  %idxprom91 = sext i32 %102 to i64, !dbg !5042
  %arrayidx92 = getelementptr [2 x i16], [2 x i16]* %101, i64 %idxprom91, !dbg !5042
  %arrayidx93 = getelementptr [2 x i16], [2 x i16]* %arrayidx92, i64 0, i64 0, !dbg !5042
  %103 = load i16, i16* %arrayidx93, align 2, !dbg !5042
  %conv94 = sext i16 %103 to i32, !dbg !5042
  %104 = load [2 x i16]*, [2 x i16]** %reserved, align 8, !dbg !5044
  %105 = load i32, i32* %i, align 4, !dbg !5045
  %idxprom95 = sext i32 %105 to i64, !dbg !5044
  %arrayidx96 = getelementptr [2 x i16], [2 x i16]* %104, i64 %idxprom95, !dbg !5044
  %arrayidx97 = getelementptr [2 x i16], [2 x i16]* %arrayidx96, i64 0, i64 1, !dbg !5044
  %106 = load i16, i16* %arrayidx97, align 2, !dbg !5044
  %conv98 = sext i16 %106 to i32, !dbg !5044
  store i64* %100, i64** %map.addr.i, align 8
  store i32 %conv94, i32* %start.addr.i, align 4
  store i32 %conv98, i32* %nbits.addr.i, align 4
  %107 = load i32, i32* %nbits.addr.i, align 4, !dbg !5046
  %108 = call i1 @llvm.is.constant.i32(i32 %107) #10, !dbg !5048
  br i1 %108, label %land.lhs.true.i, label %if.else.i, !dbg !5049

land.lhs.true.i:                                  ; preds = %for.body
  %109 = load i32, i32* %nbits.addr.i, align 4, !dbg !5050
  %cmp.i = icmp eq i32 %109, 1, !dbg !5051
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5052

if.then.i:                                        ; preds = %land.lhs.true.i
  %110 = load i32, i32* %start.addr.i, align 4, !dbg !5053
  %conv.i = zext i32 %110 to i64, !dbg !5053
  %111 = load i64*, i64** %map.addr.i, align 8, !dbg !5054
  call void @__set_bit(i64 %conv.i, i64* %111) #13, !dbg !5055
  br label %bitmap_set.exit, !dbg !5055

if.else.i:                                        ; preds = %land.lhs.true.i, %for.body
  %112 = load i32, i32* %start.addr.i, align 4, !dbg !5056
  %and.i = and i32 %112, 7, !dbg !5058
  %113 = call i1 @llvm.is.constant.i32(i32 %and.i) #10, !dbg !5059
  br i1 %113, label %land.lhs.true1.i, label %if.else14.i, !dbg !5060

land.lhs.true1.i:                                 ; preds = %if.else.i
  %114 = load i32, i32* %start.addr.i, align 4, !dbg !5061
  %and2.i = and i32 %114, 7, !dbg !5061
  %cmp3.i = icmp eq i32 %and2.i, 0, !dbg !5061
  br i1 %cmp3.i, label %land.lhs.true5.i, label %if.else14.i, !dbg !5062

land.lhs.true5.i:                                 ; preds = %land.lhs.true1.i
  %115 = load i32, i32* %nbits.addr.i, align 4, !dbg !5063
  %and6.i = and i32 %115, 7, !dbg !5064
  %116 = call i1 @llvm.is.constant.i32(i32 %and6.i) #10, !dbg !5065
  br i1 %116, label %land.lhs.true7.i, label %if.else14.i, !dbg !5066

land.lhs.true7.i:                                 ; preds = %land.lhs.true5.i
  %117 = load i32, i32* %nbits.addr.i, align 4, !dbg !5067
  %and8.i = and i32 %117, 7, !dbg !5067
  %cmp9.i = icmp eq i32 %and8.i, 0, !dbg !5067
  br i1 %cmp9.i, label %if.then11.i, label %if.else14.i, !dbg !5068

if.then11.i:                                      ; preds = %land.lhs.true7.i
  %118 = load i64*, i64** %map.addr.i, align 8, !dbg !5069
  %119 = bitcast i64* %118 to i8*, !dbg !5070
  %120 = load i32, i32* %start.addr.i, align 4, !dbg !5071
  %div.i = udiv i32 %120, 8, !dbg !5072
  %idx.ext.i = zext i32 %div.i to i64, !dbg !5073
  %add.ptr.i = getelementptr i8, i8* %119, i64 %idx.ext.i, !dbg !5073
  %121 = load i32, i32* %nbits.addr.i, align 4, !dbg !5074
  %div12.i = udiv i32 %121, 8, !dbg !5075
  %conv13.i = zext i32 %div12.i to i64, !dbg !5074
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr.i, i8 -1, i64 %conv13.i, i1 false) #10, !dbg !5076
  br label %if.end.i, !dbg !5076

if.else14.i:                                      ; preds = %land.lhs.true7.i, %land.lhs.true5.i, %land.lhs.true1.i, %if.else.i
  %122 = load i64*, i64** %map.addr.i, align 8, !dbg !5077
  %123 = load i32, i32* %start.addr.i, align 4, !dbg !5078
  %124 = load i32, i32* %nbits.addr.i, align 4, !dbg !5079
  call void @__bitmap_set(i64* %122, i32 %123, i32 %124) #13, !dbg !5080
  br label %if.end.i

if.end.i:                                         ; preds = %if.else14.i, %if.then11.i
  br label %bitmap_set.exit

bitmap_set.exit:                                  ; preds = %if.then.i, %if.end.i
  br label %for.inc, !dbg !5081

for.inc:                                          ; preds = %bitmap_set.exit
  %125 = load i32, i32* %i, align 4, !dbg !5082
  %inc = add i32 %125, 1, !dbg !5082
  store i32 %inc, i32* %i, align 4, !dbg !5082
  br label %for.cond, !dbg !5083, !llvm.loop !5084

for.end:                                          ; preds = %for.cond
  br label %if.end99, !dbg !5086

if.end99:                                         ; preds = %for.end, %if.then82
  %126 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5087
  %rsv100 = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %126, i32 0, i32 1, !dbg !5088
  %127 = load %struct.edma_rsv_info*, %struct.edma_rsv_info** %rsv100, align 8, !dbg !5088
  %rsv_chans = getelementptr inbounds %struct.edma_rsv_info, %struct.edma_rsv_info* %127, i32 0, i32 0, !dbg !5089
  %128 = load [2 x i16]*, [2 x i16]** %rsv_chans, align 8, !dbg !5089
  store [2 x i16]* %128, [2 x i16]** %reserved, align 8, !dbg !5090
  %129 = load [2 x i16]*, [2 x i16]** %reserved, align 8, !dbg !5091
  %tobool101 = icmp ne [2 x i16]* %129, null, !dbg !5091
  br i1 %tobool101, label %if.then102, label %if.end123, !dbg !5092

if.then102:                                       ; preds = %if.end99
  store i32 0, i32* %i, align 4, !dbg !5093
  br label %for.cond103, !dbg !5094

for.cond103:                                      ; preds = %for.inc120, %if.then102
  %130 = load [2 x i16]*, [2 x i16]** %reserved, align 8, !dbg !5095
  %131 = load i32, i32* %i, align 4, !dbg !5096
  %idxprom104 = sext i32 %131 to i64, !dbg !5095
  %arrayidx105 = getelementptr [2 x i16], [2 x i16]* %130, i64 %idxprom104, !dbg !5095
  %arrayidx106 = getelementptr [2 x i16], [2 x i16]* %arrayidx105, i64 0, i64 0, !dbg !5095
  %132 = load i16, i16* %arrayidx106, align 2, !dbg !5095
  %conv107 = sext i16 %132 to i32, !dbg !5095
  %cmp108 = icmp ne i32 %conv107, -1, !dbg !5097
  br i1 %cmp108, label %for.body110, label %for.end122, !dbg !5098

for.body110:                                      ; preds = %for.cond103
  %133 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5099
  %channels_mask111 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %133, i32 0, i32 15, !dbg !5100
  %134 = load i64*, i64** %channels_mask111, align 8, !dbg !5100
  %135 = load [2 x i16]*, [2 x i16]** %reserved, align 8, !dbg !5101
  %136 = load i32, i32* %i, align 4, !dbg !5102
  %idxprom112 = sext i32 %136 to i64, !dbg !5101
  %arrayidx113 = getelementptr [2 x i16], [2 x i16]* %135, i64 %idxprom112, !dbg !5101
  %arrayidx114 = getelementptr [2 x i16], [2 x i16]* %arrayidx113, i64 0, i64 0, !dbg !5101
  %137 = load i16, i16* %arrayidx114, align 2, !dbg !5101
  %conv115 = sext i16 %137 to i32, !dbg !5101
  %138 = load [2 x i16]*, [2 x i16]** %reserved, align 8, !dbg !5103
  %139 = load i32, i32* %i, align 4, !dbg !5104
  %idxprom116 = sext i32 %139 to i64, !dbg !5103
  %arrayidx117 = getelementptr [2 x i16], [2 x i16]* %138, i64 %idxprom116, !dbg !5103
  %arrayidx118 = getelementptr [2 x i16], [2 x i16]* %arrayidx117, i64 0, i64 1, !dbg !5103
  %140 = load i16, i16* %arrayidx118, align 2, !dbg !5103
  %conv119 = sext i16 %140 to i32, !dbg !5103
  store i64* %134, i64** %map.addr.i320, align 8
  store i32 %conv115, i32* %start.addr.i321, align 4
  store i32 %conv119, i32* %nbits.addr.i322, align 4
  %141 = load i32, i32* %nbits.addr.i322, align 4, !dbg !5105
  %142 = call i1 @llvm.is.constant.i32(i32 %141) #10, !dbg !5107
  br i1 %142, label %land.lhs.true.i324, label %if.else.i328, !dbg !5108

land.lhs.true.i324:                               ; preds = %for.body110
  %143 = load i32, i32* %nbits.addr.i322, align 4, !dbg !5109
  %cmp.i323 = icmp eq i32 %143, 1, !dbg !5110
  br i1 %cmp.i323, label %if.then.i326, label %if.else.i328, !dbg !5111

if.then.i326:                                     ; preds = %land.lhs.true.i324
  %144 = load i32, i32* %start.addr.i321, align 4, !dbg !5112
  %conv.i325 = zext i32 %144 to i64, !dbg !5112
  %145 = load i64*, i64** %map.addr.i320, align 8, !dbg !5113
  call void @__clear_bit(i64 %conv.i325, i64* %145) #13, !dbg !5114
  br label %bitmap_clear.exit, !dbg !5114

if.else.i328:                                     ; preds = %land.lhs.true.i324, %for.body110
  %146 = load i32, i32* %start.addr.i321, align 4, !dbg !5115
  %and.i327 = and i32 %146, 7, !dbg !5117
  %147 = call i1 @llvm.is.constant.i32(i32 %and.i327) #10, !dbg !5118
  br i1 %147, label %land.lhs.true1.i331, label %if.else14.i343, !dbg !5119

land.lhs.true1.i331:                              ; preds = %if.else.i328
  %148 = load i32, i32* %start.addr.i321, align 4, !dbg !5120
  %and2.i329 = and i32 %148, 7, !dbg !5120
  %cmp3.i330 = icmp eq i32 %and2.i329, 0, !dbg !5120
  br i1 %cmp3.i330, label %land.lhs.true5.i333, label %if.else14.i343, !dbg !5121

land.lhs.true5.i333:                              ; preds = %land.lhs.true1.i331
  %149 = load i32, i32* %nbits.addr.i322, align 4, !dbg !5122
  %and6.i332 = and i32 %149, 7, !dbg !5123
  %150 = call i1 @llvm.is.constant.i32(i32 %and6.i332) #10, !dbg !5124
  br i1 %150, label %land.lhs.true7.i336, label %if.else14.i343, !dbg !5125

land.lhs.true7.i336:                              ; preds = %land.lhs.true5.i333
  %151 = load i32, i32* %nbits.addr.i322, align 4, !dbg !5126
  %and8.i334 = and i32 %151, 7, !dbg !5126
  %cmp9.i335 = icmp eq i32 %and8.i334, 0, !dbg !5126
  br i1 %cmp9.i335, label %if.then11.i342, label %if.else14.i343, !dbg !5127

if.then11.i342:                                   ; preds = %land.lhs.true7.i336
  %152 = load i64*, i64** %map.addr.i320, align 8, !dbg !5128
  %153 = bitcast i64* %152 to i8*, !dbg !5129
  %154 = load i32, i32* %start.addr.i321, align 4, !dbg !5130
  %div.i337 = udiv i32 %154, 8, !dbg !5131
  %idx.ext.i338 = zext i32 %div.i337 to i64, !dbg !5132
  %add.ptr.i339 = getelementptr i8, i8* %153, i64 %idx.ext.i338, !dbg !5132
  %155 = load i32, i32* %nbits.addr.i322, align 4, !dbg !5133
  %div12.i340 = udiv i32 %155, 8, !dbg !5134
  %conv13.i341 = zext i32 %div12.i340 to i64, !dbg !5133
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr.i339, i8 0, i64 %conv13.i341, i1 false) #10, !dbg !5135
  br label %if.end.i344, !dbg !5135

if.else14.i343:                                   ; preds = %land.lhs.true7.i336, %land.lhs.true5.i333, %land.lhs.true1.i331, %if.else.i328
  %156 = load i64*, i64** %map.addr.i320, align 8, !dbg !5136
  %157 = load i32, i32* %start.addr.i321, align 4, !dbg !5137
  %158 = load i32, i32* %nbits.addr.i322, align 4, !dbg !5138
  call void @__bitmap_clear(i64* %156, i32 %157, i32 %158) #13, !dbg !5139
  br label %if.end.i344

if.end.i344:                                      ; preds = %if.else14.i343, %if.then11.i342
  br label %bitmap_clear.exit

bitmap_clear.exit:                                ; preds = %if.then.i326, %if.end.i344
  br label %for.inc120, !dbg !5140

for.inc120:                                       ; preds = %bitmap_clear.exit
  %159 = load i32, i32* %i, align 4, !dbg !5141
  %inc121 = add i32 %159, 1, !dbg !5141
  store i32 %inc121, i32* %i, align 4, !dbg !5141
  br label %for.cond103, !dbg !5142, !llvm.loop !5143

for.end122:                                       ; preds = %for.cond103
  br label %if.end123, !dbg !5145

if.end123:                                        ; preds = %for.end122, %if.end99
  br label %if.end124, !dbg !5146

if.end124:                                        ; preds = %if.end123, %if.end77
  store i32 0, i32* %i, align 4, !dbg !5147
  br label %for.cond125, !dbg !5149

for.cond125:                                      ; preds = %for.inc135, %if.end124
  %160 = load i32, i32* %i, align 4, !dbg !5150
  %161 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5152
  %num_slots126 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %161, i32 0, i32 8, !dbg !5153
  %162 = load i32, i32* %num_slots126, align 4, !dbg !5153
  %cmp127 = icmp ult i32 %160, %162, !dbg !5154
  br i1 %cmp127, label %for.body129, label %for.end137, !dbg !5155

for.body129:                                      ; preds = %for.cond125
  %163 = load i32, i32* %i, align 4, !dbg !5156
  %conv130 = sext i32 %163 to i64, !dbg !5156
  %164 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5159
  %slot_inuse131 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %164, i32 0, i32 14, !dbg !5160
  %165 = load i64*, i64** %slot_inuse131, align 8, !dbg !5160
  %call132 = call zeroext i1 @test_bit(i64 %conv130, i64* %165) #11, !dbg !5161
  br i1 %call132, label %if.end134, label %if.then133, !dbg !5162

if.then133:                                       ; preds = %for.body129
  %166 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5163
  %167 = load i32, i32* %i, align 4, !dbg !5164
  call void @edma_write_slot(%struct.edma_cc* %166, i32 %167, %struct.edmacc_param* @dummy_paramset) #11, !dbg !5165
  br label %if.end134, !dbg !5165

if.end134:                                        ; preds = %if.then133, %for.body129
  br label %for.inc135, !dbg !5166

for.inc135:                                       ; preds = %if.end134
  %168 = load i32, i32* %i, align 4, !dbg !5167
  %inc136 = add i32 %168, 1, !dbg !5167
  store i32 %inc136, i32* %i, align 4, !dbg !5167
  br label %for.cond125, !dbg !5168, !llvm.loop !5169

for.end137:                                       ; preds = %for.cond125
  %169 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5171
  %call138 = call i32 @platform_get_irq_byname(%struct.platform_device* %169, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0)) #11, !dbg !5172
  store i32 %call138, i32* %irq, align 4, !dbg !5173
  %170 = load i32, i32* %irq, align 4, !dbg !5174
  %cmp139 = icmp slt i32 %170, 0, !dbg !5176
  br i1 %cmp139, label %land.lhs.true141, label %if.end145, !dbg !5177

land.lhs.true141:                                 ; preds = %for.end137
  %171 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !5178
  %tobool142 = icmp ne %struct.device_node* %171, null, !dbg !5178
  br i1 %tobool142, label %if.then143, label %if.end145, !dbg !5179

if.then143:                                       ; preds = %land.lhs.true141
  %172 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !5180
  %call144 = call i32 @irq_of_parse_and_map(%struct.device_node* %172, i32 0) #11, !dbg !5181
  store i32 %call144, i32* %irq, align 4, !dbg !5182
  br label %if.end145, !dbg !5183

if.end145:                                        ; preds = %if.then143, %land.lhs.true141, %for.end137
  %173 = load i32, i32* %irq, align 4, !dbg !5184
  %cmp146 = icmp sge i32 %173, 0, !dbg !5186
  br i1 %cmp146, label %if.then148, label %if.end155, !dbg !5187

if.then148:                                       ; preds = %if.end145
  %174 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5188
  %175 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5190
  %call149 = call i8* @dev_name(%struct.device* %175) #11, !dbg !5191
  %call150 = call noalias i8* (%struct.device*, i32, i8*, ...) @devm_kasprintf(%struct.device* %174, i32 3264, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* %call149) #11, !dbg !5192
  store i8* %call150, i8** %irq_name, align 8, !dbg !5193
  %176 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5194
  %177 = load i32, i32* %irq, align 4, !dbg !5195
  %178 = load i8*, i8** %irq_name, align 8, !dbg !5196
  %179 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5197
  %180 = bitcast %struct.edma_cc* %179 to i8*, !dbg !5197
  %call151 = call i32 @devm_request_irq(%struct.device* %176, i32 %177, i32 (i32, i8*)* @dma_irq_handler, i64 0, i8* %178, i8* %180) #11, !dbg !5198
  store i32 %call151, i32* %ret, align 4, !dbg !5199
  %181 = load i32, i32* %ret, align 4, !dbg !5200
  %tobool152 = icmp ne i32 %181, 0, !dbg !5200
  br i1 %tobool152, label %if.then153, label %if.end154, !dbg !5202

if.then153:                                       ; preds = %if.then148
  %182 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5203
  %183 = load i32, i32* %irq, align 4, !dbg !5203
  %184 = load i32, i32* %ret, align 4, !dbg !5203
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %182, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i32 %183, i32 %184) #12, !dbg !5203
  br label %err_disable_pm, !dbg !5205

if.end154:                                        ; preds = %if.then148
  %185 = load i32, i32* %irq, align 4, !dbg !5206
  %186 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5207
  %ccint = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %186, i32 0, i32 12, !dbg !5208
  store i32 %185, i32* %ccint, align 4, !dbg !5209
  br label %if.end155, !dbg !5210

if.end155:                                        ; preds = %if.end154, %if.end145
  %187 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5211
  %call156 = call i32 @platform_get_irq_byname(%struct.platform_device* %187, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !5212
  store i32 %call156, i32* %irq, align 4, !dbg !5213
  %188 = load i32, i32* %irq, align 4, !dbg !5214
  %cmp157 = icmp slt i32 %188, 0, !dbg !5216
  br i1 %cmp157, label %land.lhs.true159, label %if.end163, !dbg !5217

land.lhs.true159:                                 ; preds = %if.end155
  %189 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !5218
  %tobool160 = icmp ne %struct.device_node* %189, null, !dbg !5218
  br i1 %tobool160, label %if.then161, label %if.end163, !dbg !5219

if.then161:                                       ; preds = %land.lhs.true159
  %190 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !5220
  %call162 = call i32 @irq_of_parse_and_map(%struct.device_node* %190, i32 2) #11, !dbg !5221
  store i32 %call162, i32* %irq, align 4, !dbg !5222
  br label %if.end163, !dbg !5223

if.end163:                                        ; preds = %if.then161, %land.lhs.true159, %if.end155
  %191 = load i32, i32* %irq, align 4, !dbg !5224
  %cmp164 = icmp sge i32 %191, 0, !dbg !5226
  br i1 %cmp164, label %if.then166, label %if.end173, !dbg !5227

if.then166:                                       ; preds = %if.end163
  %192 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5228
  %193 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5230
  %call167 = call i8* @dev_name(%struct.device* %193) #11, !dbg !5231
  %call168 = call noalias i8* (%struct.device*, i32, i8*, ...) @devm_kasprintf(%struct.device* %192, i32 3264, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i8* %call167) #11, !dbg !5232
  store i8* %call168, i8** %irq_name, align 8, !dbg !5233
  %194 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5234
  %195 = load i32, i32* %irq, align 4, !dbg !5235
  %196 = load i8*, i8** %irq_name, align 8, !dbg !5236
  %197 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5237
  %198 = bitcast %struct.edma_cc* %197 to i8*, !dbg !5237
  %call169 = call i32 @devm_request_irq(%struct.device* %194, i32 %195, i32 (i32, i8*)* @dma_ccerr_handler, i64 0, i8* %196, i8* %198) #11, !dbg !5238
  store i32 %call169, i32* %ret, align 4, !dbg !5239
  %199 = load i32, i32* %ret, align 4, !dbg !5240
  %tobool170 = icmp ne i32 %199, 0, !dbg !5240
  br i1 %tobool170, label %if.then171, label %if.end172, !dbg !5242

if.then171:                                       ; preds = %if.then166
  %200 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5243
  %201 = load i32, i32* %irq, align 4, !dbg !5243
  %202 = load i32, i32* %ret, align 4, !dbg !5243
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %200, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0), i32 %201, i32 %202) #12, !dbg !5243
  br label %err_disable_pm, !dbg !5245

if.end172:                                        ; preds = %if.then166
  %203 = load i32, i32* %irq, align 4, !dbg !5246
  %204 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5247
  %ccerrint = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %204, i32 0, i32 13, !dbg !5248
  store i32 %203, i32* %ccerrint, align 8, !dbg !5249
  br label %if.end173, !dbg !5250

if.end173:                                        ; preds = %if.end172, %if.end163
  %205 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5251
  %call174 = call i32 @edma_alloc_slot(%struct.edma_cc* %205, i32 -1) #11, !dbg !5252
  %206 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5253
  %dummy_slot = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %206, i32 0, i32 20, !dbg !5254
  store i32 %call174, i32* %dummy_slot, align 8, !dbg !5255
  %207 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5256
  %dummy_slot175 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %207, i32 0, i32 20, !dbg !5258
  %208 = load i32, i32* %dummy_slot175, align 8, !dbg !5258
  %cmp176 = icmp slt i32 %208, 0, !dbg !5259
  br i1 %cmp176, label %if.then178, label %if.end180, !dbg !5260

if.then178:                                       ; preds = %if.end173
  %209 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5261
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %209, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !5261
  %210 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5263
  %dummy_slot179 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %210, i32 0, i32 20, !dbg !5264
  %211 = load i32, i32* %dummy_slot179, align 8, !dbg !5264
  store i32 %211, i32* %ret, align 4, !dbg !5265
  br label %err_disable_pm, !dbg !5266

if.end180:                                        ; preds = %if.end173
  %212 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5267
  %queue_priority_mapping181 = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %212, i32 0, i32 3, !dbg !5268
  %213 = load [2 x i8]*, [2 x i8]** %queue_priority_mapping181, align 8, !dbg !5268
  store [2 x i8]* %213, [2 x i8]** %queue_priority_mapping, align 8, !dbg !5269
  %214 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5270
  %legacy_mode182 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %214, i32 0, i32 4, !dbg !5272
  %215 = load i8, i8* %legacy_mode182, align 4, !dbg !5272
  %tobool183 = trunc i8 %215 to i1, !dbg !5272
  br i1 %tobool183, label %if.end253, label %if.then184, !dbg !5273

if.then184:                                       ; preds = %if.end180
  call void @llvm.dbg.declare(metadata i32* %lowest_priority, metadata !5274, metadata !DIExpression()), !dbg !5276
  store i32 0, i32* %lowest_priority, align 4, !dbg !5276
  call void @llvm.dbg.declare(metadata i32* %array_max, metadata !5277, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args* %tc_args, metadata !5279, metadata !DIExpression()), !dbg !5286
  %216 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5287
  %217 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5288
  %num_tc = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %217, i32 0, i32 9, !dbg !5289
  %218 = load i32, i32* %num_tc, align 8, !dbg !5289
  %conv185 = zext i32 %218 to i64, !dbg !5288
  %call186 = call i8* @devm_kcalloc(%struct.device* %216, i64 %conv185, i64 16, i32 3264) #11, !dbg !5290
  %219 = bitcast i8* %call186 to %struct.edma_tc*, !dbg !5290
  %220 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5291
  %tc_list = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %220, i32 0, i32 19, !dbg !5292
  store %struct.edma_tc* %219, %struct.edma_tc** %tc_list, align 8, !dbg !5293
  %221 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5294
  %tc_list187 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %221, i32 0, i32 19, !dbg !5296
  %222 = load %struct.edma_tc*, %struct.edma_tc** %tc_list187, align 8, !dbg !5296
  %tobool188 = icmp ne %struct.edma_tc* %222, null, !dbg !5294
  br i1 %tobool188, label %if.end190, label %if.then189, !dbg !5297

if.then189:                                       ; preds = %if.then184
  store i32 -12, i32* %ret, align 4, !dbg !5298
  br label %err_reg1, !dbg !5300

if.end190:                                        ; preds = %if.then184
  store i32 0, i32* %i, align 4, !dbg !5301
  br label %for.cond191, !dbg !5303

for.cond191:                                      ; preds = %for.inc227, %if.end190
  %223 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !5304
  %224 = load i32, i32* %i, align 4, !dbg !5307
  %call192 = call i32 @of_parse_phandle_with_fixed_args(%struct.device_node* %223, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i32 1, i32 %224, %struct.of_phandle_args* %tc_args) #11, !dbg !5308
  store i32 %call192, i32* %ret, align 4, !dbg !5309
  %225 = load i32, i32* %ret, align 4, !dbg !5310
  %tobool193 = icmp ne i32 %225, 0, !dbg !5310
  br i1 %tobool193, label %if.then198, label %lor.lhs.false194, !dbg !5312

lor.lhs.false194:                                 ; preds = %for.cond191
  %226 = load i32, i32* %i, align 4, !dbg !5313
  %227 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5314
  %num_tc195 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %227, i32 0, i32 9, !dbg !5315
  %228 = load i32, i32* %num_tc195, align 8, !dbg !5315
  %cmp196 = icmp eq i32 %226, %228, !dbg !5316
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !5317

if.then198:                                       ; preds = %lor.lhs.false194, %for.cond191
  br label %for.end229, !dbg !5318

if.end199:                                        ; preds = %lor.lhs.false194
  %np = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %tc_args, i32 0, i32 0, !dbg !5319
  %229 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5319
  %230 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5320
  %tc_list200 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %230, i32 0, i32 19, !dbg !5321
  %231 = load %struct.edma_tc*, %struct.edma_tc** %tc_list200, align 8, !dbg !5321
  %232 = load i32, i32* %i, align 4, !dbg !5322
  %idxprom201 = sext i32 %232 to i64, !dbg !5320
  %arrayidx202 = getelementptr %struct.edma_tc, %struct.edma_tc* %231, i64 %idxprom201, !dbg !5320
  %node203 = getelementptr inbounds %struct.edma_tc, %struct.edma_tc* %arrayidx202, i32 0, i32 0, !dbg !5323
  store %struct.device_node* %229, %struct.device_node** %node203, align 8, !dbg !5324
  %233 = load i32, i32* %i, align 4, !dbg !5325
  %conv204 = trunc i32 %233 to i16, !dbg !5325
  %234 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5326
  %tc_list205 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %234, i32 0, i32 19, !dbg !5327
  %235 = load %struct.edma_tc*, %struct.edma_tc** %tc_list205, align 8, !dbg !5327
  %236 = load i32, i32* %i, align 4, !dbg !5328
  %idxprom206 = sext i32 %236 to i64, !dbg !5326
  %arrayidx207 = getelementptr %struct.edma_tc, %struct.edma_tc* %235, i64 %idxprom206, !dbg !5326
  %id208 = getelementptr inbounds %struct.edma_tc, %struct.edma_tc* %arrayidx207, i32 0, i32 1, !dbg !5329
  store i16 %conv204, i16* %id208, align 8, !dbg !5330
  %args = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %tc_args, i32 0, i32 2, !dbg !5331
  %arrayidx209 = getelementptr [16 x i32], [16 x i32]* %args, i64 0, i64 0, !dbg !5332
  %237 = load i32, i32* %arrayidx209, align 4, !dbg !5332
  %conv210 = trunc i32 %237 to i8, !dbg !5332
  %238 = load [2 x i8]*, [2 x i8]** %queue_priority_mapping, align 8, !dbg !5333
  %239 = load i32, i32* %i, align 4, !dbg !5334
  %idxprom211 = sext i32 %239 to i64, !dbg !5333
  %arrayidx212 = getelementptr [2 x i8], [2 x i8]* %238, i64 %idxprom211, !dbg !5333
  %arrayidx213 = getelementptr [2 x i8], [2 x i8]* %arrayidx212, i64 0, i64 1, !dbg !5333
  store i8 %conv210, i8* %arrayidx213, align 1, !dbg !5335
  %240 = load [2 x i8]*, [2 x i8]** %queue_priority_mapping, align 8, !dbg !5336
  %241 = load i32, i32* %i, align 4, !dbg !5338
  %idxprom214 = sext i32 %241 to i64, !dbg !5336
  %arrayidx215 = getelementptr [2 x i8], [2 x i8]* %240, i64 %idxprom214, !dbg !5336
  %arrayidx216 = getelementptr [2 x i8], [2 x i8]* %arrayidx215, i64 0, i64 1, !dbg !5336
  %242 = load i8, i8* %arrayidx216, align 1, !dbg !5336
  %conv217 = sext i8 %242 to i32, !dbg !5336
  %243 = load i32, i32* %lowest_priority, align 4, !dbg !5339
  %cmp218 = icmp sgt i32 %conv217, %243, !dbg !5340
  br i1 %cmp218, label %if.then220, label %if.end226, !dbg !5341

if.then220:                                       ; preds = %if.end199
  %244 = load [2 x i8]*, [2 x i8]** %queue_priority_mapping, align 8, !dbg !5342
  %245 = load i32, i32* %i, align 4, !dbg !5344
  %idxprom221 = sext i32 %245 to i64, !dbg !5342
  %arrayidx222 = getelementptr [2 x i8], [2 x i8]* %244, i64 %idxprom221, !dbg !5342
  %arrayidx223 = getelementptr [2 x i8], [2 x i8]* %arrayidx222, i64 0, i64 1, !dbg !5342
  %246 = load i8, i8* %arrayidx223, align 1, !dbg !5342
  %conv224 = sext i8 %246 to i32, !dbg !5342
  store i32 %conv224, i32* %lowest_priority, align 4, !dbg !5345
  %247 = load i32, i32* %i, align 4, !dbg !5346
  %248 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5347
  %default_queue225 = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %248, i32 0, i32 0, !dbg !5348
  store i32 %247, i32* %default_queue225, align 8, !dbg !5349
  br label %if.end226, !dbg !5350

if.end226:                                        ; preds = %if.then220, %if.end199
  br label %for.inc227, !dbg !5351

for.inc227:                                       ; preds = %if.end226
  %249 = load i32, i32* %i, align 4, !dbg !5352
  %inc228 = add i32 %249, 1, !dbg !5352
  store i32 %inc228, i32* %i, align 4, !dbg !5352
  br label %for.cond191, !dbg !5353, !llvm.loop !5354

for.end229:                                       ; preds = %if.then198
  %250 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5357
  %num_channels230 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %250, i32 0, i32 5, !dbg !5357
  %251 = load i32, i32* %num_channels230, align 8, !dbg !5357
  %conv231 = zext i32 %251 to i64, !dbg !5357
  %add232 = add i64 %conv231, 32, !dbg !5357
  %sub233 = sub i64 %add232, 1, !dbg !5357
  %div234 = udiv i64 %sub233, 32, !dbg !5357
  %conv235 = trunc i64 %div234 to i32, !dbg !5357
  store i32 %conv235, i32* %array_max, align 4, !dbg !5358
  %252 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !5359
  %253 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5360
  %channels_mask236 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %253, i32 0, i32 15, !dbg !5361
  %254 = load i64*, i64** %channels_mask236, align 8, !dbg !5361
  %255 = bitcast i64* %254 to i32*, !dbg !5362
  %256 = load i32, i32* %array_max, align 4, !dbg !5363
  %conv237 = zext i32 %256 to i64, !dbg !5363
  %call238 = call i32 @of_property_read_variable_u32_array(%struct.device_node* %252, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i32* %255, i64 1, i64 %conv237) #11, !dbg !5364
  store i32 %call238, i32* %ret, align 4, !dbg !5365
  %257 = load i32, i32* %ret, align 4, !dbg !5366
  %cmp239 = icmp sgt i32 %257, 0, !dbg !5368
  br i1 %cmp239, label %land.lhs.true241, label %if.else, !dbg !5369

land.lhs.true241:                                 ; preds = %for.end229
  %258 = load i32, i32* %ret, align 4, !dbg !5370
  %259 = load i32, i32* %array_max, align 4, !dbg !5371
  %cmp242 = icmp ne i32 %258, %259, !dbg !5372
  br i1 %cmp242, label %if.then244, label %if.else, !dbg !5373

if.then244:                                       ; preds = %land.lhs.true241
  %260 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5374
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %260, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0)) #12, !dbg !5374
  br label %if.end252, !dbg !5374

if.else:                                          ; preds = %land.lhs.true241, %for.end229
  %261 = load i32, i32* %ret, align 4, !dbg !5375
  %cmp245 = icmp eq i32 %261, -75, !dbg !5377
  br i1 %cmp245, label %if.then250, label %lor.lhs.false247, !dbg !5378

lor.lhs.false247:                                 ; preds = %if.else
  %262 = load i32, i32* %ret, align 4, !dbg !5379
  %cmp248 = icmp eq i32 %262, -61, !dbg !5380
  br i1 %cmp248, label %if.then250, label %if.end251, !dbg !5381

if.then250:                                       ; preds = %lor.lhs.false247, %if.else
  %263 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5382
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %263, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !5382
  br label %if.end251, !dbg !5382

if.end251:                                        ; preds = %if.then250, %lor.lhs.false247
  br label %if.end252

if.end252:                                        ; preds = %if.end251, %if.then244
  br label %if.end253, !dbg !5383

if.end253:                                        ; preds = %if.end252, %if.end180
  store i32 0, i32* %i, align 4, !dbg !5384
  br label %for.cond254, !dbg !5386

for.cond254:                                      ; preds = %for.inc270, %if.end253
  %264 = load [2 x i8]*, [2 x i8]** %queue_priority_mapping, align 8, !dbg !5387
  %265 = load i32, i32* %i, align 4, !dbg !5389
  %idxprom255 = sext i32 %265 to i64, !dbg !5387
  %arrayidx256 = getelementptr [2 x i8], [2 x i8]* %264, i64 %idxprom255, !dbg !5387
  %arrayidx257 = getelementptr [2 x i8], [2 x i8]* %arrayidx256, i64 0, i64 0, !dbg !5387
  %266 = load i8, i8* %arrayidx257, align 1, !dbg !5387
  %conv258 = sext i8 %266 to i32, !dbg !5387
  %cmp259 = icmp ne i32 %conv258, -1, !dbg !5390
  br i1 %cmp259, label %for.body261, label %for.end272, !dbg !5391

for.body261:                                      ; preds = %for.cond254
  %267 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5392
  %268 = load [2 x i8]*, [2 x i8]** %queue_priority_mapping, align 8, !dbg !5393
  %269 = load i32, i32* %i, align 4, !dbg !5394
  %idxprom262 = sext i32 %269 to i64, !dbg !5393
  %arrayidx263 = getelementptr [2 x i8], [2 x i8]* %268, i64 %idxprom262, !dbg !5393
  %arrayidx264 = getelementptr [2 x i8], [2 x i8]* %arrayidx263, i64 0, i64 0, !dbg !5393
  %270 = load i8, i8* %arrayidx264, align 1, !dbg !5393
  %conv265 = sext i8 %270 to i32, !dbg !5393
  %271 = load [2 x i8]*, [2 x i8]** %queue_priority_mapping, align 8, !dbg !5395
  %272 = load i32, i32* %i, align 4, !dbg !5396
  %idxprom266 = sext i32 %272 to i64, !dbg !5395
  %arrayidx267 = getelementptr [2 x i8], [2 x i8]* %271, i64 %idxprom266, !dbg !5395
  %arrayidx268 = getelementptr [2 x i8], [2 x i8]* %arrayidx267, i64 0, i64 1, !dbg !5395
  %273 = load i8, i8* %arrayidx268, align 1, !dbg !5395
  %conv269 = sext i8 %273 to i32, !dbg !5395
  call void @edma_assign_priority_to_queue(%struct.edma_cc* %267, i32 %conv265, i32 %conv269) #11, !dbg !5397
  br label %for.inc270, !dbg !5397

for.inc270:                                       ; preds = %for.body261
  %274 = load i32, i32* %i, align 4, !dbg !5398
  %inc271 = add i32 %274, 1, !dbg !5398
  store i32 %inc271, i32* %i, align 4, !dbg !5398
  br label %for.cond254, !dbg !5399, !llvm.loop !5400

for.end272:                                       ; preds = %for.cond254
  %275 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5402
  call void @edma_write_array2(%struct.edma_cc* %275, i32 832, i32 0, i32 0, i32 0) #11, !dbg !5403
  %276 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5404
  call void @edma_write_array2(%struct.edma_cc* %276, i32 832, i32 0, i32 1, i32 0) #11, !dbg !5405
  %277 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5406
  call void @edma_write_array(%struct.edma_cc* %277, i32 896, i32 0, i32 0) #11, !dbg !5407
  %278 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5408
  %279 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5409
  %info273 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %279, i32 0, i32 1, !dbg !5410
  store %struct.edma_soc_info* %278, %struct.edma_soc_info** %info273, align 8, !dbg !5411
  %280 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5412
  %281 = load i8, i8* %legacy_mode, align 1, !dbg !5413
  %tobool274 = trunc i8 %281 to i1, !dbg !5413
  call void @edma_dma_init(%struct.edma_cc* %280, i1 zeroext %tobool274) #11, !dbg !5414
  store i32 0, i32* %i, align 4, !dbg !5415
  br label %for.cond275, !dbg !5417

for.cond275:                                      ; preds = %for.inc293, %for.end272
  %282 = load i32, i32* %i, align 4, !dbg !5418
  %283 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5420
  %num_channels276 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %283, i32 0, i32 5, !dbg !5421
  %284 = load i32, i32* %num_channels276, align 8, !dbg !5421
  %cmp277 = icmp ult i32 %282, %284, !dbg !5422
  br i1 %cmp277, label %for.body279, label %for.end295, !dbg !5423

for.body279:                                      ; preds = %for.cond275
  %285 = load i32, i32* %i, align 4, !dbg !5424
  %conv280 = sext i32 %285 to i64, !dbg !5424
  %286 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5427
  %channels_mask281 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %286, i32 0, i32 15, !dbg !5428
  %287 = load i64*, i64** %channels_mask281, align 8, !dbg !5428
  %call282 = call zeroext i1 @test_bit(i64 %conv280, i64* %287) #11, !dbg !5429
  br i1 %call282, label %if.end284, label %if.then283, !dbg !5430

if.then283:                                       ; preds = %for.body279
  br label %for.inc293, !dbg !5431

if.end284:                                        ; preds = %for.body279
  %288 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5432
  %slave_chans285 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %288, i32 0, i32 18, !dbg !5433
  %289 = load %struct.edma_chan*, %struct.edma_chan** %slave_chans285, align 8, !dbg !5433
  %290 = load i32, i32* %i, align 4, !dbg !5434
  %idxprom286 = sext i32 %290 to i64, !dbg !5432
  %arrayidx287 = getelementptr %struct.edma_chan, %struct.edma_chan* %289, i64 %idxprom286, !dbg !5432
  %291 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5435
  %default_queue288 = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %291, i32 0, i32 0, !dbg !5436
  %292 = load i32, i32* %default_queue288, align 8, !dbg !5436
  call void @edma_assign_channel_eventq(%struct.edma_chan* %arrayidx287, i32 %292) #11, !dbg !5437
  %293 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5438
  %slave_chans289 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %293, i32 0, i32 18, !dbg !5439
  %294 = load %struct.edma_chan*, %struct.edma_chan** %slave_chans289, align 8, !dbg !5439
  %295 = load i32, i32* %i, align 4, !dbg !5440
  %idxprom290 = sext i32 %295 to i64, !dbg !5438
  %arrayidx291 = getelementptr %struct.edma_chan, %struct.edma_chan* %294, i64 %idxprom290, !dbg !5438
  %296 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5441
  %dummy_slot292 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %296, i32 0, i32 20, !dbg !5442
  %297 = load i32, i32* %dummy_slot292, align 8, !dbg !5442
  call void @edma_set_chmap(%struct.edma_chan* %arrayidx291, i32 %297) #11, !dbg !5443
  br label %for.inc293, !dbg !5444

for.inc293:                                       ; preds = %if.end284, %if.then283
  %298 = load i32, i32* %i, align 4, !dbg !5445
  %inc294 = add i32 %298, 1, !dbg !5445
  store i32 %inc294, i32* %i, align 4, !dbg !5445
  br label %for.cond275, !dbg !5446, !llvm.loop !5447

for.end295:                                       ; preds = %for.cond275
  %299 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5449
  %slave_map = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %299, i32 0, i32 5, !dbg !5450
  %300 = load %struct.dma_slave_map*, %struct.dma_slave_map** %slave_map, align 8, !dbg !5450
  %301 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5451
  %dma_slave = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %301, i32 0, i32 16, !dbg !5452
  %filter = getelementptr inbounds %struct.dma_device, %struct.dma_device* %dma_slave, i32 0, i32 5, !dbg !5453
  %map = getelementptr inbounds %struct.dma_filter, %struct.dma_filter* %filter, i32 0, i32 2, !dbg !5454
  store %struct.dma_slave_map* %300, %struct.dma_slave_map** %map, align 8, !dbg !5455
  %302 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5456
  %slavecnt = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %302, i32 0, i32 6, !dbg !5457
  %303 = load i32, i32* %slavecnt, align 8, !dbg !5457
  %304 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5458
  %dma_slave296 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %304, i32 0, i32 16, !dbg !5459
  %filter297 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %dma_slave296, i32 0, i32 5, !dbg !5460
  %mapcnt = getelementptr inbounds %struct.dma_filter, %struct.dma_filter* %filter297, i32 0, i32 1, !dbg !5461
  store i32 %303, i32* %mapcnt, align 8, !dbg !5462
  %305 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5463
  %dma_slave298 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %305, i32 0, i32 16, !dbg !5464
  %filter299 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %dma_slave298, i32 0, i32 5, !dbg !5465
  %fn = getelementptr inbounds %struct.dma_filter, %struct.dma_filter* %filter299, i32 0, i32 0, !dbg !5466
  store i1 (%struct.dma_chan*, i8*)* @edma_filter_fn, i1 (%struct.dma_chan*, i8*)** %fn, align 8, !dbg !5467
  %306 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5468
  %dma_slave300 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %306, i32 0, i32 16, !dbg !5469
  %call301 = call i32 @dma_async_device_register(%struct.dma_device* %dma_slave300) #11, !dbg !5470
  store i32 %call301, i32* %ret, align 4, !dbg !5471
  %307 = load i32, i32* %ret, align 4, !dbg !5472
  %tobool302 = icmp ne i32 %307, 0, !dbg !5472
  br i1 %tobool302, label %if.then303, label %if.end304, !dbg !5474

if.then303:                                       ; preds = %for.end295
  %308 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5475
  %309 = load i32, i32* %ret, align 4, !dbg !5475
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %308, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i64 0, i64 0), i32 %309) #12, !dbg !5475
  br label %err_reg1, !dbg !5477

if.end304:                                        ; preds = %for.end295
  %310 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5478
  %dma_memcpy = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %310, i32 0, i32 17, !dbg !5480
  %311 = load %struct.dma_device*, %struct.dma_device** %dma_memcpy, align 8, !dbg !5480
  %tobool305 = icmp ne %struct.dma_device* %311, null, !dbg !5478
  br i1 %tobool305, label %if.then306, label %if.end313, !dbg !5481

if.then306:                                       ; preds = %if.end304
  %312 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5482
  %dma_memcpy307 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %312, i32 0, i32 17, !dbg !5484
  %313 = load %struct.dma_device*, %struct.dma_device** %dma_memcpy307, align 8, !dbg !5484
  %call308 = call i32 @dma_async_device_register(%struct.dma_device* %313) #11, !dbg !5485
  store i32 %call308, i32* %ret, align 4, !dbg !5486
  %314 = load i32, i32* %ret, align 4, !dbg !5487
  %tobool309 = icmp ne i32 %314, 0, !dbg !5487
  br i1 %tobool309, label %if.then310, label %if.end312, !dbg !5489

if.then310:                                       ; preds = %if.then306
  %315 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5490
  %316 = load i32, i32* %ret, align 4, !dbg !5490
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %315, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0), i32 %316) #12, !dbg !5490
  %317 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5492
  %dma_slave311 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %317, i32 0, i32 16, !dbg !5493
  call void @dma_async_device_unregister(%struct.dma_device* %dma_slave311) #11, !dbg !5494
  br label %err_reg1, !dbg !5495

if.end312:                                        ; preds = %if.then306
  br label %if.end313, !dbg !5496

if.end313:                                        ; preds = %if.end312, %if.end304
  %318 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !5497
  %tobool314 = icmp ne %struct.device_node* %318, null, !dbg !5497
  br i1 %tobool314, label %if.then315, label %if.end317, !dbg !5499

if.then315:                                       ; preds = %if.end313
  %319 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !5500
  %320 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5501
  %321 = bitcast %struct.edma_cc* %320 to i8*, !dbg !5501
  %call316 = call i32 @of_dma_controller_register(%struct.device_node* %319, %struct.dma_chan* (%struct.of_phandle_args*, %struct.of_dma*)* @of_edma_xlate, i8* %321) #11, !dbg !5502
  br label %if.end317, !dbg !5502

if.end317:                                        ; preds = %if.then315, %if.end313
  %322 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5503
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %322, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0)) #12, !dbg !5503
  store i32 0, i32* %retval, align 4, !dbg !5504
  br label %return, !dbg !5504

err_reg1:                                         ; preds = %if.then310, %if.then303, %if.then189
  call void @llvm.dbg.label(metadata !5505), !dbg !5506
  %323 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5507
  %324 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5508
  %dummy_slot318 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %324, i32 0, i32 20, !dbg !5509
  %325 = load i32, i32* %dummy_slot318, align 8, !dbg !5509
  call void @edma_free_slot(%struct.edma_cc* %323, i32 %325) #11, !dbg !5510
  br label %err_disable_pm, !dbg !5510

err_disable_pm:                                   ; preds = %err_reg1, %if.then178, %if.then171, %if.then153, %if.then76, %if.then57
  call void @llvm.dbg.label(metadata !5511), !dbg !5512
  %326 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5513
  %call319 = call i32 @pm_runtime_put_sync(%struct.device* %326) #11, !dbg !5514
  %327 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5515
  call void @pm_runtime_disable(%struct.device* %327) #11, !dbg !5516
  %328 = load i32, i32* %ret, align 4, !dbg !5517
  store i32 %328, i32* %retval, align 4, !dbg !5518
  br label %return, !dbg !5518

return:                                           ; preds = %err_disable_pm, %if.end317, %if.then53, %if.then45, %if.then39, %if.then22, %if.then18, %if.then14, %if.then9
  %329 = load i32, i32* %retval, align 4, !dbg !5519
  ret i32 %329, !dbg !5519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_remove(%struct.platform_device* %pdev) #0 !dbg !5520 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %dev = alloca %struct.device*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !5521, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !5523, metadata !DIExpression()), !dbg !5524
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5525
  %dev1 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !5526
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !5524
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !5527, metadata !DIExpression()), !dbg !5528
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5529
  %call = call i8* @dev_get_drvdata(%struct.device* %1) #11, !dbg !5530
  %2 = bitcast i8* %call to %struct.edma_cc*, !dbg !5530
  store %struct.edma_cc* %2, %struct.edma_cc** %ecc, align 8, !dbg !5528
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5531
  %4 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5532
  %ccint = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %4, i32 0, i32 12, !dbg !5533
  %5 = load i32, i32* %ccint, align 4, !dbg !5533
  %6 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5534
  %7 = bitcast %struct.edma_cc* %6 to i8*, !dbg !5534
  call void @devm_free_irq(%struct.device* %3, i32 %5, i8* %7) #11, !dbg !5535
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5536
  %9 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5537
  %ccerrint = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %9, i32 0, i32 13, !dbg !5538
  %10 = load i32, i32* %ccerrint, align 8, !dbg !5538
  %11 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5539
  %12 = bitcast %struct.edma_cc* %11 to i8*, !dbg !5539
  call void @devm_free_irq(%struct.device* %8, i32 %10, i8* %12) #11, !dbg !5540
  %13 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5541
  %dma_slave = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %13, i32 0, i32 16, !dbg !5542
  call void @edma_cleanupp_vchan(%struct.dma_device* %dma_slave) #11, !dbg !5543
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5544
  %of_node = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 23, !dbg !5546
  %15 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !5546
  %tobool = icmp ne %struct.device_node* %15, null, !dbg !5544
  br i1 %tobool, label %if.then, label %if.end, !dbg !5547

if.then:                                          ; preds = %entry
  %16 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5548
  %of_node2 = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 23, !dbg !5549
  %17 = load %struct.device_node*, %struct.device_node** %of_node2, align 8, !dbg !5549
  call void @of_dma_controller_free(%struct.device_node* %17) #11, !dbg !5550
  br label %if.end, !dbg !5550

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5551
  %dma_slave3 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %18, i32 0, i32 16, !dbg !5552
  call void @dma_async_device_unregister(%struct.dma_device* %dma_slave3) #11, !dbg !5553
  %19 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5554
  %dma_memcpy = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %19, i32 0, i32 17, !dbg !5556
  %20 = load %struct.dma_device*, %struct.dma_device** %dma_memcpy, align 8, !dbg !5556
  %tobool4 = icmp ne %struct.dma_device* %20, null, !dbg !5554
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !5557

if.then5:                                         ; preds = %if.end
  %21 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5558
  %dma_memcpy6 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %21, i32 0, i32 17, !dbg !5559
  %22 = load %struct.dma_device*, %struct.dma_device** %dma_memcpy6, align 8, !dbg !5559
  call void @dma_async_device_unregister(%struct.dma_device* %22) #11, !dbg !5560
  br label %if.end7, !dbg !5560

if.end7:                                          ; preds = %if.then5, %if.end
  %23 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5561
  %24 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !5562
  %dummy_slot = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %24, i32 0, i32 20, !dbg !5563
  %25 = load i32, i32* %dummy_slot, align 8, !dbg !5563
  call void @edma_free_slot(%struct.edma_cc* %23, i32 %25) #11, !dbg !5564
  %26 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5565
  %call8 = call i32 @pm_runtime_put_sync(%struct.device* %26) #11, !dbg !5566
  %27 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5567
  call void @pm_runtime_disable(%struct.device* %27) #11, !dbg !5568
  ret i32 0, !dbg !5569
}

; Function Attrs: noredzone
declare dso_local %struct.of_device_id* @of_match_node(%struct.of_device_id*, %struct.device_node*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.edma_soc_info* @edma_setup_info_from_dt(%struct.device* %dev, i1 zeroext %legacy_mode) #0 !dbg !5570 {
entry:
  %retval = alloca %struct.edma_soc_info*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %legacy_mode.addr = alloca i8, align 1
  %info = alloca %struct.edma_soc_info*, align 8
  %prop = alloca %struct.property*, align 8
  %sz = alloca i32, align 4
  %ret = alloca i32, align 4
  %pname = alloca [24 x i8], align 16
  %nelm = alloca i64, align 8
  %memcpy_ch = alloca i32*, align 8
  %pname37 = alloca [29 x i8], align 16
  %tmp = alloca [2 x i32]*, align 8
  %rsv_slots = alloca [2 x i16]*, align 8
  %nelm38 = alloca i64, align 8
  %rsv_info = alloca %struct.edma_rsv_info*, align 8
  %i = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5573, metadata !DIExpression()), !dbg !5574
  %frombool = zext i1 %legacy_mode to i8
  store i8 %frombool, i8* %legacy_mode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %legacy_mode.addr, metadata !5575, metadata !DIExpression()), !dbg !5576
  call void @llvm.dbg.declare(metadata %struct.edma_soc_info** %info, metadata !5577, metadata !DIExpression()), !dbg !5578
  call void @llvm.dbg.declare(metadata %struct.property** %prop, metadata !5579, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.declare(metadata i32* %sz, metadata !5581, metadata !DIExpression()), !dbg !5582
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5583, metadata !DIExpression()), !dbg !5584
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5585
  %call = call i8* @devm_kzalloc(%struct.device* %0, i64 56, i32 3264) #11, !dbg !5586
  %1 = bitcast i8* %call to %struct.edma_soc_info*, !dbg !5586
  store %struct.edma_soc_info* %1, %struct.edma_soc_info** %info, align 8, !dbg !5587
  %2 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5588
  %tobool = icmp ne %struct.edma_soc_info* %2, null, !dbg !5588
  br i1 %tobool, label %if.end, label %if.then, !dbg !5590

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #11, !dbg !5591
  %3 = bitcast i8* %call1 to %struct.edma_soc_info*, !dbg !5591
  store %struct.edma_soc_info* %3, %struct.edma_soc_info** %retval, align 8, !dbg !5592
  br label %return, !dbg !5592

if.end:                                           ; preds = %entry
  %4 = load i8, i8* %legacy_mode.addr, align 1, !dbg !5593
  %tobool2 = trunc i8 %4 to i1, !dbg !5593
  br i1 %tobool2, label %if.then3, label %if.end14, !dbg !5595

if.then3:                                         ; preds = %if.end
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5596
  %of_node = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 23, !dbg !5598
  %6 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !5598
  %call4 = call %struct.property* @of_find_property(%struct.device_node* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i32* %sz) #11, !dbg !5599
  store %struct.property* %call4, %struct.property** %prop, align 8, !dbg !5600
  %7 = load %struct.property*, %struct.property** %prop, align 8, !dbg !5601
  %tobool5 = icmp ne %struct.property* %7, null, !dbg !5601
  br i1 %tobool5, label %if.then6, label %if.end13, !dbg !5603

if.then6:                                         ; preds = %if.then3
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5604
  %9 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5606
  %10 = load i32, i32* %sz, align 4, !dbg !5607
  %conv = sext i32 %10 to i64, !dbg !5607
  %call7 = call i32 @edma_xbar_event_map(%struct.device* %8, %struct.edma_soc_info* %9, i64 %conv) #11, !dbg !5608
  store i32 %call7, i32* %ret, align 4, !dbg !5609
  %11 = load i32, i32* %ret, align 4, !dbg !5610
  %tobool8 = icmp ne i32 %11, 0, !dbg !5610
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !5612

if.then9:                                         ; preds = %if.then6
  %12 = load i32, i32* %ret, align 4, !dbg !5613
  %conv10 = sext i32 %12 to i64, !dbg !5613
  %call11 = call i8* @ERR_PTR(i64 %conv10) #11, !dbg !5614
  %13 = bitcast i8* %call11 to %struct.edma_soc_info*, !dbg !5614
  store %struct.edma_soc_info* %13, %struct.edma_soc_info** %retval, align 8, !dbg !5615
  br label %return, !dbg !5615

if.end12:                                         ; preds = %if.then6
  br label %if.end13, !dbg !5616

if.end13:                                         ; preds = %if.end12, %if.then3
  %14 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5617
  store %struct.edma_soc_info* %14, %struct.edma_soc_info** %retval, align 8, !dbg !5618
  br label %return, !dbg !5618

if.end14:                                         ; preds = %if.end
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5619
  %of_node15 = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 23, !dbg !5620
  %16 = load %struct.device_node*, %struct.device_node** %of_node15, align 8, !dbg !5620
  %call16 = call %struct.property* @of_find_property(%struct.device_node* %16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0), i32* %sz) #11, !dbg !5621
  store %struct.property* %call16, %struct.property** %prop, align 8, !dbg !5622
  %17 = load %struct.property*, %struct.property** %prop, align 8, !dbg !5623
  %tobool17 = icmp ne %struct.property* %17, null, !dbg !5623
  br i1 %tobool17, label %if.then18, label %if.end32, !dbg !5625

if.then18:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata [24 x i8]* %pname, metadata !5626, metadata !DIExpression()), !dbg !5631
  %18 = bitcast [24 x i8]* %pname to i8*, !dbg !5631
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %18, i8* align 16 getelementptr inbounds ([24 x i8], [24 x i8]* @__const.edma_setup_info_from_dt.pname, i32 0, i32 0), i64 24, i1 false), !dbg !5631
  call void @llvm.dbg.declare(metadata i64* %nelm, metadata !5632, metadata !DIExpression()), !dbg !5633
  %19 = load i32, i32* %sz, align 4, !dbg !5634
  %conv19 = sext i32 %19 to i64, !dbg !5634
  %div = udiv i64 %conv19, 4, !dbg !5635
  store i64 %div, i64* %nelm, align 8, !dbg !5633
  call void @llvm.dbg.declare(metadata i32** %memcpy_ch, metadata !5636, metadata !DIExpression()), !dbg !5637
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5638
  %21 = load i64, i64* %nelm, align 8, !dbg !5639
  %add = add i64 %21, 1, !dbg !5640
  %call20 = call i8* @devm_kcalloc(%struct.device* %20, i64 %add, i64 4, i32 3264) #11, !dbg !5641
  %22 = bitcast i8* %call20 to i32*, !dbg !5641
  store i32* %22, i32** %memcpy_ch, align 8, !dbg !5642
  %23 = load i32*, i32** %memcpy_ch, align 8, !dbg !5643
  %tobool21 = icmp ne i32* %23, null, !dbg !5643
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !5645

if.then22:                                        ; preds = %if.then18
  %call23 = call i8* @ERR_PTR(i64 -12) #11, !dbg !5646
  %24 = bitcast i8* %call23 to %struct.edma_soc_info*, !dbg !5646
  store %struct.edma_soc_info* %24, %struct.edma_soc_info** %retval, align 8, !dbg !5647
  br label %return, !dbg !5647

if.end24:                                         ; preds = %if.then18
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5648
  %of_node25 = getelementptr inbounds %struct.device, %struct.device* %25, i32 0, i32 23, !dbg !5649
  %26 = load %struct.device_node*, %struct.device_node** %of_node25, align 8, !dbg !5649
  %arraydecay = getelementptr inbounds [24 x i8], [24 x i8]* %pname, i64 0, i64 0, !dbg !5650
  %27 = load i32*, i32** %memcpy_ch, align 8, !dbg !5651
  %28 = load i64, i64* %nelm, align 8, !dbg !5652
  %call26 = call i32 @of_property_read_u32_array(%struct.device_node* %26, i8* %arraydecay, i32* %27, i64 %28) #11, !dbg !5653
  store i32 %call26, i32* %ret, align 4, !dbg !5654
  %29 = load i32, i32* %ret, align 4, !dbg !5655
  %tobool27 = icmp ne i32 %29, 0, !dbg !5655
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !5657

if.then28:                                        ; preds = %if.end24
  %30 = load i32, i32* %ret, align 4, !dbg !5658
  %conv29 = sext i32 %30 to i64, !dbg !5658
  %call30 = call i8* @ERR_PTR(i64 %conv29) #11, !dbg !5659
  %31 = bitcast i8* %call30 to %struct.edma_soc_info*, !dbg !5659
  store %struct.edma_soc_info* %31, %struct.edma_soc_info** %retval, align 8, !dbg !5660
  br label %return, !dbg !5660

if.end31:                                         ; preds = %if.end24
  %32 = load i32*, i32** %memcpy_ch, align 8, !dbg !5661
  %33 = load i64, i64* %nelm, align 8, !dbg !5662
  %arrayidx = getelementptr i32, i32* %32, i64 %33, !dbg !5661
  store i32 -1, i32* %arrayidx, align 4, !dbg !5663
  %34 = load i32*, i32** %memcpy_ch, align 8, !dbg !5664
  %35 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5665
  %memcpy_channels = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %35, i32 0, i32 2, !dbg !5666
  store i32* %34, i32** %memcpy_channels, align 8, !dbg !5667
  br label %if.end32, !dbg !5668

if.end32:                                         ; preds = %if.end31, %if.end14
  %36 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5669
  %of_node33 = getelementptr inbounds %struct.device, %struct.device* %36, i32 0, i32 23, !dbg !5670
  %37 = load %struct.device_node*, %struct.device_node** %of_node33, align 8, !dbg !5670
  %call34 = call %struct.property* @of_find_property(%struct.device_node* %37, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i64 0, i64 0), i32* %sz) #11, !dbg !5671
  store %struct.property* %call34, %struct.property** %prop, align 8, !dbg !5672
  %38 = load %struct.property*, %struct.property** %prop, align 8, !dbg !5673
  %tobool35 = icmp ne %struct.property* %38, null, !dbg !5673
  br i1 %tobool35, label %if.then36, label %if.end89, !dbg !5675

if.then36:                                        ; preds = %if.end32
  call void @llvm.dbg.declare(metadata [29 x i8]* %pname37, metadata !5676, metadata !DIExpression()), !dbg !5681
  %39 = bitcast [29 x i8]* %pname37 to i8*, !dbg !5681
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %39, i8* align 16 getelementptr inbounds ([29 x i8], [29 x i8]* @__const.edma_setup_info_from_dt.pname.22, i32 0, i32 0), i64 29, i1 false), !dbg !5681
  call void @llvm.dbg.declare(metadata [2 x i32]** %tmp, metadata !5682, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.declare(metadata [2 x i16]** %rsv_slots, metadata !5686, metadata !DIExpression()), !dbg !5689
  call void @llvm.dbg.declare(metadata i64* %nelm38, metadata !5690, metadata !DIExpression()), !dbg !5691
  %40 = load i32, i32* %sz, align 4, !dbg !5692
  %conv39 = sext i32 %40 to i64, !dbg !5692
  %div40 = udiv i64 %conv39, 8, !dbg !5693
  store i64 %div40, i64* %nelm38, align 8, !dbg !5691
  call void @llvm.dbg.declare(metadata %struct.edma_rsv_info** %rsv_info, metadata !5694, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5696, metadata !DIExpression()), !dbg !5697
  %41 = load i64, i64* %nelm38, align 8, !dbg !5698
  %tobool41 = icmp ne i64 %41, 0, !dbg !5698
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !5700

if.then42:                                        ; preds = %if.then36
  %42 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5701
  store %struct.edma_soc_info* %42, %struct.edma_soc_info** %retval, align 8, !dbg !5702
  br label %return, !dbg !5702

if.end43:                                         ; preds = %if.then36
  %43 = load i64, i64* %nelm38, align 8, !dbg !5703
  %call44 = call i8* @kcalloc(i64 %43, i64 8, i32 3264) #11, !dbg !5704
  %44 = bitcast i8* %call44 to [2 x i32]*, !dbg !5704
  store [2 x i32]* %44, [2 x i32]** %tmp, align 8, !dbg !5705
  %45 = load [2 x i32]*, [2 x i32]** %tmp, align 8, !dbg !5706
  %tobool45 = icmp ne [2 x i32]* %45, null, !dbg !5706
  br i1 %tobool45, label %if.end48, label %if.then46, !dbg !5708

if.then46:                                        ; preds = %if.end43
  %call47 = call i8* @ERR_PTR(i64 -12) #11, !dbg !5709
  %46 = bitcast i8* %call47 to %struct.edma_soc_info*, !dbg !5709
  store %struct.edma_soc_info* %46, %struct.edma_soc_info** %retval, align 8, !dbg !5710
  br label %return, !dbg !5710

if.end48:                                         ; preds = %if.end43
  %47 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5711
  %call49 = call i8* @devm_kzalloc(%struct.device* %47, i64 16, i32 3264) #11, !dbg !5712
  %48 = bitcast i8* %call49 to %struct.edma_rsv_info*, !dbg !5712
  store %struct.edma_rsv_info* %48, %struct.edma_rsv_info** %rsv_info, align 8, !dbg !5713
  %49 = load %struct.edma_rsv_info*, %struct.edma_rsv_info** %rsv_info, align 8, !dbg !5714
  %tobool50 = icmp ne %struct.edma_rsv_info* %49, null, !dbg !5714
  br i1 %tobool50, label %if.end53, label %if.then51, !dbg !5716

if.then51:                                        ; preds = %if.end48
  %50 = load [2 x i32]*, [2 x i32]** %tmp, align 8, !dbg !5717
  %51 = bitcast [2 x i32]* %50 to i8*, !dbg !5717
  call void @kfree(i8* %51) #11, !dbg !5719
  %call52 = call i8* @ERR_PTR(i64 -12) #11, !dbg !5720
  %52 = bitcast i8* %call52 to %struct.edma_soc_info*, !dbg !5720
  store %struct.edma_soc_info* %52, %struct.edma_soc_info** %retval, align 8, !dbg !5721
  br label %return, !dbg !5721

if.end53:                                         ; preds = %if.end48
  %53 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5722
  %54 = load i64, i64* %nelm38, align 8, !dbg !5723
  %add54 = add i64 %54, 1, !dbg !5724
  %call55 = call i8* @devm_kcalloc(%struct.device* %53, i64 %add54, i64 4, i32 3264) #11, !dbg !5725
  %55 = bitcast i8* %call55 to [2 x i16]*, !dbg !5725
  store [2 x i16]* %55, [2 x i16]** %rsv_slots, align 8, !dbg !5726
  %56 = load [2 x i16]*, [2 x i16]** %rsv_slots, align 8, !dbg !5727
  %tobool56 = icmp ne [2 x i16]* %56, null, !dbg !5727
  br i1 %tobool56, label %if.end59, label %if.then57, !dbg !5729

if.then57:                                        ; preds = %if.end53
  %57 = load [2 x i32]*, [2 x i32]** %tmp, align 8, !dbg !5730
  %58 = bitcast [2 x i32]* %57 to i8*, !dbg !5730
  call void @kfree(i8* %58) #11, !dbg !5732
  %call58 = call i8* @ERR_PTR(i64 -12) #11, !dbg !5733
  %59 = bitcast i8* %call58 to %struct.edma_soc_info*, !dbg !5733
  store %struct.edma_soc_info* %59, %struct.edma_soc_info** %retval, align 8, !dbg !5734
  br label %return, !dbg !5734

if.end59:                                         ; preds = %if.end53
  %60 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5735
  %of_node60 = getelementptr inbounds %struct.device, %struct.device* %60, i32 0, i32 23, !dbg !5736
  %61 = load %struct.device_node*, %struct.device_node** %of_node60, align 8, !dbg !5736
  %arraydecay61 = getelementptr inbounds [29 x i8], [29 x i8]* %pname37, i64 0, i64 0, !dbg !5737
  %62 = load [2 x i32]*, [2 x i32]** %tmp, align 8, !dbg !5738
  %63 = bitcast [2 x i32]* %62 to i32*, !dbg !5739
  %64 = load i64, i64* %nelm38, align 8, !dbg !5740
  %mul = mul i64 %64, 2, !dbg !5741
  %call62 = call i32 @of_property_read_u32_array(%struct.device_node* %61, i8* %arraydecay61, i32* %63, i64 %mul) #11, !dbg !5742
  store i32 %call62, i32* %ret, align 4, !dbg !5743
  %65 = load i32, i32* %ret, align 4, !dbg !5744
  %tobool63 = icmp ne i32 %65, 0, !dbg !5744
  br i1 %tobool63, label %if.then64, label %if.end67, !dbg !5746

if.then64:                                        ; preds = %if.end59
  %66 = load [2 x i32]*, [2 x i32]** %tmp, align 8, !dbg !5747
  %67 = bitcast [2 x i32]* %66 to i8*, !dbg !5747
  call void @kfree(i8* %67) #11, !dbg !5749
  %68 = load i32, i32* %ret, align 4, !dbg !5750
  %conv65 = sext i32 %68 to i64, !dbg !5750
  %call66 = call i8* @ERR_PTR(i64 %conv65) #11, !dbg !5751
  %69 = bitcast i8* %call66 to %struct.edma_soc_info*, !dbg !5751
  store %struct.edma_soc_info* %69, %struct.edma_soc_info** %retval, align 8, !dbg !5752
  br label %return, !dbg !5752

if.end67:                                         ; preds = %if.end59
  store i32 0, i32* %i, align 4, !dbg !5753
  br label %for.cond, !dbg !5755

for.cond:                                         ; preds = %for.inc, %if.end67
  %70 = load i32, i32* %i, align 4, !dbg !5756
  %conv68 = sext i32 %70 to i64, !dbg !5756
  %71 = load i64, i64* %nelm38, align 8, !dbg !5758
  %cmp = icmp ult i64 %conv68, %71, !dbg !5759
  br i1 %cmp, label %for.body, label %for.end, !dbg !5760

for.body:                                         ; preds = %for.cond
  %72 = load [2 x i32]*, [2 x i32]** %tmp, align 8, !dbg !5761
  %73 = load i32, i32* %i, align 4, !dbg !5763
  %idxprom = sext i32 %73 to i64, !dbg !5761
  %arrayidx70 = getelementptr [2 x i32], [2 x i32]* %72, i64 %idxprom, !dbg !5761
  %arrayidx71 = getelementptr [2 x i32], [2 x i32]* %arrayidx70, i64 0, i64 0, !dbg !5761
  %74 = load i32, i32* %arrayidx71, align 4, !dbg !5761
  %conv72 = trunc i32 %74 to i16, !dbg !5761
  %75 = load [2 x i16]*, [2 x i16]** %rsv_slots, align 8, !dbg !5764
  %76 = load i32, i32* %i, align 4, !dbg !5765
  %idxprom73 = sext i32 %76 to i64, !dbg !5764
  %arrayidx74 = getelementptr [2 x i16], [2 x i16]* %75, i64 %idxprom73, !dbg !5764
  %arrayidx75 = getelementptr [2 x i16], [2 x i16]* %arrayidx74, i64 0, i64 0, !dbg !5764
  store i16 %conv72, i16* %arrayidx75, align 2, !dbg !5766
  %77 = load [2 x i32]*, [2 x i32]** %tmp, align 8, !dbg !5767
  %78 = load i32, i32* %i, align 4, !dbg !5768
  %idxprom76 = sext i32 %78 to i64, !dbg !5767
  %arrayidx77 = getelementptr [2 x i32], [2 x i32]* %77, i64 %idxprom76, !dbg !5767
  %arrayidx78 = getelementptr [2 x i32], [2 x i32]* %arrayidx77, i64 0, i64 1, !dbg !5767
  %79 = load i32, i32* %arrayidx78, align 4, !dbg !5767
  %conv79 = trunc i32 %79 to i16, !dbg !5767
  %80 = load [2 x i16]*, [2 x i16]** %rsv_slots, align 8, !dbg !5769
  %81 = load i32, i32* %i, align 4, !dbg !5770
  %idxprom80 = sext i32 %81 to i64, !dbg !5769
  %arrayidx81 = getelementptr [2 x i16], [2 x i16]* %80, i64 %idxprom80, !dbg !5769
  %arrayidx82 = getelementptr [2 x i16], [2 x i16]* %arrayidx81, i64 0, i64 1, !dbg !5769
  store i16 %conv79, i16* %arrayidx82, align 2, !dbg !5771
  br label %for.inc, !dbg !5772

for.inc:                                          ; preds = %for.body
  %82 = load i32, i32* %i, align 4, !dbg !5773
  %inc = add i32 %82, 1, !dbg !5773
  store i32 %inc, i32* %i, align 4, !dbg !5773
  br label %for.cond, !dbg !5774, !llvm.loop !5775

for.end:                                          ; preds = %for.cond
  %83 = load [2 x i16]*, [2 x i16]** %rsv_slots, align 8, !dbg !5777
  %84 = load i64, i64* %nelm38, align 8, !dbg !5778
  %arrayidx83 = getelementptr [2 x i16], [2 x i16]* %83, i64 %84, !dbg !5777
  %arrayidx84 = getelementptr [2 x i16], [2 x i16]* %arrayidx83, i64 0, i64 0, !dbg !5777
  store i16 -1, i16* %arrayidx84, align 2, !dbg !5779
  %85 = load [2 x i16]*, [2 x i16]** %rsv_slots, align 8, !dbg !5780
  %86 = load i64, i64* %nelm38, align 8, !dbg !5781
  %arrayidx85 = getelementptr [2 x i16], [2 x i16]* %85, i64 %86, !dbg !5780
  %arrayidx86 = getelementptr [2 x i16], [2 x i16]* %arrayidx85, i64 0, i64 1, !dbg !5780
  store i16 -1, i16* %arrayidx86, align 2, !dbg !5782
  %87 = load %struct.edma_rsv_info*, %struct.edma_rsv_info** %rsv_info, align 8, !dbg !5783
  %88 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5784
  %rsv = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %88, i32 0, i32 1, !dbg !5785
  store %struct.edma_rsv_info* %87, %struct.edma_rsv_info** %rsv, align 8, !dbg !5786
  %89 = load [2 x i16]*, [2 x i16]** %rsv_slots, align 8, !dbg !5787
  %90 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5788
  %rsv87 = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %90, i32 0, i32 1, !dbg !5789
  %91 = load %struct.edma_rsv_info*, %struct.edma_rsv_info** %rsv87, align 8, !dbg !5789
  %rsv_slots88 = getelementptr inbounds %struct.edma_rsv_info, %struct.edma_rsv_info* %91, i32 0, i32 1, !dbg !5790
  store [2 x i16]* %89, [2 x i16]** %rsv_slots88, align 8, !dbg !5791
  %92 = load [2 x i32]*, [2 x i32]** %tmp, align 8, !dbg !5792
  %93 = bitcast [2 x i32]* %92 to i8*, !dbg !5792
  call void @kfree(i8* %93) #11, !dbg !5793
  br label %if.end89, !dbg !5794

if.end89:                                         ; preds = %for.end, %if.end32
  %94 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !5795
  store %struct.edma_soc_info* %94, %struct.edma_soc_info** %retval, align 8, !dbg !5796
  br label %return, !dbg !5796

return:                                           ; preds = %if.end89, %if.then64, %if.then57, %if.then51, %if.then46, %if.then42, %if.then28, %if.then22, %if.end13, %if.then9, %if.then
  %95 = load %struct.edma_soc_info*, %struct.edma_soc_info** %retval, align 8, !dbg !5797
  ret %struct.edma_soc_info* %95, !dbg !5797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !5798 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5802, metadata !DIExpression()), !dbg !5803
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5804
  %1 = ptrtoint i8* %0 to i64, !dbg !5804
  %2 = inttoptr i64 %1 to i8*, !dbg !5804
  %3 = ptrtoint i8* %2 to i64, !dbg !5804
  %cmp = icmp uge i64 %3, -4095, !dbg !5804
  %lnot = xor i1 %cmp, true, !dbg !5804
  %lnot1 = xor i1 %lnot, true, !dbg !5804
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5804
  %conv = sext i32 %lnot.ext to i64, !dbg !5804
  %tobool = icmp ne i64 %conv, 0, !dbg !5804
  ret i1 %tobool, !dbg !5805
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !5806 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5809, metadata !DIExpression()), !dbg !5810
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5811
  %1 = ptrtoint i8* %0 to i64, !dbg !5812
  ret i64 %1, !dbg !5813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_set_mask_and_coherent(%struct.device* %dev, i64 %mask) #0 !dbg !5814 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %mask.addr = alloca i64, align 8
  %rc = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5818, metadata !DIExpression()), !dbg !5819
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !5820, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5822, metadata !DIExpression()), !dbg !5823
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5824
  %1 = load i64, i64* %mask.addr, align 8, !dbg !5825
  %call = call i32 @dma_set_mask(%struct.device* %0, i64 %1) #11, !dbg !5826
  store i32 %call, i32* %rc, align 4, !dbg !5823
  %2 = load i32, i32* %rc, align 4, !dbg !5827
  %cmp = icmp eq i32 %2, 0, !dbg !5829
  br i1 %cmp, label %if.then, label %if.end, !dbg !5830

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5831
  %4 = load i64, i64* %mask.addr, align 8, !dbg !5832
  %call1 = call i32 @dma_set_coherent_mask(%struct.device* %3, i64 %4) #11, !dbg !5833
  br label %if.end, !dbg !5833

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %rc, align 4, !dbg !5834
  ret i32 %5, !dbg !5835
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kzalloc(%struct.device* %dev, i64 %size, i32 %gfp) #0 !dbg !5836 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5839, metadata !DIExpression()), !dbg !5840
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5841, metadata !DIExpression()), !dbg !5842
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !5843, metadata !DIExpression()), !dbg !5844
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5845
  %1 = load i64, i64* %size.addr, align 8, !dbg !5846
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !5847
  %or = or i32 %2, 256, !dbg !5848
  %call = call noalias i8* @devm_kmalloc(%struct.device* %0, i64 %1, i32 %or) #11, !dbg !5849
  ret i8* %call, !dbg !5850
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @platform_get_resource_byname(%struct.platform_device*, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local %struct.resource* @platform_get_resource(%struct.platform_device*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i8* @devm_ioremap_resource(%struct.device*, %struct.resource*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @platform_set_drvdata(%struct.platform_device* %pdev, i8* %data) #0 !dbg !5851 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !5854, metadata !DIExpression()), !dbg !5855
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5856, metadata !DIExpression()), !dbg !5857
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5858
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !5859
  %1 = load i8*, i8** %data.addr, align 8, !dbg !5860
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !5861
  ret void, !dbg !5862
}

; Function Attrs: noredzone
declare dso_local void @pm_runtime_enable(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_get_sync(%struct.device* %dev) #0 !dbg !5863 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5865, metadata !DIExpression()), !dbg !5866
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5867
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 4) #11, !dbg !5868
  ret i32 %call, !dbg !5869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_disable(%struct.device* %dev) #0 !dbg !5870 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5871, metadata !DIExpression()), !dbg !5872
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5873
  call void @__pm_runtime_disable(%struct.device* %0, i1 zeroext true) #11, !dbg !5874
  ret void, !dbg !5875
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_setup_from_hw(%struct.device* %dev, %struct.edma_soc_info* %pdata, %struct.edma_cc* %ecc) #0 !dbg !5876 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %pdata.addr = alloca %struct.edma_soc_info*, align 8
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %i = alloca i32, align 4
  %value = alloca i32, align 4
  %cccfg = alloca i32, align 4
  %queue_priority_map = alloca [2 x i8]*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5879, metadata !DIExpression()), !dbg !5880
  store %struct.edma_soc_info* %pdata, %struct.edma_soc_info** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_soc_info** %pdata.addr, metadata !5881, metadata !DIExpression()), !dbg !5882
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !5883, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5885, metadata !DIExpression()), !dbg !5886
  call void @llvm.dbg.declare(metadata i32* %value, metadata !5887, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.declare(metadata i32* %cccfg, metadata !5889, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.declare(metadata [2 x i8]** %queue_priority_map, metadata !5891, metadata !DIExpression()), !dbg !5892
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !5893
  %call = call i32 @edma_read(%struct.edma_cc* %0, i32 4) #11, !dbg !5894
  store i32 %call, i32* %cccfg, align 4, !dbg !5895
  %1 = load i32, i32* %cccfg, align 4, !dbg !5896
  %and = and i32 %1, 3145728, !dbg !5896
  %shr = lshr i32 %and, 20, !dbg !5896
  store i32 %shr, i32* %value, align 4, !dbg !5897
  %2 = load i32, i32* %value, align 4, !dbg !5898
  %sh_prom = zext i32 %2 to i64, !dbg !5898
  %shl = shl i64 1, %sh_prom, !dbg !5898
  %conv = trunc i64 %shl to i32, !dbg !5898
  %3 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !5899
  %num_region = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %3, i32 0, i32 7, !dbg !5900
  store i32 %conv, i32* %num_region, align 8, !dbg !5901
  %4 = load i32, i32* %cccfg, align 4, !dbg !5902
  %and1 = and i32 %4, 7, !dbg !5902
  store i32 %and1, i32* %value, align 4, !dbg !5903
  %5 = load i32, i32* %value, align 4, !dbg !5904
  %add = add i32 %5, 1, !dbg !5904
  %sh_prom2 = zext i32 %add to i64, !dbg !5904
  %shl3 = shl i64 1, %sh_prom2, !dbg !5904
  %conv4 = trunc i64 %shl3 to i32, !dbg !5904
  %6 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !5905
  %num_channels = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %6, i32 0, i32 5, !dbg !5906
  store i32 %conv4, i32* %num_channels, align 8, !dbg !5907
  %7 = load i32, i32* %cccfg, align 4, !dbg !5908
  %and5 = and i32 %7, 112, !dbg !5908
  %shr6 = lshr i32 %and5, 4, !dbg !5908
  store i32 %shr6, i32* %value, align 4, !dbg !5909
  %8 = load i32, i32* %value, align 4, !dbg !5910
  %mul = mul i32 %8, 2, !dbg !5911
  %9 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !5912
  %num_qchannels = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %9, i32 0, i32 6, !dbg !5913
  store i32 %mul, i32* %num_qchannels, align 4, !dbg !5914
  %10 = load i32, i32* %cccfg, align 4, !dbg !5915
  %and7 = and i32 %10, 28672, !dbg !5915
  %shr8 = lshr i32 %and7, 12, !dbg !5915
  store i32 %shr8, i32* %value, align 4, !dbg !5916
  %11 = load i32, i32* %value, align 4, !dbg !5917
  %add9 = add i32 %11, 4, !dbg !5917
  %sh_prom10 = zext i32 %add9 to i64, !dbg !5917
  %shl11 = shl i64 1, %sh_prom10, !dbg !5917
  %conv12 = trunc i64 %shl11 to i32, !dbg !5917
  %12 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !5918
  %num_slots = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %12, i32 0, i32 8, !dbg !5919
  store i32 %conv12, i32* %num_slots, align 4, !dbg !5920
  %13 = load i32, i32* %cccfg, align 4, !dbg !5921
  %and13 = and i32 %13, 458752, !dbg !5921
  %shr14 = lshr i32 %and13, 16, !dbg !5921
  store i32 %shr14, i32* %value, align 4, !dbg !5922
  %14 = load i32, i32* %value, align 4, !dbg !5923
  %add15 = add i32 %14, 1, !dbg !5924
  %15 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !5925
  %num_tc = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %15, i32 0, i32 9, !dbg !5926
  store i32 %add15, i32* %num_tc, align 8, !dbg !5927
  %16 = load i32, i32* %cccfg, align 4, !dbg !5928
  %conv16 = zext i32 %16 to i64, !dbg !5928
  %and17 = and i64 %conv16, 16777216, !dbg !5929
  %tobool = icmp ne i64 %and17, 0, !dbg !5930
  %17 = zext i1 %tobool to i64, !dbg !5930
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !5930
  %tobool18 = icmp ne i32 %cond, 0, !dbg !5930
  %18 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !5931
  %chmap_exist = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %18, i32 0, i32 10, !dbg !5932
  %frombool = zext i1 %tobool18 to i8, !dbg !5933
  store i8 %frombool, i8* %chmap_exist, align 4, !dbg !5933
  %19 = load %struct.edma_soc_info*, %struct.edma_soc_info** %pdata.addr, align 8, !dbg !5934
  %queue_priority_mapping = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %19, i32 0, i32 3, !dbg !5936
  %20 = load [2 x i8]*, [2 x i8]** %queue_priority_mapping, align 8, !dbg !5936
  %tobool19 = icmp ne [2 x i8]* %20, null, !dbg !5934
  br i1 %tobool19, label %if.then, label %if.end, !dbg !5937

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5938
  br label %return, !dbg !5938

if.end:                                           ; preds = %entry
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5939
  %22 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !5940
  %num_tc20 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %22, i32 0, i32 9, !dbg !5941
  %23 = load i32, i32* %num_tc20, align 8, !dbg !5941
  %add21 = add i32 %23, 1, !dbg !5942
  %conv22 = zext i32 %add21 to i64, !dbg !5940
  %call23 = call i8* @devm_kcalloc(%struct.device* %21, i64 %conv22, i64 1, i32 3264) #11, !dbg !5943
  %24 = bitcast i8* %call23 to [2 x i8]*, !dbg !5943
  store [2 x i8]* %24, [2 x i8]** %queue_priority_map, align 8, !dbg !5944
  %25 = load [2 x i8]*, [2 x i8]** %queue_priority_map, align 8, !dbg !5945
  %tobool24 = icmp ne [2 x i8]* %25, null, !dbg !5945
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !5947

if.then25:                                        ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !5948
  br label %return, !dbg !5948

if.end26:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !5949
  br label %for.cond, !dbg !5951

for.cond:                                         ; preds = %for.inc, %if.end26
  %26 = load i32, i32* %i, align 4, !dbg !5952
  %27 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !5954
  %num_tc27 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %27, i32 0, i32 9, !dbg !5955
  %28 = load i32, i32* %num_tc27, align 8, !dbg !5955
  %cmp = icmp ult i32 %26, %28, !dbg !5956
  br i1 %cmp, label %for.body, label %for.end, !dbg !5957

for.body:                                         ; preds = %for.cond
  %29 = load i32, i32* %i, align 4, !dbg !5958
  %conv29 = trunc i32 %29 to i8, !dbg !5958
  %30 = load [2 x i8]*, [2 x i8]** %queue_priority_map, align 8, !dbg !5960
  %31 = load i32, i32* %i, align 4, !dbg !5961
  %idxprom = sext i32 %31 to i64, !dbg !5960
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %30, i64 %idxprom, !dbg !5960
  %arrayidx30 = getelementptr [2 x i8], [2 x i8]* %arrayidx, i64 0, i64 0, !dbg !5960
  store i8 %conv29, i8* %arrayidx30, align 1, !dbg !5962
  %32 = load i32, i32* %i, align 4, !dbg !5963
  %conv31 = trunc i32 %32 to i8, !dbg !5963
  %33 = load [2 x i8]*, [2 x i8]** %queue_priority_map, align 8, !dbg !5964
  %34 = load i32, i32* %i, align 4, !dbg !5965
  %idxprom32 = sext i32 %34 to i64, !dbg !5964
  %arrayidx33 = getelementptr [2 x i8], [2 x i8]* %33, i64 %idxprom32, !dbg !5964
  %arrayidx34 = getelementptr [2 x i8], [2 x i8]* %arrayidx33, i64 0, i64 1, !dbg !5964
  store i8 %conv31, i8* %arrayidx34, align 1, !dbg !5966
  br label %for.inc, !dbg !5967

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !5968
  %inc = add i32 %35, 1, !dbg !5968
  store i32 %inc, i32* %i, align 4, !dbg !5968
  br label %for.cond, !dbg !5969, !llvm.loop !5970

for.end:                                          ; preds = %for.cond
  %36 = load [2 x i8]*, [2 x i8]** %queue_priority_map, align 8, !dbg !5972
  %37 = load i32, i32* %i, align 4, !dbg !5973
  %idxprom35 = sext i32 %37 to i64, !dbg !5972
  %arrayidx36 = getelementptr [2 x i8], [2 x i8]* %36, i64 %idxprom35, !dbg !5972
  %arrayidx37 = getelementptr [2 x i8], [2 x i8]* %arrayidx36, i64 0, i64 0, !dbg !5972
  store i8 -1, i8* %arrayidx37, align 1, !dbg !5974
  %38 = load [2 x i8]*, [2 x i8]** %queue_priority_map, align 8, !dbg !5975
  %39 = load i32, i32* %i, align 4, !dbg !5976
  %idxprom38 = sext i32 %39 to i64, !dbg !5975
  %arrayidx39 = getelementptr [2 x i8], [2 x i8]* %38, i64 %idxprom38, !dbg !5975
  %arrayidx40 = getelementptr [2 x i8], [2 x i8]* %arrayidx39, i64 0, i64 1, !dbg !5975
  store i8 -1, i8* %arrayidx40, align 1, !dbg !5977
  %40 = load [2 x i8]*, [2 x i8]** %queue_priority_map, align 8, !dbg !5978
  %41 = load %struct.edma_soc_info*, %struct.edma_soc_info** %pdata.addr, align 8, !dbg !5979
  %queue_priority_mapping41 = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %41, i32 0, i32 3, !dbg !5980
  store [2 x i8]* %40, [2 x i8]** %queue_priority_mapping41, align 8, !dbg !5981
  %42 = load i32, i32* %i, align 4, !dbg !5982
  %sub = sub i32 %42, 1, !dbg !5983
  %43 = load %struct.edma_soc_info*, %struct.edma_soc_info** %pdata.addr, align 8, !dbg !5984
  %default_queue = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %43, i32 0, i32 0, !dbg !5985
  store i32 %sub, i32* %default_queue, align 8, !dbg !5986
  store i32 0, i32* %retval, align 4, !dbg !5987
  br label %return, !dbg !5987

return:                                           ; preds = %for.end, %if.then25, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !5988
  ret i32 %44, !dbg !5988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kcalloc(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !5989 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5992, metadata !DIExpression()), !dbg !5993
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5994, metadata !DIExpression()), !dbg !5995
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5996, metadata !DIExpression()), !dbg !5997
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5998, metadata !DIExpression()), !dbg !5999
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6000
  %1 = load i64, i64* %n.addr, align 8, !dbg !6001
  %2 = load i64, i64* %size.addr, align 8, !dbg !6002
  %3 = load i32, i32* %flags.addr, align 4, !dbg !6003
  %or = or i32 %3, 256, !dbg !6004
  %call = call i8* @devm_kmalloc_array(%struct.device* %0, i64 %1, i64 %2, i32 %or) #11, !dbg !6005
  ret i8* %call, !dbg !6006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_fill(i64* %dst, i32 %nbits) #0 !dbg !6007 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !6010, metadata !DIExpression()), !dbg !6011
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !6012, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6014, metadata !DIExpression()), !dbg !6015
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !6016
  %conv = zext i32 %0 to i64, !dbg !6016
  %add = add i64 %conv, 64, !dbg !6016
  %sub = sub i64 %add, 1, !dbg !6016
  %div = udiv i64 %sub, 64, !dbg !6016
  %mul = mul i64 %div, 8, !dbg !6017
  %conv1 = trunc i64 %mul to i32, !dbg !6016
  store i32 %conv1, i32* %len, align 4, !dbg !6015
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !6018
  %2 = bitcast i64* %1 to i8*, !dbg !6019
  %3 = load i32, i32* %len, align 4, !dbg !6020
  %conv2 = zext i32 %3 to i64, !dbg !6020
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 -1, i64 %conv2, i1 false), !dbg !6019
  ret void, !dbg !6021
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !6022 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !6029, metadata !DIExpression()), !dbg !6032
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !6034, metadata !DIExpression()), !dbg !6035
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !6036, metadata !DIExpression()), !dbg !6037
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !6038, metadata !DIExpression()), !dbg !6040
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !6042, metadata !DIExpression()), !dbg !6043
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6044, metadata !DIExpression()), !dbg !6052
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6054, metadata !DIExpression()), !dbg !6055
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !6056, metadata !DIExpression()), !dbg !6057
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !6058, metadata !DIExpression()), !dbg !6059
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !6060
  %1 = load i64, i64* %nr.addr, align 8, !dbg !6061
  %div = sdiv i64 %1, 64, !dbg !6061
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !6062
  %2 = bitcast i64* %add.ptr to i8*, !dbg !6060
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !6063
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6064
  %conv.i = trunc i64 %4 to i32, !dbg !6064
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #13, !dbg !6065
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !6066
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !6066
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #13, !dbg !6066
  %7 = load i64, i64* %nr.addr, align 8, !dbg !6067
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !6067
  br i1 %8, label %cond.true, label %cond.false, !dbg !6067

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !6067
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !6067
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !6068
  %and.i = and i64 %11, 63, !dbg !6069
  %shl.i = shl i64 1, %and.i, !dbg !6070
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !6071
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !6072
  %shr.i = ashr i64 %13, 6, !dbg !6073
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !6071
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !6071
  %and1.i = and i64 %shl.i, %14, !dbg !6074
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !6075
  %conv = zext i1 %cmp.i to i32, !dbg !6067
  br label %cond.end, !dbg !6067

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !6067
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !6067
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !6076
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !6077
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !6078, !srcloc !6079
  store i8 %19, i8* %oldbit.i, align 1, !dbg !6078
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !6080
  %tobool.i = trunc i8 %20 to i1, !dbg !6080
  %conv2 = zext i1 %tobool.i to i32, !dbg !6067
  br label %cond.end, !dbg !6067

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !6067
  %tobool = icmp ne i32 %cond, 0, !dbg !6067
  ret i1 %tobool, !dbg !6081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_write_slot(%struct.edma_cc* %ecc, i32 %slot, %struct.edmacc_param* %param) #0 !dbg !6082 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %slot.addr = alloca i32, align 4
  %param.addr = alloca %struct.edmacc_param*, align 8
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !6086, metadata !DIExpression()), !dbg !6087
  store i32 %slot, i32* %slot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot.addr, metadata !6088, metadata !DIExpression()), !dbg !6089
  store %struct.edmacc_param* %param, %struct.edmacc_param** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edmacc_param** %param.addr, metadata !6090, metadata !DIExpression()), !dbg !6091
  %0 = load i32, i32* %slot.addr, align 4, !dbg !6092
  %and = and i32 %0, 65535, !dbg !6092
  store i32 %and, i32* %slot.addr, align 4, !dbg !6093
  %1 = load i32, i32* %slot.addr, align 4, !dbg !6094
  %2 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6096
  %num_slots = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %2, i32 0, i32 8, !dbg !6097
  %3 = load i32, i32* %num_slots, align 4, !dbg !6097
  %cmp = icmp uge i32 %1, %3, !dbg !6098
  br i1 %cmp, label %if.then, label %if.end, !dbg !6099

if.then:                                          ; preds = %entry
  br label %return, !dbg !6100

if.end:                                           ; preds = %entry
  %4 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6101
  %base = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %4, i32 0, i32 2, !dbg !6102
  %5 = load i8*, i8** %base, align 8, !dbg !6102
  %6 = load i32, i32* %slot.addr, align 4, !dbg !6103
  %shl = shl i32 %6, 5, !dbg !6103
  %add = add i32 16384, %shl, !dbg !6103
  %idx.ext = zext i32 %add to i64, !dbg !6104
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !6104
  %7 = load %struct.edmacc_param*, %struct.edmacc_param** %param.addr, align 8, !dbg !6105
  %8 = bitcast %struct.edmacc_param* %7 to i8*, !dbg !6105
  call void @memcpy_toio(i8* %add.ptr, i8* %8, i64 32) #11, !dbg !6106
  br label %return, !dbg !6107

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6107
}

; Function Attrs: noredzone
declare dso_local i32 @platform_get_irq_byname(%struct.platform_device*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @irq_of_parse_and_map(%struct.device_node*, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kasprintf(%struct.device*, i32, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !6108 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6111, metadata !DIExpression()), !dbg !6112
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6113
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !6115
  %1 = load i8*, i8** %init_name, align 8, !dbg !6115
  %tobool = icmp ne i8* %1, null, !dbg !6113
  br i1 %tobool, label %if.then, label %if.end, !dbg !6116

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6117
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !6118
  %3 = load i8*, i8** %init_name1, align 8, !dbg !6118
  store i8* %3, i8** %retval, align 8, !dbg !6119
  br label %return, !dbg !6119

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6120
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !6121
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !6122
  store i8* %call, i8** %retval, align 8, !dbg !6123
  br label %return, !dbg !6123

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !6124
  ret i8* %5, !dbg !6124
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_request_irq(%struct.device* %dev, i32 %irq, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id) #0 !dbg !6125 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6128, metadata !DIExpression()), !dbg !6129
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6130, metadata !DIExpression()), !dbg !6131
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !6132, metadata !DIExpression()), !dbg !6133
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !6134, metadata !DIExpression()), !dbg !6135
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !6136, metadata !DIExpression()), !dbg !6137
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !6138, metadata !DIExpression()), !dbg !6139
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6140
  %1 = load i32, i32* %irq.addr, align 4, !dbg !6141
  %2 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !6142
  %3 = load i64, i64* %irqflags.addr, align 8, !dbg !6143
  %4 = load i8*, i8** %devname.addr, align 8, !dbg !6144
  %5 = load i8*, i8** %dev_id.addr, align 8, !dbg !6145
  %call = call i32 @devm_request_threaded_irq(%struct.device* %0, i32 %1, i32 (i32, i8*)* %2, i32 (i32, i8*)* null, i64 %3, i8* %4, i8* %5) #11, !dbg !6146
  ret i32 %call, !dbg !6147
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_irq_handler(i32 %irq, i8* %data) #0 !dbg !6148 {
entry:
  %word.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %word.addr.i, metadata !6149, metadata !DIExpression()), !dbg !6153
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %ctlr = alloca i32, align 4
  %sh_ier = alloca i32, align 4
  %sh_ipr = alloca i32, align 4
  %bank = alloca i32, align 4
  %slot = alloca i32, align 4
  %channel = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6156, metadata !DIExpression()), !dbg !6157
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6158, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !6160, metadata !DIExpression()), !dbg !6161
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6162
  %1 = bitcast i8* %0 to %struct.edma_cc*, !dbg !6162
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !6161
  call void @llvm.dbg.declare(metadata i32* %ctlr, metadata !6163, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.declare(metadata i32* %sh_ier, metadata !6165, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.declare(metadata i32* %sh_ipr, metadata !6167, metadata !DIExpression()), !dbg !6168
  call void @llvm.dbg.declare(metadata i32* %bank, metadata !6169, metadata !DIExpression()), !dbg !6170
  %2 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6171
  %id = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %2, i32 0, i32 3, !dbg !6172
  %3 = load i32, i32* %id, align 8, !dbg !6172
  store i32 %3, i32* %ctlr, align 4, !dbg !6173
  %4 = load i32, i32* %ctlr, align 4, !dbg !6174
  %cmp = icmp slt i32 %4, 0, !dbg !6176
  br i1 %cmp, label %if.then, label %if.end, !dbg !6177

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6178
  br label %return, !dbg !6178

if.end:                                           ; preds = %entry
  %5 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6179
  %call = call i32 @edma_shadow0_read_array(%struct.edma_cc* %5, i32 104, i32 0) #11, !dbg !6180
  store i32 %call, i32* %sh_ipr, align 4, !dbg !6181
  %6 = load i32, i32* %sh_ipr, align 4, !dbg !6182
  %tobool = icmp ne i32 %6, 0, !dbg !6182
  br i1 %tobool, label %if.else, label %if.then1, !dbg !6184

if.then1:                                         ; preds = %if.end
  %7 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6185
  %call2 = call i32 @edma_shadow0_read_array(%struct.edma_cc* %7, i32 104, i32 1) #11, !dbg !6187
  store i32 %call2, i32* %sh_ipr, align 4, !dbg !6188
  %8 = load i32, i32* %sh_ipr, align 4, !dbg !6189
  %tobool3 = icmp ne i32 %8, 0, !dbg !6189
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !6191

if.then4:                                         ; preds = %if.then1
  store i32 0, i32* %retval, align 4, !dbg !6192
  br label %return, !dbg !6192

if.end5:                                          ; preds = %if.then1
  %9 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6193
  %call6 = call i32 @edma_shadow0_read_array(%struct.edma_cc* %9, i32 80, i32 1) #11, !dbg !6194
  store i32 %call6, i32* %sh_ier, align 4, !dbg !6195
  store i32 1, i32* %bank, align 4, !dbg !6196
  br label %if.end8, !dbg !6197

if.else:                                          ; preds = %if.end
  %10 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6198
  %call7 = call i32 @edma_shadow0_read_array(%struct.edma_cc* %10, i32 80, i32 0) #11, !dbg !6200
  store i32 %call7, i32* %sh_ier, align 4, !dbg !6201
  store i32 0, i32* %bank, align 4, !dbg !6202
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.end5
  br label %do.body, !dbg !6203

do.body:                                          ; preds = %do.cond, %if.end8
  call void @llvm.dbg.declare(metadata i32* %slot, metadata !6204, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6206, metadata !DIExpression()), !dbg !6207
  %11 = load i32, i32* %sh_ipr, align 4, !dbg !6208
  %conv = zext i32 %11 to i64, !dbg !6208
  store i64 %conv, i64* %word.addr.i, align 8
  %12 = load i64, i64* %word.addr.i, align 8, !dbg !6209
  %13 = call i64 asm "rep; bsf $1,$0", "=r,rm,~{dirflag},~{fpsr},~{flags}"(i64 %12) #9, !dbg !6210, !srcloc !6211
  store i64 %13, i64* %word.addr.i, align 8, !dbg !6210
  %14 = load i64, i64* %word.addr.i, align 8, !dbg !6212
  %conv10 = trunc i64 %14 to i32, !dbg !6213
  store i32 %conv10, i32* %slot, align 4, !dbg !6214
  %15 = load i32, i32* %slot, align 4, !dbg !6215
  %sh_prom = zext i32 %15 to i64, !dbg !6215
  %shl = shl i64 1, %sh_prom, !dbg !6215
  %neg = xor i64 %shl, -1, !dbg !6216
  %16 = load i32, i32* %sh_ipr, align 4, !dbg !6217
  %conv11 = zext i32 %16 to i64, !dbg !6217
  %and = and i64 %conv11, %neg, !dbg !6217
  %conv12 = trunc i64 %and to i32, !dbg !6217
  store i32 %conv12, i32* %sh_ipr, align 4, !dbg !6217
  %17 = load i32, i32* %sh_ier, align 4, !dbg !6218
  %conv13 = zext i32 %17 to i64, !dbg !6218
  %18 = load i32, i32* %slot, align 4, !dbg !6220
  %sh_prom14 = zext i32 %18 to i64, !dbg !6220
  %shl15 = shl i64 1, %sh_prom14, !dbg !6220
  %and16 = and i64 %conv13, %shl15, !dbg !6221
  %tobool17 = icmp ne i64 %and16, 0, !dbg !6221
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !6222

if.then18:                                        ; preds = %do.body
  %19 = load i32, i32* %bank, align 4, !dbg !6223
  %shl19 = shl i32 %19, 5, !dbg !6225
  %20 = load i32, i32* %slot, align 4, !dbg !6226
  %or = or i32 %shl19, %20, !dbg !6227
  store i32 %or, i32* %channel, align 4, !dbg !6228
  %21 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6229
  %22 = load i32, i32* %bank, align 4, !dbg !6230
  %23 = load i32, i32* %slot, align 4, !dbg !6231
  %sh_prom20 = zext i32 %23 to i64, !dbg !6231
  %shl21 = shl i64 1, %sh_prom20, !dbg !6231
  %conv22 = trunc i64 %shl21 to i32, !dbg !6231
  call void @edma_shadow0_write_array(%struct.edma_cc* %21, i32 112, i32 %22, i32 %conv22) #11, !dbg !6232
  %24 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6233
  %slave_chans = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %24, i32 0, i32 18, !dbg !6234
  %25 = load %struct.edma_chan*, %struct.edma_chan** %slave_chans, align 8, !dbg !6234
  %26 = load i32, i32* %channel, align 4, !dbg !6235
  %idxprom = zext i32 %26 to i64, !dbg !6233
  %arrayidx = getelementptr %struct.edma_chan, %struct.edma_chan* %25, i64 %idxprom, !dbg !6233
  call void @edma_completion_handler(%struct.edma_chan* %arrayidx) #11, !dbg !6236
  br label %if.end23, !dbg !6237

if.end23:                                         ; preds = %if.then18, %do.body
  br label %do.cond, !dbg !6238

do.cond:                                          ; preds = %if.end23
  %27 = load i32, i32* %sh_ipr, align 4, !dbg !6239
  %tobool24 = icmp ne i32 %27, 0, !dbg !6238
  br i1 %tobool24, label %do.body, label %do.end, !dbg !6238, !llvm.loop !6240

do.end:                                           ; preds = %do.cond
  %28 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6242
  call void @edma_shadow0_write(%struct.edma_cc* %28, i32 120, i32 1) #11, !dbg !6243
  store i32 1, i32* %retval, align 4, !dbg !6244
  br label %return, !dbg !6244

return:                                           ; preds = %do.end, %if.then4, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !6245
  ret i32 %29, !dbg !6245
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_ccerr_handler(i32 %irq, i8* %data) #0 !dbg !6246 {
entry:
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ctlr = alloca i32, align 4
  %cnt = alloca i32, align 4
  %val = alloca i32, align 4
  %emr = alloca i64, align 8
  %k = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6247, metadata !DIExpression()), !dbg !6248
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6249, metadata !DIExpression()), !dbg !6250
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !6251, metadata !DIExpression()), !dbg !6252
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6253
  %1 = bitcast i8* %0 to %struct.edma_cc*, !dbg !6253
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !6252
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6254, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6256, metadata !DIExpression()), !dbg !6257
  call void @llvm.dbg.declare(metadata i32* %ctlr, metadata !6258, metadata !DIExpression()), !dbg !6259
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !6260, metadata !DIExpression()), !dbg !6261
  store i32 0, i32* %cnt, align 4, !dbg !6261
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6262, metadata !DIExpression()), !dbg !6263
  %2 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6264
  %id = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %2, i32 0, i32 3, !dbg !6265
  %3 = load i32, i32* %id, align 8, !dbg !6265
  store i32 %3, i32* %ctlr, align 4, !dbg !6266
  %4 = load i32, i32* %ctlr, align 4, !dbg !6267
  %cmp = icmp slt i32 %4, 0, !dbg !6269
  br i1 %cmp, label %if.then, label %if.end, !dbg !6270

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6271
  br label %return, !dbg !6271

if.end:                                           ; preds = %entry
  %5 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6272
  %call = call zeroext i1 @edma_error_pending(%struct.edma_cc* %5) #11, !dbg !6274
  br i1 %call, label %if.end2, label %if.then1, !dbg !6275

if.then1:                                         ; preds = %if.end
  %6 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6276
  %dev = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %6, i32 0, i32 0, !dbg !6276
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6276
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %7, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.dma_ccerr_handler, i64 0, i64 0)) #12, !dbg !6276
  %8 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6278
  call void @edma_write(%struct.edma_cc* %8, i32 800, i32 1) #11, !dbg !6279
  store i32 0, i32* %retval, align 4, !dbg !6280
  br label %return, !dbg !6280

if.end2:                                          ; preds = %if.end
  br label %while.body, !dbg !6281

while.body:                                       ; preds = %if.end2, %if.end40
  store i32 0, i32* %j, align 4, !dbg !6282
  br label %for.cond, !dbg !6285

for.cond:                                         ; preds = %for.inc22, %while.body
  %9 = load i32, i32* %j, align 4, !dbg !6286
  %cmp3 = icmp slt i32 %9, 2, !dbg !6288
  br i1 %cmp3, label %for.body, label %for.end23, !dbg !6289

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %emr, metadata !6290, metadata !DIExpression()), !dbg !6292
  %10 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6293
  %11 = load i32, i32* %j, align 4, !dbg !6294
  %call4 = call i32 @edma_read_array(%struct.edma_cc* %10, i32 768, i32 %11) #11, !dbg !6295
  store i32 %call4, i32* %val, align 4, !dbg !6296
  %12 = load i32, i32* %val, align 4, !dbg !6297
  %tobool = icmp ne i32 %12, 0, !dbg !6297
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !6299

if.then5:                                         ; preds = %for.body
  br label %for.inc22, !dbg !6300

if.end6:                                          ; preds = %for.body
  %13 = load i32, i32* %val, align 4, !dbg !6301
  %conv = zext i32 %13 to i64, !dbg !6301
  store i64 %conv, i64* %emr, align 8, !dbg !6302
  %call7 = call i64 @find_next_bit(i64* %emr, i64 32, i64 0) #11, !dbg !6303
  %conv8 = trunc i64 %call7 to i32, !dbg !6303
  store i32 %conv8, i32* %i, align 4, !dbg !6305
  br label %for.cond9, !dbg !6306

for.cond9:                                        ; preds = %for.inc, %if.end6
  %14 = load i32, i32* %i, align 4, !dbg !6307
  %cmp10 = icmp slt i32 %14, 32, !dbg !6309
  br i1 %cmp10, label %for.body12, label %for.end, !dbg !6310

for.body12:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6311, metadata !DIExpression()), !dbg !6313
  %15 = load i32, i32* %j, align 4, !dbg !6314
  %shl = shl i32 %15, 5, !dbg !6315
  %16 = load i32, i32* %i, align 4, !dbg !6316
  %add = add i32 %shl, %16, !dbg !6317
  store i32 %add, i32* %k, align 4, !dbg !6313
  %17 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6318
  %18 = load i32, i32* %j, align 4, !dbg !6319
  %19 = load i32, i32* %i, align 4, !dbg !6320
  %sh_prom = zext i32 %19 to i64, !dbg !6320
  %shl13 = shl i64 1, %sh_prom, !dbg !6320
  %conv14 = trunc i64 %shl13 to i32, !dbg !6320
  call void @edma_write_array(%struct.edma_cc* %17, i32 776, i32 %18, i32 %conv14) #11, !dbg !6321
  %20 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6322
  %21 = load i32, i32* %j, align 4, !dbg !6323
  %22 = load i32, i32* %i, align 4, !dbg !6324
  %sh_prom15 = zext i32 %22 to i64, !dbg !6324
  %shl16 = shl i64 1, %sh_prom15, !dbg !6324
  %conv17 = trunc i64 %shl16 to i32, !dbg !6324
  call void @edma_shadow0_write_array(%struct.edma_cc* %20, i32 64, i32 %21, i32 %conv17) #11, !dbg !6325
  %23 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6326
  %slave_chans = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %23, i32 0, i32 18, !dbg !6327
  %24 = load %struct.edma_chan*, %struct.edma_chan** %slave_chans, align 8, !dbg !6327
  %25 = load i32, i32* %k, align 4, !dbg !6328
  %idxprom = sext i32 %25 to i64, !dbg !6326
  %arrayidx = getelementptr %struct.edma_chan, %struct.edma_chan* %24, i64 %idxprom, !dbg !6326
  call void @edma_error_handler(%struct.edma_chan* %arrayidx) #11, !dbg !6329
  br label %for.inc, !dbg !6330

for.inc:                                          ; preds = %for.body12
  %26 = load i32, i32* %i, align 4, !dbg !6331
  %add18 = add i32 %26, 1, !dbg !6332
  %conv19 = sext i32 %add18 to i64, !dbg !6331
  %call20 = call i64 @find_next_bit(i64* %emr, i64 32, i64 %conv19) #11, !dbg !6333
  %conv21 = trunc i64 %call20 to i32, !dbg !6333
  store i32 %conv21, i32* %i, align 4, !dbg !6334
  br label %for.cond9, !dbg !6335, !llvm.loop !6336

for.end:                                          ; preds = %for.cond9
  br label %for.inc22, !dbg !6338

for.inc22:                                        ; preds = %for.end, %if.then5
  %27 = load i32, i32* %j, align 4, !dbg !6339
  %inc = add i32 %27, 1, !dbg !6339
  store i32 %inc, i32* %j, align 4, !dbg !6339
  br label %for.cond, !dbg !6340, !llvm.loop !6341

for.end23:                                        ; preds = %for.cond
  %28 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6343
  %call24 = call i32 @edma_read(%struct.edma_cc* %28, i32 784) #11, !dbg !6344
  store i32 %call24, i32* %val, align 4, !dbg !6345
  %29 = load i32, i32* %val, align 4, !dbg !6346
  %tobool25 = icmp ne i32 %29, 0, !dbg !6346
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !6348

if.then26:                                        ; preds = %for.end23
  %30 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6349
  %31 = load i32, i32* %val, align 4, !dbg !6351
  call void @edma_write(%struct.edma_cc* %30, i32 788, i32 %31) #11, !dbg !6352
  %32 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6353
  %33 = load i32, i32* %val, align 4, !dbg !6354
  call void @edma_shadow0_write(%struct.edma_cc* %32, i32 148, i32 %33) #11, !dbg !6355
  br label %if.end27, !dbg !6356

if.end27:                                         ; preds = %if.then26, %for.end23
  %34 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6357
  %call28 = call i32 @edma_read(%struct.edma_cc* %34, i32 792) #11, !dbg !6358
  store i32 %call28, i32* %val, align 4, !dbg !6359
  %35 = load i32, i32* %val, align 4, !dbg !6360
  %tobool29 = icmp ne i32 %35, 0, !dbg !6360
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !6362

if.then30:                                        ; preds = %if.end27
  %36 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6363
  %dev31 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %36, i32 0, i32 0, !dbg !6363
  %37 = load %struct.device*, %struct.device** %dev31, align 8, !dbg !6363
  %38 = load i32, i32* %val, align 4, !dbg !6363
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %37, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0), i32 %38) #12, !dbg !6363
  %39 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6365
  %40 = load i32, i32* %val, align 4, !dbg !6366
  call void @edma_write(%struct.edma_cc* %39, i32 796, i32 %40) #11, !dbg !6367
  br label %if.end32, !dbg !6368

if.end32:                                         ; preds = %if.then30, %if.end27
  %41 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6369
  %call33 = call zeroext i1 @edma_error_pending(%struct.edma_cc* %41) #11, !dbg !6371
  br i1 %call33, label %if.end35, label %if.then34, !dbg !6372

if.then34:                                        ; preds = %if.end32
  br label %while.end, !dbg !6373

if.end35:                                         ; preds = %if.end32
  %42 = load i32, i32* %cnt, align 4, !dbg !6374
  %inc36 = add i32 %42, 1, !dbg !6374
  store i32 %inc36, i32* %cnt, align 4, !dbg !6374
  %43 = load i32, i32* %cnt, align 4, !dbg !6375
  %cmp37 = icmp ugt i32 %43, 10, !dbg !6377
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !6378

if.then39:                                        ; preds = %if.end35
  br label %while.end, !dbg !6379

if.end40:                                         ; preds = %if.end35
  br label %while.body, !dbg !6281, !llvm.loop !6380

while.end:                                        ; preds = %if.then39, %if.then34
  %44 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6382
  call void @edma_write(%struct.edma_cc* %44, i32 800, i32 1) #11, !dbg !6383
  store i32 1, i32* %retval, align 4, !dbg !6384
  br label %return, !dbg !6384

return:                                           ; preds = %while.end, %if.then1, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !6385
  ret i32 %45, !dbg !6385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_alloc_slot(%struct.edma_cc* %ecc, i32 %slot) #0 !dbg !6386 {
entry:
  %retval = alloca i32, align 4
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %slot.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !6389, metadata !DIExpression()), !dbg !6390
  store i32 %slot, i32* %slot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot.addr, metadata !6391, metadata !DIExpression()), !dbg !6392
  %0 = load i32, i32* %slot.addr, align 4, !dbg !6393
  %cmp = icmp sge i32 %0, 0, !dbg !6395
  br i1 %cmp, label %if.then, label %if.end3, !dbg !6396

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %slot.addr, align 4, !dbg !6397
  %and = and i32 %1, 65535, !dbg !6397
  store i32 %and, i32* %slot.addr, align 4, !dbg !6399
  %2 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6400
  %chmap_exist = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %2, i32 0, i32 10, !dbg !6402
  %3 = load i8, i8* %chmap_exist, align 4, !dbg !6402
  %tobool = trunc i8 %3 to i1, !dbg !6402
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6403

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %slot.addr, align 4, !dbg !6404
  %5 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6405
  %num_channels = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %5, i32 0, i32 5, !dbg !6406
  %6 = load i32, i32* %num_channels, align 8, !dbg !6406
  %cmp1 = icmp ult i32 %4, %6, !dbg !6407
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !6408

if.then2:                                         ; preds = %land.lhs.true
  store i32 -1, i32* %slot.addr, align 4, !dbg !6409
  br label %if.end, !dbg !6410

if.end:                                           ; preds = %if.then2, %land.lhs.true, %if.then
  br label %if.end3, !dbg !6411

if.end3:                                          ; preds = %if.end, %entry
  %7 = load i32, i32* %slot.addr, align 4, !dbg !6412
  %cmp4 = icmp slt i32 %7, 0, !dbg !6414
  br i1 %cmp4, label %if.then5, label %if.else23, !dbg !6415

if.then5:                                         ; preds = %if.end3
  %8 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6416
  %chmap_exist6 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %8, i32 0, i32 10, !dbg !6419
  %9 = load i8, i8* %chmap_exist6, align 4, !dbg !6419
  %tobool7 = trunc i8 %9 to i1, !dbg !6419
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !6420

if.then8:                                         ; preds = %if.then5
  store i32 0, i32* %slot.addr, align 4, !dbg !6421
  br label %if.end10, !dbg !6422

if.else:                                          ; preds = %if.then5
  %10 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6423
  %num_channels9 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %10, i32 0, i32 5, !dbg !6424
  %11 = load i32, i32* %num_channels9, align 8, !dbg !6424
  store i32 %11, i32* %slot.addr, align 4, !dbg !6425
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then8
  br label %for.cond, !dbg !6426

for.cond:                                         ; preds = %if.end22, %if.end10
  %12 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6427
  %slot_inuse = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %12, i32 0, i32 14, !dbg !6431
  %13 = load i64*, i64** %slot_inuse, align 8, !dbg !6431
  %14 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6432
  %num_slots = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %14, i32 0, i32 8, !dbg !6433
  %15 = load i32, i32* %num_slots, align 4, !dbg !6433
  %conv = zext i32 %15 to i64, !dbg !6432
  %16 = load i32, i32* %slot.addr, align 4, !dbg !6434
  %conv11 = sext i32 %16 to i64, !dbg !6434
  %call = call i64 @find_next_zero_bit(i64* %13, i64 %conv, i64 %conv11) #11, !dbg !6435
  %conv12 = trunc i64 %call to i32, !dbg !6435
  store i32 %conv12, i32* %slot.addr, align 4, !dbg !6436
  %17 = load i32, i32* %slot.addr, align 4, !dbg !6437
  %18 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6439
  %num_slots13 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %18, i32 0, i32 8, !dbg !6440
  %19 = load i32, i32* %num_slots13, align 4, !dbg !6440
  %cmp14 = icmp eq i32 %17, %19, !dbg !6441
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !6442

if.then16:                                        ; preds = %for.cond
  store i32 -12, i32* %retval, align 4, !dbg !6443
  br label %return, !dbg !6443

if.end17:                                         ; preds = %for.cond
  %20 = load i32, i32* %slot.addr, align 4, !dbg !6444
  %conv18 = sext i32 %20 to i64, !dbg !6444
  %21 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6446
  %slot_inuse19 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %21, i32 0, i32 14, !dbg !6447
  %22 = load i64*, i64** %slot_inuse19, align 8, !dbg !6447
  %call20 = call zeroext i1 @test_and_set_bit(i64 %conv18, i64* %22) #11, !dbg !6448
  br i1 %call20, label %if.end22, label %if.then21, !dbg !6449

if.then21:                                        ; preds = %if.end17
  br label %for.end, !dbg !6450

if.end22:                                         ; preds = %if.end17
  br label %for.cond, !dbg !6451, !llvm.loop !6452

for.end:                                          ; preds = %if.then21
  br label %if.end35, !dbg !6455

if.else23:                                        ; preds = %if.end3
  %23 = load i32, i32* %slot.addr, align 4, !dbg !6456
  %24 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6458
  %num_slots24 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %24, i32 0, i32 8, !dbg !6459
  %25 = load i32, i32* %num_slots24, align 4, !dbg !6459
  %cmp25 = icmp uge i32 %23, %25, !dbg !6460
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !6461

if.then27:                                        ; preds = %if.else23
  store i32 -22, i32* %retval, align 4, !dbg !6462
  br label %return, !dbg !6462

if.else28:                                        ; preds = %if.else23
  %26 = load i32, i32* %slot.addr, align 4, !dbg !6464
  %conv29 = sext i32 %26 to i64, !dbg !6464
  %27 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6466
  %slot_inuse30 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %27, i32 0, i32 14, !dbg !6467
  %28 = load i64*, i64** %slot_inuse30, align 8, !dbg !6467
  %call31 = call zeroext i1 @test_and_set_bit(i64 %conv29, i64* %28) #11, !dbg !6468
  br i1 %call31, label %if.then32, label %if.end33, !dbg !6469

if.then32:                                        ; preds = %if.else28
  store i32 -16, i32* %retval, align 4, !dbg !6470
  br label %return, !dbg !6470

if.end33:                                         ; preds = %if.else28
  br label %if.end34

if.end34:                                         ; preds = %if.end33
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %for.end
  %29 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6472
  %30 = load i32, i32* %slot.addr, align 4, !dbg !6473
  call void @edma_write_slot(%struct.edma_cc* %29, i32 %30, %struct.edmacc_param* @dummy_paramset) #11, !dbg !6474
  %31 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6475
  %id = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %31, i32 0, i32 3, !dbg !6475
  %32 = load i32, i32* %id, align 8, !dbg !6475
  %shl = shl i32 %32, 16, !dbg !6475
  %33 = load i32, i32* %slot.addr, align 4, !dbg !6475
  %or = or i32 %shl, %33, !dbg !6475
  store i32 %or, i32* %retval, align 4, !dbg !6476
  br label %return, !dbg !6476

return:                                           ; preds = %if.end35, %if.then32, %if.then27, %if.then16
  %34 = load i32, i32* %retval, align 4, !dbg !6477
  ret i32 %34, !dbg !6477
}

; Function Attrs: noredzone
declare dso_local i32 @of_parse_phandle_with_fixed_args(%struct.device_node*, i8*, i32, i32, %struct.of_phandle_args*) #2

; Function Attrs: noredzone
declare dso_local i32 @of_property_read_variable_u32_array(%struct.device_node*, i8*, i32*, i64, i64) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_assign_priority_to_queue(%struct.edma_cc* %ecc, i32 %queue_no, i32 %priority) #0 !dbg !6478 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %queue_no.addr = alloca i32, align 4
  %priority.addr = alloca i32, align 4
  %bit = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !6481, metadata !DIExpression()), !dbg !6482
  store i32 %queue_no, i32* %queue_no.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %queue_no.addr, metadata !6483, metadata !DIExpression()), !dbg !6484
  store i32 %priority, i32* %priority.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %priority.addr, metadata !6485, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !6487, metadata !DIExpression()), !dbg !6488
  %0 = load i32, i32* %queue_no.addr, align 4, !dbg !6489
  %mul = mul i32 %0, 4, !dbg !6490
  store i32 %mul, i32* %bit, align 4, !dbg !6488
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6491
  %2 = load i32, i32* %bit, align 4, !dbg !6492
  %shl = shl i32 7, %2, !dbg !6493
  %neg = xor i32 %shl, -1, !dbg !6494
  %3 = load i32, i32* %priority.addr, align 4, !dbg !6495
  %and = and i32 %3, 7, !dbg !6496
  %4 = load i32, i32* %bit, align 4, !dbg !6497
  %shl1 = shl i32 %and, %4, !dbg !6498
  call void @edma_modify(%struct.edma_cc* %1, i32 644, i32 %neg, i32 %shl1) #11, !dbg !6499
  ret void, !dbg !6500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_write_array2(%struct.edma_cc* %ecc, i32 %offset, i32 %i, i32 %j, i32 %val) #0 !dbg !6501 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !6504, metadata !DIExpression()), !dbg !6505
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6506, metadata !DIExpression()), !dbg !6507
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !6510, metadata !DIExpression()), !dbg !6511
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !6512, metadata !DIExpression()), !dbg !6513
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6514
  %1 = load i32, i32* %offset.addr, align 4, !dbg !6515
  %2 = load i32, i32* %i.addr, align 4, !dbg !6516
  %mul = mul i32 %2, 2, !dbg !6517
  %3 = load i32, i32* %j.addr, align 4, !dbg !6518
  %add = add i32 %mul, %3, !dbg !6519
  %shl = shl i32 %add, 2, !dbg !6520
  %add1 = add i32 %1, %shl, !dbg !6521
  %4 = load i32, i32* %val.addr, align 4, !dbg !6522
  call void @edma_write(%struct.edma_cc* %0, i32 %add1, i32 %4) #11, !dbg !6523
  ret void, !dbg !6524
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_write_array(%struct.edma_cc* %ecc, i32 %offset, i32 %i, i32 %val) #0 !dbg !6525 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !6528, metadata !DIExpression()), !dbg !6529
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6530, metadata !DIExpression()), !dbg !6531
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !6532, metadata !DIExpression()), !dbg !6533
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !6534, metadata !DIExpression()), !dbg !6535
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6536
  %1 = load i32, i32* %offset.addr, align 4, !dbg !6537
  %2 = load i32, i32* %i.addr, align 4, !dbg !6538
  %shl = shl i32 %2, 2, !dbg !6539
  %add = add i32 %1, %shl, !dbg !6540
  %3 = load i32, i32* %val.addr, align 4, !dbg !6541
  call void @edma_write(%struct.edma_cc* %0, i32 %add, i32 %3) #11, !dbg !6542
  ret void, !dbg !6543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_dma_init(%struct.edma_cc* %ecc, i1 zeroext %legacy_mode) #0 !dbg !6544 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %legacy_mode.addr = alloca i8, align 1
  %s_ddev = alloca %struct.dma_device*, align 8
  %m_ddev = alloca %struct.dma_device*, align 8
  %memcpy_channels = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %echan = alloca %struct.edma_chan*, align 8
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !6547, metadata !DIExpression()), !dbg !6548
  %frombool = zext i1 %legacy_mode to i8
  store i8 %frombool, i8* %legacy_mode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %legacy_mode.addr, metadata !6549, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.declare(metadata %struct.dma_device** %s_ddev, metadata !6551, metadata !DIExpression()), !dbg !6552
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6553
  %dma_slave = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %0, i32 0, i32 16, !dbg !6554
  store %struct.dma_device* %dma_slave, %struct.dma_device** %s_ddev, align 8, !dbg !6552
  call void @llvm.dbg.declare(metadata %struct.dma_device** %m_ddev, metadata !6555, metadata !DIExpression()), !dbg !6556
  store %struct.dma_device* null, %struct.dma_device** %m_ddev, align 8, !dbg !6556
  call void @llvm.dbg.declare(metadata i32** %memcpy_channels, metadata !6557, metadata !DIExpression()), !dbg !6558
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6559
  %info = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %1, i32 0, i32 1, !dbg !6560
  %2 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !6560
  %memcpy_channels1 = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %2, i32 0, i32 2, !dbg !6561
  %3 = load i32*, i32** %memcpy_channels1, align 8, !dbg !6561
  store i32* %3, i32** %memcpy_channels, align 8, !dbg !6558
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6562, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6564, metadata !DIExpression()), !dbg !6565
  %4 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6566
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %4, i32 0, i32 6, !dbg !6566
  call void @__dma_cap_zero(%struct.dma_cap_mask_t* %cap_mask) #11, !dbg !6566
  %5 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6567
  %cap_mask2 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %5, i32 0, i32 6, !dbg !6567
  call void @__dma_cap_set(i32 10, %struct.dma_cap_mask_t* %cap_mask2) #11, !dbg !6567
  %6 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6568
  %cap_mask3 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %6, i32 0, i32 6, !dbg !6568
  call void @__dma_cap_set(i32 11, %struct.dma_cap_mask_t* %cap_mask3) #11, !dbg !6568
  %7 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6569
  %legacy_mode4 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %7, i32 0, i32 4, !dbg !6571
  %8 = load i8, i8* %legacy_mode4, align 4, !dbg !6571
  %tobool = trunc i8 %8 to i1, !dbg !6571
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6572

land.lhs.true:                                    ; preds = %entry
  %9 = load i32*, i32** %memcpy_channels, align 8, !dbg !6573
  %tobool5 = icmp ne i32* %9, null, !dbg !6573
  br i1 %tobool5, label %if.end, label %if.then, !dbg !6574

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6575
  %dev = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %10, i32 0, i32 0, !dbg !6575
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6575
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %11, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.28, i64 0, i64 0)) #12, !dbg !6575
  %12 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6577
  %cap_mask6 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %12, i32 0, i32 6, !dbg !6577
  call void @__dma_cap_set(i32 0, %struct.dma_cap_mask_t* %cap_mask6) #11, !dbg !6577
  %13 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6578
  %cap_mask7 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %13, i32 0, i32 6, !dbg !6578
  call void @__dma_cap_set(i32 12, %struct.dma_cap_mask_t* %cap_mask7) #11, !dbg !6578
  %14 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6579
  %device_prep_dma_memcpy = getelementptr inbounds %struct.dma_device, %struct.dma_device* %14, i32 0, i32 29, !dbg !6580
  store %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)* @edma_prep_dma_memcpy, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)** %device_prep_dma_memcpy, align 8, !dbg !6581
  %15 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6582
  %device_prep_interleaved_dma = getelementptr inbounds %struct.dma_device, %struct.dma_device* %15, i32 0, i32 39, !dbg !6583
  store %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)* @edma_prep_dma_interleaved, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)** %device_prep_interleaved_dma, align 8, !dbg !6584
  %16 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6585
  %directions = getelementptr inbounds %struct.dma_device, %struct.dma_device* %16, i32 0, i32 21, !dbg !6586
  store i32 1, i32* %directions, align 8, !dbg !6587
  br label %if.end, !dbg !6588

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %17 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6589
  %device_prep_slave_sg = getelementptr inbounds %struct.dma_device, %struct.dma_device* %17, i32 0, i32 37, !dbg !6590
  store %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)* @edma_prep_slave_sg, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)** %device_prep_slave_sg, align 8, !dbg !6591
  %18 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6592
  %device_prep_dma_cyclic = getelementptr inbounds %struct.dma_device, %struct.dma_device* %18, i32 0, i32 38, !dbg !6593
  store %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)* @edma_prep_dma_cyclic, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)** %device_prep_dma_cyclic, align 8, !dbg !6594
  %19 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6595
  %device_alloc_chan_resources = getelementptr inbounds %struct.dma_device, %struct.dma_device* %19, i32 0, i32 27, !dbg !6596
  store i32 (%struct.dma_chan*)* @edma_alloc_chan_resources, i32 (%struct.dma_chan*)** %device_alloc_chan_resources, align 8, !dbg !6597
  %20 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6598
  %device_free_chan_resources = getelementptr inbounds %struct.dma_device, %struct.dma_device* %20, i32 0, i32 28, !dbg !6599
  store void (%struct.dma_chan*)* @edma_free_chan_resources, void (%struct.dma_chan*)** %device_free_chan_resources, align 8, !dbg !6600
  %21 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6601
  %device_issue_pending = getelementptr inbounds %struct.dma_device, %struct.dma_device* %21, i32 0, i32 48, !dbg !6602
  store void (%struct.dma_chan*)* @edma_issue_pending, void (%struct.dma_chan*)** %device_issue_pending, align 8, !dbg !6603
  %22 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6604
  %device_tx_status = getelementptr inbounds %struct.dma_device, %struct.dma_device* %22, i32 0, i32 47, !dbg !6605
  store i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)* @edma_tx_status, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)** %device_tx_status, align 8, !dbg !6606
  %23 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6607
  %device_config = getelementptr inbounds %struct.dma_device, %struct.dma_device* %23, i32 0, i32 42, !dbg !6608
  store i32 (%struct.dma_chan*, %struct.dma_slave_config*)* @edma_slave_config, i32 (%struct.dma_chan*, %struct.dma_slave_config*)** %device_config, align 8, !dbg !6609
  %24 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6610
  %device_pause = getelementptr inbounds %struct.dma_device, %struct.dma_device* %24, i32 0, i32 43, !dbg !6611
  store i32 (%struct.dma_chan*)* @edma_dma_pause, i32 (%struct.dma_chan*)** %device_pause, align 8, !dbg !6612
  %25 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6613
  %device_resume = getelementptr inbounds %struct.dma_device, %struct.dma_device* %25, i32 0, i32 44, !dbg !6614
  store i32 (%struct.dma_chan*)* @edma_dma_resume, i32 (%struct.dma_chan*)** %device_resume, align 8, !dbg !6615
  %26 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6616
  %device_terminate_all = getelementptr inbounds %struct.dma_device, %struct.dma_device* %26, i32 0, i32 45, !dbg !6617
  store i32 (%struct.dma_chan*)* @edma_terminate_all, i32 (%struct.dma_chan*)** %device_terminate_all, align 8, !dbg !6618
  %27 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6619
  %device_synchronize = getelementptr inbounds %struct.dma_device, %struct.dma_device* %27, i32 0, i32 46, !dbg !6620
  store void (%struct.dma_chan*)* @edma_synchronize, void (%struct.dma_chan*)** %device_synchronize, align 8, !dbg !6621
  %28 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6622
  %src_addr_widths = getelementptr inbounds %struct.dma_device, %struct.dma_device* %28, i32 0, i32 19, !dbg !6623
  store i32 30, i32* %src_addr_widths, align 8, !dbg !6624
  %29 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6625
  %dst_addr_widths = getelementptr inbounds %struct.dma_device, %struct.dma_device* %29, i32 0, i32 20, !dbg !6626
  store i32 30, i32* %dst_addr_widths, align 4, !dbg !6627
  %30 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6628
  %directions8 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %30, i32 0, i32 21, !dbg !6629
  %31 = load i32, i32* %directions8, align 8, !dbg !6630
  %conv = zext i32 %31 to i64, !dbg !6630
  %or = or i64 %conv, 6, !dbg !6630
  %conv9 = trunc i64 %or to i32, !dbg !6630
  store i32 %conv9, i32* %directions8, align 8, !dbg !6630
  %32 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6631
  %residue_granularity = getelementptr inbounds %struct.dma_device, %struct.dma_device* %32, i32 0, i32 26, !dbg !6632
  store i32 2, i32* %residue_granularity, align 4, !dbg !6633
  %33 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6634
  %max_burst = getelementptr inbounds %struct.dma_device, %struct.dma_device* %33, i32 0, i32 23, !dbg !6635
  store i32 32767, i32* %max_burst, align 8, !dbg !6636
  %34 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6637
  %dev10 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %34, i32 0, i32 0, !dbg !6638
  %35 = load %struct.device*, %struct.device** %dev10, align 8, !dbg !6638
  %36 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6639
  %dev11 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %36, i32 0, i32 15, !dbg !6640
  store %struct.device* %35, %struct.device** %dev11, align 8, !dbg !6641
  %37 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6642
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %37, i32 0, i32 3, !dbg !6643
  call void @INIT_LIST_HEAD(%struct.list_head* %channels) #11, !dbg !6644
  %38 = load i32*, i32** %memcpy_channels, align 8, !dbg !6645
  %tobool12 = icmp ne i32* %38, null, !dbg !6645
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !6647

if.then13:                                        ; preds = %if.end
  %39 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6648
  %dev14 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %39, i32 0, i32 0, !dbg !6650
  %40 = load %struct.device*, %struct.device** %dev14, align 8, !dbg !6650
  %call = call i8* @devm_kzalloc(%struct.device* %40, i64 384, i32 3264) #11, !dbg !6651
  %41 = bitcast i8* %call to %struct.dma_device*, !dbg !6651
  store %struct.dma_device* %41, %struct.dma_device** %m_ddev, align 8, !dbg !6652
  %42 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6653
  %tobool15 = icmp ne %struct.dma_device* %42, null, !dbg !6653
  br i1 %tobool15, label %if.end18, label %if.then16, !dbg !6655

if.then16:                                        ; preds = %if.then13
  %43 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6656
  %dev17 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %43, i32 0, i32 0, !dbg !6656
  %44 = load %struct.device*, %struct.device** %dev17, align 8, !dbg !6656
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %44, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i64 0, i64 0)) #12, !dbg !6656
  store i32* null, i32** %memcpy_channels, align 8, !dbg !6658
  br label %ch_setup, !dbg !6659

if.end18:                                         ; preds = %if.then13
  %45 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6660
  %46 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6661
  %dma_memcpy = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %46, i32 0, i32 17, !dbg !6662
  store %struct.dma_device* %45, %struct.dma_device** %dma_memcpy, align 8, !dbg !6663
  %47 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6664
  %cap_mask19 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %47, i32 0, i32 6, !dbg !6664
  call void @__dma_cap_zero(%struct.dma_cap_mask_t* %cap_mask19) #11, !dbg !6664
  %48 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6665
  %cap_mask20 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %48, i32 0, i32 6, !dbg !6665
  call void @__dma_cap_set(i32 0, %struct.dma_cap_mask_t* %cap_mask20) #11, !dbg !6665
  %49 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6666
  %cap_mask21 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %49, i32 0, i32 6, !dbg !6666
  call void @__dma_cap_set(i32 12, %struct.dma_cap_mask_t* %cap_mask21) #11, !dbg !6666
  %50 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6667
  %device_prep_dma_memcpy22 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %50, i32 0, i32 29, !dbg !6668
  store %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)* @edma_prep_dma_memcpy, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)** %device_prep_dma_memcpy22, align 8, !dbg !6669
  %51 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6670
  %device_prep_interleaved_dma23 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %51, i32 0, i32 39, !dbg !6671
  store %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)* @edma_prep_dma_interleaved, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)** %device_prep_interleaved_dma23, align 8, !dbg !6672
  %52 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6673
  %device_alloc_chan_resources24 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %52, i32 0, i32 27, !dbg !6674
  store i32 (%struct.dma_chan*)* @edma_alloc_chan_resources, i32 (%struct.dma_chan*)** %device_alloc_chan_resources24, align 8, !dbg !6675
  %53 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6676
  %device_free_chan_resources25 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %53, i32 0, i32 28, !dbg !6677
  store void (%struct.dma_chan*)* @edma_free_chan_resources, void (%struct.dma_chan*)** %device_free_chan_resources25, align 8, !dbg !6678
  %54 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6679
  %device_issue_pending26 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %54, i32 0, i32 48, !dbg !6680
  store void (%struct.dma_chan*)* @edma_issue_pending, void (%struct.dma_chan*)** %device_issue_pending26, align 8, !dbg !6681
  %55 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6682
  %device_tx_status27 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %55, i32 0, i32 47, !dbg !6683
  store i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)* @edma_tx_status, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)** %device_tx_status27, align 8, !dbg !6684
  %56 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6685
  %device_config28 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %56, i32 0, i32 42, !dbg !6686
  store i32 (%struct.dma_chan*, %struct.dma_slave_config*)* @edma_slave_config, i32 (%struct.dma_chan*, %struct.dma_slave_config*)** %device_config28, align 8, !dbg !6687
  %57 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6688
  %device_pause29 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %57, i32 0, i32 43, !dbg !6689
  store i32 (%struct.dma_chan*)* @edma_dma_pause, i32 (%struct.dma_chan*)** %device_pause29, align 8, !dbg !6690
  %58 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6691
  %device_resume30 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %58, i32 0, i32 44, !dbg !6692
  store i32 (%struct.dma_chan*)* @edma_dma_resume, i32 (%struct.dma_chan*)** %device_resume30, align 8, !dbg !6693
  %59 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6694
  %device_terminate_all31 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %59, i32 0, i32 45, !dbg !6695
  store i32 (%struct.dma_chan*)* @edma_terminate_all, i32 (%struct.dma_chan*)** %device_terminate_all31, align 8, !dbg !6696
  %60 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6697
  %device_synchronize32 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %60, i32 0, i32 46, !dbg !6698
  store void (%struct.dma_chan*)* @edma_synchronize, void (%struct.dma_chan*)** %device_synchronize32, align 8, !dbg !6699
  %61 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6700
  %src_addr_widths33 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %61, i32 0, i32 19, !dbg !6701
  store i32 30, i32* %src_addr_widths33, align 8, !dbg !6702
  %62 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6703
  %dst_addr_widths34 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %62, i32 0, i32 20, !dbg !6704
  store i32 30, i32* %dst_addr_widths34, align 4, !dbg !6705
  %63 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6706
  %directions35 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %63, i32 0, i32 21, !dbg !6707
  store i32 1, i32* %directions35, align 8, !dbg !6708
  %64 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6709
  %residue_granularity36 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %64, i32 0, i32 26, !dbg !6710
  store i32 2, i32* %residue_granularity36, align 4, !dbg !6711
  %65 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6712
  %dev37 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %65, i32 0, i32 0, !dbg !6713
  %66 = load %struct.device*, %struct.device** %dev37, align 8, !dbg !6713
  %67 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6714
  %dev38 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %67, i32 0, i32 15, !dbg !6715
  store %struct.device* %66, %struct.device** %dev38, align 8, !dbg !6716
  %68 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6717
  %channels39 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %68, i32 0, i32 3, !dbg !6718
  call void @INIT_LIST_HEAD(%struct.list_head* %channels39) #11, !dbg !6719
  br label %if.end45, !dbg !6720

if.else:                                          ; preds = %if.end
  %69 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6721
  %legacy_mode40 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %69, i32 0, i32 4, !dbg !6723
  %70 = load i8, i8* %legacy_mode40, align 4, !dbg !6723
  %tobool41 = trunc i8 %70 to i1, !dbg !6723
  br i1 %tobool41, label %if.end44, label %if.then42, !dbg !6724

if.then42:                                        ; preds = %if.else
  %71 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6725
  %dev43 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %71, i32 0, i32 0, !dbg !6725
  %72 = load %struct.device*, %struct.device** %dev43, align 8, !dbg !6725
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %72, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i64 0, i64 0)) #12, !dbg !6725
  br label %if.end44, !dbg !6727

if.end44:                                         ; preds = %if.then42, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end18
  br label %ch_setup, !dbg !6645

ch_setup:                                         ; preds = %if.end45, %if.then16
  call void @llvm.dbg.label(metadata !6728), !dbg !6729
  store i32 0, i32* %i, align 4, !dbg !6730
  br label %for.cond, !dbg !6732

for.cond:                                         ; preds = %for.inc64, %ch_setup
  %73 = load i32, i32* %i, align 4, !dbg !6733
  %74 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6735
  %num_channels = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %74, i32 0, i32 5, !dbg !6736
  %75 = load i32, i32* %num_channels, align 8, !dbg !6736
  %cmp = icmp ult i32 %73, %75, !dbg !6737
  br i1 %cmp, label %for.body, label %for.end66, !dbg !6738

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !6739, metadata !DIExpression()), !dbg !6741
  %76 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6742
  %slave_chans = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %76, i32 0, i32 18, !dbg !6743
  %77 = load %struct.edma_chan*, %struct.edma_chan** %slave_chans, align 8, !dbg !6743
  %78 = load i32, i32* %i, align 4, !dbg !6744
  %idxprom = sext i32 %78 to i64, !dbg !6742
  %arrayidx = getelementptr %struct.edma_chan, %struct.edma_chan* %77, i64 %idxprom, !dbg !6742
  store %struct.edma_chan* %arrayidx, %struct.edma_chan** %echan, align 8, !dbg !6741
  %79 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6745
  %id = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %79, i32 0, i32 3, !dbg !6745
  %80 = load i32, i32* %id, align 8, !dbg !6745
  %shl = shl i32 %80, 16, !dbg !6745
  %81 = load i32, i32* %i, align 4, !dbg !6745
  %or47 = or i32 %shl, %81, !dbg !6745
  %82 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6746
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %82, i32 0, i32 5, !dbg !6747
  store i32 %or47, i32* %ch_num, align 8, !dbg !6748
  %83 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !6749
  %84 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6750
  %ecc48 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %84, i32 0, i32 3, !dbg !6751
  store %struct.edma_cc* %83, %struct.edma_cc** %ecc48, align 8, !dbg !6752
  %85 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6753
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %85, i32 0, i32 0, !dbg !6754
  %desc_free = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan, i32 0, i32 2, !dbg !6755
  store void (%struct.virt_dma_desc*)* @edma_desc_free, void (%struct.virt_dma_desc*)** %desc_free, align 8, !dbg !6756
  %86 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6757
  %tobool49 = icmp ne %struct.dma_device* %86, null, !dbg !6757
  br i1 %tobool49, label %land.lhs.true50, label %if.else55, !dbg !6759

land.lhs.true50:                                  ; preds = %for.body
  %87 = load i32, i32* %i, align 4, !dbg !6760
  %88 = load i32*, i32** %memcpy_channels, align 8, !dbg !6761
  %call51 = call zeroext i1 @edma_is_memcpy_channel(i32 %87, i32* %88) #11, !dbg !6762
  br i1 %call51, label %if.then53, label %if.else55, !dbg !6763

if.then53:                                        ; preds = %land.lhs.true50
  %89 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6764
  %vchan54 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %89, i32 0, i32 0, !dbg !6765
  %90 = load %struct.dma_device*, %struct.dma_device** %m_ddev, align 8, !dbg !6766
  call void @vchan_init(%struct.virt_dma_chan* %vchan54, %struct.dma_device* %90) #11, !dbg !6767
  br label %if.end57, !dbg !6767

if.else55:                                        ; preds = %land.lhs.true50, %for.body
  %91 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6768
  %vchan56 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %91, i32 0, i32 0, !dbg !6769
  %92 = load %struct.dma_device*, %struct.dma_device** %s_ddev, align 8, !dbg !6770
  call void @vchan_init(%struct.virt_dma_chan* %vchan56, %struct.dma_device* %92) #11, !dbg !6771
  br label %if.end57

if.end57:                                         ; preds = %if.else55, %if.then53
  %93 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6772
  %node = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %93, i32 0, i32 1, !dbg !6773
  call void @INIT_LIST_HEAD(%struct.list_head* %node) #11, !dbg !6774
  store i32 0, i32* %j, align 4, !dbg !6775
  br label %for.cond58, !dbg !6777

for.cond58:                                       ; preds = %for.inc, %if.end57
  %94 = load i32, i32* %j, align 4, !dbg !6778
  %cmp59 = icmp slt i32 %94, 20, !dbg !6780
  br i1 %cmp59, label %for.body61, label %for.end, !dbg !6781

for.body61:                                       ; preds = %for.cond58
  %95 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6782
  %slot = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %95, i32 0, i32 8, !dbg !6783
  %96 = load i32, i32* %j, align 4, !dbg !6784
  %idxprom62 = sext i32 %96 to i64, !dbg !6782
  %arrayidx63 = getelementptr [20 x i32], [20 x i32]* %slot, i64 0, i64 %idxprom62, !dbg !6782
  store i32 -1, i32* %arrayidx63, align 4, !dbg !6785
  br label %for.inc, !dbg !6782

for.inc:                                          ; preds = %for.body61
  %97 = load i32, i32* %j, align 4, !dbg !6786
  %inc = add i32 %97, 1, !dbg !6786
  store i32 %inc, i32* %j, align 4, !dbg !6786
  br label %for.cond58, !dbg !6787, !llvm.loop !6788

for.end:                                          ; preds = %for.cond58
  br label %for.inc64, !dbg !6790

for.inc64:                                        ; preds = %for.end
  %98 = load i32, i32* %i, align 4, !dbg !6791
  %inc65 = add i32 %98, 1, !dbg !6791
  store i32 %inc65, i32* %i, align 4, !dbg !6791
  br label %for.cond, !dbg !6792, !llvm.loop !6793

for.end66:                                        ; preds = %for.cond
  ret void, !dbg !6795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_assign_channel_eventq(%struct.edma_chan* %echan, i32 %eventq_no) #0 !dbg !6796 {
entry:
  %echan.addr = alloca %struct.edma_chan*, align 8
  %eventq_no.addr = alloca i32, align 4
  %ecc = alloca %struct.edma_cc*, align 8
  %channel = alloca i32, align 4
  %bit = alloca i32, align 4
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !6799, metadata !DIExpression()), !dbg !6800
  store i32 %eventq_no, i32* %eventq_no.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eventq_no.addr, metadata !6801, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !6803, metadata !DIExpression()), !dbg !6804
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !6805
  %ecc1 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 3, !dbg !6806
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc1, align 8, !dbg !6806
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !6804
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6807, metadata !DIExpression()), !dbg !6808
  %2 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !6809
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %2, i32 0, i32 5, !dbg !6809
  %3 = load i32, i32* %ch_num, align 8, !dbg !6809
  %and = and i32 %3, 65535, !dbg !6809
  store i32 %and, i32* %channel, align 4, !dbg !6808
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !6810, metadata !DIExpression()), !dbg !6811
  %4 = load i32, i32* %channel, align 4, !dbg !6812
  %and2 = and i32 %4, 7, !dbg !6813
  %mul = mul i32 %and2, 4, !dbg !6814
  store i32 %mul, i32* %bit, align 4, !dbg !6811
  %5 = load i32, i32* %eventq_no.addr, align 4, !dbg !6815
  %cmp = icmp eq i32 %5, -1, !dbg !6817
  br i1 %cmp, label %if.then, label %if.end, !dbg !6818

if.then:                                          ; preds = %entry
  %6 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6819
  %default_queue = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %6, i32 0, i32 11, !dbg !6820
  %7 = load i32, i32* %default_queue, align 8, !dbg !6820
  store i32 %7, i32* %eventq_no.addr, align 4, !dbg !6821
  br label %if.end, !dbg !6822

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %eventq_no.addr, align 4, !dbg !6823
  %9 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6825
  %num_tc = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %9, i32 0, i32 9, !dbg !6826
  %10 = load i32, i32* %num_tc, align 8, !dbg !6826
  %cmp3 = icmp uge i32 %8, %10, !dbg !6827
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6828

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !6829

if.end5:                                          ; preds = %if.end
  %11 = load i32, i32* %eventq_no.addr, align 4, !dbg !6830
  %and6 = and i32 %11, 7, !dbg !6830
  store i32 %and6, i32* %eventq_no.addr, align 4, !dbg !6830
  %12 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6831
  %13 = load i32, i32* %channel, align 4, !dbg !6832
  %shr = ashr i32 %13, 3, !dbg !6833
  %14 = load i32, i32* %bit, align 4, !dbg !6834
  %shl = shl i32 7, %14, !dbg !6835
  %neg = xor i32 %shl, -1, !dbg !6836
  %15 = load i32, i32* %eventq_no.addr, align 4, !dbg !6837
  %16 = load i32, i32* %bit, align 4, !dbg !6838
  %shl7 = shl i32 %15, %16, !dbg !6839
  call void @edma_modify_array(%struct.edma_cc* %12, i32 576, i32 %shr, i32 %neg, i32 %shl7) #11, !dbg !6840
  br label %return, !dbg !6841

return:                                           ; preds = %if.end5, %if.then4
  ret void, !dbg !6841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_set_chmap(%struct.edma_chan* %echan, i32 %slot) #0 !dbg !6842 {
entry:
  %echan.addr = alloca %struct.edma_chan*, align 8
  %slot.addr = alloca i32, align 4
  %ecc = alloca %struct.edma_cc*, align 8
  %channel = alloca i32, align 4
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  store i32 %slot, i32* %slot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot.addr, metadata !6847, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !6849, metadata !DIExpression()), !dbg !6850
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !6851
  %ecc1 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 3, !dbg !6852
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc1, align 8, !dbg !6852
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !6850
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6853, metadata !DIExpression()), !dbg !6854
  %2 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !6855
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %2, i32 0, i32 5, !dbg !6855
  %3 = load i32, i32* %ch_num, align 8, !dbg !6855
  %and = and i32 %3, 65535, !dbg !6855
  store i32 %and, i32* %channel, align 4, !dbg !6854
  %4 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6856
  %chmap_exist = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %4, i32 0, i32 10, !dbg !6858
  %5 = load i8, i8* %chmap_exist, align 4, !dbg !6858
  %tobool = trunc i8 %5 to i1, !dbg !6858
  br i1 %tobool, label %if.then, label %if.end, !dbg !6859

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %slot.addr, align 4, !dbg !6860
  %and2 = and i32 %6, 65535, !dbg !6860
  store i32 %and2, i32* %slot.addr, align 4, !dbg !6862
  %7 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6863
  %8 = load i32, i32* %channel, align 4, !dbg !6864
  %9 = load i32, i32* %slot.addr, align 4, !dbg !6865
  %shl = shl i32 %9, 5, !dbg !6866
  call void @edma_write_array(%struct.edma_cc* %7, i32 256, i32 %8, i32 %shl) #11, !dbg !6867
  br label %if.end, !dbg !6868

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @edma_filter_fn(%struct.dma_chan* %chan, i8* %param) #0 !dbg !6870 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %param.addr = alloca i8*, align 8
  %match = alloca i8, align 1
  %echan = alloca %struct.edma_chan*, align 8
  %ch_req = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !6871, metadata !DIExpression()), !dbg !6872
  store i8* %param, i8** %param.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %param.addr, metadata !6873, metadata !DIExpression()), !dbg !6874
  call void @llvm.dbg.declare(metadata i8* %match, metadata !6875, metadata !DIExpression()), !dbg !6876
  store i8 0, i8* %match, align 1, !dbg !6876
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6877
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !6879
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !6879
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 15, !dbg !6880
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6880
  %driver = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 6, !dbg !6881
  %3 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !6881
  %cmp = icmp eq %struct.device_driver* %3, getelementptr inbounds (%struct.platform_driver, %struct.platform_driver* @edma_driver, i32 0, i32 5), !dbg !6882
  br i1 %cmp, label %if.then, label %if.end3, !dbg !6883

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !6884, metadata !DIExpression()), !dbg !6886
  %4 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6887
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %4) #11, !dbg !6888
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !6886
  call void @llvm.dbg.declare(metadata i32* %ch_req, metadata !6889, metadata !DIExpression()), !dbg !6890
  %5 = load i8*, i8** %param.addr, align 8, !dbg !6891
  %6 = bitcast i8* %5 to i32*, !dbg !6892
  %7 = load i32, i32* %6, align 4, !dbg !6893
  store i32 %7, i32* %ch_req, align 4, !dbg !6890
  %8 = load i32, i32* %ch_req, align 4, !dbg !6894
  %9 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6896
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %9, i32 0, i32 5, !dbg !6897
  %10 = load i32, i32* %ch_num, align 8, !dbg !6897
  %cmp1 = icmp eq i32 %8, %10, !dbg !6898
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !6899

if.then2:                                         ; preds = %if.then
  %11 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6900
  %hw_triggered = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %11, i32 0, i32 7, !dbg !6902
  store i8 1, i8* %hw_triggered, align 1, !dbg !6903
  store i8 1, i8* %match, align 1, !dbg !6904
  br label %if.end, !dbg !6905

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !6906

if.end3:                                          ; preds = %if.end, %entry
  %12 = load i8, i8* %match, align 1, !dbg !6907
  %tobool = trunc i8 %12 to i1, !dbg !6907
  ret i1 %tobool, !dbg !6908
}

; Function Attrs: noredzone
declare dso_local i32 @dma_async_device_register(%struct.dma_device*) #2

; Function Attrs: noredzone
declare dso_local void @dma_async_device_unregister(%struct.dma_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @of_dma_controller_register(%struct.device_node*, %struct.dma_chan* (%struct.of_phandle_args*, %struct.of_dma*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_chan* @of_edma_xlate(%struct.of_phandle_args* %dma_spec, %struct.of_dma* %ofdma) #0 !dbg !6909 {
entry:
  %retval = alloca %struct.dma_chan*, align 8
  %dma_spec.addr = alloca %struct.of_phandle_args*, align 8
  %ofdma.addr = alloca %struct.of_dma*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %chan = alloca %struct.dma_chan*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %i = alloca i32, align 4
  store %struct.of_phandle_args* %dma_spec, %struct.of_phandle_args** %dma_spec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %dma_spec.addr, metadata !6927, metadata !DIExpression()), !dbg !6928
  store %struct.of_dma* %ofdma, %struct.of_dma** %ofdma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_dma** %ofdma.addr, metadata !6929, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !6931, metadata !DIExpression()), !dbg !6932
  %0 = load %struct.of_dma*, %struct.of_dma** %ofdma.addr, align 8, !dbg !6933
  %of_dma_data = getelementptr inbounds %struct.of_dma, %struct.of_dma* %0, i32 0, i32 5, !dbg !6934
  %1 = load i8*, i8** %of_dma_data, align 8, !dbg !6934
  %2 = bitcast i8* %1 to %struct.edma_cc*, !dbg !6933
  store %struct.edma_cc* %2, %struct.edma_cc** %ecc, align 8, !dbg !6932
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan, metadata !6935, metadata !DIExpression()), !dbg !6936
  store %struct.dma_chan* null, %struct.dma_chan** %chan, align 8, !dbg !6936
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !6937, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6939, metadata !DIExpression()), !dbg !6940
  %3 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6941
  %tobool = icmp ne %struct.edma_cc* %3, null, !dbg !6941
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6943

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.of_phandle_args*, %struct.of_phandle_args** %dma_spec.addr, align 8, !dbg !6944
  %args_count = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %4, i32 0, i32 1, !dbg !6945
  %5 = load i32, i32* %args_count, align 8, !dbg !6945
  %cmp = icmp slt i32 %5, 1, !dbg !6946
  br i1 %cmp, label %if.then, label %if.end, !dbg !6947

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.dma_chan* null, %struct.dma_chan** %retval, align 8, !dbg !6948
  br label %return, !dbg !6948

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !6949
  br label %for.cond, !dbg !6951

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !6952
  %7 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6954
  %num_channels = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %7, i32 0, i32 5, !dbg !6955
  %8 = load i32, i32* %num_channels, align 8, !dbg !6955
  %cmp1 = icmp ult i32 %6, %8, !dbg !6956
  br i1 %cmp1, label %for.body, label %for.end, !dbg !6957

for.body:                                         ; preds = %for.cond
  %9 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !6958
  %slave_chans = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %9, i32 0, i32 18, !dbg !6960
  %10 = load %struct.edma_chan*, %struct.edma_chan** %slave_chans, align 8, !dbg !6960
  %11 = load i32, i32* %i, align 4, !dbg !6961
  %idxprom = sext i32 %11 to i64, !dbg !6958
  %arrayidx = getelementptr %struct.edma_chan, %struct.edma_chan* %10, i64 %idxprom, !dbg !6958
  store %struct.edma_chan* %arrayidx, %struct.edma_chan** %echan, align 8, !dbg !6962
  %12 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6963
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %12, i32 0, i32 5, !dbg !6965
  %13 = load i32, i32* %ch_num, align 8, !dbg !6965
  %14 = load %struct.of_phandle_args*, %struct.of_phandle_args** %dma_spec.addr, align 8, !dbg !6966
  %args = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %14, i32 0, i32 2, !dbg !6967
  %arrayidx2 = getelementptr [16 x i32], [16 x i32]* %args, i64 0, i64 0, !dbg !6966
  %15 = load i32, i32* %arrayidx2, align 4, !dbg !6966
  %cmp3 = icmp eq i32 %13, %15, !dbg !6968
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !6969

if.then4:                                         ; preds = %for.body
  %16 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6970
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %16, i32 0, i32 0, !dbg !6972
  %chan5 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan, i32 0, i32 0, !dbg !6973
  store %struct.dma_chan* %chan5, %struct.dma_chan** %chan, align 8, !dbg !6974
  br label %for.end, !dbg !6975

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !6976

for.inc:                                          ; preds = %if.end6
  %17 = load i32, i32* %i, align 4, !dbg !6977
  %inc = add i32 %17, 1, !dbg !6977
  store i32 %inc, i32* %i, align 4, !dbg !6977
  br label %for.cond, !dbg !6978, !llvm.loop !6979

for.end:                                          ; preds = %if.then4, %for.cond
  %18 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !6981
  %tobool7 = icmp ne %struct.dma_chan* %18, null, !dbg !6981
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !6983

if.then8:                                         ; preds = %for.end
  store %struct.dma_chan* null, %struct.dma_chan** %retval, align 8, !dbg !6984
  br label %return, !dbg !6984

if.end9:                                          ; preds = %for.end
  %19 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6985
  %ecc10 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %19, i32 0, i32 3, !dbg !6987
  %20 = load %struct.edma_cc*, %struct.edma_cc** %ecc10, align 8, !dbg !6987
  %legacy_mode = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %20, i32 0, i32 4, !dbg !6988
  %21 = load i8, i8* %legacy_mode, align 4, !dbg !6988
  %tobool11 = trunc i8 %21 to i1, !dbg !6988
  br i1 %tobool11, label %land.lhs.true, label %if.end15, !dbg !6989

land.lhs.true:                                    ; preds = %if.end9
  %22 = load %struct.of_phandle_args*, %struct.of_phandle_args** %dma_spec.addr, align 8, !dbg !6990
  %args_count12 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %22, i32 0, i32 1, !dbg !6991
  %23 = load i32, i32* %args_count12, align 8, !dbg !6991
  %cmp13 = icmp eq i32 %23, 1, !dbg !6992
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !6993

if.then14:                                        ; preds = %land.lhs.true
  br label %out, !dbg !6994

if.end15:                                         ; preds = %land.lhs.true, %if.end9
  %24 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !6995
  %ecc16 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %24, i32 0, i32 3, !dbg !6997
  %25 = load %struct.edma_cc*, %struct.edma_cc** %ecc16, align 8, !dbg !6997
  %legacy_mode17 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %25, i32 0, i32 4, !dbg !6998
  %26 = load i8, i8* %legacy_mode17, align 4, !dbg !6998
  %tobool18 = trunc i8 %26 to i1, !dbg !6998
  br i1 %tobool18, label %if.end33, label %land.lhs.true19, !dbg !6999

land.lhs.true19:                                  ; preds = %if.end15
  %27 = load %struct.of_phandle_args*, %struct.of_phandle_args** %dma_spec.addr, align 8, !dbg !7000
  %args_count20 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %27, i32 0, i32 1, !dbg !7001
  %28 = load i32, i32* %args_count20, align 8, !dbg !7001
  %cmp21 = icmp eq i32 %28, 2, !dbg !7002
  br i1 %cmp21, label %land.lhs.true22, label %if.end33, !dbg !7003

land.lhs.true22:                                  ; preds = %land.lhs.true19
  %29 = load %struct.of_phandle_args*, %struct.of_phandle_args** %dma_spec.addr, align 8, !dbg !7004
  %args23 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %29, i32 0, i32 2, !dbg !7005
  %arrayidx24 = getelementptr [16 x i32], [16 x i32]* %args23, i64 0, i64 1, !dbg !7004
  %30 = load i32, i32* %arrayidx24, align 4, !dbg !7004
  %31 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !7006
  %ecc25 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %31, i32 0, i32 3, !dbg !7007
  %32 = load %struct.edma_cc*, %struct.edma_cc** %ecc25, align 8, !dbg !7007
  %num_tc = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %32, i32 0, i32 9, !dbg !7008
  %33 = load i32, i32* %num_tc, align 8, !dbg !7008
  %cmp26 = icmp ult i32 %30, %33, !dbg !7009
  br i1 %cmp26, label %if.then27, label %if.end33, !dbg !7010

if.then27:                                        ; preds = %land.lhs.true22
  %34 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !7011
  %ecc28 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %34, i32 0, i32 3, !dbg !7013
  %35 = load %struct.edma_cc*, %struct.edma_cc** %ecc28, align 8, !dbg !7013
  %tc_list = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %35, i32 0, i32 19, !dbg !7014
  %36 = load %struct.edma_tc*, %struct.edma_tc** %tc_list, align 8, !dbg !7014
  %37 = load %struct.of_phandle_args*, %struct.of_phandle_args** %dma_spec.addr, align 8, !dbg !7015
  %args29 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %37, i32 0, i32 2, !dbg !7016
  %arrayidx30 = getelementptr [16 x i32], [16 x i32]* %args29, i64 0, i64 1, !dbg !7015
  %38 = load i32, i32* %arrayidx30, align 4, !dbg !7015
  %idxprom31 = zext i32 %38 to i64, !dbg !7011
  %arrayidx32 = getelementptr %struct.edma_tc, %struct.edma_tc* %36, i64 %idxprom31, !dbg !7011
  %39 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !7017
  %tc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %39, i32 0, i32 4, !dbg !7018
  store %struct.edma_tc* %arrayidx32, %struct.edma_tc** %tc, align 8, !dbg !7019
  br label %out, !dbg !7020

if.end33:                                         ; preds = %land.lhs.true22, %land.lhs.true19, %if.end15
  store %struct.dma_chan* null, %struct.dma_chan** %retval, align 8, !dbg !7021
  br label %return, !dbg !7021

out:                                              ; preds = %if.then27, %if.then14
  call void @llvm.dbg.label(metadata !7022), !dbg !7023
  %40 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !7024
  %hw_triggered = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %40, i32 0, i32 7, !dbg !7025
  store i8 1, i8* %hw_triggered, align 1, !dbg !7026
  %41 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7027
  %call = call %struct.dma_chan* @dma_get_slave_channel(%struct.dma_chan* %41) #11, !dbg !7028
  store %struct.dma_chan* %call, %struct.dma_chan** %retval, align 8, !dbg !7029
  br label %return, !dbg !7029

return:                                           ; preds = %out, %if.end33, %if.then8, %if.then
  %42 = load %struct.dma_chan*, %struct.dma_chan** %retval, align 8, !dbg !7030
  ret %struct.dma_chan* %42, !dbg !7030
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_free_slot(%struct.edma_cc* %ecc, i32 %slot) #0 !dbg !7031 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %slot.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !7034, metadata !DIExpression()), !dbg !7035
  store i32 %slot, i32* %slot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot.addr, metadata !7036, metadata !DIExpression()), !dbg !7037
  %0 = load i32, i32* %slot.addr, align 4, !dbg !7038
  %and = and i32 %0, 65535, !dbg !7038
  store i32 %and, i32* %slot.addr, align 4, !dbg !7039
  %1 = load i32, i32* %slot.addr, align 4, !dbg !7040
  %2 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !7042
  %num_slots = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %2, i32 0, i32 8, !dbg !7043
  %3 = load i32, i32* %num_slots, align 4, !dbg !7043
  %cmp = icmp uge i32 %1, %3, !dbg !7044
  br i1 %cmp, label %if.then, label %if.end, !dbg !7045

if.then:                                          ; preds = %entry
  br label %return, !dbg !7046

if.end:                                           ; preds = %entry
  %4 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !7047
  %5 = load i32, i32* %slot.addr, align 4, !dbg !7048
  call void @edma_write_slot(%struct.edma_cc* %4, i32 %5, %struct.edmacc_param* @dummy_paramset) #11, !dbg !7049
  %6 = load i32, i32* %slot.addr, align 4, !dbg !7050
  %conv = zext i32 %6 to i64, !dbg !7050
  %7 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !7051
  %slot_inuse = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %7, i32 0, i32 14, !dbg !7052
  %8 = load i64*, i64** %slot_inuse, align 8, !dbg !7052
  call void @clear_bit(i64 %conv, i64* %8) #11, !dbg !7053
  br label %return, !dbg !7054

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7054
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put_sync(%struct.device* %dev) #0 !dbg !7055 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7056, metadata !DIExpression()), !dbg !7057
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7058
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 4) #11, !dbg !7059
  ret i32 %call, !dbg !7060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !7061 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !7064, metadata !DIExpression()), !dbg !7065
  %0 = load i64, i64* %error.addr, align 8, !dbg !7066
  %1 = inttoptr i64 %0 to i8*, !dbg !7067
  ret i8* %1, !dbg !7068
}

; Function Attrs: noredzone
declare dso_local %struct.property* @of_find_property(%struct.device_node*, i8*, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_xbar_event_map(%struct.device* %dev, %struct.edma_soc_info* %pdata, i64 %sz) #0 !dbg !7069 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %pdata.addr = alloca %struct.edma_soc_info*, align 8
  %sz.addr = alloca i64, align 8
  %pname = alloca [23 x i8], align 16
  %res = alloca %struct.resource, align 8
  %xbar = alloca i8*, align 8
  %xbar_chans = alloca [2 x i16]*, align 8
  %nelm = alloca i64, align 8
  %shift = alloca i32, align 4
  %offset = alloca i32, align 4
  %mux = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7072, metadata !DIExpression()), !dbg !7073
  store %struct.edma_soc_info* %pdata, %struct.edma_soc_info** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_soc_info** %pdata.addr, metadata !7074, metadata !DIExpression()), !dbg !7075
  store i64 %sz, i64* %sz.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sz.addr, metadata !7076, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.declare(metadata [23 x i8]* %pname, metadata !7078, metadata !DIExpression()), !dbg !7082
  %0 = bitcast [23 x i8]* %pname to i8*, !dbg !7082
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 getelementptr inbounds ([23 x i8], [23 x i8]* @__const.edma_xbar_event_map.pname, i32 0, i32 0), i64 23, i1 false), !dbg !7082
  call void @llvm.dbg.declare(metadata %struct.resource* %res, metadata !7083, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.declare(metadata i8** %xbar, metadata !7085, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.declare(metadata [2 x i16]** %xbar_chans, metadata !7087, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.declare(metadata i64* %nelm, metadata !7089, metadata !DIExpression()), !dbg !7090
  %1 = load i64, i64* %sz.addr, align 8, !dbg !7091
  %div = udiv i64 %1, 2, !dbg !7092
  store i64 %div, i64* %nelm, align 8, !dbg !7090
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !7093, metadata !DIExpression()), !dbg !7094
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !7095, metadata !DIExpression()), !dbg !7096
  call void @llvm.dbg.declare(metadata i32* %mux, metadata !7097, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7099, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7101, metadata !DIExpression()), !dbg !7102
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7103
  %3 = load i64, i64* %nelm, align 8, !dbg !7104
  %add = add i64 %3, 2, !dbg !7105
  %call = call i8* @devm_kcalloc(%struct.device* %2, i64 %add, i64 2, i32 3264) #11, !dbg !7106
  %4 = bitcast i8* %call to [2 x i16]*, !dbg !7106
  store [2 x i16]* %4, [2 x i16]** %xbar_chans, align 8, !dbg !7107
  %5 = load [2 x i16]*, [2 x i16]** %xbar_chans, align 8, !dbg !7108
  %tobool = icmp ne [2 x i16]* %5, null, !dbg !7108
  br i1 %tobool, label %if.end, label %if.then, !dbg !7110

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7111
  br label %return, !dbg !7111

if.end:                                           ; preds = %entry
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7112
  %of_node = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 23, !dbg !7113
  %7 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !7113
  %call1 = call i32 @of_address_to_resource(%struct.device_node* %7, i32 1, %struct.resource* %res) #11, !dbg !7114
  store i32 %call1, i32* %ret, align 4, !dbg !7115
  %8 = load i32, i32* %ret, align 4, !dbg !7116
  %tobool2 = icmp ne i32 %8, 0, !dbg !7116
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7118

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !7119
  br label %return, !dbg !7119

if.end4:                                          ; preds = %if.end
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7120
  %start = getelementptr inbounds %struct.resource, %struct.resource* %res, i32 0, i32 0, !dbg !7121
  %10 = load i64, i64* %start, align 8, !dbg !7121
  %call5 = call i64 @resource_size(%struct.resource* %res) #11, !dbg !7122
  %call6 = call i8* @devm_ioremap(%struct.device* %9, i64 %10, i64 %call5) #11, !dbg !7123
  store i8* %call6, i8** %xbar, align 8, !dbg !7124
  %11 = load i8*, i8** %xbar, align 8, !dbg !7125
  %tobool7 = icmp ne i8* %11, null, !dbg !7125
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !7127

if.then8:                                         ; preds = %if.end4
  store i32 -12, i32* %retval, align 4, !dbg !7128
  br label %return, !dbg !7128

if.end9:                                          ; preds = %if.end4
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7129
  %of_node10 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 23, !dbg !7130
  %13 = load %struct.device_node*, %struct.device_node** %of_node10, align 8, !dbg !7130
  %arraydecay = getelementptr inbounds [23 x i8], [23 x i8]* %pname, i64 0, i64 0, !dbg !7131
  %14 = load [2 x i16]*, [2 x i16]** %xbar_chans, align 8, !dbg !7132
  %15 = bitcast [2 x i16]* %14 to i16*, !dbg !7133
  %16 = load i64, i64* %nelm, align 8, !dbg !7134
  %call11 = call i32 @of_property_read_u16_array(%struct.device_node* %13, i8* %arraydecay, i16* %15, i64 %16) #11, !dbg !7135
  store i32 %call11, i32* %ret, align 4, !dbg !7136
  %17 = load i32, i32* %ret, align 4, !dbg !7137
  %tobool12 = icmp ne i32 %17, 0, !dbg !7137
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !7139

if.then13:                                        ; preds = %if.end9
  store i32 -5, i32* %retval, align 4, !dbg !7140
  br label %return, !dbg !7140

if.end14:                                         ; preds = %if.end9
  %18 = load i64, i64* %nelm, align 8, !dbg !7141
  %shr = lshr i64 %18, 1, !dbg !7141
  store i64 %shr, i64* %nelm, align 8, !dbg !7141
  %19 = load [2 x i16]*, [2 x i16]** %xbar_chans, align 8, !dbg !7142
  %20 = load i64, i64* %nelm, align 8, !dbg !7143
  %arrayidx = getelementptr [2 x i16], [2 x i16]* %19, i64 %20, !dbg !7142
  %arrayidx15 = getelementptr [2 x i16], [2 x i16]* %arrayidx, i64 0, i64 0, !dbg !7142
  store i16 -1, i16* %arrayidx15, align 2, !dbg !7144
  %21 = load [2 x i16]*, [2 x i16]** %xbar_chans, align 8, !dbg !7145
  %22 = load i64, i64* %nelm, align 8, !dbg !7146
  %arrayidx16 = getelementptr [2 x i16], [2 x i16]* %21, i64 %22, !dbg !7145
  %arrayidx17 = getelementptr [2 x i16], [2 x i16]* %arrayidx16, i64 0, i64 1, !dbg !7145
  store i16 -1, i16* %arrayidx17, align 2, !dbg !7147
  store i32 0, i32* %i, align 4, !dbg !7148
  br label %for.cond, !dbg !7150

for.cond:                                         ; preds = %for.inc, %if.end14
  %23 = load i32, i32* %i, align 4, !dbg !7151
  %conv = sext i32 %23 to i64, !dbg !7151
  %24 = load i64, i64* %nelm, align 8, !dbg !7153
  %cmp = icmp ult i64 %conv, %24, !dbg !7154
  br i1 %cmp, label %for.body, label %for.end, !dbg !7155

for.body:                                         ; preds = %for.cond
  %25 = load [2 x i16]*, [2 x i16]** %xbar_chans, align 8, !dbg !7156
  %26 = load i32, i32* %i, align 4, !dbg !7158
  %idxprom = sext i32 %26 to i64, !dbg !7156
  %arrayidx19 = getelementptr [2 x i16], [2 x i16]* %25, i64 %idxprom, !dbg !7156
  %arrayidx20 = getelementptr [2 x i16], [2 x i16]* %arrayidx19, i64 0, i64 1, !dbg !7156
  %27 = load i16, i16* %arrayidx20, align 2, !dbg !7156
  %conv21 = sext i16 %27 to i32, !dbg !7156
  %and = and i32 %conv21, 3, !dbg !7159
  %shl = shl i32 %and, 3, !dbg !7160
  store i32 %shl, i32* %shift, align 4, !dbg !7161
  %28 = load [2 x i16]*, [2 x i16]** %xbar_chans, align 8, !dbg !7162
  %29 = load i32, i32* %i, align 4, !dbg !7163
  %idxprom22 = sext i32 %29 to i64, !dbg !7162
  %arrayidx23 = getelementptr [2 x i16], [2 x i16]* %28, i64 %idxprom22, !dbg !7162
  %arrayidx24 = getelementptr [2 x i16], [2 x i16]* %arrayidx23, i64 0, i64 1, !dbg !7162
  %30 = load i16, i16* %arrayidx24, align 2, !dbg !7162
  %conv25 = sext i16 %30 to i32, !dbg !7162
  %and26 = and i32 %conv25, -4, !dbg !7164
  store i32 %and26, i32* %offset, align 4, !dbg !7165
  %31 = load i8*, i8** %xbar, align 8, !dbg !7166
  %32 = load i32, i32* %offset, align 4, !dbg !7167
  %idx.ext = zext i32 %32 to i64, !dbg !7168
  %add.ptr = getelementptr i8, i8* %31, i64 %idx.ext, !dbg !7168
  %call27 = call i32 @readl(i8* %add.ptr) #11, !dbg !7169
  store i32 %call27, i32* %mux, align 4, !dbg !7170
  %33 = load i32, i32* %shift, align 4, !dbg !7171
  %shl28 = shl i32 255, %33, !dbg !7172
  %neg = xor i32 %shl28, -1, !dbg !7173
  %34 = load i32, i32* %mux, align 4, !dbg !7174
  %and29 = and i32 %34, %neg, !dbg !7174
  store i32 %and29, i32* %mux, align 4, !dbg !7174
  %35 = load [2 x i16]*, [2 x i16]** %xbar_chans, align 8, !dbg !7175
  %36 = load i32, i32* %i, align 4, !dbg !7176
  %idxprom30 = sext i32 %36 to i64, !dbg !7175
  %arrayidx31 = getelementptr [2 x i16], [2 x i16]* %35, i64 %idxprom30, !dbg !7175
  %arrayidx32 = getelementptr [2 x i16], [2 x i16]* %arrayidx31, i64 0, i64 0, !dbg !7175
  %37 = load i16, i16* %arrayidx32, align 2, !dbg !7175
  %conv33 = sext i16 %37 to i32, !dbg !7175
  %38 = load i32, i32* %shift, align 4, !dbg !7177
  %shl34 = shl i32 %conv33, %38, !dbg !7178
  %39 = load i32, i32* %mux, align 4, !dbg !7179
  %or = or i32 %39, %shl34, !dbg !7179
  store i32 %or, i32* %mux, align 4, !dbg !7179
  %40 = load i32, i32* %mux, align 4, !dbg !7180
  %41 = load i8*, i8** %xbar, align 8, !dbg !7181
  %42 = load i32, i32* %offset, align 4, !dbg !7182
  %idx.ext35 = zext i32 %42 to i64, !dbg !7183
  %add.ptr36 = getelementptr i8, i8* %41, i64 %idx.ext35, !dbg !7183
  call void @writel(i32 %40, i8* %add.ptr36) #11, !dbg !7184
  br label %for.inc, !dbg !7185

for.inc:                                          ; preds = %for.body
  %43 = load i32, i32* %i, align 4, !dbg !7186
  %inc = add i32 %43, 1, !dbg !7186
  store i32 %inc, i32* %i, align 4, !dbg !7186
  br label %for.cond, !dbg !7187, !llvm.loop !7188

for.end:                                          ; preds = %for.cond
  %44 = load [2 x i16]*, [2 x i16]** %xbar_chans, align 8, !dbg !7190
  %45 = load %struct.edma_soc_info*, %struct.edma_soc_info** %pdata.addr, align 8, !dbg !7191
  %xbar_chans37 = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %45, i32 0, i32 4, !dbg !7192
  store [2 x i16]* %44, [2 x i16]** %xbar_chans37, align 8, !dbg !7193
  store i32 0, i32* %retval, align 4, !dbg !7194
  br label %return, !dbg !7194

return:                                           ; preds = %for.end, %if.then13, %if.then8, %if.then3, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !7195
  ret i32 %46, !dbg !7195
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32_array(%struct.device_node* %np, i8* %propname, i32* %out_values, i64 %sz) #0 !dbg !7196 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_values.addr = alloca i32*, align 8
  %sz.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7201, metadata !DIExpression()), !dbg !7202
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !7203, metadata !DIExpression()), !dbg !7204
  store i32* %out_values, i32** %out_values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_values.addr, metadata !7205, metadata !DIExpression()), !dbg !7206
  store i64 %sz, i64* %sz.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sz.addr, metadata !7207, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7209, metadata !DIExpression()), !dbg !7210
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7211
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !7212
  %2 = load i32*, i32** %out_values.addr, align 8, !dbg !7213
  %3 = load i64, i64* %sz.addr, align 8, !dbg !7214
  %call = call i32 @of_property_read_variable_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 %3, i64 0) #11, !dbg !7215
  store i32 %call, i32* %ret, align 4, !dbg !7210
  %4 = load i32, i32* %ret, align 4, !dbg !7216
  %cmp = icmp sge i32 %4, 0, !dbg !7218
  br i1 %cmp, label %if.then, label %if.else, !dbg !7219

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7220
  br label %return, !dbg !7220

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !7221
  store i32 %5, i32* %retval, align 4, !dbg !7222
  br label %return, !dbg !7222

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !7223
  ret i32 %6, !dbg !7223
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !7224 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7227, metadata !DIExpression()), !dbg !7228
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7229, metadata !DIExpression()), !dbg !7230
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  %0 = load i64, i64* %n.addr, align 8, !dbg !7233
  %1 = load i64, i64* %size.addr, align 8, !dbg !7234
  %2 = load i32, i32* %flags.addr, align 4, !dbg !7235
  %or = or i32 %2, 256, !dbg !7236
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !7237
  ret i8* %call, !dbg !7238
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @of_address_to_resource(%struct.device_node*, i32, %struct.resource*) #2

; Function Attrs: noredzone
declare dso_local i8* @devm_ioremap(%struct.device*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @resource_size(%struct.resource* %res) #0 !dbg !7239 {
entry:
  %res.addr = alloca %struct.resource*, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !7244, metadata !DIExpression()), !dbg !7245
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7246
  %end = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 1, !dbg !7247
  %1 = load i64, i64* %end, align 8, !dbg !7247
  %2 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7248
  %start = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 0, !dbg !7249
  %3 = load i64, i64* %start, align 8, !dbg !7249
  %sub = sub i64 %1, %3, !dbg !7250
  %add = add i64 %sub, 1, !dbg !7251
  ret i64 %add, !dbg !7252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u16_array(%struct.device_node* %np, i8* %propname, i16* %out_values, i64 %sz) #0 !dbg !7253 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_values.addr = alloca i16*, align 8
  %sz.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7256, metadata !DIExpression()), !dbg !7257
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !7258, metadata !DIExpression()), !dbg !7259
  store i16* %out_values, i16** %out_values.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out_values.addr, metadata !7260, metadata !DIExpression()), !dbg !7261
  store i64 %sz, i64* %sz.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sz.addr, metadata !7262, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7264, metadata !DIExpression()), !dbg !7265
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7266
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !7267
  %2 = load i16*, i16** %out_values.addr, align 8, !dbg !7268
  %3 = load i64, i64* %sz.addr, align 8, !dbg !7269
  %call = call i32 @of_property_read_variable_u16_array(%struct.device_node* %0, i8* %1, i16* %2, i64 %3, i64 0) #11, !dbg !7270
  store i32 %call, i32* %ret, align 4, !dbg !7265
  %4 = load i32, i32* %ret, align 4, !dbg !7271
  %cmp = icmp sge i32 %4, 0, !dbg !7273
  br i1 %cmp, label %if.then, label %if.else, !dbg !7274

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7275
  br label %return, !dbg !7275

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !7276
  store i32 %5, i32* %retval, align 4, !dbg !7277
  br label %return, !dbg !7277

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !7278
  ret i32 %6, !dbg !7278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #0 !dbg !7279 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !7283, metadata !DIExpression()), !dbg !7284
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7285, metadata !DIExpression()), !dbg !7284
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !7284
  %1 = bitcast i8* %0 to i32*, !dbg !7284
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #10, !dbg !7284, !srcloc !7286
  store i32 %2, i32* %ret, align 4, !dbg !7284
  %3 = load i32, i32* %ret, align 4, !dbg !7284
  ret i32 %3, !dbg !7284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #0 !dbg !7287 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7291, metadata !DIExpression()), !dbg !7292
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !7293, metadata !DIExpression()), !dbg !7292
  %0 = load i32, i32* %val.addr, align 4, !dbg !7292
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !7292
  %2 = bitcast i8* %1 to i32*, !dbg !7292
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #10, !dbg !7292, !srcloc !7294
  ret void, !dbg !7292
}

; Function Attrs: noredzone
declare dso_local i32 @of_property_read_variable_u16_array(%struct.device_node*, i8*, i16*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !7295 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7296, metadata !DIExpression()), !dbg !7300
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7309, metadata !DIExpression()), !dbg !7310
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7311, metadata !DIExpression()), !dbg !7312
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7313, metadata !DIExpression()), !dbg !7314
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7315, metadata !DIExpression()), !dbg !7319
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7321, metadata !DIExpression()), !dbg !7325
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7327, metadata !DIExpression()), !dbg !7331
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7336, metadata !DIExpression()), !dbg !7337
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7338, metadata !DIExpression()), !dbg !7339
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7340, metadata !DIExpression()), !dbg !7341
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7342, metadata !DIExpression()), !dbg !7343
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7344, metadata !DIExpression()), !dbg !7345
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7346, metadata !DIExpression()), !dbg !7347
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7348, metadata !DIExpression()), !dbg !7349
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7350, metadata !DIExpression()), !dbg !7351
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7352, metadata !DIExpression()), !dbg !7353
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7354, metadata !DIExpression()), !dbg !7355
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7356, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !7358, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !7360, metadata !DIExpression()), !dbg !7363
  %0 = load i64, i64* %n.addr, align 8, !dbg !7363
  store i64 %0, i64* %__a, align 8, !dbg !7363
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !7364, metadata !DIExpression()), !dbg !7363
  %1 = load i64, i64* %size.addr, align 8, !dbg !7363
  store i64 %1, i64* %__b, align 8, !dbg !7363
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !7365, metadata !DIExpression()), !dbg !7363
  store i64* %bytes, i64** %__d, align 8, !dbg !7363
  %cmp = icmp eq i64* %__a, %__b, !dbg !7363
  %conv = zext i1 %cmp to i32, !dbg !7363
  %2 = load i64*, i64** %__d, align 8, !dbg !7363
  %cmp1 = icmp eq i64* %__a, %2, !dbg !7363
  %conv2 = zext i1 %cmp1 to i32, !dbg !7363
  %3 = load i64, i64* %__a, align 8, !dbg !7363
  %4 = load i64, i64* %__b, align 8, !dbg !7363
  %5 = load i64*, i64** %__d, align 8, !dbg !7363
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !7363
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !7363
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !7363
  store i64 %8, i64* %5, align 8, !dbg !7363
  %frombool = zext i1 %7 to i8, !dbg !7363
  store i8 %frombool, i8* %tmp, align 1, !dbg !7363
  %9 = load i8, i8* %tmp, align 1, !dbg !7363
  %tobool = trunc i8 %9 to i1, !dbg !7363
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !7366
  %lnot = xor i1 %call, true, !dbg !7366
  %lnot3 = xor i1 %lnot, true, !dbg !7366
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7366
  %conv4 = sext i32 %lnot.ext to i64, !dbg !7366
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !7366
  br i1 %tobool5, label %if.then, label %if.end, !dbg !7367

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !7368
  br label %return, !dbg !7368

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !7369
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !7370
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !7371

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !7372
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !7373
  br i1 %13, label %if.then6, label %if.end8, !dbg !7374

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !7375
  %15 = load i32, i32* %flags.addr, align 4, !dbg !7376
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !7377
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !7378
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !7379

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !7380
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !7381
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7382

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !7383
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !7384
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !7385
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !7386
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7345
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !7387
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7388
  %24 = load i32, i32* %order.i.i, align 4, !dbg !7389
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7390
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7391
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7392
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #13, !dbg !7393
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7393
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7393
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7393
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !7393
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7394
  br label %kmalloc.exit, !dbg !7394

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !7395
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7396
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !7396
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7398

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7399
  br label %kmalloc_index.exit.i, !dbg !7399

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7400
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !7402
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7403

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7404
  br label %kmalloc_index.exit.i, !dbg !7404

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7405
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !7407
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7408

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7409
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !7410
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7411

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7412
  br label %kmalloc_index.exit.i, !dbg !7412

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7413
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !7415
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7416

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7417
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !7418
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7419

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7420
  br label %kmalloc_index.exit.i, !dbg !7420

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7421
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !7423
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7424

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7425
  br label %kmalloc_index.exit.i, !dbg !7425

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7426
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !7428
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7429

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7430
  br label %kmalloc_index.exit.i, !dbg !7430

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7431
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !7433
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7434

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7435
  br label %kmalloc_index.exit.i, !dbg !7435

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7436
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !7438
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7439

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7440
  br label %kmalloc_index.exit.i, !dbg !7440

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7441
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !7443
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7444

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7445
  br label %kmalloc_index.exit.i, !dbg !7445

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7446
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !7448
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7449

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7450
  br label %kmalloc_index.exit.i, !dbg !7450

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7451
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !7453
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7454

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7455
  br label %kmalloc_index.exit.i, !dbg !7455

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7456
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !7458
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7459

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7460
  br label %kmalloc_index.exit.i, !dbg !7460

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7461
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !7463
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7464

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7465
  br label %kmalloc_index.exit.i, !dbg !7465

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7466
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !7468
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7469

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7470
  br label %kmalloc_index.exit.i, !dbg !7470

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7471
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !7473
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7474

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7475
  br label %kmalloc_index.exit.i, !dbg !7475

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7476
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !7478
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7479

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7480
  br label %kmalloc_index.exit.i, !dbg !7480

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7481
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !7483
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7484

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7485
  br label %kmalloc_index.exit.i, !dbg !7485

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7486
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !7488
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7489

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7490
  br label %kmalloc_index.exit.i, !dbg !7490

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7491
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !7493
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7494

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7495
  br label %kmalloc_index.exit.i, !dbg !7495

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7496
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !7498
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7499

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7500
  br label %kmalloc_index.exit.i, !dbg !7500

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7501
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !7503
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7504

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7505
  br label %kmalloc_index.exit.i, !dbg !7505

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7506
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !7508
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7509

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7510
  br label %kmalloc_index.exit.i, !dbg !7510

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7511
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !7513
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7514

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7515
  br label %kmalloc_index.exit.i, !dbg !7515

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7516
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !7518
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7519

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7520
  br label %kmalloc_index.exit.i, !dbg !7520

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7521
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !7523
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7524

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7525
  br label %kmalloc_index.exit.i, !dbg !7525

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7526
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !7528
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7529

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7530
  br label %kmalloc_index.exit.i, !dbg !7530

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7531
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !7533
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7534

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7535
  br label %kmalloc_index.exit.i, !dbg !7535

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7536
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !7538
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7539

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7540
  br label %kmalloc_index.exit.i, !dbg !7540

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !7541, !srcloc !7544
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 234) #10, !dbg !7545, !srcloc !7548
  unreachable, !dbg !7549

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !7550
  store i32 %59, i32* %index.i, align 4, !dbg !7551
  %60 = load i32, i32* %index.i, align 4, !dbg !7552
  %tobool.i = icmp ne i32 %60, 0, !dbg !7552
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7554

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7555
  br label %kmalloc.exit, !dbg !7555

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !7556
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7557
  %and.i.i = and i32 %62, 17, !dbg !7557
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7557
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7557
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7557
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7557
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7559

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7560
  br label %kmalloc_type.exit.i, !dbg !7560

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7561
  %and2.i.i = and i32 %63, 1, !dbg !7562
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7561
  %64 = zext i1 %tobool3.i.i to i64, !dbg !7561
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7561
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7563
  br label %kmalloc_type.exit.i, !dbg !7563

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !7564
  %idxprom.i = zext i32 %65 to i64, !dbg !7565
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7565
  %66 = load i32, i32* %index.i, align 4, !dbg !7566
  %idxprom6.i = zext i32 %66 to i64, !dbg !7565
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7565
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7565
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !7567
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !7568
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7569
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7570
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #13, !dbg !7571
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7571
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7571
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7571
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !7571
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7314
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7572
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !7573
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7574
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7575
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #13, !dbg !7576
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7577
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !7578
  store i8* %76, i8** %retval.i, align 8, !dbg !7579
  br label %kmalloc.exit, !dbg !7579

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !7580
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !7581
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #13, !dbg !7582
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7582
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7582
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7582
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !7582
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7583
  br label %kmalloc.exit, !dbg !7583

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !7584
  store i8* %79, i8** %retval, align 8, !dbg !7585
  br label %return, !dbg !7585

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !7586
  %81 = load i32, i32* %flags.addr, align 4, !dbg !7587
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !7588
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !7588
  %maskedptr = and i64 %ptrint, 7, !dbg !7588
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !7588
  call void @llvm.assume(i1 %maskcond), !dbg !7588
  store i8* %call9, i8** %retval, align 8, !dbg !7589
  br label %return, !dbg !7589

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !7590
  ret i8* %82, !dbg !7590
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !7591 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !7595, metadata !DIExpression()), !dbg !7596
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !7597
  %tobool = trunc i8 %0 to i1, !dbg !7597
  %lnot = xor i1 %tobool, true, !dbg !7597
  %lnot1 = xor i1 %lnot, true, !dbg !7597
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7597
  %conv = sext i32 %lnot.ext to i64, !dbg !7597
  %tobool2 = icmp ne i64 %conv, 0, !dbg !7597
  ret i1 %tobool2, !dbg !7598
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !7599 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7603, metadata !DIExpression()), !dbg !7607
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7609, metadata !DIExpression()), !dbg !7610
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7611, metadata !DIExpression()), !dbg !7612
  %0 = load i64, i64* %size.addr, align 8, !dbg !7613
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !7615
  br i1 %1, label %if.then, label %if.end447, !dbg !7616

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !7617
  %tobool = icmp ne i64 %2, 0, !dbg !7617
  br i1 %tobool, label %if.end, label %if.then1, !dbg !7620

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !7621
  br label %return, !dbg !7621

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !7622
  %cmp = icmp ult i64 %3, 4096, !dbg !7624
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7625

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7626
  br label %return, !dbg !7626

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub = sub i64 %4, 1, !dbg !7627
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !7627
  br i1 %5, label %cond.true, label %cond.false442, !dbg !7627

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub4 = sub i64 %6, 1, !dbg !7627
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !7627
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !7627

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub6 = sub i64 %8, 1, !dbg !7627
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !7627
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !7627

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !7627

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub9 = sub i64 %9, 1, !dbg !7627
  %and = and i64 %sub9, -9223372036854775808, !dbg !7627
  %tobool10 = icmp ne i64 %and, 0, !dbg !7627
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !7627

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !7627

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub13 = sub i64 %10, 1, !dbg !7627
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !7627
  %tobool15 = icmp ne i64 %and14, 0, !dbg !7627
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !7627

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !7627

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub18 = sub i64 %11, 1, !dbg !7627
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !7627
  %tobool20 = icmp ne i64 %and19, 0, !dbg !7627
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !7627

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !7627

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub23 = sub i64 %12, 1, !dbg !7627
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !7627
  %tobool25 = icmp ne i64 %and24, 0, !dbg !7627
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !7627

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !7627

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub28 = sub i64 %13, 1, !dbg !7627
  %and29 = and i64 %sub28, 576460752303423488, !dbg !7627
  %tobool30 = icmp ne i64 %and29, 0, !dbg !7627
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !7627

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !7627

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub33 = sub i64 %14, 1, !dbg !7627
  %and34 = and i64 %sub33, 288230376151711744, !dbg !7627
  %tobool35 = icmp ne i64 %and34, 0, !dbg !7627
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !7627

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !7627

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub38 = sub i64 %15, 1, !dbg !7627
  %and39 = and i64 %sub38, 144115188075855872, !dbg !7627
  %tobool40 = icmp ne i64 %and39, 0, !dbg !7627
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !7627

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !7627

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub43 = sub i64 %16, 1, !dbg !7627
  %and44 = and i64 %sub43, 72057594037927936, !dbg !7627
  %tobool45 = icmp ne i64 %and44, 0, !dbg !7627
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !7627

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !7627

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub48 = sub i64 %17, 1, !dbg !7627
  %and49 = and i64 %sub48, 36028797018963968, !dbg !7627
  %tobool50 = icmp ne i64 %and49, 0, !dbg !7627
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !7627

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !7627

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub53 = sub i64 %18, 1, !dbg !7627
  %and54 = and i64 %sub53, 18014398509481984, !dbg !7627
  %tobool55 = icmp ne i64 %and54, 0, !dbg !7627
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !7627

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !7627

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub58 = sub i64 %19, 1, !dbg !7627
  %and59 = and i64 %sub58, 9007199254740992, !dbg !7627
  %tobool60 = icmp ne i64 %and59, 0, !dbg !7627
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !7627

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !7627

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub63 = sub i64 %20, 1, !dbg !7627
  %and64 = and i64 %sub63, 4503599627370496, !dbg !7627
  %tobool65 = icmp ne i64 %and64, 0, !dbg !7627
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !7627

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !7627

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub68 = sub i64 %21, 1, !dbg !7627
  %and69 = and i64 %sub68, 2251799813685248, !dbg !7627
  %tobool70 = icmp ne i64 %and69, 0, !dbg !7627
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !7627

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !7627

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub73 = sub i64 %22, 1, !dbg !7627
  %and74 = and i64 %sub73, 1125899906842624, !dbg !7627
  %tobool75 = icmp ne i64 %and74, 0, !dbg !7627
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !7627

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !7627

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub78 = sub i64 %23, 1, !dbg !7627
  %and79 = and i64 %sub78, 562949953421312, !dbg !7627
  %tobool80 = icmp ne i64 %and79, 0, !dbg !7627
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !7627

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !7627

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub83 = sub i64 %24, 1, !dbg !7627
  %and84 = and i64 %sub83, 281474976710656, !dbg !7627
  %tobool85 = icmp ne i64 %and84, 0, !dbg !7627
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !7627

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !7627

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub88 = sub i64 %25, 1, !dbg !7627
  %and89 = and i64 %sub88, 140737488355328, !dbg !7627
  %tobool90 = icmp ne i64 %and89, 0, !dbg !7627
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !7627

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !7627

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub93 = sub i64 %26, 1, !dbg !7627
  %and94 = and i64 %sub93, 70368744177664, !dbg !7627
  %tobool95 = icmp ne i64 %and94, 0, !dbg !7627
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !7627

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !7627

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub98 = sub i64 %27, 1, !dbg !7627
  %and99 = and i64 %sub98, 35184372088832, !dbg !7627
  %tobool100 = icmp ne i64 %and99, 0, !dbg !7627
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !7627

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !7627

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub103 = sub i64 %28, 1, !dbg !7627
  %and104 = and i64 %sub103, 17592186044416, !dbg !7627
  %tobool105 = icmp ne i64 %and104, 0, !dbg !7627
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !7627

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !7627

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub108 = sub i64 %29, 1, !dbg !7627
  %and109 = and i64 %sub108, 8796093022208, !dbg !7627
  %tobool110 = icmp ne i64 %and109, 0, !dbg !7627
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !7627

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !7627

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub113 = sub i64 %30, 1, !dbg !7627
  %and114 = and i64 %sub113, 4398046511104, !dbg !7627
  %tobool115 = icmp ne i64 %and114, 0, !dbg !7627
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !7627

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !7627

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub118 = sub i64 %31, 1, !dbg !7627
  %and119 = and i64 %sub118, 2199023255552, !dbg !7627
  %tobool120 = icmp ne i64 %and119, 0, !dbg !7627
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !7627

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !7627

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub123 = sub i64 %32, 1, !dbg !7627
  %and124 = and i64 %sub123, 1099511627776, !dbg !7627
  %tobool125 = icmp ne i64 %and124, 0, !dbg !7627
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !7627

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !7627

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub128 = sub i64 %33, 1, !dbg !7627
  %and129 = and i64 %sub128, 549755813888, !dbg !7627
  %tobool130 = icmp ne i64 %and129, 0, !dbg !7627
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !7627

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !7627

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub133 = sub i64 %34, 1, !dbg !7627
  %and134 = and i64 %sub133, 274877906944, !dbg !7627
  %tobool135 = icmp ne i64 %and134, 0, !dbg !7627
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !7627

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !7627

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub138 = sub i64 %35, 1, !dbg !7627
  %and139 = and i64 %sub138, 137438953472, !dbg !7627
  %tobool140 = icmp ne i64 %and139, 0, !dbg !7627
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !7627

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !7627

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub143 = sub i64 %36, 1, !dbg !7627
  %and144 = and i64 %sub143, 68719476736, !dbg !7627
  %tobool145 = icmp ne i64 %and144, 0, !dbg !7627
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !7627

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !7627

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub148 = sub i64 %37, 1, !dbg !7627
  %and149 = and i64 %sub148, 34359738368, !dbg !7627
  %tobool150 = icmp ne i64 %and149, 0, !dbg !7627
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !7627

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !7627

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub153 = sub i64 %38, 1, !dbg !7627
  %and154 = and i64 %sub153, 17179869184, !dbg !7627
  %tobool155 = icmp ne i64 %and154, 0, !dbg !7627
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !7627

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !7627

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub158 = sub i64 %39, 1, !dbg !7627
  %and159 = and i64 %sub158, 8589934592, !dbg !7627
  %tobool160 = icmp ne i64 %and159, 0, !dbg !7627
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !7627

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !7627

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub163 = sub i64 %40, 1, !dbg !7627
  %and164 = and i64 %sub163, 4294967296, !dbg !7627
  %tobool165 = icmp ne i64 %and164, 0, !dbg !7627
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !7627

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !7627

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub168 = sub i64 %41, 1, !dbg !7627
  %and169 = and i64 %sub168, 2147483648, !dbg !7627
  %tobool170 = icmp ne i64 %and169, 0, !dbg !7627
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !7627

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !7627

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub173 = sub i64 %42, 1, !dbg !7627
  %and174 = and i64 %sub173, 1073741824, !dbg !7627
  %tobool175 = icmp ne i64 %and174, 0, !dbg !7627
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !7627

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !7627

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub178 = sub i64 %43, 1, !dbg !7627
  %and179 = and i64 %sub178, 536870912, !dbg !7627
  %tobool180 = icmp ne i64 %and179, 0, !dbg !7627
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !7627

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !7627

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub183 = sub i64 %44, 1, !dbg !7627
  %and184 = and i64 %sub183, 268435456, !dbg !7627
  %tobool185 = icmp ne i64 %and184, 0, !dbg !7627
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !7627

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !7627

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub188 = sub i64 %45, 1, !dbg !7627
  %and189 = and i64 %sub188, 134217728, !dbg !7627
  %tobool190 = icmp ne i64 %and189, 0, !dbg !7627
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !7627

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !7627

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub193 = sub i64 %46, 1, !dbg !7627
  %and194 = and i64 %sub193, 67108864, !dbg !7627
  %tobool195 = icmp ne i64 %and194, 0, !dbg !7627
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !7627

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !7627

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub198 = sub i64 %47, 1, !dbg !7627
  %and199 = and i64 %sub198, 33554432, !dbg !7627
  %tobool200 = icmp ne i64 %and199, 0, !dbg !7627
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !7627

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !7627

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub203 = sub i64 %48, 1, !dbg !7627
  %and204 = and i64 %sub203, 16777216, !dbg !7627
  %tobool205 = icmp ne i64 %and204, 0, !dbg !7627
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !7627

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !7627

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub208 = sub i64 %49, 1, !dbg !7627
  %and209 = and i64 %sub208, 8388608, !dbg !7627
  %tobool210 = icmp ne i64 %and209, 0, !dbg !7627
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !7627

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !7627

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub213 = sub i64 %50, 1, !dbg !7627
  %and214 = and i64 %sub213, 4194304, !dbg !7627
  %tobool215 = icmp ne i64 %and214, 0, !dbg !7627
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !7627

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !7627

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub218 = sub i64 %51, 1, !dbg !7627
  %and219 = and i64 %sub218, 2097152, !dbg !7627
  %tobool220 = icmp ne i64 %and219, 0, !dbg !7627
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !7627

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !7627

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub223 = sub i64 %52, 1, !dbg !7627
  %and224 = and i64 %sub223, 1048576, !dbg !7627
  %tobool225 = icmp ne i64 %and224, 0, !dbg !7627
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !7627

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !7627

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub228 = sub i64 %53, 1, !dbg !7627
  %and229 = and i64 %sub228, 524288, !dbg !7627
  %tobool230 = icmp ne i64 %and229, 0, !dbg !7627
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !7627

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !7627

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub233 = sub i64 %54, 1, !dbg !7627
  %and234 = and i64 %sub233, 262144, !dbg !7627
  %tobool235 = icmp ne i64 %and234, 0, !dbg !7627
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !7627

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !7627

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub238 = sub i64 %55, 1, !dbg !7627
  %and239 = and i64 %sub238, 131072, !dbg !7627
  %tobool240 = icmp ne i64 %and239, 0, !dbg !7627
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !7627

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !7627

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub243 = sub i64 %56, 1, !dbg !7627
  %and244 = and i64 %sub243, 65536, !dbg !7627
  %tobool245 = icmp ne i64 %and244, 0, !dbg !7627
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !7627

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !7627

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub248 = sub i64 %57, 1, !dbg !7627
  %and249 = and i64 %sub248, 32768, !dbg !7627
  %tobool250 = icmp ne i64 %and249, 0, !dbg !7627
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !7627

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !7627

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub253 = sub i64 %58, 1, !dbg !7627
  %and254 = and i64 %sub253, 16384, !dbg !7627
  %tobool255 = icmp ne i64 %and254, 0, !dbg !7627
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !7627

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !7627

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub258 = sub i64 %59, 1, !dbg !7627
  %and259 = and i64 %sub258, 8192, !dbg !7627
  %tobool260 = icmp ne i64 %and259, 0, !dbg !7627
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !7627

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !7627

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub263 = sub i64 %60, 1, !dbg !7627
  %and264 = and i64 %sub263, 4096, !dbg !7627
  %tobool265 = icmp ne i64 %and264, 0, !dbg !7627
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !7627

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !7627

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub268 = sub i64 %61, 1, !dbg !7627
  %and269 = and i64 %sub268, 2048, !dbg !7627
  %tobool270 = icmp ne i64 %and269, 0, !dbg !7627
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !7627

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !7627

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub273 = sub i64 %62, 1, !dbg !7627
  %and274 = and i64 %sub273, 1024, !dbg !7627
  %tobool275 = icmp ne i64 %and274, 0, !dbg !7627
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !7627

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !7627

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub278 = sub i64 %63, 1, !dbg !7627
  %and279 = and i64 %sub278, 512, !dbg !7627
  %tobool280 = icmp ne i64 %and279, 0, !dbg !7627
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !7627

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !7627

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub283 = sub i64 %64, 1, !dbg !7627
  %and284 = and i64 %sub283, 256, !dbg !7627
  %tobool285 = icmp ne i64 %and284, 0, !dbg !7627
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !7627

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !7627

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub288 = sub i64 %65, 1, !dbg !7627
  %and289 = and i64 %sub288, 128, !dbg !7627
  %tobool290 = icmp ne i64 %and289, 0, !dbg !7627
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !7627

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !7627

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub293 = sub i64 %66, 1, !dbg !7627
  %and294 = and i64 %sub293, 64, !dbg !7627
  %tobool295 = icmp ne i64 %and294, 0, !dbg !7627
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !7627

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !7627

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub298 = sub i64 %67, 1, !dbg !7627
  %and299 = and i64 %sub298, 32, !dbg !7627
  %tobool300 = icmp ne i64 %and299, 0, !dbg !7627
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !7627

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !7627

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub303 = sub i64 %68, 1, !dbg !7627
  %and304 = and i64 %sub303, 16, !dbg !7627
  %tobool305 = icmp ne i64 %and304, 0, !dbg !7627
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !7627

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !7627

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub308 = sub i64 %69, 1, !dbg !7627
  %and309 = and i64 %sub308, 8, !dbg !7627
  %tobool310 = icmp ne i64 %and309, 0, !dbg !7627
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !7627

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !7627

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub313 = sub i64 %70, 1, !dbg !7627
  %and314 = and i64 %sub313, 4, !dbg !7627
  %tobool315 = icmp ne i64 %and314, 0, !dbg !7627
  %71 = zext i1 %tobool315 to i64, !dbg !7627
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !7627
  br label %cond.end, !dbg !7627

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !7627
  br label %cond.end317, !dbg !7627

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !7627
  br label %cond.end319, !dbg !7627

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !7627
  br label %cond.end321, !dbg !7627

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !7627
  br label %cond.end323, !dbg !7627

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !7627
  br label %cond.end325, !dbg !7627

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !7627
  br label %cond.end327, !dbg !7627

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !7627
  br label %cond.end329, !dbg !7627

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !7627
  br label %cond.end331, !dbg !7627

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !7627
  br label %cond.end333, !dbg !7627

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !7627
  br label %cond.end335, !dbg !7627

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !7627
  br label %cond.end337, !dbg !7627

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !7627
  br label %cond.end339, !dbg !7627

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !7627
  br label %cond.end341, !dbg !7627

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !7627
  br label %cond.end343, !dbg !7627

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !7627
  br label %cond.end345, !dbg !7627

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !7627
  br label %cond.end347, !dbg !7627

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !7627
  br label %cond.end349, !dbg !7627

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !7627
  br label %cond.end351, !dbg !7627

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !7627
  br label %cond.end353, !dbg !7627

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !7627
  br label %cond.end355, !dbg !7627

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !7627
  br label %cond.end357, !dbg !7627

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !7627
  br label %cond.end359, !dbg !7627

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !7627
  br label %cond.end361, !dbg !7627

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !7627
  br label %cond.end363, !dbg !7627

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !7627
  br label %cond.end365, !dbg !7627

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !7627
  br label %cond.end367, !dbg !7627

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !7627
  br label %cond.end369, !dbg !7627

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !7627
  br label %cond.end371, !dbg !7627

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !7627
  br label %cond.end373, !dbg !7627

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !7627
  br label %cond.end375, !dbg !7627

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !7627
  br label %cond.end377, !dbg !7627

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !7627
  br label %cond.end379, !dbg !7627

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !7627
  br label %cond.end381, !dbg !7627

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !7627
  br label %cond.end383, !dbg !7627

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !7627
  br label %cond.end385, !dbg !7627

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !7627
  br label %cond.end387, !dbg !7627

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !7627
  br label %cond.end389, !dbg !7627

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !7627
  br label %cond.end391, !dbg !7627

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !7627
  br label %cond.end393, !dbg !7627

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !7627
  br label %cond.end395, !dbg !7627

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !7627
  br label %cond.end397, !dbg !7627

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !7627
  br label %cond.end399, !dbg !7627

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !7627
  br label %cond.end401, !dbg !7627

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !7627
  br label %cond.end403, !dbg !7627

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !7627
  br label %cond.end405, !dbg !7627

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !7627
  br label %cond.end407, !dbg !7627

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !7627
  br label %cond.end409, !dbg !7627

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !7627
  br label %cond.end411, !dbg !7627

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !7627
  br label %cond.end413, !dbg !7627

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !7627
  br label %cond.end415, !dbg !7627

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !7627
  br label %cond.end417, !dbg !7627

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !7627
  br label %cond.end419, !dbg !7627

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !7627
  br label %cond.end421, !dbg !7627

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !7627
  br label %cond.end423, !dbg !7627

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !7627
  br label %cond.end425, !dbg !7627

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !7627
  br label %cond.end427, !dbg !7627

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !7627
  br label %cond.end429, !dbg !7627

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !7627
  br label %cond.end431, !dbg !7627

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !7627
  br label %cond.end433, !dbg !7627

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !7627
  br label %cond.end435, !dbg !7627

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !7627
  br label %cond.end437, !dbg !7627

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !7627
  br label %cond.end440, !dbg !7627

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !7627

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !7627
  br label %cond.end444, !dbg !7627

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !7627
  %sub443 = sub i64 %72, 1, !dbg !7627
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !7627
  br label %cond.end444, !dbg !7627

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !7627
  %sub446 = sub i32 %cond445, 12, !dbg !7628
  %add = add i32 %sub446, 1, !dbg !7629
  store i32 %add, i32* %retval, align 4, !dbg !7630
  br label %return, !dbg !7630

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !7631
  %dec = add i64 %73, -1, !dbg !7631
  store i64 %dec, i64* %size.addr, align 8, !dbg !7631
  %74 = load i64, i64* %size.addr, align 8, !dbg !7632
  %shr = lshr i64 %74, 12, !dbg !7632
  store i64 %shr, i64* %size.addr, align 8, !dbg !7632
  %75 = load i64, i64* %size.addr, align 8, !dbg !7633
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7610
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !7634
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !7635
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !7634, !srcloc !7636
  store i32 %78, i32* %bitpos.i, align 4, !dbg !7634
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !7637
  %add.i = add i32 %79, 1, !dbg !7638
  store i32 %add.i, i32* %retval, align 4, !dbg !7639
  br label %return, !dbg !7639

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !7640
  ret i32 %80, !dbg !7640
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !7641 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7603, metadata !DIExpression()), !dbg !7645
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7609, metadata !DIExpression()), !dbg !7647
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7648, metadata !DIExpression()), !dbg !7649
  %0 = load i64, i64* %n.addr, align 8, !dbg !7650
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7647
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !7651
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !7652
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !7651, !srcloc !7636
  store i32 %3, i32* %bitpos.i, align 4, !dbg !7651
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !7653
  %add.i = add i32 %4, 1, !dbg !7654
  %sub = sub i32 %add.i, 1, !dbg !7655
  ret i32 %sub, !dbg !7656
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !7657 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !7661, metadata !DIExpression()), !dbg !7662
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !7663, metadata !DIExpression()), !dbg !7664
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7665, metadata !DIExpression()), !dbg !7666
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7667, metadata !DIExpression()), !dbg !7668
  %0 = load i8*, i8** %object.addr, align 8, !dbg !7669
  ret i8* %0, !dbg !7670
}

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kmalloc(%struct.device*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !7671 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7672, metadata !DIExpression()), !dbg !7673
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7674, metadata !DIExpression()), !dbg !7675
  %0 = load i8*, i8** %data.addr, align 8, !dbg !7676
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7677
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !7678
  store i8* %0, i8** %driver_data, align 8, !dbg !7679
  ret void, !dbg !7680
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_resume(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local void @__pm_runtime_disable(%struct.device*, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_read(%struct.edma_cc* %ecc, i32 %offset) #0 !dbg !7681 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !7684, metadata !DIExpression()), !dbg !7685
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7686, metadata !DIExpression()), !dbg !7687
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !7688
  %base = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %0, i32 0, i32 2, !dbg !7689
  %1 = load i8*, i8** %base, align 8, !dbg !7689
  %2 = load i32, i32* %offset.addr, align 4, !dbg !7690
  %idx.ext = sext i32 %2 to i64, !dbg !7691
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !7691
  %call = call i32 @__readl(i8* %add.ptr) #11, !dbg !7692
  ret i32 %call, !dbg !7693
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__readl(i8* %addr) #0 !dbg !7694 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !7695, metadata !DIExpression()), !dbg !7696
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7697, metadata !DIExpression()), !dbg !7696
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !7696
  %1 = bitcast i8* %0 to i32*, !dbg !7696
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* %1) #10, !dbg !7696, !srcloc !7698
  store i32 %2, i32* %ret, align 4, !dbg !7696
  %3 = load i32, i32* %ret, align 4, !dbg !7696
  ret i32 %3, !dbg !7696
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kmalloc_array(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !7699 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7700, metadata !DIExpression()), !dbg !7701
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7702, metadata !DIExpression()), !dbg !7703
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7704, metadata !DIExpression()), !dbg !7705
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7706, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !7708, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !7710, metadata !DIExpression()), !dbg !7713
  %0 = load i64, i64* %n.addr, align 8, !dbg !7713
  store i64 %0, i64* %__a, align 8, !dbg !7713
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !7714, metadata !DIExpression()), !dbg !7713
  %1 = load i64, i64* %size.addr, align 8, !dbg !7713
  store i64 %1, i64* %__b, align 8, !dbg !7713
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !7715, metadata !DIExpression()), !dbg !7713
  store i64* %bytes, i64** %__d, align 8, !dbg !7713
  %cmp = icmp eq i64* %__a, %__b, !dbg !7713
  %conv = zext i1 %cmp to i32, !dbg !7713
  %2 = load i64*, i64** %__d, align 8, !dbg !7713
  %cmp1 = icmp eq i64* %__a, %2, !dbg !7713
  %conv2 = zext i1 %cmp1 to i32, !dbg !7713
  %3 = load i64, i64* %__a, align 8, !dbg !7713
  %4 = load i64, i64* %__b, align 8, !dbg !7713
  %5 = load i64*, i64** %__d, align 8, !dbg !7713
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !7713
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !7713
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !7713
  store i64 %8, i64* %5, align 8, !dbg !7713
  %frombool = zext i1 %7 to i8, !dbg !7713
  store i8 %frombool, i8* %tmp, align 1, !dbg !7713
  %9 = load i8, i8* %tmp, align 1, !dbg !7713
  %tobool = trunc i8 %9 to i1, !dbg !7713
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !7716
  %lnot = xor i1 %call, true, !dbg !7716
  %lnot3 = xor i1 %lnot, true, !dbg !7716
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7716
  %conv4 = sext i32 %lnot.ext to i64, !dbg !7716
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !7716
  br i1 %tobool5, label %if.then, label %if.end, !dbg !7717

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !7718
  br label %return, !dbg !7718

if.end:                                           ; preds = %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7719
  %11 = load i64, i64* %bytes, align 8, !dbg !7720
  %12 = load i32, i32* %flags.addr, align 4, !dbg !7721
  %call6 = call noalias i8* @devm_kmalloc(%struct.device* %10, i64 %11, i32 %12) #11, !dbg !7722
  store i8* %call6, i8** %retval, align 8, !dbg !7723
  br label %return, !dbg !7723

return:                                           ; preds = %if.end, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !7724
  ret i8* %13, !dbg !7724
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !7725 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7729, metadata !DIExpression()), !dbg !7731
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7733, metadata !DIExpression()), !dbg !7734
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7735, metadata !DIExpression()), !dbg !7737
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7739, metadata !DIExpression()), !dbg !7740
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7741, metadata !DIExpression()), !dbg !7742
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7743, metadata !DIExpression()), !dbg !7744
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7745
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7746
  %div = sdiv i64 %1, 64, !dbg !7746
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7747
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7745
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7748
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7749
  %conv.i = trunc i64 %4 to i32, !dbg !7749
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !7750
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7751
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7751
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #13, !dbg !7751
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7752
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7753
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !7754
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !7755
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #10, !dbg !7756, !srcloc !7757
  ret void, !dbg !7758
}

; Function Attrs: noredzone
declare dso_local void @__bitmap_set(i64*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !7759 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7763, metadata !DIExpression()), !dbg !7764
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7765, metadata !DIExpression()), !dbg !7766
  ret i1 true, !dbg !7767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !7768 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7772, metadata !DIExpression()), !dbg !7773
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7774, metadata !DIExpression()), !dbg !7775
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7776, metadata !DIExpression()), !dbg !7777
  ret void, !dbg !7778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clear_bit(i64 %nr, i64* %addr) #0 !dbg !7779 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7780, metadata !DIExpression()), !dbg !7782
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7784, metadata !DIExpression()), !dbg !7785
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7735, metadata !DIExpression()), !dbg !7786
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7739, metadata !DIExpression()), !dbg !7788
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7789, metadata !DIExpression()), !dbg !7790
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7791, metadata !DIExpression()), !dbg !7792
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7793
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7794
  %div = sdiv i64 %1, 64, !dbg !7794
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7795
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7793
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7796
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7797
  %conv.i = trunc i64 %4 to i32, !dbg !7797
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !7798
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7799
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7799
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #13, !dbg !7799
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7800
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7801
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !7802
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !7803
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #10, !dbg !7804, !srcloc !7805
  ret void, !dbg !7806
}

; Function Attrs: noredzone
declare dso_local void @__bitmap_clear(i64*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !7807 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7808, metadata !DIExpression()), !dbg !7809
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7810, metadata !DIExpression()), !dbg !7811
  ret i1 true, !dbg !7812
}

; Function Attrs: noredzone
declare dso_local void @memcpy_toio(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !7813 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !7818, metadata !DIExpression()), !dbg !7819
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !7820
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !7821
  %1 = load i8*, i8** %name, align 8, !dbg !7821
  ret i8* %1, !dbg !7822
}

; Function Attrs: noredzone
declare dso_local i32 @devm_request_threaded_irq(%struct.device*, i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_shadow0_read_array(%struct.edma_cc* %ecc, i32 %offset, i32 %i) #0 !dbg !7823 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !7826, metadata !DIExpression()), !dbg !7827
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7828, metadata !DIExpression()), !dbg !7829
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7830, metadata !DIExpression()), !dbg !7831
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !7832
  %1 = load i32, i32* %offset.addr, align 4, !dbg !7833
  %add = add i32 8192, %1, !dbg !7834
  %2 = load i32, i32* %i.addr, align 4, !dbg !7835
  %shl = shl i32 %2, 2, !dbg !7836
  %add1 = add i32 %add, %shl, !dbg !7837
  %call = call i32 @edma_read(%struct.edma_cc* %0, i32 %add1) #11, !dbg !7838
  ret i32 %call, !dbg !7839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_shadow0_write_array(%struct.edma_cc* %ecc, i32 %offset, i32 %i, i32 %val) #0 !dbg !7840 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !7841, metadata !DIExpression()), !dbg !7842
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7843, metadata !DIExpression()), !dbg !7844
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7845, metadata !DIExpression()), !dbg !7846
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7847, metadata !DIExpression()), !dbg !7848
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !7849
  %1 = load i32, i32* %offset.addr, align 4, !dbg !7850
  %add = add i32 8192, %1, !dbg !7851
  %2 = load i32, i32* %i.addr, align 4, !dbg !7852
  %shl = shl i32 %2, 2, !dbg !7853
  %add1 = add i32 %add, %shl, !dbg !7854
  %3 = load i32, i32* %val.addr, align 4, !dbg !7855
  call void @edma_write(%struct.edma_cc* %0, i32 %add1, i32 %3) #11, !dbg !7856
  ret void, !dbg !7857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_completion_handler(%struct.edma_chan* %echan) #0 !dbg !7858 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !7861, metadata !DIExpression()), !dbg !7866
  %lock.addr.i19 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i19, metadata !7861, metadata !DIExpression()), !dbg !7868
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7874, metadata !DIExpression()), !dbg !7876
  %echan.addr = alloca %struct.edma_chan*, align 8
  %dev = alloca %struct.device*, align 8
  %edesc = alloca %struct.edma_desc*, align 8
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !7878, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !7880, metadata !DIExpression()), !dbg !7881
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !7882
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 0, !dbg !7883
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan, i32 0, i32 0, !dbg !7884
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan, i32 0, i32 0, !dbg !7885
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !7885
  %dev1 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 15, !dbg !7886
  %2 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !7886
  store %struct.device* %2, %struct.device** %dev, align 8, !dbg !7881
  call void @llvm.dbg.declare(metadata %struct.edma_desc** %edesc, metadata !7887, metadata !DIExpression()), !dbg !7888
  %3 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !7889
  %vchan2 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %3, i32 0, i32 0, !dbg !7890
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan2, i32 0, i32 3, !dbg !7891
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7892, !srcloc !7894
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7895
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !7895
  %rlock.i = bitcast %union.anon.3* %5 to %struct.raw_spinlock*, !dbg !7895
  %6 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !7897
  %edesc3 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %6, i32 0, i32 2, !dbg !7898
  %7 = load %struct.edma_desc*, %struct.edma_desc** %edesc3, align 8, !dbg !7898
  store %struct.edma_desc* %7, %struct.edma_desc** %edesc, align 8, !dbg !7899
  %8 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7900
  %tobool = icmp ne %struct.edma_desc* %8, null, !dbg !7900
  br i1 %tobool, label %if.then, label %if.end16, !dbg !7901

if.then:                                          ; preds = %entry
  %9 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7902
  %cyclic = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %9, i32 0, i32 3, !dbg !7903
  %10 = load i32, i32* %cyclic, align 4, !dbg !7903
  %tobool4 = icmp ne i32 %10, 0, !dbg !7902
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !7904

if.then5:                                         ; preds = %if.then
  %11 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7905
  %vdesc = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %11, i32 0, i32 0, !dbg !7906
  call void @vchan_cyclic_callback(%struct.virt_dma_desc* %vdesc) #11, !dbg !7907
  %12 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !7908
  %vchan6 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %12, i32 0, i32 0, !dbg !7909
  %lock7 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan6, i32 0, i32 3, !dbg !7910
  store %struct.spinlock* %lock7, %struct.spinlock** %lock.addr.i19, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7911, !srcloc !7913
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i19, align 8, !dbg !7914
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !7914
  %rlock.i20 = bitcast %union.anon.3* %14 to %struct.raw_spinlock*, !dbg !7914
  br label %return, !dbg !7916

if.else:                                          ; preds = %if.then
  %15 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7917
  %processed = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %15, i32 0, i32 8, !dbg !7919
  %16 = load i32, i32* %processed, align 8, !dbg !7919
  %17 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7920
  %pset_nr = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %17, i32 0, i32 6, !dbg !7921
  %18 = load i32, i32* %pset_nr, align 8, !dbg !7921
  %cmp = icmp eq i32 %16, %18, !dbg !7922
  br i1 %cmp, label %if.then8, label %if.else11, !dbg !7923

if.then8:                                         ; preds = %if.else
  %19 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7924
  %residue = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %19, i32 0, i32 11, !dbg !7926
  store i32 0, i32* %residue, align 4, !dbg !7927
  %20 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !7928
  call void @edma_stop(%struct.edma_chan* %20) #11, !dbg !7929
  %21 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7930
  %vdesc9 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %21, i32 0, i32 0, !dbg !7931
  call void @vchan_cookie_complete(%struct.virt_dma_desc* %vdesc9) #11, !dbg !7932
  %22 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !7933
  %edesc10 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %22, i32 0, i32 2, !dbg !7934
  store %struct.edma_desc* null, %struct.edma_desc** %edesc10, align 8, !dbg !7935
  br label %if.end, !dbg !7936

if.else11:                                        ; preds = %if.else
  %23 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !7937
  call void @edma_pause(%struct.edma_chan* %23) #11, !dbg !7939
  %24 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7940
  %sg_len = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %24, i32 0, i32 10, !dbg !7941
  %25 = load i32, i32* %sg_len, align 8, !dbg !7941
  %26 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7942
  %residue12 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %26, i32 0, i32 11, !dbg !7943
  %27 = load i32, i32* %residue12, align 4, !dbg !7944
  %sub = sub i32 %27, %25, !dbg !7944
  store i32 %sub, i32* %residue12, align 4, !dbg !7944
  %28 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7945
  %residue13 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %28, i32 0, i32 11, !dbg !7946
  %29 = load i32, i32* %residue13, align 4, !dbg !7946
  %30 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7947
  %residue_stat = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %30, i32 0, i32 12, !dbg !7948
  store i32 %29, i32* %residue_stat, align 8, !dbg !7949
  %31 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7950
  %processed14 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %31, i32 0, i32 8, !dbg !7951
  %32 = load i32, i32* %processed14, align 8, !dbg !7951
  %33 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !7952
  %processed_stat = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %33, i32 0, i32 9, !dbg !7953
  store i32 %32, i32* %processed_stat, align 4, !dbg !7954
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then8
  br label %if.end15

if.end15:                                         ; preds = %if.end
  %34 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !7955
  call void @edma_execute(%struct.edma_chan* %34) #11, !dbg !7956
  br label %if.end16, !dbg !7957

if.end16:                                         ; preds = %if.end15, %entry
  %35 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !7958
  %vchan17 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %35, i32 0, i32 0, !dbg !7959
  %lock18 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan17, i32 0, i32 3, !dbg !7960
  store %struct.spinlock* %lock18, %struct.spinlock** %lock.addr.i21, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7961, !srcloc !7913
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !7962
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !7962
  %rlock.i22 = bitcast %union.anon.3* %37 to %struct.raw_spinlock*, !dbg !7962
  br label %return, !dbg !7963

return:                                           ; preds = %if.end16, %if.then5
  ret void, !dbg !7963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_shadow0_write(%struct.edma_cc* %ecc, i32 %offset, i32 %val) #0 !dbg !7964 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !7967, metadata !DIExpression()), !dbg !7968
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7969, metadata !DIExpression()), !dbg !7970
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7971, metadata !DIExpression()), !dbg !7972
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !7973
  %1 = load i32, i32* %offset.addr, align 4, !dbg !7974
  %add = add i32 8192, %1, !dbg !7975
  %2 = load i32, i32* %val.addr, align 4, !dbg !7976
  call void @edma_write(%struct.edma_cc* %0, i32 %add, i32 %2) #11, !dbg !7977
  ret void, !dbg !7978
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_write(%struct.edma_cc* %ecc, i32 %offset, i32 %val) #0 !dbg !7979 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !7980, metadata !DIExpression()), !dbg !7981
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7982, metadata !DIExpression()), !dbg !7983
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7984, metadata !DIExpression()), !dbg !7985
  %0 = load i32, i32* %val.addr, align 4, !dbg !7986
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !7987
  %base = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %1, i32 0, i32 2, !dbg !7988
  %2 = load i8*, i8** %base, align 8, !dbg !7988
  %3 = load i32, i32* %offset.addr, align 4, !dbg !7989
  %idx.ext = sext i32 %3 to i64, !dbg !7990
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !7990
  call void @__writel(i32 %0, i8* %add.ptr) #11, !dbg !7991
  ret void, !dbg !7992
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__writel(i32 %val, i8* %addr) #0 !dbg !7993 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7994, metadata !DIExpression()), !dbg !7995
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !7996, metadata !DIExpression()), !dbg !7995
  %0 = load i32, i32* %val.addr, align 4, !dbg !7995
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !7995
  %2 = bitcast i8* %1 to i32*, !dbg !7995
  call void asm sideeffect "movl $0,$1", "r,*m,~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #10, !dbg !7995, !srcloc !7997
  ret void, !dbg !7995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_cyclic_callback(%struct.virt_dma_desc* %vd) #0 !dbg !7998 {
entry:
  %vd.addr = alloca %struct.virt_dma_desc*, align 8
  %vc = alloca %struct.virt_dma_chan*, align 8
  store %struct.virt_dma_desc* %vd, %struct.virt_dma_desc** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd.addr, metadata !7999, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc, metadata !8001, metadata !DIExpression()), !dbg !8002
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !8003
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %0, i32 0, i32 0, !dbg !8004
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx, i32 0, i32 3, !dbg !8005
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !8005
  %call = call %struct.virt_dma_chan* @to_virt_chan(%struct.dma_chan* %1) #11, !dbg !8006
  store %struct.virt_dma_chan* %call, %struct.virt_dma_chan** %vc, align 8, !dbg !8002
  %2 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !8007
  %3 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !8008
  %cyclic = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %3, i32 0, i32 9, !dbg !8009
  store %struct.virt_dma_desc* %2, %struct.virt_dma_desc** %cyclic, align 8, !dbg !8010
  %4 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !8011
  %task = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %4, i32 0, i32 1, !dbg !8012
  call void @tasklet_schedule(%struct.tasklet_struct* %task) #11, !dbg !8013
  ret void, !dbg !8014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_stop(%struct.edma_chan* %echan) #0 !dbg !8015 {
entry:
  %echan.addr = alloca %struct.edma_chan*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %channel = alloca i32, align 4
  %idx = alloca i32, align 4
  %ch_bit = alloca i32, align 4
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !8016, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !8018, metadata !DIExpression()), !dbg !8019
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8020
  %ecc1 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 3, !dbg !8021
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc1, align 8, !dbg !8021
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !8019
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !8022, metadata !DIExpression()), !dbg !8023
  %2 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8024
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %2, i32 0, i32 5, !dbg !8024
  %3 = load i32, i32* %ch_num, align 8, !dbg !8024
  %and = and i32 %3, 65535, !dbg !8024
  store i32 %and, i32* %channel, align 4, !dbg !8023
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !8025, metadata !DIExpression()), !dbg !8026
  %4 = load i32, i32* %channel, align 4, !dbg !8027
  %shr = ashr i32 %4, 5, !dbg !8027
  store i32 %shr, i32* %idx, align 4, !dbg !8026
  call void @llvm.dbg.declare(metadata i32* %ch_bit, metadata !8028, metadata !DIExpression()), !dbg !8029
  %5 = load i32, i32* %channel, align 4, !dbg !8030
  %and2 = and i32 %5, 31, !dbg !8030
  %sh_prom = zext i32 %and2 to i64, !dbg !8030
  %shl = shl i64 1, %sh_prom, !dbg !8030
  %conv = trunc i64 %shl to i32, !dbg !8030
  store i32 %conv, i32* %ch_bit, align 4, !dbg !8029
  %6 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8031
  %7 = load i32, i32* %idx, align 4, !dbg !8032
  %8 = load i32, i32* %ch_bit, align 4, !dbg !8033
  call void @edma_shadow0_write_array(%struct.edma_cc* %6, i32 40, i32 %7, i32 %8) #11, !dbg !8034
  %9 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8035
  %10 = load i32, i32* %idx, align 4, !dbg !8036
  %11 = load i32, i32* %ch_bit, align 4, !dbg !8037
  call void @edma_shadow0_write_array(%struct.edma_cc* %9, i32 8, i32 %10, i32 %11) #11, !dbg !8038
  %12 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8039
  %13 = load i32, i32* %idx, align 4, !dbg !8040
  %14 = load i32, i32* %ch_bit, align 4, !dbg !8041
  call void @edma_shadow0_write_array(%struct.edma_cc* %12, i32 64, i32 %13, i32 %14) #11, !dbg !8042
  %15 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8043
  %16 = load i32, i32* %idx, align 4, !dbg !8044
  %17 = load i32, i32* %ch_bit, align 4, !dbg !8045
  call void @edma_write_array(%struct.edma_cc* %15, i32 776, i32 %16, i32 %17) #11, !dbg !8046
  %18 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8047
  %19 = load i32, i32* %idx, align 4, !dbg !8048
  %20 = load i32, i32* %ch_bit, align 4, !dbg !8049
  call void @edma_shadow0_write_array(%struct.edma_cc* %18, i32 112, i32 %19, i32 %20) #11, !dbg !8050
  ret void, !dbg !8051
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_cookie_complete(%struct.virt_dma_desc* %vd) #0 !dbg !8052 {
entry:
  %vd.addr = alloca %struct.virt_dma_desc*, align 8
  %vc = alloca %struct.virt_dma_chan*, align 8
  %cookie = alloca i32, align 4
  store %struct.virt_dma_desc* %vd, %struct.virt_dma_desc** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd.addr, metadata !8053, metadata !DIExpression()), !dbg !8054
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc, metadata !8055, metadata !DIExpression()), !dbg !8056
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !8057
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %0, i32 0, i32 0, !dbg !8058
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx, i32 0, i32 3, !dbg !8059
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !8059
  %call = call %struct.virt_dma_chan* @to_virt_chan(%struct.dma_chan* %1) #11, !dbg !8060
  store %struct.virt_dma_chan* %call, %struct.virt_dma_chan** %vc, align 8, !dbg !8056
  call void @llvm.dbg.declare(metadata i32* %cookie, metadata !8061, metadata !DIExpression()), !dbg !8062
  %2 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !8063
  %tx1 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %2, i32 0, i32 0, !dbg !8064
  %cookie2 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx1, i32 0, i32 0, !dbg !8065
  %3 = load i32, i32* %cookie2, align 8, !dbg !8065
  store i32 %3, i32* %cookie, align 4, !dbg !8066
  %4 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !8067
  %tx3 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %4, i32 0, i32 0, !dbg !8068
  call void @dma_cookie_complete(%struct.dma_async_tx_descriptor* %tx3) #11, !dbg !8069
  %5 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !8070
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %5, i32 0, i32 2, !dbg !8071
  %6 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !8072
  %desc_completed = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %6, i32 0, i32 7, !dbg !8073
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* %desc_completed) #11, !dbg !8074
  %7 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !8075
  %task = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %7, i32 0, i32 1, !dbg !8076
  call void @tasklet_schedule(%struct.tasklet_struct* %task) #11, !dbg !8077
  ret void, !dbg !8078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_pause(%struct.edma_chan* %echan) #0 !dbg !8079 {
entry:
  %echan.addr = alloca %struct.edma_chan*, align 8
  %channel = alloca i32, align 4
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !8080, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !8082, metadata !DIExpression()), !dbg !8083
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8084
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 5, !dbg !8084
  %1 = load i32, i32* %ch_num, align 8, !dbg !8084
  %and = and i32 %1, 65535, !dbg !8084
  store i32 %and, i32* %channel, align 4, !dbg !8083
  %2 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8085
  %ecc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %2, i32 0, i32 3, !dbg !8086
  %3 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8086
  %4 = load i32, i32* %channel, align 4, !dbg !8087
  %shr = ashr i32 %4, 5, !dbg !8087
  %5 = load i32, i32* %channel, align 4, !dbg !8088
  %and1 = and i32 %5, 31, !dbg !8088
  %sh_prom = zext i32 %and1 to i64, !dbg !8088
  %shl = shl i64 1, %sh_prom, !dbg !8088
  %conv = trunc i64 %shl to i32, !dbg !8088
  call void @edma_shadow0_write_array(%struct.edma_cc* %3, i32 40, i32 %shr, i32 %conv) #11, !dbg !8089
  ret void, !dbg !8090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_execute(%struct.edma_chan* %echan) #0 !dbg !8091 {
entry:
  %echan.addr = alloca %struct.edma_chan*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %vdesc = alloca %struct.virt_dma_desc*, align 8
  %edesc = alloca %struct.edma_desc*, align 8
  %dev = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %left = alloca i32, align 4
  %nslots = alloca i32, align 4
  %__UNIQUE_ID___x249 = alloca i32, align 4
  %__UNIQUE_ID___y250 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !8094, metadata !DIExpression()), !dbg !8095
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8096
  %ecc1 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 3, !dbg !8097
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc1, align 8, !dbg !8097
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !8095
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vdesc, metadata !8098, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.declare(metadata %struct.edma_desc** %edesc, metadata !8100, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !8102, metadata !DIExpression()), !dbg !8103
  %2 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8104
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %2, i32 0, i32 0, !dbg !8105
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan, i32 0, i32 0, !dbg !8106
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan, i32 0, i32 0, !dbg !8107
  %3 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !8107
  %dev2 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %3, i32 0, i32 15, !dbg !8108
  %4 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !8108
  store %struct.device* %4, %struct.device** %dev, align 8, !dbg !8103
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8109, metadata !DIExpression()), !dbg !8110
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8111, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.declare(metadata i32* %left, metadata !8113, metadata !DIExpression()), !dbg !8114
  call void @llvm.dbg.declare(metadata i32* %nslots, metadata !8115, metadata !DIExpression()), !dbg !8116
  %5 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8117
  %edesc3 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %5, i32 0, i32 2, !dbg !8119
  %6 = load %struct.edma_desc*, %struct.edma_desc** %edesc3, align 8, !dbg !8119
  %tobool = icmp ne %struct.edma_desc* %6, null, !dbg !8117
  br i1 %tobool, label %if.end9, label %if.then, !dbg !8120

if.then:                                          ; preds = %entry
  %7 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8121
  %vchan4 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %7, i32 0, i32 0, !dbg !8123
  %call = call %struct.virt_dma_desc* @vchan_next_desc(%struct.virt_dma_chan* %vchan4) #11, !dbg !8124
  store %struct.virt_dma_desc* %call, %struct.virt_dma_desc** %vdesc, align 8, !dbg !8125
  %8 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vdesc, align 8, !dbg !8126
  %tobool5 = icmp ne %struct.virt_dma_desc* %8, null, !dbg !8126
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !8128

if.then6:                                         ; preds = %if.then
  br label %if.end61, !dbg !8129

if.end:                                           ; preds = %if.then
  %9 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vdesc, align 8, !dbg !8130
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %9, i32 0, i32 2, !dbg !8131
  call void @list_del(%struct.list_head* %node) #11, !dbg !8132
  %10 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vdesc, align 8, !dbg !8133
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %10, i32 0, i32 0, !dbg !8134
  %call7 = call %struct.edma_desc* @to_edma_desc(%struct.dma_async_tx_descriptor* %tx) #11, !dbg !8135
  %11 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8136
  %edesc8 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %11, i32 0, i32 2, !dbg !8137
  store %struct.edma_desc* %call7, %struct.edma_desc** %edesc8, align 8, !dbg !8138
  br label %if.end9, !dbg !8139

if.end9:                                          ; preds = %if.end, %entry
  %12 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8140
  %edesc10 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %12, i32 0, i32 2, !dbg !8141
  %13 = load %struct.edma_desc*, %struct.edma_desc** %edesc10, align 8, !dbg !8141
  store %struct.edma_desc* %13, %struct.edma_desc** %edesc, align 8, !dbg !8142
  %14 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8143
  %pset_nr = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %14, i32 0, i32 6, !dbg !8144
  %15 = load i32, i32* %pset_nr, align 8, !dbg !8144
  %16 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8145
  %processed = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %16, i32 0, i32 8, !dbg !8146
  %17 = load i32, i32* %processed, align 8, !dbg !8146
  %sub = sub i32 %15, %17, !dbg !8147
  store i32 %sub, i32* %left, align 4, !dbg !8148
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x249, metadata !8149, metadata !DIExpression()), !dbg !8151
  store i32 20, i32* %__UNIQUE_ID___x249, align 4, !dbg !8151
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y250, metadata !8152, metadata !DIExpression()), !dbg !8151
  %18 = load i32, i32* %left, align 4, !dbg !8151
  store i32 %18, i32* %__UNIQUE_ID___y250, align 4, !dbg !8151
  %19 = load i32, i32* %__UNIQUE_ID___x249, align 4, !dbg !8151
  %20 = load i32, i32* %__UNIQUE_ID___y250, align 4, !dbg !8151
  %cmp = icmp slt i32 %19, %20, !dbg !8151
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8151

cond.true:                                        ; preds = %if.end9
  %21 = load i32, i32* %__UNIQUE_ID___x249, align 4, !dbg !8151
  br label %cond.end, !dbg !8151

cond.false:                                       ; preds = %if.end9
  %22 = load i32, i32* %__UNIQUE_ID___y250, align 4, !dbg !8151
  br label %cond.end, !dbg !8151

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ %22, %cond.false ], !dbg !8151
  store i32 %cond, i32* %tmp, align 4, !dbg !8151
  %23 = load i32, i32* %tmp, align 4, !dbg !8151
  store i32 %23, i32* %nslots, align 4, !dbg !8153
  %24 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8154
  %sg_len = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %24, i32 0, i32 10, !dbg !8155
  store i32 0, i32* %sg_len, align 8, !dbg !8156
  store i32 0, i32* %i, align 4, !dbg !8157
  br label %for.cond, !dbg !8159

for.cond:                                         ; preds = %for.inc, %cond.end
  %25 = load i32, i32* %i, align 4, !dbg !8160
  %26 = load i32, i32* %nslots, align 4, !dbg !8162
  %cmp11 = icmp slt i32 %25, %26, !dbg !8163
  br i1 %cmp11, label %for.body, label %for.end, !dbg !8164

for.body:                                         ; preds = %for.cond
  %27 = load i32, i32* %i, align 4, !dbg !8165
  %28 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8167
  %processed12 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %28, i32 0, i32 8, !dbg !8168
  %29 = load i32, i32* %processed12, align 8, !dbg !8168
  %add = add i32 %27, %29, !dbg !8169
  store i32 %add, i32* %j, align 4, !dbg !8170
  %30 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8171
  %31 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8172
  %slot = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %31, i32 0, i32 8, !dbg !8173
  %32 = load i32, i32* %i, align 4, !dbg !8174
  %idxprom = sext i32 %32 to i64, !dbg !8172
  %arrayidx = getelementptr [20 x i32], [20 x i32]* %slot, i64 0, i64 %idxprom, !dbg !8172
  %33 = load i32, i32* %arrayidx, align 4, !dbg !8172
  %34 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8175
  %pset = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %34, i32 0, i32 13, !dbg !8176
  %35 = load i32, i32* %j, align 4, !dbg !8177
  %idxprom13 = sext i32 %35 to i64, !dbg !8175
  %arrayidx14 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset, i64 0, i64 %idxprom13, !dbg !8175
  %param = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %arrayidx14, i32 0, i32 2, !dbg !8178
  call void @edma_write_slot(%struct.edma_cc* %30, i32 %33, %struct.edmacc_param* %param) #11, !dbg !8179
  %36 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8180
  %pset15 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %36, i32 0, i32 13, !dbg !8181
  %37 = load i32, i32* %j, align 4, !dbg !8182
  %idxprom16 = sext i32 %37 to i64, !dbg !8180
  %arrayidx17 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset15, i64 0, i64 %idxprom16, !dbg !8180
  %len = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %arrayidx17, i32 0, i32 0, !dbg !8183
  %38 = load i32, i32* %len, align 8, !dbg !8183
  %39 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8184
  %sg_len18 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %39, i32 0, i32 10, !dbg !8185
  %40 = load i32, i32* %sg_len18, align 8, !dbg !8186
  %add19 = add i32 %40, %38, !dbg !8186
  store i32 %add19, i32* %sg_len18, align 8, !dbg !8186
  %41 = load i32, i32* %i, align 4, !dbg !8187
  %42 = load i32, i32* %nslots, align 4, !dbg !8189
  %sub20 = sub i32 %42, 1, !dbg !8190
  %cmp21 = icmp ne i32 %41, %sub20, !dbg !8191
  br i1 %cmp21, label %if.then22, label %if.end30, !dbg !8192

if.then22:                                        ; preds = %for.body
  %43 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8193
  %44 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8194
  %slot23 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %44, i32 0, i32 8, !dbg !8195
  %45 = load i32, i32* %i, align 4, !dbg !8196
  %idxprom24 = sext i32 %45 to i64, !dbg !8194
  %arrayidx25 = getelementptr [20 x i32], [20 x i32]* %slot23, i64 0, i64 %idxprom24, !dbg !8194
  %46 = load i32, i32* %arrayidx25, align 4, !dbg !8194
  %47 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8197
  %slot26 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %47, i32 0, i32 8, !dbg !8198
  %48 = load i32, i32* %i, align 4, !dbg !8199
  %add27 = add i32 %48, 1, !dbg !8200
  %idxprom28 = sext i32 %add27 to i64, !dbg !8197
  %arrayidx29 = getelementptr [20 x i32], [20 x i32]* %slot26, i64 0, i64 %idxprom28, !dbg !8197
  %49 = load i32, i32* %arrayidx29, align 4, !dbg !8197
  call void @edma_link(%struct.edma_cc* %43, i32 %46, i32 %49) #11, !dbg !8201
  br label %if.end30, !dbg !8201

if.end30:                                         ; preds = %if.then22, %for.body
  br label %for.inc, !dbg !8202

for.inc:                                          ; preds = %if.end30
  %50 = load i32, i32* %i, align 4, !dbg !8203
  %inc = add i32 %50, 1, !dbg !8203
  store i32 %inc, i32* %i, align 4, !dbg !8203
  br label %for.cond, !dbg !8204, !llvm.loop !8205

for.end:                                          ; preds = %for.cond
  %51 = load i32, i32* %nslots, align 4, !dbg !8207
  %52 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8208
  %processed31 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %52, i32 0, i32 8, !dbg !8209
  %53 = load i32, i32* %processed31, align 8, !dbg !8210
  %add32 = add i32 %53, %51, !dbg !8210
  store i32 %add32, i32* %processed31, align 8, !dbg !8210
  %54 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8211
  %processed33 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %54, i32 0, i32 8, !dbg !8213
  %55 = load i32, i32* %processed33, align 8, !dbg !8213
  %56 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8214
  %pset_nr34 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %56, i32 0, i32 6, !dbg !8215
  %57 = load i32, i32* %pset_nr34, align 8, !dbg !8215
  %cmp35 = icmp eq i32 %55, %57, !dbg !8216
  br i1 %cmp35, label %if.then36, label %if.end51, !dbg !8217

if.then36:                                        ; preds = %for.end
  %58 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8218
  %cyclic = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %58, i32 0, i32 3, !dbg !8221
  %59 = load i32, i32* %cyclic, align 4, !dbg !8221
  %tobool37 = icmp ne i32 %59, 0, !dbg !8218
  br i1 %tobool37, label %if.then38, label %if.else, !dbg !8222

if.then38:                                        ; preds = %if.then36
  %60 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8223
  %61 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8224
  %slot39 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %61, i32 0, i32 8, !dbg !8225
  %62 = load i32, i32* %nslots, align 4, !dbg !8226
  %sub40 = sub i32 %62, 1, !dbg !8227
  %idxprom41 = sext i32 %sub40 to i64, !dbg !8224
  %arrayidx42 = getelementptr [20 x i32], [20 x i32]* %slot39, i64 0, i64 %idxprom41, !dbg !8224
  %63 = load i32, i32* %arrayidx42, align 4, !dbg !8224
  %64 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8228
  %slot43 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %64, i32 0, i32 8, !dbg !8229
  %arrayidx44 = getelementptr [20 x i32], [20 x i32]* %slot43, i64 0, i64 1, !dbg !8228
  %65 = load i32, i32* %arrayidx44, align 4, !dbg !8228
  call void @edma_link(%struct.edma_cc* %60, i32 %63, i32 %65) #11, !dbg !8230
  br label %if.end50, !dbg !8230

if.else:                                          ; preds = %if.then36
  %66 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8231
  %67 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8232
  %slot45 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %67, i32 0, i32 8, !dbg !8233
  %68 = load i32, i32* %nslots, align 4, !dbg !8234
  %sub46 = sub i32 %68, 1, !dbg !8235
  %idxprom47 = sext i32 %sub46 to i64, !dbg !8232
  %arrayidx48 = getelementptr [20 x i32], [20 x i32]* %slot45, i64 0, i64 %idxprom47, !dbg !8232
  %69 = load i32, i32* %arrayidx48, align 4, !dbg !8232
  %70 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8236
  %ecc49 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %70, i32 0, i32 3, !dbg !8237
  %71 = load %struct.edma_cc*, %struct.edma_cc** %ecc49, align 8, !dbg !8237
  %dummy_slot = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %71, i32 0, i32 20, !dbg !8238
  %72 = load i32, i32* %dummy_slot, align 8, !dbg !8238
  call void @edma_link(%struct.edma_cc* %66, i32 %69, i32 %72) #11, !dbg !8239
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then38
  br label %if.end51, !dbg !8240

if.end51:                                         ; preds = %if.end50, %for.end
  %73 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8241
  %missed = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %73, i32 0, i32 9, !dbg !8243
  %74 = load i32, i32* %missed, align 8, !dbg !8243
  %tobool52 = icmp ne i32 %74, 0, !dbg !8241
  br i1 %tobool52, label %if.then53, label %if.else55, !dbg !8244

if.then53:                                        ; preds = %if.end51
  %75 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8245
  call void @edma_clean_channel(%struct.edma_chan* %75) #11, !dbg !8247
  %76 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8248
  call void @edma_stop(%struct.edma_chan* %76) #11, !dbg !8249
  %77 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8250
  call void @edma_start(%struct.edma_chan* %77) #11, !dbg !8251
  %78 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8252
  call void @edma_trigger_channel(%struct.edma_chan* %78) #11, !dbg !8253
  %79 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8254
  %missed54 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %79, i32 0, i32 9, !dbg !8255
  store i32 0, i32* %missed54, align 8, !dbg !8256
  br label %if.end61, !dbg !8257

if.else55:                                        ; preds = %if.end51
  %80 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8258
  %processed56 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %80, i32 0, i32 8, !dbg !8260
  %81 = load i32, i32* %processed56, align 8, !dbg !8260
  %cmp57 = icmp sle i32 %81, 20, !dbg !8261
  br i1 %cmp57, label %if.then58, label %if.else59, !dbg !8262

if.then58:                                        ; preds = %if.else55
  %82 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8263
  call void @edma_start(%struct.edma_chan* %82) #11, !dbg !8265
  br label %if.end60, !dbg !8266

if.else59:                                        ; preds = %if.else55
  %83 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8267
  call void @edma_resume(%struct.edma_chan* %83) #11, !dbg !8269
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %if.then58
  br label %if.end61

if.end61:                                         ; preds = %if.then6, %if.end60, %if.then53
  ret void, !dbg !8270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.virt_dma_chan* @to_virt_chan(%struct.dma_chan* %chan) #0 !dbg !8271 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.virt_dma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !8274, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8276, metadata !DIExpression()), !dbg !8278
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !8278
  %1 = bitcast %struct.dma_chan* %0 to i8*, !dbg !8278
  store i8* %1, i8** %__mptr, align 8, !dbg !8278
  br label %do.body, !dbg !8278

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8279

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8278
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8278
  %3 = bitcast i8* %add.ptr to %struct.virt_dma_chan*, !dbg !8278
  store %struct.virt_dma_chan* %3, %struct.virt_dma_chan** %tmp, align 8, !dbg !8279
  %4 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %tmp, align 8, !dbg !8278
  ret %struct.virt_dma_chan* %4, !dbg !8281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #0 !dbg !8282 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !8285
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !8287
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #11, !dbg !8288
  br i1 %call, label %if.end, label %if.then, !dbg !8289

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !8290
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #11, !dbg !8291
  br label %if.end, !dbg !8291

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8292
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !8293 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8297, metadata !DIExpression()), !dbg !8299
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8301, metadata !DIExpression()), !dbg !8302
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !8303, metadata !DIExpression()), !dbg !8305
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8306, metadata !DIExpression()), !dbg !8308
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8310, metadata !DIExpression()), !dbg !8311
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8312, metadata !DIExpression()), !dbg !8313
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8314, metadata !DIExpression()), !dbg !8315
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8316
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8317
  %div = sdiv i64 %1, 64, !dbg !8317
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8318
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8316
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8319
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8320
  %conv.i = trunc i64 %4 to i32, !dbg !8320
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !8321
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8322
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8322
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #13, !dbg !8322
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8323
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8324
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !8305
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !8305
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #10, !dbg !8305, !srcloc !8325
  store i8 %11, i8* %c.i, align 1, !dbg !8305
  %12 = load i8, i8* %c.i, align 1, !dbg !8305
  %tobool.i = trunc i8 %12 to i1, !dbg !8305
  %frombool.i = zext i1 %tobool.i to i8, !dbg !8305
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !8305
  %13 = load i8, i8* %tmp.i, align 1, !dbg !8305
  %tobool1.i = trunc i8 %13 to i1, !dbg !8305
  ret i1 %tobool1.i, !dbg !8326
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_cookie_complete(%struct.dma_async_tx_descriptor* %tx) #0 !dbg !8327 {
entry:
  %tx.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  store %struct.dma_async_tx_descriptor* %tx, %struct.dma_async_tx_descriptor** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %tx.addr, metadata !8331, metadata !DIExpression()), !dbg !8332
  br label %do.body, !dbg !8333

do.body:                                          ; preds = %entry
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !8334
  %cookie = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %0, i32 0, i32 0, !dbg !8334
  %1 = load i32, i32* %cookie, align 8, !dbg !8334
  %cmp = icmp slt i32 %1, 1, !dbg !8334
  %lnot = xor i1 %cmp, true, !dbg !8334
  %lnot1 = xor i1 %lnot, true, !dbg !8334
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8334
  %conv = sext i32 %lnot.ext to i64, !dbg !8334
  %tobool = icmp ne i64 %conv, 0, !dbg !8334
  br i1 %tobool, label %if.then, label %if.end, !dbg !8337

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !8334

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !8338

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !8340

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !8338

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i64 0, i64 0), i32 54, i32 0, i64 12) #10, !dbg !8342, !srcloc !8344
  br label %do.end5, !dbg !8342

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !8338

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 239) #10, !dbg !8345, !srcloc !8348
  unreachable, !dbg !8349

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !8338

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !8338

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !8337

do.end9:                                          ; preds = %if.end
  %2 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !8350
  %cookie10 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %2, i32 0, i32 0, !dbg !8351
  %3 = load i32, i32* %cookie10, align 8, !dbg !8351
  %4 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !8352
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %4, i32 0, i32 3, !dbg !8353
  %5 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !8353
  %completed_cookie = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %5, i32 0, i32 3, !dbg !8354
  store i32 %3, i32* %completed_cookie, align 4, !dbg !8355
  %6 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !8356
  %cookie11 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %6, i32 0, i32 0, !dbg !8357
  store i32 0, i32* %cookie11, align 8, !dbg !8358
  ret void, !dbg !8359
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !8360 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8364, metadata !DIExpression()), !dbg !8365
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8366, metadata !DIExpression()), !dbg !8367
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8368
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8369
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8370
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8370
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8371
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !8372
  ret void, !dbg !8373
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8374 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8377, metadata !DIExpression()), !dbg !8378
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8379, metadata !DIExpression()), !dbg !8380
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8381, metadata !DIExpression()), !dbg !8382
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8383
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8385
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8386
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !8387
  br i1 %call, label %if.end, label %if.then, !dbg !8388

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !8389

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8390
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8391
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !8392
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !8393
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8394
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8395
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !8396
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !8397
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8398
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8399
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !8400
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !8401
  br label %do.body, !dbg !8402

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !8403

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !8405

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !8403

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8407
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8407
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !8407
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !8407
  br label %do.end7, !dbg !8407

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !8403

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !8409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8410 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8413, metadata !DIExpression()), !dbg !8414
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8415, metadata !DIExpression()), !dbg !8416
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8417, metadata !DIExpression()), !dbg !8418
  ret i1 true, !dbg !8419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.virt_dma_desc* @vchan_next_desc(%struct.virt_dma_chan* %vc) #0 !dbg !8420 {
entry:
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %head__ = alloca %struct.list_head*, align 8
  %pos__ = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp1 = alloca %struct.virt_dma_desc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp4 = alloca %struct.virt_dma_desc*, align 8
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !8423, metadata !DIExpression()), !dbg !8424
  call void @llvm.dbg.declare(metadata %struct.list_head** %head__, metadata !8425, metadata !DIExpression()), !dbg !8427
  %0 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !8427
  %desc_issued = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %0, i32 0, i32 6, !dbg !8427
  store %struct.list_head* %desc_issued, %struct.list_head** %head__, align 8, !dbg !8427
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos__, metadata !8428, metadata !DIExpression()), !dbg !8427
  br label %do.body, !dbg !8429

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8431

do.end:                                           ; preds = %do.body
  %1 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !8429
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8429
  %2 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8429
  store %struct.list_head* %2, %struct.list_head** %tmp, align 8, !dbg !8431
  %3 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !8429
  store %struct.list_head* %3, %struct.list_head** %pos__, align 8, !dbg !8427
  %4 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !8427
  %5 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !8427
  %cmp = icmp ne %struct.list_head* %4, %5, !dbg !8427
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8427

cond.true:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8433, metadata !DIExpression()), !dbg !8435
  %6 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !8435
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !8435
  store i8* %7, i8** %__mptr, align 8, !dbg !8435
  br label %do.body2, !dbg !8435

do.body2:                                         ; preds = %cond.true
  br label %do.end3, !dbg !8436

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr, align 8, !dbg !8435
  %add.ptr = getelementptr i8, i8* %8, i64 -96, !dbg !8435
  %9 = bitcast i8* %add.ptr to %struct.virt_dma_desc*, !dbg !8435
  store %struct.virt_dma_desc* %9, %struct.virt_dma_desc** %tmp4, align 8, !dbg !8436
  %10 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %tmp4, align 8, !dbg !8435
  br label %cond.end, !dbg !8427

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !8427

cond.end:                                         ; preds = %cond.false, %do.end3
  %cond = phi %struct.virt_dma_desc* [ %10, %do.end3 ], [ null, %cond.false ], !dbg !8427
  store %struct.virt_dma_desc* %cond, %struct.virt_dma_desc** %tmp1, align 8, !dbg !8427
  %11 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %tmp1, align 8, !dbg !8427
  ret %struct.virt_dma_desc* %11, !dbg !8438
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !8439 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8442, metadata !DIExpression()), !dbg !8443
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8444
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !8445
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8446
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8447
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !8448
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8449
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !8450
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !8451
  ret void, !dbg !8452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.edma_desc* @to_edma_desc(%struct.dma_async_tx_descriptor* %tx) #0 !dbg !8453 {
entry:
  %tx.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.edma_desc*, align 8
  store %struct.dma_async_tx_descriptor* %tx, %struct.dma_async_tx_descriptor** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %tx.addr, metadata !8456, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8458, metadata !DIExpression()), !dbg !8460
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !8460
  %1 = bitcast %struct.dma_async_tx_descriptor* %0 to i8*, !dbg !8460
  store i8* %1, i8** %__mptr, align 8, !dbg !8460
  br label %do.body, !dbg !8460

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8461

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8460
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8460
  %3 = bitcast i8* %add.ptr to %struct.edma_desc*, !dbg !8460
  store %struct.edma_desc* %3, %struct.edma_desc** %tmp, align 8, !dbg !8461
  %4 = load %struct.edma_desc*, %struct.edma_desc** %tmp, align 8, !dbg !8460
  ret %struct.edma_desc* %4, !dbg !8463
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_link(%struct.edma_cc* %ecc, i32 %from, i32 %to) #0 !dbg !8464 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %from.addr = alloca i32, align 4
  %to.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !8467, metadata !DIExpression()), !dbg !8468
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !8469, metadata !DIExpression()), !dbg !8470
  store i32 %to, i32* %to.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %to.addr, metadata !8471, metadata !DIExpression()), !dbg !8472
  %0 = load i32, i32* %from.addr, align 4, !dbg !8473
  %shr = lshr i32 %0, 16, !dbg !8473
  %1 = load i32, i32* %to.addr, align 4, !dbg !8473
  %shr1 = lshr i32 %1, 16, !dbg !8473
  %cmp = icmp ne i32 %shr, %shr1, !dbg !8473
  %lnot = xor i1 %cmp, true, !dbg !8473
  %lnot2 = xor i1 %lnot, true, !dbg !8473
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8473
  %conv = sext i32 %lnot.ext to i64, !dbg !8473
  %tobool = icmp ne i64 %conv, 0, !dbg !8473
  br i1 %tobool, label %if.then, label %if.end, !dbg !8475

if.then:                                          ; preds = %entry
  %2 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8476
  %dev = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %2, i32 0, i32 0, !dbg !8476
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8476
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i64 0, i64 0)) #12, !dbg !8476
  br label %if.end, !dbg !8476

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %from.addr, align 4, !dbg !8477
  %and = and i32 %4, 65535, !dbg !8477
  store i32 %and, i32* %from.addr, align 4, !dbg !8478
  %5 = load i32, i32* %to.addr, align 4, !dbg !8479
  %and3 = and i32 %5, 65535, !dbg !8479
  store i32 %and3, i32* %to.addr, align 4, !dbg !8480
  %6 = load i32, i32* %from.addr, align 4, !dbg !8481
  %7 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8483
  %num_slots = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %7, i32 0, i32 8, !dbg !8484
  %8 = load i32, i32* %num_slots, align 4, !dbg !8484
  %cmp4 = icmp uge i32 %6, %8, !dbg !8485
  br i1 %cmp4, label %if.then9, label %lor.lhs.false, !dbg !8486

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i32, i32* %to.addr, align 4, !dbg !8487
  %10 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8488
  %num_slots6 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %10, i32 0, i32 8, !dbg !8489
  %11 = load i32, i32* %num_slots6, align 4, !dbg !8489
  %cmp7 = icmp uge i32 %9, %11, !dbg !8490
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !8491

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  br label %return, !dbg !8492

if.end10:                                         ; preds = %lor.lhs.false
  %12 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8493
  %13 = load i32, i32* %from.addr, align 4, !dbg !8494
  %14 = load i32, i32* %to.addr, align 4, !dbg !8495
  %shl = shl i32 %14, 5, !dbg !8495
  %add = add i32 16384, %shl, !dbg !8495
  call void @edma_param_modify(%struct.edma_cc* %12, i32 20, i32 %13, i32 -65536, i32 %add) #11, !dbg !8496
  br label %return, !dbg !8497

return:                                           ; preds = %if.end10, %if.then9
  ret void, !dbg !8497
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_clean_channel(%struct.edma_chan* %echan) #0 !dbg !8498 {
entry:
  %echan.addr = alloca %struct.edma_chan*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %channel = alloca i32, align 4
  %idx = alloca i32, align 4
  %ch_bit = alloca i32, align 4
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !8499, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !8501, metadata !DIExpression()), !dbg !8502
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8503
  %ecc1 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 3, !dbg !8504
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc1, align 8, !dbg !8504
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !8502
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !8505, metadata !DIExpression()), !dbg !8506
  %2 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8507
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %2, i32 0, i32 5, !dbg !8507
  %3 = load i32, i32* %ch_num, align 8, !dbg !8507
  %and = and i32 %3, 65535, !dbg !8507
  store i32 %and, i32* %channel, align 4, !dbg !8506
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !8508, metadata !DIExpression()), !dbg !8509
  %4 = load i32, i32* %channel, align 4, !dbg !8510
  %shr = ashr i32 %4, 5, !dbg !8510
  store i32 %shr, i32* %idx, align 4, !dbg !8509
  call void @llvm.dbg.declare(metadata i32* %ch_bit, metadata !8511, metadata !DIExpression()), !dbg !8512
  %5 = load i32, i32* %channel, align 4, !dbg !8513
  %and2 = and i32 %5, 31, !dbg !8513
  %sh_prom = zext i32 %and2 to i64, !dbg !8513
  %shl = shl i64 1, %sh_prom, !dbg !8513
  %conv = trunc i64 %shl to i32, !dbg !8513
  store i32 %conv, i32* %ch_bit, align 4, !dbg !8512
  %6 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8514
  %7 = load i32, i32* %idx, align 4, !dbg !8515
  %8 = load i32, i32* %ch_bit, align 4, !dbg !8516
  call void @edma_shadow0_write_array(%struct.edma_cc* %6, i32 8, i32 %7, i32 %8) #11, !dbg !8517
  %9 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8518
  %10 = load i32, i32* %idx, align 4, !dbg !8519
  %11 = load i32, i32* %ch_bit, align 4, !dbg !8520
  call void @edma_write_array(%struct.edma_cc* %9, i32 776, i32 %10, i32 %11) #11, !dbg !8521
  %12 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8522
  %13 = load i32, i32* %idx, align 4, !dbg !8523
  %14 = load i32, i32* %ch_bit, align 4, !dbg !8524
  call void @edma_shadow0_write_array(%struct.edma_cc* %12, i32 64, i32 %13, i32 %14) #11, !dbg !8525
  %15 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8526
  call void @edma_write(%struct.edma_cc* %15, i32 796, i32 65539) #11, !dbg !8527
  ret void, !dbg !8528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_start(%struct.edma_chan* %echan) #0 !dbg !8529 {
entry:
  %echan.addr = alloca %struct.edma_chan*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %channel = alloca i32, align 4
  %idx = alloca i32, align 4
  %ch_bit = alloca i32, align 4
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !8530, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !8532, metadata !DIExpression()), !dbg !8533
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8534
  %ecc1 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 3, !dbg !8535
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc1, align 8, !dbg !8535
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !8533
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !8536, metadata !DIExpression()), !dbg !8537
  %2 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8538
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %2, i32 0, i32 5, !dbg !8538
  %3 = load i32, i32* %ch_num, align 8, !dbg !8538
  %and = and i32 %3, 65535, !dbg !8538
  store i32 %and, i32* %channel, align 4, !dbg !8537
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !8539, metadata !DIExpression()), !dbg !8540
  %4 = load i32, i32* %channel, align 4, !dbg !8541
  %shr = ashr i32 %4, 5, !dbg !8541
  store i32 %shr, i32* %idx, align 4, !dbg !8540
  call void @llvm.dbg.declare(metadata i32* %ch_bit, metadata !8542, metadata !DIExpression()), !dbg !8543
  %5 = load i32, i32* %channel, align 4, !dbg !8544
  %and2 = and i32 %5, 31, !dbg !8544
  %sh_prom = zext i32 %and2 to i64, !dbg !8544
  %shl = shl i64 1, %sh_prom, !dbg !8544
  %conv = trunc i64 %shl to i32, !dbg !8544
  store i32 %conv, i32* %ch_bit, align 4, !dbg !8543
  %6 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8545
  %hw_triggered = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %6, i32 0, i32 7, !dbg !8547
  %7 = load i8, i8* %hw_triggered, align 1, !dbg !8547
  %tobool = trunc i8 %7 to i1, !dbg !8547
  br i1 %tobool, label %if.else, label %if.then, !dbg !8548

if.then:                                          ; preds = %entry
  %8 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8549
  %9 = load i32, i32* %idx, align 4, !dbg !8551
  %10 = load i32, i32* %ch_bit, align 4, !dbg !8552
  call void @edma_shadow0_write_array(%struct.edma_cc* %8, i32 16, i32 %9, i32 %10) #11, !dbg !8553
  br label %if.end, !dbg !8554

if.else:                                          ; preds = %entry
  %11 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8555
  %12 = load i32, i32* %idx, align 4, !dbg !8557
  %13 = load i32, i32* %ch_bit, align 4, !dbg !8558
  call void @edma_write_array(%struct.edma_cc* %11, i32 4104, i32 %12, i32 %13) #11, !dbg !8559
  %14 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8560
  %15 = load i32, i32* %idx, align 4, !dbg !8561
  %16 = load i32, i32* %ch_bit, align 4, !dbg !8562
  call void @edma_write_array(%struct.edma_cc* %14, i32 776, i32 %15, i32 %16) #11, !dbg !8563
  %17 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8564
  %18 = load i32, i32* %idx, align 4, !dbg !8565
  %19 = load i32, i32* %ch_bit, align 4, !dbg !8566
  call void @edma_shadow0_write_array(%struct.edma_cc* %17, i32 64, i32 %18, i32 %19) #11, !dbg !8567
  %20 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8568
  %21 = load i32, i32* %idx, align 4, !dbg !8569
  %22 = load i32, i32* %ch_bit, align 4, !dbg !8570
  call void @edma_shadow0_write_array(%struct.edma_cc* %20, i32 48, i32 %21, i32 %22) #11, !dbg !8571
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8572
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_trigger_channel(%struct.edma_chan* %echan) #0 !dbg !8573 {
entry:
  %echan.addr = alloca %struct.edma_chan*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %channel = alloca i32, align 4
  %idx = alloca i32, align 4
  %ch_bit = alloca i32, align 4
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !8574, metadata !DIExpression()), !dbg !8575
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !8576, metadata !DIExpression()), !dbg !8577
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8578
  %ecc1 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 3, !dbg !8579
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc1, align 8, !dbg !8579
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !8577
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !8580, metadata !DIExpression()), !dbg !8581
  %2 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8582
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %2, i32 0, i32 5, !dbg !8582
  %3 = load i32, i32* %ch_num, align 8, !dbg !8582
  %and = and i32 %3, 65535, !dbg !8582
  store i32 %and, i32* %channel, align 4, !dbg !8581
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !8583, metadata !DIExpression()), !dbg !8584
  %4 = load i32, i32* %channel, align 4, !dbg !8585
  %shr = ashr i32 %4, 5, !dbg !8585
  store i32 %shr, i32* %idx, align 4, !dbg !8584
  call void @llvm.dbg.declare(metadata i32* %ch_bit, metadata !8586, metadata !DIExpression()), !dbg !8587
  %5 = load i32, i32* %channel, align 4, !dbg !8588
  %and2 = and i32 %5, 31, !dbg !8588
  %sh_prom = zext i32 %and2 to i64, !dbg !8588
  %shl = shl i64 1, %sh_prom, !dbg !8588
  %conv = trunc i64 %shl to i32, !dbg !8588
  store i32 %conv, i32* %ch_bit, align 4, !dbg !8587
  %6 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8589
  %7 = load i32, i32* %idx, align 4, !dbg !8590
  %8 = load i32, i32* %ch_bit, align 4, !dbg !8591
  call void @edma_shadow0_write_array(%struct.edma_cc* %6, i32 16, i32 %7, i32 %8) #11, !dbg !8592
  ret void, !dbg !8593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_resume(%struct.edma_chan* %echan) #0 !dbg !8594 {
entry:
  %echan.addr = alloca %struct.edma_chan*, align 8
  %channel = alloca i32, align 4
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !8595, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !8597, metadata !DIExpression()), !dbg !8598
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8599
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 5, !dbg !8599
  %1 = load i32, i32* %ch_num, align 8, !dbg !8599
  %and = and i32 %1, 65535, !dbg !8599
  store i32 %and, i32* %channel, align 4, !dbg !8598
  %2 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8600
  %ecc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %2, i32 0, i32 3, !dbg !8601
  %3 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8601
  %4 = load i32, i32* %channel, align 4, !dbg !8602
  %shr = ashr i32 %4, 5, !dbg !8602
  %5 = load i32, i32* %channel, align 4, !dbg !8603
  %and1 = and i32 %5, 31, !dbg !8603
  %sh_prom = zext i32 %and1 to i64, !dbg !8603
  %shl = shl i64 1, %sh_prom, !dbg !8603
  %conv = trunc i64 %shl to i32, !dbg !8603
  call void @edma_shadow0_write_array(%struct.edma_cc* %3, i32 48, i32 %shr, i32 %conv) #11, !dbg !8604
  ret void, !dbg !8605
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !8606 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8607, metadata !DIExpression()), !dbg !8608
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8609
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !8611
  br i1 %call, label %if.end, label %if.then, !dbg !8612

if.then:                                          ; preds = %entry
  br label %return, !dbg !8613

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8614
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8615
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8615
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8616
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8617
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8617
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !8618
  br label %return, !dbg !8619

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !8620 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8623, metadata !DIExpression()), !dbg !8624
  ret i1 true, !dbg !8625
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8626 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8627, metadata !DIExpression()), !dbg !8628
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8629, metadata !DIExpression()), !dbg !8630
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8631
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8632
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8633
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !8634
  br label %do.body, !dbg !8635

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !8636

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !8638

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !8636

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8640
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8640
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8640
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !8640
  br label %do.end5, !dbg !8640

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !8636

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !8642
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_param_modify(%struct.edma_cc* %ecc, i32 %offset, i32 %param_no, i32 %and, i32 %or) #0 !dbg !8643 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  %param_no.addr = alloca i32, align 4
  %and.addr = alloca i32, align 4
  %or.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !8646, metadata !DIExpression()), !dbg !8647
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8648, metadata !DIExpression()), !dbg !8649
  store i32 %param_no, i32* %param_no.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %param_no.addr, metadata !8650, metadata !DIExpression()), !dbg !8651
  store i32 %and, i32* %and.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %and.addr, metadata !8652, metadata !DIExpression()), !dbg !8653
  store i32 %or, i32* %or.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %or.addr, metadata !8654, metadata !DIExpression()), !dbg !8655
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8656
  %1 = load i32, i32* %offset.addr, align 4, !dbg !8657
  %add = add i32 16384, %1, !dbg !8658
  %2 = load i32, i32* %param_no.addr, align 4, !dbg !8659
  %shl = shl i32 %2, 5, !dbg !8660
  %add1 = add i32 %add, %shl, !dbg !8661
  %3 = load i32, i32* %and.addr, align 4, !dbg !8662
  %4 = load i32, i32* %or.addr, align 4, !dbg !8663
  call void @edma_modify(%struct.edma_cc* %0, i32 %add1, i32 %3, i32 %4) #11, !dbg !8664
  ret void, !dbg !8665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_modify(%struct.edma_cc* %ecc, i32 %offset, i32 %and, i32 %or) #0 !dbg !8666 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  %and.addr = alloca i32, align 4
  %or.addr = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !8669, metadata !DIExpression()), !dbg !8670
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8671, metadata !DIExpression()), !dbg !8672
  store i32 %and, i32* %and.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %and.addr, metadata !8673, metadata !DIExpression()), !dbg !8674
  store i32 %or, i32* %or.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %or.addr, metadata !8675, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8677, metadata !DIExpression()), !dbg !8678
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8679
  %1 = load i32, i32* %offset.addr, align 4, !dbg !8680
  %call = call i32 @edma_read(%struct.edma_cc* %0, i32 %1) #11, !dbg !8681
  store i32 %call, i32* %val, align 4, !dbg !8678
  %2 = load i32, i32* %and.addr, align 4, !dbg !8682
  %3 = load i32, i32* %val, align 4, !dbg !8683
  %and1 = and i32 %3, %2, !dbg !8683
  store i32 %and1, i32* %val, align 4, !dbg !8683
  %4 = load i32, i32* %or.addr, align 4, !dbg !8684
  %5 = load i32, i32* %val, align 4, !dbg !8685
  %or2 = or i32 %5, %4, !dbg !8685
  store i32 %or2, i32* %val, align 4, !dbg !8685
  %6 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8686
  %7 = load i32, i32* %offset.addr, align 4, !dbg !8687
  %8 = load i32, i32* %val, align 4, !dbg !8688
  call void @edma_write(%struct.edma_cc* %6, i32 %7, i32 %8) #11, !dbg !8689
  ret void, !dbg !8690
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @edma_error_pending(%struct.edma_cc* %ecc) #0 !dbg !8691 {
entry:
  %retval = alloca i1, align 1
  %ecc.addr = alloca %struct.edma_cc*, align 8
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !8694, metadata !DIExpression()), !dbg !8695
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8696
  %call = call i32 @edma_read_array(%struct.edma_cc* %0, i32 768, i32 0) #11, !dbg !8698
  %tobool = icmp ne i32 %call, 0, !dbg !8698
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8699

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8700
  %call1 = call i32 @edma_read_array(%struct.edma_cc* %1, i32 768, i32 1) #11, !dbg !8701
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8701
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !8702

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %2 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8703
  %call4 = call i32 @edma_read(%struct.edma_cc* %2, i32 784) #11, !dbg !8704
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8704
  br i1 %tobool5, label %if.then, label %lor.lhs.false6, !dbg !8705

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %3 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8706
  %call7 = call i32 @edma_read(%struct.edma_cc* %3, i32 792) #11, !dbg !8707
  %tobool8 = icmp ne i32 %call7, 0, !dbg !8707
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8708

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry
  store i1 true, i1* %retval, align 1, !dbg !8709
  br label %return, !dbg !8709

if.end:                                           ; preds = %lor.lhs.false6
  store i1 false, i1* %retval, align 1, !dbg !8710
  br label %return, !dbg !8710

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !8711
  ret i1 %4, !dbg !8711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_read_array(%struct.edma_cc* %ecc, i32 %offset, i32 %i) #0 !dbg !8712 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !8713, metadata !DIExpression()), !dbg !8714
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8715, metadata !DIExpression()), !dbg !8716
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !8717, metadata !DIExpression()), !dbg !8718
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8719
  %1 = load i32, i32* %offset.addr, align 4, !dbg !8720
  %2 = load i32, i32* %i.addr, align 4, !dbg !8721
  %shl = shl i32 %2, 2, !dbg !8722
  %add = add i32 %1, %shl, !dbg !8723
  %call = call i32 @edma_read(%struct.edma_cc* %0, i32 %add) #11, !dbg !8724
  ret i32 %call, !dbg !8725
}

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_error_handler(%struct.edma_chan* %echan) #0 !dbg !8726 {
entry:
  %lock.addr.i10 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i10, metadata !7861, metadata !DIExpression()), !dbg !8727
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7874, metadata !DIExpression()), !dbg !8729
  %echan.addr = alloca %struct.edma_chan*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %dev = alloca %struct.device*, align 8
  %p = alloca %struct.edmacc_param, align 1
  %err = alloca i32, align 4
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !8731, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !8733, metadata !DIExpression()), !dbg !8734
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8735
  %ecc1 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 3, !dbg !8736
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc1, align 8, !dbg !8736
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !8734
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !8737, metadata !DIExpression()), !dbg !8738
  %2 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8739
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %2, i32 0, i32 0, !dbg !8740
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan, i32 0, i32 0, !dbg !8741
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan, i32 0, i32 0, !dbg !8742
  %3 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !8742
  %dev2 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %3, i32 0, i32 15, !dbg !8743
  %4 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !8743
  store %struct.device* %4, %struct.device** %dev, align 8, !dbg !8738
  call void @llvm.dbg.declare(metadata %struct.edmacc_param* %p, metadata !8744, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8746, metadata !DIExpression()), !dbg !8747
  %5 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8748
  %edesc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %5, i32 0, i32 2, !dbg !8750
  %6 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8750
  %tobool = icmp ne %struct.edma_desc* %6, null, !dbg !8748
  br i1 %tobool, label %if.end, label %if.then, !dbg !8751

if.then:                                          ; preds = %entry
  br label %return, !dbg !8752

if.end:                                           ; preds = %entry
  %7 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8753
  %vchan3 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %7, i32 0, i32 0, !dbg !8754
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan3, i32 0, i32 3, !dbg !8755
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8756, !srcloc !7894
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8757
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !8757
  %rlock.i = bitcast %union.anon.3* %9 to %struct.raw_spinlock*, !dbg !8757
  %10 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8758
  %11 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8759
  %slot = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %11, i32 0, i32 8, !dbg !8760
  %arrayidx = getelementptr [20 x i32], [20 x i32]* %slot, i64 0, i64 0, !dbg !8759
  %12 = load i32, i32* %arrayidx, align 8, !dbg !8759
  %call = call i32 @edma_read_slot(%struct.edma_cc* %10, i32 %12, %struct.edmacc_param* %p) #11, !dbg !8761
  store i32 %call, i32* %err, align 4, !dbg !8762
  %13 = load i32, i32* %err, align 4, !dbg !8763
  %tobool4 = icmp ne i32 %13, 0, !dbg !8763
  br i1 %tobool4, label %if.then6, label %lor.lhs.false, !dbg !8765

lor.lhs.false:                                    ; preds = %if.end
  %a_b_cnt = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %p, i32 0, i32 2, !dbg !8766
  %14 = load i32, i32* %a_b_cnt, align 1, !dbg !8766
  %cmp = icmp eq i32 %14, 0, !dbg !8767
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !8768

land.lhs.true:                                    ; preds = %lor.lhs.false
  %ccnt = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %p, i32 0, i32 7, !dbg !8769
  %15 = load i32, i32* %ccnt, align 1, !dbg !8769
  %cmp5 = icmp eq i32 %15, 0, !dbg !8770
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !8771

if.then6:                                         ; preds = %land.lhs.true, %if.end
  %16 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8772
  %missed = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %16, i32 0, i32 9, !dbg !8774
  store i32 1, i32* %missed, align 8, !dbg !8775
  br label %if.end7, !dbg !8776

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %17 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8777
  call void @edma_clean_channel(%struct.edma_chan* %17) #11, !dbg !8779
  %18 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8780
  call void @edma_stop(%struct.edma_chan* %18) #11, !dbg !8781
  %19 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8782
  call void @edma_start(%struct.edma_chan* %19) #11, !dbg !8783
  %20 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8784
  call void @edma_trigger_channel(%struct.edma_chan* %20) #11, !dbg !8785
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  %21 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !8786
  %vchan8 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %21, i32 0, i32 0, !dbg !8787
  %lock9 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan8, i32 0, i32 3, !dbg !8788
  store %struct.spinlock* %lock9, %struct.spinlock** %lock.addr.i10, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8789, !srcloc !7913
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i10, align 8, !dbg !8790
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !8790
  %rlock.i11 = bitcast %union.anon.3* %23 to %struct.raw_spinlock*, !dbg !8790
  br label %return, !dbg !8791

return:                                           ; preds = %if.end7, %if.then
  ret void, !dbg !8791
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_read_slot(%struct.edma_cc* %ecc, i32 %slot, %struct.edmacc_param* %param) #0 !dbg !8792 {
entry:
  %retval = alloca i32, align 4
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %slot.addr = alloca i32, align 4
  %param.addr = alloca %struct.edmacc_param*, align 8
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !8796, metadata !DIExpression()), !dbg !8797
  store i32 %slot, i32* %slot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot.addr, metadata !8798, metadata !DIExpression()), !dbg !8799
  store %struct.edmacc_param* %param, %struct.edmacc_param** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edmacc_param** %param.addr, metadata !8800, metadata !DIExpression()), !dbg !8801
  %0 = load i32, i32* %slot.addr, align 4, !dbg !8802
  %and = and i32 %0, 65535, !dbg !8802
  store i32 %and, i32* %slot.addr, align 4, !dbg !8803
  %1 = load i32, i32* %slot.addr, align 4, !dbg !8804
  %2 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8806
  %num_slots = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %2, i32 0, i32 8, !dbg !8807
  %3 = load i32, i32* %num_slots, align 4, !dbg !8807
  %cmp = icmp uge i32 %1, %3, !dbg !8808
  br i1 %cmp, label %if.then, label %if.end, !dbg !8809

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8810
  br label %return, !dbg !8810

if.end:                                           ; preds = %entry
  %4 = load %struct.edmacc_param*, %struct.edmacc_param** %param.addr, align 8, !dbg !8811
  %5 = bitcast %struct.edmacc_param* %4 to i8*, !dbg !8811
  %6 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !8812
  %base = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %6, i32 0, i32 2, !dbg !8813
  %7 = load i8*, i8** %base, align 8, !dbg !8813
  %8 = load i32, i32* %slot.addr, align 4, !dbg !8814
  %shl = shl i32 %8, 5, !dbg !8814
  %add = add i32 16384, %shl, !dbg !8814
  %idx.ext = zext i32 %add to i64, !dbg !8815
  %add.ptr = getelementptr i8, i8* %7, i64 %idx.ext, !dbg !8815
  call void @memcpy_fromio(i8* %5, i8* %add.ptr, i64 32) #11, !dbg !8816
  store i32 0, i32* %retval, align 4, !dbg !8817
  br label %return, !dbg !8817

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !8818
  ret i32 %9, !dbg !8818
}

; Function Attrs: noredzone
declare dso_local void @memcpy_fromio(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i64 @find_next_zero_bit(i64*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dma_cap_zero(%struct.dma_cap_mask_t* %dstp) #0 !dbg !8819 {
entry:
  %dstp.addr = alloca %struct.dma_cap_mask_t*, align 8
  store %struct.dma_cap_mask_t* %dstp, %struct.dma_cap_mask_t** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %dstp.addr, metadata !8823, metadata !DIExpression()), !dbg !8824
  %0 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %dstp.addr, align 8, !dbg !8825
  %bits = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %0, i32 0, i32 0, !dbg !8826
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !8825
  call void @bitmap_zero(i64* %arraydecay, i32 16) #11, !dbg !8827
  ret void, !dbg !8828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dma_cap_set(i32 %tx_type, %struct.dma_cap_mask_t* %dstp) #0 !dbg !8829 {
entry:
  %tx_type.addr = alloca i32, align 4
  %dstp.addr = alloca %struct.dma_cap_mask_t*, align 8
  store i32 %tx_type, i32* %tx_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tx_type.addr, metadata !8832, metadata !DIExpression()), !dbg !8833
  store %struct.dma_cap_mask_t* %dstp, %struct.dma_cap_mask_t** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %dstp.addr, metadata !8834, metadata !DIExpression()), !dbg !8835
  %0 = load i32, i32* %tx_type.addr, align 4, !dbg !8836
  %conv = zext i32 %0 to i64, !dbg !8836
  %1 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %dstp.addr, align 8, !dbg !8837
  %bits = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %1, i32 0, i32 0, !dbg !8838
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !8837
  call void @set_bit(i64 %conv, i64* %arraydecay) #11, !dbg !8839
  ret void, !dbg !8840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @edma_prep_dma_memcpy(%struct.dma_chan* %chan, i64 %dest, i64 %src, i64 %len, i64 %tx_flags) #0 !dbg !8841 {
entry:
  %word.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %word.addr.i, metadata !6149, metadata !DIExpression()), !dbg !8842
  %retval = alloca %struct.dma_async_tx_descriptor*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  %dest.addr = alloca i64, align 8
  %src.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %tx_flags.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %nslots = alloca i32, align 4
  %edesc = alloca %struct.edma_desc*, align 8
  %dev = alloca %struct.device*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %width = alloca i32, align 4
  %pset_len = alloca i32, align 4
  %array_size = alloca i32, align 4
  %__x = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !8844, metadata !DIExpression()), !dbg !8845
  store i64 %dest, i64* %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dest.addr, metadata !8846, metadata !DIExpression()), !dbg !8847
  store i64 %src, i64* %src.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %src.addr, metadata !8848, metadata !DIExpression()), !dbg !8849
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !8850, metadata !DIExpression()), !dbg !8851
  store i64 %tx_flags, i64* %tx_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tx_flags.addr, metadata !8852, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8854, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.declare(metadata i32* %nslots, metadata !8856, metadata !DIExpression()), !dbg !8857
  call void @llvm.dbg.declare(metadata %struct.edma_desc** %edesc, metadata !8858, metadata !DIExpression()), !dbg !8859
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !8860, metadata !DIExpression()), !dbg !8861
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !8862
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !8863
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !8863
  %dev1 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 15, !dbg !8864
  %2 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !8864
  store %struct.device* %2, %struct.device** %dev, align 8, !dbg !8861
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !8865, metadata !DIExpression()), !dbg !8866
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !8867
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %3) #11, !dbg !8868
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !8866
  call void @llvm.dbg.declare(metadata i32* %width, metadata !8869, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.declare(metadata i32* %pset_len, metadata !8871, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.declare(metadata i32* %array_size, metadata !8873, metadata !DIExpression()), !dbg !8874
  %4 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !8875
  %tobool = icmp ne %struct.edma_chan* %4, null, !dbg !8875
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !8875

lor.rhs:                                          ; preds = %entry
  %5 = load i64, i64* %len.addr, align 8, !dbg !8875
  %tobool2 = icmp ne i64 %5, 0, !dbg !8875
  %lnot = xor i1 %tobool2, true, !dbg !8875
  br label %lor.end, !dbg !8875

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot3 = xor i1 %6, true, !dbg !8875
  %lnot4 = xor i1 %lnot3, true, !dbg !8875
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8875
  %conv = sext i32 %lnot.ext to i64, !dbg !8875
  %tobool5 = icmp ne i64 %conv, 0, !dbg !8875
  br i1 %tobool5, label %if.then, label %if.end, !dbg !8877

if.then:                                          ; preds = %lor.end
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !8878
  br label %return, !dbg !8878

if.end:                                           ; preds = %lor.end
  %7 = load i64, i64* %src.addr, align 8, !dbg !8879
  %8 = load i64, i64* %dest.addr, align 8, !dbg !8880
  %or = or i64 %7, %8, !dbg !8881
  %9 = load i64, i64* %len.addr, align 8, !dbg !8882
  %or6 = or i64 %or, %9, !dbg !8883
  store i64 %or6, i64* %word.addr.i, align 8
  %10 = load i64, i64* %word.addr.i, align 8, !dbg !8884
  %11 = call i64 asm "rep; bsf $1,$0", "=r,rm,~{dirflag},~{fpsr},~{flags}"(i64 %10) #9, !dbg !8885, !srcloc !6211
  store i64 %11, i64* %word.addr.i, align 8, !dbg !8885
  %12 = load i64, i64* %word.addr.i, align 8, !dbg !8886
  switch i64 %12, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb8
  ], !dbg !8887

sw.bb:                                            ; preds = %if.end
  store i32 32767, i32* %array_size, align 4, !dbg !8888
  br label %sw.epilog, !dbg !8890

sw.bb8:                                           ; preds = %if.end
  store i32 32766, i32* %array_size, align 4, !dbg !8891
  br label %sw.epilog, !dbg !8892

sw.default:                                       ; preds = %if.end
  store i32 32764, i32* %array_size, align 4, !dbg !8893
  br label %sw.epilog, !dbg !8894

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb
  %13 = load i64, i64* %len.addr, align 8, !dbg !8895
  %cmp = icmp ult i64 %13, 65536, !dbg !8897
  br i1 %cmp, label %if.then10, label %if.else, !dbg !8898

if.then10:                                        ; preds = %sw.epilog
  %14 = load i64, i64* %len.addr, align 8, !dbg !8899
  %conv11 = trunc i64 %14 to i32, !dbg !8899
  store i32 %conv11, i32* %width, align 4, !dbg !8901
  %15 = load i64, i64* %len.addr, align 8, !dbg !8902
  %conv12 = trunc i64 %15 to i32, !dbg !8902
  store i32 %conv12, i32* %pset_len, align 4, !dbg !8903
  store i32 1, i32* %nslots, align 4, !dbg !8904
  br label %if.end27, !dbg !8905

if.else:                                          ; preds = %sw.epilog
  %16 = load i32, i32* %array_size, align 4, !dbg !8906
  store i32 %16, i32* %width, align 4, !dbg !8908
  call void @llvm.dbg.declare(metadata i64* %__x, metadata !8909, metadata !DIExpression()), !dbg !8911
  %17 = load i64, i64* %len.addr, align 8, !dbg !8911
  store i64 %17, i64* %__x, align 8, !dbg !8911
  %18 = load i64, i64* %__x, align 8, !dbg !8911
  %19 = load i64, i64* %__x, align 8, !dbg !8911
  %20 = load i32, i32* %width, align 4, !dbg !8911
  %conv13 = zext i32 %20 to i64, !dbg !8911
  %rem = urem i64 %19, %conv13, !dbg !8911
  %sub = sub i64 %18, %rem, !dbg !8911
  store i64 %sub, i64* %tmp, align 8, !dbg !8911
  %21 = load i64, i64* %tmp, align 8, !dbg !8911
  %conv14 = trunc i64 %21 to i32, !dbg !8912
  store i32 %conv14, i32* %pset_len, align 4, !dbg !8913
  %22 = load i32, i32* %pset_len, align 4, !dbg !8914
  %conv15 = zext i32 %22 to i64, !dbg !8914
  %23 = load i64, i64* %len.addr, align 8, !dbg !8914
  %cmp16 = icmp eq i64 %conv15, %23, !dbg !8914
  %lnot18 = xor i1 %cmp16, true, !dbg !8914
  %lnot20 = xor i1 %lnot18, true, !dbg !8914
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !8914
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !8914
  %tobool23 = icmp ne i64 %conv22, 0, !dbg !8914
  br i1 %tobool23, label %if.then24, label %if.else25, !dbg !8916

if.then24:                                        ; preds = %if.else
  store i32 1, i32* %nslots, align 4, !dbg !8917
  br label %if.end26, !dbg !8918

if.else25:                                        ; preds = %if.else
  store i32 2, i32* %nslots, align 4, !dbg !8919
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.then24
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then10
  %24 = load i32, i32* %nslots, align 4, !dbg !8920
  %conv28 = sext i32 %24 to i64, !dbg !8920
  %call29 = call i64 @__ab_c_size(i64 %conv28, i64 48, i64 184) #11, !dbg !8920
  %call30 = call i8* @kzalloc(i64 %call29, i32 2592) #11, !dbg !8921
  %25 = bitcast i8* %call30 to %struct.edma_desc*, !dbg !8921
  store %struct.edma_desc* %25, %struct.edma_desc** %edesc, align 8, !dbg !8922
  %26 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8923
  %tobool31 = icmp ne %struct.edma_desc* %26, null, !dbg !8923
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !8925

if.then32:                                        ; preds = %if.end27
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !8926
  br label %return, !dbg !8926

if.end33:                                         ; preds = %if.end27
  %27 = load i32, i32* %nslots, align 4, !dbg !8927
  %28 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8928
  %pset_nr = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %28, i32 0, i32 6, !dbg !8929
  store i32 %27, i32* %pset_nr, align 8, !dbg !8930
  %29 = load i64, i64* %len.addr, align 8, !dbg !8931
  %conv34 = trunc i64 %29 to i32, !dbg !8931
  %30 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8932
  %residue_stat = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %30, i32 0, i32 12, !dbg !8933
  store i32 %conv34, i32* %residue_stat, align 8, !dbg !8934
  %31 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8935
  %residue = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %31, i32 0, i32 11, !dbg !8936
  store i32 %conv34, i32* %residue, align 4, !dbg !8937
  %32 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8938
  %direction = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %32, i32 0, i32 2, !dbg !8939
  store i32 0, i32* %direction, align 8, !dbg !8940
  %33 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !8941
  %34 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8942
  %echan35 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %34, i32 0, i32 7, !dbg !8943
  store %struct.edma_chan* %33, %struct.edma_chan** %echan35, align 8, !dbg !8944
  %35 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !8945
  %36 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8946
  %pset = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %36, i32 0, i32 13, !dbg !8947
  %arrayidx = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset, i64 0, i64 0, !dbg !8946
  %37 = load i64, i64* %src.addr, align 8, !dbg !8948
  %38 = load i64, i64* %dest.addr, align 8, !dbg !8949
  %39 = load i32, i32* %width, align 4, !dbg !8950
  %40 = load i32, i32* %pset_len, align 4, !dbg !8951
  %call36 = call i32 @edma_config_pset(%struct.dma_chan* %35, %struct.edma_pset* %arrayidx, i64 %37, i64 %38, i32 1, i32 %39, i32 %40, i32 0) #11, !dbg !8952
  store i32 %call36, i32* %ret, align 4, !dbg !8953
  %41 = load i32, i32* %ret, align 4, !dbg !8954
  %cmp37 = icmp slt i32 %41, 0, !dbg !8956
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !8957

if.then39:                                        ; preds = %if.end33
  %42 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8958
  %43 = bitcast %struct.edma_desc* %42 to i8*, !dbg !8958
  call void @kfree(i8* %43) #11, !dbg !8960
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !8961
  br label %return, !dbg !8961

if.end40:                                         ; preds = %if.end33
  %44 = load i32, i32* %ret, align 4, !dbg !8962
  %45 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8963
  %absync = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %45, i32 0, i32 5, !dbg !8964
  store i32 %44, i32* %absync, align 4, !dbg !8965
  %46 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8966
  %pset41 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %46, i32 0, i32 13, !dbg !8967
  %arrayidx42 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset41, i64 0, i64 0, !dbg !8966
  %param = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %arrayidx42, i32 0, i32 2, !dbg !8968
  %opt = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %param, i32 0, i32 0, !dbg !8969
  %47 = load i32, i32* %opt, align 8, !dbg !8970
  %conv43 = zext i32 %47 to i64, !dbg !8970
  %or44 = or i64 %conv43, 8388608, !dbg !8970
  %conv45 = trunc i64 %or44 to i32, !dbg !8970
  store i32 %conv45, i32* %opt, align 8, !dbg !8970
  %48 = load i32, i32* %nslots, align 4, !dbg !8971
  %cmp46 = icmp eq i32 %48, 1, !dbg !8973
  br i1 %cmp46, label %if.then48, label %if.else59, !dbg !8974

if.then48:                                        ; preds = %if.end40
  %49 = load i64, i64* %tx_flags.addr, align 8, !dbg !8975
  %and = and i64 %49, 1, !dbg !8978
  %tobool49 = icmp ne i64 %and, 0, !dbg !8978
  br i1 %tobool49, label %if.then50, label %if.end58, !dbg !8979

if.then50:                                        ; preds = %if.then48
  %50 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8980
  %pset51 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %50, i32 0, i32 13, !dbg !8981
  %arrayidx52 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset51, i64 0, i64 0, !dbg !8980
  %param53 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %arrayidx52, i32 0, i32 2, !dbg !8982
  %opt54 = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %param53, i32 0, i32 0, !dbg !8983
  %51 = load i32, i32* %opt54, align 8, !dbg !8984
  %conv55 = zext i32 %51 to i64, !dbg !8984
  %or56 = or i64 %conv55, 1048576, !dbg !8984
  %conv57 = trunc i64 %or56 to i32, !dbg !8984
  store i32 %conv57, i32* %opt54, align 8, !dbg !8984
  br label %if.end58, !dbg !8980

if.end58:                                         ; preds = %if.then50, %if.then48
  br label %if.end112, !dbg !8985

if.else59:                                        ; preds = %if.end40
  %52 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !8986
  %pset60 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %52, i32 0, i32 13, !dbg !8988
  %arrayidx61 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset60, i64 0, i64 0, !dbg !8986
  %param62 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %arrayidx61, i32 0, i32 2, !dbg !8989
  %opt63 = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %param62, i32 0, i32 0, !dbg !8990
  %53 = load i32, i32* %opt63, align 8, !dbg !8991
  %conv64 = zext i32 %53 to i64, !dbg !8991
  %or65 = or i64 %conv64, 4194304, !dbg !8991
  %conv66 = trunc i64 %or65 to i32, !dbg !8991
  store i32 %conv66, i32* %opt63, align 8, !dbg !8991
  %54 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !8992
  %slot = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %54, i32 0, i32 8, !dbg !8994
  %arrayidx67 = getelementptr [20 x i32], [20 x i32]* %slot, i64 0, i64 1, !dbg !8992
  %55 = load i32, i32* %arrayidx67, align 4, !dbg !8992
  %cmp68 = icmp slt i32 %55, 0, !dbg !8995
  br i1 %cmp68, label %if.then70, label %if.end80, !dbg !8996

if.then70:                                        ; preds = %if.else59
  %56 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !8997
  %ecc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %56, i32 0, i32 3, !dbg !8999
  %57 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !8999
  %call71 = call i32 @edma_alloc_slot(%struct.edma_cc* %57, i32 -1) #11, !dbg !9000
  %58 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9001
  %slot72 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %58, i32 0, i32 8, !dbg !9002
  %arrayidx73 = getelementptr [20 x i32], [20 x i32]* %slot72, i64 0, i64 1, !dbg !9001
  store i32 %call71, i32* %arrayidx73, align 4, !dbg !9003
  %59 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9004
  %slot74 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %59, i32 0, i32 8, !dbg !9006
  %arrayidx75 = getelementptr [20 x i32], [20 x i32]* %slot74, i64 0, i64 1, !dbg !9004
  %60 = load i32, i32* %arrayidx75, align 4, !dbg !9004
  %cmp76 = icmp slt i32 %60, 0, !dbg !9007
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !9008

if.then78:                                        ; preds = %if.then70
  %61 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9009
  %62 = bitcast %struct.edma_desc* %61 to i8*, !dbg !9009
  call void @kfree(i8* %62) #11, !dbg !9011
  %63 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9012
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %63, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.edma_prep_dma_memcpy, i64 0, i64 0)) #12, !dbg !9012
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9013
  br label %return, !dbg !9013

if.end79:                                         ; preds = %if.then70
  br label %if.end80, !dbg !9014

if.end80:                                         ; preds = %if.end79, %if.else59
  %64 = load i32, i32* %pset_len, align 4, !dbg !9015
  %conv81 = zext i32 %64 to i64, !dbg !9015
  %65 = load i64, i64* %dest.addr, align 8, !dbg !9016
  %add = add i64 %65, %conv81, !dbg !9016
  store i64 %add, i64* %dest.addr, align 8, !dbg !9016
  %66 = load i32, i32* %pset_len, align 4, !dbg !9017
  %conv82 = zext i32 %66 to i64, !dbg !9017
  %67 = load i64, i64* %src.addr, align 8, !dbg !9018
  %add83 = add i64 %67, %conv82, !dbg !9018
  store i64 %add83, i64* %src.addr, align 8, !dbg !9018
  %68 = load i64, i64* %len.addr, align 8, !dbg !9019
  %69 = load i32, i32* %array_size, align 4, !dbg !9020
  %conv84 = zext i32 %69 to i64, !dbg !9020
  %rem85 = urem i64 %68, %conv84, !dbg !9021
  %conv86 = trunc i64 %rem85 to i32, !dbg !9019
  store i32 %conv86, i32* %width, align 4, !dbg !9022
  store i32 %conv86, i32* %pset_len, align 4, !dbg !9023
  %70 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !9024
  %71 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9025
  %pset87 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %71, i32 0, i32 13, !dbg !9026
  %arrayidx88 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset87, i64 0, i64 1, !dbg !9025
  %72 = load i64, i64* %src.addr, align 8, !dbg !9027
  %73 = load i64, i64* %dest.addr, align 8, !dbg !9028
  %74 = load i32, i32* %width, align 4, !dbg !9029
  %75 = load i32, i32* %pset_len, align 4, !dbg !9030
  %call89 = call i32 @edma_config_pset(%struct.dma_chan* %70, %struct.edma_pset* %arrayidx88, i64 %72, i64 %73, i32 1, i32 %74, i32 %75, i32 0) #11, !dbg !9031
  store i32 %call89, i32* %ret, align 4, !dbg !9032
  %76 = load i32, i32* %ret, align 4, !dbg !9033
  %cmp90 = icmp slt i32 %76, 0, !dbg !9035
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !9036

if.then92:                                        ; preds = %if.end80
  %77 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9037
  %78 = bitcast %struct.edma_desc* %77 to i8*, !dbg !9037
  call void @kfree(i8* %78) #11, !dbg !9039
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9040
  br label %return, !dbg !9040

if.end93:                                         ; preds = %if.end80
  %79 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9041
  %pset94 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %79, i32 0, i32 13, !dbg !9042
  %arrayidx95 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset94, i64 0, i64 1, !dbg !9041
  %param96 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %arrayidx95, i32 0, i32 2, !dbg !9043
  %opt97 = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %param96, i32 0, i32 0, !dbg !9044
  %80 = load i32, i32* %opt97, align 8, !dbg !9045
  %conv98 = zext i32 %80 to i64, !dbg !9045
  %or99 = or i64 %conv98, 8388608, !dbg !9045
  %conv100 = trunc i64 %or99 to i32, !dbg !9045
  store i32 %conv100, i32* %opt97, align 8, !dbg !9045
  %81 = load i64, i64* %tx_flags.addr, align 8, !dbg !9046
  %and101 = and i64 %81, 1, !dbg !9048
  %tobool102 = icmp ne i64 %and101, 0, !dbg !9048
  br i1 %tobool102, label %if.then103, label %if.end111, !dbg !9049

if.then103:                                       ; preds = %if.end93
  %82 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9050
  %pset104 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %82, i32 0, i32 13, !dbg !9051
  %arrayidx105 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset104, i64 0, i64 1, !dbg !9050
  %param106 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %arrayidx105, i32 0, i32 2, !dbg !9052
  %opt107 = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %param106, i32 0, i32 0, !dbg !9053
  %83 = load i32, i32* %opt107, align 8, !dbg !9054
  %conv108 = zext i32 %83 to i64, !dbg !9054
  %or109 = or i64 %conv108, 1048576, !dbg !9054
  %conv110 = trunc i64 %or109 to i32, !dbg !9054
  store i32 %conv110, i32* %opt107, align 8, !dbg !9054
  br label %if.end111, !dbg !9050

if.end111:                                        ; preds = %if.then103, %if.end93
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.end58
  %84 = load i64, i64* %tx_flags.addr, align 8, !dbg !9055
  %and113 = and i64 %84, 1, !dbg !9057
  %tobool114 = icmp ne i64 %and113, 0, !dbg !9057
  br i1 %tobool114, label %if.end116, label %if.then115, !dbg !9058

if.then115:                                       ; preds = %if.end112
  %85 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9059
  %polled = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %85, i32 0, i32 4, !dbg !9060
  store i8 1, i8* %polled, align 8, !dbg !9061
  br label %if.end116, !dbg !9059

if.end116:                                        ; preds = %if.then115, %if.end112
  %86 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9062
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %86, i32 0, i32 0, !dbg !9063
  %87 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9064
  %vdesc = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %87, i32 0, i32 0, !dbg !9065
  %88 = load i64, i64* %tx_flags.addr, align 8, !dbg !9066
  %call117 = call %struct.dma_async_tx_descriptor* @vchan_tx_prep(%struct.virt_dma_chan* %vchan, %struct.virt_dma_desc* %vdesc, i64 %88) #11, !dbg !9067
  store %struct.dma_async_tx_descriptor* %call117, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9068
  br label %return, !dbg !9068

return:                                           ; preds = %if.end116, %if.then92, %if.then78, %if.then39, %if.then32, %if.then
  %89 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9069
  ret %struct.dma_async_tx_descriptor* %89, !dbg !9069
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @edma_prep_dma_interleaved(%struct.dma_chan* %chan, %struct.dma_interleaved_template* %xt, i64 %tx_flags) #0 !dbg !9070 {
entry:
  %retval = alloca %struct.dma_async_tx_descriptor*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  %xt.addr = alloca %struct.dma_interleaved_template*, align 8
  %tx_flags.addr = alloca i64, align 8
  %dev = alloca %struct.device*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %param = alloca %struct.edmacc_param*, align 8
  %edesc = alloca %struct.edma_desc*, align 8
  %src_icg = alloca i64, align 8
  %dst_icg = alloca i64, align 8
  %src_bidx = alloca i32, align 4
  %dst_bidx = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !9071, metadata !DIExpression()), !dbg !9072
  store %struct.dma_interleaved_template* %xt, %struct.dma_interleaved_template** %xt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_interleaved_template** %xt.addr, metadata !9073, metadata !DIExpression()), !dbg !9074
  store i64 %tx_flags, i64* %tx_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tx_flags.addr, metadata !9075, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9077, metadata !DIExpression()), !dbg !9078
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !9079
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !9080
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !9080
  %dev1 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 15, !dbg !9081
  %2 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !9081
  store %struct.device* %2, %struct.device** %dev, align 8, !dbg !9078
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !9082, metadata !DIExpression()), !dbg !9083
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !9084
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %3) #11, !dbg !9085
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !9083
  call void @llvm.dbg.declare(metadata %struct.edmacc_param** %param, metadata !9086, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.declare(metadata %struct.edma_desc** %edesc, metadata !9088, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.declare(metadata i64* %src_icg, metadata !9090, metadata !DIExpression()), !dbg !9091
  call void @llvm.dbg.declare(metadata i64* %dst_icg, metadata !9092, metadata !DIExpression()), !dbg !9093
  call void @llvm.dbg.declare(metadata i32* %src_bidx, metadata !9094, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.declare(metadata i32* %dst_bidx, metadata !9096, metadata !DIExpression()), !dbg !9097
  %4 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9098
  %dir = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %4, i32 0, i32 2, !dbg !9100
  %5 = load i32, i32* %dir, align 8, !dbg !9100
  %call2 = call zeroext i1 @is_slave_direction(i32 %5) #11, !dbg !9101
  br i1 %call2, label %if.then, label %if.end, !dbg !9102

if.then:                                          ; preds = %entry
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9103
  br label %return, !dbg !9103

if.end:                                           ; preds = %entry
  %6 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9104
  %frame_size = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %6, i32 0, i32 8, !dbg !9106
  %7 = load i64, i64* %frame_size, align 8, !dbg !9106
  %cmp = icmp ne i64 %7, 1, !dbg !9107
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !9108

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9109
  %numf = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %8, i32 0, i32 7, !dbg !9110
  %9 = load i64, i64* %numf, align 8, !dbg !9110
  %cmp3 = icmp eq i64 %9, 0, !dbg !9111
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9112

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9113
  br label %return, !dbg !9113

if.end5:                                          ; preds = %lor.lhs.false
  %10 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9114
  %sgl = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %10, i32 0, i32 9, !dbg !9116
  %arrayidx = getelementptr [0 x %struct.data_chunk], [0 x %struct.data_chunk]* %sgl, i64 0, i64 0, !dbg !9114
  %size = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %arrayidx, i32 0, i32 0, !dbg !9117
  %11 = load i64, i64* %size, align 8, !dbg !9117
  %cmp6 = icmp ugt i64 %11, 65536, !dbg !9118
  br i1 %cmp6, label %if.then10, label %lor.lhs.false7, !dbg !9119

lor.lhs.false7:                                   ; preds = %if.end5
  %12 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9120
  %numf8 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %12, i32 0, i32 7, !dbg !9121
  %13 = load i64, i64* %numf8, align 8, !dbg !9121
  %cmp9 = icmp ugt i64 %13, 65536, !dbg !9122
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !9123

if.then10:                                        ; preds = %lor.lhs.false7, %if.end5
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9124
  br label %return, !dbg !9124

if.end11:                                         ; preds = %lor.lhs.false7
  %14 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9125
  %15 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9126
  %sgl12 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %15, i32 0, i32 9, !dbg !9127
  %arrayidx13 = getelementptr [0 x %struct.data_chunk], [0 x %struct.data_chunk]* %sgl12, i64 0, i64 0, !dbg !9126
  %call14 = call i64 @dmaengine_get_src_icg(%struct.dma_interleaved_template* %14, %struct.data_chunk* %arrayidx13) #11, !dbg !9128
  store i64 %call14, i64* %src_icg, align 8, !dbg !9129
  %16 = load i64, i64* %src_icg, align 8, !dbg !9130
  %tobool = icmp ne i64 %16, 0, !dbg !9130
  br i1 %tobool, label %if.then15, label %if.else, !dbg !9132

if.then15:                                        ; preds = %if.end11
  %17 = load i64, i64* %src_icg, align 8, !dbg !9133
  %18 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9135
  %sgl16 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %18, i32 0, i32 9, !dbg !9136
  %arrayidx17 = getelementptr [0 x %struct.data_chunk], [0 x %struct.data_chunk]* %sgl16, i64 0, i64 0, !dbg !9135
  %size18 = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %arrayidx17, i32 0, i32 0, !dbg !9137
  %19 = load i64, i64* %size18, align 8, !dbg !9137
  %add = add i64 %17, %19, !dbg !9138
  %conv = trunc i64 %add to i32, !dbg !9133
  store i32 %conv, i32* %src_bidx, align 4, !dbg !9139
  br label %if.end27, !dbg !9140

if.else:                                          ; preds = %if.end11
  %20 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9141
  %src_inc = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %20, i32 0, i32 3, !dbg !9143
  %21 = load i8, i8* %src_inc, align 4, !dbg !9143
  %tobool19 = trunc i8 %21 to i1, !dbg !9143
  br i1 %tobool19, label %if.then20, label %if.else25, !dbg !9144

if.then20:                                        ; preds = %if.else
  %22 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9145
  %sgl21 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %22, i32 0, i32 9, !dbg !9147
  %arrayidx22 = getelementptr [0 x %struct.data_chunk], [0 x %struct.data_chunk]* %sgl21, i64 0, i64 0, !dbg !9145
  %size23 = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %arrayidx22, i32 0, i32 0, !dbg !9148
  %23 = load i64, i64* %size23, align 8, !dbg !9148
  %conv24 = trunc i64 %23 to i32, !dbg !9145
  store i32 %conv24, i32* %src_bidx, align 4, !dbg !9149
  br label %if.end26, !dbg !9150

if.else25:                                        ; preds = %if.else
  %24 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9151
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %24, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.edma_prep_dma_interleaved, i64 0, i64 0)) #12, !dbg !9151
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9153
  br label %return, !dbg !9153

if.end26:                                         ; preds = %if.then20
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then15
  %25 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9154
  %26 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9155
  %sgl28 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %26, i32 0, i32 9, !dbg !9156
  %arrayidx29 = getelementptr [0 x %struct.data_chunk], [0 x %struct.data_chunk]* %sgl28, i64 0, i64 0, !dbg !9155
  %call30 = call i64 @dmaengine_get_dst_icg(%struct.dma_interleaved_template* %25, %struct.data_chunk* %arrayidx29) #11, !dbg !9157
  store i64 %call30, i64* %dst_icg, align 8, !dbg !9158
  %27 = load i64, i64* %dst_icg, align 8, !dbg !9159
  %tobool31 = icmp ne i64 %27, 0, !dbg !9159
  br i1 %tobool31, label %if.then32, label %if.else38, !dbg !9161

if.then32:                                        ; preds = %if.end27
  %28 = load i64, i64* %dst_icg, align 8, !dbg !9162
  %29 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9164
  %sgl33 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %29, i32 0, i32 9, !dbg !9165
  %arrayidx34 = getelementptr [0 x %struct.data_chunk], [0 x %struct.data_chunk]* %sgl33, i64 0, i64 0, !dbg !9164
  %size35 = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %arrayidx34, i32 0, i32 0, !dbg !9166
  %30 = load i64, i64* %size35, align 8, !dbg !9166
  %add36 = add i64 %28, %30, !dbg !9167
  %conv37 = trunc i64 %add36 to i32, !dbg !9162
  store i32 %conv37, i32* %dst_bidx, align 4, !dbg !9168
  br label %if.end47, !dbg !9169

if.else38:                                        ; preds = %if.end27
  %31 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9170
  %dst_inc = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %31, i32 0, i32 4, !dbg !9172
  %32 = load i8, i8* %dst_inc, align 1, !dbg !9172
  %tobool39 = trunc i8 %32 to i1, !dbg !9172
  br i1 %tobool39, label %if.then40, label %if.else45, !dbg !9173

if.then40:                                        ; preds = %if.else38
  %33 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9174
  %sgl41 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %33, i32 0, i32 9, !dbg !9176
  %arrayidx42 = getelementptr [0 x %struct.data_chunk], [0 x %struct.data_chunk]* %sgl41, i64 0, i64 0, !dbg !9174
  %size43 = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %arrayidx42, i32 0, i32 0, !dbg !9177
  %34 = load i64, i64* %size43, align 8, !dbg !9177
  %conv44 = trunc i64 %34 to i32, !dbg !9174
  store i32 %conv44, i32* %dst_bidx, align 4, !dbg !9178
  br label %if.end46, !dbg !9179

if.else45:                                        ; preds = %if.else38
  %35 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9180
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %35, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.edma_prep_dma_interleaved, i64 0, i64 0)) #12, !dbg !9180
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9182
  br label %return, !dbg !9182

if.end46:                                         ; preds = %if.then40
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then32
  %36 = load i32, i32* %src_bidx, align 4, !dbg !9183
  %cmp48 = icmp sgt i32 %36, 65536, !dbg !9185
  br i1 %cmp48, label %if.then53, label %lor.lhs.false50, !dbg !9186

lor.lhs.false50:                                  ; preds = %if.end47
  %37 = load i32, i32* %dst_bidx, align 4, !dbg !9187
  %cmp51 = icmp sgt i32 %37, 65536, !dbg !9188
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !9189

if.then53:                                        ; preds = %lor.lhs.false50, %if.end47
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9190
  br label %return, !dbg !9190

if.end54:                                         ; preds = %lor.lhs.false50
  %call55 = call i64 @__ab_c_size(i64 1, i64 48, i64 184) #11, !dbg !9191
  %call56 = call i8* @kzalloc(i64 %call55, i32 2592) #11, !dbg !9192
  %38 = bitcast i8* %call56 to %struct.edma_desc*, !dbg !9192
  store %struct.edma_desc* %38, %struct.edma_desc** %edesc, align 8, !dbg !9193
  %39 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9194
  %tobool57 = icmp ne %struct.edma_desc* %39, null, !dbg !9194
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !9196

if.then58:                                        ; preds = %if.end54
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9197
  br label %return, !dbg !9197

if.end59:                                         ; preds = %if.end54
  %40 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9198
  %direction = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %40, i32 0, i32 2, !dbg !9199
  store i32 0, i32* %direction, align 8, !dbg !9200
  %41 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9201
  %42 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9202
  %echan60 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %42, i32 0, i32 7, !dbg !9203
  store %struct.edma_chan* %41, %struct.edma_chan** %echan60, align 8, !dbg !9204
  %43 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9205
  %pset_nr = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %43, i32 0, i32 6, !dbg !9206
  store i32 1, i32* %pset_nr, align 8, !dbg !9207
  %44 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9208
  %pset = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %44, i32 0, i32 13, !dbg !9209
  %arrayidx61 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset, i64 0, i64 0, !dbg !9208
  %param62 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %arrayidx61, i32 0, i32 2, !dbg !9210
  store %struct.edmacc_param* %param62, %struct.edmacc_param** %param, align 8, !dbg !9211
  %45 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9212
  %src_start = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %45, i32 0, i32 0, !dbg !9213
  %46 = load i64, i64* %src_start, align 8, !dbg !9213
  %conv63 = trunc i64 %46 to i32, !dbg !9212
  %47 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !9214
  %src = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %47, i32 0, i32 1, !dbg !9215
  store i32 %conv63, i32* %src, align 1, !dbg !9216
  %48 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9217
  %dst_start = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %48, i32 0, i32 1, !dbg !9218
  %49 = load i64, i64* %dst_start, align 8, !dbg !9218
  %conv64 = trunc i64 %49 to i32, !dbg !9217
  %50 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !9219
  %dst = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %50, i32 0, i32 3, !dbg !9220
  store i32 %conv64, i32* %dst, align 1, !dbg !9221
  %51 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9222
  %numf65 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %51, i32 0, i32 7, !dbg !9223
  %52 = load i64, i64* %numf65, align 8, !dbg !9223
  %shl = shl i64 %52, 16, !dbg !9224
  %53 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9225
  %sgl66 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %53, i32 0, i32 9, !dbg !9226
  %arrayidx67 = getelementptr [0 x %struct.data_chunk], [0 x %struct.data_chunk]* %sgl66, i64 0, i64 0, !dbg !9225
  %size68 = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %arrayidx67, i32 0, i32 0, !dbg !9227
  %54 = load i64, i64* %size68, align 8, !dbg !9227
  %or = or i64 %shl, %54, !dbg !9228
  %conv69 = trunc i64 %or to i32, !dbg !9222
  %55 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !9229
  %a_b_cnt = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %55, i32 0, i32 2, !dbg !9230
  store i32 %conv69, i32* %a_b_cnt, align 1, !dbg !9231
  %56 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !9232
  %ccnt = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %56, i32 0, i32 7, !dbg !9233
  store i32 1, i32* %ccnt, align 1, !dbg !9234
  %57 = load i32, i32* %dst_bidx, align 4, !dbg !9235
  %shl70 = shl i32 %57, 16, !dbg !9236
  %58 = load i32, i32* %src_bidx, align 4, !dbg !9237
  %or71 = or i32 %shl70, %58, !dbg !9238
  %59 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !9239
  %src_dst_bidx = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %59, i32 0, i32 4, !dbg !9240
  store i32 %or71, i32* %src_dst_bidx, align 1, !dbg !9241
  %60 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !9242
  %src_dst_cidx = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %60, i32 0, i32 6, !dbg !9243
  store i32 0, i32* %src_dst_cidx, align 1, !dbg !9244
  %61 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9245
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %61, i32 0, i32 5, !dbg !9245
  %62 = load i32, i32* %ch_num, align 8, !dbg !9245
  %and = and i32 %62, 65535, !dbg !9245
  %shl72 = shl i32 %and, 12, !dbg !9245
  %63 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !9246
  %opt = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %63, i32 0, i32 0, !dbg !9247
  store i32 %shl72, i32* %opt, align 1, !dbg !9248
  %64 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !9249
  %opt73 = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %64, i32 0, i32 0, !dbg !9250
  %65 = load i32, i32* %opt73, align 1, !dbg !9251
  %conv74 = zext i32 %65 to i64, !dbg !9251
  %or75 = or i64 %conv74, 8388608, !dbg !9251
  %conv76 = trunc i64 %or75 to i32, !dbg !9251
  store i32 %conv76, i32* %opt73, align 1, !dbg !9251
  %66 = load i64, i64* %tx_flags.addr, align 8, !dbg !9252
  %and77 = and i64 %66, 1, !dbg !9254
  %tobool78 = icmp ne i64 %and77, 0, !dbg !9254
  br i1 %tobool78, label %if.then79, label %if.else84, !dbg !9255

if.then79:                                        ; preds = %if.end59
  %67 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !9256
  %opt80 = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %67, i32 0, i32 0, !dbg !9257
  %68 = load i32, i32* %opt80, align 1, !dbg !9258
  %conv81 = zext i32 %68 to i64, !dbg !9258
  %or82 = or i64 %conv81, 1048576, !dbg !9258
  %conv83 = trunc i64 %or82 to i32, !dbg !9258
  store i32 %conv83, i32* %opt80, align 1, !dbg !9258
  br label %if.end85, !dbg !9256

if.else84:                                        ; preds = %if.end59
  %69 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9259
  %polled = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %69, i32 0, i32 4, !dbg !9260
  store i8 1, i8* %polled, align 8, !dbg !9261
  br label %if.end85

if.end85:                                         ; preds = %if.else84, %if.then79
  %70 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9262
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %70, i32 0, i32 0, !dbg !9263
  %71 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9264
  %vdesc = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %71, i32 0, i32 0, !dbg !9265
  %72 = load i64, i64* %tx_flags.addr, align 8, !dbg !9266
  %call86 = call %struct.dma_async_tx_descriptor* @vchan_tx_prep(%struct.virt_dma_chan* %vchan, %struct.virt_dma_desc* %vdesc, i64 %72) #11, !dbg !9267
  store %struct.dma_async_tx_descriptor* %call86, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9268
  br label %return, !dbg !9268

return:                                           ; preds = %if.end85, %if.then58, %if.then53, %if.else45, %if.else25, %if.then10, %if.then4, %if.then
  %73 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9269
  ret %struct.dma_async_tx_descriptor* %73, !dbg !9269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @edma_prep_slave_sg(%struct.dma_chan* %chan, %struct.scatterlist* %sgl, i32 %sg_len, i32 %direction, i64 %tx_flags, i8* %context) #0 !dbg !9270 {
entry:
  %retval = alloca %struct.dma_async_tx_descriptor*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  %sgl.addr = alloca %struct.scatterlist*, align 8
  %sg_len.addr = alloca i32, align 4
  %direction.addr = alloca i32, align 4
  %tx_flags.addr = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %dev = alloca %struct.device*, align 8
  %edesc = alloca %struct.edma_desc*, align 8
  %src_addr = alloca i64, align 8
  %dst_addr = alloca i64, align 8
  %dev_width = alloca i32, align 4
  %burst = alloca i32, align 4
  %sg = alloca %struct.scatterlist*, align 8
  %i = alloca i32, align 4
  %nslots = alloca i32, align 4
  %ret = alloca i32, align 4
  %__UNIQUE_ID___x251 = alloca i32, align 4
  %__UNIQUE_ID___y252 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !9271, metadata !DIExpression()), !dbg !9272
  store %struct.scatterlist* %sgl, %struct.scatterlist** %sgl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sgl.addr, metadata !9273, metadata !DIExpression()), !dbg !9274
  store i32 %sg_len, i32* %sg_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sg_len.addr, metadata !9275, metadata !DIExpression()), !dbg !9276
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !9277, metadata !DIExpression()), !dbg !9278
  store i64 %tx_flags, i64* %tx_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tx_flags.addr, metadata !9279, metadata !DIExpression()), !dbg !9280
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9281, metadata !DIExpression()), !dbg !9282
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !9283, metadata !DIExpression()), !dbg !9284
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !9285
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %0) #11, !dbg !9286
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !9284
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9287, metadata !DIExpression()), !dbg !9288
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !9289
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %1, i32 0, i32 0, !dbg !9290
  %2 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !9290
  %dev1 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %2, i32 0, i32 15, !dbg !9291
  %3 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !9291
  store %struct.device* %3, %struct.device** %dev, align 8, !dbg !9288
  call void @llvm.dbg.declare(metadata %struct.edma_desc** %edesc, metadata !9292, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.declare(metadata i64* %src_addr, metadata !9294, metadata !DIExpression()), !dbg !9295
  store i64 0, i64* %src_addr, align 8, !dbg !9295
  call void @llvm.dbg.declare(metadata i64* %dst_addr, metadata !9296, metadata !DIExpression()), !dbg !9297
  store i64 0, i64* %dst_addr, align 8, !dbg !9297
  call void @llvm.dbg.declare(metadata i32* %dev_width, metadata !9298, metadata !DIExpression()), !dbg !9299
  call void @llvm.dbg.declare(metadata i32* %burst, metadata !9300, metadata !DIExpression()), !dbg !9301
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !9302, metadata !DIExpression()), !dbg !9303
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9304, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.declare(metadata i32* %nslots, metadata !9306, metadata !DIExpression()), !dbg !9307
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9308, metadata !DIExpression()), !dbg !9309
  %4 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9310
  %tobool = icmp ne %struct.edma_chan* %4, null, !dbg !9310
  br i1 %tobool, label %lor.lhs.false, label %lor.end, !dbg !9310

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.scatterlist*, %struct.scatterlist** %sgl.addr, align 8, !dbg !9310
  %tobool2 = icmp ne %struct.scatterlist* %5, null, !dbg !9310
  br i1 %tobool2, label %lor.rhs, label %lor.end, !dbg !9310

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load i32, i32* %sg_len.addr, align 4, !dbg !9310
  %tobool3 = icmp ne i32 %6, 0, !dbg !9310
  %lnot = xor i1 %tobool3, true, !dbg !9310
  br label %lor.end, !dbg !9310

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot4 = xor i1 %7, true, !dbg !9310
  %lnot5 = xor i1 %lnot4, true, !dbg !9310
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !9310
  %conv = sext i32 %lnot.ext to i64, !dbg !9310
  %tobool6 = icmp ne i64 %conv, 0, !dbg !9310
  br i1 %tobool6, label %if.then, label %if.end, !dbg !9312

if.then:                                          ; preds = %lor.end
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9313
  br label %return, !dbg !9313

if.end:                                           ; preds = %lor.end
  %8 = load i32, i32* %direction.addr, align 4, !dbg !9314
  %cmp = icmp eq i32 %8, 2, !dbg !9316
  br i1 %cmp, label %if.then8, label %if.else, !dbg !9317

if.then8:                                         ; preds = %if.end
  %9 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9318
  %cfg = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %9, i32 0, i32 10, !dbg !9320
  %src_addr9 = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 1, !dbg !9321
  %10 = load i64, i64* %src_addr9, align 8, !dbg !9321
  store i64 %10, i64* %src_addr, align 8, !dbg !9322
  %11 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9323
  %cfg10 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %11, i32 0, i32 10, !dbg !9324
  %src_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg10, i32 0, i32 3, !dbg !9325
  %12 = load i32, i32* %src_addr_width, align 8, !dbg !9325
  store i32 %12, i32* %dev_width, align 4, !dbg !9326
  %13 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9327
  %cfg11 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %13, i32 0, i32 10, !dbg !9328
  %src_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg11, i32 0, i32 5, !dbg !9329
  %14 = load i32, i32* %src_maxburst, align 8, !dbg !9329
  store i32 %14, i32* %burst, align 4, !dbg !9330
  br label %if.end21, !dbg !9331

if.else:                                          ; preds = %if.end
  %15 = load i32, i32* %direction.addr, align 4, !dbg !9332
  %cmp12 = icmp eq i32 %15, 1, !dbg !9334
  br i1 %cmp12, label %if.then14, label %if.else19, !dbg !9335

if.then14:                                        ; preds = %if.else
  %16 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9336
  %cfg15 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %16, i32 0, i32 10, !dbg !9338
  %dst_addr16 = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg15, i32 0, i32 2, !dbg !9339
  %17 = load i64, i64* %dst_addr16, align 8, !dbg !9339
  store i64 %17, i64* %dst_addr, align 8, !dbg !9340
  %18 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9341
  %cfg17 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %18, i32 0, i32 10, !dbg !9342
  %dst_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg17, i32 0, i32 4, !dbg !9343
  %19 = load i32, i32* %dst_addr_width, align 4, !dbg !9343
  store i32 %19, i32* %dev_width, align 4, !dbg !9344
  %20 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9345
  %cfg18 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %20, i32 0, i32 10, !dbg !9346
  %dst_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg18, i32 0, i32 6, !dbg !9347
  %21 = load i32, i32* %dst_maxburst, align 4, !dbg !9347
  store i32 %21, i32* %burst, align 4, !dbg !9348
  br label %if.end20, !dbg !9349

if.else19:                                        ; preds = %if.else
  %22 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9350
  %23 = load i32, i32* %direction.addr, align 4, !dbg !9350
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.edma_prep_slave_sg, i64 0, i64 0), i32 %23) #12, !dbg !9350
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9352
  br label %return, !dbg !9352

if.end20:                                         ; preds = %if.then14
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then8
  %24 = load i32, i32* %dev_width, align 4, !dbg !9353
  %cmp22 = icmp eq i32 %24, 0, !dbg !9355
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !9356

if.then24:                                        ; preds = %if.end21
  %25 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9357
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %25, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.edma_prep_slave_sg, i64 0, i64 0)) #12, !dbg !9357
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9359
  br label %return, !dbg !9359

if.end25:                                         ; preds = %if.end21
  %26 = load i32, i32* %sg_len.addr, align 4, !dbg !9360
  %conv26 = zext i32 %26 to i64, !dbg !9360
  %call27 = call i64 @__ab_c_size(i64 %conv26, i64 48, i64 184) #11, !dbg !9360
  %call28 = call i8* @kzalloc(i64 %call27, i32 2592) #11, !dbg !9361
  %27 = bitcast i8* %call28 to %struct.edma_desc*, !dbg !9361
  store %struct.edma_desc* %27, %struct.edma_desc** %edesc, align 8, !dbg !9362
  %28 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9363
  %tobool29 = icmp ne %struct.edma_desc* %28, null, !dbg !9363
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !9365

if.then30:                                        ; preds = %if.end25
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9366
  br label %return, !dbg !9366

if.end31:                                         ; preds = %if.end25
  %29 = load i32, i32* %sg_len.addr, align 4, !dbg !9367
  %30 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9368
  %pset_nr = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %30, i32 0, i32 6, !dbg !9369
  store i32 %29, i32* %pset_nr, align 8, !dbg !9370
  %31 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9371
  %residue = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %31, i32 0, i32 11, !dbg !9372
  store i32 0, i32* %residue, align 4, !dbg !9373
  %32 = load i32, i32* %direction.addr, align 4, !dbg !9374
  %33 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9375
  %direction32 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %33, i32 0, i32 2, !dbg !9376
  store i32 %32, i32* %direction32, align 8, !dbg !9377
  %34 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9378
  %35 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9379
  %echan33 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %35, i32 0, i32 7, !dbg !9380
  store %struct.edma_chan* %34, %struct.edma_chan** %echan33, align 8, !dbg !9381
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x251, metadata !9382, metadata !DIExpression()), !dbg !9384
  store i32 20, i32* %__UNIQUE_ID___x251, align 4, !dbg !9384
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y252, metadata !9385, metadata !DIExpression()), !dbg !9384
  %36 = load i32, i32* %sg_len.addr, align 4, !dbg !9384
  store i32 %36, i32* %__UNIQUE_ID___y252, align 4, !dbg !9384
  %37 = load i32, i32* %__UNIQUE_ID___x251, align 4, !dbg !9384
  %38 = load i32, i32* %__UNIQUE_ID___y252, align 4, !dbg !9384
  %cmp34 = icmp ult i32 %37, %38, !dbg !9384
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !9384

cond.true:                                        ; preds = %if.end31
  %39 = load i32, i32* %__UNIQUE_ID___x251, align 4, !dbg !9384
  br label %cond.end, !dbg !9384

cond.false:                                       ; preds = %if.end31
  %40 = load i32, i32* %__UNIQUE_ID___y252, align 4, !dbg !9384
  br label %cond.end, !dbg !9384

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %39, %cond.true ], [ %40, %cond.false ], !dbg !9384
  store i32 %cond, i32* %tmp, align 4, !dbg !9384
  %41 = load i32, i32* %tmp, align 4, !dbg !9384
  store i32 %41, i32* %nslots, align 4, !dbg !9386
  store i32 0, i32* %i, align 4, !dbg !9387
  br label %for.cond, !dbg !9389

for.cond:                                         ; preds = %for.inc, %cond.end
  %42 = load i32, i32* %i, align 4, !dbg !9390
  %43 = load i32, i32* %nslots, align 4, !dbg !9392
  %cmp36 = icmp slt i32 %42, %43, !dbg !9393
  br i1 %cmp36, label %for.body, label %for.end, !dbg !9394

for.body:                                         ; preds = %for.cond
  %44 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9395
  %slot = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %44, i32 0, i32 8, !dbg !9398
  %45 = load i32, i32* %i, align 4, !dbg !9399
  %idxprom = sext i32 %45 to i64, !dbg !9395
  %arrayidx = getelementptr [20 x i32], [20 x i32]* %slot, i64 0, i64 %idxprom, !dbg !9395
  %46 = load i32, i32* %arrayidx, align 4, !dbg !9395
  %cmp38 = icmp slt i32 %46, 0, !dbg !9400
  br i1 %cmp38, label %if.then40, label %if.end52, !dbg !9401

if.then40:                                        ; preds = %for.body
  %47 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9402
  %ecc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %47, i32 0, i32 3, !dbg !9404
  %48 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !9404
  %call41 = call i32 @edma_alloc_slot(%struct.edma_cc* %48, i32 -1) #11, !dbg !9405
  %49 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9406
  %slot42 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %49, i32 0, i32 8, !dbg !9407
  %50 = load i32, i32* %i, align 4, !dbg !9408
  %idxprom43 = sext i32 %50 to i64, !dbg !9406
  %arrayidx44 = getelementptr [20 x i32], [20 x i32]* %slot42, i64 0, i64 %idxprom43, !dbg !9406
  store i32 %call41, i32* %arrayidx44, align 4, !dbg !9409
  %51 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9410
  %slot45 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %51, i32 0, i32 8, !dbg !9412
  %52 = load i32, i32* %i, align 4, !dbg !9413
  %idxprom46 = sext i32 %52 to i64, !dbg !9410
  %arrayidx47 = getelementptr [20 x i32], [20 x i32]* %slot45, i64 0, i64 %idxprom46, !dbg !9410
  %53 = load i32, i32* %arrayidx47, align 4, !dbg !9410
  %cmp48 = icmp slt i32 %53, 0, !dbg !9414
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !9415

if.then50:                                        ; preds = %if.then40
  %54 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9416
  %55 = bitcast %struct.edma_desc* %54 to i8*, !dbg !9416
  call void @kfree(i8* %55) #11, !dbg !9418
  %56 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9419
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %56, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.edma_prep_slave_sg, i64 0, i64 0)) #12, !dbg !9419
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9420
  br label %return, !dbg !9420

if.end51:                                         ; preds = %if.then40
  br label %if.end52, !dbg !9421

if.end52:                                         ; preds = %if.end51, %for.body
  br label %for.inc, !dbg !9422

for.inc:                                          ; preds = %if.end52
  %57 = load i32, i32* %i, align 4, !dbg !9423
  %inc = add i32 %57, 1, !dbg !9423
  store i32 %inc, i32* %i, align 4, !dbg !9423
  br label %for.cond, !dbg !9424, !llvm.loop !9425

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9427
  %58 = load %struct.scatterlist*, %struct.scatterlist** %sgl.addr, align 8, !dbg !9427
  store %struct.scatterlist* %58, %struct.scatterlist** %sg, align 8, !dbg !9427
  br label %for.cond53, !dbg !9427

for.cond53:                                       ; preds = %for.inc94, %for.end
  %59 = load i32, i32* %i, align 4, !dbg !9429
  %60 = load i32, i32* %sg_len.addr, align 4, !dbg !9429
  %cmp54 = icmp ult i32 %59, %60, !dbg !9429
  br i1 %cmp54, label %for.body56, label %for.end97, !dbg !9427

for.body56:                                       ; preds = %for.cond53
  %61 = load i32, i32* %direction.addr, align 4, !dbg !9431
  %cmp57 = icmp eq i32 %61, 2, !dbg !9434
  br i1 %cmp57, label %if.then59, label %if.else60, !dbg !9435

if.then59:                                        ; preds = %for.body56
  %62 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9436
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %62, i32 0, i32 3, !dbg !9436
  %63 = load i64, i64* %dma_address, align 8, !dbg !9436
  store i64 %63, i64* %dst_addr, align 8, !dbg !9437
  br label %if.end62, !dbg !9438

if.else60:                                        ; preds = %for.body56
  %64 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9439
  %dma_address61 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %64, i32 0, i32 3, !dbg !9439
  %65 = load i64, i64* %dma_address61, align 8, !dbg !9439
  store i64 %65, i64* %src_addr, align 8, !dbg !9440
  br label %if.end62

if.end62:                                         ; preds = %if.else60, %if.then59
  %66 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !9441
  %67 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9442
  %pset = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %67, i32 0, i32 13, !dbg !9443
  %68 = load i32, i32* %i, align 4, !dbg !9444
  %idxprom63 = sext i32 %68 to i64, !dbg !9442
  %arrayidx64 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset, i64 0, i64 %idxprom63, !dbg !9442
  %69 = load i64, i64* %src_addr, align 8, !dbg !9445
  %70 = load i64, i64* %dst_addr, align 8, !dbg !9446
  %71 = load i32, i32* %burst, align 4, !dbg !9447
  %72 = load i32, i32* %dev_width, align 4, !dbg !9448
  %73 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9449
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %73, i32 0, i32 4, !dbg !9449
  %74 = load i32, i32* %dma_length, align 8, !dbg !9449
  %75 = load i32, i32* %direction.addr, align 4, !dbg !9450
  %call65 = call i32 @edma_config_pset(%struct.dma_chan* %66, %struct.edma_pset* %arrayidx64, i64 %69, i64 %70, i32 %71, i32 %72, i32 %74, i32 %75) #11, !dbg !9451
  store i32 %call65, i32* %ret, align 4, !dbg !9452
  %76 = load i32, i32* %ret, align 4, !dbg !9453
  %cmp66 = icmp slt i32 %76, 0, !dbg !9455
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !9456

if.then68:                                        ; preds = %if.end62
  %77 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9457
  %78 = bitcast %struct.edma_desc* %77 to i8*, !dbg !9457
  call void @kfree(i8* %78) #11, !dbg !9459
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9460
  br label %return, !dbg !9460

if.end69:                                         ; preds = %if.end62
  %79 = load i32, i32* %ret, align 4, !dbg !9461
  %80 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9462
  %absync = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %80, i32 0, i32 5, !dbg !9463
  store i32 %79, i32* %absync, align 4, !dbg !9464
  %81 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9465
  %dma_length70 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %81, i32 0, i32 4, !dbg !9465
  %82 = load i32, i32* %dma_length70, align 8, !dbg !9465
  %83 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9466
  %residue71 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %83, i32 0, i32 11, !dbg !9467
  %84 = load i32, i32* %residue71, align 4, !dbg !9468
  %add = add i32 %84, %82, !dbg !9468
  store i32 %add, i32* %residue71, align 4, !dbg !9468
  %85 = load i32, i32* %i, align 4, !dbg !9469
  %86 = load i32, i32* %sg_len.addr, align 4, !dbg !9471
  %sub = sub i32 %86, 1, !dbg !9472
  %cmp72 = icmp eq i32 %85, %sub, !dbg !9473
  br i1 %cmp72, label %if.then74, label %if.else80, !dbg !9474

if.then74:                                        ; preds = %if.end69
  %87 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9475
  %pset75 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %87, i32 0, i32 13, !dbg !9476
  %88 = load i32, i32* %i, align 4, !dbg !9477
  %idxprom76 = sext i32 %88 to i64, !dbg !9475
  %arrayidx77 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset75, i64 0, i64 %idxprom76, !dbg !9475
  %param = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %arrayidx77, i32 0, i32 2, !dbg !9478
  %opt = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %param, i32 0, i32 0, !dbg !9479
  %89 = load i32, i32* %opt, align 8, !dbg !9480
  %conv78 = zext i32 %89 to i64, !dbg !9480
  %or = or i64 %conv78, 1048576, !dbg !9480
  %conv79 = trunc i64 %or to i32, !dbg !9480
  store i32 %conv79, i32* %opt, align 8, !dbg !9480
  br label %if.end93, !dbg !9475

if.else80:                                        ; preds = %if.end69
  %90 = load i32, i32* %i, align 4, !dbg !9481
  %add81 = add i32 %90, 1, !dbg !9483
  %rem = srem i32 %add81, 20, !dbg !9484
  %tobool82 = icmp ne i32 %rem, 0, !dbg !9484
  br i1 %tobool82, label %if.end92, label %if.then83, !dbg !9485

if.then83:                                        ; preds = %if.else80
  %91 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9486
  %pset84 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %91, i32 0, i32 13, !dbg !9487
  %92 = load i32, i32* %i, align 4, !dbg !9488
  %idxprom85 = sext i32 %92 to i64, !dbg !9486
  %arrayidx86 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset84, i64 0, i64 %idxprom85, !dbg !9486
  %param87 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %arrayidx86, i32 0, i32 2, !dbg !9489
  %opt88 = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %param87, i32 0, i32 0, !dbg !9490
  %93 = load i32, i32* %opt88, align 8, !dbg !9491
  %conv89 = zext i32 %93 to i64, !dbg !9491
  %or90 = or i64 %conv89, 1050624, !dbg !9491
  %conv91 = trunc i64 %or90 to i32, !dbg !9491
  store i32 %conv91, i32* %opt88, align 8, !dbg !9491
  br label %if.end92, !dbg !9486

if.end92:                                         ; preds = %if.then83, %if.else80
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then74
  br label %for.inc94, !dbg !9492

for.inc94:                                        ; preds = %if.end93
  %94 = load i32, i32* %i, align 4, !dbg !9429
  %inc95 = add i32 %94, 1, !dbg !9429
  store i32 %inc95, i32* %i, align 4, !dbg !9429
  %95 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9429
  %call96 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %95) #11, !dbg !9429
  store %struct.scatterlist* %call96, %struct.scatterlist** %sg, align 8, !dbg !9429
  br label %for.cond53, !dbg !9429, !llvm.loop !9493

for.end97:                                        ; preds = %for.cond53
  %96 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9495
  %residue98 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %96, i32 0, i32 11, !dbg !9496
  %97 = load i32, i32* %residue98, align 4, !dbg !9496
  %98 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9497
  %residue_stat = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %98, i32 0, i32 12, !dbg !9498
  store i32 %97, i32* %residue_stat, align 8, !dbg !9499
  %99 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9500
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %99, i32 0, i32 0, !dbg !9501
  %100 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9502
  %vdesc = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %100, i32 0, i32 0, !dbg !9503
  %101 = load i64, i64* %tx_flags.addr, align 8, !dbg !9504
  %call99 = call %struct.dma_async_tx_descriptor* @vchan_tx_prep(%struct.virt_dma_chan* %vchan, %struct.virt_dma_desc* %vdesc, i64 %101) #11, !dbg !9505
  store %struct.dma_async_tx_descriptor* %call99, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9506
  br label %return, !dbg !9506

return:                                           ; preds = %for.end97, %if.then68, %if.then50, %if.then30, %if.then24, %if.else19, %if.then
  %102 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9507
  ret %struct.dma_async_tx_descriptor* %102, !dbg !9507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @edma_prep_dma_cyclic(%struct.dma_chan* %chan, i64 %buf_addr, i64 %buf_len, i64 %period_len, i32 %direction, i64 %tx_flags) #0 !dbg !9508 {
entry:
  %retval = alloca %struct.dma_async_tx_descriptor*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  %buf_addr.addr = alloca i64, align 8
  %buf_len.addr = alloca i64, align 8
  %period_len.addr = alloca i64, align 8
  %direction.addr = alloca i32, align 4
  %tx_flags.addr = alloca i64, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %dev = alloca %struct.device*, align 8
  %edesc = alloca %struct.edma_desc*, align 8
  %src_addr = alloca i64, align 8
  %dst_addr = alloca i64, align 8
  %dev_width = alloca i32, align 4
  %use_intermediate = alloca i8, align 1
  %burst = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %nslots = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !9509, metadata !DIExpression()), !dbg !9510
  store i64 %buf_addr, i64* %buf_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_addr.addr, metadata !9511, metadata !DIExpression()), !dbg !9512
  store i64 %buf_len, i64* %buf_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_len.addr, metadata !9513, metadata !DIExpression()), !dbg !9514
  store i64 %period_len, i64* %period_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %period_len.addr, metadata !9515, metadata !DIExpression()), !dbg !9516
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !9517, metadata !DIExpression()), !dbg !9518
  store i64 %tx_flags, i64* %tx_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tx_flags.addr, metadata !9519, metadata !DIExpression()), !dbg !9520
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !9521, metadata !DIExpression()), !dbg !9522
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !9523
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %0) #11, !dbg !9524
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !9522
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9525, metadata !DIExpression()), !dbg !9526
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !9527
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %1, i32 0, i32 0, !dbg !9528
  %2 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !9528
  %dev1 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %2, i32 0, i32 15, !dbg !9529
  %3 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !9529
  store %struct.device* %3, %struct.device** %dev, align 8, !dbg !9526
  call void @llvm.dbg.declare(metadata %struct.edma_desc** %edesc, metadata !9530, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.declare(metadata i64* %src_addr, metadata !9532, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.declare(metadata i64* %dst_addr, metadata !9534, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.declare(metadata i32* %dev_width, metadata !9536, metadata !DIExpression()), !dbg !9537
  call void @llvm.dbg.declare(metadata i8* %use_intermediate, metadata !9538, metadata !DIExpression()), !dbg !9539
  store i8 0, i8* %use_intermediate, align 1, !dbg !9539
  call void @llvm.dbg.declare(metadata i32* %burst, metadata !9540, metadata !DIExpression()), !dbg !9541
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9542, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9544, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.declare(metadata i32* %nslots, metadata !9546, metadata !DIExpression()), !dbg !9547
  %4 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9548
  %tobool = icmp ne %struct.edma_chan* %4, null, !dbg !9548
  br i1 %tobool, label %lor.lhs.false, label %lor.end, !dbg !9548

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* %buf_len.addr, align 8, !dbg !9548
  %tobool2 = icmp ne i64 %5, 0, !dbg !9548
  br i1 %tobool2, label %lor.rhs, label %lor.end, !dbg !9548

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load i64, i64* %period_len.addr, align 8, !dbg !9548
  %tobool3 = icmp ne i64 %6, 0, !dbg !9548
  %lnot = xor i1 %tobool3, true, !dbg !9548
  br label %lor.end, !dbg !9548

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot4 = xor i1 %7, true, !dbg !9548
  %lnot5 = xor i1 %lnot4, true, !dbg !9548
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !9548
  %conv = sext i32 %lnot.ext to i64, !dbg !9548
  %tobool6 = icmp ne i64 %conv, 0, !dbg !9548
  br i1 %tobool6, label %if.then, label %if.end, !dbg !9550

if.then:                                          ; preds = %lor.end
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9551
  br label %return, !dbg !9551

if.end:                                           ; preds = %lor.end
  %8 = load i32, i32* %direction.addr, align 4, !dbg !9552
  %cmp = icmp eq i32 %8, 2, !dbg !9554
  br i1 %cmp, label %if.then8, label %if.else, !dbg !9555

if.then8:                                         ; preds = %if.end
  %9 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9556
  %cfg = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %9, i32 0, i32 10, !dbg !9558
  %src_addr9 = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 1, !dbg !9559
  %10 = load i64, i64* %src_addr9, align 8, !dbg !9559
  store i64 %10, i64* %src_addr, align 8, !dbg !9560
  %11 = load i64, i64* %buf_addr.addr, align 8, !dbg !9561
  store i64 %11, i64* %dst_addr, align 8, !dbg !9562
  %12 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9563
  %cfg10 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %12, i32 0, i32 10, !dbg !9564
  %src_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg10, i32 0, i32 3, !dbg !9565
  %13 = load i32, i32* %src_addr_width, align 8, !dbg !9565
  store i32 %13, i32* %dev_width, align 4, !dbg !9566
  %14 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9567
  %cfg11 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %14, i32 0, i32 10, !dbg !9568
  %src_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg11, i32 0, i32 5, !dbg !9569
  %15 = load i32, i32* %src_maxburst, align 8, !dbg !9569
  store i32 %15, i32* %burst, align 4, !dbg !9570
  br label %if.end21, !dbg !9571

if.else:                                          ; preds = %if.end
  %16 = load i32, i32* %direction.addr, align 4, !dbg !9572
  %cmp12 = icmp eq i32 %16, 1, !dbg !9574
  br i1 %cmp12, label %if.then14, label %if.else19, !dbg !9575

if.then14:                                        ; preds = %if.else
  %17 = load i64, i64* %buf_addr.addr, align 8, !dbg !9576
  store i64 %17, i64* %src_addr, align 8, !dbg !9578
  %18 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9579
  %cfg15 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %18, i32 0, i32 10, !dbg !9580
  %dst_addr16 = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg15, i32 0, i32 2, !dbg !9581
  %19 = load i64, i64* %dst_addr16, align 8, !dbg !9581
  store i64 %19, i64* %dst_addr, align 8, !dbg !9582
  %20 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9583
  %cfg17 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %20, i32 0, i32 10, !dbg !9584
  %dst_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg17, i32 0, i32 4, !dbg !9585
  %21 = load i32, i32* %dst_addr_width, align 4, !dbg !9585
  store i32 %21, i32* %dev_width, align 4, !dbg !9586
  %22 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9587
  %cfg18 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %22, i32 0, i32 10, !dbg !9588
  %dst_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg18, i32 0, i32 6, !dbg !9589
  %23 = load i32, i32* %dst_maxburst, align 4, !dbg !9589
  store i32 %23, i32* %burst, align 4, !dbg !9590
  br label %if.end20, !dbg !9591

if.else19:                                        ; preds = %if.else
  %24 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9592
  %25 = load i32, i32* %direction.addr, align 4, !dbg !9592
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.edma_prep_dma_cyclic, i64 0, i64 0), i32 %25) #12, !dbg !9592
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9594
  br label %return, !dbg !9594

if.end20:                                         ; preds = %if.then14
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then8
  %26 = load i32, i32* %dev_width, align 4, !dbg !9595
  %cmp22 = icmp eq i32 %26, 0, !dbg !9597
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !9598

if.then24:                                        ; preds = %if.end21
  %27 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9599
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %27, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.edma_prep_dma_cyclic, i64 0, i64 0)) #12, !dbg !9599
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9601
  br label %return, !dbg !9601

if.end25:                                         ; preds = %if.end21
  %28 = load i64, i64* %buf_len.addr, align 8, !dbg !9602
  %29 = load i64, i64* %period_len.addr, align 8, !dbg !9602
  %rem = urem i64 %28, %29, !dbg !9602
  %tobool26 = icmp ne i64 %rem, 0, !dbg !9602
  %lnot27 = xor i1 %tobool26, true, !dbg !9602
  %lnot29 = xor i1 %lnot27, true, !dbg !9602
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !9602
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !9602
  %tobool32 = icmp ne i64 %conv31, 0, !dbg !9602
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !9604

if.then33:                                        ; preds = %if.end25
  %30 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9605
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %30, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.38, i64 0, i64 0)) #12, !dbg !9605
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9607
  br label %return, !dbg !9607

if.end34:                                         ; preds = %if.end25
  %31 = load i64, i64* %buf_len.addr, align 8, !dbg !9608
  %32 = load i64, i64* %period_len.addr, align 8, !dbg !9609
  %div = udiv i64 %31, %32, !dbg !9610
  %add = add i64 %div, 1, !dbg !9611
  %conv35 = trunc i64 %add to i32, !dbg !9612
  store i32 %conv35, i32* %nslots, align 4, !dbg !9613
  %33 = load i32, i32* %nslots, align 4, !dbg !9614
  %cmp36 = icmp sgt i32 %33, 20, !dbg !9616
  br i1 %cmp36, label %if.then38, label %if.end45, !dbg !9617

if.then38:                                        ; preds = %if.end34
  %34 = load i32, i32* %burst, align 4, !dbg !9618
  %conv39 = zext i32 %34 to i64, !dbg !9618
  %35 = load i64, i64* %period_len.addr, align 8, !dbg !9621
  %cmp40 = icmp eq i64 %conv39, %35, !dbg !9622
  br i1 %cmp40, label %if.then42, label %if.else43, !dbg !9623

if.then42:                                        ; preds = %if.then38
  %36 = load i64, i64* %buf_len.addr, align 8, !dbg !9624
  store i64 %36, i64* %period_len.addr, align 8, !dbg !9626
  store i32 2, i32* %nslots, align 4, !dbg !9627
  store i8 1, i8* %use_intermediate, align 1, !dbg !9628
  br label %if.end44, !dbg !9629

if.else43:                                        ; preds = %if.then38
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9630
  br label %return, !dbg !9630

if.end44:                                         ; preds = %if.then42
  br label %if.end45, !dbg !9632

if.end45:                                         ; preds = %if.end44, %if.end34
  %37 = load i32, i32* %nslots, align 4, !dbg !9633
  %conv46 = sext i32 %37 to i64, !dbg !9633
  %call47 = call i64 @__ab_c_size(i64 %conv46, i64 48, i64 184) #11, !dbg !9633
  %call48 = call i8* @kzalloc(i64 %call47, i32 2592) #11, !dbg !9634
  %38 = bitcast i8* %call48 to %struct.edma_desc*, !dbg !9634
  store %struct.edma_desc* %38, %struct.edma_desc** %edesc, align 8, !dbg !9635
  %39 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9636
  %tobool49 = icmp ne %struct.edma_desc* %39, null, !dbg !9636
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !9638

if.then50:                                        ; preds = %if.end45
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9639
  br label %return, !dbg !9639

if.end51:                                         ; preds = %if.end45
  %40 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9640
  %cyclic = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %40, i32 0, i32 3, !dbg !9641
  store i32 1, i32* %cyclic, align 4, !dbg !9642
  %41 = load i32, i32* %nslots, align 4, !dbg !9643
  %42 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9644
  %pset_nr = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %42, i32 0, i32 6, !dbg !9645
  store i32 %41, i32* %pset_nr, align 8, !dbg !9646
  %43 = load i64, i64* %buf_len.addr, align 8, !dbg !9647
  %conv52 = trunc i64 %43 to i32, !dbg !9647
  %44 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9648
  %residue_stat = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %44, i32 0, i32 12, !dbg !9649
  store i32 %conv52, i32* %residue_stat, align 8, !dbg !9650
  %45 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9651
  %residue = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %45, i32 0, i32 11, !dbg !9652
  store i32 %conv52, i32* %residue, align 4, !dbg !9653
  %46 = load i32, i32* %direction.addr, align 4, !dbg !9654
  %47 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9655
  %direction53 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %47, i32 0, i32 2, !dbg !9656
  store i32 %46, i32* %direction53, align 8, !dbg !9657
  %48 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9658
  %49 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9659
  %echan54 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %49, i32 0, i32 7, !dbg !9660
  store %struct.edma_chan* %48, %struct.edma_chan** %echan54, align 8, !dbg !9661
  store i32 0, i32* %i, align 4, !dbg !9662
  br label %for.cond, !dbg !9664

for.cond:                                         ; preds = %for.inc, %if.end51
  %50 = load i32, i32* %i, align 4, !dbg !9665
  %51 = load i32, i32* %nslots, align 4, !dbg !9667
  %cmp55 = icmp slt i32 %50, %51, !dbg !9668
  br i1 %cmp55, label %for.body, label %for.end, !dbg !9669

for.body:                                         ; preds = %for.cond
  %52 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9670
  %slot = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %52, i32 0, i32 8, !dbg !9673
  %53 = load i32, i32* %i, align 4, !dbg !9674
  %idxprom = sext i32 %53 to i64, !dbg !9670
  %arrayidx = getelementptr [20 x i32], [20 x i32]* %slot, i64 0, i64 %idxprom, !dbg !9670
  %54 = load i32, i32* %arrayidx, align 4, !dbg !9670
  %cmp57 = icmp slt i32 %54, 0, !dbg !9675
  br i1 %cmp57, label %if.then59, label %if.end71, !dbg !9676

if.then59:                                        ; preds = %for.body
  %55 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9677
  %ecc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %55, i32 0, i32 3, !dbg !9679
  %56 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !9679
  %call60 = call i32 @edma_alloc_slot(%struct.edma_cc* %56, i32 -1) #11, !dbg !9680
  %57 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9681
  %slot61 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %57, i32 0, i32 8, !dbg !9682
  %58 = load i32, i32* %i, align 4, !dbg !9683
  %idxprom62 = sext i32 %58 to i64, !dbg !9681
  %arrayidx63 = getelementptr [20 x i32], [20 x i32]* %slot61, i64 0, i64 %idxprom62, !dbg !9681
  store i32 %call60, i32* %arrayidx63, align 4, !dbg !9684
  %59 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9685
  %slot64 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %59, i32 0, i32 8, !dbg !9687
  %60 = load i32, i32* %i, align 4, !dbg !9688
  %idxprom65 = sext i32 %60 to i64, !dbg !9685
  %arrayidx66 = getelementptr [20 x i32], [20 x i32]* %slot64, i64 0, i64 %idxprom65, !dbg !9685
  %61 = load i32, i32* %arrayidx66, align 4, !dbg !9685
  %cmp67 = icmp slt i32 %61, 0, !dbg !9689
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !9690

if.then69:                                        ; preds = %if.then59
  %62 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9691
  %63 = bitcast %struct.edma_desc* %62 to i8*, !dbg !9691
  call void @kfree(i8* %63) #11, !dbg !9693
  %64 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9694
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %64, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.edma_prep_dma_cyclic, i64 0, i64 0)) #12, !dbg !9694
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9695
  br label %return, !dbg !9695

if.end70:                                         ; preds = %if.then59
  br label %if.end71, !dbg !9696

if.end71:                                         ; preds = %if.end70, %for.body
  %65 = load i32, i32* %i, align 4, !dbg !9697
  %66 = load i32, i32* %nslots, align 4, !dbg !9699
  %sub = sub i32 %66, 1, !dbg !9700
  %cmp72 = icmp eq i32 %65, %sub, !dbg !9701
  br i1 %cmp72, label %if.then74, label %if.end79, !dbg !9702

if.then74:                                        ; preds = %if.end71
  %67 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9703
  %pset = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %67, i32 0, i32 13, !dbg !9705
  %68 = load i32, i32* %i, align 4, !dbg !9706
  %idxprom75 = sext i32 %68 to i64, !dbg !9703
  %arrayidx76 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset, i64 0, i64 %idxprom75, !dbg !9703
  %69 = bitcast %struct.edma_pset* %arrayidx76 to i8*, !dbg !9707
  %70 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9708
  %pset77 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %70, i32 0, i32 13, !dbg !9709
  %arrayidx78 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset77, i64 0, i64 0, !dbg !9708
  %71 = bitcast %struct.edma_pset* %arrayidx78 to i8*, !dbg !9707
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %71, i64 48, i1 false), !dbg !9707
  br label %for.end, !dbg !9710

if.end79:                                         ; preds = %if.end71
  %72 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !9711
  %73 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9712
  %pset80 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %73, i32 0, i32 13, !dbg !9713
  %74 = load i32, i32* %i, align 4, !dbg !9714
  %idxprom81 = sext i32 %74 to i64, !dbg !9712
  %arrayidx82 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset80, i64 0, i64 %idxprom81, !dbg !9712
  %75 = load i64, i64* %src_addr, align 8, !dbg !9715
  %76 = load i64, i64* %dst_addr, align 8, !dbg !9716
  %77 = load i32, i32* %burst, align 4, !dbg !9717
  %78 = load i32, i32* %dev_width, align 4, !dbg !9718
  %79 = load i64, i64* %period_len.addr, align 8, !dbg !9719
  %conv83 = trunc i64 %79 to i32, !dbg !9719
  %80 = load i32, i32* %direction.addr, align 4, !dbg !9720
  %call84 = call i32 @edma_config_pset(%struct.dma_chan* %72, %struct.edma_pset* %arrayidx82, i64 %75, i64 %76, i32 %77, i32 %78, i32 %conv83, i32 %80) #11, !dbg !9721
  store i32 %call84, i32* %ret, align 4, !dbg !9722
  %81 = load i32, i32* %ret, align 4, !dbg !9723
  %cmp85 = icmp slt i32 %81, 0, !dbg !9725
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !9726

if.then87:                                        ; preds = %if.end79
  %82 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9727
  %83 = bitcast %struct.edma_desc* %82 to i8*, !dbg !9727
  call void @kfree(i8* %83) #11, !dbg !9729
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9730
  br label %return, !dbg !9730

if.end88:                                         ; preds = %if.end79
  %84 = load i32, i32* %direction.addr, align 4, !dbg !9731
  %cmp89 = icmp eq i32 %84, 2, !dbg !9733
  br i1 %cmp89, label %if.then91, label %if.else93, !dbg !9734

if.then91:                                        ; preds = %if.end88
  %85 = load i64, i64* %period_len.addr, align 8, !dbg !9735
  %86 = load i64, i64* %dst_addr, align 8, !dbg !9736
  %add92 = add i64 %86, %85, !dbg !9736
  store i64 %add92, i64* %dst_addr, align 8, !dbg !9736
  br label %if.end95, !dbg !9737

if.else93:                                        ; preds = %if.end88
  %87 = load i64, i64* %period_len.addr, align 8, !dbg !9738
  %88 = load i64, i64* %src_addr, align 8, !dbg !9739
  %add94 = add i64 %88, %87, !dbg !9739
  store i64 %add94, i64* %src_addr, align 8, !dbg !9739
  br label %if.end95

if.end95:                                         ; preds = %if.else93, %if.then91
  %89 = load i32, i32* %ret, align 4, !dbg !9740
  %90 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9741
  %absync = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %90, i32 0, i32 5, !dbg !9742
  store i32 %89, i32* %absync, align 4, !dbg !9743
  %91 = load i64, i64* %tx_flags.addr, align 8, !dbg !9744
  %and = and i64 %91, 1, !dbg !9746
  %tobool96 = icmp ne i64 %and, 0, !dbg !9746
  br i1 %tobool96, label %if.then97, label %if.end114, !dbg !9747

if.then97:                                        ; preds = %if.end95
  %92 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9748
  %pset98 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %92, i32 0, i32 13, !dbg !9750
  %93 = load i32, i32* %i, align 4, !dbg !9751
  %idxprom99 = sext i32 %93 to i64, !dbg !9748
  %arrayidx100 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset98, i64 0, i64 %idxprom99, !dbg !9748
  %param = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %arrayidx100, i32 0, i32 2, !dbg !9752
  %opt = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %param, i32 0, i32 0, !dbg !9753
  %94 = load i32, i32* %opt, align 8, !dbg !9754
  %conv101 = zext i32 %94 to i64, !dbg !9754
  %or = or i64 %conv101, 1048576, !dbg !9754
  %conv102 = trunc i64 %or to i32, !dbg !9754
  store i32 %conv102, i32* %opt, align 8, !dbg !9754
  %95 = load i8, i8* %use_intermediate, align 1, !dbg !9755
  %tobool103 = trunc i8 %95 to i1, !dbg !9755
  br i1 %tobool103, label %if.then104, label %if.end113, !dbg !9757

if.then104:                                       ; preds = %if.then97
  %96 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9758
  %pset105 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %96, i32 0, i32 13, !dbg !9759
  %97 = load i32, i32* %i, align 4, !dbg !9760
  %idxprom106 = sext i32 %97 to i64, !dbg !9758
  %arrayidx107 = getelementptr [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset105, i64 0, i64 %idxprom106, !dbg !9758
  %param108 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %arrayidx107, i32 0, i32 2, !dbg !9761
  %opt109 = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %param108, i32 0, i32 0, !dbg !9762
  %98 = load i32, i32* %opt109, align 8, !dbg !9763
  %conv110 = zext i32 %98 to i64, !dbg !9763
  %or111 = or i64 %conv110, 2097152, !dbg !9763
  %conv112 = trunc i64 %or111 to i32, !dbg !9763
  store i32 %conv112, i32* %opt109, align 8, !dbg !9763
  br label %if.end113, !dbg !9758

if.end113:                                        ; preds = %if.then104, %if.then97
  br label %if.end114, !dbg !9764

if.end114:                                        ; preds = %if.end113, %if.end95
  br label %for.inc, !dbg !9765

for.inc:                                          ; preds = %if.end114
  %99 = load i32, i32* %i, align 4, !dbg !9766
  %inc = add i32 %99, 1, !dbg !9766
  store i32 %inc, i32* %i, align 4, !dbg !9766
  br label %for.cond, !dbg !9767, !llvm.loop !9768

for.end:                                          ; preds = %if.then74, %for.cond
  %100 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9770
  %tc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %100, i32 0, i32 4, !dbg !9772
  %101 = load %struct.edma_tc*, %struct.edma_tc** %tc, align 8, !dbg !9772
  %tobool115 = icmp ne %struct.edma_tc* %101, null, !dbg !9770
  br i1 %tobool115, label %if.end117, label %if.then116, !dbg !9773

if.then116:                                       ; preds = %for.end
  %102 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9774
  call void @edma_assign_channel_eventq(%struct.edma_chan* %102, i32 0) #11, !dbg !9775
  br label %if.end117, !dbg !9775

if.end117:                                        ; preds = %if.then116, %for.end
  %103 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9776
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %103, i32 0, i32 0, !dbg !9777
  %104 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !9778
  %vdesc = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %104, i32 0, i32 0, !dbg !9779
  %105 = load i64, i64* %tx_flags.addr, align 8, !dbg !9780
  %call118 = call %struct.dma_async_tx_descriptor* @vchan_tx_prep(%struct.virt_dma_chan* %vchan, %struct.virt_dma_desc* %vdesc, i64 %105) #11, !dbg !9781
  store %struct.dma_async_tx_descriptor* %call118, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9782
  br label %return, !dbg !9782

return:                                           ; preds = %if.end117, %if.then87, %if.then69, %if.then50, %if.else43, %if.then33, %if.then24, %if.else19, %if.then
  %106 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !9783
  ret %struct.dma_async_tx_descriptor* %106, !dbg !9783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_alloc_chan_resources(%struct.dma_chan* %chan) #0 !dbg !9784 {
entry:
  %retval = alloca i32, align 4
  %chan.addr = alloca %struct.dma_chan*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %dev = alloca %struct.device*, align 8
  %eventq_no = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !9785, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !9787, metadata !DIExpression()), !dbg !9788
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !9789
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %0) #11, !dbg !9790
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !9788
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !9791, metadata !DIExpression()), !dbg !9792
  %1 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9793
  %ecc1 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %1, i32 0, i32 3, !dbg !9794
  %2 = load %struct.edma_cc*, %struct.edma_cc** %ecc1, align 8, !dbg !9794
  store %struct.edma_cc* %2, %struct.edma_cc** %ecc, align 8, !dbg !9792
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9795, metadata !DIExpression()), !dbg !9796
  %3 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !9797
  %dev2 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %3, i32 0, i32 0, !dbg !9798
  %4 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !9798
  store %struct.device* %4, %struct.device** %dev, align 8, !dbg !9796
  call void @llvm.dbg.declare(metadata i32* %eventq_no, metadata !9799, metadata !DIExpression()), !dbg !9800
  store i32 -1, i32* %eventq_no, align 4, !dbg !9800
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9801, metadata !DIExpression()), !dbg !9802
  %5 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9803
  %tc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %5, i32 0, i32 4, !dbg !9805
  %6 = load %struct.edma_tc*, %struct.edma_tc** %tc, align 8, !dbg !9805
  %tobool = icmp ne %struct.edma_tc* %6, null, !dbg !9803
  br i1 %tobool, label %if.then, label %if.else, !dbg !9806

if.then:                                          ; preds = %entry
  %7 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9807
  %tc3 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %7, i32 0, i32 4, !dbg !9809
  %8 = load %struct.edma_tc*, %struct.edma_tc** %tc3, align 8, !dbg !9809
  %id = getelementptr inbounds %struct.edma_tc, %struct.edma_tc* %8, i32 0, i32 1, !dbg !9810
  %9 = load i16, i16* %id, align 8, !dbg !9810
  %conv = zext i16 %9 to i32, !dbg !9807
  store i32 %conv, i32* %eventq_no, align 4, !dbg !9811
  br label %if.end11, !dbg !9812

if.else:                                          ; preds = %entry
  %10 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !9813
  %tc_list = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %10, i32 0, i32 19, !dbg !9815
  %11 = load %struct.edma_tc*, %struct.edma_tc** %tc_list, align 8, !dbg !9815
  %tobool4 = icmp ne %struct.edma_tc* %11, null, !dbg !9813
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !9816

if.then5:                                         ; preds = %if.else
  %12 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !9817
  %tc_list6 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %12, i32 0, i32 19, !dbg !9819
  %13 = load %struct.edma_tc*, %struct.edma_tc** %tc_list6, align 8, !dbg !9819
  %14 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !9820
  %info = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %14, i32 0, i32 1, !dbg !9821
  %15 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !9821
  %default_queue = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %15, i32 0, i32 0, !dbg !9822
  %16 = load i32, i32* %default_queue, align 8, !dbg !9822
  %idxprom = sext i32 %16 to i64, !dbg !9817
  %arrayidx = getelementptr %struct.edma_tc, %struct.edma_tc* %13, i64 %idxprom, !dbg !9817
  %17 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9823
  %tc7 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %17, i32 0, i32 4, !dbg !9824
  store %struct.edma_tc* %arrayidx, %struct.edma_tc** %tc7, align 8, !dbg !9825
  %18 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9826
  %tc8 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %18, i32 0, i32 4, !dbg !9827
  %19 = load %struct.edma_tc*, %struct.edma_tc** %tc8, align 8, !dbg !9827
  %id9 = getelementptr inbounds %struct.edma_tc, %struct.edma_tc* %19, i32 0, i32 1, !dbg !9828
  %20 = load i16, i16* %id9, align 8, !dbg !9828
  %conv10 = zext i16 %20 to i32, !dbg !9826
  store i32 %conv10, i32* %eventq_no, align 4, !dbg !9829
  br label %if.end, !dbg !9830

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %21 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9831
  %22 = load i32, i32* %eventq_no, align 4, !dbg !9832
  %call12 = call i32 @edma_alloc_channel(%struct.edma_chan* %21, i32 %22) #11, !dbg !9833
  store i32 %call12, i32* %ret, align 4, !dbg !9834
  %23 = load i32, i32* %ret, align 4, !dbg !9835
  %tobool13 = icmp ne i32 %23, 0, !dbg !9835
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !9837

if.then14:                                        ; preds = %if.end11
  %24 = load i32, i32* %ret, align 4, !dbg !9838
  store i32 %24, i32* %retval, align 4, !dbg !9839
  br label %return, !dbg !9839

if.end15:                                         ; preds = %if.end11
  %25 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !9840
  %26 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9841
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %26, i32 0, i32 5, !dbg !9842
  %27 = load i32, i32* %ch_num, align 8, !dbg !9842
  %call16 = call i32 @edma_alloc_slot(%struct.edma_cc* %25, i32 %27) #11, !dbg !9843
  %28 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9844
  %slot = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %28, i32 0, i32 8, !dbg !9845
  %arrayidx17 = getelementptr [20 x i32], [20 x i32]* %slot, i64 0, i64 0, !dbg !9844
  store i32 %call16, i32* %arrayidx17, align 8, !dbg !9846
  %29 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9847
  %slot18 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %29, i32 0, i32 8, !dbg !9849
  %arrayidx19 = getelementptr [20 x i32], [20 x i32]* %slot18, i64 0, i64 0, !dbg !9847
  %30 = load i32, i32* %arrayidx19, align 8, !dbg !9847
  %cmp = icmp slt i32 %30, 0, !dbg !9850
  br i1 %cmp, label %if.then21, label %if.end25, !dbg !9851

if.then21:                                        ; preds = %if.end15
  %31 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9852
  %32 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9852
  %ch_num22 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %32, i32 0, i32 5, !dbg !9852
  %33 = load i32, i32* %ch_num22, align 8, !dbg !9852
  %and = and i32 %33, 65535, !dbg !9852
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %31, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.39, i64 0, i64 0), i32 %and) #12, !dbg !9852
  %34 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9854
  %slot23 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %34, i32 0, i32 8, !dbg !9855
  %arrayidx24 = getelementptr [20 x i32], [20 x i32]* %slot23, i64 0, i64 0, !dbg !9854
  %35 = load i32, i32* %arrayidx24, align 8, !dbg !9854
  store i32 %35, i32* %ret, align 4, !dbg !9856
  br label %err_slot, !dbg !9857

if.end25:                                         ; preds = %if.end15
  %36 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9858
  %37 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9859
  %slot26 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %37, i32 0, i32 8, !dbg !9860
  %arrayidx27 = getelementptr [20 x i32], [20 x i32]* %slot26, i64 0, i64 0, !dbg !9859
  %38 = load i32, i32* %arrayidx27, align 8, !dbg !9859
  call void @edma_set_chmap(%struct.edma_chan* %36, i32 %38) #11, !dbg !9861
  %39 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9862
  %alloced = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %39, i32 0, i32 6, !dbg !9863
  store i8 1, i8* %alloced, align 4, !dbg !9864
  store i32 0, i32* %retval, align 4, !dbg !9865
  br label %return, !dbg !9865

err_slot:                                         ; preds = %if.then21
  call void @llvm.dbg.label(metadata !9866), !dbg !9867
  %40 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9868
  call void @edma_free_channel(%struct.edma_chan* %40) #11, !dbg !9869
  %41 = load i32, i32* %ret, align 4, !dbg !9870
  store i32 %41, i32* %retval, align 4, !dbg !9871
  br label %return, !dbg !9871

return:                                           ; preds = %err_slot, %if.end25, %if.then14
  %42 = load i32, i32* %retval, align 4, !dbg !9872
  ret i32 %42, !dbg !9872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_free_chan_resources(%struct.dma_chan* %chan) #0 !dbg !9873 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %dev = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !9874, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !9876, metadata !DIExpression()), !dbg !9877
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !9878
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %0) #11, !dbg !9879
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !9877
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9880, metadata !DIExpression()), !dbg !9881
  %1 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9882
  %ecc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %1, i32 0, i32 3, !dbg !9883
  %2 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !9883
  %dev1 = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %2, i32 0, i32 0, !dbg !9884
  %3 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !9884
  store %struct.device* %3, %struct.device** %dev, align 8, !dbg !9881
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9885, metadata !DIExpression()), !dbg !9886
  %4 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9887
  call void @edma_stop(%struct.edma_chan* %4) #11, !dbg !9888
  %5 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9889
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %5, i32 0, i32 0, !dbg !9890
  call void @vchan_free_chan_resources(%struct.virt_dma_chan* %vchan) #11, !dbg !9891
  store i32 0, i32* %i, align 4, !dbg !9892
  br label %for.cond, !dbg !9894

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !9895
  %cmp = icmp slt i32 %6, 20, !dbg !9897
  br i1 %cmp, label %for.body, label %for.end, !dbg !9898

for.body:                                         ; preds = %for.cond
  %7 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9899
  %slot = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %7, i32 0, i32 8, !dbg !9902
  %8 = load i32, i32* %i, align 4, !dbg !9903
  %idxprom = sext i32 %8 to i64, !dbg !9899
  %arrayidx = getelementptr [20 x i32], [20 x i32]* %slot, i64 0, i64 %idxprom, !dbg !9899
  %9 = load i32, i32* %arrayidx, align 4, !dbg !9899
  %cmp2 = icmp sge i32 %9, 0, !dbg !9904
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9905

if.then:                                          ; preds = %for.body
  %10 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9906
  %ecc3 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %10, i32 0, i32 3, !dbg !9908
  %11 = load %struct.edma_cc*, %struct.edma_cc** %ecc3, align 8, !dbg !9908
  %12 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9909
  %slot4 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %12, i32 0, i32 8, !dbg !9910
  %13 = load i32, i32* %i, align 4, !dbg !9911
  %idxprom5 = sext i32 %13 to i64, !dbg !9909
  %arrayidx6 = getelementptr [20 x i32], [20 x i32]* %slot4, i64 0, i64 %idxprom5, !dbg !9909
  %14 = load i32, i32* %arrayidx6, align 4, !dbg !9909
  call void @edma_free_slot(%struct.edma_cc* %11, i32 %14) #11, !dbg !9912
  %15 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9913
  %slot7 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %15, i32 0, i32 8, !dbg !9914
  %16 = load i32, i32* %i, align 4, !dbg !9915
  %idxprom8 = sext i32 %16 to i64, !dbg !9913
  %arrayidx9 = getelementptr [20 x i32], [20 x i32]* %slot7, i64 0, i64 %idxprom8, !dbg !9913
  store i32 -1, i32* %arrayidx9, align 4, !dbg !9916
  br label %if.end, !dbg !9917

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !9918

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %i, align 4, !dbg !9919
  %inc = add i32 %17, 1, !dbg !9919
  store i32 %inc, i32* %i, align 4, !dbg !9919
  br label %for.cond, !dbg !9920, !llvm.loop !9921

for.end:                                          ; preds = %for.cond
  %18 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9923
  %19 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9924
  %ecc10 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %19, i32 0, i32 3, !dbg !9925
  %20 = load %struct.edma_cc*, %struct.edma_cc** %ecc10, align 8, !dbg !9925
  %dummy_slot = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %20, i32 0, i32 20, !dbg !9926
  %21 = load i32, i32* %dummy_slot, align 8, !dbg !9926
  call void @edma_set_chmap(%struct.edma_chan* %18, i32 %21) #11, !dbg !9927
  %22 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9928
  %alloced = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %22, i32 0, i32 6, !dbg !9930
  %23 = load i8, i8* %alloced, align 4, !dbg !9930
  %tobool = trunc i8 %23 to i1, !dbg !9930
  br i1 %tobool, label %if.then11, label %if.end13, !dbg !9931

if.then11:                                        ; preds = %for.end
  %24 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9932
  call void @edma_free_channel(%struct.edma_chan* %24) #11, !dbg !9934
  %25 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9935
  %alloced12 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %25, i32 0, i32 6, !dbg !9936
  store i8 0, i8* %alloced12, align 4, !dbg !9937
  br label %if.end13, !dbg !9938

if.end13:                                         ; preds = %if.then11, %for.end
  %26 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9939
  %tc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %26, i32 0, i32 4, !dbg !9940
  store %struct.edma_tc* null, %struct.edma_tc** %tc, align 8, !dbg !9941
  %27 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9942
  %hw_triggered = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %27, i32 0, i32 7, !dbg !9943
  store i8 0, i8* %hw_triggered, align 1, !dbg !9944
  ret void, !dbg !9945
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_issue_pending(%struct.dma_chan* %chan) #0 !dbg !9946 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !9947, metadata !DIExpression()), !dbg !9951
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9953, metadata !DIExpression()), !dbg !9954
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9955, metadata !DIExpression()), !dbg !9960
  %chan.addr = alloca %struct.dma_chan*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !9967, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !9969, metadata !DIExpression()), !dbg !9970
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !9971
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %0) #11, !dbg !9972
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !9970
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9973, metadata !DIExpression()), !dbg !9974
  br label %do.body, !dbg !9975

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9976

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9977, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9980, metadata !DIExpression()), !dbg !9979
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9979
  %conv = zext i1 %cmp to i32, !dbg !9979
  store i32 1, i32* %tmp, align 4, !dbg !9979
  %1 = load i32, i32* %tmp, align 4, !dbg !9979
  br label %do.body2, !dbg !9981

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9982

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9983

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9985, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9989, metadata !DIExpression()), !dbg !9988
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9988
  %conv8 = zext i1 %cmp7 to i32, !dbg !9988
  store i32 1, i32* %tmp9, align 4, !dbg !9988
  %2 = load i32, i32* %tmp9, align 4, !dbg !9988
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !9990
  store i64 %call10, i64* %flags, align 8, !dbg !9990
  br label %do.end, !dbg !9990

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !9983

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !9982

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9991, !srcloc !9992
  br label %do.body13, !dbg !9991

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9993
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %3, i32 0, i32 0, !dbg !9993
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan, i32 0, i32 3, !dbg !9993
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9994
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !9995
  %rlock.i = bitcast %union.anon.3* %5 to %struct.raw_spinlock*, !dbg !9995
  br label %do.end15, !dbg !9993

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !9991

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9982

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9981

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9976

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !9996
  %vchan20 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %6, i32 0, i32 0, !dbg !9998
  %call21 = call zeroext i1 @vchan_issue_pending(%struct.virt_dma_chan* %vchan20) #11, !dbg !9999
  br i1 %call21, label %land.lhs.true, label %if.end, !dbg !10000

land.lhs.true:                                    ; preds = %do.end19
  %7 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10001
  %edesc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %7, i32 0, i32 2, !dbg !10002
  %8 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !10002
  %tobool = icmp ne %struct.edma_desc* %8, null, !dbg !10001
  br i1 %tobool, label %if.end, label %if.then, !dbg !10003

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10004
  call void @edma_execute(%struct.edma_chan* %9) #11, !dbg !10005
  br label %if.end, !dbg !10005

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end19
  %10 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10006
  %vchan23 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %10, i32 0, i32 0, !dbg !10007
  %lock24 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan23, i32 0, i32 3, !dbg !10008
  %11 = load i64, i64* %flags, align 8, !dbg !10009
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !376, metadata !10010, metadata !DIExpression()) #10, !dbg !10013
  call void @llvm.dbg.declare(metadata !376, metadata !10014, metadata !DIExpression()) #10, !dbg !10013
  store i32 1, i32* %tmp.i, align 4, !dbg !10013
  %12 = load i32, i32* %tmp.i, align 4, !dbg !10013
  call void @llvm.dbg.declare(metadata !376, metadata !10015, metadata !DIExpression()) #10, !dbg !10020
  call void @llvm.dbg.declare(metadata !376, metadata !10021, metadata !DIExpression()) #10, !dbg !10020
  store i32 1, i32* %tmp8.i, align 4, !dbg !10020
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !10020
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !10022
  call void @arch_local_irq_restore(i64 %14) #13, !dbg !10022
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10023, !srcloc !10025
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !10026
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !10026
  %rlock.i26 = bitcast %union.anon.3* %16 to %struct.raw_spinlock*, !dbg !10026
  ret void, !dbg !10028
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_tx_status(%struct.dma_chan* %chan, i32 %cookie, %struct.dma_tx_state* %txstate) #0 !dbg !10029 {
entry:
  %lock.addr.i71 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i71, metadata !9947, metadata !DIExpression()), !dbg !10030
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9953, metadata !DIExpression()), !dbg !10032
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9955, metadata !DIExpression()), !dbg !10033
  %retval = alloca i32, align 4
  %chan.addr = alloca %struct.dma_chan*, align 8
  %cookie.addr = alloca i32, align 4
  %txstate.addr = alloca %struct.dma_tx_state*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %txstate_tmp = alloca %struct.dma_tx_state, align 4
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %vdesc32 = alloca %struct.virt_dma_desc*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !10040, metadata !DIExpression()), !dbg !10041
  store i32 %cookie, i32* %cookie.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cookie.addr, metadata !10042, metadata !DIExpression()), !dbg !10043
  store %struct.dma_tx_state* %txstate, %struct.dma_tx_state** %txstate.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_tx_state** %txstate.addr, metadata !10044, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !10046, metadata !DIExpression()), !dbg !10047
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10048
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %0) #11, !dbg !10049
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !10047
  call void @llvm.dbg.declare(metadata %struct.dma_tx_state* %txstate_tmp, metadata !10050, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10052, metadata !DIExpression()), !dbg !10053
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10054, metadata !DIExpression()), !dbg !10055
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10056
  %2 = load i32, i32* %cookie.addr, align 4, !dbg !10057
  %3 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !10058
  %call1 = call i32 @dma_cookie_status(%struct.dma_chan* %1, i32 %2, %struct.dma_tx_state* %3) #11, !dbg !10059
  store i32 %call1, i32* %ret, align 4, !dbg !10060
  %4 = load i32, i32* %ret, align 4, !dbg !10061
  %cmp = icmp eq i32 %4, 0, !dbg !10063
  br i1 %cmp, label %if.then, label %if.end, !dbg !10064

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !10065
  store i32 %5, i32* %retval, align 4, !dbg !10066
  br label %return, !dbg !10066

if.end:                                           ; preds = %entry
  %6 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !10067
  %tobool = icmp ne %struct.dma_tx_state* %6, null, !dbg !10067
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !10069

if.then2:                                         ; preds = %if.end
  store %struct.dma_tx_state* %txstate_tmp, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !10070
  br label %if.end3, !dbg !10071

if.end3:                                          ; preds = %if.then2, %if.end
  br label %do.body, !dbg !10072

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !10073

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10074, metadata !DIExpression()), !dbg !10076
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10077, metadata !DIExpression()), !dbg !10076
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !10076
  %conv = zext i1 %cmp5 to i32, !dbg !10076
  store i32 1, i32* %tmp, align 4, !dbg !10076
  %7 = load i32, i32* %tmp, align 4, !dbg !10076
  br label %do.body6, !dbg !10078

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !10079

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !10080

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !10082, metadata !DIExpression()), !dbg !10085
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !10086, metadata !DIExpression()), !dbg !10085
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !10085
  %conv12 = zext i1 %cmp11 to i32, !dbg !10085
  store i32 1, i32* %tmp13, align 4, !dbg !10085
  %8 = load i32, i32* %tmp13, align 4, !dbg !10085
  %call14 = call i64 @arch_local_irq_save() #11, !dbg !10087
  store i64 %call14, i64* %flags, align 8, !dbg !10087
  br label %do.end, !dbg !10087

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !10080

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !10079

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10088, !srcloc !10089
  br label %do.body17, !dbg !10088

do.body17:                                        ; preds = %do.body16
  %9 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10090
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %9, i32 0, i32 0, !dbg !10090
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan, i32 0, i32 3, !dbg !10090
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10091
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !10092
  %rlock.i = bitcast %union.anon.3* %11 to %struct.raw_spinlock*, !dbg !10092
  br label %do.end19, !dbg !10090

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !10088

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10079

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10078

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !10073

do.end23:                                         ; preds = %do.end22
  %12 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10093
  %edesc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %12, i32 0, i32 2, !dbg !10095
  %13 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !10095
  %tobool24 = icmp ne %struct.edma_desc* %13, null, !dbg !10093
  br i1 %tobool24, label %land.lhs.true, label %if.else, !dbg !10096

land.lhs.true:                                    ; preds = %do.end23
  %14 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10097
  %edesc25 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %14, i32 0, i32 2, !dbg !10098
  %15 = load %struct.edma_desc*, %struct.edma_desc** %edesc25, align 8, !dbg !10098
  %vdesc = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %15, i32 0, i32 0, !dbg !10099
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %vdesc, i32 0, i32 0, !dbg !10100
  %cookie26 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx, i32 0, i32 0, !dbg !10101
  %16 = load i32, i32* %cookie26, align 8, !dbg !10101
  %17 = load i32, i32* %cookie.addr, align 4, !dbg !10102
  %cmp27 = icmp eq i32 %16, %17, !dbg !10103
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !10104

if.then29:                                        ; preds = %land.lhs.true
  %18 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10105
  %edesc30 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %18, i32 0, i32 2, !dbg !10107
  %19 = load %struct.edma_desc*, %struct.edma_desc** %edesc30, align 8, !dbg !10107
  %call31 = call i32 @edma_residue(%struct.edma_desc* %19) #11, !dbg !10108
  %20 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !10109
  %residue = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %20, i32 0, i32 2, !dbg !10110
  store i32 %call31, i32* %residue, align 4, !dbg !10111
  br label %if.end44, !dbg !10112

if.else:                                          ; preds = %land.lhs.true, %do.end23
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vdesc32, metadata !10113, metadata !DIExpression()), !dbg !10115
  %21 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10116
  %vchan33 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %21, i32 0, i32 0, !dbg !10117
  %22 = load i32, i32* %cookie.addr, align 4, !dbg !10118
  %call34 = call %struct.virt_dma_desc* @vchan_find_desc(%struct.virt_dma_chan* %vchan33, i32 %22) #11, !dbg !10119
  store %struct.virt_dma_desc* %call34, %struct.virt_dma_desc** %vdesc32, align 8, !dbg !10115
  %23 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vdesc32, align 8, !dbg !10120
  %tobool35 = icmp ne %struct.virt_dma_desc* %23, null, !dbg !10120
  br i1 %tobool35, label %if.then36, label %if.else41, !dbg !10122

if.then36:                                        ; preds = %if.else
  %24 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vdesc32, align 8, !dbg !10123
  %tx37 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %24, i32 0, i32 0, !dbg !10124
  %call38 = call %struct.edma_desc* @to_edma_desc(%struct.dma_async_tx_descriptor* %tx37) #11, !dbg !10125
  %residue39 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %call38, i32 0, i32 11, !dbg !10126
  %25 = load i32, i32* %residue39, align 4, !dbg !10126
  %26 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !10127
  %residue40 = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %26, i32 0, i32 2, !dbg !10128
  store i32 %25, i32* %residue40, align 4, !dbg !10129
  br label %if.end43, !dbg !10127

if.else41:                                        ; preds = %if.else
  %27 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !10130
  %residue42 = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %27, i32 0, i32 2, !dbg !10131
  store i32 0, i32* %residue42, align 4, !dbg !10132
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.then36
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then29
  %28 = load i32, i32* %ret, align 4, !dbg !10133
  %cmp45 = icmp ne i32 %28, 0, !dbg !10135
  br i1 %cmp45, label %land.lhs.true47, label %if.end68, !dbg !10136

land.lhs.true47:                                  ; preds = %if.end44
  %29 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !10137
  %residue48 = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %29, i32 0, i32 2, !dbg !10138
  %30 = load i32, i32* %residue48, align 4, !dbg !10138
  %tobool49 = icmp ne i32 %30, 0, !dbg !10137
  br i1 %tobool49, label %if.end68, label %land.lhs.true50, !dbg !10139

land.lhs.true50:                                  ; preds = %land.lhs.true47
  %31 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10140
  %edesc51 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %31, i32 0, i32 2, !dbg !10141
  %32 = load %struct.edma_desc*, %struct.edma_desc** %edesc51, align 8, !dbg !10141
  %tobool52 = icmp ne %struct.edma_desc* %32, null, !dbg !10140
  br i1 %tobool52, label %land.lhs.true53, label %if.end68, !dbg !10142

land.lhs.true53:                                  ; preds = %land.lhs.true50
  %33 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10143
  %edesc54 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %33, i32 0, i32 2, !dbg !10144
  %34 = load %struct.edma_desc*, %struct.edma_desc** %edesc54, align 8, !dbg !10144
  %polled = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %34, i32 0, i32 4, !dbg !10145
  %35 = load i8, i8* %polled, align 8, !dbg !10145
  %tobool55 = trunc i8 %35 to i1, !dbg !10145
  br i1 %tobool55, label %land.lhs.true57, label %if.end68, !dbg !10146

land.lhs.true57:                                  ; preds = %land.lhs.true53
  %36 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10147
  %edesc58 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %36, i32 0, i32 2, !dbg !10148
  %37 = load %struct.edma_desc*, %struct.edma_desc** %edesc58, align 8, !dbg !10148
  %vdesc59 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %37, i32 0, i32 0, !dbg !10149
  %tx60 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %vdesc59, i32 0, i32 0, !dbg !10150
  %cookie61 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx60, i32 0, i32 0, !dbg !10151
  %38 = load i32, i32* %cookie61, align 8, !dbg !10151
  %39 = load i32, i32* %cookie.addr, align 4, !dbg !10152
  %cmp62 = icmp eq i32 %38, %39, !dbg !10153
  br i1 %cmp62, label %if.then64, label %if.end68, !dbg !10154

if.then64:                                        ; preds = %land.lhs.true57
  %40 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10155
  call void @edma_stop(%struct.edma_chan* %40) #11, !dbg !10157
  %41 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10158
  %edesc65 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %41, i32 0, i32 2, !dbg !10159
  %42 = load %struct.edma_desc*, %struct.edma_desc** %edesc65, align 8, !dbg !10159
  %vdesc66 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %42, i32 0, i32 0, !dbg !10160
  call void @vchan_cookie_complete(%struct.virt_dma_desc* %vdesc66) #11, !dbg !10161
  %43 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10162
  %edesc67 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %43, i32 0, i32 2, !dbg !10163
  store %struct.edma_desc* null, %struct.edma_desc** %edesc67, align 8, !dbg !10164
  %44 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10165
  call void @edma_execute(%struct.edma_chan* %44) #11, !dbg !10166
  store i32 0, i32* %ret, align 4, !dbg !10167
  br label %if.end68, !dbg !10168

if.end68:                                         ; preds = %if.then64, %land.lhs.true57, %land.lhs.true53, %land.lhs.true50, %land.lhs.true47, %if.end44
  %45 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10169
  %vchan69 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %45, i32 0, i32 0, !dbg !10170
  %lock70 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan69, i32 0, i32 3, !dbg !10171
  %46 = load i64, i64* %flags, align 8, !dbg !10172
  store %struct.spinlock* %lock70, %struct.spinlock** %lock.addr.i71, align 8
  store i64 %46, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !376, metadata !10010, metadata !DIExpression()) #10, !dbg !10173
  call void @llvm.dbg.declare(metadata !376, metadata !10014, metadata !DIExpression()) #10, !dbg !10173
  store i32 1, i32* %tmp.i, align 4, !dbg !10173
  %47 = load i32, i32* %tmp.i, align 4, !dbg !10173
  call void @llvm.dbg.declare(metadata !376, metadata !10015, metadata !DIExpression()) #10, !dbg !10174
  call void @llvm.dbg.declare(metadata !376, metadata !10021, metadata !DIExpression()) #10, !dbg !10174
  store i32 1, i32* %tmp8.i, align 4, !dbg !10174
  %48 = load i32, i32* %tmp8.i, align 4, !dbg !10174
  %49 = load i64, i64* %flags.addr.i, align 8, !dbg !10175
  call void @arch_local_irq_restore(i64 %49) #13, !dbg !10175
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10176, !srcloc !10025
  %50 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i71, align 8, !dbg !10177
  %51 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %50, i32 0, i32 0, !dbg !10177
  %rlock.i72 = bitcast %union.anon.3* %51 to %struct.raw_spinlock*, !dbg !10177
  %52 = load i32, i32* %ret, align 4, !dbg !10178
  store i32 %52, i32* %retval, align 4, !dbg !10179
  br label %return, !dbg !10179

return:                                           ; preds = %if.end68, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !10180
  ret i32 %53, !dbg !10180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_slave_config(%struct.dma_chan* %chan, %struct.dma_slave_config* %cfg) #0 !dbg !10181 {
entry:
  %retval = alloca i32, align 4
  %chan.addr = alloca %struct.dma_chan*, align 8
  %cfg.addr = alloca %struct.dma_slave_config*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !10182, metadata !DIExpression()), !dbg !10183
  store %struct.dma_slave_config* %cfg, %struct.dma_slave_config** %cfg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_slave_config** %cfg.addr, metadata !10184, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !10186, metadata !DIExpression()), !dbg !10187
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10188
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %0) #11, !dbg !10189
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !10187
  %1 = load %struct.dma_slave_config*, %struct.dma_slave_config** %cfg.addr, align 8, !dbg !10190
  %src_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %1, i32 0, i32 3, !dbg !10192
  %2 = load i32, i32* %src_addr_width, align 8, !dbg !10192
  %cmp = icmp eq i32 %2, 8, !dbg !10193
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10194

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.dma_slave_config*, %struct.dma_slave_config** %cfg.addr, align 8, !dbg !10195
  %dst_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %3, i32 0, i32 4, !dbg !10196
  %4 = load i32, i32* %dst_addr_width, align 4, !dbg !10196
  %cmp1 = icmp eq i32 %4, 8, !dbg !10197
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10198

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !10199
  br label %return, !dbg !10199

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.dma_slave_config*, %struct.dma_slave_config** %cfg.addr, align 8, !dbg !10200
  %src_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %5, i32 0, i32 5, !dbg !10202
  %6 = load i32, i32* %src_maxburst, align 8, !dbg !10202
  %7 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10203
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %7, i32 0, i32 0, !dbg !10204
  %8 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !10204
  %max_burst = getelementptr inbounds %struct.dma_device, %struct.dma_device* %8, i32 0, i32 23, !dbg !10205
  %9 = load i32, i32* %max_burst, align 8, !dbg !10205
  %cmp2 = icmp ugt i32 %6, %9, !dbg !10206
  br i1 %cmp2, label %if.then7, label %lor.lhs.false3, !dbg !10207

lor.lhs.false3:                                   ; preds = %if.end
  %10 = load %struct.dma_slave_config*, %struct.dma_slave_config** %cfg.addr, align 8, !dbg !10208
  %dst_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %10, i32 0, i32 6, !dbg !10209
  %11 = load i32, i32* %dst_maxburst, align 4, !dbg !10209
  %12 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10210
  %device4 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %12, i32 0, i32 0, !dbg !10211
  %13 = load %struct.dma_device*, %struct.dma_device** %device4, align 8, !dbg !10211
  %max_burst5 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %13, i32 0, i32 23, !dbg !10212
  %14 = load i32, i32* %max_burst5, align 8, !dbg !10212
  %cmp6 = icmp ugt i32 %11, %14, !dbg !10213
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10214

if.then7:                                         ; preds = %lor.lhs.false3, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !10215
  br label %return, !dbg !10215

if.end8:                                          ; preds = %lor.lhs.false3
  %15 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10216
  %cfg9 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %15, i32 0, i32 10, !dbg !10217
  %16 = bitcast %struct.dma_slave_config* %cfg9 to i8*, !dbg !10218
  %17 = load %struct.dma_slave_config*, %struct.dma_slave_config** %cfg.addr, align 8, !dbg !10219
  %18 = bitcast %struct.dma_slave_config* %17 to i8*, !dbg !10218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %18, i64 56, i1 false), !dbg !10218
  store i32 0, i32* %retval, align 4, !dbg !10220
  br label %return, !dbg !10220

return:                                           ; preds = %if.end8, %if.then7, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !10221
  ret i32 %19, !dbg !10221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_dma_pause(%struct.dma_chan* %chan) #0 !dbg !10222 {
entry:
  %retval = alloca i32, align 4
  %chan.addr = alloca %struct.dma_chan*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !10223, metadata !DIExpression()), !dbg !10224
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !10225, metadata !DIExpression()), !dbg !10226
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10227
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %0) #11, !dbg !10228
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !10226
  %1 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10229
  %edesc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %1, i32 0, i32 2, !dbg !10231
  %2 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !10231
  %tobool = icmp ne %struct.edma_desc* %2, null, !dbg !10229
  br i1 %tobool, label %if.end, label %if.then, !dbg !10232

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10233
  br label %return, !dbg !10233

if.end:                                           ; preds = %entry
  %3 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10234
  call void @edma_pause(%struct.edma_chan* %3) #11, !dbg !10235
  store i32 0, i32* %retval, align 4, !dbg !10236
  br label %return, !dbg !10236

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !10237
  ret i32 %4, !dbg !10237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_dma_resume(%struct.dma_chan* %chan) #0 !dbg !10238 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !10239, metadata !DIExpression()), !dbg !10240
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !10241, metadata !DIExpression()), !dbg !10242
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10243
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %0) #11, !dbg !10244
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !10242
  %1 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10245
  call void @edma_resume(%struct.edma_chan* %1) #11, !dbg !10246
  ret i32 0, !dbg !10247
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_terminate_all(%struct.dma_chan* %chan) #0 !dbg !10248 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !9947, metadata !DIExpression()), !dbg !10249
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9953, metadata !DIExpression()), !dbg !10251
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9955, metadata !DIExpression()), !dbg !10252
  %chan.addr = alloca %struct.dma_chan*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %flags = alloca i64, align 8
  %head = alloca %struct.list_head, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !10259, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !10261, metadata !DIExpression()), !dbg !10262
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10263
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %0) #11, !dbg !10264
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !10262
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10265, metadata !DIExpression()), !dbg !10266
  call void @llvm.dbg.declare(metadata %struct.list_head* %head, metadata !10267, metadata !DIExpression()), !dbg !10268
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0, !dbg !10268
  store %struct.list_head* %head, %struct.list_head** %next, align 8, !dbg !10268
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1, !dbg !10268
  store %struct.list_head* %head, %struct.list_head** %prev, align 8, !dbg !10268
  br label %do.body, !dbg !10269

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10270

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10271, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10274, metadata !DIExpression()), !dbg !10273
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10273
  %conv = zext i1 %cmp to i32, !dbg !10273
  store i32 1, i32* %tmp, align 4, !dbg !10273
  %1 = load i32, i32* %tmp, align 4, !dbg !10273
  br label %do.body2, !dbg !10275

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10276

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10277

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10279, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10283, metadata !DIExpression()), !dbg !10282
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10282
  %conv8 = zext i1 %cmp7 to i32, !dbg !10282
  store i32 1, i32* %tmp9, align 4, !dbg !10282
  %2 = load i32, i32* %tmp9, align 4, !dbg !10282
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !10284
  store i64 %call10, i64* %flags, align 8, !dbg !10284
  br label %do.end, !dbg !10284

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !10277

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !10276

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10285, !srcloc !10286
  br label %do.body13, !dbg !10285

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10287
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %3, i32 0, i32 0, !dbg !10287
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan, i32 0, i32 3, !dbg !10287
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10288
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !10289
  %rlock.i = bitcast %union.anon.3* %5 to %struct.raw_spinlock*, !dbg !10289
  br label %do.end15, !dbg !10287

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !10285

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10276

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10275

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !10270

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10290
  %edesc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %6, i32 0, i32 2, !dbg !10292
  %7 = load %struct.edma_desc*, %struct.edma_desc** %edesc, align 8, !dbg !10292
  %tobool = icmp ne %struct.edma_desc* %7, null, !dbg !10290
  br i1 %tobool, label %if.then, label %if.end26, !dbg !10293

if.then:                                          ; preds = %do.end19
  %8 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10294
  call void @edma_stop(%struct.edma_chan* %8) #11, !dbg !10296
  %9 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10297
  %tc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %9, i32 0, i32 4, !dbg !10299
  %10 = load %struct.edma_tc*, %struct.edma_tc** %tc, align 8, !dbg !10299
  %tobool20 = icmp ne %struct.edma_tc* %10, null, !dbg !10297
  br i1 %tobool20, label %if.end, label %land.lhs.true, !dbg !10300

land.lhs.true:                                    ; preds = %if.then
  %11 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10301
  %edesc21 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %11, i32 0, i32 2, !dbg !10302
  %12 = load %struct.edma_desc*, %struct.edma_desc** %edesc21, align 8, !dbg !10302
  %cyclic = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %12, i32 0, i32 3, !dbg !10303
  %13 = load i32, i32* %cyclic, align 4, !dbg !10303
  %tobool22 = icmp ne i32 %13, 0, !dbg !10301
  br i1 %tobool22, label %if.then23, label %if.end, !dbg !10304

if.then23:                                        ; preds = %land.lhs.true
  %14 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10305
  call void @edma_assign_channel_eventq(%struct.edma_chan* %14, i32 -1) #11, !dbg !10306
  br label %if.end, !dbg !10306

if.end:                                           ; preds = %if.then23, %land.lhs.true, %if.then
  %15 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10307
  %edesc24 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %15, i32 0, i32 2, !dbg !10308
  %16 = load %struct.edma_desc*, %struct.edma_desc** %edesc24, align 8, !dbg !10308
  %vdesc = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %16, i32 0, i32 0, !dbg !10309
  call void @vchan_terminate_vdesc(%struct.virt_dma_desc* %vdesc) #11, !dbg !10310
  %17 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10311
  %edesc25 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %17, i32 0, i32 2, !dbg !10312
  store %struct.edma_desc* null, %struct.edma_desc** %edesc25, align 8, !dbg !10313
  br label %if.end26, !dbg !10314

if.end26:                                         ; preds = %if.end, %do.end19
  %18 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10315
  %vchan27 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %18, i32 0, i32 0, !dbg !10316
  call void @vchan_get_all_descriptors(%struct.virt_dma_chan* %vchan27, %struct.list_head* %head) #11, !dbg !10317
  %19 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10318
  %vchan28 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %19, i32 0, i32 0, !dbg !10319
  %lock29 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan28, i32 0, i32 3, !dbg !10320
  %20 = load i64, i64* %flags, align 8, !dbg !10321
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !376, metadata !10010, metadata !DIExpression()) #10, !dbg !10322
  call void @llvm.dbg.declare(metadata !376, metadata !10014, metadata !DIExpression()) #10, !dbg !10322
  store i32 1, i32* %tmp.i, align 4, !dbg !10322
  %21 = load i32, i32* %tmp.i, align 4, !dbg !10322
  call void @llvm.dbg.declare(metadata !376, metadata !10015, metadata !DIExpression()) #10, !dbg !10323
  call void @llvm.dbg.declare(metadata !376, metadata !10021, metadata !DIExpression()) #10, !dbg !10323
  store i32 1, i32* %tmp8.i, align 4, !dbg !10323
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !10323
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !10324
  call void @arch_local_irq_restore(i64 %23) #13, !dbg !10324
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10325, !srcloc !10025
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !10326
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !10326
  %rlock.i32 = bitcast %union.anon.3* %25 to %struct.raw_spinlock*, !dbg !10326
  %26 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10327
  %vchan30 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %26, i32 0, i32 0, !dbg !10328
  call void @vchan_dma_desc_free_list(%struct.virt_dma_chan* %vchan30, %struct.list_head* %head) #11, !dbg !10329
  ret i32 0, !dbg !10330
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_synchronize(%struct.dma_chan* %chan) #0 !dbg !10331 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !10332, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !10334, metadata !DIExpression()), !dbg !10335
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10336
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %0) #11, !dbg !10337
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !10335
  %1 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10338
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %1, i32 0, i32 0, !dbg !10339
  call void @vchan_synchronize(%struct.virt_dma_chan* %vchan) #11, !dbg !10340
  ret void, !dbg !10341
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !10342 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !10343, metadata !DIExpression()), !dbg !10344
  br label %do.body, !dbg !10345

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10346

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !10348

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !10346

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10350
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10350
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !10350
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !10350
  br label %do.end3, !dbg !10350

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !10346

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10352
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10353
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !10354
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !10355
  ret void, !dbg !10356
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_desc_free(%struct.virt_dma_desc* %vdesc) #0 !dbg !10357 {
entry:
  %vdesc.addr = alloca %struct.virt_dma_desc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.edma_desc*, align 8
  store %struct.virt_dma_desc* %vdesc, %struct.virt_dma_desc** %vdesc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vdesc.addr, metadata !10358, metadata !DIExpression()), !dbg !10359
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10360, metadata !DIExpression()), !dbg !10362
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vdesc.addr, align 8, !dbg !10362
  %1 = bitcast %struct.virt_dma_desc* %0 to i8*, !dbg !10362
  store i8* %1, i8** %__mptr, align 8, !dbg !10362
  br label %do.body, !dbg !10362

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10363

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10362
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10362
  %3 = bitcast i8* %add.ptr to %struct.edma_desc*, !dbg !10362
  store %struct.edma_desc* %3, %struct.edma_desc** %tmp, align 8, !dbg !10363
  %4 = load %struct.edma_desc*, %struct.edma_desc** %tmp, align 8, !dbg !10362
  %5 = bitcast %struct.edma_desc* %4 to i8*, !dbg !10365
  call void @kfree(i8* %5) #11, !dbg !10366
  ret void, !dbg !10367
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @edma_is_memcpy_channel(i32 %ch_num, i32* %memcpy_channels) #0 !dbg !10368 {
entry:
  %retval = alloca i1, align 1
  %ch_num.addr = alloca i32, align 4
  %memcpy_channels.addr = alloca i32*, align 8
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !10371, metadata !DIExpression()), !dbg !10372
  store i32* %memcpy_channels, i32** %memcpy_channels.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %memcpy_channels.addr, metadata !10373, metadata !DIExpression()), !dbg !10374
  %0 = load i32*, i32** %memcpy_channels.addr, align 8, !dbg !10375
  %tobool = icmp ne i32* %0, null, !dbg !10375
  br i1 %tobool, label %if.end, label %if.then, !dbg !10377

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10378
  br label %return, !dbg !10378

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !10379

while.cond:                                       ; preds = %if.end3, %if.end
  %1 = load i32*, i32** %memcpy_channels.addr, align 8, !dbg !10380
  %2 = load i32, i32* %1, align 4, !dbg !10381
  %cmp = icmp ne i32 %2, -1, !dbg !10382
  br i1 %cmp, label %while.body, label %while.end, !dbg !10379

while.body:                                       ; preds = %while.cond
  %3 = load i32*, i32** %memcpy_channels.addr, align 8, !dbg !10383
  %4 = load i32, i32* %3, align 4, !dbg !10386
  %5 = load i32, i32* %ch_num.addr, align 4, !dbg !10387
  %cmp1 = icmp eq i32 %4, %5, !dbg !10388
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10389

if.then2:                                         ; preds = %while.body
  store i1 true, i1* %retval, align 1, !dbg !10390
  br label %return, !dbg !10390

if.end3:                                          ; preds = %while.body
  %6 = load i32*, i32** %memcpy_channels.addr, align 8, !dbg !10391
  %incdec.ptr = getelementptr i32, i32* %6, i32 1, !dbg !10391
  store i32* %incdec.ptr, i32** %memcpy_channels.addr, align 8, !dbg !10391
  br label %while.cond, !dbg !10379, !llvm.loop !10392

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !10394
  br label %return, !dbg !10394

return:                                           ; preds = %while.end, %if.then2, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !10395
  ret i1 %7, !dbg !10395
}

; Function Attrs: noredzone
declare dso_local void @vchan_init(%struct.virt_dma_chan*, %struct.dma_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_zero(i64* %dst, i32 %nbits) #0 !dbg !10396 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !10397, metadata !DIExpression()), !dbg !10398
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !10399, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10401, metadata !DIExpression()), !dbg !10402
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !10403
  %conv = zext i32 %0 to i64, !dbg !10403
  %add = add i64 %conv, 64, !dbg !10403
  %sub = sub i64 %add, 1, !dbg !10403
  %div = udiv i64 %sub, 64, !dbg !10403
  %mul = mul i64 %div, 8, !dbg !10404
  %conv1 = trunc i64 %mul to i32, !dbg !10403
  store i32 %conv1, i32* %len, align 4, !dbg !10402
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !10405
  %2 = bitcast i64* %1 to i8*, !dbg !10406
  %3 = load i32, i32* %len, align 4, !dbg !10407
  %conv2 = zext i32 %3 to i64, !dbg !10407
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 %conv2, i1 false), !dbg !10406
  ret void, !dbg !10408
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !10409 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !10410, metadata !DIExpression()), !dbg !10412
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !10414, metadata !DIExpression()), !dbg !10415
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !10416, metadata !DIExpression()), !dbg !10418
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10420, metadata !DIExpression()), !dbg !10421
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !10422, metadata !DIExpression()), !dbg !10423
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !10424, metadata !DIExpression()), !dbg !10425
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !10426
  %1 = load i64, i64* %nr.addr, align 8, !dbg !10427
  %div = sdiv i64 %1, 64, !dbg !10427
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !10428
  %2 = bitcast i64* %add.ptr to i8*, !dbg !10426
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !10429
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10430
  %conv.i = trunc i64 %4 to i32, !dbg !10430
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !10431
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !10432
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !10432
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !10432
  %7 = load i64, i64* %nr.addr, align 8, !dbg !10433
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !10434
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !10435
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !10437
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !10438

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !10439
  %12 = bitcast i64* %11 to i8*, !dbg !10439
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !10439
  %shr.i = ashr i64 %13, 3, !dbg !10439
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !10439
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !10441
  %and.i = and i64 %14, 7, !dbg !10441
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !10441
  %shl.i = shl i32 1, %sh_prom.i, !dbg !10441
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #10, !dbg !10442, !srcloc !10443
  br label %arch_set_bit.exit, !dbg !10444

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !10445
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !10447
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !10448, !srcloc !10449
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !10450
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %c) #0 !dbg !10451 {
entry:
  %c.addr = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.edma_chan*, align 8
  store %struct.dma_chan* %c, %struct.dma_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %c.addr, metadata !10454, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10456, metadata !DIExpression()), !dbg !10458
  %0 = load %struct.dma_chan*, %struct.dma_chan** %c.addr, align 8, !dbg !10458
  %1 = bitcast %struct.dma_chan* %0 to i8*, !dbg !10458
  store i8* %1, i8** %__mptr, align 8, !dbg !10458
  br label %do.body, !dbg !10458

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10459

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10458
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10458
  %3 = bitcast i8* %add.ptr to %struct.edma_chan*, !dbg !10458
  store %struct.edma_chan* %3, %struct.edma_chan** %tmp, align 8, !dbg !10459
  %4 = load %struct.edma_chan*, %struct.edma_chan** %tmp, align 8, !dbg !10458
  ret %struct.edma_chan* %4, !dbg !10461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !10462 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7296, metadata !DIExpression()), !dbg !10463
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7309, metadata !DIExpression()), !dbg !10466
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7311, metadata !DIExpression()), !dbg !10467
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7313, metadata !DIExpression()), !dbg !10468
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7315, metadata !DIExpression()), !dbg !10469
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7321, metadata !DIExpression()), !dbg !10471
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7327, metadata !DIExpression()), !dbg !10473
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7336, metadata !DIExpression()), !dbg !10476
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7338, metadata !DIExpression()), !dbg !10477
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7340, metadata !DIExpression()), !dbg !10478
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7342, metadata !DIExpression()), !dbg !10479
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7344, metadata !DIExpression()), !dbg !10480
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7346, metadata !DIExpression()), !dbg !10481
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7348, metadata !DIExpression()), !dbg !10482
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7350, metadata !DIExpression()), !dbg !10483
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10484, metadata !DIExpression()), !dbg !10485
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10486, metadata !DIExpression()), !dbg !10487
  %0 = load i64, i64* %size.addr, align 8, !dbg !10488
  %1 = load i32, i32* %flags.addr, align 4, !dbg !10489
  %or = or i32 %1, 256, !dbg !10490
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !10491
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !10492
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !10493

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10494
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !10495
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10496

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !10497
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !10498
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !10499
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !10500
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !10480
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !10501
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10502
  %10 = load i32, i32* %order.i.i, align 4, !dbg !10503
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10504
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10505
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10506
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !10507
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10507
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10507
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10507
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !10507
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10508
  br label %kmalloc.exit, !dbg !10508

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !10509
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10510
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !10510
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10511

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10512
  br label %kmalloc_index.exit.i, !dbg !10512

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10513
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !10514
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10515

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10516
  br label %kmalloc_index.exit.i, !dbg !10516

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10517
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !10518
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10519

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10520
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !10521
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10522

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10523
  br label %kmalloc_index.exit.i, !dbg !10523

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10524
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !10525
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10526

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10527
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !10528
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10529

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10530
  br label %kmalloc_index.exit.i, !dbg !10530

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10531
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !10532
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10533

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10534
  br label %kmalloc_index.exit.i, !dbg !10534

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10535
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !10536
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10537

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10538
  br label %kmalloc_index.exit.i, !dbg !10538

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10539
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !10540
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10541

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10542
  br label %kmalloc_index.exit.i, !dbg !10542

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10543
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !10544
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10545

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10546
  br label %kmalloc_index.exit.i, !dbg !10546

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10547
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !10548
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10549

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10550
  br label %kmalloc_index.exit.i, !dbg !10550

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10551
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !10552
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10553

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10554
  br label %kmalloc_index.exit.i, !dbg !10554

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10555
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !10556
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10557

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10558
  br label %kmalloc_index.exit.i, !dbg !10558

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10559
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !10560
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10561

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10562
  br label %kmalloc_index.exit.i, !dbg !10562

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10563
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !10564
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10565

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10566
  br label %kmalloc_index.exit.i, !dbg !10566

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10567
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !10568
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10569

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10570
  br label %kmalloc_index.exit.i, !dbg !10570

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10571
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !10572
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10573

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10574
  br label %kmalloc_index.exit.i, !dbg !10574

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10575
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !10576
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10577

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10578
  br label %kmalloc_index.exit.i, !dbg !10578

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10579
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !10580
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10581

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10582
  br label %kmalloc_index.exit.i, !dbg !10582

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10583
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !10584
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10585

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10586
  br label %kmalloc_index.exit.i, !dbg !10586

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10587
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !10588
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10589

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10590
  br label %kmalloc_index.exit.i, !dbg !10590

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10591
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !10592
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10593

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10594
  br label %kmalloc_index.exit.i, !dbg !10594

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10595
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !10596
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10597

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10598
  br label %kmalloc_index.exit.i, !dbg !10598

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10599
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !10600
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10601

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10602
  br label %kmalloc_index.exit.i, !dbg !10602

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10603
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !10604
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10605

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10606
  br label %kmalloc_index.exit.i, !dbg !10606

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10607
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !10608
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10609

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10610
  br label %kmalloc_index.exit.i, !dbg !10610

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10611
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !10612
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10613

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10614
  br label %kmalloc_index.exit.i, !dbg !10614

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10615
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !10616
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10617

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10618
  br label %kmalloc_index.exit.i, !dbg !10618

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10619
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !10620
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10621

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10622
  br label %kmalloc_index.exit.i, !dbg !10622

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10623
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !10624
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10625

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10626
  br label %kmalloc_index.exit.i, !dbg !10626

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !10627, !srcloc !7544
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 234) #10, !dbg !10628, !srcloc !7548
  unreachable, !dbg !10629

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !10630
  store i32 %45, i32* %index.i, align 4, !dbg !10631
  %46 = load i32, i32* %index.i, align 4, !dbg !10632
  %tobool.i = icmp ne i32 %46, 0, !dbg !10632
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10633

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10634
  br label %kmalloc.exit, !dbg !10634

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !10635
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10636
  %and.i.i = and i32 %48, 17, !dbg !10636
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10636
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10636
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10636
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10636
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10637

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10638
  br label %kmalloc_type.exit.i, !dbg !10638

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10639
  %and2.i.i = and i32 %49, 1, !dbg !10640
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10639
  %50 = zext i1 %tobool3.i.i to i64, !dbg !10639
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10639
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10641
  br label %kmalloc_type.exit.i, !dbg !10641

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !10642
  %idxprom.i = zext i32 %51 to i64, !dbg !10643
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10643
  %52 = load i32, i32* %index.i, align 4, !dbg !10644
  %idxprom6.i = zext i32 %52 to i64, !dbg !10643
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10643
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10643
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !10645
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !10646
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10647
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10648
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !10649
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10649
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10649
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10649
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !10649
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !10468
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10650
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !10651
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10652
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10653
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !10654
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10655
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !10656
  store i8* %62, i8** %retval.i, align 8, !dbg !10657
  br label %kmalloc.exit, !dbg !10657

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !10658
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !10659
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !10660
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10660
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10660
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10660
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !10660
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10661
  br label %kmalloc.exit, !dbg !10661

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !10662
  ret i8* %65, !dbg !10663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__ab_c_size(i64 %a, i64 %b, i64 %c) #0 !dbg !10664 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %c.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  %__a3 = alloca i64, align 8
  %__b4 = alloca i64, align 8
  %__d5 = alloca i64*, align 8
  %tmp10 = alloca i8, align 1
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !10667, metadata !DIExpression()), !dbg !10668
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !10669, metadata !DIExpression()), !dbg !10670
  store i64 %c, i64* %c.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %c.addr, metadata !10671, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !10673, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !10675, metadata !DIExpression()), !dbg !10678
  %0 = load i64, i64* %a.addr, align 8, !dbg !10678
  store i64 %0, i64* %__a, align 8, !dbg !10678
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !10679, metadata !DIExpression()), !dbg !10678
  %1 = load i64, i64* %b.addr, align 8, !dbg !10678
  store i64 %1, i64* %__b, align 8, !dbg !10678
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !10680, metadata !DIExpression()), !dbg !10678
  store i64* %bytes, i64** %__d, align 8, !dbg !10678
  %cmp = icmp eq i64* %__a, %__b, !dbg !10678
  %conv = zext i1 %cmp to i32, !dbg !10678
  %2 = load i64*, i64** %__d, align 8, !dbg !10678
  %cmp1 = icmp eq i64* %__a, %2, !dbg !10678
  %conv2 = zext i1 %cmp1 to i32, !dbg !10678
  %3 = load i64, i64* %__a, align 8, !dbg !10678
  %4 = load i64, i64* %__b, align 8, !dbg !10678
  %5 = load i64*, i64** %__d, align 8, !dbg !10678
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !10678
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !10678
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !10678
  store i64 %8, i64* %5, align 8, !dbg !10678
  %frombool = zext i1 %7 to i8, !dbg !10678
  store i8 %frombool, i8* %tmp, align 1, !dbg !10678
  %9 = load i8, i8* %tmp, align 1, !dbg !10678
  %tobool = trunc i8 %9 to i1, !dbg !10678
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !10681
  br i1 %call, label %if.then, label %if.end, !dbg !10682

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !10683
  br label %return, !dbg !10683

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__a3, metadata !10684, metadata !DIExpression()), !dbg !10687
  %10 = load i64, i64* %bytes, align 8, !dbg !10687
  store i64 %10, i64* %__a3, align 8, !dbg !10687
  call void @llvm.dbg.declare(metadata i64* %__b4, metadata !10688, metadata !DIExpression()), !dbg !10687
  %11 = load i64, i64* %c.addr, align 8, !dbg !10687
  store i64 %11, i64* %__b4, align 8, !dbg !10687
  call void @llvm.dbg.declare(metadata i64** %__d5, metadata !10689, metadata !DIExpression()), !dbg !10687
  store i64* %bytes, i64** %__d5, align 8, !dbg !10687
  %cmp6 = icmp eq i64* %__a3, %__b4, !dbg !10687
  %conv7 = zext i1 %cmp6 to i32, !dbg !10687
  %12 = load i64*, i64** %__d5, align 8, !dbg !10687
  %cmp8 = icmp eq i64* %__a3, %12, !dbg !10687
  %conv9 = zext i1 %cmp8 to i32, !dbg !10687
  %13 = load i64, i64* %__a3, align 8, !dbg !10687
  %14 = load i64, i64* %__b4, align 8, !dbg !10687
  %15 = load i64*, i64** %__d5, align 8, !dbg !10687
  %16 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 %14), !dbg !10687
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !10687
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !10687
  store i64 %18, i64* %15, align 8, !dbg !10687
  %frombool11 = zext i1 %17 to i8, !dbg !10687
  store i8 %frombool11, i8* %tmp10, align 1, !dbg !10687
  %19 = load i8, i8* %tmp10, align 1, !dbg !10687
  %tobool12 = trunc i8 %19 to i1, !dbg !10687
  %call13 = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool12) #11, !dbg !10690
  br i1 %call13, label %if.then14, label %if.end15, !dbg !10691

if.then14:                                        ; preds = %if.end
  store i64 -1, i64* %retval, align 8, !dbg !10692
  br label %return, !dbg !10692

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %bytes, align 8, !dbg !10693
  store i64 %20, i64* %retval, align 8, !dbg !10694
  br label %return, !dbg !10694

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !10695
  ret i64 %21, !dbg !10695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_config_pset(%struct.dma_chan* %chan, %struct.edma_pset* %epset, i64 %src_addr, i64 %dst_addr, i32 %burst, i32 %acnt, i32 %dma_length, i32 %direction) #0 !dbg !10696 {
entry:
  %retval = alloca i32, align 4
  %chan.addr = alloca %struct.dma_chan*, align 8
  %epset.addr = alloca %struct.edma_pset*, align 8
  %src_addr.addr = alloca i64, align 8
  %dst_addr.addr = alloca i64, align 8
  %burst.addr = alloca i32, align 4
  %acnt.addr = alloca i32, align 4
  %dma_length.addr = alloca i32, align 4
  %direction.addr = alloca i32, align 4
  %echan = alloca %struct.edma_chan*, align 8
  %dev = alloca %struct.device*, align 8
  %param = alloca %struct.edmacc_param*, align 8
  %bcnt = alloca i32, align 4
  %ccnt = alloca i32, align 4
  %cidx = alloca i32, align 4
  %src_bidx = alloca i32, align 4
  %dst_bidx = alloca i32, align 4
  %src_cidx = alloca i32, align 4
  %dst_cidx = alloca i32, align 4
  %absync = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !10700, metadata !DIExpression()), !dbg !10701
  store %struct.edma_pset* %epset, %struct.edma_pset** %epset.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_pset** %epset.addr, metadata !10702, metadata !DIExpression()), !dbg !10703
  store i64 %src_addr, i64* %src_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %src_addr.addr, metadata !10704, metadata !DIExpression()), !dbg !10705
  store i64 %dst_addr, i64* %dst_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_addr.addr, metadata !10706, metadata !DIExpression()), !dbg !10707
  store i32 %burst, i32* %burst.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %burst.addr, metadata !10708, metadata !DIExpression()), !dbg !10709
  store i32 %acnt, i32* %acnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %acnt.addr, metadata !10710, metadata !DIExpression()), !dbg !10711
  store i32 %dma_length, i32* %dma_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dma_length.addr, metadata !10712, metadata !DIExpression()), !dbg !10713
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !10714, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !10716, metadata !DIExpression()), !dbg !10717
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10718
  %call = call %struct.edma_chan* @to_edma_chan(%struct.dma_chan* %0) #11, !dbg !10719
  store %struct.edma_chan* %call, %struct.edma_chan** %echan, align 8, !dbg !10717
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !10720, metadata !DIExpression()), !dbg !10721
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10722
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %1, i32 0, i32 0, !dbg !10723
  %2 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !10723
  %dev1 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %2, i32 0, i32 15, !dbg !10724
  %3 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !10724
  store %struct.device* %3, %struct.device** %dev, align 8, !dbg !10721
  call void @llvm.dbg.declare(metadata %struct.edmacc_param** %param, metadata !10725, metadata !DIExpression()), !dbg !10726
  %4 = load %struct.edma_pset*, %struct.edma_pset** %epset.addr, align 8, !dbg !10727
  %param2 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %4, i32 0, i32 2, !dbg !10728
  store %struct.edmacc_param* %param2, %struct.edmacc_param** %param, align 8, !dbg !10726
  call void @llvm.dbg.declare(metadata i32* %bcnt, metadata !10729, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.declare(metadata i32* %ccnt, metadata !10731, metadata !DIExpression()), !dbg !10732
  call void @llvm.dbg.declare(metadata i32* %cidx, metadata !10733, metadata !DIExpression()), !dbg !10734
  call void @llvm.dbg.declare(metadata i32* %src_bidx, metadata !10735, metadata !DIExpression()), !dbg !10736
  call void @llvm.dbg.declare(metadata i32* %dst_bidx, metadata !10737, metadata !DIExpression()), !dbg !10738
  call void @llvm.dbg.declare(metadata i32* %src_cidx, metadata !10739, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.declare(metadata i32* %dst_cidx, metadata !10741, metadata !DIExpression()), !dbg !10742
  call void @llvm.dbg.declare(metadata i32* %absync, metadata !10743, metadata !DIExpression()), !dbg !10744
  %5 = load i32, i32* %burst.addr, align 4, !dbg !10745
  %tobool = icmp ne i32 %5, 0, !dbg !10745
  br i1 %tobool, label %if.end, label %if.then, !dbg !10747

if.then:                                          ; preds = %entry
  store i32 1, i32* %burst.addr, align 4, !dbg !10748
  br label %if.end, !dbg !10749

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %burst.addr, align 4, !dbg !10750
  %cmp = icmp eq i32 %6, 1, !dbg !10752
  br i1 %cmp, label %if.then3, label %if.else9, !dbg !10753

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %absync, align 4, !dbg !10754
  %7 = load i32, i32* %dma_length.addr, align 4, !dbg !10756
  %8 = load i32, i32* %acnt.addr, align 4, !dbg !10757
  %div = udiv i32 %7, %8, !dbg !10758
  %div4 = udiv i32 %div, 65535, !dbg !10759
  store i32 %div4, i32* %ccnt, align 4, !dbg !10760
  %9 = load i32, i32* %dma_length.addr, align 4, !dbg !10761
  %10 = load i32, i32* %acnt.addr, align 4, !dbg !10762
  %div5 = udiv i32 %9, %10, !dbg !10763
  %11 = load i32, i32* %ccnt, align 4, !dbg !10764
  %mul = mul i32 %11, 65535, !dbg !10765
  %sub = sub i32 %div5, %mul, !dbg !10766
  store i32 %sub, i32* %bcnt, align 4, !dbg !10767
  %12 = load i32, i32* %bcnt, align 4, !dbg !10768
  %tobool6 = icmp ne i32 %12, 0, !dbg !10768
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !10770

if.then7:                                         ; preds = %if.then3
  %13 = load i32, i32* %ccnt, align 4, !dbg !10771
  %inc = add i32 %13, 1, !dbg !10771
  store i32 %inc, i32* %ccnt, align 4, !dbg !10771
  br label %if.end8, !dbg !10772

if.else:                                          ; preds = %if.then3
  store i32 65535, i32* %bcnt, align 4, !dbg !10773
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then7
  %14 = load i32, i32* %acnt.addr, align 4, !dbg !10774
  store i32 %14, i32* %cidx, align 4, !dbg !10775
  br label %if.end16, !dbg !10776

if.else9:                                         ; preds = %if.end
  store i32 1, i32* %absync, align 4, !dbg !10777
  %15 = load i32, i32* %burst.addr, align 4, !dbg !10779
  store i32 %15, i32* %bcnt, align 4, !dbg !10780
  %16 = load i32, i32* %dma_length.addr, align 4, !dbg !10781
  %17 = load i32, i32* %acnt.addr, align 4, !dbg !10782
  %18 = load i32, i32* %bcnt, align 4, !dbg !10783
  %mul10 = mul i32 %17, %18, !dbg !10784
  %div11 = udiv i32 %16, %mul10, !dbg !10785
  store i32 %div11, i32* %ccnt, align 4, !dbg !10786
  %19 = load i32, i32* %ccnt, align 4, !dbg !10787
  %cmp12 = icmp sgt i32 %19, 65535, !dbg !10789
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10790

if.then13:                                        ; preds = %if.else9
  %20 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10791
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %20, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i64 0, i64 0)) #12, !dbg !10791
  store i32 -22, i32* %retval, align 4, !dbg !10793
  br label %return, !dbg !10793

if.end14:                                         ; preds = %if.else9
  %21 = load i32, i32* %acnt.addr, align 4, !dbg !10794
  %22 = load i32, i32* %bcnt, align 4, !dbg !10795
  %mul15 = mul i32 %21, %22, !dbg !10796
  store i32 %mul15, i32* %cidx, align 4, !dbg !10797
  br label %if.end16

if.end16:                                         ; preds = %if.end14, %if.end8
  %23 = load i32, i32* %dma_length.addr, align 4, !dbg !10798
  %24 = load %struct.edma_pset*, %struct.edma_pset** %epset.addr, align 8, !dbg !10799
  %len = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %24, i32 0, i32 0, !dbg !10800
  store i32 %23, i32* %len, align 8, !dbg !10801
  %25 = load i32, i32* %direction.addr, align 4, !dbg !10802
  %cmp17 = icmp eq i32 %25, 1, !dbg !10804
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !10805

if.then18:                                        ; preds = %if.end16
  %26 = load i32, i32* %acnt.addr, align 4, !dbg !10806
  store i32 %26, i32* %src_bidx, align 4, !dbg !10808
  %27 = load i32, i32* %cidx, align 4, !dbg !10809
  store i32 %27, i32* %src_cidx, align 4, !dbg !10810
  store i32 0, i32* %dst_bidx, align 4, !dbg !10811
  store i32 0, i32* %dst_cidx, align 4, !dbg !10812
  %28 = load i64, i64* %src_addr.addr, align 8, !dbg !10813
  %29 = load %struct.edma_pset*, %struct.edma_pset** %epset.addr, align 8, !dbg !10814
  %addr = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %29, i32 0, i32 1, !dbg !10815
  store i64 %28, i64* %addr, align 8, !dbg !10816
  br label %if.end30, !dbg !10817

if.else19:                                        ; preds = %if.end16
  %30 = load i32, i32* %direction.addr, align 4, !dbg !10818
  %cmp20 = icmp eq i32 %30, 2, !dbg !10820
  br i1 %cmp20, label %if.then21, label %if.else23, !dbg !10821

if.then21:                                        ; preds = %if.else19
  store i32 0, i32* %src_bidx, align 4, !dbg !10822
  store i32 0, i32* %src_cidx, align 4, !dbg !10824
  %31 = load i32, i32* %acnt.addr, align 4, !dbg !10825
  store i32 %31, i32* %dst_bidx, align 4, !dbg !10826
  %32 = load i32, i32* %cidx, align 4, !dbg !10827
  store i32 %32, i32* %dst_cidx, align 4, !dbg !10828
  %33 = load i64, i64* %dst_addr.addr, align 8, !dbg !10829
  %34 = load %struct.edma_pset*, %struct.edma_pset** %epset.addr, align 8, !dbg !10830
  %addr22 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %34, i32 0, i32 1, !dbg !10831
  store i64 %33, i64* %addr22, align 8, !dbg !10832
  br label %if.end29, !dbg !10833

if.else23:                                        ; preds = %if.else19
  %35 = load i32, i32* %direction.addr, align 4, !dbg !10834
  %cmp24 = icmp eq i32 %35, 0, !dbg !10836
  br i1 %cmp24, label %if.then25, label %if.else27, !dbg !10837

if.then25:                                        ; preds = %if.else23
  %36 = load i32, i32* %acnt.addr, align 4, !dbg !10838
  store i32 %36, i32* %src_bidx, align 4, !dbg !10840
  %37 = load i32, i32* %cidx, align 4, !dbg !10841
  store i32 %37, i32* %src_cidx, align 4, !dbg !10842
  %38 = load i32, i32* %acnt.addr, align 4, !dbg !10843
  store i32 %38, i32* %dst_bidx, align 4, !dbg !10844
  %39 = load i32, i32* %cidx, align 4, !dbg !10845
  store i32 %39, i32* %dst_cidx, align 4, !dbg !10846
  %40 = load i64, i64* %src_addr.addr, align 8, !dbg !10847
  %41 = load %struct.edma_pset*, %struct.edma_pset** %epset.addr, align 8, !dbg !10848
  %addr26 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %41, i32 0, i32 1, !dbg !10849
  store i64 %40, i64* %addr26, align 8, !dbg !10850
  br label %if.end28, !dbg !10851

if.else27:                                        ; preds = %if.else23
  %42 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10852
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %42, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.edma_config_pset, i64 0, i64 0)) #12, !dbg !10852
  store i32 -22, i32* %retval, align 4, !dbg !10854
  br label %return, !dbg !10854

if.end28:                                         ; preds = %if.then25
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then21
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then18
  %43 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !10855
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %43, i32 0, i32 5, !dbg !10855
  %44 = load i32, i32* %ch_num, align 8, !dbg !10855
  %and = and i32 %44, 65535, !dbg !10855
  %shl = shl i32 %and, 12, !dbg !10855
  %45 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !10856
  %opt = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %45, i32 0, i32 0, !dbg !10857
  store i32 %shl, i32* %opt, align 1, !dbg !10858
  %46 = load i32, i32* %absync, align 4, !dbg !10859
  %tobool31 = icmp ne i32 %46, 0, !dbg !10859
  br i1 %tobool31, label %if.then32, label %if.end35, !dbg !10861

if.then32:                                        ; preds = %if.end30
  %47 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !10862
  %opt33 = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %47, i32 0, i32 0, !dbg !10863
  %48 = load i32, i32* %opt33, align 1, !dbg !10864
  %conv = zext i32 %48 to i64, !dbg !10864
  %or = or i64 %conv, 4, !dbg !10864
  %conv34 = trunc i64 %or to i32, !dbg !10864
  store i32 %conv34, i32* %opt33, align 1, !dbg !10864
  br label %if.end35, !dbg !10862

if.end35:                                         ; preds = %if.then32, %if.end30
  %49 = load i64, i64* %src_addr.addr, align 8, !dbg !10865
  %conv36 = trunc i64 %49 to i32, !dbg !10865
  %50 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !10866
  %src = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %50, i32 0, i32 1, !dbg !10867
  store i32 %conv36, i32* %src, align 1, !dbg !10868
  %51 = load i64, i64* %dst_addr.addr, align 8, !dbg !10869
  %conv37 = trunc i64 %51 to i32, !dbg !10869
  %52 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !10870
  %dst = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %52, i32 0, i32 3, !dbg !10871
  store i32 %conv37, i32* %dst, align 1, !dbg !10872
  %53 = load i32, i32* %dst_bidx, align 4, !dbg !10873
  %shl38 = shl i32 %53, 16, !dbg !10874
  %54 = load i32, i32* %src_bidx, align 4, !dbg !10875
  %or39 = or i32 %shl38, %54, !dbg !10876
  %55 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !10877
  %src_dst_bidx = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %55, i32 0, i32 4, !dbg !10878
  store i32 %or39, i32* %src_dst_bidx, align 1, !dbg !10879
  %56 = load i32, i32* %dst_cidx, align 4, !dbg !10880
  %shl40 = shl i32 %56, 16, !dbg !10881
  %57 = load i32, i32* %src_cidx, align 4, !dbg !10882
  %or41 = or i32 %shl40, %57, !dbg !10883
  %58 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !10884
  %src_dst_cidx = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %58, i32 0, i32 6, !dbg !10885
  store i32 %or41, i32* %src_dst_cidx, align 1, !dbg !10886
  %59 = load i32, i32* %bcnt, align 4, !dbg !10887
  %shl42 = shl i32 %59, 16, !dbg !10888
  %60 = load i32, i32* %acnt.addr, align 4, !dbg !10889
  %or43 = or i32 %shl42, %60, !dbg !10890
  %61 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !10891
  %a_b_cnt = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %61, i32 0, i32 2, !dbg !10892
  store i32 %or43, i32* %a_b_cnt, align 1, !dbg !10893
  %62 = load i32, i32* %ccnt, align 4, !dbg !10894
  %63 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !10895
  %ccnt44 = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %63, i32 0, i32 7, !dbg !10896
  store i32 %62, i32* %ccnt44, align 1, !dbg !10897
  %64 = load %struct.edmacc_param*, %struct.edmacc_param** %param, align 8, !dbg !10898
  %link_bcntrld = getelementptr inbounds %struct.edmacc_param, %struct.edmacc_param* %64, i32 0, i32 5, !dbg !10899
  store i32 -1, i32* %link_bcntrld, align 1, !dbg !10900
  %65 = load i32, i32* %absync, align 4, !dbg !10901
  store i32 %65, i32* %retval, align 4, !dbg !10902
  br label %return, !dbg !10902

return:                                           ; preds = %if.end35, %if.else27, %if.then13
  %66 = load i32, i32* %retval, align 4, !dbg !10903
  ret i32 %66, !dbg !10903
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @vchan_tx_prep(%struct.virt_dma_chan* %vc, %struct.virt_dma_desc* %vd, i64 %tx_flags) #0 !dbg !10904 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !9947, metadata !DIExpression()), !dbg !10907
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9953, metadata !DIExpression()), !dbg !10909
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9955, metadata !DIExpression()), !dbg !10910
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %vd.addr = alloca %struct.virt_dma_desc*, align 8
  %tx_flags.addr = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !10917, metadata !DIExpression()), !dbg !10918
  store %struct.virt_dma_desc* %vd, %struct.virt_dma_desc** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd.addr, metadata !10919, metadata !DIExpression()), !dbg !10920
  store i64 %tx_flags, i64* %tx_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tx_flags.addr, metadata !10921, metadata !DIExpression()), !dbg !10922
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10923, metadata !DIExpression()), !dbg !10924
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !10925
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %0, i32 0, i32 0, !dbg !10926
  %1 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !10927
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %1, i32 0, i32 0, !dbg !10928
  call void @dma_async_tx_descriptor_init(%struct.dma_async_tx_descriptor* %tx, %struct.dma_chan* %chan) #11, !dbg !10929
  %2 = load i64, i64* %tx_flags.addr, align 8, !dbg !10930
  %conv = trunc i64 %2 to i32, !dbg !10930
  %3 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !10931
  %tx1 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %3, i32 0, i32 0, !dbg !10932
  %flags2 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx1, i32 0, i32 1, !dbg !10933
  store i32 %conv, i32* %flags2, align 4, !dbg !10934
  %4 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !10935
  %tx3 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %4, i32 0, i32 0, !dbg !10936
  %tx_submit = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx3, i32 0, i32 4, !dbg !10937
  store i32 (%struct.dma_async_tx_descriptor*)* @vchan_tx_submit, i32 (%struct.dma_async_tx_descriptor*)** %tx_submit, align 8, !dbg !10938
  %5 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !10939
  %tx4 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %5, i32 0, i32 0, !dbg !10940
  %desc_free = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx4, i32 0, i32 5, !dbg !10941
  store i32 (%struct.dma_async_tx_descriptor*)* @vchan_tx_desc_free, i32 (%struct.dma_async_tx_descriptor*)** %desc_free, align 8, !dbg !10942
  %6 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !10943
  %tx_result = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %6, i32 0, i32 1, !dbg !10944
  %result = getelementptr inbounds %struct.dmaengine_result, %struct.dmaengine_result* %tx_result, i32 0, i32 0, !dbg !10945
  store i32 0, i32* %result, align 8, !dbg !10946
  %7 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !10947
  %tx_result5 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %7, i32 0, i32 1, !dbg !10948
  %residue = getelementptr inbounds %struct.dmaengine_result, %struct.dmaengine_result* %tx_result5, i32 0, i32 1, !dbg !10949
  store i32 0, i32* %residue, align 4, !dbg !10950
  br label %do.body, !dbg !10951

do.body:                                          ; preds = %entry
  br label %do.body6, !dbg !10952

do.body6:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10953, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10956, metadata !DIExpression()), !dbg !10955
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10955
  %conv7 = zext i1 %cmp to i32, !dbg !10955
  store i32 1, i32* %tmp, align 4, !dbg !10955
  %8 = load i32, i32* %tmp, align 4, !dbg !10955
  br label %do.body8, !dbg !10957

do.body8:                                         ; preds = %do.body6
  br label %do.body9, !dbg !10958

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !10959

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !10961, metadata !DIExpression()), !dbg !10964
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !10965, metadata !DIExpression()), !dbg !10964
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !10964
  %conv14 = zext i1 %cmp13 to i32, !dbg !10964
  store i32 1, i32* %tmp15, align 4, !dbg !10964
  %9 = load i32, i32* %tmp15, align 4, !dbg !10964
  %call = call i64 @arch_local_irq_save() #11, !dbg !10966
  store i64 %call, i64* %flags, align 8, !dbg !10966
  br label %do.end, !dbg !10966

do.end:                                           ; preds = %do.body10
  br label %do.end16, !dbg !10959

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !10958

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10967, !srcloc !10968
  br label %do.body18, !dbg !10967

do.body18:                                        ; preds = %do.body17
  %10 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !10969
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %10, i32 0, i32 3, !dbg !10969
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10970
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !10971
  %rlock.i = bitcast %union.anon.3* %12 to %struct.raw_spinlock*, !dbg !10971
  br label %do.end20, !dbg !10969

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !10967

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10958

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !10957

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !10952

do.end24:                                         ; preds = %do.end23
  %13 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !10972
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %13, i32 0, i32 2, !dbg !10973
  %14 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !10974
  %desc_allocated = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %14, i32 0, i32 4, !dbg !10975
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* %desc_allocated) #11, !dbg !10976
  %15 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !10977
  %lock25 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %15, i32 0, i32 3, !dbg !10978
  %16 = load i64, i64* %flags, align 8, !dbg !10979
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !376, metadata !10010, metadata !DIExpression()) #10, !dbg !10980
  call void @llvm.dbg.declare(metadata !376, metadata !10014, metadata !DIExpression()) #10, !dbg !10980
  store i32 1, i32* %tmp.i, align 4, !dbg !10980
  %17 = load i32, i32* %tmp.i, align 4, !dbg !10980
  call void @llvm.dbg.declare(metadata !376, metadata !10015, metadata !DIExpression()) #10, !dbg !10981
  call void @llvm.dbg.declare(metadata !376, metadata !10021, metadata !DIExpression()) #10, !dbg !10981
  store i32 1, i32* %tmp8.i, align 4, !dbg !10981
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !10981
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !10982
  call void @arch_local_irq_restore(i64 %19) #13, !dbg !10982
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10983, !srcloc !10025
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !10984
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !10984
  %rlock.i28 = bitcast %union.anon.3* %21 to %struct.raw_spinlock*, !dbg !10984
  %22 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !10985
  %tx26 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %22, i32 0, i32 0, !dbg !10986
  ret %struct.dma_async_tx_descriptor* %tx26, !dbg !10987
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #3

; Function Attrs: noredzone
declare dso_local void @dma_async_tx_descriptor_init(%struct.dma_async_tx_descriptor*, %struct.dma_chan*) #2

; Function Attrs: noredzone
declare dso_local i32 @vchan_tx_submit(%struct.dma_async_tx_descriptor*) #2

; Function Attrs: noredzone
declare dso_local i32 @vchan_tx_desc_free(%struct.dma_async_tx_descriptor*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !10988 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !10992, metadata !DIExpression()), !dbg !10993
  %call = call i64 @arch_local_save_flags() #11, !dbg !10994
  store i64 %call, i64* %f, align 8, !dbg !10995
  call void @arch_local_irq_disable() #11, !dbg !10996
  %0 = load i64, i64* %f, align 8, !dbg !10997
  ret i64 %0, !dbg !10998
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !10999 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !11000, metadata !DIExpression()), !dbg !11002
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11003, metadata !DIExpression()), !dbg !11002
  %0 = load i64, i64* %__edi, align 8, !dbg !11002
  store i64 %0, i64* %__edi, align 8, !dbg !11002
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11004, metadata !DIExpression()), !dbg !11002
  %1 = load i64, i64* %__esi, align 8, !dbg !11002
  store i64 %1, i64* %__esi, align 8, !dbg !11002
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11005, metadata !DIExpression()), !dbg !11002
  %2 = load i64, i64* %__edx, align 8, !dbg !11002
  store i64 %2, i64* %__edx, align 8, !dbg !11002
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11006, metadata !DIExpression()), !dbg !11002
  %3 = load i64, i64* %__ecx, align 8, !dbg !11002
  store i64 %3, i64* %__ecx, align 8, !dbg !11002
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11007, metadata !DIExpression()), !dbg !11002
  %4 = load i64, i64* %__eax, align 8, !dbg !11002
  store i64 %4, i64* %__eax, align 8, !dbg !11002
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !11002
  %6 = call i64 @llvm.read_register.i64(metadata !4761), !dbg !11008
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !11008, !srcloc !11011
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11008
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11008
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11008
  call void @llvm.write_register.i64(metadata !4761, i64 %asmresult1), !dbg !11008
  %8 = load i64, i64* %__eax, align 8, !dbg !11008
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !11012, metadata !DIExpression()), !dbg !11014
  store i64 -1, i64* %__mask, align 8, !dbg !11014
  %9 = load i64, i64* %__mask, align 8, !dbg !11014
  store i64 %9, i64* %tmp, align 8, !dbg !11014
  %10 = load i64, i64* %tmp, align 8, !dbg !11014
  %and = and i64 %8, %10, !dbg !11008
  store i64 %and, i64* %__ret, align 8, !dbg !11008
  %11 = load i64, i64* %__ret, align 8, !dbg !11002
  store i64 %11, i64* %tmp2, align 8, !dbg !11015
  %12 = load i64, i64* %tmp2, align 8, !dbg !11002
  ret i64 %12, !dbg !11016
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !11017 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11018, metadata !DIExpression()), !dbg !11020
  %0 = load i64, i64* %__edi, align 8, !dbg !11020
  store i64 %0, i64* %__edi, align 8, !dbg !11020
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11021, metadata !DIExpression()), !dbg !11020
  %1 = load i64, i64* %__esi, align 8, !dbg !11020
  store i64 %1, i64* %__esi, align 8, !dbg !11020
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11022, metadata !DIExpression()), !dbg !11020
  %2 = load i64, i64* %__edx, align 8, !dbg !11020
  store i64 %2, i64* %__edx, align 8, !dbg !11020
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11023, metadata !DIExpression()), !dbg !11020
  %3 = load i64, i64* %__ecx, align 8, !dbg !11020
  store i64 %3, i64* %__ecx, align 8, !dbg !11020
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11024, metadata !DIExpression()), !dbg !11020
  %4 = load i64, i64* %__eax, align 8, !dbg !11020
  store i64 %4, i64* %__eax, align 8, !dbg !11020
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !11020
  %6 = call i64 @llvm.read_register.i64(metadata !4761), !dbg !11020
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !11020, !srcloc !11025
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11020
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11020
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11020
  call void @llvm.write_register.i64(metadata !4761, i64 %asmresult1), !dbg !11020
  ret void, !dbg !11026
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !11027 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !11028, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11030, metadata !DIExpression()), !dbg !11032
  %0 = load i64, i64* %__edi, align 8, !dbg !11032
  store i64 %0, i64* %__edi, align 8, !dbg !11032
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11033, metadata !DIExpression()), !dbg !11032
  %1 = load i64, i64* %__esi, align 8, !dbg !11032
  store i64 %1, i64* %__esi, align 8, !dbg !11032
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11034, metadata !DIExpression()), !dbg !11032
  %2 = load i64, i64* %__edx, align 8, !dbg !11032
  store i64 %2, i64* %__edx, align 8, !dbg !11032
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11035, metadata !DIExpression()), !dbg !11032
  %3 = load i64, i64* %__ecx, align 8, !dbg !11032
  store i64 %3, i64* %__ecx, align 8, !dbg !11032
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11036, metadata !DIExpression()), !dbg !11032
  %4 = load i64, i64* %__eax, align 8, !dbg !11032
  store i64 %4, i64* %__eax, align 8, !dbg !11032
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !11032
  %6 = call i64 @llvm.read_register.i64(metadata !4761), !dbg !11032
  %7 = load i64, i64* %f.addr, align 8, !dbg !11032
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !11032, !srcloc !11037
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !11032
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !11032
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11032
  call void @llvm.write_register.i64(metadata !4761, i64 %asmresult1), !dbg !11032
  ret void, !dbg !11038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_slave_direction(i32 %direction) #0 !dbg !11039 {
entry:
  %direction.addr = alloca i32, align 4
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !11042, metadata !DIExpression()), !dbg !11043
  %0 = load i32, i32* %direction.addr, align 4, !dbg !11044
  %cmp = icmp eq i32 %0, 1, !dbg !11045
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11046

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %direction.addr, align 4, !dbg !11047
  %cmp1 = icmp eq i32 %1, 2, !dbg !11048
  br label %lor.end, !dbg !11046

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !11049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dmaengine_get_src_icg(%struct.dma_interleaved_template* %xt, %struct.data_chunk* %chunk) #0 !dbg !11050 {
entry:
  %xt.addr = alloca %struct.dma_interleaved_template*, align 8
  %chunk.addr = alloca %struct.data_chunk*, align 8
  store %struct.dma_interleaved_template* %xt, %struct.dma_interleaved_template** %xt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_interleaved_template** %xt.addr, metadata !11054, metadata !DIExpression()), !dbg !11055
  store %struct.data_chunk* %chunk, %struct.data_chunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.data_chunk** %chunk.addr, metadata !11056, metadata !DIExpression()), !dbg !11057
  %0 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !11058
  %src_inc = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %0, i32 0, i32 3, !dbg !11059
  %1 = load i8, i8* %src_inc, align 4, !dbg !11059
  %tobool = trunc i8 %1 to i1, !dbg !11059
  %2 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !11060
  %src_sgl = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %2, i32 0, i32 5, !dbg !11061
  %3 = load i8, i8* %src_sgl, align 2, !dbg !11061
  %tobool1 = trunc i8 %3 to i1, !dbg !11061
  %4 = load %struct.data_chunk*, %struct.data_chunk** %chunk.addr, align 8, !dbg !11062
  %icg = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %4, i32 0, i32 1, !dbg !11063
  %5 = load i64, i64* %icg, align 8, !dbg !11063
  %6 = load %struct.data_chunk*, %struct.data_chunk** %chunk.addr, align 8, !dbg !11064
  %src_icg = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %6, i32 0, i32 3, !dbg !11065
  %7 = load i64, i64* %src_icg, align 8, !dbg !11065
  %call = call i64 @dmaengine_get_icg(i1 zeroext %tobool, i1 zeroext %tobool1, i64 %5, i64 %7) #11, !dbg !11066
  ret i64 %call, !dbg !11067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dmaengine_get_dst_icg(%struct.dma_interleaved_template* %xt, %struct.data_chunk* %chunk) #0 !dbg !11068 {
entry:
  %xt.addr = alloca %struct.dma_interleaved_template*, align 8
  %chunk.addr = alloca %struct.data_chunk*, align 8
  store %struct.dma_interleaved_template* %xt, %struct.dma_interleaved_template** %xt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_interleaved_template** %xt.addr, metadata !11069, metadata !DIExpression()), !dbg !11070
  store %struct.data_chunk* %chunk, %struct.data_chunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.data_chunk** %chunk.addr, metadata !11071, metadata !DIExpression()), !dbg !11072
  %0 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !11073
  %dst_inc = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %0, i32 0, i32 4, !dbg !11074
  %1 = load i8, i8* %dst_inc, align 1, !dbg !11074
  %tobool = trunc i8 %1 to i1, !dbg !11074
  %2 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !11075
  %dst_sgl = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %2, i32 0, i32 6, !dbg !11076
  %3 = load i8, i8* %dst_sgl, align 1, !dbg !11076
  %tobool1 = trunc i8 %3 to i1, !dbg !11076
  %4 = load %struct.data_chunk*, %struct.data_chunk** %chunk.addr, align 8, !dbg !11077
  %icg = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %4, i32 0, i32 1, !dbg !11078
  %5 = load i64, i64* %icg, align 8, !dbg !11078
  %6 = load %struct.data_chunk*, %struct.data_chunk** %chunk.addr, align 8, !dbg !11079
  %dst_icg = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %6, i32 0, i32 2, !dbg !11080
  %7 = load i64, i64* %dst_icg, align 8, !dbg !11080
  %call = call i64 @dmaengine_get_icg(i1 zeroext %tobool, i1 zeroext %tobool1, i64 %5, i64 %7) #11, !dbg !11081
  ret i64 %call, !dbg !11082
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dmaengine_get_icg(i1 zeroext %inc, i1 zeroext %sgl, i64 %icg, i64 %dir_icg) #0 !dbg !11083 {
entry:
  %retval = alloca i64, align 8
  %inc.addr = alloca i8, align 1
  %sgl.addr = alloca i8, align 1
  %icg.addr = alloca i64, align 8
  %dir_icg.addr = alloca i64, align 8
  %frombool = zext i1 %inc to i8
  store i8 %frombool, i8* %inc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %inc.addr, metadata !11086, metadata !DIExpression()), !dbg !11087
  %frombool1 = zext i1 %sgl to i8
  store i8 %frombool1, i8* %sgl.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sgl.addr, metadata !11088, metadata !DIExpression()), !dbg !11089
  store i64 %icg, i64* %icg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %icg.addr, metadata !11090, metadata !DIExpression()), !dbg !11091
  store i64 %dir_icg, i64* %dir_icg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dir_icg.addr, metadata !11092, metadata !DIExpression()), !dbg !11093
  %0 = load i8, i8* %inc.addr, align 1, !dbg !11094
  %tobool = trunc i8 %0 to i1, !dbg !11094
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11096

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %dir_icg.addr, align 8, !dbg !11097
  %tobool2 = icmp ne i64 %1, 0, !dbg !11097
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !11100

if.then3:                                         ; preds = %if.then
  %2 = load i64, i64* %dir_icg.addr, align 8, !dbg !11101
  store i64 %2, i64* %retval, align 8, !dbg !11102
  br label %return, !dbg !11102

if.end:                                           ; preds = %if.then
  %3 = load i8, i8* %sgl.addr, align 1, !dbg !11103
  %tobool4 = trunc i8 %3 to i1, !dbg !11103
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !11105

if.then5:                                         ; preds = %if.end
  %4 = load i64, i64* %icg.addr, align 8, !dbg !11106
  store i64 %4, i64* %retval, align 8, !dbg !11107
  br label %return, !dbg !11107

if.end6:                                          ; preds = %if.end
  br label %if.end7, !dbg !11108

if.end7:                                          ; preds = %if.end6, %entry
  store i64 0, i64* %retval, align 8, !dbg !11109
  br label %return, !dbg !11109

return:                                           ; preds = %if.end7, %if.then5, %if.then3
  %5 = load i64, i64* %retval, align 8, !dbg !11110
  ret i64 %5, !dbg !11110
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_alloc_channel(%struct.edma_chan* %echan, i32 %eventq_no) #0 !dbg !11111 {
entry:
  %retval = alloca i32, align 4
  %echan.addr = alloca %struct.edma_chan*, align 8
  %eventq_no.addr = alloca i32, align 4
  %ecc = alloca %struct.edma_cc*, align 8
  %channel = alloca i32, align 4
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !11114, metadata !DIExpression()), !dbg !11115
  store i32 %eventq_no, i32* %eventq_no.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eventq_no.addr, metadata !11116, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !11118, metadata !DIExpression()), !dbg !11119
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !11120
  %ecc1 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 3, !dbg !11121
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc1, align 8, !dbg !11121
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !11119
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !11122, metadata !DIExpression()), !dbg !11123
  %2 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !11124
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %2, i32 0, i32 5, !dbg !11124
  %3 = load i32, i32* %ch_num, align 8, !dbg !11124
  %and = and i32 %3, 65535, !dbg !11124
  store i32 %and, i32* %channel, align 4, !dbg !11123
  %4 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !11125
  %ch_num2 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %4, i32 0, i32 5, !dbg !11127
  %5 = load i32, i32* %ch_num2, align 8, !dbg !11127
  %conv = sext i32 %5 to i64, !dbg !11125
  %6 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11128
  %channels_mask = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %6, i32 0, i32 15, !dbg !11129
  %7 = load i64*, i64** %channels_mask, align 8, !dbg !11129
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %7) #11, !dbg !11130
  br i1 %call, label %if.end, label %if.then, !dbg !11131

if.then:                                          ; preds = %entry
  %8 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11132
  %dev = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %8, i32 0, i32 0, !dbg !11132
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11132
  %10 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !11132
  %ch_num3 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %10, i32 0, i32 5, !dbg !11132
  %11 = load i32, i32* %ch_num3, align 8, !dbg !11132
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %9, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.40, i64 0, i64 0), i32 %11) #12, !dbg !11132
  store i32 -22, i32* %retval, align 4, !dbg !11134
  br label %return, !dbg !11134

if.end:                                           ; preds = %entry
  %12 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11135
  %13 = load i32, i32* %channel, align 4, !dbg !11136
  %shr = ashr i32 %13, 5, !dbg !11136
  %14 = load i32, i32* %channel, align 4, !dbg !11137
  %and4 = and i32 %14, 31, !dbg !11137
  %sh_prom = zext i32 %and4 to i64, !dbg !11137
  %shl = shl i64 1, %sh_prom, !dbg !11137
  %conv5 = trunc i64 %shl to i32, !dbg !11137
  call void @edma_or_array2(%struct.edma_cc* %12, i32 832, i32 0, i32 %shr, i32 %conv5) #11, !dbg !11138
  %15 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !11139
  call void @edma_stop(%struct.edma_chan* %15) #11, !dbg !11140
  %16 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !11141
  call void @edma_setup_interrupt(%struct.edma_chan* %16, i1 zeroext true) #11, !dbg !11142
  %17 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !11143
  %18 = load i32, i32* %eventq_no.addr, align 4, !dbg !11144
  call void @edma_assign_channel_eventq(%struct.edma_chan* %17, i32 %18) #11, !dbg !11145
  store i32 0, i32* %retval, align 4, !dbg !11146
  br label %return, !dbg !11146

return:                                           ; preds = %if.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !11147
  ret i32 %19, !dbg !11147
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_free_channel(%struct.edma_chan* %echan) #0 !dbg !11148 {
entry:
  %echan.addr = alloca %struct.edma_chan*, align 8
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !11149, metadata !DIExpression()), !dbg !11150
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !11151
  call void @edma_stop(%struct.edma_chan* %0) #11, !dbg !11152
  %1 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !11153
  call void @edma_setup_interrupt(%struct.edma_chan* %1, i1 zeroext false) #11, !dbg !11154
  ret void, !dbg !11155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_or_array2(%struct.edma_cc* %ecc, i32 %offset, i32 %i, i32 %j, i32 %or) #0 !dbg !11156 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  %or.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !11157, metadata !DIExpression()), !dbg !11158
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11159, metadata !DIExpression()), !dbg !11160
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !11161, metadata !DIExpression()), !dbg !11162
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !11163, metadata !DIExpression()), !dbg !11164
  store i32 %or, i32* %or.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %or.addr, metadata !11165, metadata !DIExpression()), !dbg !11166
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !11167
  %1 = load i32, i32* %offset.addr, align 4, !dbg !11168
  %2 = load i32, i32* %i.addr, align 4, !dbg !11169
  %mul = mul i32 %2, 2, !dbg !11170
  %3 = load i32, i32* %j.addr, align 4, !dbg !11171
  %add = add i32 %mul, %3, !dbg !11172
  %shl = shl i32 %add, 2, !dbg !11173
  %add1 = add i32 %1, %shl, !dbg !11174
  %4 = load i32, i32* %or.addr, align 4, !dbg !11175
  call void @edma_or(%struct.edma_cc* %0, i32 %add1, i32 %4) #11, !dbg !11176
  ret void, !dbg !11177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_setup_interrupt(%struct.edma_chan* %echan, i1 zeroext %enable) #0 !dbg !11178 {
entry:
  %echan.addr = alloca %struct.edma_chan*, align 8
  %enable.addr = alloca i8, align 1
  %ecc = alloca %struct.edma_cc*, align 8
  %channel = alloca i32, align 4
  %idx = alloca i32, align 4
  %ch_bit = alloca i32, align 4
  store %struct.edma_chan* %echan, %struct.edma_chan** %echan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan.addr, metadata !11181, metadata !DIExpression()), !dbg !11182
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !11183, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !11185, metadata !DIExpression()), !dbg !11186
  %0 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !11187
  %ecc1 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %0, i32 0, i32 3, !dbg !11188
  %1 = load %struct.edma_cc*, %struct.edma_cc** %ecc1, align 8, !dbg !11188
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !11186
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !11189, metadata !DIExpression()), !dbg !11190
  %2 = load %struct.edma_chan*, %struct.edma_chan** %echan.addr, align 8, !dbg !11191
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %2, i32 0, i32 5, !dbg !11191
  %3 = load i32, i32* %ch_num, align 8, !dbg !11191
  %and = and i32 %3, 65535, !dbg !11191
  store i32 %and, i32* %channel, align 4, !dbg !11190
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !11192, metadata !DIExpression()), !dbg !11193
  %4 = load i32, i32* %channel, align 4, !dbg !11194
  %shr = ashr i32 %4, 5, !dbg !11194
  store i32 %shr, i32* %idx, align 4, !dbg !11193
  call void @llvm.dbg.declare(metadata i32* %ch_bit, metadata !11195, metadata !DIExpression()), !dbg !11196
  %5 = load i32, i32* %channel, align 4, !dbg !11197
  %and2 = and i32 %5, 31, !dbg !11197
  %sh_prom = zext i32 %and2 to i64, !dbg !11197
  %shl = shl i64 1, %sh_prom, !dbg !11197
  %conv = trunc i64 %shl to i32, !dbg !11197
  store i32 %conv, i32* %ch_bit, align 4, !dbg !11196
  %6 = load i8, i8* %enable.addr, align 1, !dbg !11198
  %tobool = trunc i8 %6 to i1, !dbg !11198
  br i1 %tobool, label %if.then, label %if.else, !dbg !11200

if.then:                                          ; preds = %entry
  %7 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11201
  %8 = load i32, i32* %idx, align 4, !dbg !11203
  %9 = load i32, i32* %ch_bit, align 4, !dbg !11204
  call void @edma_shadow0_write_array(%struct.edma_cc* %7, i32 112, i32 %8, i32 %9) #11, !dbg !11205
  %10 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11206
  %11 = load i32, i32* %idx, align 4, !dbg !11207
  %12 = load i32, i32* %ch_bit, align 4, !dbg !11208
  call void @edma_shadow0_write_array(%struct.edma_cc* %10, i32 96, i32 %11, i32 %12) #11, !dbg !11209
  br label %if.end, !dbg !11210

if.else:                                          ; preds = %entry
  %13 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11211
  %14 = load i32, i32* %idx, align 4, !dbg !11213
  %15 = load i32, i32* %ch_bit, align 4, !dbg !11214
  call void @edma_shadow0_write_array(%struct.edma_cc* %13, i32 88, i32 %14, i32 %15) #11, !dbg !11215
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11216
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_or(%struct.edma_cc* %ecc, i32 %offset, i32 %or) #0 !dbg !11217 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  %or.addr = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !11218, metadata !DIExpression()), !dbg !11219
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11220, metadata !DIExpression()), !dbg !11221
  store i32 %or, i32* %or.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %or.addr, metadata !11222, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11224, metadata !DIExpression()), !dbg !11225
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !11226
  %1 = load i32, i32* %offset.addr, align 4, !dbg !11227
  %call = call i32 @edma_read(%struct.edma_cc* %0, i32 %1) #11, !dbg !11228
  store i32 %call, i32* %val, align 4, !dbg !11225
  %2 = load i32, i32* %or.addr, align 4, !dbg !11229
  %3 = load i32, i32* %val, align 4, !dbg !11230
  %or1 = or i32 %3, %2, !dbg !11230
  store i32 %or1, i32* %val, align 4, !dbg !11230
  %4 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !11231
  %5 = load i32, i32* %offset.addr, align 4, !dbg !11232
  %6 = load i32, i32* %val, align 4, !dbg !11233
  call void @edma_write(%struct.edma_cc* %4, i32 %5, i32 %6) #11, !dbg !11234
  ret void, !dbg !11235
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_free_chan_resources(%struct.virt_dma_chan* %vc) #0 !dbg !11236 {
entry:
  %lock.addr.i33 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i33, metadata !9947, metadata !DIExpression()), !dbg !11239
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9953, metadata !DIExpression()), !dbg !11241
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9955, metadata !DIExpression()), !dbg !11242
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %vd = alloca %struct.virt_dma_desc*, align 8
  %flags = alloca i64, align 8
  %head = alloca %struct.list_head, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp22 = alloca %struct.virt_dma_desc*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.virt_dma_desc*, align 8
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !11249, metadata !DIExpression()), !dbg !11250
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd, metadata !11251, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11253, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.declare(metadata %struct.list_head* %head, metadata !11255, metadata !DIExpression()), !dbg !11256
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0, !dbg !11256
  store %struct.list_head* %head, %struct.list_head** %next, align 8, !dbg !11256
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1, !dbg !11256
  store %struct.list_head* %head, %struct.list_head** %prev, align 8, !dbg !11256
  br label %do.body, !dbg !11257

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11258

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11259, metadata !DIExpression()), !dbg !11261
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11262, metadata !DIExpression()), !dbg !11261
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11261
  %conv = zext i1 %cmp to i32, !dbg !11261
  store i32 1, i32* %tmp, align 4, !dbg !11261
  %0 = load i32, i32* %tmp, align 4, !dbg !11261
  br label %do.body2, !dbg !11263

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !11264

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !11265

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !11267, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !11271, metadata !DIExpression()), !dbg !11270
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !11270
  %conv8 = zext i1 %cmp7 to i32, !dbg !11270
  store i32 1, i32* %tmp9, align 4, !dbg !11270
  %1 = load i32, i32* %tmp9, align 4, !dbg !11270
  %call = call i64 @arch_local_irq_save() #11, !dbg !11272
  store i64 %call, i64* %flags, align 8, !dbg !11272
  br label %do.end, !dbg !11272

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !11265

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !11264

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11273, !srcloc !11274
  br label %do.body12, !dbg !11273

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11275
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %2, i32 0, i32 3, !dbg !11275
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11276
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !11277
  %rlock.i = bitcast %union.anon.3* %4 to %struct.raw_spinlock*, !dbg !11277
  br label %do.end14, !dbg !11275

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !11273

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !11264

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !11263

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11258

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11278
  call void @vchan_get_all_descriptors(%struct.virt_dma_chan* %5, %struct.list_head* %head) #11, !dbg !11279
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11280, metadata !DIExpression()), !dbg !11283
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0, !dbg !11283
  %6 = load %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !11283
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !11283
  store i8* %7, i8** %__mptr, align 8, !dbg !11283
  br label %do.body20, !dbg !11283

do.body20:                                        ; preds = %do.end18
  br label %do.end21, !dbg !11284

do.end21:                                         ; preds = %do.body20
  %8 = load i8*, i8** %__mptr, align 8, !dbg !11283
  %add.ptr = getelementptr i8, i8* %8, i64 -96, !dbg !11283
  %9 = bitcast i8* %add.ptr to %struct.virt_dma_desc*, !dbg !11283
  store %struct.virt_dma_desc* %9, %struct.virt_dma_desc** %tmp22, align 8, !dbg !11284
  %10 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %tmp22, align 8, !dbg !11283
  store %struct.virt_dma_desc* %10, %struct.virt_dma_desc** %vd, align 8, !dbg !11286
  br label %for.cond, !dbg !11286

for.cond:                                         ; preds = %do.end29, %do.end21
  %11 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !11287
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %11, i32 0, i32 2, !dbg !11287
  %cmp23 = icmp eq %struct.list_head* %node, %head, !dbg !11287
  %lnot = xor i1 %cmp23, true, !dbg !11287
  br i1 %lnot, label %for.body, label %for.end, !dbg !11286

for.body:                                         ; preds = %for.cond
  %12 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !11289
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %12, i32 0, i32 0, !dbg !11290
  call void @dmaengine_desc_clear_reuse(%struct.dma_async_tx_descriptor* %tx) #11, !dbg !11291
  br label %for.inc, !dbg !11291

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !11292, metadata !DIExpression()), !dbg !11294
  %13 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !11294
  %node26 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %13, i32 0, i32 2, !dbg !11294
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %node26, i32 0, i32 0, !dbg !11294
  %14 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !11294
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !11294
  store i8* %15, i8** %__mptr25, align 8, !dbg !11294
  br label %do.body28, !dbg !11294

do.body28:                                        ; preds = %for.inc
  br label %do.end29, !dbg !11295

do.end29:                                         ; preds = %do.body28
  %16 = load i8*, i8** %__mptr25, align 8, !dbg !11294
  %add.ptr31 = getelementptr i8, i8* %16, i64 -96, !dbg !11294
  %17 = bitcast i8* %add.ptr31 to %struct.virt_dma_desc*, !dbg !11294
  store %struct.virt_dma_desc* %17, %struct.virt_dma_desc** %tmp30, align 8, !dbg !11295
  %18 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %tmp30, align 8, !dbg !11294
  store %struct.virt_dma_desc* %18, %struct.virt_dma_desc** %vd, align 8, !dbg !11287
  br label %for.cond, !dbg !11287, !llvm.loop !11297

for.end:                                          ; preds = %for.cond
  %19 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11299
  %lock32 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %19, i32 0, i32 3, !dbg !11300
  %20 = load i64, i64* %flags, align 8, !dbg !11301
  store %struct.spinlock* %lock32, %struct.spinlock** %lock.addr.i33, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !376, metadata !10010, metadata !DIExpression()) #10, !dbg !11302
  call void @llvm.dbg.declare(metadata !376, metadata !10014, metadata !DIExpression()) #10, !dbg !11302
  store i32 1, i32* %tmp.i, align 4, !dbg !11302
  %21 = load i32, i32* %tmp.i, align 4, !dbg !11302
  call void @llvm.dbg.declare(metadata !376, metadata !10015, metadata !DIExpression()) #10, !dbg !11303
  call void @llvm.dbg.declare(metadata !376, metadata !10021, metadata !DIExpression()) #10, !dbg !11303
  store i32 1, i32* %tmp8.i, align 4, !dbg !11303
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !11303
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !11304
  call void @arch_local_irq_restore(i64 %23) #13, !dbg !11304
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11305, !srcloc !10025
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i33, align 8, !dbg !11306
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !11306
  %rlock.i34 = bitcast %union.anon.3* %25 to %struct.raw_spinlock*, !dbg !11306
  %26 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11307
  call void @vchan_dma_desc_free_list(%struct.virt_dma_chan* %26, %struct.list_head* %head) #11, !dbg !11308
  ret void, !dbg !11309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_get_all_descriptors(%struct.virt_dma_chan* %vc, %struct.list_head* %head) #0 !dbg !11310 {
entry:
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !11313, metadata !DIExpression()), !dbg !11314
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11315, metadata !DIExpression()), !dbg !11316
  %0 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11317
  %desc_allocated = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %0, i32 0, i32 4, !dbg !11318
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11319
  call void @list_splice_tail_init(%struct.list_head* %desc_allocated, %struct.list_head* %1) #11, !dbg !11320
  %2 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11321
  %desc_submitted = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %2, i32 0, i32 5, !dbg !11322
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11323
  call void @list_splice_tail_init(%struct.list_head* %desc_submitted, %struct.list_head* %3) #11, !dbg !11324
  %4 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11325
  %desc_issued = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %4, i32 0, i32 6, !dbg !11326
  %5 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11327
  call void @list_splice_tail_init(%struct.list_head* %desc_issued, %struct.list_head* %5) #11, !dbg !11328
  %6 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11329
  %desc_completed = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %6, i32 0, i32 7, !dbg !11330
  %7 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11331
  call void @list_splice_tail_init(%struct.list_head* %desc_completed, %struct.list_head* %7) #11, !dbg !11332
  %8 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11333
  %desc_terminated = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %8, i32 0, i32 8, !dbg !11334
  %9 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11335
  call void @list_splice_tail_init(%struct.list_head* %desc_terminated, %struct.list_head* %9) #11, !dbg !11336
  ret void, !dbg !11337
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dmaengine_desc_clear_reuse(%struct.dma_async_tx_descriptor* %tx) #0 !dbg !11338 {
entry:
  %tx.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  store %struct.dma_async_tx_descriptor* %tx, %struct.dma_async_tx_descriptor** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %tx.addr, metadata !11339, metadata !DIExpression()), !dbg !11340
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !11341
  %flags = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %0, i32 0, i32 1, !dbg !11342
  %1 = load i32, i32* %flags, align 4, !dbg !11343
  %and = and i32 %1, -65, !dbg !11343
  store i32 %and, i32* %flags, align 4, !dbg !11343
  ret void, !dbg !11344
}

; Function Attrs: noredzone
declare dso_local void @vchan_dma_desc_free_list(%struct.virt_dma_chan*, %struct.list_head*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice_tail_init(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !11345 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !11346, metadata !DIExpression()), !dbg !11347
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11348, metadata !DIExpression()), !dbg !11349
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11350
  %call = call i32 @list_empty(%struct.list_head* %0) #11, !dbg !11352
  %tobool = icmp ne i32 %call, 0, !dbg !11352
  br i1 %tobool, label %if.end, label %if.then, !dbg !11353

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11354
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11356
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !11357
  %3 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !11357
  %4 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11358
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %3, %struct.list_head* %4) #11, !dbg !11359
  %5 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11360
  call void @INIT_LIST_HEAD(%struct.list_head* %5) #11, !dbg !11361
  br label %if.end, !dbg !11362

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !11364 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11369, metadata !DIExpression()), !dbg !11370
  br label %do.body, !dbg !11371

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11373

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11371
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !11371
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11371
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !11373
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !11371
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11375
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !11376
  %conv = zext i1 %cmp to i32, !dbg !11376
  ret i32 %conv, !dbg !11377
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_splice(%struct.list_head* %list, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !11378 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %first = alloca %struct.list_head*, align 8
  %last = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !11381, metadata !DIExpression()), !dbg !11382
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !11383, metadata !DIExpression()), !dbg !11384
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !11385, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.declare(metadata %struct.list_head** %first, metadata !11387, metadata !DIExpression()), !dbg !11388
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11389
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !11390
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !11390
  store %struct.list_head* %1, %struct.list_head** %first, align 8, !dbg !11388
  call void @llvm.dbg.declare(metadata %struct.list_head** %last, metadata !11391, metadata !DIExpression()), !dbg !11392
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11393
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !11394
  %3 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !11394
  store %struct.list_head* %3, %struct.list_head** %last, align 8, !dbg !11392
  %4 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11395
  %5 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !11396
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 1, !dbg !11397
  store %struct.list_head* %4, %struct.list_head** %prev3, align 8, !dbg !11398
  %6 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !11399
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11400
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !11401
  store %struct.list_head* %6, %struct.list_head** %next4, align 8, !dbg !11402
  %8 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11403
  %9 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !11404
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !11405
  store %struct.list_head* %8, %struct.list_head** %next5, align 8, !dbg !11406
  %10 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !11407
  %11 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11408
  %prev6 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 1, !dbg !11409
  store %struct.list_head* %10, %struct.list_head** %prev6, align 8, !dbg !11410
  ret void, !dbg !11411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @vchan_issue_pending(%struct.virt_dma_chan* %vc) #0 !dbg !11412 {
entry:
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !11415, metadata !DIExpression()), !dbg !11416
  %0 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11417
  %desc_submitted = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %0, i32 0, i32 5, !dbg !11418
  %1 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11419
  %desc_issued = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %1, i32 0, i32 6, !dbg !11420
  call void @list_splice_tail_init(%struct.list_head* %desc_submitted, %struct.list_head* %desc_issued) #11, !dbg !11421
  %2 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11422
  %desc_issued1 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %2, i32 0, i32 6, !dbg !11423
  %call = call i32 @list_empty(%struct.list_head* %desc_issued1) #11, !dbg !11424
  %tobool = icmp ne i32 %call, 0, !dbg !11425
  %lnot = xor i1 %tobool, true, !dbg !11425
  ret i1 %lnot, !dbg !11426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_cookie_status(%struct.dma_chan* %chan, i32 %cookie, %struct.dma_tx_state* %state) #0 !dbg !11427 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %cookie.addr = alloca i32, align 4
  %state.addr = alloca %struct.dma_tx_state*, align 8
  %used = alloca i32, align 4
  %complete = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !11428, metadata !DIExpression()), !dbg !11429
  store i32 %cookie, i32* %cookie.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cookie.addr, metadata !11430, metadata !DIExpression()), !dbg !11431
  store %struct.dma_tx_state* %state, %struct.dma_tx_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_tx_state** %state.addr, metadata !11432, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.declare(metadata i32* %used, metadata !11434, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.declare(metadata i32* %complete, metadata !11436, metadata !DIExpression()), !dbg !11437
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !11438
  %cookie1 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 2, !dbg !11439
  %1 = load i32, i32* %cookie1, align 8, !dbg !11439
  store i32 %1, i32* %used, align 4, !dbg !11440
  %2 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !11441
  %completed_cookie = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %2, i32 0, i32 3, !dbg !11442
  %3 = load i32, i32* %completed_cookie, align 4, !dbg !11442
  store i32 %3, i32* %complete, align 4, !dbg !11443
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11444, !srcloc !11445
  %4 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !11446
  %tobool = icmp ne %struct.dma_tx_state* %4, null, !dbg !11446
  br i1 %tobool, label %if.then, label %if.end, !dbg !11448

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %complete, align 4, !dbg !11449
  %6 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !11451
  %last = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %6, i32 0, i32 0, !dbg !11452
  store i32 %5, i32* %last, align 4, !dbg !11453
  %7 = load i32, i32* %used, align 4, !dbg !11454
  %8 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !11455
  %used2 = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %8, i32 0, i32 1, !dbg !11456
  store i32 %7, i32* %used2, align 4, !dbg !11457
  %9 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !11458
  %residue = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %9, i32 0, i32 2, !dbg !11459
  store i32 0, i32* %residue, align 4, !dbg !11460
  %10 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !11461
  %in_flight_bytes = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %10, i32 0, i32 3, !dbg !11462
  store i32 0, i32* %in_flight_bytes, align 4, !dbg !11463
  br label %if.end, !dbg !11464

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %cookie.addr, align 4, !dbg !11465
  %12 = load i32, i32* %complete, align 4, !dbg !11466
  %13 = load i32, i32* %used, align 4, !dbg !11467
  %call = call i32 @dma_async_is_complete(i32 %11, i32 %12, i32 %13) #11, !dbg !11468
  ret i32 %call, !dbg !11469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_residue(%struct.edma_desc* %edesc) #0 !dbg !11470 {
entry:
  %retval = alloca i32, align 4
  %edesc.addr = alloca %struct.edma_desc*, align 8
  %dst = alloca i8, align 1
  %loop_count = alloca i32, align 4
  %echan = alloca %struct.edma_chan*, align 8
  %pset = alloca %struct.edma_pset*, align 8
  %done = alloca i64, align 8
  %pos = alloca i64, align 8
  %pos_old = alloca i64, align 8
  %channel = alloca i32, align 4
  %idx = alloca i32, align 4
  %ch_bit = alloca i32, align 4
  %event_reg = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.edma_desc* %edesc, %struct.edma_desc** %edesc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_desc** %edesc.addr, metadata !11473, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.declare(metadata i8* %dst, metadata !11475, metadata !DIExpression()), !dbg !11476
  %0 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11477
  %direction = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %0, i32 0, i32 2, !dbg !11478
  %1 = load i32, i32* %direction, align 8, !dbg !11478
  %cmp = icmp eq i32 %1, 2, !dbg !11479
  %frombool = zext i1 %cmp to i8, !dbg !11476
  store i8 %frombool, i8* %dst, align 1, !dbg !11476
  call void @llvm.dbg.declare(metadata i32* %loop_count, metadata !11480, metadata !DIExpression()), !dbg !11481
  store i32 1000, i32* %loop_count, align 4, !dbg !11481
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !11482, metadata !DIExpression()), !dbg !11483
  %2 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11484
  %echan1 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %2, i32 0, i32 7, !dbg !11485
  %3 = load %struct.edma_chan*, %struct.edma_chan** %echan1, align 8, !dbg !11485
  store %struct.edma_chan* %3, %struct.edma_chan** %echan, align 8, !dbg !11483
  call void @llvm.dbg.declare(metadata %struct.edma_pset** %pset, metadata !11486, metadata !DIExpression()), !dbg !11487
  %4 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11488
  %pset2 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %4, i32 0, i32 13, !dbg !11489
  %arraydecay = getelementptr inbounds [0 x %struct.edma_pset], [0 x %struct.edma_pset]* %pset2, i64 0, i64 0, !dbg !11488
  store %struct.edma_pset* %arraydecay, %struct.edma_pset** %pset, align 8, !dbg !11487
  call void @llvm.dbg.declare(metadata i64* %done, metadata !11490, metadata !DIExpression()), !dbg !11491
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !11492, metadata !DIExpression()), !dbg !11493
  call void @llvm.dbg.declare(metadata i64* %pos_old, metadata !11494, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !11496, metadata !DIExpression()), !dbg !11497
  %5 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11498
  %ch_num = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %5, i32 0, i32 5, !dbg !11498
  %6 = load i32, i32* %ch_num, align 8, !dbg !11498
  %and = and i32 %6, 65535, !dbg !11498
  store i32 %and, i32* %channel, align 4, !dbg !11497
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !11499, metadata !DIExpression()), !dbg !11500
  %7 = load i32, i32* %channel, align 4, !dbg !11501
  %shr = ashr i32 %7, 5, !dbg !11501
  store i32 %shr, i32* %idx, align 4, !dbg !11500
  call void @llvm.dbg.declare(metadata i32* %ch_bit, metadata !11502, metadata !DIExpression()), !dbg !11503
  %8 = load i32, i32* %channel, align 4, !dbg !11504
  %and3 = and i32 %8, 31, !dbg !11504
  %sh_prom = zext i32 %and3 to i64, !dbg !11504
  %shl = shl i64 1, %sh_prom, !dbg !11504
  %conv = trunc i64 %shl to i32, !dbg !11504
  store i32 %conv, i32* %ch_bit, align 4, !dbg !11503
  call void @llvm.dbg.declare(metadata i32* %event_reg, metadata !11505, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11507, metadata !DIExpression()), !dbg !11508
  %9 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11509
  %ecc = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %9, i32 0, i32 3, !dbg !11510
  %10 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11510
  %11 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11511
  %slot = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %11, i32 0, i32 8, !dbg !11512
  %arrayidx = getelementptr [20 x i32], [20 x i32]* %slot, i64 0, i64 0, !dbg !11511
  %12 = load i32, i32* %arrayidx, align 8, !dbg !11511
  %13 = load i8, i8* %dst, align 1, !dbg !11513
  %tobool = trunc i8 %13 to i1, !dbg !11513
  %call = call i64 @edma_get_position(%struct.edma_cc* %10, i32 %12, i1 zeroext %tobool) #11, !dbg !11514
  store i64 %call, i64* %pos, align 8, !dbg !11515
  %14 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11516
  %direction4 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %14, i32 0, i32 2, !dbg !11518
  %15 = load i32, i32* %direction4, align 8, !dbg !11518
  %call5 = call zeroext i1 @is_slave_direction(i32 %15) #11, !dbg !11519
  br i1 %call5, label %if.then, label %if.else, !dbg !11520

if.then:                                          ; preds = %entry
  store i32 0, i32* %event_reg, align 4, !dbg !11521
  br label %if.end, !dbg !11522

if.else:                                          ; preds = %entry
  store i32 16, i32* %event_reg, align 4, !dbg !11523
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load i64, i64* %pos, align 8, !dbg !11524
  store i64 %16, i64* %pos_old, align 8, !dbg !11525
  br label %while.cond, !dbg !11526

while.cond:                                       ; preds = %if.end21, %if.end
  %17 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11527
  %ecc6 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %17, i32 0, i32 3, !dbg !11528
  %18 = load %struct.edma_cc*, %struct.edma_cc** %ecc6, align 8, !dbg !11528
  %19 = load i32, i32* %event_reg, align 4, !dbg !11529
  %20 = load i32, i32* %idx, align 4, !dbg !11530
  %call7 = call i32 @edma_shadow0_read_array(%struct.edma_cc* %18, i32 %19, i32 %20) #11, !dbg !11531
  %21 = load i32, i32* %ch_bit, align 4, !dbg !11532
  %and8 = and i32 %call7, %21, !dbg !11533
  %tobool9 = icmp ne i32 %and8, 0, !dbg !11526
  br i1 %tobool9, label %while.body, label %while.end, !dbg !11526

while.body:                                       ; preds = %while.cond
  %22 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11534
  %ecc10 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %22, i32 0, i32 3, !dbg !11536
  %23 = load %struct.edma_cc*, %struct.edma_cc** %ecc10, align 8, !dbg !11536
  %24 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11537
  %slot11 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %24, i32 0, i32 8, !dbg !11538
  %arrayidx12 = getelementptr [20 x i32], [20 x i32]* %slot11, i64 0, i64 0, !dbg !11537
  %25 = load i32, i32* %arrayidx12, align 8, !dbg !11537
  %26 = load i8, i8* %dst, align 1, !dbg !11539
  %tobool13 = trunc i8 %26 to i1, !dbg !11539
  %call14 = call i64 @edma_get_position(%struct.edma_cc* %23, i32 %25, i1 zeroext %tobool13) #11, !dbg !11540
  store i64 %call14, i64* %pos, align 8, !dbg !11541
  %27 = load i64, i64* %pos, align 8, !dbg !11542
  %28 = load i64, i64* %pos_old, align 8, !dbg !11544
  %cmp15 = icmp ne i64 %27, %28, !dbg !11545
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !11546

if.then17:                                        ; preds = %while.body
  br label %while.end, !dbg !11547

if.end18:                                         ; preds = %while.body
  %29 = load i32, i32* %loop_count, align 4, !dbg !11548
  %dec = add i32 %29, -1, !dbg !11548
  store i32 %dec, i32* %loop_count, align 4, !dbg !11548
  %tobool19 = icmp ne i32 %dec, 0, !dbg !11548
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !11550

if.then20:                                        ; preds = %if.end18
  br label %do.body, !dbg !11551

do.body:                                          ; preds = %if.then20
  br label %do.end, !dbg !11553

do.end:                                           ; preds = %do.body
  br label %while.end, !dbg !11555

if.end21:                                         ; preds = %if.end18
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11556, !srcloc !11562
  br label %while.cond, !dbg !11526, !llvm.loop !11563

while.end:                                        ; preds = %do.end, %if.then17, %while.cond
  %30 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11565
  %cyclic = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %30, i32 0, i32 3, !dbg !11567
  %31 = load i32, i32* %cyclic, align 4, !dbg !11567
  %tobool22 = icmp ne i32 %31, 0, !dbg !11565
  br i1 %tobool22, label %if.then23, label %if.end28, !dbg !11568

if.then23:                                        ; preds = %while.end
  %32 = load i64, i64* %pos, align 8, !dbg !11569
  %33 = load %struct.edma_pset*, %struct.edma_pset** %pset, align 8, !dbg !11571
  %addr = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %33, i32 0, i32 1, !dbg !11572
  %34 = load i64, i64* %addr, align 8, !dbg !11572
  %sub = sub i64 %32, %34, !dbg !11573
  store i64 %sub, i64* %done, align 8, !dbg !11574
  %35 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11575
  %residue = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %35, i32 0, i32 11, !dbg !11576
  %36 = load i32, i32* %residue, align 4, !dbg !11576
  %conv24 = zext i32 %36 to i64, !dbg !11575
  %37 = load i64, i64* %done, align 8, !dbg !11577
  %sub25 = sub i64 %conv24, %37, !dbg !11578
  %conv26 = trunc i64 %sub25 to i32, !dbg !11575
  %38 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11579
  %residue_stat = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %38, i32 0, i32 12, !dbg !11580
  store i32 %conv26, i32* %residue_stat, align 8, !dbg !11581
  %39 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11582
  %residue_stat27 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %39, i32 0, i32 12, !dbg !11583
  %40 = load i32, i32* %residue_stat27, align 8, !dbg !11583
  store i32 %40, i32* %retval, align 4, !dbg !11584
  br label %return, !dbg !11584

if.end28:                                         ; preds = %while.end
  %41 = load i64, i64* %pos, align 8, !dbg !11585
  %tobool29 = icmp ne i64 %41, 0, !dbg !11585
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !11587

if.then30:                                        ; preds = %if.end28
  store i32 0, i32* %retval, align 4, !dbg !11588
  br label %return, !dbg !11588

if.end31:                                         ; preds = %if.end28
  %42 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11589
  %processed_stat = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %42, i32 0, i32 9, !dbg !11590
  %43 = load i32, i32* %processed_stat, align 4, !dbg !11590
  %44 = load %struct.edma_pset*, %struct.edma_pset** %pset, align 8, !dbg !11591
  %idx.ext = sext i32 %43 to i64, !dbg !11591
  %add.ptr = getelementptr %struct.edma_pset, %struct.edma_pset* %44, i64 %idx.ext, !dbg !11591
  store %struct.edma_pset* %add.ptr, %struct.edma_pset** %pset, align 8, !dbg !11591
  %45 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11592
  %processed_stat32 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %45, i32 0, i32 9, !dbg !11594
  %46 = load i32, i32* %processed_stat32, align 4, !dbg !11594
  store i32 %46, i32* %i, align 4, !dbg !11595
  br label %for.cond, !dbg !11596

for.cond:                                         ; preds = %for.inc, %if.end31
  %47 = load i32, i32* %i, align 4, !dbg !11597
  %48 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11599
  %processed = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %48, i32 0, i32 8, !dbg !11600
  %49 = load i32, i32* %processed, align 8, !dbg !11600
  %cmp33 = icmp slt i32 %47, %49, !dbg !11601
  br i1 %cmp33, label %for.body, label %for.end, !dbg !11602

for.body:                                         ; preds = %for.cond
  %50 = load i64, i64* %pos, align 8, !dbg !11603
  %51 = load %struct.edma_pset*, %struct.edma_pset** %pset, align 8, !dbg !11606
  %addr35 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %51, i32 0, i32 1, !dbg !11607
  %52 = load i64, i64* %addr35, align 8, !dbg !11607
  %cmp36 = icmp uge i64 %50, %52, !dbg !11608
  br i1 %cmp36, label %land.lhs.true, label %if.end49, !dbg !11609

land.lhs.true:                                    ; preds = %for.body
  %53 = load i64, i64* %pos, align 8, !dbg !11610
  %54 = load %struct.edma_pset*, %struct.edma_pset** %pset, align 8, !dbg !11611
  %addr38 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %54, i32 0, i32 1, !dbg !11612
  %55 = load i64, i64* %addr38, align 8, !dbg !11612
  %56 = load %struct.edma_pset*, %struct.edma_pset** %pset, align 8, !dbg !11613
  %len = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %56, i32 0, i32 0, !dbg !11614
  %57 = load i32, i32* %len, align 8, !dbg !11614
  %conv39 = zext i32 %57 to i64, !dbg !11613
  %add = add i64 %55, %conv39, !dbg !11615
  %cmp40 = icmp ult i64 %53, %add, !dbg !11616
  br i1 %cmp40, label %if.then42, label %if.end49, !dbg !11617

if.then42:                                        ; preds = %land.lhs.true
  %58 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11618
  %residue_stat43 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %58, i32 0, i32 12, !dbg !11619
  %59 = load i32, i32* %residue_stat43, align 8, !dbg !11619
  %conv44 = zext i32 %59 to i64, !dbg !11618
  %60 = load i64, i64* %pos, align 8, !dbg !11620
  %61 = load %struct.edma_pset*, %struct.edma_pset** %pset, align 8, !dbg !11621
  %addr45 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %61, i32 0, i32 1, !dbg !11622
  %62 = load i64, i64* %addr45, align 8, !dbg !11622
  %sub46 = sub i64 %60, %62, !dbg !11623
  %sub47 = sub i64 %conv44, %sub46, !dbg !11624
  %conv48 = trunc i64 %sub47 to i32, !dbg !11618
  store i32 %conv48, i32* %retval, align 4, !dbg !11625
  br label %return, !dbg !11625

if.end49:                                         ; preds = %land.lhs.true, %for.body
  %63 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11626
  %processed_stat50 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %63, i32 0, i32 9, !dbg !11627
  %64 = load i32, i32* %processed_stat50, align 4, !dbg !11628
  %inc = add i32 %64, 1, !dbg !11628
  store i32 %inc, i32* %processed_stat50, align 4, !dbg !11628
  %65 = load %struct.edma_pset*, %struct.edma_pset** %pset, align 8, !dbg !11629
  %len51 = getelementptr inbounds %struct.edma_pset, %struct.edma_pset* %65, i32 0, i32 0, !dbg !11630
  %66 = load i32, i32* %len51, align 8, !dbg !11630
  %67 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11631
  %residue_stat52 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %67, i32 0, i32 12, !dbg !11632
  %68 = load i32, i32* %residue_stat52, align 8, !dbg !11633
  %sub53 = sub i32 %68, %66, !dbg !11633
  store i32 %sub53, i32* %residue_stat52, align 8, !dbg !11633
  br label %for.inc, !dbg !11634

for.inc:                                          ; preds = %if.end49
  %69 = load i32, i32* %i, align 4, !dbg !11635
  %inc54 = add i32 %69, 1, !dbg !11635
  store i32 %inc54, i32* %i, align 4, !dbg !11635
  %70 = load %struct.edma_pset*, %struct.edma_pset** %pset, align 8, !dbg !11636
  %incdec.ptr = getelementptr %struct.edma_pset, %struct.edma_pset* %70, i32 1, !dbg !11636
  store %struct.edma_pset* %incdec.ptr, %struct.edma_pset** %pset, align 8, !dbg !11636
  br label %for.cond, !dbg !11637, !llvm.loop !11638

for.end:                                          ; preds = %for.cond
  %71 = load %struct.edma_desc*, %struct.edma_desc** %edesc.addr, align 8, !dbg !11640
  %residue_stat55 = getelementptr inbounds %struct.edma_desc, %struct.edma_desc* %71, i32 0, i32 12, !dbg !11641
  %72 = load i32, i32* %residue_stat55, align 8, !dbg !11641
  store i32 %72, i32* %retval, align 4, !dbg !11642
  br label %return, !dbg !11642

return:                                           ; preds = %for.end, %if.then42, %if.then30, %if.then23
  %73 = load i32, i32* %retval, align 4, !dbg !11643
  ret i32 %73, !dbg !11643
}

; Function Attrs: noredzone
declare dso_local %struct.virt_dma_desc* @vchan_find_desc(%struct.virt_dma_chan*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_async_is_complete(i32 %cookie, i32 %last_complete, i32 %last_used) #0 !dbg !11644 {
entry:
  %retval = alloca i32, align 4
  %cookie.addr = alloca i32, align 4
  %last_complete.addr = alloca i32, align 4
  %last_used.addr = alloca i32, align 4
  store i32 %cookie, i32* %cookie.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cookie.addr, metadata !11647, metadata !DIExpression()), !dbg !11648
  store i32 %last_complete, i32* %last_complete.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last_complete.addr, metadata !11649, metadata !DIExpression()), !dbg !11650
  store i32 %last_used, i32* %last_used.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last_used.addr, metadata !11651, metadata !DIExpression()), !dbg !11652
  %0 = load i32, i32* %last_complete.addr, align 4, !dbg !11653
  %1 = load i32, i32* %last_used.addr, align 4, !dbg !11655
  %cmp = icmp sle i32 %0, %1, !dbg !11656
  br i1 %cmp, label %if.then, label %if.else, !dbg !11657

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %cookie.addr, align 4, !dbg !11658
  %3 = load i32, i32* %last_complete.addr, align 4, !dbg !11661
  %cmp1 = icmp sle i32 %2, %3, !dbg !11662
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !11663

lor.lhs.false:                                    ; preds = %if.then
  %4 = load i32, i32* %cookie.addr, align 4, !dbg !11664
  %5 = load i32, i32* %last_used.addr, align 4, !dbg !11665
  %cmp2 = icmp sgt i32 %4, %5, !dbg !11666
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !11667

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  store i32 0, i32* %retval, align 4, !dbg !11668
  br label %return, !dbg !11668

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end8, !dbg !11669

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %cookie.addr, align 4, !dbg !11670
  %7 = load i32, i32* %last_complete.addr, align 4, !dbg !11673
  %cmp4 = icmp sle i32 %6, %7, !dbg !11674
  br i1 %cmp4, label %land.lhs.true, label %if.end7, !dbg !11675

land.lhs.true:                                    ; preds = %if.else
  %8 = load i32, i32* %cookie.addr, align 4, !dbg !11676
  %9 = load i32, i32* %last_used.addr, align 4, !dbg !11677
  %cmp5 = icmp sgt i32 %8, %9, !dbg !11678
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !11679

if.then6:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !11680
  br label %return, !dbg !11680

if.end7:                                          ; preds = %land.lhs.true, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end
  store i32 1, i32* %retval, align 4, !dbg !11681
  br label %return, !dbg !11681

return:                                           ; preds = %if.end8, %if.then6, %if.then3
  %10 = load i32, i32* %retval, align 4, !dbg !11682
  ret i32 %10, !dbg !11682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @edma_get_position(%struct.edma_cc* %ecc, i32 %slot, i1 zeroext %dst) #0 !dbg !11683 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %slot.addr = alloca i32, align 4
  %dst.addr = alloca i8, align 1
  %offs = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !11686, metadata !DIExpression()), !dbg !11687
  store i32 %slot, i32* %slot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot.addr, metadata !11688, metadata !DIExpression()), !dbg !11689
  %frombool = zext i1 %dst to i8
  store i8 %frombool, i8* %dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dst.addr, metadata !11690, metadata !DIExpression()), !dbg !11691
  call void @llvm.dbg.declare(metadata i32* %offs, metadata !11692, metadata !DIExpression()), !dbg !11693
  %0 = load i32, i32* %slot.addr, align 4, !dbg !11694
  %and = and i32 %0, 65535, !dbg !11694
  store i32 %and, i32* %slot.addr, align 4, !dbg !11695
  %1 = load i32, i32* %slot.addr, align 4, !dbg !11696
  %shl = shl i32 %1, 5, !dbg !11696
  %add = add i32 16384, %shl, !dbg !11696
  store i32 %add, i32* %offs, align 4, !dbg !11697
  %2 = load i8, i8* %dst.addr, align 1, !dbg !11698
  %tobool = trunc i8 %2 to i1, !dbg !11698
  %3 = zext i1 %tobool to i64, !dbg !11698
  %cond = select i1 %tobool, i32 12, i32 4, !dbg !11698
  %4 = load i32, i32* %offs, align 4, !dbg !11699
  %add1 = add i32 %4, %cond, !dbg !11699
  store i32 %add1, i32* %offs, align 4, !dbg !11699
  %5 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !11700
  %6 = load i32, i32* %offs, align 4, !dbg !11701
  %call = call i32 @edma_read(%struct.edma_cc* %5, i32 %6) #11, !dbg !11702
  %conv = zext i32 %call to i64, !dbg !11702
  ret i64 %conv, !dbg !11703
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_terminate_vdesc(%struct.virt_dma_desc* %vd) #0 !dbg !11704 {
entry:
  %vd.addr = alloca %struct.virt_dma_desc*, align 8
  %vc = alloca %struct.virt_dma_chan*, align 8
  store %struct.virt_dma_desc* %vd, %struct.virt_dma_desc** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd.addr, metadata !11705, metadata !DIExpression()), !dbg !11706
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc, metadata !11707, metadata !DIExpression()), !dbg !11708
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !11709
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %0, i32 0, i32 0, !dbg !11710
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx, i32 0, i32 3, !dbg !11711
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !11711
  %call = call %struct.virt_dma_chan* @to_virt_chan(%struct.dma_chan* %1) #11, !dbg !11712
  store %struct.virt_dma_chan* %call, %struct.virt_dma_chan** %vc, align 8, !dbg !11708
  %2 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !11713
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %2, i32 0, i32 2, !dbg !11714
  %3 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !11715
  %desc_terminated = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %3, i32 0, i32 8, !dbg !11716
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* %desc_terminated) #11, !dbg !11717
  %4 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !11718
  %cyclic = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %4, i32 0, i32 9, !dbg !11720
  %5 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %cyclic, align 8, !dbg !11720
  %6 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !11721
  %cmp = icmp eq %struct.virt_dma_desc* %5, %6, !dbg !11722
  br i1 %cmp, label %if.then, label %if.end, !dbg !11723

if.then:                                          ; preds = %entry
  %7 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !11724
  %cyclic1 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %7, i32 0, i32 9, !dbg !11725
  store %struct.virt_dma_desc* null, %struct.virt_dma_desc** %cyclic1, align 8, !dbg !11726
  br label %if.end, !dbg !11724

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11727
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_synchronize(%struct.virt_dma_chan* %vc) #0 !dbg !11728 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !9947, metadata !DIExpression()), !dbg !11729
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9953, metadata !DIExpression()), !dbg !11731
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9955, metadata !DIExpression()), !dbg !11732
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %head = alloca %struct.list_head, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !11739, metadata !DIExpression()), !dbg !11740
  call void @llvm.dbg.declare(metadata %struct.list_head* %head, metadata !11741, metadata !DIExpression()), !dbg !11742
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0, !dbg !11742
  store %struct.list_head* %head, %struct.list_head** %next, align 8, !dbg !11742
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1, !dbg !11742
  store %struct.list_head* %head, %struct.list_head** %prev, align 8, !dbg !11742
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11743, metadata !DIExpression()), !dbg !11744
  %0 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11745
  %task = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %0, i32 0, i32 1, !dbg !11746
  call void @tasklet_kill(%struct.tasklet_struct* %task) #11, !dbg !11747
  br label %do.body, !dbg !11748

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11749

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11750, metadata !DIExpression()), !dbg !11752
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11753, metadata !DIExpression()), !dbg !11752
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11752
  %conv = zext i1 %cmp to i32, !dbg !11752
  store i32 1, i32* %tmp, align 4, !dbg !11752
  %1 = load i32, i32* %tmp, align 4, !dbg !11752
  br label %do.body2, !dbg !11754

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !11755

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !11756

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !11758, metadata !DIExpression()), !dbg !11761
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !11762, metadata !DIExpression()), !dbg !11761
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !11761
  %conv8 = zext i1 %cmp7 to i32, !dbg !11761
  store i32 1, i32* %tmp9, align 4, !dbg !11761
  %2 = load i32, i32* %tmp9, align 4, !dbg !11761
  %call = call i64 @arch_local_irq_save() #11, !dbg !11763
  store i64 %call, i64* %flags, align 8, !dbg !11763
  br label %do.end, !dbg !11763

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !11756

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !11755

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11764, !srcloc !11765
  br label %do.body12, !dbg !11764

do.body12:                                        ; preds = %do.body11
  %3 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11766
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %3, i32 0, i32 3, !dbg !11766
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11767
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !11768
  %rlock.i = bitcast %union.anon.3* %5 to %struct.raw_spinlock*, !dbg !11768
  br label %do.end14, !dbg !11766

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !11764

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !11755

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !11754

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11749

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11769
  %desc_terminated = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %6, i32 0, i32 8, !dbg !11770
  call void @list_splice_tail_init(%struct.list_head* %desc_terminated, %struct.list_head* %head) #11, !dbg !11771
  %7 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11772
  %lock19 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %7, i32 0, i32 3, !dbg !11773
  %8 = load i64, i64* %flags, align 8, !dbg !11774
  store %struct.spinlock* %lock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !376, metadata !10010, metadata !DIExpression()) #10, !dbg !11775
  call void @llvm.dbg.declare(metadata !376, metadata !10014, metadata !DIExpression()) #10, !dbg !11775
  store i32 1, i32* %tmp.i, align 4, !dbg !11775
  %9 = load i32, i32* %tmp.i, align 4, !dbg !11775
  call void @llvm.dbg.declare(metadata !376, metadata !10015, metadata !DIExpression()) #10, !dbg !11776
  call void @llvm.dbg.declare(metadata !376, metadata !10021, metadata !DIExpression()) #10, !dbg !11776
  store i32 1, i32* %tmp8.i, align 4, !dbg !11776
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !11776
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !11777
  call void @arch_local_irq_restore(i64 %11) #13, !dbg !11777
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11778, !srcloc !10025
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !11779
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !11779
  %rlock.i21 = bitcast %union.anon.3* %13 to %struct.raw_spinlock*, !dbg !11779
  %14 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !11780
  call void @vchan_dma_desc_free_list(%struct.virt_dma_chan* %14, %struct.list_head* %head) #11, !dbg !11781
  ret void, !dbg !11782
}

; Function Attrs: noredzone
declare dso_local void @tasklet_kill(%struct.tasklet_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_modify_array(%struct.edma_cc* %ecc, i32 %offset, i32 %i, i32 %and, i32 %or) #0 !dbg !11783 {
entry:
  %ecc.addr = alloca %struct.edma_cc*, align 8
  %offset.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %and.addr = alloca i32, align 4
  %or.addr = alloca i32, align 4
  store %struct.edma_cc* %ecc, %struct.edma_cc** %ecc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc.addr, metadata !11784, metadata !DIExpression()), !dbg !11785
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11786, metadata !DIExpression()), !dbg !11787
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !11788, metadata !DIExpression()), !dbg !11789
  store i32 %and, i32* %and.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %and.addr, metadata !11790, metadata !DIExpression()), !dbg !11791
  store i32 %or, i32* %or.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %or.addr, metadata !11792, metadata !DIExpression()), !dbg !11793
  %0 = load %struct.edma_cc*, %struct.edma_cc** %ecc.addr, align 8, !dbg !11794
  %1 = load i32, i32* %offset.addr, align 4, !dbg !11795
  %2 = load i32, i32* %i.addr, align 4, !dbg !11796
  %shl = shl i32 %2, 2, !dbg !11797
  %add = add i32 %1, %shl, !dbg !11798
  %3 = load i32, i32* %and.addr, align 4, !dbg !11799
  %4 = load i32, i32* %or.addr, align 4, !dbg !11800
  call void @edma_modify(%struct.edma_cc* %0, i32 %add, i32 %3, i32 %4) #11, !dbg !11801
  ret void, !dbg !11802
}

; Function Attrs: noredzone
declare dso_local %struct.dma_chan* @dma_get_slave_channel(%struct.dma_chan*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !11803 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11804, metadata !DIExpression()), !dbg !11806
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11808, metadata !DIExpression()), !dbg !11809
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !10416, metadata !DIExpression()), !dbg !11810
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10420, metadata !DIExpression()), !dbg !11812
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11813, metadata !DIExpression()), !dbg !11814
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11815, metadata !DIExpression()), !dbg !11816
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11817
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11818
  %div = sdiv i64 %1, 64, !dbg !11818
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11819
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11817
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11820
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11821
  %conv.i = trunc i64 %4 to i32, !dbg !11821
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !11822
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11823
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11823
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !11823
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11824
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11825
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !11826
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !11828
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !11829

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !11830
  %12 = bitcast i64* %11 to i8*, !dbg !11830
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !11830
  %shr.i = ashr i64 %13, 3, !dbg !11830
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !11830
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !11832
  %and.i = and i64 %14, 7, !dbg !11832
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !11832
  %shl.i = shl i32 1, %sh_prom.i, !dbg !11832
  %neg.i = xor i32 %shl.i, -1, !dbg !11833
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #10, !dbg !11834, !srcloc !11835
  br label %arch_clear_bit.exit, !dbg !11836

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !11837
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !11839
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !11840, !srcloc !11841
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !11842
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_idle(%struct.device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !11843 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11846, metadata !DIExpression()), !dbg !11847
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11848
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !11849
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11849
  ret i8* %1, !dbg !11850
}

; Function Attrs: noredzone
declare dso_local void @devm_free_irq(%struct.device*, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edma_cleanupp_vchan(%struct.dma_device* %dmadev) #0 !dbg !11851 {
entry:
  %dmadev.addr = alloca %struct.dma_device*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %_echan = alloca %struct.edma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.edma_chan*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.edma_chan*, align 8
  %__mptr15 = alloca i8*, align 8
  %tmp22 = alloca %struct.edma_chan*, align 8
  store %struct.dma_device* %dmadev, %struct.dma_device** %dmadev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %dmadev.addr, metadata !11852, metadata !DIExpression()), !dbg !11853
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !11854, metadata !DIExpression()), !dbg !11855
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %_echan, metadata !11856, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11858, metadata !DIExpression()), !dbg !11861
  %0 = load %struct.dma_device*, %struct.dma_device** %dmadev.addr, align 8, !dbg !11861
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %0, i32 0, i32 3, !dbg !11861
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %channels, i32 0, i32 0, !dbg !11861
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11861
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !11861
  store i8* %2, i8** %__mptr, align 8, !dbg !11861
  br label %do.body, !dbg !11861

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11862

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11861
  %add.ptr = getelementptr i8, i8* %3, i64 -48, !dbg !11861
  %4 = bitcast i8* %add.ptr to %struct.edma_chan*, !dbg !11861
  store %struct.edma_chan* %4, %struct.edma_chan** %tmp, align 8, !dbg !11862
  %5 = load %struct.edma_chan*, %struct.edma_chan** %tmp, align 8, !dbg !11861
  store %struct.edma_chan* %5, %struct.edma_chan** %echan, align 8, !dbg !11864
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !11865, metadata !DIExpression()), !dbg !11867
  %6 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11867
  %vchan = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %6, i32 0, i32 0, !dbg !11867
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan, i32 0, i32 0, !dbg !11867
  %device_node = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan, i32 0, i32 7, !dbg !11867
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node, i32 0, i32 0, !dbg !11867
  %7 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !11867
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !11867
  store i8* %8, i8** %__mptr1, align 8, !dbg !11867
  br label %do.body3, !dbg !11867

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !11868

do.end4:                                          ; preds = %do.body3
  %9 = load i8*, i8** %__mptr1, align 8, !dbg !11867
  %add.ptr6 = getelementptr i8, i8* %9, i64 -48, !dbg !11867
  %10 = bitcast i8* %add.ptr6 to %struct.edma_chan*, !dbg !11867
  store %struct.edma_chan* %10, %struct.edma_chan** %tmp5, align 8, !dbg !11868
  %11 = load %struct.edma_chan*, %struct.edma_chan** %tmp5, align 8, !dbg !11867
  store %struct.edma_chan* %11, %struct.edma_chan** %_echan, align 8, !dbg !11864
  br label %for.cond, !dbg !11864

for.cond:                                         ; preds = %do.end21, %do.end4
  %12 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11870
  %vchan7 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %12, i32 0, i32 0, !dbg !11870
  %chan8 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan7, i32 0, i32 0, !dbg !11870
  %device_node9 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan8, i32 0, i32 7, !dbg !11870
  %13 = load %struct.dma_device*, %struct.dma_device** %dmadev.addr, align 8, !dbg !11870
  %channels10 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %13, i32 0, i32 3, !dbg !11870
  %cmp = icmp eq %struct.list_head* %device_node9, %channels10, !dbg !11870
  %lnot = xor i1 %cmp, true, !dbg !11870
  br i1 %lnot, label %for.body, label %for.end, !dbg !11864

for.body:                                         ; preds = %for.cond
  %14 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11872
  %vchan11 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %14, i32 0, i32 0, !dbg !11874
  %chan12 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan11, i32 0, i32 0, !dbg !11875
  %device_node13 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan12, i32 0, i32 7, !dbg !11876
  call void @list_del(%struct.list_head* %device_node13) #11, !dbg !11877
  %15 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11878
  %vchan14 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %15, i32 0, i32 0, !dbg !11879
  %task = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan14, i32 0, i32 1, !dbg !11880
  call void @tasklet_kill(%struct.tasklet_struct* %task) #11, !dbg !11881
  br label %for.inc, !dbg !11882

for.inc:                                          ; preds = %for.body
  %16 = load %struct.edma_chan*, %struct.edma_chan** %_echan, align 8, !dbg !11870
  store %struct.edma_chan* %16, %struct.edma_chan** %echan, align 8, !dbg !11870
  call void @llvm.dbg.declare(metadata i8** %__mptr15, metadata !11883, metadata !DIExpression()), !dbg !11885
  %17 = load %struct.edma_chan*, %struct.edma_chan** %_echan, align 8, !dbg !11885
  %vchan16 = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %17, i32 0, i32 0, !dbg !11885
  %chan17 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vchan16, i32 0, i32 0, !dbg !11885
  %device_node18 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan17, i32 0, i32 7, !dbg !11885
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %device_node18, i32 0, i32 0, !dbg !11885
  %18 = load %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !11885
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !11885
  store i8* %19, i8** %__mptr15, align 8, !dbg !11885
  br label %do.body20, !dbg !11885

do.body20:                                        ; preds = %for.inc
  br label %do.end21, !dbg !11886

do.end21:                                         ; preds = %do.body20
  %20 = load i8*, i8** %__mptr15, align 8, !dbg !11885
  %add.ptr23 = getelementptr i8, i8* %20, i64 -48, !dbg !11885
  %21 = bitcast i8* %add.ptr23 to %struct.edma_chan*, !dbg !11885
  store %struct.edma_chan* %21, %struct.edma_chan** %tmp22, align 8, !dbg !11886
  %22 = load %struct.edma_chan*, %struct.edma_chan** %tmp22, align 8, !dbg !11885
  store %struct.edma_chan* %22, %struct.edma_chan** %_echan, align 8, !dbg !11870
  br label %for.cond, !dbg !11870, !llvm.loop !11888

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11890
}

; Function Attrs: noredzone
declare dso_local void @of_dma_controller_free(%struct.device_node*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_pm_suspend(%struct.device* %dev) #0 !dbg !11891 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %i = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11892, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !11894, metadata !DIExpression()), !dbg !11895
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11896
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !11897
  %1 = bitcast i8* %call to %struct.edma_cc*, !dbg !11897
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !11895
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !11898, metadata !DIExpression()), !dbg !11899
  %2 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11900
  %slave_chans = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %2, i32 0, i32 18, !dbg !11901
  %3 = load %struct.edma_chan*, %struct.edma_chan** %slave_chans, align 8, !dbg !11901
  store %struct.edma_chan* %3, %struct.edma_chan** %echan, align 8, !dbg !11899
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11902, metadata !DIExpression()), !dbg !11903
  store i32 0, i32* %i, align 4, !dbg !11904
  br label %for.cond, !dbg !11906

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !11907
  %5 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11909
  %num_channels = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %5, i32 0, i32 5, !dbg !11910
  %6 = load i32, i32* %num_channels, align 8, !dbg !11910
  %cmp = icmp ult i32 %4, %6, !dbg !11911
  br i1 %cmp, label %for.body, label %for.end, !dbg !11912

for.body:                                         ; preds = %for.cond
  %7 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11913
  %8 = load i32, i32* %i, align 4, !dbg !11916
  %idxprom = sext i32 %8 to i64, !dbg !11913
  %arrayidx = getelementptr %struct.edma_chan, %struct.edma_chan* %7, i64 %idxprom, !dbg !11913
  %alloced = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %arrayidx, i32 0, i32 6, !dbg !11917
  %9 = load i8, i8* %alloced, align 4, !dbg !11917
  %tobool = trunc i8 %9 to i1, !dbg !11917
  br i1 %tobool, label %if.then, label %if.end, !dbg !11918

if.then:                                          ; preds = %for.body
  %10 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11919
  %11 = load i32, i32* %i, align 4, !dbg !11920
  %idxprom1 = sext i32 %11 to i64, !dbg !11919
  %arrayidx2 = getelementptr %struct.edma_chan, %struct.edma_chan* %10, i64 %idxprom1, !dbg !11919
  call void @edma_setup_interrupt(%struct.edma_chan* %arrayidx2, i1 zeroext false) #11, !dbg !11921
  br label %if.end, !dbg !11921

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !11922

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !11923
  %inc = add i32 %12, 1, !dbg !11923
  store i32 %inc, i32* %i, align 4, !dbg !11923
  br label %for.cond, !dbg !11924, !llvm.loop !11925

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !11927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_pm_resume(%struct.device* %dev) #0 !dbg !11928 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ecc = alloca %struct.edma_cc*, align 8
  %echan = alloca %struct.edma_chan*, align 8
  %i = alloca i32, align 4
  %queue_priority_mapping = alloca [2 x i8]*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11929, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.declare(metadata %struct.edma_cc** %ecc, metadata !11931, metadata !DIExpression()), !dbg !11932
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11933
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !11934
  %1 = bitcast i8* %call to %struct.edma_cc*, !dbg !11934
  store %struct.edma_cc* %1, %struct.edma_cc** %ecc, align 8, !dbg !11932
  call void @llvm.dbg.declare(metadata %struct.edma_chan** %echan, metadata !11935, metadata !DIExpression()), !dbg !11936
  %2 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11937
  %slave_chans = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %2, i32 0, i32 18, !dbg !11938
  %3 = load %struct.edma_chan*, %struct.edma_chan** %slave_chans, align 8, !dbg !11938
  store %struct.edma_chan* %3, %struct.edma_chan** %echan, align 8, !dbg !11936
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11939, metadata !DIExpression()), !dbg !11940
  call void @llvm.dbg.declare(metadata [2 x i8]** %queue_priority_mapping, metadata !11941, metadata !DIExpression()), !dbg !11942
  %4 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11943
  %5 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11944
  %dummy_slot = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %5, i32 0, i32 20, !dbg !11945
  %6 = load i32, i32* %dummy_slot, align 8, !dbg !11945
  call void @edma_write_slot(%struct.edma_cc* %4, i32 %6, %struct.edmacc_param* @dummy_paramset) #11, !dbg !11946
  %7 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11947
  %info = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %7, i32 0, i32 1, !dbg !11948
  %8 = load %struct.edma_soc_info*, %struct.edma_soc_info** %info, align 8, !dbg !11948
  %queue_priority_mapping1 = getelementptr inbounds %struct.edma_soc_info, %struct.edma_soc_info* %8, i32 0, i32 3, !dbg !11949
  %9 = load [2 x i8]*, [2 x i8]** %queue_priority_mapping1, align 8, !dbg !11949
  store [2 x i8]* %9, [2 x i8]** %queue_priority_mapping, align 8, !dbg !11950
  store i32 0, i32* %i, align 4, !dbg !11951
  br label %for.cond, !dbg !11953

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load [2 x i8]*, [2 x i8]** %queue_priority_mapping, align 8, !dbg !11954
  %11 = load i32, i32* %i, align 4, !dbg !11956
  %idxprom = sext i32 %11 to i64, !dbg !11954
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %10, i64 %idxprom, !dbg !11954
  %arrayidx2 = getelementptr [2 x i8], [2 x i8]* %arrayidx, i64 0, i64 0, !dbg !11954
  %12 = load i8, i8* %arrayidx2, align 1, !dbg !11954
  %conv = sext i8 %12 to i32, !dbg !11954
  %cmp = icmp ne i32 %conv, -1, !dbg !11957
  br i1 %cmp, label %for.body, label %for.end, !dbg !11958

for.body:                                         ; preds = %for.cond
  %13 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11959
  %14 = load [2 x i8]*, [2 x i8]** %queue_priority_mapping, align 8, !dbg !11960
  %15 = load i32, i32* %i, align 4, !dbg !11961
  %idxprom4 = sext i32 %15 to i64, !dbg !11960
  %arrayidx5 = getelementptr [2 x i8], [2 x i8]* %14, i64 %idxprom4, !dbg !11960
  %arrayidx6 = getelementptr [2 x i8], [2 x i8]* %arrayidx5, i64 0, i64 0, !dbg !11960
  %16 = load i8, i8* %arrayidx6, align 1, !dbg !11960
  %conv7 = sext i8 %16 to i32, !dbg !11960
  %17 = load [2 x i8]*, [2 x i8]** %queue_priority_mapping, align 8, !dbg !11962
  %18 = load i32, i32* %i, align 4, !dbg !11963
  %idxprom8 = sext i32 %18 to i64, !dbg !11962
  %arrayidx9 = getelementptr [2 x i8], [2 x i8]* %17, i64 %idxprom8, !dbg !11962
  %arrayidx10 = getelementptr [2 x i8], [2 x i8]* %arrayidx9, i64 0, i64 1, !dbg !11962
  %19 = load i8, i8* %arrayidx10, align 1, !dbg !11962
  %conv11 = sext i8 %19 to i32, !dbg !11962
  call void @edma_assign_priority_to_queue(%struct.edma_cc* %13, i32 %conv7, i32 %conv11) #11, !dbg !11964
  br label %for.inc, !dbg !11964

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !11965
  %inc = add i32 %20, 1, !dbg !11965
  store i32 %inc, i32* %i, align 4, !dbg !11965
  br label %for.cond, !dbg !11966, !llvm.loop !11967

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !11969
  br label %for.cond12, !dbg !11971

for.cond12:                                       ; preds = %for.inc26, %for.end
  %21 = load i32, i32* %i, align 4, !dbg !11972
  %22 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11974
  %num_channels = getelementptr inbounds %struct.edma_cc, %struct.edma_cc* %22, i32 0, i32 5, !dbg !11975
  %23 = load i32, i32* %num_channels, align 8, !dbg !11975
  %cmp13 = icmp ult i32 %21, %23, !dbg !11976
  br i1 %cmp13, label %for.body15, label %for.end28, !dbg !11977

for.body15:                                       ; preds = %for.cond12
  %24 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11978
  %25 = load i32, i32* %i, align 4, !dbg !11981
  %idxprom16 = sext i32 %25 to i64, !dbg !11978
  %arrayidx17 = getelementptr %struct.edma_chan, %struct.edma_chan* %24, i64 %idxprom16, !dbg !11978
  %alloced = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %arrayidx17, i32 0, i32 6, !dbg !11982
  %26 = load i8, i8* %alloced, align 4, !dbg !11982
  %tobool = trunc i8 %26 to i1, !dbg !11982
  br i1 %tobool, label %if.then, label %if.end, !dbg !11983

if.then:                                          ; preds = %for.body15
  %27 = load %struct.edma_cc*, %struct.edma_cc** %ecc, align 8, !dbg !11984
  %28 = load i32, i32* %i, align 4, !dbg !11986
  %shr = ashr i32 %28, 5, !dbg !11986
  %29 = load i32, i32* %i, align 4, !dbg !11987
  %and = and i32 %29, 31, !dbg !11987
  %sh_prom = zext i32 %and to i64, !dbg !11987
  %shl = shl i64 1, %sh_prom, !dbg !11987
  %conv18 = trunc i64 %shl to i32, !dbg !11987
  call void @edma_or_array2(%struct.edma_cc* %27, i32 832, i32 0, i32 %shr, i32 %conv18) #11, !dbg !11988
  %30 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11989
  %31 = load i32, i32* %i, align 4, !dbg !11990
  %idxprom19 = sext i32 %31 to i64, !dbg !11989
  %arrayidx20 = getelementptr %struct.edma_chan, %struct.edma_chan* %30, i64 %idxprom19, !dbg !11989
  call void @edma_setup_interrupt(%struct.edma_chan* %arrayidx20, i1 zeroext true) #11, !dbg !11991
  %32 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11992
  %33 = load i32, i32* %i, align 4, !dbg !11993
  %idxprom21 = sext i32 %33 to i64, !dbg !11992
  %arrayidx22 = getelementptr %struct.edma_chan, %struct.edma_chan* %32, i64 %idxprom21, !dbg !11992
  %34 = load %struct.edma_chan*, %struct.edma_chan** %echan, align 8, !dbg !11994
  %35 = load i32, i32* %i, align 4, !dbg !11995
  %idxprom23 = sext i32 %35 to i64, !dbg !11994
  %arrayidx24 = getelementptr %struct.edma_chan, %struct.edma_chan* %34, i64 %idxprom23, !dbg !11994
  %slot = getelementptr inbounds %struct.edma_chan, %struct.edma_chan* %arrayidx24, i32 0, i32 8, !dbg !11996
  %arrayidx25 = getelementptr [20 x i32], [20 x i32]* %slot, i64 0, i64 0, !dbg !11994
  %36 = load i32, i32* %arrayidx25, align 8, !dbg !11994
  call void @edma_set_chmap(%struct.edma_chan* %arrayidx22, i32 %36) #11, !dbg !11997
  br label %if.end, !dbg !11998

if.end:                                           ; preds = %if.then, %for.body15
  br label %for.inc26, !dbg !11999

for.inc26:                                        ; preds = %if.end
  %37 = load i32, i32* %i, align 4, !dbg !12000
  %inc27 = add i32 %37, 1, !dbg !12000
  store i32 %inc27, i32* %i, align 4, !dbg !12000
  br label %for.cond12, !dbg !12001, !llvm.loop !12002

for.end28:                                        ; preds = %for.cond12
  ret i32 0, !dbg !12004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edma_tptc_probe(%struct.platform_device* %pdev) #0 !dbg !12005 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !12006, metadata !DIExpression()), !dbg !12007
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12008
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !12009
  call void @pm_runtime_enable(%struct.device* %dev) #11, !dbg !12010
  %1 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12011
  %dev1 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !12012
  %call = call i32 @pm_runtime_get_sync(%struct.device* %dev1) #11, !dbg !12013
  ret i32 %call, !dbg !12014
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4761}
!llvm.module.flags = !{!4762, !4763, !4764, !4765}
!llvm.ident = !{!4766}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_edma_init256", scope: !2, file: !3, line: 2737, type: !258, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !239, globals: !4661, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/dma/ti/edma.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !107, !114, !122, !128, !137, !143, !152, !157, !169, !175, !179, !186, !197, !204, !209, !216, !220}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !94, line: 76, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106}
!96 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!103 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !108, line: 478, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112, !113}
!110 = !DIEnumerator(name: "IRQCHIP_STATE_PENDING", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "IRQCHIP_STATE_ACTIVE", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "IRQCHIP_STATE_MASKED", value: 2, isUnsigned: true)
!113 = !DIEnumerator(name: "IRQCHIP_STATE_LINE_LEVEL", value: 3, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_gc_flags", file: !115, line: 1084, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120, !121}
!117 = !DIEnumerator(name: "IRQ_GC_INIT_MASK_CACHE", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "IRQ_GC_INIT_NESTED_LOCK", value: 2, isUnsigned: true)
!119 = !DIEnumerator(name: "IRQ_GC_MASK_CACHE_PER_TYPE", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "IRQ_GC_NO_MASK", value: 8, isUnsigned: true)
!121 = !DIEnumerator(name: "IRQ_GC_BE_IO", value: 16, isUnsigned: true)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !123, line: 11, baseType: !7, size: 32, elements: !124)
!123 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!124 = !{!125, !126, !127}
!125 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!127 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_event_q", file: !129, line: 40, baseType: !130, size: 32, elements: !131)
!129 = !DIFile(filename: "./include/linux/platform_data/edma.h", directory: "/home/lizy2001/genbc/linux")
!130 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!131 = !{!132, !133, !134, !135, !136}
!132 = !DIEnumerator(name: "EVENTQ_0", value: 0)
!133 = !DIEnumerator(name: "EVENTQ_1", value: 1)
!134 = !DIEnumerator(name: "EVENTQ_2", value: 2)
!135 = !DIEnumerator(name: "EVENTQ_3", value: 3)
!136 = !DIEnumerator(name: "EVENTQ_DEFAULT", value: -1)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_desc_metadata_mode", file: !138, line: 288, baseType: !7, size: 32, elements: !139)
!138 = !DIFile(filename: "./include/linux/dmaengine.h", directory: "/home/lizy2001/genbc/linux")
!139 = !{!140, !141, !142}
!140 = !DIEnumerator(name: "DESC_METADATA_NONE", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "DESC_METADATA_CLIENT", value: 1, isUnsigned: true)
!142 = !DIEnumerator(name: "DESC_METADATA_ENGINE", value: 2, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_alignment", file: !138, line: 732, baseType: !7, size: 32, elements: !144)
!144 = !{!145, !146, !147, !148, !149, !150, !151}
!145 = !DIEnumerator(name: "DMAENGINE_ALIGN_1_BYTE", value: 0, isUnsigned: true)
!146 = !DIEnumerator(name: "DMAENGINE_ALIGN_2_BYTES", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "DMAENGINE_ALIGN_4_BYTES", value: 2, isUnsigned: true)
!148 = !DIEnumerator(name: "DMAENGINE_ALIGN_8_BYTES", value: 3, isUnsigned: true)
!149 = !DIEnumerator(name: "DMAENGINE_ALIGN_16_BYTES", value: 4, isUnsigned: true)
!150 = !DIEnumerator(name: "DMAENGINE_ALIGN_32_BYTES", value: 5, isUnsigned: true)
!151 = !DIEnumerator(name: "DMAENGINE_ALIGN_64_BYTES", value: 6, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_residue_granularity", file: !138, line: 468, baseType: !7, size: 32, elements: !153)
!153 = !{!154, !155, !156}
!154 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_DESCRIPTOR", value: 0, isUnsigned: true)
!155 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_SEGMENT", value: 1, isUnsigned: true)
!156 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_BURST", value: 2, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_ctrl_flags", file: !138, line: 194, baseType: !7, size: 32, elements: !158)
!158 = !{!159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!159 = !DIEnumerator(name: "DMA_PREP_INTERRUPT", value: 1, isUnsigned: true)
!160 = !DIEnumerator(name: "DMA_CTRL_ACK", value: 2, isUnsigned: true)
!161 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_P", value: 4, isUnsigned: true)
!162 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_Q", value: 8, isUnsigned: true)
!163 = !DIEnumerator(name: "DMA_PREP_CONTINUE", value: 16, isUnsigned: true)
!164 = !DIEnumerator(name: "DMA_PREP_FENCE", value: 32, isUnsigned: true)
!165 = !DIEnumerator(name: "DMA_CTRL_REUSE", value: 64, isUnsigned: true)
!166 = !DIEnumerator(name: "DMA_PREP_CMD", value: 128, isUnsigned: true)
!167 = !DIEnumerator(name: "DMA_PREP_REPEAT", value: 256, isUnsigned: true)
!168 = !DIEnumerator(name: "DMA_PREP_LOAD_EOT", value: 512, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_tx_result", file: !138, line: 533, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174}
!171 = !DIEnumerator(name: "DMA_TRANS_NOERROR", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "DMA_TRANS_READ_FAILED", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "DMA_TRANS_WRITE_FAILED", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "DMA_TRANS_ABORTED", value: 3, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sum_check_flags", file: !138, line: 220, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178}
!177 = !DIEnumerator(name: "SUM_CHECK_P_RESULT", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "SUM_CHECK_Q_RESULT", value: 2, isUnsigned: true)
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_transfer_direction", file: !138, line: 79, baseType: !7, size: 32, elements: !180)
!180 = !{!181, !182, !183, !184, !185}
!181 = !DIEnumerator(name: "DMA_MEM_TO_MEM", value: 0, isUnsigned: true)
!182 = !DIEnumerator(name: "DMA_MEM_TO_DEV", value: 1, isUnsigned: true)
!183 = !DIEnumerator(name: "DMA_DEV_TO_MEM", value: 2, isUnsigned: true)
!184 = !DIEnumerator(name: "DMA_DEV_TO_DEV", value: 3, isUnsigned: true)
!185 = !DIEnumerator(name: "DMA_TRANS_NONE", value: 4, isUnsigned: true)
!186 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_slave_buswidth", file: !138, line: 371, baseType: !7, size: 32, elements: !187)
!187 = !{!188, !189, !190, !191, !192, !193, !194, !195, !196}
!188 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_UNDEFINED", value: 0, isUnsigned: true)
!189 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_1_BYTE", value: 1, isUnsigned: true)
!190 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_2_BYTES", value: 2, isUnsigned: true)
!191 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_3_BYTES", value: 3, isUnsigned: true)
!192 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_4_BYTES", value: 4, isUnsigned: true)
!193 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_8_BYTES", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_16_BYTES", value: 16, isUnsigned: true)
!195 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_32_BYTES", value: 32, isUnsigned: true)
!196 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_64_BYTES", value: 64, isUnsigned: true)
!197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_status", file: !138, line: 37, baseType: !7, size: 32, elements: !198)
!198 = !{!199, !200, !201, !202, !203}
!199 = !DIEnumerator(name: "DMA_COMPLETE", value: 0, isUnsigned: true)
!200 = !DIEnumerator(name: "DMA_IN_PROGRESS", value: 1, isUnsigned: true)
!201 = !DIEnumerator(name: "DMA_PAUSED", value: 2, isUnsigned: true)
!202 = !DIEnumerator(name: "DMA_ERROR", value: 3, isUnsigned: true)
!203 = !DIEnumerator(name: "DMA_OUT_OF_ORDER", value: 4, isUnsigned: true)
!204 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !205, line: 10, baseType: !7, size: 32, elements: !206)
!205 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!206 = !{!207, !208}
!207 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!208 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !210, line: 305, baseType: !7, size: 32, elements: !211)
!210 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!211 = !{!212, !213, !214, !215}
!212 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!213 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!214 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!215 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!216 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !108, line: 651, baseType: !7, size: 32, elements: !217)
!217 = !{!218, !219}
!218 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!219 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!220 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_transaction_type", file: !138, line: 51, baseType: !7, size: 32, elements: !221)
!221 = !{!222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238}
!222 = !DIEnumerator(name: "DMA_MEMCPY", value: 0, isUnsigned: true)
!223 = !DIEnumerator(name: "DMA_XOR", value: 1, isUnsigned: true)
!224 = !DIEnumerator(name: "DMA_PQ", value: 2, isUnsigned: true)
!225 = !DIEnumerator(name: "DMA_XOR_VAL", value: 3, isUnsigned: true)
!226 = !DIEnumerator(name: "DMA_PQ_VAL", value: 4, isUnsigned: true)
!227 = !DIEnumerator(name: "DMA_MEMSET", value: 5, isUnsigned: true)
!228 = !DIEnumerator(name: "DMA_MEMSET_SG", value: 6, isUnsigned: true)
!229 = !DIEnumerator(name: "DMA_INTERRUPT", value: 7, isUnsigned: true)
!230 = !DIEnumerator(name: "DMA_PRIVATE", value: 8, isUnsigned: true)
!231 = !DIEnumerator(name: "DMA_ASYNC_TX", value: 9, isUnsigned: true)
!232 = !DIEnumerator(name: "DMA_SLAVE", value: 10, isUnsigned: true)
!233 = !DIEnumerator(name: "DMA_CYCLIC", value: 11, isUnsigned: true)
!234 = !DIEnumerator(name: "DMA_INTERLEAVE", value: 12, isUnsigned: true)
!235 = !DIEnumerator(name: "DMA_COMPLETION_NO_ORDER", value: 13, isUnsigned: true)
!236 = !DIEnumerator(name: "DMA_REPEAT", value: 14, isUnsigned: true)
!237 = !DIEnumerator(name: "DMA_LOAD_EOT", value: 15, isUnsigned: true)
!238 = !DIEnumerator(name: "DMA_TX_TYPE_END", value: 16, isUnsigned: true)
!239 = !{!240, !243, !248, !250, !258, !259, !263, !265, !266, !7, !267, !269, !271, !272, !4557, !4559, !4544, !4561, !4659, !130, !4572, !447, !2819}
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!241 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !242, line: 76, flags: DIFlagFwdDecl)
!242 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !245, line: 21, baseType: !246)
!245 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !247, line: 27, baseType: !7)
!247 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !249, line: 148, baseType: !7)
!249 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !252, size: 32, elements: !256)
!252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !245, line: 18, baseType: !254)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !247, line: 23, baseType: !255)
!255 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!256 = !{!257}
!257 = !DISubrange(count: 2)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !245, line: 19, baseType: !261)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !247, line: 24, baseType: !262)
!262 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!265 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!266 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !266)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "virt_dma_chan", file: !274, line: 22, size: 1920, elements: !275)
!274 = !DIFile(filename: "drivers/dma/ti/../virt-dma.h", directory: "/home/lizy2001/genbc/linux")
!275 = !{!276, !4520, !4540, !4550, !4551, !4552, !4553, !4554, !4555, !4556}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !273, file: !274, line: 23, baseType: !277, size: 832)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan", file: !138, line: 329, size: 832, elements: !278)
!278 = !{!279, !4488, !4489, !4490, !4491, !4492, !4499, !4500, !4501, !4507, !4508, !4509, !4518, !4519}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !277, file: !138, line: 330, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_device", file: !138, line: 844, size: 3072, elements: !282)
!282 = !{!283, !297, !298, !299, !305, !306, !328, !336, !337, !338, !339, !340, !341, !342, !343, !344, !4270, !4271, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4288, !4292, !4357, !4362, !4367, !4371, !4375, !4379, !4392, !4396, !4400, !4404, !4428, !4432, !4450, !4468, !4469, !4470, !4471, !4472, !4483, !4484}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !281, file: !138, line: 845, baseType: !284, size: 32)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !285, line: 19, size: 32, elements: !286)
!285 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!286 = !{!287}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !284, file: !285, line: 20, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !289, line: 113, baseType: !290)
!289 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !289, line: 111, size: 32, elements: !291)
!291 = !{!292}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !290, file: !289, line: 112, baseType: !293, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !249, line: 168, baseType: !294)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !249, line: 166, size: 32, elements: !295)
!295 = !{!296}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !294, file: !249, line: 167, baseType: !130, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "chancnt", scope: !281, file: !138, line: 846, baseType: !7, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "privatecnt", scope: !281, file: !138, line: 847, baseType: !7, size: 32, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !281, file: !138, line: 848, baseType: !300, size: 128, offset: 128)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !249, line: 178, size: 128, elements: !301)
!301 = !{!302, !304}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !300, file: !249, line: 179, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !300, file: !249, line: 179, baseType: !303, size: 64, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "global_node", scope: !281, file: !138, line: 849, baseType: !300, size: 128, offset: 256)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !281, file: !138, line: 850, baseType: !307, size: 192, offset: 384)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_filter", file: !138, line: 762, size: 192, elements: !308)
!308 = !{!309, !317, !318}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !307, file: !138, line: 763, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_filter_fn", file: !138, line: 529, baseType: !311)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = !DISubroutineType(types: !313)
!313 = !{!314, !316, !258}
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !249, line: 30, baseType: !315)
!315 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "mapcnt", scope: !307, file: !138, line: 764, baseType: !130, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !307, file: !138, line: 765, baseType: !319, size: 64, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !321)
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_map", file: !138, line: 749, size: 192, elements: !322)
!322 = !{!323, !326, !327}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "devname", scope: !321, file: !138, line: 750, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !321, file: !138, line: 751, baseType: !324, size: 64, offset: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !321, file: !138, line: 752, baseType: !258, size: 64, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "cap_mask", scope: !281, file: !138, line: 851, baseType: !329, size: 64, offset: 576)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cap_mask_t", file: !138, line: 230, baseType: !330)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !138, line: 230, size: 64, elements: !331)
!331 = !{!332}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !330, file: !138, line: 230, baseType: !333, size: 64)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 64, elements: !334)
!334 = !{!335}
!335 = !DISubrange(count: 1)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_modes", scope: !281, file: !138, line: 852, baseType: !137, size: 32, offset: 640)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "max_xor", scope: !281, file: !138, line: 853, baseType: !262, size: 16, offset: 672)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "max_pq", scope: !281, file: !138, line: 854, baseType: !262, size: 16, offset: 688)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "copy_align", scope: !281, file: !138, line: 855, baseType: !143, size: 32, offset: 704)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "xor_align", scope: !281, file: !138, line: 856, baseType: !143, size: 32, offset: 736)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "pq_align", scope: !281, file: !138, line: 857, baseType: !143, size: 32, offset: 768)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "fill_align", scope: !281, file: !138, line: 858, baseType: !143, size: 32, offset: 800)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !281, file: !138, line: 861, baseType: !130, size: 32, offset: 832)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !281, file: !138, line: 862, baseType: !345, size: 64, offset: 896)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !347)
!347 = !{!348, !3504, !3505, !3508, !3509, !3560, !3651, !3652, !3653, !3654, !3655, !3664, !3769, !3782, !4197, !4198, !4202, !4204, !4205, !4206, !4210, !4216, !4217, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4258, !4259, !4260, !4263, !4266, !4267, !4268, !4269}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !346, file: !73, line: 462, baseType: !349, size: 512)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !350, line: 64, size: 512, elements: !351)
!350 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!351 = !{!352, !353, !354, !356, !415, !3359, !3498, !3499, !3500, !3501, !3502, !3503}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !349, file: !350, line: 65, baseType: !324, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !349, file: !350, line: 66, baseType: !300, size: 128, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !349, file: !350, line: 67, baseType: !355, size: 64, offset: 192)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !349, file: !350, line: 68, baseType: !357, size: 64, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !350, line: 192, size: 704, elements: !359)
!359 = !{!360, !361, !377, !378}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !358, file: !350, line: 193, baseType: !300, size: 128)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !358, file: !350, line: 194, baseType: !362, offset: 128)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !363, line: 83, baseType: !364)
!363 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !363, line: 71, elements: !365)
!365 = !{!366}
!366 = !DIDerivedType(tag: DW_TAG_member, scope: !364, file: !363, line: 72, baseType: !367)
!367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !364, file: !363, line: 72, elements: !368)
!368 = !{!369}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !367, file: !363, line: 73, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !363, line: 20, elements: !371)
!371 = !{!372}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !370, file: !363, line: 21, baseType: !373)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !374, line: 25, baseType: !375)
!374 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !374, line: 25, elements: !376)
!376 = !{}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !358, file: !350, line: 195, baseType: !349, size: 512, offset: 128)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !358, file: !350, line: 196, baseType: !379, size: 64, offset: 640)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64)
!380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !381)
!381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !350, line: 156, size: 192, elements: !382)
!382 = !{!383, !388, !393}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !381, file: !350, line: 157, baseType: !384, size: 64)
!384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !385)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!386 = !DISubroutineType(types: !387)
!387 = !{!130, !357, !355}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !381, file: !350, line: 158, baseType: !389, size: 64, offset: 64)
!389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !390)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DISubroutineType(types: !392)
!392 = !{!324, !357, !355}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !381, file: !350, line: 159, baseType: !394, size: 64, offset: 128)
!394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !395)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!396 = !DISubroutineType(types: !397)
!397 = !{!130, !357, !355, !398}
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !350, line: 148, size: 20736, elements: !400)
!400 = !{!401, !405, !409, !410, !414}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !399, file: !350, line: 149, baseType: !402, size: 192)
!402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 192, elements: !403)
!403 = !{!404}
!404 = !DISubrange(count: 3)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !399, file: !350, line: 150, baseType: !406, size: 4096, offset: 192)
!406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 4096, elements: !407)
!407 = !{!408}
!408 = !DISubrange(count: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !399, file: !350, line: 151, baseType: !130, size: 32, offset: 4288)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !399, file: !350, line: 152, baseType: !411, size: 16384, offset: 4320)
!411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 16384, elements: !412)
!412 = !{!413}
!413 = !DISubrange(count: 2048)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !399, file: !350, line: 153, baseType: !130, size: 32, offset: 20704)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !349, file: !350, line: 69, baseType: !416, size: 64, offset: 320)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !350, line: 138, size: 448, elements: !418)
!418 = !{!419, !423, !450, !452, !3321, !3349, !3353}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !417, file: !350, line: 139, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!421 = !DISubroutineType(types: !422)
!422 = !{null, !355}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !417, file: !350, line: 140, baseType: !424, size: 64, offset: 64)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !427, line: 230, size: 128, elements: !428)
!427 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!428 = !{!429, !443}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !426, file: !427, line: 231, baseType: !430, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DISubroutineType(types: !432)
!432 = !{!433, !355, !437, !267}
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !249, line: 60, baseType: !434)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !435, line: 73, baseType: !436)
!435 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!436 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !435, line: 15, baseType: !266)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !427, line: 30, size: 128, elements: !439)
!439 = !{!440, !441}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !438, file: !427, line: 31, baseType: !324, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !438, file: !427, line: 32, baseType: !442, size: 16, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !249, line: 19, baseType: !262)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !426, file: !427, line: 232, baseType: !444, size: 64, offset: 64)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DISubroutineType(types: !446)
!446 = !{!433, !355, !437, !324, !447}
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !249, line: 55, baseType: !448)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !435, line: 72, baseType: !449)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !435, line: 16, baseType: !265)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !417, file: !350, line: 141, baseType: !451, size: 64, offset: 128)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !417, file: !350, line: 142, baseType: !453, size: 64, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !456)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !427, line: 84, size: 320, elements: !457)
!457 = !{!458, !459, !463, !3318, !3319}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !456, file: !427, line: 85, baseType: !324, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !456, file: !427, line: 86, baseType: !460, size: 64, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DISubroutineType(types: !462)
!462 = !{!442, !355, !437, !130}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !456, file: !427, line: 88, baseType: !464, size: 64, offset: 128)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DISubroutineType(types: !466)
!466 = !{!442, !355, !467, !130}
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !427, line: 168, size: 448, elements: !469)
!469 = !{!470, !471, !472, !473, !3313, !3314}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !468, file: !427, line: 169, baseType: !438, size: 128)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !468, file: !427, line: 170, baseType: !447, size: 64, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !468, file: !427, line: 171, baseType: !258, size: 64, offset: 192)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !468, file: !427, line: 172, baseType: !474, size: 64, offset: 256)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DISubroutineType(types: !476)
!476 = !{!433, !477, !355, !467, !267, !650, !447}
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !479)
!479 = !{!480, !498, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3296, !3297, !3306, !3307, !3308, !3309, !3310, !3311, !3312}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !478, file: !44, line: 920, baseType: !481, size: 128)
!481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !478, file: !44, line: 917, size: 128, elements: !482)
!482 = !{!483, !489}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !481, file: !44, line: 918, baseType: !484, size: 64)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !485, line: 58, size: 64, elements: !486)
!485 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!486 = !{!487}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !484, file: !485, line: 59, baseType: !488, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !481, file: !44, line: 919, baseType: !490, size: 128, align: 64)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !249, line: 216, size: 128, align: 64, elements: !491)
!491 = !{!492, !494}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !490, file: !249, line: 217, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !490, file: !249, line: 218, baseType: !495, size: 64, offset: 64)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DISubroutineType(types: !497)
!497 = !{null, !493}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !478, file: !44, line: 921, baseType: !499, size: 128, offset: 128)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !500, line: 8, size: 128, elements: !501)
!500 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!501 = !{!502, !506}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !499, file: !500, line: 9, baseType: !503, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !505, line: 18, flags: DIFlagFwdDecl)
!505 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!506 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !499, file: !500, line: 10, baseType: !507, size: 64, offset: 64)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !505, line: 89, size: 1536, elements: !509)
!509 = !{!510, !511, !521, !529, !530, !549, !3246, !3248, !3260, !3261, !3262, !3263, !3264, !3270, !3271, !3272}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !508, file: !505, line: 91, baseType: !7, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !508, file: !505, line: 92, baseType: !512, size: 32, offset: 32)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !513, line: 277, baseType: !514)
!513 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !513, line: 277, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !514, file: !513, line: 277, baseType: !517, size: 32)
!517 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !513, line: 70, baseType: !518)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !513, line: 65, size: 32, elements: !519)
!519 = !{!520}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !518, file: !513, line: 66, baseType: !7, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !508, file: !505, line: 93, baseType: !522, size: 128, offset: 64)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !523, line: 38, size: 128, elements: !524)
!523 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!524 = !{!525, !527}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !522, file: !523, line: 39, baseType: !526, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !522, file: !523, line: 39, baseType: !528, size: 64, offset: 64)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !508, file: !505, line: 94, baseType: !507, size: 64, offset: 192)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !508, file: !505, line: 95, baseType: !531, size: 128, offset: 256)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !505, line: 47, size: 128, elements: !532)
!532 = !{!533, !545}
!533 = !DIDerivedType(tag: DW_TAG_member, scope: !531, file: !505, line: 48, baseType: !534, size: 64)
!534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !531, file: !505, line: 48, size: 64, elements: !535)
!535 = !{!536, !541}
!536 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !505, line: 49, baseType: !537, size: 64)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !534, file: !505, line: 49, size: 64, elements: !538)
!538 = !{!539, !540}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !537, file: !505, line: 50, baseType: !244, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !537, file: !505, line: 50, baseType: !244, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !534, file: !505, line: 52, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !245, line: 23, baseType: !543)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !247, line: 31, baseType: !544)
!544 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !531, file: !505, line: 54, baseType: !546, size: 64, offset: 64)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !548)
!548 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !508, file: !505, line: 96, baseType: !550, size: 64, offset: 384)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !552)
!552 = !{!553, !554, !555, !563, !570, !571, !717, !2957, !2958, !2959, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !3222, !3230, !3231, !3232, !3242, !3243, !3244, !3245}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !551, file: !44, line: 611, baseType: !442, size: 16)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !551, file: !44, line: 612, baseType: !262, size: 16, offset: 16)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !551, file: !44, line: 613, baseType: !556, size: 32, offset: 32)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !557, line: 23, baseType: !558)
!557 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !557, line: 21, size: 32, elements: !559)
!559 = !{!560}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !558, file: !557, line: 22, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !249, line: 32, baseType: !562)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !435, line: 49, baseType: !7)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !551, file: !44, line: 614, baseType: !564, size: 32, offset: 64)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !557, line: 28, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !557, line: 26, size: 32, elements: !566)
!566 = !{!567}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !565, file: !557, line: 27, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !249, line: 33, baseType: !569)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !435, line: 50, baseType: !7)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !551, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !551, file: !44, line: 622, baseType: !572, size: 64, offset: 128)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !575)
!575 = !{!576, !580, !593, !597, !603, !607, !611, !615, !619, !623, !627, !628, !634, !638, !664, !693, !697, !703, !708, !712, !713}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !574, file: !44, line: 1865, baseType: !577, size: 64)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{!507, !550, !507, !7}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !574, file: !44, line: 1866, baseType: !581, size: 64, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DISubroutineType(types: !583)
!583 = !{!324, !507, !550, !584}
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !586, line: 10, size: 128, elements: !587)
!586 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!587 = !{!588, !592}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !585, file: !586, line: 11, baseType: !589, size: 64)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = !DISubroutineType(types: !591)
!591 = !{null, !258}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !585, file: !586, line: 12, baseType: !258, size: 64, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !574, file: !44, line: 1867, baseType: !594, size: 64, offset: 128)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!130, !550, !130}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !574, file: !44, line: 1868, baseType: !598, size: 64, offset: 192)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DISubroutineType(types: !600)
!600 = !{!601, !550, !130}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !574, file: !44, line: 1870, baseType: !604, size: 64, offset: 256)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DISubroutineType(types: !606)
!606 = !{!130, !507, !267, !130}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !574, file: !44, line: 1872, baseType: !608, size: 64, offset: 320)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!130, !550, !507, !442, !314}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !574, file: !44, line: 1873, baseType: !612, size: 64, offset: 384)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DISubroutineType(types: !614)
!614 = !{!130, !507, !550, !507}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !574, file: !44, line: 1874, baseType: !616, size: 64, offset: 448)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DISubroutineType(types: !618)
!618 = !{!130, !550, !507}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !574, file: !44, line: 1875, baseType: !620, size: 64, offset: 512)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DISubroutineType(types: !622)
!622 = !{!130, !550, !507, !324}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !574, file: !44, line: 1876, baseType: !624, size: 64, offset: 576)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DISubroutineType(types: !626)
!626 = !{!130, !550, !507, !442}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !574, file: !44, line: 1877, baseType: !616, size: 64, offset: 640)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !574, file: !44, line: 1878, baseType: !629, size: 64, offset: 704)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DISubroutineType(types: !631)
!631 = !{!130, !550, !507, !442, !632}
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !249, line: 16, baseType: !633)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !249, line: 13, baseType: !244)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !574, file: !44, line: 1879, baseType: !635, size: 64, offset: 768)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DISubroutineType(types: !637)
!637 = !{!130, !550, !507, !550, !507, !7}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !574, file: !44, line: 1881, baseType: !639, size: 64, offset: 832)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DISubroutineType(types: !641)
!641 = !{!130, !507, !642}
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !644)
!644 = !{!645, !646, !647, !648, !649, !653, !661, !662, !663}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !643, file: !44, line: 220, baseType: !7, size: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !643, file: !44, line: 221, baseType: !442, size: 16, offset: 32)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !643, file: !44, line: 222, baseType: !556, size: 32, offset: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !643, file: !44, line: 223, baseType: !564, size: 32, offset: 96)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !643, file: !44, line: 224, baseType: !650, size: 64, offset: 128)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !249, line: 46, baseType: !651)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !435, line: 88, baseType: !652)
!652 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !643, file: !44, line: 225, baseType: !654, size: 128, offset: 192)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !655, line: 13, size: 128, elements: !656)
!655 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!656 = !{!657, !660}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !654, file: !655, line: 14, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !655, line: 8, baseType: !659)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !247, line: 30, baseType: !652)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !654, file: !655, line: 15, baseType: !266, size: 64, offset: 64)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !643, file: !44, line: 226, baseType: !654, size: 128, offset: 320)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !643, file: !44, line: 227, baseType: !654, size: 128, offset: 448)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !643, file: !44, line: 234, baseType: !477, size: 64, offset: 576)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !574, file: !44, line: 1882, baseType: !665, size: 64, offset: 896)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DISubroutineType(types: !667)
!667 = !{!130, !668, !670, !244, !7}
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !499)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !672, line: 22, size: 1152, elements: !673)
!672 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!673 = !{!674, !675, !676, !677, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !671, file: !672, line: 23, baseType: !244, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !671, file: !672, line: 24, baseType: !442, size: 16, offset: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !671, file: !672, line: 25, baseType: !7, size: 32, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !671, file: !672, line: 26, baseType: !678, size: 32, offset: 96)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !249, line: 104, baseType: !244)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !671, file: !672, line: 27, baseType: !542, size: 64, offset: 128)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !671, file: !672, line: 28, baseType: !542, size: 64, offset: 192)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !671, file: !672, line: 37, baseType: !542, size: 64, offset: 256)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !671, file: !672, line: 38, baseType: !632, size: 32, offset: 320)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !671, file: !672, line: 39, baseType: !632, size: 32, offset: 352)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !671, file: !672, line: 40, baseType: !556, size: 32, offset: 384)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !671, file: !672, line: 41, baseType: !564, size: 32, offset: 416)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !671, file: !672, line: 42, baseType: !650, size: 64, offset: 448)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !671, file: !672, line: 43, baseType: !654, size: 128, offset: 512)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !671, file: !672, line: 44, baseType: !654, size: 128, offset: 640)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !671, file: !672, line: 45, baseType: !654, size: 128, offset: 768)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !671, file: !672, line: 46, baseType: !654, size: 128, offset: 896)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !671, file: !672, line: 47, baseType: !542, size: 64, offset: 1024)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !671, file: !672, line: 48, baseType: !542, size: 64, offset: 1088)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !574, file: !44, line: 1883, baseType: !694, size: 64, offset: 960)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{!433, !507, !267, !447}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !574, file: !44, line: 1884, baseType: !698, size: 64, offset: 1024)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DISubroutineType(types: !700)
!700 = !{!130, !550, !701, !542, !542}
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !574, file: !44, line: 1886, baseType: !704, size: 64, offset: 1088)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DISubroutineType(types: !706)
!706 = !{!130, !550, !707, !130}
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !574, file: !44, line: 1887, baseType: !709, size: 64, offset: 1152)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DISubroutineType(types: !711)
!711 = !{!130, !550, !507, !477, !7, !442}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !574, file: !44, line: 1890, baseType: !624, size: 64, offset: 1216)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !574, file: !44, line: 1891, baseType: !714, size: 64, offset: 1280)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DISubroutineType(types: !716)
!716 = !{!130, !550, !601, !130}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !551, file: !44, line: 623, baseType: !718, size: 64, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !720)
!720 = !{!721, !722, !723, !724, !725, !726, !773, !2564, !2646, !2729, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2745, !2749, !2750, !2753, !2754, !2757, !2758, !2759, !2800, !2827, !2828, !2829, !2830, !2831, !2832, !2835, !2837, !2844, !2845, !2847, !2848, !2849, !2908, !2909, !2924, !2925, !2926, !2927, !2928, !2931, !2932, !2933, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !719, file: !44, line: 1417, baseType: !300, size: 128)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !719, file: !44, line: 1418, baseType: !632, size: 32, offset: 128)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !719, file: !44, line: 1419, baseType: !548, size: 8, offset: 160)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !719, file: !44, line: 1420, baseType: !265, size: 64, offset: 192)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !719, file: !44, line: 1421, baseType: !650, size: 64, offset: 256)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !719, file: !44, line: 1422, baseType: !727, size: 64, offset: 320)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !729)
!729 = !{!730, !731, !732, !739, !743, !747, !751, !752, !753, !763, !766, !767, !768, !770, !771, !772}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !728, file: !44, line: 2229, baseType: !324, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !728, file: !44, line: 2230, baseType: !130, size: 32, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !728, file: !44, line: 2238, baseType: !733, size: 64, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{!130, !736}
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !738, line: 28, flags: DIFlagFwdDecl)
!738 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!739 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !728, file: !44, line: 2239, baseType: !740, size: 64, offset: 192)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !742)
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !728, file: !44, line: 2240, baseType: !744, size: 64, offset: 256)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{!507, !727, !130, !324, !258}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !728, file: !44, line: 2242, baseType: !748, size: 64, offset: 320)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DISubroutineType(types: !750)
!750 = !{null, !718}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !728, file: !44, line: 2243, baseType: !240, size: 64, offset: 384)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !728, file: !44, line: 2244, baseType: !727, size: 64, offset: 448)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !728, file: !44, line: 2245, baseType: !754, size: 64, offset: 512)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !249, line: 182, size: 64, elements: !755)
!755 = !{!756}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !754, file: !249, line: 183, baseType: !757, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !249, line: 186, size: 128, elements: !759)
!759 = !{!760, !761}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !758, file: !249, line: 187, baseType: !757, size: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !758, file: !249, line: 187, baseType: !762, size: 64, offset: 64)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !728, file: !44, line: 2247, baseType: !764, offset: 576)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !765, line: 187, elements: !376)
!765 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!766 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !728, file: !44, line: 2248, baseType: !764, offset: 576)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !728, file: !44, line: 2249, baseType: !764, offset: 576)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !728, file: !44, line: 2250, baseType: !769, offset: 576)
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !764, elements: !403)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !728, file: !44, line: 2252, baseType: !764, offset: 576)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !728, file: !44, line: 2253, baseType: !764, offset: 576)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !728, file: !44, line: 2254, baseType: !764, offset: 576)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !719, file: !44, line: 1423, baseType: !774, size: 64, offset: 384)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !777)
!777 = !{!778, !782, !786, !787, !791, !797, !801, !802, !803, !807, !811, !812, !813, !814, !820, !825, !826, !833, !834, !835, !836, !2548, !2563}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !776, file: !44, line: 1936, baseType: !779, size: 64)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!550, !718}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !776, file: !44, line: 1937, baseType: !783, size: 64, offset: 64)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DISubroutineType(types: !785)
!785 = !{null, !550}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !776, file: !44, line: 1938, baseType: !783, size: 64, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !776, file: !44, line: 1940, baseType: !788, size: 64, offset: 192)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{null, !550, !130}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !776, file: !44, line: 1941, baseType: !792, size: 64, offset: 256)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DISubroutineType(types: !794)
!794 = !{!130, !550, !795}
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !776, file: !44, line: 1942, baseType: !798, size: 64, offset: 320)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DISubroutineType(types: !800)
!800 = !{!130, !550}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !776, file: !44, line: 1943, baseType: !783, size: 64, offset: 384)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !776, file: !44, line: 1944, baseType: !748, size: 64, offset: 448)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !776, file: !44, line: 1945, baseType: !804, size: 64, offset: 512)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{!130, !718, !130}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !776, file: !44, line: 1946, baseType: !808, size: 64, offset: 576)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DISubroutineType(types: !810)
!810 = !{!130, !718}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !776, file: !44, line: 1947, baseType: !808, size: 64, offset: 640)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !776, file: !44, line: 1948, baseType: !808, size: 64, offset: 704)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !776, file: !44, line: 1949, baseType: !808, size: 64, offset: 768)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !776, file: !44, line: 1950, baseType: !815, size: 64, offset: 832)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{!130, !507, !818}
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !776, file: !44, line: 1951, baseType: !821, size: 64, offset: 896)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DISubroutineType(types: !823)
!823 = !{!130, !718, !824, !267}
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !776, file: !44, line: 1952, baseType: !748, size: 64, offset: 960)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !776, file: !44, line: 1954, baseType: !827, size: 64, offset: 1024)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!130, !830, !507}
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !832, line: 539, flags: DIFlagFwdDecl)
!832 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!833 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !776, file: !44, line: 1955, baseType: !827, size: 64, offset: 1088)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !776, file: !44, line: 1956, baseType: !827, size: 64, offset: 1152)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !776, file: !44, line: 1957, baseType: !827, size: 64, offset: 1216)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !776, file: !44, line: 1963, baseType: !837, size: 64, offset: 1280)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{!130, !718, !840, !248}
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !842, line: 68, size: 512, align: 128, elements: !843)
!842 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!843 = !{!844, !845, !2540, !2547}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !841, file: !842, line: 69, baseType: !265, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !842, line: 77, baseType: !846, size: 320, offset: 64)
!846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !841, file: !842, line: 77, size: 320, elements: !847)
!847 = !{!848, !1069, !1074, !1102, !1110, !1116, !2471, !2539}
!848 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 78, baseType: !849, size: 320)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 78, size: 320, elements: !850)
!850 = !{!851, !852, !1067, !1068}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !849, file: !842, line: 84, baseType: !300, size: 128)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !849, file: !842, line: 86, baseType: !853, size: 64, offset: 128)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !855)
!855 = !{!856, !857, !864, !865, !866, !881, !897, !898, !899, !900, !1060, !1061, !1064, !1065, !1066}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !854, file: !44, line: 452, baseType: !550, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !854, file: !44, line: 453, baseType: !858, size: 128, offset: 64)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !859, line: 292, size: 128, elements: !860)
!859 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!860 = !{!861, !862, !863}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !858, file: !859, line: 293, baseType: !362)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !858, file: !859, line: 295, baseType: !248, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !858, file: !859, line: 296, baseType: !258, size: 64, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !854, file: !44, line: 454, baseType: !248, size: 32, offset: 192)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !854, file: !44, line: 455, baseType: !293, size: 32, offset: 224)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !854, file: !44, line: 460, baseType: !867, size: 128, offset: 256)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !868, line: 125, size: 128, elements: !869)
!868 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!869 = !{!870, !880}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !867, file: !868, line: 126, baseType: !871, size: 64)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !868, line: 31, size: 64, elements: !872)
!872 = !{!873}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !871, file: !868, line: 32, baseType: !874, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !868, line: 24, size: 192, align: 64, elements: !876)
!876 = !{!877, !878, !879}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !875, file: !868, line: 25, baseType: !265, size: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !875, file: !868, line: 26, baseType: !874, size: 64, offset: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !875, file: !868, line: 27, baseType: !874, size: 64, offset: 128)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !867, file: !868, line: 127, baseType: !874, size: 64, offset: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !854, file: !44, line: 461, baseType: !882, size: 256, offset: 384)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !883, line: 35, size: 256, elements: !884)
!883 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!884 = !{!885, !893, !894, !896}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !882, file: !883, line: 36, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !887, line: 13, baseType: !888)
!887 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !249, line: 175, baseType: !889)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !249, line: 173, size: 64, elements: !890)
!890 = !{!891}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !889, file: !249, line: 174, baseType: !892, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !245, line: 22, baseType: !659)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !882, file: !883, line: 42, baseType: !886, size: 64, offset: 64)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !882, file: !883, line: 46, baseType: !895, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !363, line: 29, baseType: !370)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !882, file: !883, line: 47, baseType: !300, size: 128, offset: 128)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !854, file: !44, line: 462, baseType: !265, size: 64, offset: 640)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !854, file: !44, line: 463, baseType: !265, size: 64, offset: 704)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !854, file: !44, line: 464, baseType: !265, size: 64, offset: 768)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !854, file: !44, line: 465, baseType: !901, size: 64, offset: 832)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !903)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !904)
!904 = !{!905, !909, !913, !917, !921, !925, !931, !937, !941, !946, !950, !954, !958, !1024, !1028, !1034, !1035, !1036, !1040, !1045, !1049, !1056}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !903, file: !44, line: 368, baseType: !906, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DISubroutineType(types: !908)
!908 = !{!130, !840, !795}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !903, file: !44, line: 369, baseType: !910, size: 64, offset: 64)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!130, !477, !840}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !903, file: !44, line: 372, baseType: !914, size: 64, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DISubroutineType(types: !916)
!916 = !{!130, !853, !795}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !903, file: !44, line: 375, baseType: !918, size: 64, offset: 192)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{!130, !840}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !903, file: !44, line: 381, baseType: !922, size: 64, offset: 256)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DISubroutineType(types: !924)
!924 = !{!130, !477, !853, !303, !7}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !903, file: !44, line: 383, baseType: !926, size: 64, offset: 320)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DISubroutineType(types: !928)
!928 = !{null, !929}
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !903, file: !44, line: 385, baseType: !932, size: 64, offset: 384)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{!130, !477, !853, !650, !7, !7, !935, !936}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !903, file: !44, line: 388, baseType: !938, size: 64, offset: 448)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{!130, !477, !853, !650, !7, !7, !840, !258}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !903, file: !44, line: 393, baseType: !942, size: 64, offset: 512)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DISubroutineType(types: !944)
!944 = !{!945, !853, !945}
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !249, line: 125, baseType: !542)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !903, file: !44, line: 394, baseType: !947, size: 64, offset: 576)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = !DISubroutineType(types: !949)
!949 = !{null, !840, !7, !7}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !903, file: !44, line: 395, baseType: !951, size: 64, offset: 640)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DISubroutineType(types: !953)
!953 = !{!130, !840, !248}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !903, file: !44, line: 396, baseType: !955, size: 64, offset: 704)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DISubroutineType(types: !957)
!957 = !{null, !840}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !903, file: !44, line: 397, baseType: !959, size: 64, offset: 768)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DISubroutineType(types: !961)
!961 = !{!433, !962, !982}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !964)
!964 = !{!965, !966, !967, !971, !972, !973, !974, !975}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !963, file: !44, line: 321, baseType: !477, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !963, file: !44, line: 326, baseType: !650, size: 64, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !963, file: !44, line: 327, baseType: !968, size: 64, offset: 128)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DISubroutineType(types: !970)
!970 = !{null, !962, !266, !266}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !963, file: !44, line: 328, baseType: !258, size: 64, offset: 192)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !963, file: !44, line: 329, baseType: !130, size: 32, offset: 256)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !963, file: !44, line: 330, baseType: !260, size: 16, offset: 288)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !963, file: !44, line: 331, baseType: !260, size: 16, offset: 304)
!975 = !DIDerivedType(tag: DW_TAG_member, scope: !963, file: !44, line: 332, baseType: !976, size: 64, offset: 320)
!976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !963, file: !44, line: 332, size: 64, elements: !977)
!977 = !{!978, !979}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !976, file: !44, line: 333, baseType: !7, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !976, file: !44, line: 334, baseType: !980, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !984, line: 29, size: 320, elements: !985)
!984 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!985 = !{!986, !987, !988, !989, !1015}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !983, file: !984, line: 35, baseType: !7, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !983, file: !984, line: 36, baseType: !447, size: 64, offset: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !983, file: !984, line: 37, baseType: !447, size: 64, offset: 128)
!989 = !DIDerivedType(tag: DW_TAG_member, scope: !983, file: !984, line: 38, baseType: !990, size: 64, offset: 192)
!990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !983, file: !984, line: 38, size: 64, elements: !991)
!991 = !{!992, !1000, !1007, !1011}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !990, file: !984, line: 39, baseType: !993, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !995)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !996, line: 17, size: 128, elements: !997)
!996 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!997 = !{!998, !999}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !995, file: !996, line: 19, baseType: !258, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !995, file: !996, line: 20, baseType: !448, size: 64, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !990, file: !984, line: 40, baseType: !1001, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1003)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !984, line: 15, size: 128, elements: !1004)
!1004 = !{!1005, !1006}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1003, file: !984, line: 16, baseType: !258, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1003, file: !984, line: 17, baseType: !447, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !990, file: !984, line: 41, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !984, line: 41, flags: DIFlagFwdDecl)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !990, file: !984, line: 42, baseType: !1012, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1014, line: 53, flags: DIFlagFwdDecl)
!1014 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1015 = !DIDerivedType(tag: DW_TAG_member, scope: !983, file: !984, line: 44, baseType: !1016, size: 64, offset: 256)
!1016 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !983, file: !984, line: 44, size: 64, elements: !1017)
!1017 = !{!1018, !1019}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1016, file: !984, line: 45, baseType: !265, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, scope: !1016, file: !984, line: 46, baseType: !1020, size: 64)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1016, file: !984, line: 46, size: 64, elements: !1021)
!1021 = !{!1022, !1023}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1020, file: !984, line: 47, baseType: !7, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1020, file: !984, line: 48, baseType: !7, size: 32, offset: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !903, file: !44, line: 402, baseType: !1025, size: 64, offset: 832)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!130, !853, !840, !840, !5}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !903, file: !44, line: 404, baseType: !1029, size: 64, offset: 896)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!314, !840, !1032}
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1033, line: 305, baseType: !7)
!1033 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !903, file: !44, line: 405, baseType: !955, size: 64, offset: 960)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !903, file: !44, line: 406, baseType: !918, size: 64, offset: 1024)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !903, file: !44, line: 407, baseType: !1037, size: 64, offset: 1088)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!130, !840, !265, !265}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !903, file: !44, line: 409, baseType: !1041, size: 64, offset: 1152)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{null, !840, !1044, !1044}
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !903, file: !44, line: 410, baseType: !1046, size: 64, offset: 1216)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!130, !853, !840}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !903, file: !44, line: 413, baseType: !1050, size: 64, offset: 1280)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!130, !1053, !477, !1055}
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !903, file: !44, line: 415, baseType: !1057, size: 64, offset: 1344)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{null, !477}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !854, file: !44, line: 466, baseType: !265, size: 64, offset: 896)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !854, file: !44, line: 467, baseType: !1062, size: 32, offset: 960)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1063, line: 8, baseType: !244)
!1063 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !854, file: !44, line: 468, baseType: !362, offset: 992)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !854, file: !44, line: 469, baseType: !300, size: 128, offset: 1024)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !854, file: !44, line: 470, baseType: !258, size: 64, offset: 1152)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !849, file: !842, line: 87, baseType: !265, size: 64, offset: 192)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !849, file: !842, line: 94, baseType: !265, size: 64, offset: 256)
!1069 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 96, baseType: !1070, size: 64)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 96, size: 64, elements: !1071)
!1071 = !{!1072}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1070, file: !842, line: 101, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !249, line: 143, baseType: !542)
!1074 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 103, baseType: !1075, size: 320)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 103, size: 320, elements: !1076)
!1076 = !{!1077, !1087, !1090, !1091}
!1077 = !DIDerivedType(tag: DW_TAG_member, scope: !1075, file: !842, line: 104, baseType: !1078, size: 128)
!1078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1075, file: !842, line: 104, size: 128, elements: !1079)
!1079 = !{!1080, !1081}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1078, file: !842, line: 105, baseType: !300, size: 128)
!1081 = !DIDerivedType(tag: DW_TAG_member, scope: !1078, file: !842, line: 106, baseType: !1082, size: 128)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1078, file: !842, line: 106, size: 128, elements: !1083)
!1083 = !{!1084, !1085, !1086}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1082, file: !842, line: 107, baseType: !840, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1082, file: !842, line: 109, baseType: !130, size: 32, offset: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1082, file: !842, line: 110, baseType: !130, size: 32, offset: 96)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1075, file: !842, line: 117, baseType: !1088, size: 64, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !842, line: 117, flags: DIFlagFwdDecl)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1075, file: !842, line: 119, baseType: !258, size: 64, offset: 192)
!1091 = !DIDerivedType(tag: DW_TAG_member, scope: !1075, file: !842, line: 120, baseType: !1092, size: 64, offset: 256)
!1092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1075, file: !842, line: 120, size: 64, elements: !1093)
!1093 = !{!1094, !1095, !1096}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1092, file: !842, line: 121, baseType: !258, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1092, file: !842, line: 122, baseType: !265, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, scope: !1092, file: !842, line: 123, baseType: !1097, size: 32)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1092, file: !842, line: 123, size: 32, elements: !1098)
!1098 = !{!1099, !1100, !1101}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1097, file: !842, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1097, file: !842, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1097, file: !842, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1102 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 130, baseType: !1103, size: 192)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 130, size: 192, elements: !1104)
!1104 = !{!1105, !1106, !1107, !1108, !1109}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1103, file: !842, line: 131, baseType: !265, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1103, file: !842, line: 134, baseType: !548, size: 8, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1103, file: !842, line: 135, baseType: !548, size: 8, offset: 72)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1103, file: !842, line: 136, baseType: !293, size: 32, offset: 96)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1103, file: !842, line: 137, baseType: !7, size: 32, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 139, baseType: !1111, size: 256)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 139, size: 256, elements: !1112)
!1112 = !{!1113, !1114, !1115}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1111, file: !842, line: 140, baseType: !265, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1111, file: !842, line: 141, baseType: !293, size: 32, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1111, file: !842, line: 143, baseType: !300, size: 128, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 145, baseType: !1117, size: 256)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 145, size: 256, elements: !1118)
!1118 = !{!1119, !1120, !1122, !1123, !2470}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1117, file: !842, line: 146, baseType: !265, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1117, file: !842, line: 147, baseType: !1121, size: 64, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !832, line: 509, baseType: !840)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1117, file: !842, line: 148, baseType: !265, size: 64, offset: 128)
!1123 = !DIDerivedType(tag: DW_TAG_member, scope: !1117, file: !842, line: 149, baseType: !1124, size: 64, offset: 192)
!1124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1117, file: !842, line: 149, size: 64, elements: !1125)
!1125 = !{!1126, !2469}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1124, file: !842, line: 150, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !842, line: 388, size: 7296, elements: !1129)
!1129 = !{!1130, !2465}
!1130 = !DIDerivedType(tag: DW_TAG_member, scope: !1128, file: !842, line: 389, baseType: !1131, size: 7296)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1128, file: !842, line: 389, size: 7296, elements: !1132)
!1132 = !{!1133, !1251, !1252, !1253, !1257, !1258, !1259, !1260, !1261, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1302, !1310, !1313, !1356, !1357, !2449, !2450, !2453, !2454, !2455, !2458, !2459, !2460, !2463, !2464}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1131, file: !842, line: 390, baseType: !1134, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !842, line: 305, size: 1472, elements: !1136)
!1136 = !{!1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1151, !1152, !1157, !1158, !1161, !1245, !1246, !1247, !1248, !1249}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1135, file: !842, line: 308, baseType: !265, size: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1135, file: !842, line: 309, baseType: !265, size: 64, offset: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1135, file: !842, line: 313, baseType: !1134, size: 64, offset: 128)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1135, file: !842, line: 313, baseType: !1134, size: 64, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1135, file: !842, line: 315, baseType: !875, size: 192, align: 64, offset: 256)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1135, file: !842, line: 323, baseType: !265, size: 64, offset: 448)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1135, file: !842, line: 327, baseType: !1127, size: 64, offset: 512)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1135, file: !842, line: 333, baseType: !1145, size: 64, offset: 576)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !832, line: 284, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !832, line: 284, size: 64, elements: !1147)
!1147 = !{!1148}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1146, file: !832, line: 284, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1150, line: 19, baseType: !265)
!1150 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1135, file: !842, line: 334, baseType: !265, size: 64, offset: 640)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1135, file: !842, line: 343, baseType: !1153, size: 256, offset: 704)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1135, file: !842, line: 340, size: 256, elements: !1154)
!1154 = !{!1155, !1156}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1153, file: !842, line: 341, baseType: !875, size: 192, align: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1153, file: !842, line: 342, baseType: !265, size: 64, offset: 192)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1135, file: !842, line: 351, baseType: !300, size: 128, offset: 960)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1135, file: !842, line: 353, baseType: !1159, size: 64, offset: 1088)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !842, line: 353, flags: DIFlagFwdDecl)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1135, file: !842, line: 356, baseType: !1162, size: 64, offset: 1152)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1165)
!1165 = !{!1166, !1170, !1171, !1175, !1179, !1219, !1223, !1227, !1231, !1232, !1233, !1237, !1241}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1164, file: !14, line: 558, baseType: !1167, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{null, !1134}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1164, file: !14, line: 559, baseType: !1167, size: 64, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1164, file: !14, line: 560, baseType: !1172, size: 64, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!130, !1134, !265}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1164, file: !14, line: 561, baseType: !1176, size: 64, offset: 192)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!130, !1134}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1164, file: !14, line: 562, baseType: !1180, size: 64, offset: 256)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!1183, !1184}
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !842, line: 682, baseType: !7)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1186)
!1186 = !{!1187, !1188, !1189, !1190, !1191, !1192, !1199, !1206, !1212, !1213, !1214, !1216, !1218}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1185, file: !14, line: 509, baseType: !1134, size: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1185, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1185, file: !14, line: 511, baseType: !248, size: 32, offset: 96)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1185, file: !14, line: 512, baseType: !265, size: 64, offset: 128)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1185, file: !14, line: 513, baseType: !265, size: 64, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1185, file: !14, line: 514, baseType: !1193, size: 64, offset: 256)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !832, line: 385, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !832, line: 385, size: 64, elements: !1196)
!1196 = !{!1197}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1195, file: !832, line: 385, baseType: !1198, size: 64)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1150, line: 15, baseType: !265)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1185, file: !14, line: 516, baseType: !1200, size: 64, offset: 320)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !832, line: 359, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !832, line: 359, size: 64, elements: !1203)
!1203 = !{!1204}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1202, file: !832, line: 359, baseType: !1205, size: 64)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1150, line: 16, baseType: !265)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1185, file: !14, line: 519, baseType: !1207, size: 64, offset: 384)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1150, line: 21, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1150, line: 21, size: 64, elements: !1209)
!1209 = !{!1210}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1208, file: !1150, line: 21, baseType: !1211, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1150, line: 14, baseType: !265)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1185, file: !14, line: 521, baseType: !840, size: 64, offset: 448)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1185, file: !14, line: 522, baseType: !840, size: 64, offset: 512)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1185, file: !14, line: 528, baseType: !1215, size: 64, offset: 576)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1185, file: !14, line: 532, baseType: !1217, size: 64, offset: 640)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1185, file: !14, line: 536, baseType: !1121, size: 64, offset: 704)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1164, file: !14, line: 563, baseType: !1220, size: 64, offset: 320)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!1183, !1184, !13}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1164, file: !14, line: 565, baseType: !1224, size: 64, offset: 384)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = !DISubroutineType(types: !1226)
!1226 = !{null, !1184, !265, !265}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1164, file: !14, line: 567, baseType: !1228, size: 64, offset: 448)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!265, !1134}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1164, file: !14, line: 571, baseType: !1180, size: 64, offset: 512)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1164, file: !14, line: 574, baseType: !1180, size: 64, offset: 576)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1164, file: !14, line: 579, baseType: !1234, size: 64, offset: 640)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!130, !1134, !265, !258, !130, !130}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1164, file: !14, line: 585, baseType: !1238, size: 64, offset: 704)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!324, !1134}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1164, file: !14, line: 615, baseType: !1242, size: 64, offset: 768)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{!840, !1134, !265}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1135, file: !842, line: 359, baseType: !265, size: 64, offset: 1216)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1135, file: !842, line: 361, baseType: !477, size: 64, offset: 1280)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1135, file: !842, line: 362, baseType: !258, size: 64, offset: 1344)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1135, file: !842, line: 365, baseType: !886, size: 64, offset: 1408)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1135, file: !842, line: 373, baseType: !1250, offset: 1472)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !842, line: 296, elements: !376)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1131, file: !842, line: 391, baseType: !871, size: 64, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1131, file: !842, line: 392, baseType: !542, size: 64, offset: 128)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1131, file: !842, line: 394, baseType: !1254, size: 64, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!265, !477, !265, !265, !265, !265}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1131, file: !842, line: 398, baseType: !265, size: 64, offset: 256)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1131, file: !842, line: 399, baseType: !265, size: 64, offset: 320)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1131, file: !842, line: 405, baseType: !265, size: 64, offset: 384)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1131, file: !842, line: 406, baseType: !265, size: 64, offset: 448)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1131, file: !842, line: 407, baseType: !1262, size: 64, offset: 512)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !832, line: 286, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !832, line: 286, size: 64, elements: !1265)
!1265 = !{!1266}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1264, file: !832, line: 286, baseType: !1267, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1150, line: 18, baseType: !265)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1131, file: !842, line: 416, baseType: !293, size: 32, offset: 576)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1131, file: !842, line: 428, baseType: !293, size: 32, offset: 608)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1131, file: !842, line: 437, baseType: !293, size: 32, offset: 640)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1131, file: !842, line: 447, baseType: !293, size: 32, offset: 672)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1131, file: !842, line: 450, baseType: !886, size: 64, offset: 704)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1131, file: !842, line: 452, baseType: !130, size: 32, offset: 768)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1131, file: !842, line: 454, baseType: !362, offset: 800)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1131, file: !842, line: 457, baseType: !882, size: 256, offset: 832)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1131, file: !842, line: 459, baseType: !300, size: 128, offset: 1088)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1131, file: !842, line: 466, baseType: !265, size: 64, offset: 1216)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1131, file: !842, line: 467, baseType: !265, size: 64, offset: 1280)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1131, file: !842, line: 469, baseType: !265, size: 64, offset: 1344)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1131, file: !842, line: 470, baseType: !265, size: 64, offset: 1408)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1131, file: !842, line: 471, baseType: !888, size: 64, offset: 1472)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1131, file: !842, line: 472, baseType: !265, size: 64, offset: 1536)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1131, file: !842, line: 473, baseType: !265, size: 64, offset: 1600)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1131, file: !842, line: 474, baseType: !265, size: 64, offset: 1664)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1131, file: !842, line: 475, baseType: !265, size: 64, offset: 1728)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1131, file: !842, line: 477, baseType: !362, offset: 1792)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1131, file: !842, line: 478, baseType: !265, size: 64, offset: 1792)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1131, file: !842, line: 478, baseType: !265, size: 64, offset: 1856)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1131, file: !842, line: 478, baseType: !265, size: 64, offset: 1920)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1131, file: !842, line: 478, baseType: !265, size: 64, offset: 1984)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1131, file: !842, line: 479, baseType: !265, size: 64, offset: 2048)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1131, file: !842, line: 479, baseType: !265, size: 64, offset: 2112)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1131, file: !842, line: 479, baseType: !265, size: 64, offset: 2176)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1131, file: !842, line: 480, baseType: !265, size: 64, offset: 2240)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1131, file: !842, line: 480, baseType: !265, size: 64, offset: 2304)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1131, file: !842, line: 480, baseType: !265, size: 64, offset: 2368)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1131, file: !842, line: 480, baseType: !265, size: 64, offset: 2432)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1131, file: !842, line: 482, baseType: !1299, size: 2816, offset: 2496)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 2816, elements: !1300)
!1300 = !{!1301}
!1301 = !DISubrange(count: 44)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1131, file: !842, line: 488, baseType: !1303, size: 256, offset: 5312)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1304, line: 60, size: 256, elements: !1305)
!1304 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1305 = !{!1306}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1303, file: !1304, line: 61, baseType: !1307, size: 256)
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !886, size: 256, elements: !1308)
!1308 = !{!1309}
!1309 = !DISubrange(count: 4)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1131, file: !842, line: 490, baseType: !1311, size: 64, offset: 5568)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !842, line: 490, flags: DIFlagFwdDecl)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1131, file: !842, line: 493, baseType: !1314, size: 896, offset: 5632)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1315, line: 53, baseType: !1316)
!1315 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1315, line: 13, size: 896, elements: !1317)
!1317 = !{!1318, !1319, !1320, !1321, !1324, !1325, !1332, !1333, !1353, !1354, !1355}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1316, file: !1315, line: 18, baseType: !542, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1316, file: !1315, line: 28, baseType: !888, size: 64, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1316, file: !1315, line: 31, baseType: !882, size: 256, offset: 128)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1316, file: !1315, line: 32, baseType: !1322, size: 64, offset: 384)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1315, line: 32, flags: DIFlagFwdDecl)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1316, file: !1315, line: 37, baseType: !262, size: 16, offset: 448)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1316, file: !1315, line: 40, baseType: !1326, size: 192, offset: 512)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1327, line: 53, size: 192, elements: !1328)
!1327 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1328 = !{!1329, !1330, !1331}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1326, file: !1327, line: 54, baseType: !886, size: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1326, file: !1327, line: 55, baseType: !362, offset: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1326, file: !1327, line: 59, baseType: !300, size: 128, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1316, file: !1315, line: 41, baseType: !258, size: 64, offset: 704)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1316, file: !1315, line: 42, baseType: !1334, size: 64, offset: 768)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1336)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1337, line: 13, size: 896, elements: !1338)
!1337 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1338 = !{!1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1336, file: !1337, line: 14, baseType: !258, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1336, file: !1337, line: 15, baseType: !265, size: 64, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1336, file: !1337, line: 17, baseType: !265, size: 64, offset: 128)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1336, file: !1337, line: 17, baseType: !265, size: 64, offset: 192)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1336, file: !1337, line: 19, baseType: !266, size: 64, offset: 256)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1336, file: !1337, line: 21, baseType: !266, size: 64, offset: 320)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1336, file: !1337, line: 22, baseType: !266, size: 64, offset: 384)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1336, file: !1337, line: 23, baseType: !266, size: 64, offset: 448)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1336, file: !1337, line: 24, baseType: !266, size: 64, offset: 512)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1336, file: !1337, line: 25, baseType: !266, size: 64, offset: 576)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1336, file: !1337, line: 26, baseType: !266, size: 64, offset: 640)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1336, file: !1337, line: 27, baseType: !266, size: 64, offset: 704)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1336, file: !1337, line: 28, baseType: !266, size: 64, offset: 768)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1336, file: !1337, line: 29, baseType: !266, size: 64, offset: 832)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1316, file: !1315, line: 44, baseType: !293, size: 32, offset: 832)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1316, file: !1315, line: 50, baseType: !260, size: 16, offset: 864)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1316, file: !1315, line: 51, baseType: !253, size: 16, offset: 880)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1131, file: !842, line: 495, baseType: !265, size: 64, offset: 6528)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1131, file: !842, line: 497, baseType: !1358, size: 64, offset: 6592)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !842, line: 381, size: 384, elements: !1360)
!1360 = !{!1361, !1362, !2448}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1359, file: !842, line: 382, baseType: !293, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1359, file: !842, line: 383, baseType: !1363, size: 128, offset: 64)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !842, line: 376, size: 128, elements: !1364)
!1364 = !{!1365, !2446}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1363, file: !842, line: 377, baseType: !1366, size: 64)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1014, line: 640, size: 48640, elements: !1368)
!1368 = !{!1369, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1389, !1407, !1418, !1503, !1504, !1505, !1513, !1514, !1516, !1517, !1518, !1519, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1597, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1635, !1637, !1638, !1639, !1651, !1652, !1653, !1654, !1655, !1656, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1680, !1685, !1867, !1868, !1869, !1870, !1874, !1877, !1880, !1883, !1886, !1889, !1990, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2036, !2037, !2038, !2039, !2040, !2045, !2046, !2047, !2050, !2051, !2054, !2057, !2060, !2063, !2106, !2109, !2110, !2189, !2190, !2193, !2194, !2197, !2198, !2199, !2203, !2204, !2205, !2218, !2219, !2220, !2230, !2235, !2236, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1367, file: !1014, line: 646, baseType: !1370, size: 128)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1371, line: 56, size: 128, elements: !1372)
!1371 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1372 = !{!1373, !1374}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1370, file: !1371, line: 57, baseType: !265, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1370, file: !1371, line: 58, baseType: !244, size: 32, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1367, file: !1014, line: 649, baseType: !270, size: 64, offset: 128)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1367, file: !1014, line: 657, baseType: !258, size: 64, offset: 192)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1367, file: !1014, line: 658, baseType: !288, size: 32, offset: 256)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1367, file: !1014, line: 660, baseType: !7, size: 32, offset: 288)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1367, file: !1014, line: 661, baseType: !7, size: 32, offset: 320)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1367, file: !1014, line: 684, baseType: !130, size: 32, offset: 352)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1367, file: !1014, line: 686, baseType: !130, size: 32, offset: 384)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1367, file: !1014, line: 687, baseType: !130, size: 32, offset: 416)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1367, file: !1014, line: 688, baseType: !130, size: 32, offset: 448)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1367, file: !1014, line: 689, baseType: !7, size: 32, offset: 480)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1367, file: !1014, line: 691, baseType: !1386, size: 64, offset: 512)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1388)
!1388 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1014, line: 691, flags: DIFlagFwdDecl)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1367, file: !1014, line: 692, baseType: !1390, size: 832, offset: 576)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1014, line: 451, size: 832, elements: !1391)
!1391 = !{!1392, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1390, file: !1014, line: 453, baseType: !1393, size: 128)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1014, line: 325, size: 128, elements: !1394)
!1394 = !{!1395, !1396}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1393, file: !1014, line: 326, baseType: !265, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1393, file: !1014, line: 327, baseType: !244, size: 32, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1390, file: !1014, line: 454, baseType: !875, size: 192, align: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1390, file: !1014, line: 455, baseType: !300, size: 128, offset: 320)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1390, file: !1014, line: 456, baseType: !7, size: 32, offset: 448)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1390, file: !1014, line: 458, baseType: !542, size: 64, offset: 512)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1390, file: !1014, line: 459, baseType: !542, size: 64, offset: 576)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1390, file: !1014, line: 460, baseType: !542, size: 64, offset: 640)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1390, file: !1014, line: 461, baseType: !542, size: 64, offset: 704)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1390, file: !1014, line: 463, baseType: !542, size: 64, offset: 768)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1390, file: !1014, line: 465, baseType: !1406, offset: 832)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1014, line: 415, elements: !376)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1367, file: !1014, line: 693, baseType: !1408, size: 384, offset: 1408)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1014, line: 489, size: 384, elements: !1409)
!1409 = !{!1410, !1411, !1412, !1413, !1414, !1415, !1416}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1408, file: !1014, line: 490, baseType: !300, size: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1408, file: !1014, line: 491, baseType: !265, size: 64, offset: 128)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1408, file: !1014, line: 492, baseType: !265, size: 64, offset: 192)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1408, file: !1014, line: 493, baseType: !7, size: 32, offset: 256)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1408, file: !1014, line: 494, baseType: !262, size: 16, offset: 288)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1408, file: !1014, line: 495, baseType: !262, size: 16, offset: 304)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1408, file: !1014, line: 497, baseType: !1417, size: 64, offset: 320)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1367, file: !1014, line: 697, baseType: !1419, size: 1792, offset: 1792)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1014, line: 507, size: 1792, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1500, !1501}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1419, file: !1014, line: 508, baseType: !875, size: 192, align: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1419, file: !1014, line: 515, baseType: !542, size: 64, offset: 192)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1419, file: !1014, line: 516, baseType: !542, size: 64, offset: 256)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1419, file: !1014, line: 517, baseType: !542, size: 64, offset: 320)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1419, file: !1014, line: 518, baseType: !542, size: 64, offset: 384)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1419, file: !1014, line: 519, baseType: !542, size: 64, offset: 448)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1419, file: !1014, line: 526, baseType: !892, size: 64, offset: 512)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1419, file: !1014, line: 527, baseType: !542, size: 64, offset: 576)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1419, file: !1014, line: 528, baseType: !7, size: 32, offset: 640)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1419, file: !1014, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1419, file: !1014, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1419, file: !1014, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1419, file: !1014, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1419, file: !1014, line: 563, baseType: !1435, size: 512, offset: 704)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1436)
!1436 = !{!1437, !1445, !1446, !1451, !1494, !1497, !1498, !1499}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1435, file: !20, line: 119, baseType: !1438, size: 256)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1439, line: 9, size: 256, elements: !1440)
!1439 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1440 = !{!1441, !1442}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1438, file: !1439, line: 10, baseType: !875, size: 192, align: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1438, file: !1439, line: 11, baseType: !1443, size: 64, offset: 192)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1444, line: 29, baseType: !892)
!1444 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1435, file: !20, line: 120, baseType: !1443, size: 64, offset: 256)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1435, file: !20, line: 121, baseType: !1447, size: 64, offset: 320)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!19, !1450}
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1435, file: !20, line: 122, baseType: !1452, size: 64, offset: 384)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1454)
!1454 = !{!1455, !1475, !1476, !1479, !1484, !1485, !1489, !1493}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1453, file: !20, line: 160, baseType: !1456, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1457, file: !20, line: 215, baseType: !895)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1457, file: !20, line: 216, baseType: !7, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1457, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1457, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1457, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1457, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1457, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1457, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1457, file: !20, line: 233, baseType: !1443, size: 64, offset: 128)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1457, file: !20, line: 234, baseType: !1450, size: 64, offset: 192)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1457, file: !20, line: 235, baseType: !1443, size: 64, offset: 256)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1457, file: !20, line: 236, baseType: !1450, size: 64, offset: 320)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1457, file: !20, line: 237, baseType: !1472, size: 4096, offset: 512)
!1472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1453, size: 4096, elements: !1473)
!1473 = !{!1474}
!1474 = !DISubrange(count: 8)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1453, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1453, file: !20, line: 162, baseType: !1477, size: 32, offset: 96)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !249, line: 27, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !435, line: 96, baseType: !130)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1453, file: !20, line: 163, baseType: !1480, size: 32, offset: 128)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !513, line: 276, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !513, line: 276, size: 32, elements: !1482)
!1482 = !{!1483}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1481, file: !513, line: 276, baseType: !517, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1453, file: !20, line: 164, baseType: !1450, size: 64, offset: 192)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1453, file: !20, line: 165, baseType: !1486, size: 128, offset: 256)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1439, line: 14, size: 128, elements: !1487)
!1487 = !{!1488}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1486, file: !1439, line: 15, baseType: !867, size: 128)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1453, file: !20, line: 166, baseType: !1490, size: 64, offset: 384)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!1443}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1453, file: !20, line: 167, baseType: !1443, size: 64, offset: 448)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1435, file: !20, line: 123, baseType: !1495, size: 8, offset: 448)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !245, line: 17, baseType: !1496)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !247, line: 21, baseType: !548)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1435, file: !20, line: 124, baseType: !1495, size: 8, offset: 456)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1435, file: !20, line: 125, baseType: !1495, size: 8, offset: 464)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1435, file: !20, line: 126, baseType: !1495, size: 8, offset: 472)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1419, file: !1014, line: 572, baseType: !1435, size: 512, offset: 1216)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1419, file: !1014, line: 580, baseType: !1502, size: 64, offset: 1728)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1367, file: !1014, line: 721, baseType: !7, size: 32, offset: 3584)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1367, file: !1014, line: 722, baseType: !130, size: 32, offset: 3616)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1367, file: !1014, line: 723, baseType: !1506, size: 64, offset: 3648)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!1507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1508)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1509, line: 17, baseType: !1510)
!1509 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1509, line: 17, size: 64, elements: !1511)
!1511 = !{!1512}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1510, file: !1509, line: 17, baseType: !333, size: 64)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1367, file: !1014, line: 724, baseType: !1508, size: 64, offset: 3712)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1367, file: !1014, line: 749, baseType: !1515, offset: 3776)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1014, line: 290, elements: !376)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1367, file: !1014, line: 751, baseType: !300, size: 128, offset: 3776)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1367, file: !1014, line: 757, baseType: !1127, size: 64, offset: 3904)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1367, file: !1014, line: 758, baseType: !1127, size: 64, offset: 3968)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1367, file: !1014, line: 761, baseType: !1520, size: 320, offset: 4032)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1304, line: 34, size: 320, elements: !1521)
!1521 = !{!1522, !1523}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1520, file: !1304, line: 35, baseType: !542, size: 64)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1520, file: !1304, line: 36, baseType: !1524, size: 256, offset: 64)
!1524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 256, elements: !1308)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1367, file: !1014, line: 766, baseType: !130, size: 32, offset: 4352)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1367, file: !1014, line: 767, baseType: !130, size: 32, offset: 4384)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1367, file: !1014, line: 768, baseType: !130, size: 32, offset: 4416)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1367, file: !1014, line: 770, baseType: !130, size: 32, offset: 4448)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1367, file: !1014, line: 772, baseType: !265, size: 64, offset: 4480)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1367, file: !1014, line: 775, baseType: !7, size: 32, offset: 4544)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1367, file: !1014, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1367, file: !1014, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1367, file: !1014, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1367, file: !1014, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1367, file: !1014, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1367, file: !1014, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1367, file: !1014, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1367, file: !1014, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1367, file: !1014, line: 831, baseType: !265, size: 64, offset: 4672)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1367, file: !1014, line: 833, baseType: !1541, size: 384, offset: 4736)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1542)
!1542 = !{!1543, !1548}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1541, file: !25, line: 26, baseType: !1544, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!266, !1547}
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, scope: !1541, file: !25, line: 27, baseType: !1549, size: 320, offset: 64)
!1549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1541, file: !25, line: 27, size: 320, elements: !1550)
!1550 = !{!1551, !1560, !1587}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1549, file: !25, line: 36, baseType: !1552, size: 320)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1549, file: !25, line: 29, size: 320, elements: !1553)
!1553 = !{!1554, !1555, !1556, !1557, !1558, !1559}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1552, file: !25, line: 30, baseType: !243, size: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1552, file: !25, line: 31, baseType: !244, size: 32, offset: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1552, file: !25, line: 32, baseType: !244, size: 32, offset: 96)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1552, file: !25, line: 33, baseType: !244, size: 32, offset: 128)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1552, file: !25, line: 34, baseType: !542, size: 64, offset: 192)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1552, file: !25, line: 35, baseType: !243, size: 64, offset: 256)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1549, file: !25, line: 46, baseType: !1561, size: 192)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1549, file: !25, line: 38, size: 192, elements: !1562)
!1562 = !{!1563, !1564, !1565, !1586}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1561, file: !25, line: 39, baseType: !1477, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1561, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, scope: !1561, file: !25, line: 41, baseType: !1566, size: 64, offset: 64)
!1566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1561, file: !25, line: 41, size: 64, elements: !1567)
!1567 = !{!1568, !1576}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1566, file: !25, line: 42, baseType: !1569, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1571, line: 7, size: 128, elements: !1572)
!1571 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1572 = !{!1573, !1575}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1570, file: !1571, line: 8, baseType: !1574, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !435, line: 93, baseType: !652)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1570, file: !1571, line: 9, baseType: !652, size: 64, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1566, file: !25, line: 43, baseType: !1577, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1579, line: 7, size: 64, elements: !1580)
!1579 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1580 = !{!1581, !1585}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1578, file: !1579, line: 8, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1579, line: 5, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !245, line: 20, baseType: !1584)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !247, line: 26, baseType: !130)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1578, file: !1579, line: 9, baseType: !1583, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1561, file: !25, line: 45, baseType: !542, size: 64, offset: 128)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1549, file: !25, line: 54, baseType: !1588, size: 256)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1549, file: !25, line: 48, size: 256, elements: !1589)
!1589 = !{!1590, !1593, !1594, !1595, !1596}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1588, file: !25, line: 49, baseType: !1591, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1588, file: !25, line: 50, baseType: !130, size: 32, offset: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1588, file: !25, line: 51, baseType: !130, size: 32, offset: 96)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1588, file: !25, line: 52, baseType: !265, size: 64, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1588, file: !25, line: 53, baseType: !265, size: 64, offset: 192)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1367, file: !1014, line: 835, baseType: !1598, size: 32, offset: 5120)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !249, line: 22, baseType: !1599)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !435, line: 28, baseType: !130)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1367, file: !1014, line: 836, baseType: !1598, size: 32, offset: 5152)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1367, file: !1014, line: 840, baseType: !265, size: 64, offset: 5184)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1367, file: !1014, line: 849, baseType: !1366, size: 64, offset: 5248)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1367, file: !1014, line: 852, baseType: !1366, size: 64, offset: 5312)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1367, file: !1014, line: 857, baseType: !300, size: 128, offset: 5376)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1367, file: !1014, line: 858, baseType: !300, size: 128, offset: 5504)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1367, file: !1014, line: 859, baseType: !1366, size: 64, offset: 5632)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1367, file: !1014, line: 867, baseType: !300, size: 128, offset: 5696)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1367, file: !1014, line: 868, baseType: !300, size: 128, offset: 5824)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1367, file: !1014, line: 871, baseType: !1610, size: 64, offset: 5952)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1612)
!1612 = !{!1613, !1614, !1615, !1616, !1618, !1619, !1626, !1627}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1611, file: !53, line: 61, baseType: !288, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1611, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1611, file: !53, line: 63, baseType: !362, offset: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1611, file: !53, line: 65, baseType: !1617, size: 256, offset: 64)
!1617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !754, size: 256, elements: !1308)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1611, file: !53, line: 66, baseType: !754, size: 64, offset: 320)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1611, file: !53, line: 68, baseType: !1620, size: 128, offset: 384)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1621, line: 40, baseType: !1622)
!1621 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1621, line: 36, size: 128, elements: !1623)
!1623 = !{!1624, !1625}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1622, file: !1621, line: 37, baseType: !362)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1622, file: !1621, line: 38, baseType: !300, size: 128)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1611, file: !53, line: 69, baseType: !490, size: 128, align: 64, offset: 512)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1611, file: !53, line: 70, baseType: !1628, size: 128, offset: 640)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1629, size: 128, elements: !334)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1629, file: !53, line: 55, baseType: !130, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1629, file: !53, line: 56, baseType: !1633, size: 64, offset: 64)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1634 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1367, file: !1014, line: 872, baseType: !1636, size: 512, offset: 6016)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 512, elements: !1308)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1367, file: !1014, line: 873, baseType: !300, size: 128, offset: 6528)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1367, file: !1014, line: 874, baseType: !300, size: 128, offset: 6656)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1367, file: !1014, line: 876, baseType: !1640, size: 64, offset: 6784)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1642, line: 26, size: 192, elements: !1643)
!1642 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1643 = !{!1644, !1645}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1641, file: !1642, line: 27, baseType: !7, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1641, file: !1642, line: 28, baseType: !1646, size: 128, offset: 64)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1647, line: 43, size: 128, elements: !1648)
!1647 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1646, file: !1647, line: 44, baseType: !895)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1646, file: !1647, line: 45, baseType: !300, size: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1367, file: !1014, line: 879, baseType: !824, size: 64, offset: 6848)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1367, file: !1014, line: 882, baseType: !824, size: 64, offset: 6912)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1367, file: !1014, line: 884, baseType: !542, size: 64, offset: 6976)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1367, file: !1014, line: 885, baseType: !542, size: 64, offset: 7040)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1367, file: !1014, line: 890, baseType: !542, size: 64, offset: 7104)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1367, file: !1014, line: 891, baseType: !1657, size: 128, offset: 7168)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1014, line: 242, size: 128, elements: !1658)
!1658 = !{!1659, !1660, !1661}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1657, file: !1014, line: 244, baseType: !542, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1657, file: !1014, line: 245, baseType: !542, size: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1657, file: !1014, line: 246, baseType: !895, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1367, file: !1014, line: 900, baseType: !265, size: 64, offset: 7296)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1367, file: !1014, line: 901, baseType: !265, size: 64, offset: 7360)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1367, file: !1014, line: 904, baseType: !542, size: 64, offset: 7424)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1367, file: !1014, line: 907, baseType: !542, size: 64, offset: 7488)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1367, file: !1014, line: 910, baseType: !265, size: 64, offset: 7552)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1367, file: !1014, line: 911, baseType: !265, size: 64, offset: 7616)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1367, file: !1014, line: 914, baseType: !1669, size: 640, offset: 7680)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1670, line: 123, size: 640, elements: !1671)
!1670 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1671 = !{!1672, !1678, !1679}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1669, file: !1670, line: 124, baseType: !1673, size: 576)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1674, size: 576, elements: !403)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1670, line: 108, size: 192, elements: !1675)
!1675 = !{!1676, !1677}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1674, file: !1670, line: 109, baseType: !542, size: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1674, file: !1670, line: 110, baseType: !1486, size: 128, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1669, file: !1670, line: 125, baseType: !7, size: 32, offset: 576)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1669, file: !1670, line: 126, baseType: !7, size: 32, offset: 608)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1367, file: !1014, line: 917, baseType: !1681, size: 192, offset: 8320)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1670, line: 134, size: 192, elements: !1682)
!1682 = !{!1683, !1684}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1681, file: !1670, line: 135, baseType: !490, size: 128, align: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1681, file: !1670, line: 136, baseType: !7, size: 32, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1367, file: !1014, line: 923, baseType: !1686, size: 64, offset: 8512)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1689, line: 111, size: 1280, elements: !1690)
!1689 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1690 = !{!1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1708, !1709, !1710, !1711, !1712, !1713, !1820, !1821, !1822, !1823, !1849, !1852, !1862}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1688, file: !1689, line: 112, baseType: !293, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1688, file: !1689, line: 120, baseType: !556, size: 32, offset: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1688, file: !1689, line: 121, baseType: !564, size: 32, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1688, file: !1689, line: 122, baseType: !556, size: 32, offset: 96)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1688, file: !1689, line: 123, baseType: !564, size: 32, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1688, file: !1689, line: 124, baseType: !556, size: 32, offset: 160)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1688, file: !1689, line: 125, baseType: !564, size: 32, offset: 192)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1688, file: !1689, line: 126, baseType: !556, size: 32, offset: 224)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1688, file: !1689, line: 127, baseType: !564, size: 32, offset: 256)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1688, file: !1689, line: 128, baseType: !7, size: 32, offset: 288)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1688, file: !1689, line: 129, baseType: !1702, size: 64, offset: 320)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1703, line: 26, baseType: !1704)
!1703 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1703, line: 24, size: 64, elements: !1705)
!1705 = !{!1706}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1704, file: !1703, line: 25, baseType: !1707, size: 64)
!1707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 64, elements: !256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1688, file: !1689, line: 130, baseType: !1702, size: 64, offset: 384)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1688, file: !1689, line: 131, baseType: !1702, size: 64, offset: 448)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1688, file: !1689, line: 132, baseType: !1702, size: 64, offset: 512)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1688, file: !1689, line: 133, baseType: !1702, size: 64, offset: 576)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1688, file: !1689, line: 135, baseType: !548, size: 8, offset: 640)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1688, file: !1689, line: 137, baseType: !1714, size: 64, offset: 704)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1716, line: 189, size: 1664, elements: !1717)
!1716 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1717 = !{!1718, !1719, !1722, !1727, !1728, !1731, !1732, !1737, !1738, !1739, !1740, !1742, !1743, !1744, !1745, !1746, !1784, !1805}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1715, file: !1716, line: 190, baseType: !288, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1715, file: !1716, line: 191, baseType: !1720, size: 32, offset: 32)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1716, line: 28, baseType: !1721)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !249, line: 98, baseType: !1583)
!1722 = !DIDerivedType(tag: DW_TAG_member, scope: !1715, file: !1716, line: 192, baseType: !1723, size: 192, offset: 64)
!1723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1715, file: !1716, line: 192, size: 192, elements: !1724)
!1724 = !{!1725, !1726}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1723, file: !1716, line: 193, baseType: !300, size: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1723, file: !1716, line: 194, baseType: !875, size: 192, align: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1715, file: !1716, line: 199, baseType: !882, size: 256, offset: 256)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1715, file: !1716, line: 200, baseType: !1729, size: 64, offset: 512)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1716, line: 200, flags: DIFlagFwdDecl)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1715, file: !1716, line: 201, baseType: !258, size: 64, offset: 576)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1715, file: !1716, line: 202, baseType: !1733, size: 64, offset: 640)
!1733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1715, file: !1716, line: 202, size: 64, elements: !1734)
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1733, file: !1716, line: 203, baseType: !658, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1733, file: !1716, line: 204, baseType: !658, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1715, file: !1716, line: 206, baseType: !658, size: 64, offset: 704)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1715, file: !1716, line: 207, baseType: !556, size: 32, offset: 768)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1715, file: !1716, line: 208, baseType: !564, size: 32, offset: 800)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1715, file: !1716, line: 209, baseType: !1741, size: 32, offset: 832)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1716, line: 31, baseType: !678)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1715, file: !1716, line: 210, baseType: !262, size: 16, offset: 864)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1715, file: !1716, line: 211, baseType: !262, size: 16, offset: 880)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1715, file: !1716, line: 215, baseType: !255, size: 16, offset: 896)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1715, file: !1716, line: 222, baseType: !265, size: 64, offset: 960)
!1746 = !DIDerivedType(tag: DW_TAG_member, scope: !1715, file: !1716, line: 239, baseType: !1747, size: 320, offset: 1024)
!1747 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1715, file: !1716, line: 239, size: 320, elements: !1748)
!1748 = !{!1749, !1776}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1747, file: !1716, line: 240, baseType: !1750, size: 320)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1716, line: 108, size: 320, elements: !1751)
!1751 = !{!1752, !1753, !1765, !1768, !1775}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1750, file: !1716, line: 110, baseType: !265, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, scope: !1750, file: !1716, line: 111, baseType: !1754, size: 64, offset: 64)
!1754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1750, file: !1716, line: 111, size: 64, elements: !1755)
!1755 = !{!1756, !1764}
!1756 = !DIDerivedType(tag: DW_TAG_member, scope: !1754, file: !1716, line: 112, baseType: !1757, size: 64)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1754, file: !1716, line: 112, size: 64, elements: !1758)
!1758 = !{!1759, !1760}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1757, file: !1716, line: 114, baseType: !260, size: 16)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1757, file: !1716, line: 115, baseType: !1761, size: 48, offset: 16)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 48, elements: !1762)
!1762 = !{!1763}
!1763 = !DISubrange(count: 6)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1754, file: !1716, line: 121, baseType: !265, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1750, file: !1716, line: 123, baseType: !1766, size: 64, offset: 128)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1716, line: 96, flags: DIFlagFwdDecl)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1750, file: !1716, line: 124, baseType: !1769, size: 64, offset: 192)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1716, line: 102, size: 192, elements: !1771)
!1771 = !{!1772, !1773, !1774}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1770, file: !1716, line: 103, baseType: !490, size: 128, align: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1770, file: !1716, line: 104, baseType: !288, size: 32, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1770, file: !1716, line: 105, baseType: !314, size: 8, offset: 160)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1750, file: !1716, line: 125, baseType: !324, size: 64, offset: 256)
!1776 = !DIDerivedType(tag: DW_TAG_member, scope: !1747, file: !1716, line: 241, baseType: !1777, size: 320)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1747, file: !1716, line: 241, size: 320, elements: !1778)
!1778 = !{!1779, !1780, !1781, !1782, !1783}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1777, file: !1716, line: 242, baseType: !265, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1777, file: !1716, line: 243, baseType: !265, size: 64, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1777, file: !1716, line: 244, baseType: !1766, size: 64, offset: 128)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1777, file: !1716, line: 245, baseType: !1769, size: 64, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1777, file: !1716, line: 246, baseType: !267, size: 64, offset: 256)
!1784 = !DIDerivedType(tag: DW_TAG_member, scope: !1715, file: !1716, line: 254, baseType: !1785, size: 256, offset: 1344)
!1785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1715, file: !1716, line: 254, size: 256, elements: !1786)
!1786 = !{!1787, !1793}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1785, file: !1716, line: 255, baseType: !1788, size: 256)
!1788 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1716, line: 128, size: 256, elements: !1789)
!1789 = !{!1790, !1791}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1788, file: !1716, line: 129, baseType: !258, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1788, file: !1716, line: 130, baseType: !1792, size: 256)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 256, elements: !1308)
!1793 = !DIDerivedType(tag: DW_TAG_member, scope: !1785, file: !1716, line: 256, baseType: !1794, size: 256)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1785, file: !1716, line: 256, size: 256, elements: !1795)
!1795 = !{!1796, !1797}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1794, file: !1716, line: 258, baseType: !300, size: 128)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1794, file: !1716, line: 259, baseType: !1798, size: 128, offset: 128)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1799, line: 22, size: 128, elements: !1800)
!1799 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1800 = !{!1801, !1804}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1798, file: !1799, line: 23, baseType: !1802, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1799, line: 23, flags: DIFlagFwdDecl)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1798, file: !1799, line: 24, baseType: !265, size: 64, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1715, file: !1716, line: 274, baseType: !1806, size: 64, offset: 1600)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1716, line: 170, size: 192, elements: !1808)
!1808 = !{!1809, !1818, !1819}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1807, file: !1716, line: 171, baseType: !1810, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1716, line: 165, baseType: !1811)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!130, !1714, !1814, !1816, !1714}
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1767)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1788)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1807, file: !1716, line: 172, baseType: !1714, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1807, file: !1716, line: 173, baseType: !1766, size: 64, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1688, file: !1689, line: 138, baseType: !1714, size: 64, offset: 768)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1688, file: !1689, line: 139, baseType: !1714, size: 64, offset: 832)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1688, file: !1689, line: 140, baseType: !1714, size: 64, offset: 896)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1688, file: !1689, line: 145, baseType: !1824, size: 64, offset: 960)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1826, line: 13, size: 896, elements: !1827)
!1826 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1827 = !{!1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1825, file: !1826, line: 14, baseType: !288, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1825, file: !1826, line: 15, baseType: !293, size: 32, offset: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1825, file: !1826, line: 16, baseType: !293, size: 32, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1825, file: !1826, line: 21, baseType: !886, size: 64, offset: 128)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1825, file: !1826, line: 27, baseType: !265, size: 64, offset: 192)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1825, file: !1826, line: 28, baseType: !265, size: 64, offset: 256)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1825, file: !1826, line: 29, baseType: !886, size: 64, offset: 320)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1825, file: !1826, line: 32, baseType: !758, size: 128, offset: 384)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1825, file: !1826, line: 33, baseType: !556, size: 32, offset: 512)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1825, file: !1826, line: 37, baseType: !886, size: 64, offset: 576)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1825, file: !1826, line: 44, baseType: !1839, size: 256, offset: 640)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1840, line: 15, size: 256, elements: !1841)
!1840 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1841 = !{!1842, !1843, !1844, !1845, !1846, !1847, !1848}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1839, file: !1840, line: 16, baseType: !895)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1839, file: !1840, line: 18, baseType: !130, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1839, file: !1840, line: 19, baseType: !130, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1839, file: !1840, line: 20, baseType: !130, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1839, file: !1840, line: 21, baseType: !130, size: 32, offset: 96)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1839, file: !1840, line: 22, baseType: !265, size: 64, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1839, file: !1840, line: 23, baseType: !265, size: 64, offset: 192)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1688, file: !1689, line: 146, baseType: !1850, size: 64, offset: 1024)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !557, line: 18, flags: DIFlagFwdDecl)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1688, file: !1689, line: 147, baseType: !1853, size: 64, offset: 1088)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1689, line: 25, size: 64, elements: !1855)
!1855 = !{!1856, !1857, !1858}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1854, file: !1689, line: 26, baseType: !293, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1854, file: !1689, line: 27, baseType: !130, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1854, file: !1689, line: 28, baseType: !1859, offset: 64)
!1859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !564, elements: !1860)
!1860 = !{!1861}
!1861 = !DISubrange(count: 0)
!1862 = !DIDerivedType(tag: DW_TAG_member, scope: !1688, file: !1689, line: 149, baseType: !1863, size: 128, offset: 1152)
!1863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1688, file: !1689, line: 149, size: 128, elements: !1864)
!1864 = !{!1865, !1866}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1863, file: !1689, line: 150, baseType: !130, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1863, file: !1689, line: 151, baseType: !490, size: 128, align: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1367, file: !1014, line: 926, baseType: !1686, size: 64, offset: 8576)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1367, file: !1014, line: 929, baseType: !1686, size: 64, offset: 8640)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1367, file: !1014, line: 933, baseType: !1714, size: 64, offset: 8704)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1367, file: !1014, line: 943, baseType: !1871, size: 128, offset: 8768)
!1871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 128, elements: !1872)
!1872 = !{!1873}
!1873 = !DISubrange(count: 16)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1367, file: !1014, line: 945, baseType: !1875, size: 64, offset: 8896)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1014, line: 49, flags: DIFlagFwdDecl)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1367, file: !1014, line: 956, baseType: !1878, size: 64, offset: 8960)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1014, line: 45, flags: DIFlagFwdDecl)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1367, file: !1014, line: 959, baseType: !1881, size: 64, offset: 9024)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1014, line: 959, flags: DIFlagFwdDecl)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1367, file: !1014, line: 962, baseType: !1884, size: 64, offset: 9088)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1014, line: 66, flags: DIFlagFwdDecl)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1367, file: !1014, line: 966, baseType: !1887, size: 64, offset: 9152)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1014, line: 50, flags: DIFlagFwdDecl)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1367, file: !1014, line: 969, baseType: !1890, size: 64, offset: 9216)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1892, line: 82, size: 7296, elements: !1893)
!1892 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1893 = !{!1894, !1895, !1896, !1897, !1898, !1899, !1900, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1929, !1938, !1939, !1941, !1942, !1943, !1946, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1976, !1977, !1984, !1985, !1986, !1987, !1988, !1989}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1891, file: !1892, line: 83, baseType: !288, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1891, file: !1892, line: 84, baseType: !293, size: 32, offset: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1891, file: !1892, line: 85, baseType: !130, size: 32, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1891, file: !1892, line: 86, baseType: !300, size: 128, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1891, file: !1892, line: 88, baseType: !1620, size: 128, offset: 256)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1891, file: !1892, line: 91, baseType: !1366, size: 64, offset: 384)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1891, file: !1892, line: 94, baseType: !1901, size: 192, offset: 448)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1902, line: 30, size: 192, elements: !1903)
!1902 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1903 = !{!1904, !1905}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1901, file: !1902, line: 31, baseType: !300, size: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1901, file: !1902, line: 32, baseType: !1906, size: 64, offset: 128)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1907, line: 25, baseType: !1908)
!1907 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1907, line: 23, size: 64, elements: !1909)
!1909 = !{!1910}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1908, file: !1907, line: 24, baseType: !333, size: 64)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1891, file: !1892, line: 97, baseType: !754, size: 64, offset: 640)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1891, file: !1892, line: 100, baseType: !130, size: 32, offset: 704)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1891, file: !1892, line: 106, baseType: !130, size: 32, offset: 736)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1891, file: !1892, line: 107, baseType: !1366, size: 64, offset: 768)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1891, file: !1892, line: 110, baseType: !130, size: 32, offset: 832)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1891, file: !1892, line: 111, baseType: !7, size: 32, offset: 864)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1891, file: !1892, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1891, file: !1892, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1891, file: !1892, line: 128, baseType: !130, size: 32, offset: 928)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1891, file: !1892, line: 129, baseType: !300, size: 128, offset: 960)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1891, file: !1892, line: 132, baseType: !1435, size: 512, offset: 1088)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1891, file: !1892, line: 133, baseType: !1443, size: 64, offset: 1600)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1891, file: !1892, line: 140, baseType: !1924, size: 256, offset: 1664)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1925, size: 256, elements: !256)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1892, line: 38, size: 128, elements: !1926)
!1926 = !{!1927, !1928}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1925, file: !1892, line: 39, baseType: !542, size: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1925, file: !1892, line: 40, baseType: !542, size: 64, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1891, file: !1892, line: 146, baseType: !1930, size: 192, offset: 1920)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1892, line: 66, size: 192, elements: !1931)
!1931 = !{!1932}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1930, file: !1892, line: 67, baseType: !1933, size: 192)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1892, line: 47, size: 192, elements: !1934)
!1934 = !{!1935, !1936, !1937}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1933, file: !1892, line: 48, baseType: !888, size: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1933, file: !1892, line: 49, baseType: !888, size: 64, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1933, file: !1892, line: 50, baseType: !888, size: 64, offset: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1891, file: !1892, line: 150, baseType: !1669, size: 640, offset: 2112)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1891, file: !1892, line: 153, baseType: !1940, size: 256, offset: 2752)
!1940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1610, size: 256, elements: !1308)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1891, file: !1892, line: 159, baseType: !1610, size: 64, offset: 3008)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1891, file: !1892, line: 162, baseType: !130, size: 32, offset: 3072)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1891, file: !1892, line: 164, baseType: !1944, size: 64, offset: 3136)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1892, line: 164, flags: DIFlagFwdDecl)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1891, file: !1892, line: 175, baseType: !1947, size: 32, offset: 3200)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !513, line: 805, baseType: !1948)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 798, size: 32, elements: !1949)
!1949 = !{!1950, !1951}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1948, file: !513, line: 803, baseType: !512, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1948, file: !513, line: 804, baseType: !362, offset: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1891, file: !1892, line: 176, baseType: !542, size: 64, offset: 3264)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1891, file: !1892, line: 176, baseType: !542, size: 64, offset: 3328)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1891, file: !1892, line: 176, baseType: !542, size: 64, offset: 3392)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1891, file: !1892, line: 176, baseType: !542, size: 64, offset: 3456)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1891, file: !1892, line: 177, baseType: !542, size: 64, offset: 3520)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1891, file: !1892, line: 178, baseType: !542, size: 64, offset: 3584)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1891, file: !1892, line: 179, baseType: !1657, size: 128, offset: 3648)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1891, file: !1892, line: 180, baseType: !265, size: 64, offset: 3776)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1891, file: !1892, line: 180, baseType: !265, size: 64, offset: 3840)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1891, file: !1892, line: 180, baseType: !265, size: 64, offset: 3904)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1891, file: !1892, line: 180, baseType: !265, size: 64, offset: 3968)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1891, file: !1892, line: 181, baseType: !265, size: 64, offset: 4032)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1891, file: !1892, line: 181, baseType: !265, size: 64, offset: 4096)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1891, file: !1892, line: 181, baseType: !265, size: 64, offset: 4160)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1891, file: !1892, line: 181, baseType: !265, size: 64, offset: 4224)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1891, file: !1892, line: 182, baseType: !265, size: 64, offset: 4288)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1891, file: !1892, line: 182, baseType: !265, size: 64, offset: 4352)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1891, file: !1892, line: 182, baseType: !265, size: 64, offset: 4416)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1891, file: !1892, line: 182, baseType: !265, size: 64, offset: 4480)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1891, file: !1892, line: 183, baseType: !265, size: 64, offset: 4544)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1891, file: !1892, line: 183, baseType: !265, size: 64, offset: 4608)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1891, file: !1892, line: 184, baseType: !1974, offset: 4672)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1975, line: 12, elements: !376)
!1975 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1891, file: !1892, line: 192, baseType: !544, size: 64, offset: 4672)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1891, file: !1892, line: 203, baseType: !1978, size: 2048, offset: 4736)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1979, size: 2048, elements: !1872)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1980, line: 43, size: 128, elements: !1981)
!1980 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1981 = !{!1982, !1983}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1979, file: !1980, line: 44, baseType: !449, size: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1979, file: !1980, line: 45, baseType: !449, size: 64, offset: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1891, file: !1892, line: 220, baseType: !314, size: 8, offset: 6784)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1891, file: !1892, line: 221, baseType: !255, size: 16, offset: 6800)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1891, file: !1892, line: 222, baseType: !255, size: 16, offset: 6816)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1891, file: !1892, line: 224, baseType: !1127, size: 64, offset: 6848)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1891, file: !1892, line: 227, baseType: !1326, size: 192, offset: 6912)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1891, file: !1892, line: 233, baseType: !1326, size: 192, offset: 7104)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1367, file: !1014, line: 970, baseType: !1991, size: 64, offset: 9280)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1892, line: 20, size: 16576, elements: !1993)
!1993 = !{!1994, !1995, !1996, !1997}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1992, file: !1892, line: 21, baseType: !362)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1992, file: !1892, line: 22, baseType: !288, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1992, file: !1892, line: 23, baseType: !1620, size: 128, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1992, file: !1892, line: 24, baseType: !1998, size: 16384, offset: 192)
!1998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1999, size: 16384, elements: !407)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1902, line: 49, size: 256, elements: !2000)
!2000 = !{!2001}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1999, file: !1902, line: 50, baseType: !2002, size: 256)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1902, line: 35, size: 256, elements: !2003)
!2003 = !{!2004, !2011, !2012, !2018}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2002, file: !1902, line: 37, baseType: !2005, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2006, line: 19, baseType: !2007)
!2006 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2006, line: 18, baseType: !2009)
!2009 = !DISubroutineType(types: !2010)
!2010 = !{null, !130}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2002, file: !1902, line: 38, baseType: !265, size: 64, offset: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2002, file: !1902, line: 44, baseType: !2013, size: 64, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2006, line: 22, baseType: !2014)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2006, line: 21, baseType: !2016)
!2016 = !DISubroutineType(types: !2017)
!2017 = !{null}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2002, file: !1902, line: 46, baseType: !1906, size: 64, offset: 192)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1367, file: !1014, line: 971, baseType: !1906, size: 64, offset: 9344)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1367, file: !1014, line: 972, baseType: !1906, size: 64, offset: 9408)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1367, file: !1014, line: 974, baseType: !1906, size: 64, offset: 9472)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1367, file: !1014, line: 975, baseType: !1901, size: 192, offset: 9536)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1367, file: !1014, line: 976, baseType: !265, size: 64, offset: 9728)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1367, file: !1014, line: 977, baseType: !447, size: 64, offset: 9792)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1367, file: !1014, line: 978, baseType: !7, size: 32, offset: 9856)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1367, file: !1014, line: 980, baseType: !493, size: 64, offset: 9920)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1367, file: !1014, line: 989, baseType: !2028, size: 128, offset: 9984)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2029, line: 35, size: 128, elements: !2030)
!2029 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2030 = !{!2031, !2032, !2033}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2028, file: !2029, line: 36, baseType: !130, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2028, file: !2029, line: 37, baseType: !293, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2028, file: !2029, line: 38, baseType: !2034, size: 64, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2029, line: 23, flags: DIFlagFwdDecl)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1367, file: !1014, line: 992, baseType: !542, size: 64, offset: 10112)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1367, file: !1014, line: 993, baseType: !542, size: 64, offset: 10176)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1367, file: !1014, line: 996, baseType: !362, offset: 10240)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1367, file: !1014, line: 999, baseType: !895, offset: 10240)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1367, file: !1014, line: 1001, baseType: !2041, size: 64, offset: 10240)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1014, line: 636, size: 64, elements: !2042)
!2042 = !{!2043}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2041, file: !1014, line: 637, baseType: !2044, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1367, file: !1014, line: 1005, baseType: !867, size: 128, offset: 10304)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1367, file: !1014, line: 1007, baseType: !1366, size: 64, offset: 10432)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1367, file: !1014, line: 1009, baseType: !2048, size: 64, offset: 10496)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1014, line: 1009, flags: DIFlagFwdDecl)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1367, file: !1014, line: 1043, baseType: !258, size: 64, offset: 10560)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1367, file: !1014, line: 1046, baseType: !2052, size: 64, offset: 10624)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1014, line: 41, flags: DIFlagFwdDecl)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1367, file: !1014, line: 1050, baseType: !2055, size: 64, offset: 10688)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1014, line: 42, flags: DIFlagFwdDecl)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1367, file: !1014, line: 1054, baseType: !2058, size: 64, offset: 10752)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1014, line: 55, flags: DIFlagFwdDecl)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1367, file: !1014, line: 1056, baseType: !2061, size: 64, offset: 10816)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1014, line: 40, flags: DIFlagFwdDecl)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1367, file: !1014, line: 1058, baseType: !2064, size: 64, offset: 10880)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2066, line: 99, size: 704, elements: !2067)
!2066 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2067 = !{!2068, !2069, !2070, !2071, !2072, !2073, !2074, !2093, !2094}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2065, file: !2066, line: 100, baseType: !886, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2065, file: !2066, line: 101, baseType: !293, size: 32, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2065, file: !2066, line: 102, baseType: !293, size: 32, offset: 96)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2065, file: !2066, line: 105, baseType: !362, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2065, file: !2066, line: 107, baseType: !262, size: 16, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2065, file: !2066, line: 109, baseType: !858, size: 128, offset: 192)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2065, file: !2066, line: 110, baseType: !2075, size: 64, offset: 320)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2066, line: 73, size: 448, elements: !2077)
!2077 = !{!2078, !2081, !2082, !2087, !2092}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2076, file: !2066, line: 74, baseType: !2079, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2066, line: 74, flags: DIFlagFwdDecl)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2076, file: !2066, line: 75, baseType: !2064, size: 64, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, scope: !2076, file: !2066, line: 83, baseType: !2083, size: 128, offset: 128)
!2083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2076, file: !2066, line: 83, size: 128, elements: !2084)
!2084 = !{!2085, !2086}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2083, file: !2066, line: 84, baseType: !300, size: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2083, file: !2066, line: 85, baseType: !1088, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !2076, file: !2066, line: 87, baseType: !2088, size: 128, offset: 256)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2076, file: !2066, line: 87, size: 128, elements: !2089)
!2089 = !{!2090, !2091}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2088, file: !2066, line: 88, baseType: !758, size: 128)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2088, file: !2066, line: 89, baseType: !490, size: 128, align: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2076, file: !2066, line: 92, baseType: !7, size: 32, offset: 384)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2065, file: !2066, line: 111, baseType: !754, size: 64, offset: 384)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2065, file: !2066, line: 113, baseType: !2095, size: 256, offset: 448)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2096, line: 102, size: 256, elements: !2097)
!2096 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2097 = !{!2098, !2099, !2100}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2095, file: !2096, line: 103, baseType: !886, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2095, file: !2096, line: 104, baseType: !300, size: 128, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2095, file: !2096, line: 105, baseType: !2101, size: 64, offset: 192)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2096, line: 21, baseType: !2102)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DISubroutineType(types: !2104)
!2104 = !{null, !2105}
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1367, file: !1014, line: 1061, baseType: !2107, size: 64, offset: 10944)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1014, line: 43, flags: DIFlagFwdDecl)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1367, file: !1014, line: 1064, baseType: !265, size: 64, offset: 11008)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1367, file: !1014, line: 1065, baseType: !2111, size: 64, offset: 11072)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1902, line: 14, baseType: !2113)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1902, line: 12, size: 384, elements: !2114)
!2114 = !{!2115}
!2115 = !DIDerivedType(tag: DW_TAG_member, scope: !2113, file: !1902, line: 13, baseType: !2116, size: 384)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2113, file: !1902, line: 13, size: 384, elements: !2117)
!2117 = !{!2118, !2119, !2120, !2121}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2116, file: !1902, line: 13, baseType: !130, size: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2116, file: !1902, line: 13, baseType: !130, size: 32, offset: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2116, file: !1902, line: 13, baseType: !130, size: 32, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2116, file: !1902, line: 13, baseType: !2122, size: 256, offset: 128)
!2122 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2123, line: 32, size: 256, elements: !2124)
!2123 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2124 = !{!2125, !2130, !2143, !2149, !2158, !2178, !2183}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2122, file: !2123, line: 37, baseType: !2126, size: 64)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2122, file: !2123, line: 34, size: 64, elements: !2127)
!2127 = !{!2128, !2129}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2126, file: !2123, line: 35, baseType: !1599, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2126, file: !2123, line: 36, baseType: !562, size: 32, offset: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2122, file: !2123, line: 45, baseType: !2131, size: 192)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2122, file: !2123, line: 40, size: 192, elements: !2132)
!2132 = !{!2133, !2135, !2136, !2142}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2131, file: !2123, line: 41, baseType: !2134, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !435, line: 95, baseType: !130)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2131, file: !2123, line: 42, baseType: !130, size: 32, offset: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2131, file: !2123, line: 43, baseType: !2137, size: 64, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2123, line: 11, baseType: !2138)
!2138 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2123, line: 8, size: 64, elements: !2139)
!2139 = !{!2140, !2141}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2138, file: !2123, line: 9, baseType: !130, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2138, file: !2123, line: 10, baseType: !258, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2131, file: !2123, line: 44, baseType: !130, size: 32, offset: 128)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2122, file: !2123, line: 52, baseType: !2144, size: 128)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2122, file: !2123, line: 48, size: 128, elements: !2145)
!2145 = !{!2146, !2147, !2148}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2144, file: !2123, line: 49, baseType: !1599, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2144, file: !2123, line: 50, baseType: !562, size: 32, offset: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2144, file: !2123, line: 51, baseType: !2137, size: 64, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2122, file: !2123, line: 61, baseType: !2150, size: 256)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2122, file: !2123, line: 55, size: 256, elements: !2151)
!2151 = !{!2152, !2153, !2154, !2155, !2157}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2150, file: !2123, line: 56, baseType: !1599, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2150, file: !2123, line: 57, baseType: !562, size: 32, offset: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2150, file: !2123, line: 58, baseType: !130, size: 32, offset: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2150, file: !2123, line: 59, baseType: !2156, size: 64, offset: 128)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !435, line: 94, baseType: !436)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2150, file: !2123, line: 60, baseType: !2156, size: 64, offset: 192)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2122, file: !2123, line: 95, baseType: !2159, size: 256)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2122, file: !2123, line: 64, size: 256, elements: !2160)
!2160 = !{!2161, !2162}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2159, file: !2123, line: 65, baseType: !258, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, scope: !2159, file: !2123, line: 77, baseType: !2163, size: 192, offset: 64)
!2163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2159, file: !2123, line: 77, size: 192, elements: !2164)
!2164 = !{!2165, !2166, !2173}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2163, file: !2123, line: 82, baseType: !255, size: 16)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2163, file: !2123, line: 88, baseType: !2167, size: 192)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2163, file: !2123, line: 84, size: 192, elements: !2168)
!2168 = !{!2169, !2171, !2172}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2167, file: !2123, line: 85, baseType: !2170, size: 64)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 64, elements: !1473)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2167, file: !2123, line: 86, baseType: !258, size: 64, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2167, file: !2123, line: 87, baseType: !258, size: 64, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2163, file: !2123, line: 93, baseType: !2174, size: 96)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2163, file: !2123, line: 90, size: 96, elements: !2175)
!2175 = !{!2176, !2177}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2174, file: !2123, line: 91, baseType: !2170, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2174, file: !2123, line: 92, baseType: !246, size: 32, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2122, file: !2123, line: 101, baseType: !2179, size: 128)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2122, file: !2123, line: 98, size: 128, elements: !2180)
!2180 = !{!2181, !2182}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2179, file: !2123, line: 99, baseType: !266, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2179, file: !2123, line: 100, baseType: !130, size: 32, offset: 64)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2122, file: !2123, line: 108, baseType: !2184, size: 128)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2122, file: !2123, line: 104, size: 128, elements: !2185)
!2185 = !{!2186, !2187, !2188}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2184, file: !2123, line: 105, baseType: !258, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2184, file: !2123, line: 106, baseType: !130, size: 32, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2184, file: !2123, line: 107, baseType: !7, size: 32, offset: 96)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1367, file: !1014, line: 1067, baseType: !1974, offset: 11136)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1367, file: !1014, line: 1099, baseType: !2191, size: 64, offset: 11136)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1014, line: 56, flags: DIFlagFwdDecl)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1367, file: !1014, line: 1103, baseType: !300, size: 128, offset: 11200)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1367, file: !1014, line: 1104, baseType: !2195, size: 64, offset: 11328)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1014, line: 46, flags: DIFlagFwdDecl)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1367, file: !1014, line: 1105, baseType: !1326, size: 192, offset: 11392)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1367, file: !1014, line: 1106, baseType: !7, size: 32, offset: 11584)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1367, file: !1014, line: 1109, baseType: !2200, size: 128, offset: 11648)
!2200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2201, size: 128, elements: !256)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2202 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1014, line: 51, flags: DIFlagFwdDecl)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1367, file: !1014, line: 1110, baseType: !1326, size: 192, offset: 11776)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1367, file: !1014, line: 1111, baseType: !300, size: 128, offset: 11968)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1367, file: !1014, line: 1173, baseType: !2206, size: 64, offset: 12096)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2208, line: 62, size: 256, align: 256, elements: !2209)
!2208 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2209 = !{!2210, !2211, !2212, !2217}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2207, file: !2208, line: 75, baseType: !246, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2207, file: !2208, line: 90, baseType: !246, size: 32, offset: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2207, file: !2208, line: 124, baseType: !2213, size: 64, offset: 64)
!2213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2207, file: !2208, line: 109, size: 64, elements: !2214)
!2214 = !{!2215, !2216}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2213, file: !2208, line: 110, baseType: !543, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2213, file: !2208, line: 112, baseType: !543, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2207, file: !2208, line: 144, baseType: !246, size: 32, offset: 128)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1367, file: !1014, line: 1174, baseType: !244, size: 32, offset: 12160)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1367, file: !1014, line: 1179, baseType: !265, size: 64, offset: 12224)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1367, file: !1014, line: 1182, baseType: !2221, size: 128, offset: 12288)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1304, line: 76, size: 128, elements: !2222)
!2222 = !{!2223, !2228, !2229}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2221, file: !1304, line: 85, baseType: !2224, size: 64)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2225, line: 7, size: 64, elements: !2226)
!2225 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2226 = !{!2227}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2224, file: !2225, line: 12, baseType: !1510, size: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2221, file: !1304, line: 88, baseType: !314, size: 8, offset: 64)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2221, file: !1304, line: 95, baseType: !314, size: 8, offset: 72)
!2230 = !DIDerivedType(tag: DW_TAG_member, scope: !1367, file: !1014, line: 1184, baseType: !2231, size: 128, offset: 12416)
!2231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1367, file: !1014, line: 1184, size: 128, elements: !2232)
!2232 = !{!2233, !2234}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2231, file: !1014, line: 1185, baseType: !288, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2231, file: !1014, line: 1186, baseType: !490, size: 128, align: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1367, file: !1014, line: 1190, baseType: !1012, size: 64, offset: 12544)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1367, file: !1014, line: 1192, baseType: !2237, size: 128, offset: 12608)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1304, line: 64, size: 128, elements: !2238)
!2238 = !{!2239, !2240, !2241}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2237, file: !1304, line: 65, baseType: !840, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2237, file: !1304, line: 67, baseType: !246, size: 32, offset: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2237, file: !1304, line: 68, baseType: !246, size: 32, offset: 96)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1367, file: !1014, line: 1206, baseType: !130, size: 32, offset: 12736)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1367, file: !1014, line: 1207, baseType: !130, size: 32, offset: 12768)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1367, file: !1014, line: 1209, baseType: !265, size: 64, offset: 12800)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1367, file: !1014, line: 1219, baseType: !542, size: 64, offset: 12864)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1367, file: !1014, line: 1220, baseType: !542, size: 64, offset: 12928)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1367, file: !1014, line: 1317, baseType: !130, size: 32, offset: 12992)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1367, file: !1014, line: 1319, baseType: !1366, size: 64, offset: 13056)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1367, file: !1014, line: 1322, baseType: !2250, size: 64, offset: 13120)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2252, line: 56, size: 512, elements: !2253)
!2252 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2253 = !{!2254, !2255, !2256, !2257, !2258, !2259, !2260, !2262}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2251, file: !2252, line: 57, baseType: !2250, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2251, file: !2252, line: 58, baseType: !258, size: 64, offset: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2251, file: !2252, line: 59, baseType: !265, size: 64, offset: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2251, file: !2252, line: 60, baseType: !265, size: 64, offset: 192)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2251, file: !2252, line: 61, baseType: !935, size: 64, offset: 256)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2251, file: !2252, line: 62, baseType: !7, size: 32, offset: 320)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2251, file: !2252, line: 63, baseType: !2261, size: 64, offset: 384)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !249, line: 153, baseType: !542)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2251, file: !2252, line: 64, baseType: !2263, size: 64, offset: 448)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1367, file: !1014, line: 1326, baseType: !288, size: 32, offset: 13184)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1367, file: !1014, line: 1342, baseType: !258, size: 64, offset: 13248)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1367, file: !1014, line: 1343, baseType: !543, size: 64, offset: 13312)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1367, file: !1014, line: 1344, baseType: !542, size: 64, offset: 13376)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1367, file: !1014, line: 1345, baseType: !543, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1367, file: !1014, line: 1346, baseType: !543, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1367, file: !1014, line: 1347, baseType: !543, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1367, file: !1014, line: 1348, baseType: !490, size: 128, align: 64, offset: 13504)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1367, file: !1014, line: 1358, baseType: !2274, size: 34816, offset: 13824)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2275, line: 485, size: 34816, elements: !2276)
!2275 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2276 = !{!2277, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2306, !2307, !2308, !2309, !2310, !2311, !2314, !2315, !2316}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2274, file: !2275, line: 487, baseType: !2278, size: 192)
!2278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2279, size: 192, elements: !403)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2280, line: 16, size: 64, elements: !2281)
!2280 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2281 = !{!2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2279, file: !2280, line: 17, baseType: !260, size: 16)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2279, file: !2280, line: 18, baseType: !260, size: 16, offset: 16)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2279, file: !2280, line: 19, baseType: !260, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2279, file: !2280, line: 19, baseType: !260, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2279, file: !2280, line: 19, baseType: !260, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2279, file: !2280, line: 19, baseType: !260, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2279, file: !2280, line: 19, baseType: !260, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2279, file: !2280, line: 20, baseType: !260, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2279, file: !2280, line: 20, baseType: !260, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2279, file: !2280, line: 20, baseType: !260, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2279, file: !2280, line: 20, baseType: !260, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2279, file: !2280, line: 20, baseType: !260, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2279, file: !2280, line: 20, baseType: !260, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2274, file: !2275, line: 491, baseType: !265, size: 64, offset: 192)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2274, file: !2275, line: 495, baseType: !262, size: 16, offset: 256)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2274, file: !2275, line: 496, baseType: !262, size: 16, offset: 272)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2274, file: !2275, line: 497, baseType: !262, size: 16, offset: 288)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2274, file: !2275, line: 498, baseType: !262, size: 16, offset: 304)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2274, file: !2275, line: 502, baseType: !265, size: 64, offset: 320)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2274, file: !2275, line: 503, baseType: !265, size: 64, offset: 384)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2274, file: !2275, line: 514, baseType: !2303, size: 256, offset: 448)
!2303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2304, size: 256, elements: !1308)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2275, line: 483, flags: DIFlagFwdDecl)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2274, file: !2275, line: 516, baseType: !265, size: 64, offset: 704)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2274, file: !2275, line: 518, baseType: !265, size: 64, offset: 768)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2274, file: !2275, line: 520, baseType: !265, size: 64, offset: 832)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2274, file: !2275, line: 521, baseType: !265, size: 64, offset: 896)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2274, file: !2275, line: 522, baseType: !265, size: 64, offset: 960)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2274, file: !2275, line: 528, baseType: !2312, size: 64, offset: 1024)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2275, line: 10, flags: DIFlagFwdDecl)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2274, file: !2275, line: 535, baseType: !265, size: 64, offset: 1088)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2274, file: !2275, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2274, file: !2275, line: 540, baseType: !2317, size: 33280, offset: 1536)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2318, line: 317, size: 33280, elements: !2319)
!2318 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2319 = !{!2320, !2321, !2322}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2317, file: !2318, line: 330, baseType: !7, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2317, file: !2318, line: 337, baseType: !265, size: 64, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2317, file: !2318, line: 348, baseType: !2323, size: 32768, offset: 512)
!2323 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2318, line: 304, size: 32768, elements: !2324)
!2324 = !{!2325, !2340, !2379, !2429, !2442}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2323, file: !2318, line: 305, baseType: !2326, size: 896)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2318, line: 12, size: 896, elements: !2327)
!2327 = !{!2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2339}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2326, file: !2318, line: 13, baseType: !244, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2326, file: !2318, line: 14, baseType: !244, size: 32, offset: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2326, file: !2318, line: 15, baseType: !244, size: 32, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2326, file: !2318, line: 16, baseType: !244, size: 32, offset: 96)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2326, file: !2318, line: 17, baseType: !244, size: 32, offset: 128)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2326, file: !2318, line: 18, baseType: !244, size: 32, offset: 160)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2326, file: !2318, line: 19, baseType: !244, size: 32, offset: 192)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2326, file: !2318, line: 22, baseType: !2336, size: 640, offset: 224)
!2336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 640, elements: !2337)
!2337 = !{!2338}
!2338 = !DISubrange(count: 20)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2326, file: !2318, line: 25, baseType: !244, size: 32, offset: 864)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2323, file: !2318, line: 306, baseType: !2341, size: 4096, align: 128)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2318, line: 34, size: 4096, align: 128, elements: !2342)
!2342 = !{!2343, !2344, !2345, !2346, !2347, !2362, !2363, !2364, !2368, !2370, !2374}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2341, file: !2318, line: 35, baseType: !260, size: 16)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2341, file: !2318, line: 36, baseType: !260, size: 16, offset: 16)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2341, file: !2318, line: 37, baseType: !260, size: 16, offset: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2341, file: !2318, line: 38, baseType: !260, size: 16, offset: 48)
!2347 = !DIDerivedType(tag: DW_TAG_member, scope: !2341, file: !2318, line: 39, baseType: !2348, size: 128, offset: 64)
!2348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2341, file: !2318, line: 39, size: 128, elements: !2349)
!2349 = !{!2350, !2355}
!2350 = !DIDerivedType(tag: DW_TAG_member, scope: !2348, file: !2318, line: 40, baseType: !2351, size: 128)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2348, file: !2318, line: 40, size: 128, elements: !2352)
!2352 = !{!2353, !2354}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2351, file: !2318, line: 41, baseType: !542, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2351, file: !2318, line: 42, baseType: !542, size: 64, offset: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, scope: !2348, file: !2318, line: 44, baseType: !2356, size: 128)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2348, file: !2318, line: 44, size: 128, elements: !2357)
!2357 = !{!2358, !2359, !2360, !2361}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2356, file: !2318, line: 45, baseType: !244, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2356, file: !2318, line: 46, baseType: !244, size: 32, offset: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2356, file: !2318, line: 47, baseType: !244, size: 32, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2356, file: !2318, line: 48, baseType: !244, size: 32, offset: 96)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2341, file: !2318, line: 51, baseType: !244, size: 32, offset: 192)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2341, file: !2318, line: 52, baseType: !244, size: 32, offset: 224)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2341, file: !2318, line: 55, baseType: !2365, size: 1024, offset: 256)
!2365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 1024, elements: !2366)
!2366 = !{!2367}
!2367 = !DISubrange(count: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2341, file: !2318, line: 58, baseType: !2369, size: 2048, offset: 1280)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 2048, elements: !407)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2341, file: !2318, line: 60, baseType: !2371, size: 384, offset: 3328)
!2371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 384, elements: !2372)
!2372 = !{!2373}
!2373 = !DISubrange(count: 12)
!2374 = !DIDerivedType(tag: DW_TAG_member, scope: !2341, file: !2318, line: 62, baseType: !2375, size: 384, offset: 3712)
!2375 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2341, file: !2318, line: 62, size: 384, elements: !2376)
!2376 = !{!2377, !2378}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2375, file: !2318, line: 63, baseType: !2371, size: 384)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2375, file: !2318, line: 64, baseType: !2371, size: 384)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2323, file: !2318, line: 307, baseType: !2380, size: 1088)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2318, line: 79, size: 1088, elements: !2381)
!2381 = !{!2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2428}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2380, file: !2318, line: 80, baseType: !244, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2380, file: !2318, line: 81, baseType: !244, size: 32, offset: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2380, file: !2318, line: 82, baseType: !244, size: 32, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2380, file: !2318, line: 83, baseType: !244, size: 32, offset: 96)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2380, file: !2318, line: 84, baseType: !244, size: 32, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2380, file: !2318, line: 85, baseType: !244, size: 32, offset: 160)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2380, file: !2318, line: 86, baseType: !244, size: 32, offset: 192)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2380, file: !2318, line: 88, baseType: !2336, size: 640, offset: 224)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2380, file: !2318, line: 89, baseType: !1495, size: 8, offset: 864)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2380, file: !2318, line: 90, baseType: !1495, size: 8, offset: 872)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2380, file: !2318, line: 91, baseType: !1495, size: 8, offset: 880)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2380, file: !2318, line: 92, baseType: !1495, size: 8, offset: 888)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2380, file: !2318, line: 93, baseType: !1495, size: 8, offset: 896)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2380, file: !2318, line: 94, baseType: !1495, size: 8, offset: 904)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2380, file: !2318, line: 95, baseType: !2397, size: 64, offset: 960)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2399, line: 11, size: 128, elements: !2400)
!2399 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2400 = !{!2401, !2402}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2398, file: !2399, line: 12, baseType: !266, size: 64)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2398, file: !2399, line: 13, baseType: !2403, size: 64, offset: 64)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2405, line: 56, size: 1344, elements: !2406)
!2405 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2406 = !{!2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2404, file: !2405, line: 61, baseType: !265, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2404, file: !2405, line: 62, baseType: !265, size: 64, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2404, file: !2405, line: 63, baseType: !265, size: 64, offset: 128)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2404, file: !2405, line: 64, baseType: !265, size: 64, offset: 192)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2404, file: !2405, line: 65, baseType: !265, size: 64, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2404, file: !2405, line: 66, baseType: !265, size: 64, offset: 320)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2404, file: !2405, line: 68, baseType: !265, size: 64, offset: 384)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2404, file: !2405, line: 69, baseType: !265, size: 64, offset: 448)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2404, file: !2405, line: 70, baseType: !265, size: 64, offset: 512)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2404, file: !2405, line: 71, baseType: !265, size: 64, offset: 576)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2404, file: !2405, line: 72, baseType: !265, size: 64, offset: 640)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2404, file: !2405, line: 73, baseType: !265, size: 64, offset: 704)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2404, file: !2405, line: 74, baseType: !265, size: 64, offset: 768)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2404, file: !2405, line: 75, baseType: !265, size: 64, offset: 832)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2404, file: !2405, line: 76, baseType: !265, size: 64, offset: 896)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2404, file: !2405, line: 81, baseType: !265, size: 64, offset: 960)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2404, file: !2405, line: 83, baseType: !265, size: 64, offset: 1024)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2404, file: !2405, line: 84, baseType: !265, size: 64, offset: 1088)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2404, file: !2405, line: 85, baseType: !265, size: 64, offset: 1152)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2404, file: !2405, line: 86, baseType: !265, size: 64, offset: 1216)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2404, file: !2405, line: 87, baseType: !265, size: 64, offset: 1280)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2380, file: !2318, line: 96, baseType: !244, size: 32, offset: 1024)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2323, file: !2318, line: 308, baseType: !2430, size: 4608, align: 512)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2318, line: 289, size: 4608, align: 512, elements: !2431)
!2431 = !{!2432, !2433, !2440}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2430, file: !2318, line: 290, baseType: !2341, size: 4096, align: 128)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2430, file: !2318, line: 291, baseType: !2434, size: 512, offset: 4096)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2318, line: 268, size: 512, elements: !2435)
!2435 = !{!2436, !2437, !2438}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2434, file: !2318, line: 269, baseType: !542, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2434, file: !2318, line: 270, baseType: !542, size: 64, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2434, file: !2318, line: 271, baseType: !2439, size: 384, offset: 128)
!2439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !542, size: 384, elements: !1762)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2430, file: !2318, line: 292, baseType: !2441, offset: 4608)
!2441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1495, elements: !1860)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2323, file: !2318, line: 309, baseType: !2443, size: 32768)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1495, size: 32768, elements: !2444)
!2444 = !{!2445}
!2445 = !DISubrange(count: 4096)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1363, file: !842, line: 378, baseType: !2447, size: 64, offset: 64)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1359, file: !842, line: 384, baseType: !1641, size: 192, offset: 192)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1131, file: !842, line: 500, baseType: !362, offset: 6656)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1131, file: !842, line: 501, baseType: !2451, size: 64, offset: 6656)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !842, line: 387, flags: DIFlagFwdDecl)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1131, file: !842, line: 516, baseType: !1850, size: 64, offset: 6720)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1131, file: !842, line: 519, baseType: !477, size: 64, offset: 6784)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1131, file: !842, line: 521, baseType: !2456, size: 64, offset: 6848)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2457 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !842, line: 521, flags: DIFlagFwdDecl)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1131, file: !842, line: 545, baseType: !293, size: 32, offset: 6912)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1131, file: !842, line: 548, baseType: !314, size: 8, offset: 6944)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1131, file: !842, line: 550, baseType: !2461, offset: 6952)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2462, line: 142, elements: !376)
!2462 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1131, file: !842, line: 554, baseType: !2095, size: 256, offset: 6976)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1131, file: !842, line: 557, baseType: !244, size: 32, offset: 7232)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1128, file: !842, line: 565, baseType: !2466, offset: 7296)
!2466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, elements: !2467)
!2467 = !{!2468}
!2468 = !DISubrange(count: -1)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1124, file: !842, line: 151, baseType: !293, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1117, file: !842, line: 156, baseType: !362, offset: 256)
!2471 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 159, baseType: !2472, size: 128)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 159, size: 128, elements: !2473)
!2473 = !{!2474, !2538}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2472, file: !842, line: 161, baseType: !2475, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2477)
!2477 = !{!2478, !2488, !2509, !2510, !2511, !2512, !2513, !2525, !2526, !2527}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2476, file: !31, line: 111, baseType: !2479, size: 384)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2480)
!2480 = !{!2481, !2483, !2484, !2485, !2486, !2487}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2479, file: !31, line: 20, baseType: !2482, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !265)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2479, file: !31, line: 21, baseType: !2482, size: 64, offset: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2479, file: !31, line: 22, baseType: !2482, size: 64, offset: 128)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2479, file: !31, line: 23, baseType: !265, size: 64, offset: 192)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2479, file: !31, line: 24, baseType: !265, size: 64, offset: 256)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2479, file: !31, line: 25, baseType: !265, size: 64, offset: 320)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2476, file: !31, line: 112, baseType: !2489, size: 64, offset: 384)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2491, line: 105, size: 128, elements: !2492)
!2491 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2492 = !{!2493, !2494}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2490, file: !2491, line: 110, baseType: !265, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2490, file: !2491, line: 118, baseType: !2495, size: 64, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2491, line: 95, size: 448, elements: !2497)
!2497 = !{!2498, !2499, !2504, !2505, !2506, !2507, !2508}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2496, file: !2491, line: 96, baseType: !886, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2496, file: !2491, line: 97, baseType: !2500, size: 64, offset: 64)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2491, line: 60, baseType: !2502)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{null, !2489}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2496, file: !2491, line: 98, baseType: !2500, size: 64, offset: 128)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2496, file: !2491, line: 99, baseType: !314, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2496, file: !2491, line: 100, baseType: !314, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2496, file: !2491, line: 101, baseType: !490, size: 128, align: 64, offset: 256)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2496, file: !2491, line: 102, baseType: !2489, size: 64, offset: 384)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2476, file: !31, line: 113, baseType: !2490, size: 128, offset: 448)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2476, file: !31, line: 114, baseType: !1641, size: 192, offset: 576)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2476, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2476, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2476, file: !31, line: 117, baseType: !2514, size: 64, offset: 832)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64)
!2515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2516)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2517)
!2517 = !{!2518, !2519, !2523, !2524}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2516, file: !31, line: 73, baseType: !955, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2516, file: !31, line: 78, baseType: !2520, size: 64, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{null, !2475}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2516, file: !31, line: 83, baseType: !2520, size: 64, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2516, file: !31, line: 89, baseType: !1180, size: 64, offset: 192)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2476, file: !31, line: 118, baseType: !258, size: 64, offset: 896)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2476, file: !31, line: 119, baseType: !130, size: 32, offset: 960)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2476, file: !31, line: 120, baseType: !2528, size: 128, offset: 1024)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2476, file: !31, line: 120, size: 128, elements: !2529)
!2529 = !{!2530, !2536}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2528, file: !31, line: 121, baseType: !2531, size: 128)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2532, line: 6, size: 128, elements: !2533)
!2532 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2533 = !{!2534, !2535}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2531, file: !2532, line: 7, baseType: !542, size: 64)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2531, file: !2532, line: 8, baseType: !542, size: 64, offset: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2528, file: !31, line: 122, baseType: !2537)
!2537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2531, elements: !1860)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2472, file: !842, line: 162, baseType: !258, size: 64, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !846, file: !842, line: 176, baseType: !490, size: 128, align: 64)
!2540 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !842, line: 179, baseType: !2541, size: 32, offset: 384)
!2541 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !841, file: !842, line: 179, size: 32, elements: !2542)
!2542 = !{!2543, !2544, !2545, !2546}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2541, file: !842, line: 184, baseType: !293, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2541, file: !842, line: 192, baseType: !7, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2541, file: !842, line: 194, baseType: !7, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2541, file: !842, line: 195, baseType: !130, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !841, file: !842, line: 199, baseType: !293, size: 32, offset: 416)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !776, file: !44, line: 1964, baseType: !2549, size: 64, offset: 1344)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 64)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!266, !718, !2552}
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2554, line: 12, size: 256, elements: !2555)
!2554 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2555 = !{!2556, !2557, !2558, !2559, !2560}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2553, file: !2554, line: 13, baseType: !248, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2553, file: !2554, line: 16, baseType: !130, size: 32, offset: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2553, file: !2554, line: 23, baseType: !265, size: 64, offset: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2553, file: !2554, line: 30, baseType: !265, size: 64, offset: 128)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2553, file: !2554, line: 33, baseType: !2561, size: 64, offset: 192)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2562 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !842, line: 27, flags: DIFlagFwdDecl)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !776, file: !44, line: 1966, baseType: !2549, size: 64, offset: 1408)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !719, file: !44, line: 1424, baseType: !2565, size: 64, offset: 448)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2567)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2568)
!2568 = !{!2569, !2615, !2619, !2623, !2624, !2625, !2626, !2627, !2632, !2637, !2641}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2567, file: !38, line: 323, baseType: !2570, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DISubroutineType(types: !2572)
!2572 = !{!130, !2573}
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2575)
!2575 = !{!2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2600, !2601, !2602}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2574, file: !38, line: 295, baseType: !758, size: 128)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2574, file: !38, line: 296, baseType: !300, size: 128, offset: 128)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2574, file: !38, line: 297, baseType: !300, size: 128, offset: 256)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2574, file: !38, line: 298, baseType: !300, size: 128, offset: 384)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2574, file: !38, line: 299, baseType: !1326, size: 192, offset: 512)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2574, file: !38, line: 300, baseType: !362, offset: 704)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2574, file: !38, line: 301, baseType: !293, size: 32, offset: 704)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2574, file: !38, line: 302, baseType: !718, size: 64, offset: 768)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2574, file: !38, line: 303, baseType: !2585, size: 64, offset: 832)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2586)
!2586 = !{!2587, !2599}
!2587 = !DIDerivedType(tag: DW_TAG_member, scope: !2585, file: !38, line: 69, baseType: !2588, size: 32)
!2588 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2585, file: !38, line: 69, size: 32, elements: !2589)
!2589 = !{!2590, !2591, !2592}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2588, file: !38, line: 70, baseType: !556, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2588, file: !38, line: 71, baseType: !564, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2588, file: !38, line: 72, baseType: !2593, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2594, line: 24, baseType: !2595)
!2594 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2594, line: 22, size: 32, elements: !2596)
!2596 = !{!2597}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2595, file: !2594, line: 23, baseType: !2598, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2594, line: 20, baseType: !562)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2585, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2574, file: !38, line: 304, baseType: !650, size: 64, offset: 896)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2574, file: !38, line: 305, baseType: !265, size: 64, offset: 960)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2574, file: !38, line: 306, baseType: !2603, size: 576, offset: 1024)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2604)
!2604 = !{!2605, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2603, file: !38, line: 206, baseType: !2606, size: 64)
!2606 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !652)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2603, file: !38, line: 207, baseType: !2606, size: 64, offset: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2603, file: !38, line: 208, baseType: !2606, size: 64, offset: 128)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2603, file: !38, line: 209, baseType: !2606, size: 64, offset: 192)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2603, file: !38, line: 210, baseType: !2606, size: 64, offset: 256)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2603, file: !38, line: 211, baseType: !2606, size: 64, offset: 320)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2603, file: !38, line: 212, baseType: !2606, size: 64, offset: 384)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2603, file: !38, line: 213, baseType: !658, size: 64, offset: 448)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2603, file: !38, line: 214, baseType: !658, size: 64, offset: 512)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2567, file: !38, line: 324, baseType: !2616, size: 64, offset: 64)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = !DISubroutineType(types: !2618)
!2618 = !{!2573, !718, !130}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2567, file: !38, line: 325, baseType: !2620, size: 64, offset: 128)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = !DISubroutineType(types: !2622)
!2622 = !{null, !2573}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2567, file: !38, line: 326, baseType: !2570, size: 64, offset: 192)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2567, file: !38, line: 327, baseType: !2570, size: 64, offset: 256)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2567, file: !38, line: 328, baseType: !2570, size: 64, offset: 320)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2567, file: !38, line: 329, baseType: !804, size: 64, offset: 384)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2567, file: !38, line: 332, baseType: !2628, size: 64, offset: 448)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64)
!2629 = !DISubroutineType(types: !2630)
!2630 = !{!2631, !550}
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2567, file: !38, line: 333, baseType: !2633, size: 64, offset: 512)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = !DISubroutineType(types: !2635)
!2635 = !{!130, !550, !2636}
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2567, file: !38, line: 335, baseType: !2638, size: 64, offset: 576)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = !DISubroutineType(types: !2640)
!2640 = !{!130, !550, !2631}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2567, file: !38, line: 337, baseType: !2642, size: 64, offset: 640)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{!130, !718, !2645}
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !719, file: !44, line: 1425, baseType: !2647, size: 64, offset: 512)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2649)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2650)
!2650 = !{!2651, !2655, !2656, !2660, !2661, !2662, !2677, !2700, !2704, !2705, !2728}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2649, file: !38, line: 429, baseType: !2652, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!130, !718, !130, !130, !668}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2649, file: !38, line: 430, baseType: !804, size: 64, offset: 64)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2649, file: !38, line: 431, baseType: !2657, size: 64, offset: 128)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{!130, !718, !7}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2649, file: !38, line: 432, baseType: !2657, size: 64, offset: 192)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2649, file: !38, line: 433, baseType: !804, size: 64, offset: 256)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2649, file: !38, line: 434, baseType: !2663, size: 64, offset: 320)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!130, !718, !130, !2666}
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2668)
!2668 = !{!2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2667, file: !38, line: 416, baseType: !130, size: 32)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2667, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2667, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2667, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2667, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2667, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2667, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2667, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2649, file: !38, line: 435, baseType: !2678, size: 64, offset: 384)
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 64)
!2679 = !DISubroutineType(types: !2680)
!2680 = !{!130, !718, !2585, !2681}
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2683)
!2683 = !{!2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2682, file: !38, line: 344, baseType: !130, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2682, file: !38, line: 345, baseType: !542, size: 64, offset: 64)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2682, file: !38, line: 346, baseType: !542, size: 64, offset: 128)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2682, file: !38, line: 347, baseType: !542, size: 64, offset: 192)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2682, file: !38, line: 348, baseType: !542, size: 64, offset: 256)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2682, file: !38, line: 349, baseType: !542, size: 64, offset: 320)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2682, file: !38, line: 350, baseType: !542, size: 64, offset: 384)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2682, file: !38, line: 351, baseType: !892, size: 64, offset: 448)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2682, file: !38, line: 353, baseType: !892, size: 64, offset: 512)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2682, file: !38, line: 354, baseType: !130, size: 32, offset: 576)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2682, file: !38, line: 355, baseType: !130, size: 32, offset: 608)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2682, file: !38, line: 356, baseType: !542, size: 64, offset: 640)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2682, file: !38, line: 357, baseType: !542, size: 64, offset: 704)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2682, file: !38, line: 358, baseType: !542, size: 64, offset: 768)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2682, file: !38, line: 359, baseType: !892, size: 64, offset: 832)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2682, file: !38, line: 360, baseType: !130, size: 32, offset: 896)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2649, file: !38, line: 436, baseType: !2701, size: 64, offset: 448)
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 64)
!2702 = !DISubroutineType(types: !2703)
!2703 = !{!130, !718, !2645, !2681}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2649, file: !38, line: 438, baseType: !2678, size: 64, offset: 512)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2649, file: !38, line: 439, baseType: !2706, size: 64, offset: 576)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{!130, !718, !2709}
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2711)
!2711 = !{!2712, !2713}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2710, file: !38, line: 410, baseType: !7, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2710, file: !38, line: 411, baseType: !2714, size: 1344, offset: 64)
!2714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2715, size: 1344, elements: !403)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2716)
!2716 = !{!2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2727}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2715, file: !38, line: 396, baseType: !7, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2715, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2715, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2715, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2715, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2715, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2715, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2715, file: !38, line: 404, baseType: !544, size: 64, offset: 256)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2715, file: !38, line: 405, baseType: !2726, size: 64, offset: 320)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !249, line: 126, baseType: !542)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2715, file: !38, line: 406, baseType: !2726, size: 64, offset: 384)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2649, file: !38, line: 440, baseType: !2657, size: 64, offset: 640)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !719, file: !44, line: 1426, baseType: !2730, size: 64, offset: 576)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2732)
!2732 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !719, file: !44, line: 1427, baseType: !265, size: 64, offset: 640)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !719, file: !44, line: 1428, baseType: !265, size: 64, offset: 704)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !719, file: !44, line: 1429, baseType: !265, size: 64, offset: 768)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !719, file: !44, line: 1430, baseType: !507, size: 64, offset: 832)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !719, file: !44, line: 1431, baseType: !882, size: 256, offset: 896)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !719, file: !44, line: 1432, baseType: !130, size: 32, offset: 1152)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !719, file: !44, line: 1433, baseType: !293, size: 32, offset: 1184)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !719, file: !44, line: 1437, baseType: !2741, size: 64, offset: 1216)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2744)
!2744 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !719, file: !44, line: 1449, baseType: !2746, size: 64, offset: 1280)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !523, line: 34, size: 64, elements: !2747)
!2747 = !{!2748}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2746, file: !523, line: 35, baseType: !526, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !719, file: !44, line: 1450, baseType: !300, size: 128, offset: 1344)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !719, file: !44, line: 1451, baseType: !2751, size: 64, offset: 1472)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !719, file: !44, line: 1452, baseType: !2061, size: 64, offset: 1536)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !719, file: !44, line: 1453, baseType: !2755, size: 64, offset: 1600)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !719, file: !44, line: 1454, baseType: !758, size: 128, offset: 1664)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !719, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !719, file: !44, line: 1456, baseType: !2760, size: 2432, offset: 1856)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2761)
!2761 = !{!2762, !2763, !2764, !2766, !2798}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2760, file: !38, line: 519, baseType: !7, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2760, file: !38, line: 520, baseType: !882, size: 256, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2760, file: !38, line: 521, baseType: !2765, size: 192, offset: 320)
!2765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 192, elements: !403)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2760, file: !38, line: 522, baseType: !2767, size: 1728, offset: 512)
!2767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2768, size: 1728, elements: !403)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2769)
!2769 = !{!2770, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2768, file: !38, line: 223, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2773)
!2773 = !{!2774, !2775, !2788, !2789}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2772, file: !38, line: 444, baseType: !130, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2772, file: !38, line: 445, baseType: !2776, size: 64, offset: 64)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2778)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2779)
!2779 = !{!2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2778, file: !38, line: 311, baseType: !804, size: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2778, file: !38, line: 312, baseType: !804, size: 64, offset: 64)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2778, file: !38, line: 313, baseType: !804, size: 64, offset: 128)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2778, file: !38, line: 314, baseType: !804, size: 64, offset: 192)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2778, file: !38, line: 315, baseType: !2570, size: 64, offset: 256)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2778, file: !38, line: 316, baseType: !2570, size: 64, offset: 320)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2778, file: !38, line: 317, baseType: !2570, size: 64, offset: 384)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2778, file: !38, line: 318, baseType: !2642, size: 64, offset: 448)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2772, file: !38, line: 446, baseType: !240, size: 64, offset: 128)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2772, file: !38, line: 447, baseType: !2771, size: 64, offset: 192)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2768, file: !38, line: 224, baseType: !130, size: 32, offset: 64)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2768, file: !38, line: 226, baseType: !300, size: 128, offset: 128)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2768, file: !38, line: 227, baseType: !265, size: 64, offset: 256)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2768, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2768, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2768, file: !38, line: 230, baseType: !2606, size: 64, offset: 384)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2768, file: !38, line: 231, baseType: !2606, size: 64, offset: 448)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2768, file: !38, line: 232, baseType: !258, size: 64, offset: 512)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2760, file: !38, line: 523, baseType: !2799, size: 192, offset: 2240)
!2799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2776, size: 192, elements: !403)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !719, file: !44, line: 1458, baseType: !2801, size: 2112, offset: 4288)
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2802)
!2802 = !{!2803, !2804, !2805}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2801, file: !44, line: 1411, baseType: !130, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2801, file: !44, line: 1412, baseType: !1620, size: 128, offset: 64)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2801, file: !44, line: 1413, baseType: !2806, size: 1920, offset: 192)
!2806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2807, size: 1920, elements: !403)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2808, line: 12, size: 640, elements: !2809)
!2808 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2809 = !{!2810, !2818, !2820, !2825, !2826}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2807, file: !2808, line: 13, baseType: !2811, size: 320)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2812, line: 17, size: 320, elements: !2813)
!2812 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2813 = !{!2814, !2815, !2816, !2817}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2811, file: !2812, line: 18, baseType: !130, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2811, file: !2812, line: 19, baseType: !130, size: 32, offset: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2811, file: !2812, line: 20, baseType: !1620, size: 128, offset: 64)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2811, file: !2812, line: 22, baseType: !490, size: 128, align: 64, offset: 192)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2807, file: !2808, line: 14, baseType: !2819, size: 64, offset: 320)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2807, file: !2808, line: 15, baseType: !2821, size: 64, offset: 384)
!2821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2822, line: 16, size: 64, elements: !2823)
!2822 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2823 = !{!2824}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2821, file: !2822, line: 17, baseType: !1366, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2807, file: !2808, line: 16, baseType: !1620, size: 128, offset: 448)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2807, file: !2808, line: 17, baseType: !293, size: 32, offset: 576)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !719, file: !44, line: 1465, baseType: !258, size: 64, offset: 6400)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !719, file: !44, line: 1468, baseType: !244, size: 32, offset: 6464)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !719, file: !44, line: 1470, baseType: !658, size: 64, offset: 6528)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !719, file: !44, line: 1471, baseType: !658, size: 64, offset: 6592)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !719, file: !44, line: 1473, baseType: !246, size: 32, offset: 6656)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !719, file: !44, line: 1474, baseType: !2833, size: 64, offset: 6720)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !719, file: !44, line: 1477, baseType: !2836, size: 256, offset: 6784)
!2836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 256, elements: !2366)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !719, file: !44, line: 1478, baseType: !2838, size: 128, offset: 7040)
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2839, line: 18, baseType: !2840)
!2839 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2839, line: 16, size: 128, elements: !2841)
!2841 = !{!2842}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2840, file: !2839, line: 17, baseType: !2843, size: 128)
!2843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1496, size: 128, elements: !1872)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !719, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !719, file: !44, line: 1481, baseType: !2846, size: 32, offset: 7200)
!2846 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !249, line: 150, baseType: !7)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !719, file: !44, line: 1487, baseType: !1326, size: 192, offset: 7232)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !719, file: !44, line: 1493, baseType: !324, size: 64, offset: 7424)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !719, file: !44, line: 1495, baseType: !2850, size: 64, offset: 7488)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2852)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !505, line: 135, size: 1024, align: 512, elements: !2853)
!2853 = !{!2854, !2858, !2859, !2866, !2872, !2876, !2880, !2884, !2885, !2889, !2893, !2898, !2902}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2852, file: !505, line: 136, baseType: !2855, size: 64)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = !DISubroutineType(types: !2857)
!2857 = !{!130, !507, !7}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2852, file: !505, line: 137, baseType: !2855, size: 64, offset: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2852, file: !505, line: 138, baseType: !2860, size: 64, offset: 128)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!130, !2863, !2865}
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64)
!2864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !508)
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2852, file: !505, line: 139, baseType: !2867, size: 64, offset: 192)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{!130, !2863, !7, !324, !2870}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !531)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2852, file: !505, line: 141, baseType: !2873, size: 64, offset: 256)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{!130, !2863}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2852, file: !505, line: 142, baseType: !2877, size: 64, offset: 320)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = !DISubroutineType(types: !2879)
!2879 = !{!130, !507}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2852, file: !505, line: 143, baseType: !2881, size: 64, offset: 384)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{null, !507}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2852, file: !505, line: 144, baseType: !2881, size: 64, offset: 448)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2852, file: !505, line: 145, baseType: !2886, size: 64, offset: 512)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{null, !507, !550}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2852, file: !505, line: 146, baseType: !2890, size: 64, offset: 576)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = !DISubroutineType(types: !2892)
!2892 = !{!267, !507, !267, !130}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2852, file: !505, line: 147, baseType: !2894, size: 64, offset: 640)
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!2895 = !DISubroutineType(types: !2896)
!2896 = !{!503, !2897}
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2852, file: !505, line: 148, baseType: !2899, size: 64, offset: 704)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = !DISubroutineType(types: !2901)
!2901 = !{!130, !668, !314}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2852, file: !505, line: 149, baseType: !2903, size: 64, offset: 768)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{!507, !507, !2906}
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !551)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !719, file: !44, line: 1500, baseType: !130, size: 32, offset: 7552)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !719, file: !44, line: 1502, baseType: !2910, size: 448, offset: 7616)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2554, line: 60, size: 448, elements: !2911)
!2911 = !{!2912, !2917, !2918, !2919, !2920, !2921, !2922}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2910, file: !2554, line: 61, baseType: !2913, size: 64)
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 64)
!2914 = !DISubroutineType(types: !2915)
!2915 = !{!265, !2916, !2552}
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2910, file: !2554, line: 63, baseType: !2913, size: 64, offset: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2910, file: !2554, line: 66, baseType: !266, size: 64, offset: 128)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2910, file: !2554, line: 67, baseType: !130, size: 32, offset: 192)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2910, file: !2554, line: 68, baseType: !7, size: 32, offset: 224)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2910, file: !2554, line: 71, baseType: !300, size: 128, offset: 256)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2910, file: !2554, line: 77, baseType: !2923, size: 64, offset: 384)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !719, file: !44, line: 1505, baseType: !886, size: 64, offset: 8064)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !719, file: !44, line: 1508, baseType: !886, size: 64, offset: 8128)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !719, file: !44, line: 1511, baseType: !130, size: 32, offset: 8192)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !719, file: !44, line: 1514, baseType: !1062, size: 32, offset: 8224)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !719, file: !44, line: 1517, baseType: !2929, size: 64, offset: 8256)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2096, line: 18, flags: DIFlagFwdDecl)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !719, file: !44, line: 1518, baseType: !754, size: 64, offset: 8320)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !719, file: !44, line: 1525, baseType: !1850, size: 64, offset: 8384)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !719, file: !44, line: 1532, baseType: !2934, size: 64, offset: 8448)
!2934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2935, line: 52, size: 64, elements: !2936)
!2935 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2936 = !{!2937}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2934, file: !2935, line: 53, baseType: !2938, size: 64)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2935, line: 40, size: 256, elements: !2940)
!2940 = !{!2941, !2942, !2947}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2939, file: !2935, line: 42, baseType: !362)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2939, file: !2935, line: 44, baseType: !2943, size: 192)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2935, line: 28, size: 192, elements: !2944)
!2944 = !{!2945, !2946}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2943, file: !2935, line: 29, baseType: !300, size: 128)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2943, file: !2935, line: 31, baseType: !266, size: 64, offset: 128)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2939, file: !2935, line: 49, baseType: !266, size: 64, offset: 192)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !719, file: !44, line: 1533, baseType: !2934, size: 64, offset: 8512)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !719, file: !44, line: 1534, baseType: !490, size: 128, align: 64, offset: 8576)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !719, file: !44, line: 1535, baseType: !2095, size: 256, offset: 8704)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !719, file: !44, line: 1537, baseType: !1326, size: 192, offset: 8960)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !719, file: !44, line: 1542, baseType: !130, size: 32, offset: 9152)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !719, file: !44, line: 1545, baseType: !362, offset: 9184)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !719, file: !44, line: 1546, baseType: !300, size: 128, offset: 9216)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !719, file: !44, line: 1548, baseType: !362, offset: 9344)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !719, file: !44, line: 1549, baseType: !300, size: 128, offset: 9344)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !551, file: !44, line: 624, baseType: !853, size: 64, offset: 256)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !551, file: !44, line: 631, baseType: !265, size: 64, offset: 320)
!2959 = !DIDerivedType(tag: DW_TAG_member, scope: !551, file: !44, line: 639, baseType: !2960, size: 32, offset: 384)
!2960 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !551, file: !44, line: 639, size: 32, elements: !2961)
!2961 = !{!2962, !2964}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2960, file: !44, line: 640, baseType: !2963, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2960, file: !44, line: 641, baseType: !7, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !551, file: !44, line: 643, baseType: !632, size: 32, offset: 416)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !551, file: !44, line: 644, baseType: !650, size: 64, offset: 448)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !551, file: !44, line: 645, baseType: !654, size: 128, offset: 512)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !551, file: !44, line: 646, baseType: !654, size: 128, offset: 640)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !551, file: !44, line: 647, baseType: !654, size: 128, offset: 768)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !551, file: !44, line: 648, baseType: !362, offset: 896)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !551, file: !44, line: 649, baseType: !262, size: 16, offset: 896)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !551, file: !44, line: 650, baseType: !1495, size: 8, offset: 912)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !551, file: !44, line: 651, baseType: !1495, size: 8, offset: 920)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !551, file: !44, line: 652, baseType: !2726, size: 64, offset: 960)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !551, file: !44, line: 659, baseType: !265, size: 64, offset: 1024)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !551, file: !44, line: 660, baseType: !882, size: 256, offset: 1088)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !551, file: !44, line: 662, baseType: !265, size: 64, offset: 1344)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !551, file: !44, line: 663, baseType: !265, size: 64, offset: 1408)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !551, file: !44, line: 665, baseType: !758, size: 128, offset: 1472)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !551, file: !44, line: 666, baseType: !300, size: 128, offset: 1600)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !551, file: !44, line: 675, baseType: !300, size: 128, offset: 1728)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !551, file: !44, line: 676, baseType: !300, size: 128, offset: 1856)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !551, file: !44, line: 677, baseType: !300, size: 128, offset: 1984)
!2984 = !DIDerivedType(tag: DW_TAG_member, scope: !551, file: !44, line: 678, baseType: !2985, size: 128, offset: 2112)
!2985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !551, file: !44, line: 678, size: 128, elements: !2986)
!2986 = !{!2987, !2988}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2985, file: !44, line: 679, baseType: !754, size: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2985, file: !44, line: 680, baseType: !490, size: 128, align: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !551, file: !44, line: 682, baseType: !888, size: 64, offset: 2240)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !551, file: !44, line: 683, baseType: !888, size: 64, offset: 2304)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !551, file: !44, line: 684, baseType: !293, size: 32, offset: 2368)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !551, file: !44, line: 685, baseType: !293, size: 32, offset: 2400)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !551, file: !44, line: 686, baseType: !293, size: 32, offset: 2432)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !551, file: !44, line: 688, baseType: !293, size: 32, offset: 2464)
!2995 = !DIDerivedType(tag: DW_TAG_member, scope: !551, file: !44, line: 690, baseType: !2996, size: 64, offset: 2496)
!2996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !551, file: !44, line: 690, size: 64, elements: !2997)
!2997 = !{!2998, !3221}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2996, file: !44, line: 691, baseType: !2999, size: 64)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3001)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !3002)
!3002 = !{!3003, !3004, !3008, !3013, !3017, !3018, !3019, !3023, !3036, !3037, !3045, !3049, !3050, !3054, !3055, !3059, !3064, !3065, !3069, !3073, !3181, !3185, !3186, !3190, !3191, !3195, !3199, !3204, !3208, !3212, !3216, !3220}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3001, file: !44, line: 1823, baseType: !240, size: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3001, file: !44, line: 1824, baseType: !3005, size: 64, offset: 64)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{!650, !477, !650, !130}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3001, file: !44, line: 1825, baseType: !3009, size: 64, offset: 128)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DISubroutineType(types: !3011)
!3011 = !{!433, !477, !267, !447, !3012}
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3001, file: !44, line: 1826, baseType: !3014, size: 64, offset: 192)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!433, !477, !324, !447, !3012}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3001, file: !44, line: 1827, baseType: !959, size: 64, offset: 256)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3001, file: !44, line: 1828, baseType: !959, size: 64, offset: 320)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3001, file: !44, line: 1829, baseType: !3020, size: 64, offset: 384)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = !DISubroutineType(types: !3022)
!3022 = !{!130, !962, !314}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3001, file: !44, line: 1830, baseType: !3024, size: 64, offset: 448)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{!130, !477, !3027}
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !3029)
!3029 = !{!3030, !3035}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3028, file: !44, line: 1777, baseType: !3031, size: 64)
!3031 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !3032)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{!130, !3027, !324, !130, !650, !542, !7}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3028, file: !44, line: 1778, baseType: !650, size: 64, offset: 64)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3001, file: !44, line: 1831, baseType: !3024, size: 64, offset: 512)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3001, file: !44, line: 1832, baseType: !3038, size: 64, offset: 576)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!3041, !477, !3043}
!3041 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3042, line: 52, baseType: !7)
!3042 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !738, line: 27, flags: DIFlagFwdDecl)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3001, file: !44, line: 1833, baseType: !3046, size: 64, offset: 640)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = !DISubroutineType(types: !3048)
!3048 = !{!266, !477, !7, !265}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3001, file: !44, line: 1834, baseType: !3046, size: 64, offset: 704)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3001, file: !44, line: 1835, baseType: !3051, size: 64, offset: 768)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = !DISubroutineType(types: !3053)
!3053 = !{!130, !477, !1134}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3001, file: !44, line: 1836, baseType: !265, size: 64, offset: 832)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3001, file: !44, line: 1837, baseType: !3056, size: 64, offset: 896)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!130, !550, !477}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3001, file: !44, line: 1838, baseType: !3060, size: 64, offset: 960)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{!130, !477, !3063}
!3063 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !258)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3001, file: !44, line: 1839, baseType: !3056, size: 64, offset: 1024)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3001, file: !44, line: 1840, baseType: !3066, size: 64, offset: 1088)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!130, !477, !650, !650, !130}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3001, file: !44, line: 1841, baseType: !3070, size: 64, offset: 1152)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!130, !130, !477, !130}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3001, file: !44, line: 1842, baseType: !3074, size: 64, offset: 1216)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DISubroutineType(types: !3076)
!3076 = !{!130, !477, !130, !3077}
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3079)
!3079 = !{!3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3111, !3112, !3113, !3126, !3157}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3078, file: !44, line: 1063, baseType: !3077, size: 64)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3078, file: !44, line: 1064, baseType: !300, size: 128, offset: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3078, file: !44, line: 1065, baseType: !758, size: 128, offset: 192)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3078, file: !44, line: 1066, baseType: !300, size: 128, offset: 320)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3078, file: !44, line: 1069, baseType: !300, size: 128, offset: 448)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3078, file: !44, line: 1072, baseType: !3063, size: 64, offset: 576)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3078, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3078, file: !44, line: 1074, baseType: !548, size: 8, offset: 672)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3078, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3078, file: !44, line: 1076, baseType: !130, size: 32, offset: 736)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3078, file: !44, line: 1077, baseType: !1620, size: 128, offset: 768)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3078, file: !44, line: 1078, baseType: !477, size: 64, offset: 896)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3078, file: !44, line: 1079, baseType: !650, size: 64, offset: 960)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3078, file: !44, line: 1080, baseType: !650, size: 64, offset: 1024)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3078, file: !44, line: 1082, baseType: !3095, size: 64, offset: 1088)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 64)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3097)
!3097 = !{!3098, !3106, !3107, !3108, !3109, !3110}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3096, file: !44, line: 1315, baseType: !3099)
!3099 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3100, line: 20, baseType: !3101)
!3100 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3101 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3100, line: 11, elements: !3102)
!3102 = !{!3103}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3101, file: !3100, line: 12, baseType: !3104)
!3104 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !374, line: 33, baseType: !3105)
!3105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !374, line: 31, elements: !376)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3096, file: !44, line: 1316, baseType: !130, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3096, file: !44, line: 1317, baseType: !130, size: 32, offset: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3096, file: !44, line: 1318, baseType: !3095, size: 64, offset: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3096, file: !44, line: 1319, baseType: !477, size: 64, offset: 128)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3096, file: !44, line: 1320, baseType: !490, size: 128, align: 64, offset: 192)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3078, file: !44, line: 1084, baseType: !265, size: 64, offset: 1152)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3078, file: !44, line: 1085, baseType: !265, size: 64, offset: 1216)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3078, file: !44, line: 1087, baseType: !3114, size: 64, offset: 1280)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3116)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3117)
!3117 = !{!3118, !3122}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3116, file: !44, line: 1012, baseType: !3119, size: 64)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{null, !3077, !3077}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3116, file: !44, line: 1013, baseType: !3123, size: 64, offset: 64)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 64)
!3124 = !DISubroutineType(types: !3125)
!3125 = !{null, !3077}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3078, file: !44, line: 1088, baseType: !3127, size: 64, offset: 1344)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 64)
!3128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3129)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3130)
!3130 = !{!3131, !3135, !3139, !3140, !3144, !3148, !3152, !3156}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3129, file: !44, line: 1017, baseType: !3132, size: 64)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3133 = !DISubroutineType(types: !3134)
!3134 = !{!3063, !3063}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3129, file: !44, line: 1018, baseType: !3136, size: 64, offset: 64)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = !DISubroutineType(types: !3138)
!3138 = !{null, !3063}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3129, file: !44, line: 1019, baseType: !3123, size: 64, offset: 128)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3129, file: !44, line: 1020, baseType: !3141, size: 64, offset: 192)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!130, !3077, !130}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3129, file: !44, line: 1021, baseType: !3145, size: 64, offset: 256)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 64)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{!314, !3077}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3129, file: !44, line: 1022, baseType: !3149, size: 64, offset: 320)
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 64)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{!130, !3077, !130, !303}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3129, file: !44, line: 1023, baseType: !3153, size: 64, offset: 384)
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 64)
!3154 = !DISubroutineType(types: !3155)
!3155 = !{null, !3077, !936}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3129, file: !44, line: 1024, baseType: !3145, size: 64, offset: 448)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3078, file: !44, line: 1097, baseType: !3158, size: 256, offset: 1408)
!3158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3078, file: !44, line: 1089, size: 256, elements: !3159)
!3159 = !{!3160, !3169, !3175}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3158, file: !44, line: 1090, baseType: !3161, size: 256)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3162, line: 10, size: 256, elements: !3163)
!3162 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3163 = !{!3164, !3165, !3168}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3161, file: !3162, line: 11, baseType: !244, size: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3161, file: !3162, line: 12, baseType: !3166, size: 64, offset: 64)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3162, line: 5, flags: DIFlagFwdDecl)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3161, file: !3162, line: 13, baseType: !300, size: 128, offset: 128)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3158, file: !44, line: 1091, baseType: !3170, size: 64)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3162, line: 17, size: 64, elements: !3171)
!3171 = !{!3172}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3170, file: !3162, line: 18, baseType: !3173, size: 64)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3162, line: 16, flags: DIFlagFwdDecl)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3158, file: !44, line: 1096, baseType: !3176, size: 192)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3158, file: !44, line: 1092, size: 192, elements: !3177)
!3177 = !{!3178, !3179, !3180}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3176, file: !44, line: 1093, baseType: !300, size: 128)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3176, file: !44, line: 1094, baseType: !130, size: 32, offset: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3176, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3001, file: !44, line: 1843, baseType: !3182, size: 64, offset: 1280)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{!433, !477, !840, !130, !447, !3012, !130}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3001, file: !44, line: 1844, baseType: !1254, size: 64, offset: 1344)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3001, file: !44, line: 1845, baseType: !3187, size: 64, offset: 1408)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = !DISubroutineType(types: !3189)
!3189 = !{!130, !130}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3001, file: !44, line: 1846, baseType: !3074, size: 64, offset: 1472)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3001, file: !44, line: 1847, baseType: !3192, size: 64, offset: 1536)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{!433, !1012, !477, !3012, !447, !7}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3001, file: !44, line: 1848, baseType: !3196, size: 64, offset: 1600)
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3197, size: 64)
!3197 = !DISubroutineType(types: !3198)
!3198 = !{!433, !477, !3012, !1012, !447, !7}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3001, file: !44, line: 1849, baseType: !3200, size: 64, offset: 1664)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DISubroutineType(types: !3202)
!3202 = !{!130, !477, !266, !3203, !936}
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 64)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3001, file: !44, line: 1850, baseType: !3205, size: 64, offset: 1728)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{!266, !477, !130, !650, !650}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3001, file: !44, line: 1852, baseType: !3209, size: 64, offset: 1792)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 64)
!3210 = !DISubroutineType(types: !3211)
!3211 = !{null, !830, !477}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3001, file: !44, line: 1856, baseType: !3213, size: 64, offset: 1856)
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3214 = !DISubroutineType(types: !3215)
!3215 = !{!433, !477, !650, !477, !650, !447, !7}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3001, file: !44, line: 1858, baseType: !3217, size: 64, offset: 1920)
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 64)
!3218 = !DISubroutineType(types: !3219)
!3219 = !{!650, !477, !650, !477, !650, !650, !7}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3001, file: !44, line: 1861, baseType: !3066, size: 64, offset: 1984)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2996, file: !44, line: 692, baseType: !783, size: 64)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !551, file: !44, line: 694, baseType: !3223, size: 64, offset: 2560)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 64)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3225)
!3225 = !{!3226, !3227, !3228, !3229}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3224, file: !44, line: 1101, baseType: !362)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3224, file: !44, line: 1102, baseType: !300, size: 128)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3224, file: !44, line: 1103, baseType: !300, size: 128, offset: 128)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3224, file: !44, line: 1104, baseType: !300, size: 128, offset: 256)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !551, file: !44, line: 695, baseType: !854, size: 1216, align: 64, offset: 2624)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !551, file: !44, line: 696, baseType: !300, size: 128, offset: 3840)
!3232 = !DIDerivedType(tag: DW_TAG_member, scope: !551, file: !44, line: 697, baseType: !3233, size: 64, offset: 3968)
!3233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !551, file: !44, line: 697, size: 64, elements: !3234)
!3234 = !{!3235, !3236, !3237, !3240, !3241}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3233, file: !44, line: 698, baseType: !1012, size: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3233, file: !44, line: 699, baseType: !2751, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3233, file: !44, line: 700, baseType: !3238, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3233, file: !44, line: 701, baseType: !267, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3233, file: !44, line: 702, baseType: !7, size: 32)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !551, file: !44, line: 705, baseType: !246, size: 32, offset: 4032)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !551, file: !44, line: 708, baseType: !246, size: 32, offset: 4064)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !551, file: !44, line: 709, baseType: !2833, size: 64, offset: 4096)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !551, file: !44, line: 720, baseType: !258, size: 64, offset: 4160)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !508, file: !505, line: 98, baseType: !3247, size: 256, offset: 448)
!3247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 256, elements: !2366)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !508, file: !505, line: 101, baseType: !3249, size: 32, offset: 704)
!3249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3250, line: 25, size: 32, elements: !3251)
!3250 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3251 = !{!3252}
!3252 = !DIDerivedType(tag: DW_TAG_member, scope: !3249, file: !3250, line: 26, baseType: !3253, size: 32)
!3253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3249, file: !3250, line: 26, size: 32, elements: !3254)
!3254 = !{!3255}
!3255 = !DIDerivedType(tag: DW_TAG_member, scope: !3253, file: !3250, line: 30, baseType: !3256, size: 32)
!3256 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3253, file: !3250, line: 30, size: 32, elements: !3257)
!3257 = !{!3258, !3259}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3256, file: !3250, line: 31, baseType: !362)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3256, file: !3250, line: 32, baseType: !130, size: 32)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !508, file: !505, line: 102, baseType: !2850, size: 64, offset: 768)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !508, file: !505, line: 103, baseType: !718, size: 64, offset: 832)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !508, file: !505, line: 104, baseType: !265, size: 64, offset: 896)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !508, file: !505, line: 105, baseType: !258, size: 64, offset: 960)
!3264 = !DIDerivedType(tag: DW_TAG_member, scope: !508, file: !505, line: 107, baseType: !3265, size: 128, offset: 1024)
!3265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !508, file: !505, line: 107, size: 128, elements: !3266)
!3266 = !{!3267, !3268}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3265, file: !505, line: 108, baseType: !300, size: 128)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3265, file: !505, line: 109, baseType: !3269, size: 64)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !508, file: !505, line: 111, baseType: !300, size: 128, offset: 1152)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !508, file: !505, line: 112, baseType: !300, size: 128, offset: 1280)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !508, file: !505, line: 120, baseType: !3273, size: 128, offset: 1408)
!3273 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !508, file: !505, line: 116, size: 128, elements: !3274)
!3274 = !{!3275, !3276, !3277}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3273, file: !505, line: 117, baseType: !758, size: 128)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3273, file: !505, line: 118, baseType: !522, size: 128)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3273, file: !505, line: 119, baseType: !490, size: 128, align: 64)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !478, file: !44, line: 922, baseType: !550, size: 64, offset: 256)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !478, file: !44, line: 923, baseType: !2999, size: 64, offset: 320)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !478, file: !44, line: 929, baseType: !362, offset: 384)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !478, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !478, file: !44, line: 931, baseType: !886, size: 64, offset: 448)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !478, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !478, file: !44, line: 933, baseType: !2846, size: 32, offset: 544)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !478, file: !44, line: 934, baseType: !1326, size: 192, offset: 576)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !478, file: !44, line: 935, baseType: !650, size: 64, offset: 768)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !478, file: !44, line: 936, baseType: !3288, size: 192, offset: 832)
!3288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3289)
!3289 = !{!3290, !3291, !3292, !3293, !3294, !3295}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3288, file: !44, line: 886, baseType: !3099)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3288, file: !44, line: 887, baseType: !1610, size: 64)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3288, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3288, file: !44, line: 889, baseType: !556, size: 32, offset: 96)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3288, file: !44, line: 889, baseType: !556, size: 32, offset: 128)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3288, file: !44, line: 890, baseType: !130, size: 32, offset: 160)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !478, file: !44, line: 937, baseType: !1686, size: 64, offset: 1024)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !478, file: !44, line: 938, baseType: !3298, size: 256, offset: 1088)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3299)
!3299 = !{!3300, !3301, !3302, !3303, !3304, !3305}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3298, file: !44, line: 897, baseType: !265, size: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3298, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3298, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3298, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3298, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3298, file: !44, line: 904, baseType: !650, size: 64, offset: 192)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !478, file: !44, line: 940, baseType: !542, size: 64, offset: 1344)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !478, file: !44, line: 945, baseType: !258, size: 64, offset: 1408)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !478, file: !44, line: 949, baseType: !300, size: 128, offset: 1472)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !478, file: !44, line: 950, baseType: !300, size: 128, offset: 1600)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !478, file: !44, line: 952, baseType: !853, size: 64, offset: 1728)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !478, file: !44, line: 953, baseType: !1062, size: 32, offset: 1792)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !478, file: !44, line: 954, baseType: !1062, size: 32, offset: 1824)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !468, file: !427, line: 174, baseType: !474, size: 64, offset: 320)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !468, file: !427, line: 176, baseType: !3315, size: 64, offset: 384)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DISubroutineType(types: !3317)
!3317 = !{!130, !477, !355, !467, !1134}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !456, file: !427, line: 90, baseType: !451, size: 64, offset: 192)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !456, file: !427, line: 91, baseType: !3320, size: 64, offset: 256)
!3320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !417, file: !350, line: 143, baseType: !3322, size: 64, offset: 256)
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3323 = !DISubroutineType(types: !3324)
!3324 = !{!3325, !355}
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 64)
!3326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3327)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3328)
!3328 = !{!3329, !3330, !3334, !3338, !3344, !3348}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3327, file: !61, line: 40, baseType: !60, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3327, file: !61, line: 41, baseType: !3331, size: 64, offset: 64)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!314}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3327, file: !61, line: 42, baseType: !3335, size: 64, offset: 128)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!258}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3327, file: !61, line: 43, baseType: !3339, size: 64, offset: 192)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{!2263, !3342}
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3327, file: !61, line: 44, baseType: !3345, size: 64, offset: 256)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!2263}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3327, file: !61, line: 45, baseType: !589, size: 64, offset: 320)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !417, file: !350, line: 144, baseType: !3350, size: 64, offset: 320)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{!2263, !355}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !417, file: !350, line: 145, baseType: !3354, size: 64, offset: 384)
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3355, size: 64)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{null, !355, !3357, !3358}
!3357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !349, file: !350, line: 70, baseType: !3360, size: 64, offset: 384)
!3360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3361, size: 64)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !738, line: 123, size: 1024, elements: !3362)
!3362 = !{!3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3491, !3492, !3493, !3494, !3495}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3361, file: !738, line: 124, baseType: !293, size: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3361, file: !738, line: 125, baseType: !293, size: 32, offset: 32)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3361, file: !738, line: 135, baseType: !3360, size: 64, offset: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3361, file: !738, line: 136, baseType: !324, size: 64, offset: 128)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3361, file: !738, line: 138, baseType: !875, size: 192, align: 64, offset: 192)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3361, file: !738, line: 140, baseType: !2263, size: 64, offset: 384)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3361, file: !738, line: 141, baseType: !7, size: 32, offset: 448)
!3370 = !DIDerivedType(tag: DW_TAG_member, scope: !3361, file: !738, line: 142, baseType: !3371, size: 256, offset: 512)
!3371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3361, file: !738, line: 142, size: 256, elements: !3372)
!3372 = !{!3373, !3419, !3423}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3371, file: !738, line: 143, baseType: !3374, size: 192)
!3374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !738, line: 91, size: 192, elements: !3375)
!3375 = !{!3376, !3377, !3378}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3374, file: !738, line: 92, baseType: !265, size: 64)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3374, file: !738, line: 94, baseType: !871, size: 64, offset: 64)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3374, file: !738, line: 100, baseType: !3379, size: 64, offset: 128)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !738, line: 180, size: 704, elements: !3381)
!3381 = !{!3382, !3383, !3384, !3391, !3392, !3393, !3417, !3418}
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3380, file: !738, line: 182, baseType: !3360, size: 64)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3380, file: !738, line: 183, baseType: !7, size: 32, offset: 64)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3380, file: !738, line: 186, baseType: !3385, size: 192, offset: 128)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3386, line: 19, size: 192, elements: !3387)
!3386 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3387 = !{!3388, !3389, !3390}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3385, file: !3386, line: 20, baseType: !858, size: 128)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3385, file: !3386, line: 21, baseType: !7, size: 32, offset: 128)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3385, file: !3386, line: 22, baseType: !7, size: 32, offset: 160)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3380, file: !738, line: 187, baseType: !244, size: 32, offset: 320)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3380, file: !738, line: 188, baseType: !244, size: 32, offset: 352)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3380, file: !738, line: 189, baseType: !3394, size: 64, offset: 384)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !738, line: 168, size: 320, elements: !3396)
!3396 = !{!3397, !3401, !3405, !3409, !3413}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3395, file: !738, line: 169, baseType: !3398, size: 64)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = !DISubroutineType(types: !3400)
!3400 = !{!130, !830, !3379}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3395, file: !738, line: 171, baseType: !3402, size: 64, offset: 64)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!130, !3360, !324, !442}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3395, file: !738, line: 173, baseType: !3406, size: 64, offset: 128)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = !DISubroutineType(types: !3408)
!3408 = !{!130, !3360}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3395, file: !738, line: 174, baseType: !3410, size: 64, offset: 192)
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 64)
!3411 = !DISubroutineType(types: !3412)
!3412 = !{!130, !3360, !3360, !324}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3395, file: !738, line: 176, baseType: !3414, size: 64, offset: 256)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{!130, !830, !3360, !3379}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3380, file: !738, line: 192, baseType: !300, size: 128, offset: 448)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3380, file: !738, line: 194, baseType: !1620, size: 128, offset: 576)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3371, file: !738, line: 144, baseType: !3420, size: 64)
!3420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !738, line: 103, size: 64, elements: !3421)
!3421 = !{!3422}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3420, file: !738, line: 104, baseType: !3360, size: 64)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3371, file: !738, line: 145, baseType: !3424, size: 256)
!3424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !738, line: 107, size: 256, elements: !3425)
!3425 = !{!3426, !3486, !3489, !3490}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3424, file: !738, line: 108, baseType: !3427, size: 64)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 64)
!3428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3429)
!3429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !738, line: 217, size: 768, elements: !3430)
!3430 = !{!3431, !3451, !3455, !3459, !3463, !3467, !3471, !3475, !3476, !3477, !3478, !3482}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3429, file: !738, line: 222, baseType: !3432, size: 64)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{!130, !3435}
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 64)
!3436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !738, line: 197, size: 1088, elements: !3437)
!3437 = !{!3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3436, file: !738, line: 199, baseType: !3360, size: 64)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3436, file: !738, line: 200, baseType: !477, size: 64, offset: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3436, file: !738, line: 201, baseType: !830, size: 64, offset: 128)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3436, file: !738, line: 202, baseType: !258, size: 64, offset: 192)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3436, file: !738, line: 205, baseType: !1326, size: 192, offset: 256)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3436, file: !738, line: 206, baseType: !1326, size: 192, offset: 448)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3436, file: !738, line: 207, baseType: !130, size: 32, offset: 640)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3436, file: !738, line: 208, baseType: !300, size: 128, offset: 704)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3436, file: !738, line: 209, baseType: !267, size: 64, offset: 832)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3436, file: !738, line: 211, baseType: !447, size: 64, offset: 896)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3436, file: !738, line: 212, baseType: !314, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3436, file: !738, line: 213, baseType: !314, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3436, file: !738, line: 214, baseType: !1162, size: 64, offset: 1024)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3429, file: !738, line: 223, baseType: !3452, size: 64, offset: 64)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 64)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{null, !3435}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3429, file: !738, line: 236, baseType: !3456, size: 64, offset: 128)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!130, !830, !258}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3429, file: !738, line: 238, baseType: !3460, size: 64, offset: 192)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!258, !830, !3012}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3429, file: !738, line: 239, baseType: !3464, size: 64, offset: 256)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 64)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{!258, !830, !258, !3012}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3429, file: !738, line: 240, baseType: !3468, size: 64, offset: 320)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{null, !830, !258}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3429, file: !738, line: 242, baseType: !3472, size: 64, offset: 384)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DISubroutineType(types: !3474)
!3474 = !{!433, !3435, !267, !447, !650}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3429, file: !738, line: 252, baseType: !447, size: 64, offset: 448)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3429, file: !738, line: 259, baseType: !314, size: 8, offset: 512)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3429, file: !738, line: 260, baseType: !3472, size: 64, offset: 576)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3429, file: !738, line: 263, baseType: !3479, size: 64, offset: 640)
!3479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3480, size: 64)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{!3041, !3435, !3043}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3429, file: !738, line: 266, baseType: !3483, size: 64, offset: 704)
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3484, size: 64)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{!130, !3435, !1134}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3424, file: !738, line: 109, baseType: !3487, size: 64, offset: 64)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !738, line: 31, flags: DIFlagFwdDecl)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3424, file: !738, line: 110, baseType: !650, size: 64, offset: 128)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3424, file: !738, line: 111, baseType: !3360, size: 64, offset: 192)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3361, file: !738, line: 148, baseType: !258, size: 64, offset: 768)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3361, file: !738, line: 154, baseType: !542, size: 64, offset: 832)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3361, file: !738, line: 156, baseType: !262, size: 16, offset: 896)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3361, file: !738, line: 157, baseType: !442, size: 16, offset: 912)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3361, file: !738, line: 158, baseType: !3496, size: 64, offset: 960)
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !738, line: 32, flags: DIFlagFwdDecl)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !349, file: !350, line: 71, baseType: !284, size: 32, offset: 448)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !349, file: !350, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !349, file: !350, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !349, file: !350, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !349, file: !350, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !349, file: !350, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !346, file: !73, line: 463, baseType: !345, size: 64, offset: 512)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !346, file: !73, line: 465, baseType: !3506, size: 64, offset: 576)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !346, file: !73, line: 467, baseType: !324, size: 64, offset: 640)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !346, file: !73, line: 468, baseType: !3510, size: 64, offset: 704)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3512)
!3512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3513)
!3513 = !{!3514, !3515, !3516, !3520, !3525, !3529}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3512, file: !73, line: 88, baseType: !324, size: 64)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3512, file: !73, line: 89, baseType: !453, size: 64, offset: 64)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3512, file: !73, line: 90, baseType: !3517, size: 64, offset: 128)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{!130, !345, !398}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3512, file: !73, line: 91, baseType: !3521, size: 64, offset: 192)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{!267, !345, !3524, !3357, !3358}
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3512, file: !73, line: 93, baseType: !3526, size: 64, offset: 256)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{null, !345}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3512, file: !73, line: 95, baseType: !3530, size: 64, offset: 320)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3532)
!3532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3533)
!3533 = !{!3534, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3532, file: !80, line: 279, baseType: !3535, size: 64)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{!130, !345}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3532, file: !80, line: 280, baseType: !3526, size: 64, offset: 64)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3532, file: !80, line: 281, baseType: !3535, size: 64, offset: 128)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3532, file: !80, line: 282, baseType: !3535, size: 64, offset: 192)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3532, file: !80, line: 283, baseType: !3535, size: 64, offset: 256)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3532, file: !80, line: 284, baseType: !3535, size: 64, offset: 320)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3532, file: !80, line: 285, baseType: !3535, size: 64, offset: 384)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3532, file: !80, line: 286, baseType: !3535, size: 64, offset: 448)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3532, file: !80, line: 287, baseType: !3535, size: 64, offset: 512)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3532, file: !80, line: 288, baseType: !3535, size: 64, offset: 576)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3532, file: !80, line: 289, baseType: !3535, size: 64, offset: 640)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3532, file: !80, line: 290, baseType: !3535, size: 64, offset: 704)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3532, file: !80, line: 291, baseType: !3535, size: 64, offset: 768)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3532, file: !80, line: 292, baseType: !3535, size: 64, offset: 832)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3532, file: !80, line: 293, baseType: !3535, size: 64, offset: 896)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3532, file: !80, line: 294, baseType: !3535, size: 64, offset: 960)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3532, file: !80, line: 295, baseType: !3535, size: 64, offset: 1024)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3532, file: !80, line: 296, baseType: !3535, size: 64, offset: 1088)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3532, file: !80, line: 297, baseType: !3535, size: 64, offset: 1152)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3532, file: !80, line: 298, baseType: !3535, size: 64, offset: 1216)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3532, file: !80, line: 299, baseType: !3535, size: 64, offset: 1280)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3532, file: !80, line: 300, baseType: !3535, size: 64, offset: 1344)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3532, file: !80, line: 301, baseType: !3535, size: 64, offset: 1408)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !346, file: !73, line: 470, baseType: !3561, size: 64, offset: 768)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3563, line: 82, size: 1408, elements: !3564)
!3563 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3564 = !{!3565, !3566, !3567, !3568, !3569, !3570, !3571, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3646, !3649, !3650}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3562, file: !3563, line: 83, baseType: !324, size: 64)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3562, file: !3563, line: 84, baseType: !324, size: 64, offset: 64)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3562, file: !3563, line: 85, baseType: !345, size: 64, offset: 128)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3562, file: !3563, line: 86, baseType: !453, size: 64, offset: 192)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3562, file: !3563, line: 87, baseType: !453, size: 64, offset: 256)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3562, file: !3563, line: 88, baseType: !453, size: 64, offset: 320)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3562, file: !3563, line: 90, baseType: !3572, size: 64, offset: 384)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3573 = !DISubroutineType(types: !3574)
!3574 = !{!130, !345, !3575}
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3577)
!3577 = !{!3578, !3579, !3580, !3581, !3582, !3583, !3584, !3597, !3610, !3611, !3612, !3613, !3614, !3622, !3623, !3624, !3625, !3626, !3627}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3576, file: !67, line: 96, baseType: !324, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3576, file: !67, line: 97, baseType: !3561, size: 64, offset: 64)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3576, file: !67, line: 99, baseType: !240, size: 64, offset: 128)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3576, file: !67, line: 100, baseType: !324, size: 64, offset: 192)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3576, file: !67, line: 102, baseType: !314, size: 8, offset: 256)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3576, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3576, file: !67, line: 105, baseType: !3585, size: 64, offset: 320)
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3587)
!3587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3588, line: 262, size: 1600, elements: !3589)
!3588 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3589 = !{!3590, !3591, !3592, !3596}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3587, file: !3588, line: 263, baseType: !2836, size: 256)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3587, file: !3588, line: 264, baseType: !2836, size: 256, offset: 256)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3587, file: !3588, line: 265, baseType: !3593, size: 1024, offset: 512)
!3593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 1024, elements: !3594)
!3594 = !{!3595}
!3595 = !DISubrange(count: 128)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3587, file: !3588, line: 266, baseType: !2263, size: 64, offset: 1536)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3576, file: !67, line: 106, baseType: !3598, size: 64, offset: 384)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3600)
!3600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3588, line: 210, size: 256, elements: !3601)
!3601 = !{!3602, !3606, !3608, !3609}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3600, file: !3588, line: 211, baseType: !3603, size: 72)
!3603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1496, size: 72, elements: !3604)
!3604 = !{!3605}
!3605 = !DISubrange(count: 9)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3600, file: !3588, line: 212, baseType: !3607, size: 64, offset: 128)
!3607 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3588, line: 14, baseType: !265)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3600, file: !3588, line: 213, baseType: !246, size: 32, offset: 192)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3600, file: !3588, line: 214, baseType: !246, size: 32, offset: 224)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3576, file: !67, line: 108, baseType: !3535, size: 64, offset: 448)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3576, file: !67, line: 109, baseType: !3526, size: 64, offset: 512)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3576, file: !67, line: 110, baseType: !3535, size: 64, offset: 576)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3576, file: !67, line: 111, baseType: !3526, size: 64, offset: 640)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3576, file: !67, line: 112, baseType: !3615, size: 64, offset: 704)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!130, !345, !3618}
!3618 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3619)
!3619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3620)
!3620 = !{!3621}
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3619, file: !80, line: 51, baseType: !130, size: 32)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3576, file: !67, line: 113, baseType: !3535, size: 64, offset: 768)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3576, file: !67, line: 114, baseType: !453, size: 64, offset: 832)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3576, file: !67, line: 115, baseType: !453, size: 64, offset: 896)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3576, file: !67, line: 117, baseType: !3530, size: 64, offset: 960)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3576, file: !67, line: 118, baseType: !3526, size: 64, offset: 1024)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3576, file: !67, line: 120, baseType: !3628, size: 64, offset: 1088)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3562, file: !3563, line: 91, baseType: !3517, size: 64, offset: 448)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3562, file: !3563, line: 92, baseType: !3535, size: 64, offset: 512)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3562, file: !3563, line: 93, baseType: !3526, size: 64, offset: 576)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3562, file: !3563, line: 94, baseType: !3535, size: 64, offset: 640)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3562, file: !3563, line: 95, baseType: !3526, size: 64, offset: 704)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3562, file: !3563, line: 97, baseType: !3535, size: 64, offset: 768)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3562, file: !3563, line: 98, baseType: !3535, size: 64, offset: 832)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3562, file: !3563, line: 100, baseType: !3615, size: 64, offset: 896)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3562, file: !3563, line: 101, baseType: !3535, size: 64, offset: 960)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3562, file: !3563, line: 103, baseType: !3535, size: 64, offset: 1024)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3562, file: !3563, line: 105, baseType: !3535, size: 64, offset: 1088)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3562, file: !3563, line: 107, baseType: !3530, size: 64, offset: 1152)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3562, file: !3563, line: 109, baseType: !3643, size: 64, offset: 1216)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3645)
!3645 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3563, line: 109, flags: DIFlagFwdDecl)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3562, file: !3563, line: 111, baseType: !3647, size: 64, offset: 1280)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3563, line: 111, flags: DIFlagFwdDecl)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3562, file: !3563, line: 112, baseType: !764, offset: 1344)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3562, file: !3563, line: 114, baseType: !314, size: 8, offset: 1344)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !346, file: !73, line: 471, baseType: !3575, size: 64, offset: 832)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !346, file: !73, line: 473, baseType: !258, size: 64, offset: 896)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !346, file: !73, line: 475, baseType: !258, size: 64, offset: 960)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !346, file: !73, line: 480, baseType: !1326, size: 192, offset: 1024)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !346, file: !73, line: 484, baseType: !3656, size: 576, offset: 1216)
!3656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3657)
!3657 = !{!3658, !3659, !3660, !3661, !3662, !3663}
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3656, file: !73, line: 362, baseType: !300, size: 128)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3656, file: !73, line: 363, baseType: !300, size: 128, offset: 128)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3656, file: !73, line: 364, baseType: !300, size: 128, offset: 256)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3656, file: !73, line: 365, baseType: !300, size: 128, offset: 384)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3656, file: !73, line: 366, baseType: !314, size: 8, offset: 512)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3656, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !346, file: !73, line: 485, baseType: !3665, size: 2304, offset: 1792)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3666)
!3666 = !{!3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3762, !3766}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3665, file: !80, line: 566, baseType: !3618, size: 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3665, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3665, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3665, file: !80, line: 569, baseType: !314, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3665, file: !80, line: 570, baseType: !314, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3665, file: !80, line: 571, baseType: !314, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3665, file: !80, line: 572, baseType: !314, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3665, file: !80, line: 573, baseType: !314, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3665, file: !80, line: 574, baseType: !314, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3665, file: !80, line: 575, baseType: !314, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3665, file: !80, line: 576, baseType: !314, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3665, file: !80, line: 577, baseType: !244, size: 32, offset: 64)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3665, file: !80, line: 578, baseType: !362, offset: 96)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3665, file: !80, line: 580, baseType: !300, size: 128, offset: 128)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3665, file: !80, line: 581, baseType: !1641, size: 192, offset: 256)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3665, file: !80, line: 582, baseType: !3683, size: 64, offset: 448)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3685, line: 43, size: 1472, elements: !3686)
!3685 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3686 = !{!3687, !3688, !3689, !3690, !3691, !3694, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3684, file: !3685, line: 44, baseType: !324, size: 64)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3684, file: !3685, line: 45, baseType: !130, size: 32, offset: 64)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3684, file: !3685, line: 46, baseType: !300, size: 128, offset: 128)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3684, file: !3685, line: 47, baseType: !362, offset: 256)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3684, file: !3685, line: 48, baseType: !3692, size: 64, offset: 256)
!3692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3693, size: 64)
!3693 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3684, file: !3685, line: 49, baseType: !3695, size: 320, offset: 320)
!3695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3696, line: 11, size: 320, elements: !3697)
!3696 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3697 = !{!3698, !3699, !3700, !3705}
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3695, file: !3696, line: 16, baseType: !758, size: 128)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3695, file: !3696, line: 17, baseType: !265, size: 64, offset: 128)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3695, file: !3696, line: 18, baseType: !3701, size: 64, offset: 192)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{null, !3704}
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3695, file: !3696, line: 19, baseType: !244, size: 32, offset: 256)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3684, file: !3685, line: 50, baseType: !265, size: 64, offset: 640)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3684, file: !3685, line: 51, baseType: !1443, size: 64, offset: 704)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3684, file: !3685, line: 52, baseType: !1443, size: 64, offset: 768)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3684, file: !3685, line: 53, baseType: !1443, size: 64, offset: 832)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3684, file: !3685, line: 54, baseType: !1443, size: 64, offset: 896)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3684, file: !3685, line: 55, baseType: !1443, size: 64, offset: 960)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3684, file: !3685, line: 56, baseType: !265, size: 64, offset: 1024)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3684, file: !3685, line: 57, baseType: !265, size: 64, offset: 1088)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3684, file: !3685, line: 58, baseType: !265, size: 64, offset: 1152)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3684, file: !3685, line: 59, baseType: !265, size: 64, offset: 1216)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3684, file: !3685, line: 60, baseType: !265, size: 64, offset: 1280)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3684, file: !3685, line: 61, baseType: !345, size: 64, offset: 1344)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3684, file: !3685, line: 62, baseType: !314, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3684, file: !3685, line: 63, baseType: !314, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3665, file: !80, line: 583, baseType: !314, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3665, file: !80, line: 584, baseType: !314, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3665, file: !80, line: 585, baseType: !314, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3665, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3665, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3665, file: !80, line: 592, baseType: !1435, size: 512, offset: 576)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3665, file: !80, line: 593, baseType: !542, size: 64, offset: 1088)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3665, file: !80, line: 594, baseType: !2095, size: 256, offset: 1152)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3665, file: !80, line: 595, baseType: !1620, size: 128, offset: 1408)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3665, file: !80, line: 596, baseType: !3692, size: 64, offset: 1536)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3665, file: !80, line: 597, baseType: !293, size: 32, offset: 1600)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3665, file: !80, line: 598, baseType: !293, size: 32, offset: 1632)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3665, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3665, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3665, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3665, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3665, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3665, file: !80, line: 604, baseType: !314, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3665, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3665, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3665, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3665, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3665, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3665, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3665, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3665, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3665, file: !80, line: 613, baseType: !130, size: 32, offset: 1792)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3665, file: !80, line: 614, baseType: !130, size: 32, offset: 1824)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3665, file: !80, line: 615, baseType: !542, size: 64, offset: 1856)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3665, file: !80, line: 616, baseType: !542, size: 64, offset: 1920)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3665, file: !80, line: 617, baseType: !542, size: 64, offset: 1984)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3665, file: !80, line: 618, baseType: !542, size: 64, offset: 2048)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3665, file: !80, line: 620, baseType: !3753, size: 64, offset: 2112)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3755)
!3755 = !{!3756, !3757, !3758, !3759}
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3754, file: !80, line: 537, baseType: !362)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3754, file: !80, line: 538, baseType: !7, size: 32)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3754, file: !80, line: 540, baseType: !300, size: 128, offset: 64)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3754, file: !80, line: 543, baseType: !3760, size: 64, offset: 192)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3665, file: !80, line: 621, baseType: !3763, size: 64, offset: 2176)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{null, !345, !1583}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3665, file: !80, line: 622, baseType: !3767, size: 64, offset: 2240)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !346, file: !73, line: 486, baseType: !3770, size: 64, offset: 4096)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3772)
!3772 = !{!3773, !3774, !3775, !3779, !3780, !3781}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3771, file: !80, line: 643, baseType: !3532, size: 1472)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3771, file: !80, line: 644, baseType: !3535, size: 64, offset: 1472)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3771, file: !80, line: 645, baseType: !3776, size: 64, offset: 1536)
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 64)
!3777 = !DISubroutineType(types: !3778)
!3778 = !{null, !345, !314}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3771, file: !80, line: 646, baseType: !3535, size: 64, offset: 1600)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3771, file: !80, line: 647, baseType: !3526, size: 64, offset: 1664)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3771, file: !80, line: 648, baseType: !3526, size: 64, offset: 1728)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !346, file: !73, line: 493, baseType: !3783, size: 64, offset: 4160)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !94, line: 162, size: 1088, elements: !3785)
!3785 = !{!3786, !3787, !3788, !4058, !4059, !4060, !4061, !4062, !4063, !4189, !4190, !4191, !4192, !4193, !4194, !4195}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3784, file: !94, line: 163, baseType: !300, size: 128)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3784, file: !94, line: 164, baseType: !324, size: 64, offset: 128)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3784, file: !94, line: 165, baseType: !3789, size: 64, offset: 192)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3791)
!3791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !94, line: 105, size: 640, elements: !3792)
!3792 = !{!3793, !3911, !3922, !3927, !3931, !3937, !3941, !3945, !4050, !4054}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3791, file: !94, line: 106, baseType: !3794, size: 64)
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 64)
!3795 = !DISubroutineType(types: !3796)
!3796 = !{!130, !3783, !3797, !93}
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 64)
!3798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3799, line: 51, size: 1344, elements: !3800)
!3799 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3800 = !{!3801, !3802, !3804, !3805, !3895, !3904, !3905, !3906, !3907, !3908, !3909, !3910}
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3798, file: !3799, line: 52, baseType: !324, size: 64)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3798, file: !3799, line: 53, baseType: !3803, size: 32, offset: 64)
!3803 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3799, line: 28, baseType: !244)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3798, file: !3799, line: 54, baseType: !324, size: 64, offset: 128)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3798, file: !3799, line: 55, baseType: !3806, size: 192, offset: 192)
!3806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3807, line: 17, size: 192, elements: !3808)
!3807 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3808 = !{!3809, !3811, !3894}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3806, file: !3807, line: 18, baseType: !3810, size: 64)
!3810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 64)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3806, file: !3807, line: 19, baseType: !3812, size: 64, offset: 64)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3814)
!3814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3807, line: 110, size: 1152, elements: !3815)
!3815 = !{!3816, !3820, !3824, !3830, !3836, !3840, !3844, !3849, !3853, !3854, !3858, !3862, !3866, !3877, !3878, !3879, !3880, !3890}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3814, file: !3807, line: 111, baseType: !3817, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!3810, !3810}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3814, file: !3807, line: 112, baseType: !3821, size: 64, offset: 64)
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3822, size: 64)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{null, !3810}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3814, file: !3807, line: 113, baseType: !3825, size: 64, offset: 128)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{!314, !3828}
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3806)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3814, file: !3807, line: 114, baseType: !3831, size: 64, offset: 192)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = !DISubroutineType(types: !3833)
!3833 = !{!2263, !3828, !3834}
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !346)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3814, file: !3807, line: 116, baseType: !3837, size: 64, offset: 256)
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3838, size: 64)
!3838 = !DISubroutineType(types: !3839)
!3839 = !{!314, !3828, !324}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3814, file: !3807, line: 118, baseType: !3841, size: 64, offset: 320)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{!130, !3828, !324, !7, !258, !447}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3814, file: !3807, line: 123, baseType: !3845, size: 64, offset: 384)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!130, !3828, !324, !3848, !447}
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3814, file: !3807, line: 126, baseType: !3850, size: 64, offset: 448)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DISubroutineType(types: !3852)
!3852 = !{!324, !3828}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3814, file: !3807, line: 127, baseType: !3850, size: 64, offset: 512)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3814, file: !3807, line: 128, baseType: !3855, size: 64, offset: 576)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = !DISubroutineType(types: !3857)
!3857 = !{!3810, !3828}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3814, file: !3807, line: 130, baseType: !3859, size: 64, offset: 640)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!3810, !3828, !3810}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3814, file: !3807, line: 133, baseType: !3863, size: 64, offset: 704)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!3810, !3828, !324}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3814, file: !3807, line: 135, baseType: !3867, size: 64, offset: 768)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!130, !3828, !324, !324, !7, !7, !3870}
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3807, line: 43, size: 640, elements: !3872)
!3872 = !{!3873, !3874, !3875}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3871, file: !3807, line: 44, baseType: !3810, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3871, file: !3807, line: 45, baseType: !7, size: 32, offset: 64)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3871, file: !3807, line: 46, baseType: !3876, size: 512, offset: 128)
!3876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !542, size: 512, elements: !1473)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3814, file: !3807, line: 140, baseType: !3859, size: 64, offset: 832)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3814, file: !3807, line: 143, baseType: !3855, size: 64, offset: 896)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3814, file: !3807, line: 145, baseType: !3817, size: 64, offset: 960)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3814, file: !3807, line: 146, baseType: !3881, size: 64, offset: 1024)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{!130, !3828, !3884}
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3807, line: 29, size: 128, elements: !3886)
!3886 = !{!3887, !3888, !3889}
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3885, file: !3807, line: 30, baseType: !7, size: 32)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3885, file: !3807, line: 31, baseType: !7, size: 32, offset: 32)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3885, file: !3807, line: 32, baseType: !3828, size: 64, offset: 64)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3814, file: !3807, line: 148, baseType: !3891, size: 64, offset: 1088)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DISubroutineType(types: !3893)
!3893 = !{!130, !3828, !345}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3806, file: !3807, line: 20, baseType: !345, size: 64, offset: 128)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3798, file: !3799, line: 57, baseType: !3896, size: 64, offset: 384)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3799, line: 31, size: 704, elements: !3898)
!3898 = !{!3899, !3900, !3901, !3902, !3903}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3897, file: !3799, line: 32, baseType: !267, size: 64)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3897, file: !3799, line: 33, baseType: !130, size: 32, offset: 64)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3897, file: !3799, line: 34, baseType: !258, size: 64, offset: 128)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3897, file: !3799, line: 35, baseType: !3896, size: 64, offset: 192)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3897, file: !3799, line: 43, baseType: !468, size: 448, offset: 256)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3798, file: !3799, line: 58, baseType: !3896, size: 64, offset: 448)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3798, file: !3799, line: 59, baseType: !3797, size: 64, offset: 512)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3798, file: !3799, line: 60, baseType: !3797, size: 64, offset: 576)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3798, file: !3799, line: 61, baseType: !3797, size: 64, offset: 640)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3798, file: !3799, line: 63, baseType: !349, size: 512, offset: 704)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3798, file: !3799, line: 65, baseType: !265, size: 64, offset: 1216)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3798, file: !3799, line: 66, baseType: !258, size: 64, offset: 1280)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3791, file: !94, line: 108, baseType: !3912, size: 64, offset: 64)
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{!130, !3783, !3915, !93}
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !94, line: 63, size: 640, elements: !3917)
!3917 = !{!3918, !3919, !3920}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3916, file: !94, line: 64, baseType: !3810, size: 64)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3916, file: !94, line: 65, baseType: !130, size: 32, offset: 64)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3916, file: !94, line: 66, baseType: !3921, size: 512, offset: 96)
!3921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 512, elements: !1872)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3791, file: !94, line: 110, baseType: !3923, size: 64, offset: 128)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = !DISubroutineType(types: !3925)
!3925 = !{!130, !3783, !7, !3926}
!3926 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !249, line: 164, baseType: !265)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3791, file: !94, line: 111, baseType: !3928, size: 64, offset: 192)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{null, !3783, !7}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3791, file: !94, line: 112, baseType: !3932, size: 64, offset: 256)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 64)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{!130, !3783, !3797, !3935, !7, !271, !2819}
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !244)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3791, file: !94, line: 117, baseType: !3938, size: 64, offset: 320)
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!130, !3783, !7, !7, !258}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3791, file: !94, line: 119, baseType: !3942, size: 64, offset: 384)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{null, !3783, !7, !7}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3791, file: !94, line: 121, baseType: !3946, size: 64, offset: 448)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!130, !3783, !3949, !314}
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !115, line: 175, size: 448, elements: !3951)
!3951 = !{!3952, !3953, !3954, !3955, !3967, !4047, !4048, !4049}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3950, file: !115, line: 176, baseType: !244, size: 32)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3950, file: !115, line: 177, baseType: !7, size: 32, offset: 32)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !3950, file: !115, line: 178, baseType: !265, size: 64, offset: 64)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3950, file: !115, line: 179, baseType: !3956, size: 64, offset: 128)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 64)
!3957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !115, line: 145, size: 256, elements: !3958)
!3958 = !{!3959, !3960, !3961, !3964}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !3957, file: !115, line: 146, baseType: !7, size: 32)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !3957, file: !115, line: 150, baseType: !258, size: 64, offset: 64)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !3957, file: !115, line: 151, baseType: !3962, size: 64, offset: 128)
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !115, line: 127, flags: DIFlagFwdDecl)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !3957, file: !115, line: 152, baseType: !3965, size: 64, offset: 192)
!3965 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1509, line: 756, baseType: !3966)
!3966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1510, size: 64, elements: !334)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !3950, file: !115, line: 180, baseType: !3968, size: 64, offset: 192)
!3968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3969, size: 64)
!3969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !115, line: 503, size: 2304, elements: !3970)
!3970 = !{!3971, !3972, !3973, !3977, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3994, !3998, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4015, !4016, !4017, !4023, !4024, !4028, !4032, !4036, !4040, !4044, !4045, !4046}
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !3969, file: !115, line: 504, baseType: !345, size: 64)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3969, file: !115, line: 505, baseType: !324, size: 64, offset: 64)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !3969, file: !115, line: 506, baseType: !3974, size: 64, offset: 128)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!7, !3949}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !3969, file: !115, line: 507, baseType: !3978, size: 64, offset: 192)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{null, !3949}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !3969, file: !115, line: 508, baseType: !3978, size: 64, offset: 256)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !3969, file: !115, line: 509, baseType: !3978, size: 64, offset: 320)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !3969, file: !115, line: 511, baseType: !3978, size: 64, offset: 384)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !3969, file: !115, line: 512, baseType: !3978, size: 64, offset: 448)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !3969, file: !115, line: 513, baseType: !3978, size: 64, offset: 512)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !3969, file: !115, line: 514, baseType: !3978, size: 64, offset: 576)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !3969, file: !115, line: 515, baseType: !3978, size: 64, offset: 640)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !3969, file: !115, line: 517, baseType: !3989, size: 64, offset: 704)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!130, !3949, !3992, !314}
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1510)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !3969, file: !115, line: 518, baseType: !3995, size: 64, offset: 768)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!130, !3949}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !3969, file: !115, line: 519, baseType: !3999, size: 64, offset: 832)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{!130, !3949, !7}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !3969, file: !115, line: 520, baseType: !3999, size: 64, offset: 896)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !3969, file: !115, line: 522, baseType: !3978, size: 64, offset: 960)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !3969, file: !115, line: 523, baseType: !3978, size: 64, offset: 1024)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !3969, file: !115, line: 525, baseType: !3978, size: 64, offset: 1088)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !3969, file: !115, line: 526, baseType: !3978, size: 64, offset: 1152)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !3969, file: !115, line: 528, baseType: !3978, size: 64, offset: 1216)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !3969, file: !115, line: 529, baseType: !3978, size: 64, offset: 1280)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !3969, file: !115, line: 530, baseType: !3978, size: 64, offset: 1344)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !3969, file: !115, line: 532, baseType: !3978, size: 64, offset: 1408)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !3969, file: !115, line: 534, baseType: !4012, size: 64, offset: 1472)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = !DISubroutineType(types: !4014)
!4014 = !{null, !3949, !830}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !3969, file: !115, line: 535, baseType: !3995, size: 64, offset: 1536)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !3969, file: !115, line: 536, baseType: !3978, size: 64, offset: 1600)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !3969, file: !115, line: 538, baseType: !4018, size: 64, offset: 1664)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{null, !3949, !4021}
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4022 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !115, line: 29, flags: DIFlagFwdDecl)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !3969, file: !115, line: 539, baseType: !4018, size: 64, offset: 1728)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !3969, file: !115, line: 541, baseType: !4025, size: 64, offset: 1792)
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4026, size: 64)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{!130, !3949, !107, !1044}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !3969, file: !115, line: 542, baseType: !4029, size: 64, offset: 1856)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{!130, !3949, !107, !314}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !3969, file: !115, line: 544, baseType: !4033, size: 64, offset: 1920)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!130, !3949, !258}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !3969, file: !115, line: 546, baseType: !4037, size: 64, offset: 1984)
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4038, size: 64)
!4038 = !DISubroutineType(types: !4039)
!4039 = !{null, !3949, !7}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !3969, file: !115, line: 547, baseType: !4041, size: 64, offset: 2048)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{null, !3949, !3992}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !3969, file: !115, line: 549, baseType: !3995, size: 64, offset: 2112)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !3969, file: !115, line: 550, baseType: !3978, size: 64, offset: 2176)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3969, file: !115, line: 552, baseType: !265, size: 64, offset: 2240)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !3950, file: !115, line: 181, baseType: !3783, size: 64, offset: 256)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !3950, file: !115, line: 183, baseType: !3949, size: 64, offset: 320)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !3950, file: !115, line: 185, baseType: !258, size: 64, offset: 384)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3791, file: !94, line: 122, baseType: !4051, size: 64, offset: 512)
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4052, size: 64)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{null, !3783, !3949}
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3791, file: !94, line: 123, baseType: !4055, size: 64, offset: 576)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!130, !3783, !3915, !271, !2819}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3784, file: !94, line: 166, baseType: !258, size: 64, offset: 256)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3784, file: !94, line: 167, baseType: !7, size: 32, offset: 320)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3784, file: !94, line: 168, baseType: !7, size: 32, offset: 352)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3784, file: !94, line: 171, baseType: !3810, size: 64, offset: 384)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3784, file: !94, line: 172, baseType: !93, size: 32, offset: 448)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3784, file: !94, line: 173, baseType: !4064, size: 64, offset: 512)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !115, line: 1101, size: 192, elements: !4066)
!4066 = !{!4067, !4068, !4069, !4070, !4071, !4072}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_per_chip", scope: !4065, file: !115, line: 1102, baseType: !7, size: 32)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !4065, file: !115, line: 1103, baseType: !7, size: 32, offset: 32)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_clear", scope: !4065, file: !115, line: 1104, baseType: !7, size: 32, offset: 64)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_set", scope: !4065, file: !115, line: 1105, baseType: !7, size: 32, offset: 96)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "gc_flags", scope: !4065, file: !115, line: 1106, baseType: !114, size: 32, offset: 128)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4065, file: !115, line: 1107, baseType: !4073, offset: 192)
!4073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4074, elements: !2467)
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_generic", file: !115, line: 1051, size: 960, elements: !4076)
!4076 = !{!4077, !4078, !4079, !4083, !4087, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4075, file: !115, line: 1052, baseType: !895)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "reg_base", scope: !4075, file: !115, line: 1053, baseType: !258, size: 64)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "reg_readl", scope: !4075, file: !115, line: 1054, baseType: !4080, size: 64, offset: 64)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!244, !258}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "reg_writel", scope: !4075, file: !115, line: 1055, baseType: !4084, size: 64, offset: 128)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{null, !244, !258}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4075, file: !115, line: 1056, baseType: !4088, size: 64, offset: 192)
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4089 = !DISubroutineType(types: !4090)
!4090 = !{null, !4074}
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4075, file: !115, line: 1057, baseType: !4088, size: 64, offset: 256)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !4075, file: !115, line: 1058, baseType: !7, size: 32, offset: 320)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cnt", scope: !4075, file: !115, line: 1059, baseType: !7, size: 32, offset: 352)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !4075, file: !115, line: 1060, baseType: !244, size: 32, offset: 384)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "type_cache", scope: !4075, file: !115, line: 1061, baseType: !244, size: 32, offset: 416)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "polarity_cache", scope: !4075, file: !115, line: 1062, baseType: !244, size: 32, offset: 448)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "wake_enabled", scope: !4075, file: !115, line: 1063, baseType: !244, size: 32, offset: 480)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "wake_active", scope: !4075, file: !115, line: 1064, baseType: !244, size: 32, offset: 512)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "num_ct", scope: !4075, file: !115, line: 1065, baseType: !7, size: 32, offset: 544)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4075, file: !115, line: 1066, baseType: !258, size: 64, offset: 576)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "installed", scope: !4075, file: !115, line: 1067, baseType: !265, size: 64, offset: 640)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4075, file: !115, line: 1068, baseType: !265, size: 64, offset: 704)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !4075, file: !115, line: 1069, baseType: !3783, size: 64, offset: 768)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4075, file: !115, line: 1070, baseType: !300, size: 128, offset: 832)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "chip_types", scope: !4075, file: !115, line: 1071, baseType: !4106, offset: 960)
!4106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4107, elements: !2467)
!4107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_type", file: !115, line: 1009, size: 2944, elements: !4108)
!4108 = !{!4109, !4110, !4120, !4186, !4187, !4188}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !4107, file: !115, line: 1010, baseType: !3969, size: 2304)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4107, file: !115, line: 1011, baseType: !4111, size: 448, offset: 2304)
!4111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_regs", file: !115, line: 986, size: 448, elements: !4112)
!4112 = !{!4113, !4114, !4115, !4116, !4117, !4118, !4119}
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !4111, file: !115, line: 987, baseType: !265, size: 64)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !4111, file: !115, line: 988, baseType: !265, size: 64, offset: 64)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4111, file: !115, line: 989, baseType: !265, size: 64, offset: 128)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !4111, file: !115, line: 990, baseType: !265, size: 64, offset: 192)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "eoi", scope: !4111, file: !115, line: 991, baseType: !265, size: 64, offset: 256)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4111, file: !115, line: 992, baseType: !265, size: 64, offset: 320)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !4111, file: !115, line: 993, baseType: !265, size: 64, offset: 384)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4107, file: !115, line: 1012, baseType: !4121, size: 64, offset: 2752)
!4121 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_flow_handler_t", file: !4122, line: 12, baseType: !4123)
!4122 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{null, !4126}
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4127, size: 64)
!4127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_desc", file: !4128, line: 55, size: 2880, elements: !4129)
!4128 = !DIFile(filename: "./include/linux/irqdesc.h", directory: "/home/lizy2001/genbc/linux")
!4129 = !{!4130, !4131, !4132, !4133, !4134, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "irq_common_data", scope: !4127, file: !4128, line: 56, baseType: !3957, size: 256)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "irq_data", scope: !4127, file: !4128, line: 57, baseType: !3950, size: 448, offset: 256)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "kstat_irqs", scope: !4127, file: !4128, line: 58, baseType: !2819, size: 64, offset: 704)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !4127, file: !4128, line: 59, baseType: !4121, size: 64, offset: 768)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4127, file: !4128, line: 60, baseType: !4135, size: 64, offset: 832)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irqaction", file: !108, line: 110, size: 768, elements: !4137)
!4137 = !{!4138, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4136, file: !108, line: 111, baseType: !4139, size: 64)
!4139 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !108, line: 92, baseType: !4140)
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{!4143, !130, !258}
!4143 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !123, line: 17, baseType: !122)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4136, file: !108, line: 112, baseType: !258, size: 64, offset: 64)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_dev_id", scope: !4136, file: !108, line: 113, baseType: !258, size: 64, offset: 128)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4136, file: !108, line: 114, baseType: !4135, size: 64, offset: 192)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "thread_fn", scope: !4136, file: !108, line: 115, baseType: !4139, size: 64, offset: 256)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !4136, file: !108, line: 116, baseType: !1366, size: 64, offset: 320)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4136, file: !108, line: 117, baseType: !4135, size: 64, offset: 384)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4136, file: !108, line: 118, baseType: !7, size: 32, offset: 448)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4136, file: !108, line: 119, baseType: !7, size: 32, offset: 480)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "thread_flags", scope: !4136, file: !108, line: 120, baseType: !265, size: 64, offset: 512)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "thread_mask", scope: !4136, file: !108, line: 121, baseType: !265, size: 64, offset: 576)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4136, file: !108, line: 122, baseType: !324, size: 64, offset: 640)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4136, file: !108, line: 123, baseType: !4156, size: 64, offset: 704)
!4156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!4157 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !108, line: 123, flags: DIFlagFwdDecl)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "status_use_accessors", scope: !4127, file: !4128, line: 61, baseType: !7, size: 32, offset: 896)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "core_internal_state__do_not_mess_with_it", scope: !4127, file: !4128, line: 62, baseType: !7, size: 32, offset: 928)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4127, file: !4128, line: 63, baseType: !7, size: 32, offset: 960)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "wake_depth", scope: !4127, file: !4128, line: 64, baseType: !7, size: 32, offset: 992)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "tot_count", scope: !4127, file: !4128, line: 65, baseType: !7, size: 32, offset: 1024)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !4127, file: !4128, line: 66, baseType: !7, size: 32, offset: 1056)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "last_unhandled", scope: !4127, file: !4128, line: 67, baseType: !265, size: 64, offset: 1088)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_unhandled", scope: !4127, file: !4128, line: 68, baseType: !7, size: 32, offset: 1152)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled", scope: !4127, file: !4128, line: 69, baseType: !293, size: 32, offset: 1184)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled_last", scope: !4127, file: !4128, line: 70, baseType: !130, size: 32, offset: 1216)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4127, file: !4128, line: 71, baseType: !895, offset: 1248)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_enabled", scope: !4127, file: !4128, line: 72, baseType: !4170, size: 64, offset: 1280)
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_affinity", scope: !4127, file: !4128, line: 73, baseType: !3992, size: 64, offset: 1344)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "threads_oneshot", scope: !4127, file: !4128, line: 81, baseType: !265, size: 64, offset: 1408)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "threads_active", scope: !4127, file: !4128, line: 82, baseType: !293, size: 32, offset: 1472)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_threads", scope: !4127, file: !4128, line: 83, baseType: !1620, size: 128, offset: 1536)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "nr_actions", scope: !4127, file: !4128, line: 85, baseType: !7, size: 32, offset: 1664)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "no_suspend_depth", scope: !4127, file: !4128, line: 86, baseType: !7, size: 32, offset: 1696)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "cond_suspend_depth", scope: !4127, file: !4128, line: 87, baseType: !7, size: 32, offset: 1728)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "force_resume_depth", scope: !4127, file: !4128, line: 88, baseType: !7, size: 32, offset: 1760)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4127, file: !4128, line: 91, baseType: !4156, size: 64, offset: 1792)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4127, file: !4128, line: 98, baseType: !490, size: 128, align: 64, offset: 1856)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4127, file: !4128, line: 99, baseType: !349, size: 512, offset: 1984)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "request_mutex", scope: !4127, file: !4128, line: 101, baseType: !1326, size: 192, offset: 2496)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "parent_irq", scope: !4127, file: !4128, line: 102, baseType: !130, size: 32, offset: 2688)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4127, file: !4128, line: 103, baseType: !240, size: 64, offset: 2752)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4127, file: !4128, line: 104, baseType: !324, size: 64, offset: 2816)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4107, file: !115, line: 1013, baseType: !244, size: 32, offset: 2816)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache_priv", scope: !4107, file: !115, line: 1014, baseType: !244, size: 32, offset: 2848)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !4107, file: !115, line: 1015, baseType: !243, size: 64, offset: 2880)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3784, file: !94, line: 175, baseType: !3783, size: 64, offset: 576)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3784, file: !94, line: 182, baseType: !3926, size: 64, offset: 640)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3784, file: !94, line: 183, baseType: !7, size: 32, offset: 704)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3784, file: !94, line: 184, baseType: !7, size: 32, offset: 736)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3784, file: !94, line: 185, baseType: !858, size: 128, offset: 768)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3784, file: !94, line: 186, baseType: !1326, size: 192, offset: 896)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3784, file: !94, line: 187, baseType: !4196, offset: 1088)
!4196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2467)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !346, file: !73, line: 499, baseType: !300, size: 128, offset: 4224)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !346, file: !73, line: 502, baseType: !4199, size: 64, offset: 4352)
!4199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4200, size: 64)
!4200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4201)
!4201 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !346, file: !73, line: 504, baseType: !4203, size: 64, offset: 4416)
!4203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !346, file: !73, line: 505, baseType: !542, size: 64, offset: 4480)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !346, file: !73, line: 510, baseType: !542, size: 64, offset: 4544)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !346, file: !73, line: 511, baseType: !4207, size: 64, offset: 4608)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64)
!4208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4209)
!4209 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !346, file: !73, line: 513, baseType: !4211, size: 64, offset: 4672)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !4213)
!4213 = !{!4214, !4215}
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4212, file: !73, line: 293, baseType: !7, size: 32)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4212, file: !73, line: 294, baseType: !265, size: 64, offset: 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !346, file: !73, line: 515, baseType: !300, size: 128, offset: 4736)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !346, file: !73, line: 526, baseType: !4218, offset: 4864)
!4218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4219, line: 5, elements: !376)
!4219 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !346, file: !73, line: 528, baseType: !3797, size: 64, offset: 4864)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !346, file: !73, line: 529, baseType: !3810, size: 64, offset: 4928)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !346, file: !73, line: 534, baseType: !632, size: 32, offset: 4992)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !346, file: !73, line: 535, baseType: !244, size: 32, offset: 5024)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !346, file: !73, line: 537, baseType: !362, offset: 5056)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !346, file: !73, line: 538, baseType: !300, size: 128, offset: 5056)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !346, file: !73, line: 540, baseType: !4227, size: 64, offset: 5184)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 64)
!4228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4229, line: 54, size: 960, elements: !4230)
!4229 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4230 = !{!4231, !4232, !4233, !4234, !4235, !4236, !4237, !4241, !4245, !4246, !4247, !4248, !4252, !4256, !4257}
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4228, file: !4229, line: 55, baseType: !324, size: 64)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4228, file: !4229, line: 56, baseType: !240, size: 64, offset: 64)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4228, file: !4229, line: 58, baseType: !453, size: 64, offset: 128)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4228, file: !4229, line: 59, baseType: !453, size: 64, offset: 192)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4228, file: !4229, line: 60, baseType: !355, size: 64, offset: 256)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4228, file: !4229, line: 62, baseType: !3517, size: 64, offset: 320)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4228, file: !4229, line: 63, baseType: !4238, size: 64, offset: 384)
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4239, size: 64)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!267, !345, !3524}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4228, file: !4229, line: 65, baseType: !4242, size: 64, offset: 448)
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4243, size: 64)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{null, !4227}
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4228, file: !4229, line: 66, baseType: !3526, size: 64, offset: 512)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4228, file: !4229, line: 68, baseType: !3535, size: 64, offset: 576)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4228, file: !4229, line: 70, baseType: !3325, size: 64, offset: 640)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4228, file: !4229, line: 71, baseType: !4249, size: 64, offset: 704)
!4249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4250, size: 64)
!4250 = !DISubroutineType(types: !4251)
!4251 = !{!2263, !345}
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4228, file: !4229, line: 73, baseType: !4253, size: 64, offset: 768)
!4253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4254, size: 64)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{null, !345, !3357, !3358}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4228, file: !4229, line: 75, baseType: !3530, size: 64, offset: 832)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4228, file: !4229, line: 77, baseType: !3647, size: 64, offset: 896)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !346, file: !73, line: 541, baseType: !453, size: 64, offset: 5248)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !346, file: !73, line: 543, baseType: !3526, size: 64, offset: 5312)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !346, file: !73, line: 544, baseType: !4261, size: 64, offset: 5376)
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !346, file: !73, line: 545, baseType: !4264, size: 64, offset: 5440)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !346, file: !73, line: 547, baseType: !314, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !346, file: !73, line: 548, baseType: !314, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !346, file: !73, line: 549, baseType: !314, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !346, file: !73, line: 550, baseType: !314, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !281, file: !138, line: 863, baseType: !240, size: 64, offset: 960)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "chan_ida", scope: !281, file: !138, line: 864, baseType: !4272, size: 128, offset: 1024)
!4272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3386, line: 244, size: 128, elements: !4273)
!4273 = !{!4274}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4272, file: !3386, line: 245, baseType: !858, size: 128)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mutex", scope: !281, file: !138, line: 865, baseType: !1326, size: 192, offset: 1152)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !281, file: !138, line: 867, baseType: !244, size: 32, offset: 1344)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !281, file: !138, line: 868, baseType: !244, size: 32, offset: 1376)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !281, file: !138, line: 869, baseType: !244, size: 32, offset: 1408)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !281, file: !138, line: 870, baseType: !244, size: 32, offset: 1440)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !281, file: !138, line: 871, baseType: !244, size: 32, offset: 1472)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !281, file: !138, line: 872, baseType: !244, size: 32, offset: 1504)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !281, file: !138, line: 873, baseType: !314, size: 8, offset: 1536)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !281, file: !138, line: 874, baseType: !152, size: 32, offset: 1568)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "device_alloc_chan_resources", scope: !281, file: !138, line: 876, baseType: !4285, size: 64, offset: 1600)
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4286, size: 64)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!130, !316}
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "device_free_chan_resources", scope: !281, file: !138, line: 877, baseType: !4289, size: 64, offset: 1664)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{null, !316}
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memcpy", scope: !281, file: !138, line: 879, baseType: !4293, size: 64, offset: 1728)
!4293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4294, size: 64)
!4294 = !DISubroutineType(types: !4295)
!4295 = !{!4296, !316, !1073, !1073, !447, !265}
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_async_tx_descriptor", file: !138, line: 598, size: 704, elements: !4298)
!4298 = !{!4299, !4301, !4302, !4303, !4304, !4308, !4312, !4314, !4325, !4326, !4339, !4340}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !4297, file: !138, line: 599, baseType: !4300, size: 32)
!4300 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cookie_t", file: !138, line: 22, baseType: !1583)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4297, file: !138, line: 600, baseType: !157, size: 32, offset: 32)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !4297, file: !138, line: 601, baseType: !1073, size: 64, offset: 64)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4297, file: !138, line: 602, baseType: !316, size: 64, offset: 128)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "tx_submit", scope: !4297, file: !138, line: 603, baseType: !4305, size: 64, offset: 192)
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4306, size: 64)
!4306 = !DISubroutineType(types: !4307)
!4307 = !{!4300, !4296}
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "desc_free", scope: !4297, file: !138, line: 604, baseType: !4309, size: 64, offset: 256)
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4310, size: 64)
!4310 = !DISubroutineType(types: !4311)
!4311 = !{!130, !4296}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4297, file: !138, line: 605, baseType: !4313, size: 64, offset: 320)
!4313 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback", file: !138, line: 531, baseType: !589)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "callback_result", scope: !4297, file: !138, line: 606, baseType: !4315, size: 64, offset: 384)
!4315 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback_result", file: !138, line: 545, baseType: !4316)
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4317, size: 64)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{null, !258, !4319}
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4320, size: 64)
!4320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4321)
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_result", file: !138, line: 540, size: 64, elements: !4322)
!4322 = !{!4323, !4324}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4321, file: !138, line: 541, baseType: !169, size: 32)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !4321, file: !138, line: 542, baseType: !244, size: 32, offset: 32)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "callback_param", scope: !4297, file: !138, line: 607, baseType: !258, size: 64, offset: 448)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4297, file: !138, line: 608, baseType: !4327, size: 64, offset: 512)
!4327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4328, size: 64)
!4328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_unmap_data", file: !138, line: 548, size: 256, elements: !4329)
!4329 = !{!4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337}
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "map_cnt", scope: !4328, file: !138, line: 552, baseType: !1495, size: 8)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "to_cnt", scope: !4328, file: !138, line: 554, baseType: !1495, size: 8, offset: 8)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "from_cnt", scope: !4328, file: !138, line: 555, baseType: !1495, size: 8, offset: 16)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "bidi_cnt", scope: !4328, file: !138, line: 556, baseType: !1495, size: 8, offset: 24)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4328, file: !138, line: 557, baseType: !345, size: 64, offset: 64)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4328, file: !138, line: 558, baseType: !284, size: 32, offset: 128)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4328, file: !138, line: 559, baseType: !447, size: 64, offset: 192)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4328, file: !138, line: 560, baseType: !4338, offset: 256)
!4338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1073, elements: !2467)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_mode", scope: !4297, file: !138, line: 609, baseType: !137, size: 32, offset: 576)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_ops", scope: !4297, file: !138, line: 610, baseType: !4341, size: 64, offset: 640)
!4341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4342, size: 64)
!4342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_descriptor_metadata_ops", file: !138, line: 565, size: 192, elements: !4343)
!4343 = !{!4344, !4348, !4353}
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4342, file: !138, line: 566, baseType: !4345, size: 64)
!4345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 64)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!130, !4296, !258, !447}
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "get_ptr", scope: !4342, file: !138, line: 569, baseType: !4349, size: 64, offset: 64)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{!258, !4296, !4352, !4352}
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "set_len", scope: !4342, file: !138, line: 571, baseType: !4354, size: 64, offset: 128)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!130, !4296, !447}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor", scope: !281, file: !138, line: 882, baseType: !4358, size: 64, offset: 1792)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!4296, !316, !1073, !4361, !7, !447, !265}
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor_val", scope: !281, file: !138, line: 885, baseType: !4363, size: 64, offset: 1856)
!4363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4364, size: 64)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{!4296, !316, !4361, !7, !447, !4366, !265}
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq", scope: !281, file: !138, line: 888, baseType: !4368, size: 64, offset: 1920)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4369 = !DISubroutineType(types: !4370)
!4370 = !{!4296, !316, !4361, !4361, !7, !546, !447, !265}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq_val", scope: !281, file: !138, line: 892, baseType: !4372, size: 64, offset: 1984)
!4372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4373, size: 64)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{!4296, !316, !4361, !4361, !7, !546, !447, !4366, !265}
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset", scope: !281, file: !138, line: 896, baseType: !4376, size: 64, offset: 2048)
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4377 = !DISubroutineType(types: !4378)
!4378 = !{!4296, !316, !1073, !130, !447, !265}
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset_sg", scope: !281, file: !138, line: 899, baseType: !4380, size: 64, offset: 2112)
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4381, size: 64)
!4381 = !DISubroutineType(types: !4382)
!4382 = !{!4296, !316, !4383, !7, !130, !265}
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 64)
!4384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4385, line: 11, size: 256, elements: !4386)
!4385 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4386 = !{!4387, !4388, !4389, !4390, !4391}
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4384, file: !4385, line: 12, baseType: !265, size: 64)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4384, file: !4385, line: 13, baseType: !7, size: 32, offset: 64)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4384, file: !4385, line: 14, baseType: !7, size: 32, offset: 96)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4384, file: !4385, line: 15, baseType: !1073, size: 64, offset: 128)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4384, file: !4385, line: 17, baseType: !7, size: 32, offset: 192)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_interrupt", scope: !281, file: !138, line: 902, baseType: !4393, size: 64, offset: 2176)
!4393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 64)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{!4296, !316, !265}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_slave_sg", scope: !281, file: !138, line: 905, baseType: !4397, size: 64, offset: 2240)
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4398 = !DISubroutineType(types: !4399)
!4399 = !{!4296, !316, !4383, !7, !179, !265, !258}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_cyclic", scope: !281, file: !138, line: 909, baseType: !4401, size: 64, offset: 2304)
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 64)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{!4296, !316, !1073, !447, !447, !179, !265}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_interleaved_dma", scope: !281, file: !138, line: 913, baseType: !4405, size: 64, offset: 2368)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!4296, !316, !4408, !265}
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 64)
!4409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_interleaved_template", file: !138, line: 150, size: 320, elements: !4410)
!4410 = !{!4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420}
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "src_start", scope: !4409, file: !138, line: 151, baseType: !1073, size: 64)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "dst_start", scope: !4409, file: !138, line: 152, baseType: !1073, size: 64, offset: 64)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4409, file: !138, line: 153, baseType: !179, size: 32, offset: 128)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "src_inc", scope: !4409, file: !138, line: 154, baseType: !314, size: 8, offset: 160)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "dst_inc", scope: !4409, file: !138, line: 155, baseType: !314, size: 8, offset: 168)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "src_sgl", scope: !4409, file: !138, line: 156, baseType: !314, size: 8, offset: 176)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "dst_sgl", scope: !4409, file: !138, line: 157, baseType: !314, size: 8, offset: 184)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "numf", scope: !4409, file: !138, line: 158, baseType: !447, size: 64, offset: 192)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !4409, file: !138, line: 159, baseType: !447, size: 64, offset: 256)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !4409, file: !138, line: 160, baseType: !4421, offset: 320)
!4421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4422, elements: !2467)
!4422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_chunk", file: !138, line: 125, size: 256, elements: !4423)
!4423 = !{!4424, !4425, !4426, !4427}
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4422, file: !138, line: 126, baseType: !447, size: 64)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "icg", scope: !4422, file: !138, line: 127, baseType: !447, size: 64, offset: 64)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "dst_icg", scope: !4422, file: !138, line: 128, baseType: !447, size: 64, offset: 128)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "src_icg", scope: !4422, file: !138, line: 129, baseType: !447, size: 64, offset: 192)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_imm_data", scope: !281, file: !138, line: 916, baseType: !4429, size: 64, offset: 2432)
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 64)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{!4296, !316, !1073, !542, !265}
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "device_caps", scope: !281, file: !138, line: 920, baseType: !4433, size: 64, offset: 2496)
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4434, size: 64)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{null, !316, !4436}
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_caps", file: !138, line: 497, size: 288, elements: !4438)
!4438 = !{!4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !4437, file: !138, line: 498, baseType: !244, size: 32)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !4437, file: !138, line: 499, baseType: !244, size: 32, offset: 32)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !4437, file: !138, line: 500, baseType: !244, size: 32, offset: 64)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !4437, file: !138, line: 501, baseType: !244, size: 32, offset: 96)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !4437, file: !138, line: 502, baseType: !244, size: 32, offset: 128)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !4437, file: !138, line: 503, baseType: !244, size: 32, offset: 160)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pause", scope: !4437, file: !138, line: 504, baseType: !314, size: 8, offset: 192)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_resume", scope: !4437, file: !138, line: 505, baseType: !314, size: 8, offset: 200)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_terminate", scope: !4437, file: !138, line: 506, baseType: !314, size: 8, offset: 208)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !4437, file: !138, line: 507, baseType: !152, size: 32, offset: 224)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !4437, file: !138, line: 508, baseType: !314, size: 8, offset: 256)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "device_config", scope: !281, file: !138, line: 922, baseType: !4451, size: 64, offset: 2560)
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4452, size: 64)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{!130, !316, !4454}
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_config", file: !138, line: 434, size: 448, elements: !4456)
!4456 = !{!4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !4455, file: !138, line: 435, baseType: !179, size: 32)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr", scope: !4455, file: !138, line: 436, baseType: !2261, size: 64, offset: 64)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr", scope: !4455, file: !138, line: 437, baseType: !2261, size: 64, offset: 128)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_width", scope: !4455, file: !138, line: 438, baseType: !186, size: 32, offset: 192)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_width", scope: !4455, file: !138, line: 439, baseType: !186, size: 32, offset: 224)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "src_maxburst", scope: !4455, file: !138, line: 440, baseType: !244, size: 32, offset: 256)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "dst_maxburst", scope: !4455, file: !138, line: 441, baseType: !244, size: 32, offset: 288)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "src_port_window_size", scope: !4455, file: !138, line: 442, baseType: !244, size: 32, offset: 320)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "dst_port_window_size", scope: !4455, file: !138, line: 443, baseType: !244, size: 32, offset: 352)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "device_fc", scope: !4455, file: !138, line: 444, baseType: !314, size: 8, offset: 384)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "slave_id", scope: !4455, file: !138, line: 445, baseType: !7, size: 32, offset: 416)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "device_pause", scope: !281, file: !138, line: 924, baseType: !4285, size: 64, offset: 2624)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "device_resume", scope: !281, file: !138, line: 925, baseType: !4285, size: 64, offset: 2688)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "device_terminate_all", scope: !281, file: !138, line: 926, baseType: !4285, size: 64, offset: 2752)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "device_synchronize", scope: !281, file: !138, line: 927, baseType: !4289, size: 64, offset: 2816)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "device_tx_status", scope: !281, file: !138, line: 929, baseType: !4473, size: 64, offset: 2880)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 64)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{!197, !316, !4300, !4476}
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 64)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_tx_state", file: !138, line: 721, size: 128, elements: !4478)
!4478 = !{!4479, !4480, !4481, !4482}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4477, file: !138, line: 722, baseType: !4300, size: 32)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4477, file: !138, line: 723, baseType: !4300, size: 32, offset: 32)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !4477, file: !138, line: 724, baseType: !244, size: 32, offset: 64)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "in_flight_bytes", scope: !4477, file: !138, line: 725, baseType: !244, size: 32, offset: 96)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "device_issue_pending", scope: !281, file: !138, line: 932, baseType: !4289, size: 64, offset: 2944)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "device_release", scope: !281, file: !138, line: 933, baseType: !4485, size: 64, offset: 3008)
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4486, size: 64)
!4486 = !DISubroutineType(types: !4487)
!4487 = !{null, !280}
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !277, file: !138, line: 331, baseType: !345, size: 64, offset: 64)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !277, file: !138, line: 332, baseType: !4300, size: 32, offset: 128)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "completed_cookie", scope: !277, file: !138, line: 333, baseType: !4300, size: 32, offset: 160)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "chan_id", scope: !277, file: !138, line: 336, baseType: !130, size: 32, offset: 192)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !277, file: !138, line: 337, baseType: !4493, size: 64, offset: 256)
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 64)
!4494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_dev", file: !138, line: 361, size: 5696, elements: !4495)
!4495 = !{!4496, !4497, !4498}
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4494, file: !138, line: 362, baseType: !316, size: 64)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4494, file: !138, line: 363, baseType: !346, size: 5568, offset: 64)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4494, file: !138, line: 364, baseType: !130, size: 32, offset: 5632)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !277, file: !138, line: 338, baseType: !324, size: 64, offset: 320)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "device_node", scope: !277, file: !138, line: 343, baseType: !300, size: 128, offset: 384)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !277, file: !138, line: 344, baseType: !4502, size: 64, offset: 512)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4503, size: 64)
!4503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_percpu", file: !138, line: 294, size: 128, elements: !4504)
!4504 = !{!4505, !4506}
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "memcpy_count", scope: !4503, file: !138, line: 296, baseType: !265, size: 64)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_transferred", scope: !4503, file: !138, line: 297, baseType: !265, size: 64, offset: 64)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "client_count", scope: !277, file: !138, line: 345, baseType: !130, size: 32, offset: 576)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "table_count", scope: !277, file: !138, line: 346, baseType: !130, size: 32, offset: 608)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "router", scope: !277, file: !138, line: 349, baseType: !4510, size: 64, offset: 640)
!4510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4511, size: 64)
!4511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_router", file: !138, line: 305, size: 128, elements: !4512)
!4512 = !{!4513, !4514}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4511, file: !138, line: 306, baseType: !345, size: 64)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "route_free", scope: !4511, file: !138, line: 307, baseType: !4515, size: 64, offset: 64)
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = !DISubroutineType(types: !4517)
!4517 = !{null, !345, !258}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "route_data", scope: !277, file: !138, line: 350, baseType: !258, size: 64, offset: 704)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !277, file: !138, line: 352, baseType: !258, size: 64, offset: 768)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !273, file: !274, line: 24, baseType: !4521, size: 320, offset: 832)
!4521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !108, line: 609, size: 320, elements: !4522)
!4522 = !{!4523, !4525, !4526, !4527, !4528, !4539}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4521, file: !108, line: 611, baseType: !4524, size: 64)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4521, size: 64)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4521, file: !108, line: 612, baseType: !265, size: 64, offset: 64)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4521, file: !108, line: 613, baseType: !293, size: 32, offset: 128)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !4521, file: !108, line: 614, baseType: !314, size: 8, offset: 160)
!4528 = !DIDerivedType(tag: DW_TAG_member, scope: !4521, file: !108, line: 615, baseType: !4529, size: 64, offset: 192)
!4529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4521, file: !108, line: 615, size: 64, elements: !4530)
!4530 = !{!4531, !4535}
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4529, file: !108, line: 616, baseType: !4532, size: 64)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 64)
!4533 = !DISubroutineType(types: !4534)
!4534 = !{null, !265}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4529, file: !108, line: 617, baseType: !4536, size: 64)
!4536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4537, size: 64)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{null, !4524}
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4521, file: !108, line: 619, baseType: !265, size: 64, offset: 256)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "desc_free", scope: !273, file: !274, line: 25, baseType: !4541, size: 64, offset: 1152)
!4541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4542, size: 64)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{null, !4544}
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4545, size: 64)
!4545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "virt_dma_desc", file: !274, line: 15, size: 896, elements: !4546)
!4546 = !{!4547, !4548, !4549}
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4545, file: !274, line: 16, baseType: !4297, size: 704)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "tx_result", scope: !4545, file: !274, line: 17, baseType: !4321, size: 64, offset: 704)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4545, file: !274, line: 19, baseType: !300, size: 128, offset: 768)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !273, file: !274, line: 27, baseType: !362, offset: 1216)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "desc_allocated", scope: !273, file: !274, line: 30, baseType: !300, size: 128, offset: 1216)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "desc_submitted", scope: !273, file: !274, line: 31, baseType: !300, size: 128, offset: 1344)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "desc_issued", scope: !273, file: !274, line: 32, baseType: !300, size: 128, offset: 1472)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "desc_completed", scope: !273, file: !274, line: 33, baseType: !300, size: 128, offset: 1600)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "desc_terminated", scope: !273, file: !274, line: 34, baseType: !300, size: 128, offset: 1728)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic", scope: !273, file: !274, line: 36, baseType: !4544, size: 64, offset: 1856)
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!4558 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !303)
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4560, size: 64)
!4560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4558)
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4562, size: 64)
!4562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edma_desc", file: !3, line: 178, size: 1472, elements: !4563)
!4563 = !{!4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4637, !4638, !4639, !4640, !4641, !4642}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "vdesc", scope: !4562, file: !3, line: 179, baseType: !4545, size: 896)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4562, file: !3, line: 180, baseType: !300, size: 128, offset: 896)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !4562, file: !3, line: 181, baseType: !179, size: 32, offset: 1024)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic", scope: !4562, file: !3, line: 182, baseType: !130, size: 32, offset: 1056)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "polled", scope: !4562, file: !3, line: 183, baseType: !314, size: 8, offset: 1088)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "absync", scope: !4562, file: !3, line: 184, baseType: !130, size: 32, offset: 1120)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "pset_nr", scope: !4562, file: !3, line: 185, baseType: !130, size: 32, offset: 1152)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "echan", scope: !4562, file: !3, line: 186, baseType: !4572, size: 64, offset: 1216)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 64)
!4573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edma_chan", file: !3, line: 224, size: 3456, elements: !4574)
!4574 = !{!4575, !4576, !4577, !4578, !4629, !4630, !4631, !4632, !4633, !4635, !4636}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "vchan", scope: !4573, file: !3, line: 225, baseType: !273, size: 1920)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4573, file: !3, line: 226, baseType: !300, size: 128, offset: 1920)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "edesc", scope: !4573, file: !3, line: 227, baseType: !4561, size: 64, offset: 2048)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "ecc", scope: !4573, file: !3, line: 228, baseType: !4579, size: 64, offset: 2112)
!4579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4580, size: 64)
!4580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edma_cc", file: !3, line: 238, size: 4032, elements: !4581)
!4581 = !{!4582, !4583, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4628}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4580, file: !3, line: 239, baseType: !345, size: 64)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4580, file: !3, line: 240, baseType: !4584, size: 64, offset: 64)
!4584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4585, size: 64)
!4585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edma_soc_info", file: !129, line: 63, size: 448, elements: !4586)
!4586 = !{!4587, !4588, !4594, !4596, !4602, !4603, !4604}
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "default_queue", scope: !4585, file: !129, line: 69, baseType: !128, size: 32)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !4585, file: !129, line: 72, baseType: !4589, size: 64, offset: 64)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edma_rsv_info", file: !129, line: 54, size: 128, elements: !4591)
!4591 = !{!4592, !4593}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "rsv_chans", scope: !4590, file: !129, line: 56, baseType: !250, size: 64)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "rsv_slots", scope: !4590, file: !129, line: 57, baseType: !250, size: 64, offset: 64)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "memcpy_channels", scope: !4585, file: !129, line: 75, baseType: !4595, size: 64, offset: 128)
!4595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "queue_priority_mapping", scope: !4585, file: !129, line: 77, baseType: !4597, size: 64, offset: 192)
!4597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4598, size: 64)
!4598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4599, size: 16, elements: !256)
!4599 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !245, line: 16, baseType: !4600)
!4600 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !247, line: 20, baseType: !4601)
!4601 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "xbar_chans", scope: !4585, file: !129, line: 78, baseType: !250, size: 64, offset: 256)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "slave_map", scope: !4585, file: !129, line: 80, baseType: !319, size: 64, offset: 320)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "slavecnt", scope: !4585, file: !129, line: 81, baseType: !130, size: 32, offset: 384)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4580, file: !3, line: 241, baseType: !258, size: 64, offset: 128)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4580, file: !3, line: 242, baseType: !130, size: 32, offset: 192)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mode", scope: !4580, file: !3, line: 243, baseType: !314, size: 8, offset: 224)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "num_channels", scope: !4580, file: !3, line: 246, baseType: !7, size: 32, offset: 256)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "num_qchannels", scope: !4580, file: !3, line: 247, baseType: !7, size: 32, offset: 288)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "num_region", scope: !4580, file: !3, line: 248, baseType: !7, size: 32, offset: 320)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "num_slots", scope: !4580, file: !3, line: 249, baseType: !7, size: 32, offset: 352)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !4580, file: !3, line: 250, baseType: !7, size: 32, offset: 384)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "chmap_exist", scope: !4580, file: !3, line: 251, baseType: !314, size: 8, offset: 416)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "default_queue", scope: !4580, file: !3, line: 252, baseType: !128, size: 32, offset: 448)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "ccint", scope: !4580, file: !3, line: 254, baseType: !7, size: 32, offset: 480)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "ccerrint", scope: !4580, file: !3, line: 255, baseType: !7, size: 32, offset: 512)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "slot_inuse", scope: !4580, file: !3, line: 261, baseType: !271, size: 64, offset: 576)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "channels_mask", scope: !4580, file: !3, line: 268, baseType: !271, size: 64, offset: 640)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "dma_slave", scope: !4580, file: !3, line: 270, baseType: !281, size: 3072, offset: 704)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "dma_memcpy", scope: !4580, file: !3, line: 271, baseType: !280, size: 64, offset: 3776)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "slave_chans", scope: !4580, file: !3, line: 272, baseType: !4572, size: 64, offset: 3840)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "tc_list", scope: !4580, file: !3, line: 273, baseType: !4623, size: 64, offset: 3904)
!4623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4624, size: 64)
!4624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edma_tc", file: !3, line: 219, size: 128, elements: !4625)
!4625 = !{!4626, !4627}
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4624, file: !3, line: 220, baseType: !3797, size: 64)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4624, file: !3, line: 221, baseType: !260, size: 16, offset: 64)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "dummy_slot", scope: !4580, file: !3, line: 274, baseType: !130, size: 32, offset: 3968)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !4573, file: !3, line: 229, baseType: !4623, size: 64, offset: 2176)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "ch_num", scope: !4573, file: !3, line: 230, baseType: !130, size: 32, offset: 2240)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "alloced", scope: !4573, file: !3, line: 231, baseType: !314, size: 8, offset: 2272)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "hw_triggered", scope: !4573, file: !3, line: 232, baseType: !314, size: 8, offset: 2280)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4573, file: !3, line: 233, baseType: !4634, size: 640, offset: 2304)
!4634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 640, elements: !2337)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !4573, file: !3, line: 234, baseType: !130, size: 32, offset: 2944)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !4573, file: !3, line: 235, baseType: !4455, size: 448, offset: 3008)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "processed", scope: !4562, file: !3, line: 187, baseType: !130, size: 32, offset: 1280)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "processed_stat", scope: !4562, file: !3, line: 209, baseType: !130, size: 32, offset: 1312)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "sg_len", scope: !4562, file: !3, line: 210, baseType: !244, size: 32, offset: 1344)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !4562, file: !3, line: 211, baseType: !244, size: 32, offset: 1376)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "residue_stat", scope: !4562, file: !3, line: 212, baseType: !244, size: 32, offset: 1408)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "pset", scope: !4562, file: !3, line: 214, baseType: !4643, offset: 1472)
!4643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4644, elements: !2467)
!4644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edma_pset", file: !3, line: 172, size: 384, elements: !4645)
!4645 = !{!4646, !4647, !4648}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4644, file: !3, line: 173, baseType: !244, size: 32)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4644, file: !3, line: 174, baseType: !1073, size: 64, offset: 64)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4644, file: !3, line: 175, baseType: !4649, size: 256, offset: 128)
!4649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edmacc_param", file: !3, line: 148, size: 256, elements: !4650)
!4650 = !{!4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "opt", scope: !4649, file: !3, line: 149, baseType: !244, size: 32)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !4649, file: !3, line: 150, baseType: !244, size: 32, offset: 32)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "a_b_cnt", scope: !4649, file: !3, line: 151, baseType: !244, size: 32, offset: 64)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !4649, file: !3, line: 152, baseType: !244, size: 32, offset: 96)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "src_dst_bidx", scope: !4649, file: !3, line: 153, baseType: !244, size: 32, offset: 128)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "link_bcntrld", scope: !4649, file: !3, line: 154, baseType: !244, size: 32, offset: 160)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "src_dst_cidx", scope: !4649, file: !3, line: 155, baseType: !244, size: 32, offset: 192)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "ccnt", scope: !4649, file: !3, line: 156, baseType: !244, size: 32, offset: 224)
!4659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4660, size: 64)
!4660 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !268)
!4661 = !{!0, !4662, !4667, !4672, !4677, !4682, !4685, !4745, !4748, !4751, !4754, !4756, !4758}
!4662 = !DIGlobalVariableExpression(var: !4663, expr: !DIExpression())
!4663 = distinct !DIGlobalVariable(name: "__exitcall_edma_exit", scope: !2, file: !3, line: 2744, type: !4664, isLocal: true, isDefinition: true)
!4664 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4665, line: 117, baseType: !4666)
!4665 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!4667 = !DIGlobalVariableExpression(var: !4668, expr: !DIExpression())
!4668 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author257", scope: !2, file: !3, line: 2746, type: !4669, isLocal: true, isDefinition: true, align: 8)
!4669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 392, elements: !4670)
!4670 = !{!4671}
!4671 = !DISubrange(count: 49)
!4672 = !DIGlobalVariableExpression(var: !4673, expr: !DIExpression())
!4673 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description258", scope: !2, file: !3, line: 2747, type: !4674, isLocal: true, isDefinition: true, align: 8)
!4674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 344, elements: !4675)
!4675 = !{!4676}
!4676 = !DISubrange(count: 43)
!4677 = !DIGlobalVariableExpression(var: !4678, expr: !DIExpression())
!4678 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file259", scope: !2, file: !3, line: 2748, type: !4679, isLocal: true, isDefinition: true, align: 8)
!4679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 240, elements: !4680)
!4680 = !{!4681}
!4681 = !DISubrange(count: 30)
!4682 = !DIGlobalVariableExpression(var: !4683, expr: !DIExpression())
!4683 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license260", scope: !2, file: !3, line: 2748, type: !4684, isLocal: true, isDefinition: true, align: 8)
!4684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 160, elements: !2337)
!4685 = !DIGlobalVariableExpression(var: !4686, expr: !DIExpression())
!4686 = distinct !DIGlobalVariable(name: "edma_driver", scope: !2, file: !3, line: 2687, type: !4687, isLocal: true, isDefinition: true)
!4687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_driver", file: !4688, line: 200, size: 1600, elements: !4689)
!4688 = !DIFile(filename: "./include/linux/platform_device.h", directory: "/home/lizy2001/genbc/linux")
!4689 = !{!4690, !4732, !4733, !4737, !4741, !4742, !4743, !4744}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4687, file: !4688, line: 201, baseType: !4691, size: 64)
!4691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4692, size: 64)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!130, !4694}
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device", file: !4688, line: 22, size: 6208, elements: !4696)
!4696 = !{!4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4718, !4726, !4727, !4730}
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4695, file: !4688, line: 23, baseType: !324, size: 64)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4695, file: !4688, line: 24, baseType: !130, size: 32, offset: 64)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "id_auto", scope: !4695, file: !4688, line: 25, baseType: !314, size: 8, offset: 96)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4695, file: !4688, line: 26, baseType: !346, size: 5568, offset: 128)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "platform_dma_mask", scope: !4695, file: !4688, line: 27, baseType: !542, size: 64, offset: 5696)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4695, file: !4688, line: 28, baseType: !4212, size: 128, offset: 5760)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "num_resources", scope: !4695, file: !4688, line: 29, baseType: !244, size: 32, offset: 5888)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4695, file: !4688, line: 30, baseType: !4705, size: 64, offset: 5952)
!4705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4706, size: 64)
!4706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4707, line: 20, size: 512, elements: !4708)
!4707 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4708 = !{!4709, !4711, !4712, !4713, !4714, !4715, !4716, !4717}
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4706, file: !4707, line: 21, baseType: !4710, size: 64)
!4710 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !249, line: 158, baseType: !2261)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4706, file: !4707, line: 22, baseType: !4710, size: 64, offset: 64)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4706, file: !4707, line: 23, baseType: !324, size: 64, offset: 128)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4706, file: !4707, line: 24, baseType: !265, size: 64, offset: 192)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4706, file: !4707, line: 25, baseType: !265, size: 64, offset: 256)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4706, file: !4707, line: 26, baseType: !4705, size: 64, offset: 320)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4706, file: !4707, line: 26, baseType: !4705, size: 64, offset: 384)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4706, file: !4707, line: 26, baseType: !4705, size: 64, offset: 448)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "id_entry", scope: !4695, file: !4688, line: 32, baseType: !4719, size: 64, offset: 6016)
!4719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4720, size: 64)
!4720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4721)
!4721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device_id", file: !3588, line: 586, size: 256, elements: !4722)
!4722 = !{!4723, !4725}
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4721, file: !3588, line: 587, baseType: !4724, size: 160)
!4724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 160, elements: !2337)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4721, file: !3588, line: 588, baseType: !3607, size: 64, offset: 192)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4695, file: !4688, line: 33, baseType: !267, size: 64, offset: 6080)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "mfd_cell", scope: !4695, file: !4688, line: 36, baseType: !4728, size: 64, offset: 6144)
!4728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4729, size: 64)
!4729 = !DICompositeType(tag: DW_TAG_structure_type, name: "mfd_cell", file: !4688, line: 18, flags: DIFlagFwdDecl)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !4695, file: !4688, line: 39, baseType: !4731, offset: 6208)
!4731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pdev_archdata", file: !4219, line: 8, elements: !376)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4687, file: !4688, line: 202, baseType: !4691, size: 64, offset: 64)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4687, file: !4688, line: 203, baseType: !4734, size: 64, offset: 128)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{null, !4694}
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4687, file: !4688, line: 204, baseType: !4738, size: 64, offset: 192)
!4738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4739, size: 64)
!4739 = !DISubroutineType(types: !4740)
!4740 = !{!130, !4694, !3618}
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4687, file: !4688, line: 205, baseType: !4691, size: 64, offset: 256)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4687, file: !4688, line: 206, baseType: !3576, size: 1152, offset: 320)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4687, file: !4688, line: 207, baseType: !4719, size: 64, offset: 1472)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_deferred_probe", scope: !4687, file: !4688, line: 208, baseType: !314, size: 8, offset: 1536)
!4745 = !DIGlobalVariableExpression(var: !4746, expr: !DIExpression())
!4746 = distinct !DIGlobalVariable(name: "dummy_paramset", scope: !2, file: !3, line: 278, type: !4747, isLocal: true, isDefinition: true)
!4747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4649)
!4748 = !DIGlobalVariableExpression(var: !4749, expr: !DIExpression())
!4749 = distinct !DIGlobalVariable(name: "edma_of_ids", scope: !2, file: !3, line: 290, type: !4750, isLocal: true, isDefinition: true)
!4750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3586, size: 4800, elements: !403)
!4751 = !DIGlobalVariableExpression(var: !4752, expr: !DIExpression())
!4752 = distinct !DIGlobalVariable(name: "edma_binding_type", scope: !2, file: !3, line: 285, type: !4753, isLocal: true, isDefinition: true)
!4753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3936, size: 64, elements: !256)
!4754 = !DIGlobalVariableExpression(var: !4755, expr: !DIExpression())
!4755 = distinct !DIGlobalVariable(name: "edma_pm_ops", scope: !2, file: !3, line: 2683, type: !3531, isLocal: true, isDefinition: true)
!4756 = !DIGlobalVariableExpression(var: !4757, expr: !DIExpression())
!4757 = distinct !DIGlobalVariable(name: "edma_tptc_driver", scope: !2, file: !3, line: 2703, type: !4687, isLocal: true, isDefinition: true)
!4758 = !DIGlobalVariableExpression(var: !4759, expr: !DIExpression())
!4759 = distinct !DIGlobalVariable(name: "edma_tptc_of_ids", scope: !2, file: !3, line: 303, type: !4760, isLocal: true, isDefinition: true)
!4760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3586, size: 3200, elements: !256)
!4761 = !{!"rsp"}
!4762 = !{i32 7, !"Dwarf Version", i32 4}
!4763 = !{i32 2, !"Debug Info Version", i32 3}
!4764 = !{i32 1, !"wchar_size", i32 2}
!4765 = !{i32 1, !"Code Model", i32 2}
!4766 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4767 = distinct !DISubprogram(name: "edma_init", scope: !3, file: !3, line: 2727, type: !4768, scopeLine: 2728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!4768 = !DISubroutineType(types: !4769)
!4769 = !{!130}
!4770 = !DILocalVariable(name: "ret", scope: !4767, file: !3, line: 2729, type: !130)
!4771 = !DILocation(line: 2729, column: 6, scope: !4767)
!4772 = !DILocation(line: 2731, column: 8, scope: !4767)
!4773 = !DILocation(line: 2731, column: 6, scope: !4767)
!4774 = !DILocation(line: 2732, column: 6, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 2732, column: 6)
!4776 = !DILocation(line: 2732, column: 6, scope: !4767)
!4777 = !DILocation(line: 2733, column: 10, scope: !4775)
!4778 = !DILocation(line: 2733, column: 3, scope: !4775)
!4779 = !DILocation(line: 2735, column: 9, scope: !4767)
!4780 = !DILocation(line: 2735, column: 2, scope: !4767)
!4781 = !DILocation(line: 2736, column: 1, scope: !4767)
!4782 = distinct !DISubprogram(name: "edma_exit", scope: !3, file: !3, line: 2739, type: !2016, scopeLine: 2740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!4783 = !DILocation(line: 2741, column: 2, scope: !4782)
!4784 = !DILocation(line: 2742, column: 2, scope: !4782)
!4785 = !DILocation(line: 2743, column: 1, scope: !4782)
!4786 = distinct !DISubprogram(name: "edma_probe", scope: !3, file: !3, line: 2340, type: !4692, scopeLine: 2341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!4787 = !DILocalVariable(name: "map", arg: 1, scope: !4788, file: !4789, line: 419, type: !271)
!4788 = distinct !DISubprogram(name: "bitmap_clear", scope: !4789, file: !4789, line: 419, type: !4790, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!4789 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!4790 = !DISubroutineType(types: !4791)
!4791 = !{null, !271, !7, !7}
!4792 = !DILocation(line: 419, column: 57, scope: !4788, inlinedAt: !4793)
!4793 = distinct !DILocation(line: 2447, column: 5, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 2446, column: 4)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 2446, column: 4)
!4796 = distinct !DILexicalBlock(scope: !4797, file: !3, line: 2445, column: 17)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 2445, column: 7)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 2434, column: 17)
!4799 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2434, column: 6)
!4800 = !DILocalVariable(name: "start", arg: 2, scope: !4788, file: !4789, line: 419, type: !7)
!4801 = !DILocation(line: 419, column: 75, scope: !4788, inlinedAt: !4793)
!4802 = !DILocalVariable(name: "nbits", arg: 3, scope: !4788, file: !4789, line: 420, type: !7)
!4803 = !DILocation(line: 420, column: 16, scope: !4788, inlinedAt: !4793)
!4804 = !DILocalVariable(name: "map", arg: 1, scope: !4805, file: !4789, line: 405, type: !271)
!4805 = distinct !DISubprogram(name: "bitmap_set", scope: !4789, file: !4789, line: 405, type: !4790, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!4806 = !DILocation(line: 405, column: 55, scope: !4805, inlinedAt: !4807)
!4807 = distinct !DILocation(line: 2439, column: 5, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 2438, column: 4)
!4809 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 2438, column: 4)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 2437, column: 17)
!4811 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 2437, column: 7)
!4812 = !DILocalVariable(name: "start", arg: 2, scope: !4805, file: !4789, line: 405, type: !7)
!4813 = !DILocation(line: 405, column: 73, scope: !4805, inlinedAt: !4807)
!4814 = !DILocalVariable(name: "nbits", arg: 3, scope: !4805, file: !4789, line: 406, type: !7)
!4815 = !DILocation(line: 406, column: 16, scope: !4805, inlinedAt: !4807)
!4816 = !DILocalVariable(name: "pdev", arg: 1, scope: !4786, file: !3, line: 2340, type: !4694)
!4817 = !DILocation(line: 2340, column: 47, scope: !4786)
!4818 = !DILocalVariable(name: "info", scope: !4786, file: !3, line: 2342, type: !4584)
!4819 = !DILocation(line: 2342, column: 24, scope: !4786)
!4820 = !DILocation(line: 2342, column: 31, scope: !4786)
!4821 = !DILocation(line: 2342, column: 37, scope: !4786)
!4822 = !DILocation(line: 2342, column: 41, scope: !4786)
!4823 = !DILocalVariable(name: "queue_priority_mapping", scope: !4786, file: !3, line: 2343, type: !4597)
!4824 = !DILocation(line: 2343, column: 9, scope: !4786)
!4825 = !DILocalVariable(name: "reserved", scope: !4786, file: !3, line: 2344, type: !250)
!4826 = !DILocation(line: 2344, column: 15, scope: !4786)
!4827 = !DILocalVariable(name: "i", scope: !4786, file: !3, line: 2345, type: !130)
!4828 = !DILocation(line: 2345, column: 8, scope: !4786)
!4829 = !DILocalVariable(name: "irq", scope: !4786, file: !3, line: 2345, type: !130)
!4830 = !DILocation(line: 2345, column: 11, scope: !4786)
!4831 = !DILocalVariable(name: "irq_name", scope: !4786, file: !3, line: 2346, type: !267)
!4832 = !DILocation(line: 2346, column: 10, scope: !4786)
!4833 = !DILocalVariable(name: "mem", scope: !4786, file: !3, line: 2347, type: !4705)
!4834 = !DILocation(line: 2347, column: 20, scope: !4786)
!4835 = !DILocalVariable(name: "node", scope: !4786, file: !3, line: 2348, type: !3797)
!4836 = !DILocation(line: 2348, column: 22, scope: !4786)
!4837 = !DILocation(line: 2348, column: 29, scope: !4786)
!4838 = !DILocation(line: 2348, column: 35, scope: !4786)
!4839 = !DILocation(line: 2348, column: 39, scope: !4786)
!4840 = !DILocalVariable(name: "dev", scope: !4786, file: !3, line: 2349, type: !345)
!4841 = !DILocation(line: 2349, column: 18, scope: !4786)
!4842 = !DILocation(line: 2349, column: 25, scope: !4786)
!4843 = !DILocation(line: 2349, column: 31, scope: !4786)
!4844 = !DILocalVariable(name: "ecc", scope: !4786, file: !3, line: 2350, type: !4579)
!4845 = !DILocation(line: 2350, column: 19, scope: !4786)
!4846 = !DILocalVariable(name: "legacy_mode", scope: !4786, file: !3, line: 2351, type: !314)
!4847 = !DILocation(line: 2351, column: 9, scope: !4786)
!4848 = !DILocalVariable(name: "ret", scope: !4786, file: !3, line: 2352, type: !130)
!4849 = !DILocation(line: 2352, column: 6, scope: !4786)
!4850 = !DILocation(line: 2354, column: 6, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2354, column: 6)
!4852 = !DILocation(line: 2354, column: 6, scope: !4786)
!4853 = !DILocalVariable(name: "match", scope: !4854, file: !3, line: 2355, type: !3585)
!4854 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 2354, column: 12)
!4855 = !DILocation(line: 2355, column: 30, scope: !4854)
!4856 = !DILocation(line: 2357, column: 38, scope: !4854)
!4857 = !DILocation(line: 2357, column: 11, scope: !4854)
!4858 = !DILocation(line: 2357, column: 9, scope: !4854)
!4859 = !DILocation(line: 2358, column: 7, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 2358, column: 7)
!4861 = !DILocation(line: 2358, column: 13, scope: !4860)
!4862 = !DILocation(line: 2358, column: 25, scope: !4860)
!4863 = !DILocation(line: 2358, column: 32, scope: !4860)
!4864 = !DILocation(line: 2358, column: 18, scope: !4860)
!4865 = !DILocation(line: 2358, column: 17, scope: !4860)
!4866 = !DILocation(line: 2358, column: 38, scope: !4860)
!4867 = !DILocation(line: 2358, column: 7, scope: !4854)
!4868 = !DILocation(line: 2359, column: 16, scope: !4860)
!4869 = !DILocation(line: 2359, column: 4, scope: !4860)
!4870 = !DILocation(line: 2361, column: 34, scope: !4854)
!4871 = !DILocation(line: 2361, column: 39, scope: !4854)
!4872 = !DILocation(line: 2361, column: 10, scope: !4854)
!4873 = !DILocation(line: 2361, column: 8, scope: !4854)
!4874 = !DILocation(line: 2362, column: 14, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 2362, column: 7)
!4876 = !DILocation(line: 2362, column: 7, scope: !4875)
!4877 = !DILocation(line: 2362, column: 7, scope: !4854)
!4878 = !DILocation(line: 2363, column: 4, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 2362, column: 21)
!4880 = !DILocation(line: 2364, column: 19, scope: !4879)
!4881 = !DILocation(line: 2364, column: 11, scope: !4879)
!4882 = !DILocation(line: 2364, column: 4, scope: !4879)
!4883 = !DILocation(line: 2366, column: 2, scope: !4854)
!4884 = !DILocation(line: 2368, column: 7, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2368, column: 6)
!4886 = !DILocation(line: 2368, column: 6, scope: !4786)
!4887 = !DILocation(line: 2369, column: 3, scope: !4885)
!4888 = !DILocation(line: 2371, column: 34, scope: !4786)
!4889 = !DILocation(line: 2371, column: 8, scope: !4786)
!4890 = !DILocation(line: 2371, column: 6, scope: !4786)
!4891 = !DILocation(line: 2372, column: 6, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2372, column: 6)
!4893 = !DILocation(line: 2372, column: 6, scope: !4786)
!4894 = !DILocation(line: 2373, column: 10, scope: !4892)
!4895 = !DILocation(line: 2373, column: 3, scope: !4892)
!4896 = !DILocation(line: 2375, column: 21, scope: !4786)
!4897 = !DILocation(line: 2375, column: 8, scope: !4786)
!4898 = !DILocation(line: 2375, column: 6, scope: !4786)
!4899 = !DILocation(line: 2376, column: 7, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2376, column: 6)
!4901 = !DILocation(line: 2376, column: 6, scope: !4786)
!4902 = !DILocation(line: 2377, column: 3, scope: !4900)
!4903 = !DILocation(line: 2379, column: 13, scope: !4786)
!4904 = !DILocation(line: 2379, column: 2, scope: !4786)
!4905 = !DILocation(line: 2379, column: 7, scope: !4786)
!4906 = !DILocation(line: 2379, column: 11, scope: !4786)
!4907 = !DILocation(line: 2380, column: 12, scope: !4786)
!4908 = !DILocation(line: 2380, column: 18, scope: !4786)
!4909 = !DILocation(line: 2380, column: 2, scope: !4786)
!4910 = !DILocation(line: 2380, column: 7, scope: !4786)
!4911 = !DILocation(line: 2380, column: 10, scope: !4786)
!4912 = !DILocation(line: 2381, column: 21, scope: !4786)
!4913 = !DILocation(line: 2381, column: 2, scope: !4786)
!4914 = !DILocation(line: 2381, column: 7, scope: !4786)
!4915 = !DILocation(line: 2381, column: 19, scope: !4786)
!4916 = !DILocation(line: 2383, column: 6, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2383, column: 6)
!4918 = !DILocation(line: 2383, column: 11, scope: !4917)
!4919 = !DILocation(line: 2383, column: 14, scope: !4917)
!4920 = !DILocation(line: 2383, column: 6, scope: !4786)
!4921 = !DILocation(line: 2384, column: 3, scope: !4917)
!4922 = !DILocation(line: 2384, column: 8, scope: !4917)
!4923 = !DILocation(line: 2384, column: 11, scope: !4917)
!4924 = !DILocation(line: 2386, column: 37, scope: !4786)
!4925 = !DILocation(line: 2386, column: 8, scope: !4786)
!4926 = !DILocation(line: 2386, column: 6, scope: !4786)
!4927 = !DILocation(line: 2387, column: 7, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2387, column: 6)
!4929 = !DILocation(line: 2387, column: 6, scope: !4786)
!4930 = !DILocation(line: 2389, column: 31, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 2387, column: 12)
!4932 = !DILocation(line: 2389, column: 9, scope: !4931)
!4933 = !DILocation(line: 2389, column: 7, scope: !4931)
!4934 = !DILocation(line: 2390, column: 8, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 2390, column: 7)
!4936 = !DILocation(line: 2390, column: 7, scope: !4931)
!4937 = !DILocation(line: 2391, column: 4, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 2390, column: 13)
!4939 = !DILocation(line: 2392, column: 4, scope: !4938)
!4940 = !DILocation(line: 2394, column: 2, scope: !4931)
!4941 = !DILocation(line: 2395, column: 36, scope: !4786)
!4942 = !DILocation(line: 2395, column: 41, scope: !4786)
!4943 = !DILocation(line: 2395, column: 14, scope: !4786)
!4944 = !DILocation(line: 2395, column: 2, scope: !4786)
!4945 = !DILocation(line: 2395, column: 7, scope: !4786)
!4946 = !DILocation(line: 2395, column: 12, scope: !4786)
!4947 = !DILocation(line: 2396, column: 13, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2396, column: 6)
!4949 = !DILocation(line: 2396, column: 18, scope: !4948)
!4950 = !DILocation(line: 2396, column: 6, scope: !4948)
!4951 = !DILocation(line: 2396, column: 6, scope: !4786)
!4952 = !DILocation(line: 2397, column: 18, scope: !4948)
!4953 = !DILocation(line: 2397, column: 23, scope: !4948)
!4954 = !DILocation(line: 2397, column: 10, scope: !4948)
!4955 = !DILocation(line: 2397, column: 3, scope: !4948)
!4956 = !DILocation(line: 2399, column: 23, scope: !4786)
!4957 = !DILocation(line: 2399, column: 29, scope: !4786)
!4958 = !DILocation(line: 2399, column: 2, scope: !4786)
!4959 = !DILocation(line: 2401, column: 20, scope: !4786)
!4960 = !DILocation(line: 2401, column: 2, scope: !4786)
!4961 = !DILocation(line: 2402, column: 28, scope: !4786)
!4962 = !DILocation(line: 2402, column: 8, scope: !4786)
!4963 = !DILocation(line: 2402, column: 6, scope: !4786)
!4964 = !DILocation(line: 2403, column: 6, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2403, column: 6)
!4966 = !DILocation(line: 2403, column: 10, scope: !4965)
!4967 = !DILocation(line: 2403, column: 6, scope: !4786)
!4968 = !DILocation(line: 2404, column: 3, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 2403, column: 15)
!4970 = !DILocation(line: 2405, column: 22, scope: !4969)
!4971 = !DILocation(line: 2405, column: 3, scope: !4969)
!4972 = !DILocation(line: 2406, column: 10, scope: !4969)
!4973 = !DILocation(line: 2406, column: 3, scope: !4969)
!4974 = !DILocation(line: 2410, column: 27, scope: !4786)
!4975 = !DILocation(line: 2410, column: 32, scope: !4786)
!4976 = !DILocation(line: 2410, column: 38, scope: !4786)
!4977 = !DILocation(line: 2410, column: 8, scope: !4786)
!4978 = !DILocation(line: 2410, column: 6, scope: !4786)
!4979 = !DILocation(line: 2411, column: 6, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2411, column: 6)
!4981 = !DILocation(line: 2411, column: 6, scope: !4786)
!4982 = !DILocation(line: 2412, column: 3, scope: !4980)
!4983 = !DILocation(line: 2415, column: 34, scope: !4786)
!4984 = !DILocation(line: 2415, column: 39, scope: !4786)
!4985 = !DILocation(line: 2415, column: 44, scope: !4786)
!4986 = !DILocation(line: 2415, column: 21, scope: !4786)
!4987 = !DILocation(line: 2415, column: 2, scope: !4786)
!4988 = !DILocation(line: 2415, column: 7, scope: !4786)
!4989 = !DILocation(line: 2415, column: 19, scope: !4786)
!4990 = !DILocation(line: 2418, column: 33, scope: !4786)
!4991 = !DILocation(line: 2418, column: 38, scope: !4786)
!4992 = !DILocation(line: 2418, column: 20, scope: !4786)
!4993 = !DILocation(line: 2418, column: 2, scope: !4786)
!4994 = !DILocation(line: 2418, column: 7, scope: !4786)
!4995 = !DILocation(line: 2418, column: 18, scope: !4786)
!4996 = !DILocation(line: 2421, column: 36, scope: !4786)
!4997 = !DILocation(line: 2422, column: 9, scope: !4786)
!4998 = !DILocation(line: 2421, column: 23, scope: !4786)
!4999 = !DILocation(line: 2421, column: 2, scope: !4786)
!5000 = !DILocation(line: 2421, column: 7, scope: !4786)
!5001 = !DILocation(line: 2421, column: 21, scope: !4786)
!5002 = !DILocation(line: 2424, column: 7, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2424, column: 6)
!5004 = !DILocation(line: 2424, column: 12, scope: !5003)
!5005 = !DILocation(line: 2424, column: 24, scope: !5003)
!5006 = !DILocation(line: 2424, column: 28, scope: !5003)
!5007 = !DILocation(line: 2424, column: 33, scope: !5003)
!5008 = !DILocation(line: 2424, column: 44, scope: !5003)
!5009 = !DILocation(line: 2424, column: 48, scope: !5003)
!5010 = !DILocation(line: 2424, column: 53, scope: !5003)
!5011 = !DILocation(line: 2424, column: 6, scope: !4786)
!5012 = !DILocation(line: 2425, column: 7, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 2424, column: 68)
!5014 = !DILocation(line: 2426, column: 3, scope: !5013)
!5015 = !DILocation(line: 2430, column: 14, scope: !4786)
!5016 = !DILocation(line: 2430, column: 19, scope: !4786)
!5017 = !DILocation(line: 2430, column: 34, scope: !4786)
!5018 = !DILocation(line: 2430, column: 39, scope: !4786)
!5019 = !DILocation(line: 2430, column: 2, scope: !4786)
!5020 = !DILocation(line: 2432, column: 23, scope: !4786)
!5021 = !DILocation(line: 2432, column: 29, scope: !4786)
!5022 = !DILocation(line: 2432, column: 2, scope: !4786)
!5023 = !DILocation(line: 2432, column: 7, scope: !4786)
!5024 = !DILocation(line: 2432, column: 21, scope: !4786)
!5025 = !DILocation(line: 2434, column: 6, scope: !4799)
!5026 = !DILocation(line: 2434, column: 12, scope: !4799)
!5027 = !DILocation(line: 2434, column: 6, scope: !4786)
!5028 = !DILocation(line: 2436, column: 14, scope: !4798)
!5029 = !DILocation(line: 2436, column: 20, scope: !4798)
!5030 = !DILocation(line: 2436, column: 25, scope: !4798)
!5031 = !DILocation(line: 2436, column: 12, scope: !4798)
!5032 = !DILocation(line: 2437, column: 7, scope: !4811)
!5033 = !DILocation(line: 2437, column: 7, scope: !4798)
!5034 = !DILocation(line: 2438, column: 11, scope: !4809)
!5035 = !DILocation(line: 2438, column: 9, scope: !4809)
!5036 = !DILocation(line: 2438, column: 16, scope: !4808)
!5037 = !DILocation(line: 2438, column: 25, scope: !4808)
!5038 = !DILocation(line: 2438, column: 31, scope: !4808)
!5039 = !DILocation(line: 2438, column: 4, scope: !4809)
!5040 = !DILocation(line: 2439, column: 16, scope: !4808)
!5041 = !DILocation(line: 2439, column: 21, scope: !4808)
!5042 = !DILocation(line: 2439, column: 33, scope: !4808)
!5043 = !DILocation(line: 2439, column: 42, scope: !4808)
!5044 = !DILocation(line: 2440, column: 9, scope: !4808)
!5045 = !DILocation(line: 2440, column: 18, scope: !4808)
!5046 = !DILocation(line: 408, column: 27, scope: !5047, inlinedAt: !4807)
!5047 = distinct !DILexicalBlock(scope: !4805, file: !4789, line: 408, column: 6)
!5048 = !DILocation(line: 408, column: 6, scope: !5047, inlinedAt: !4807)
!5049 = !DILocation(line: 408, column: 34, scope: !5047, inlinedAt: !4807)
!5050 = !DILocation(line: 408, column: 37, scope: !5047, inlinedAt: !4807)
!5051 = !DILocation(line: 408, column: 43, scope: !5047, inlinedAt: !4807)
!5052 = !DILocation(line: 408, column: 6, scope: !4805, inlinedAt: !4807)
!5053 = !DILocation(line: 409, column: 13, scope: !5047, inlinedAt: !4807)
!5054 = !DILocation(line: 409, column: 20, scope: !5047, inlinedAt: !4807)
!5055 = !DILocation(line: 409, column: 3, scope: !5047, inlinedAt: !4807)
!5056 = !DILocation(line: 410, column: 32, scope: !5057, inlinedAt: !4807)
!5057 = distinct !DILexicalBlock(scope: !5047, file: !4789, line: 410, column: 11)
!5058 = !DILocation(line: 410, column: 38, scope: !5057, inlinedAt: !4807)
!5059 = !DILocation(line: 410, column: 11, scope: !5057, inlinedAt: !4807)
!5060 = !DILocation(line: 410, column: 57, scope: !5057, inlinedAt: !4807)
!5061 = !DILocation(line: 411, column: 4, scope: !5057, inlinedAt: !4807)
!5062 = !DILocation(line: 411, column: 44, scope: !5057, inlinedAt: !4807)
!5063 = !DILocation(line: 412, column: 25, scope: !5057, inlinedAt: !4807)
!5064 = !DILocation(line: 412, column: 31, scope: !5057, inlinedAt: !4807)
!5065 = !DILocation(line: 412, column: 4, scope: !5057, inlinedAt: !4807)
!5066 = !DILocation(line: 412, column: 50, scope: !5057, inlinedAt: !4807)
!5067 = !DILocation(line: 413, column: 4, scope: !5057, inlinedAt: !4807)
!5068 = !DILocation(line: 410, column: 11, scope: !5047, inlinedAt: !4807)
!5069 = !DILocation(line: 414, column: 18, scope: !5057, inlinedAt: !4807)
!5070 = !DILocation(line: 414, column: 10, scope: !5057, inlinedAt: !4807)
!5071 = !DILocation(line: 414, column: 24, scope: !5057, inlinedAt: !4807)
!5072 = !DILocation(line: 414, column: 30, scope: !5057, inlinedAt: !4807)
!5073 = !DILocation(line: 414, column: 22, scope: !5057, inlinedAt: !4807)
!5074 = !DILocation(line: 414, column: 41, scope: !5057, inlinedAt: !4807)
!5075 = !DILocation(line: 414, column: 47, scope: !5057, inlinedAt: !4807)
!5076 = !DILocation(line: 414, column: 3, scope: !5057, inlinedAt: !4807)
!5077 = !DILocation(line: 416, column: 16, scope: !5057, inlinedAt: !4807)
!5078 = !DILocation(line: 416, column: 21, scope: !5057, inlinedAt: !4807)
!5079 = !DILocation(line: 416, column: 28, scope: !5057, inlinedAt: !4807)
!5080 = !DILocation(line: 416, column: 3, scope: !5057, inlinedAt: !4807)
!5081 = !DILocation(line: 2439, column: 5, scope: !4808)
!5082 = !DILocation(line: 2438, column: 39, scope: !4808)
!5083 = !DILocation(line: 2438, column: 4, scope: !4808)
!5084 = distinct !{!5084, !5039, !5085}
!5085 = !DILocation(line: 2440, column: 23, scope: !4809)
!5086 = !DILocation(line: 2441, column: 3, scope: !4810)
!5087 = !DILocation(line: 2444, column: 14, scope: !4798)
!5088 = !DILocation(line: 2444, column: 20, scope: !4798)
!5089 = !DILocation(line: 2444, column: 25, scope: !4798)
!5090 = !DILocation(line: 2444, column: 12, scope: !4798)
!5091 = !DILocation(line: 2445, column: 7, scope: !4797)
!5092 = !DILocation(line: 2445, column: 7, scope: !4798)
!5093 = !DILocation(line: 2446, column: 11, scope: !4795)
!5094 = !DILocation(line: 2446, column: 9, scope: !4795)
!5095 = !DILocation(line: 2446, column: 16, scope: !4794)
!5096 = !DILocation(line: 2446, column: 25, scope: !4794)
!5097 = !DILocation(line: 2446, column: 31, scope: !4794)
!5098 = !DILocation(line: 2446, column: 4, scope: !4795)
!5099 = !DILocation(line: 2447, column: 18, scope: !4794)
!5100 = !DILocation(line: 2447, column: 23, scope: !4794)
!5101 = !DILocation(line: 2447, column: 38, scope: !4794)
!5102 = !DILocation(line: 2447, column: 47, scope: !4794)
!5103 = !DILocation(line: 2448, column: 11, scope: !4794)
!5104 = !DILocation(line: 2448, column: 20, scope: !4794)
!5105 = !DILocation(line: 422, column: 27, scope: !5106, inlinedAt: !4793)
!5106 = distinct !DILexicalBlock(scope: !4788, file: !4789, line: 422, column: 6)
!5107 = !DILocation(line: 422, column: 6, scope: !5106, inlinedAt: !4793)
!5108 = !DILocation(line: 422, column: 34, scope: !5106, inlinedAt: !4793)
!5109 = !DILocation(line: 422, column: 37, scope: !5106, inlinedAt: !4793)
!5110 = !DILocation(line: 422, column: 43, scope: !5106, inlinedAt: !4793)
!5111 = !DILocation(line: 422, column: 6, scope: !4788, inlinedAt: !4793)
!5112 = !DILocation(line: 423, column: 15, scope: !5106, inlinedAt: !4793)
!5113 = !DILocation(line: 423, column: 22, scope: !5106, inlinedAt: !4793)
!5114 = !DILocation(line: 423, column: 3, scope: !5106, inlinedAt: !4793)
!5115 = !DILocation(line: 424, column: 32, scope: !5116, inlinedAt: !4793)
!5116 = distinct !DILexicalBlock(scope: !5106, file: !4789, line: 424, column: 11)
!5117 = !DILocation(line: 424, column: 38, scope: !5116, inlinedAt: !4793)
!5118 = !DILocation(line: 424, column: 11, scope: !5116, inlinedAt: !4793)
!5119 = !DILocation(line: 424, column: 57, scope: !5116, inlinedAt: !4793)
!5120 = !DILocation(line: 425, column: 4, scope: !5116, inlinedAt: !4793)
!5121 = !DILocation(line: 425, column: 44, scope: !5116, inlinedAt: !4793)
!5122 = !DILocation(line: 426, column: 25, scope: !5116, inlinedAt: !4793)
!5123 = !DILocation(line: 426, column: 31, scope: !5116, inlinedAt: !4793)
!5124 = !DILocation(line: 426, column: 4, scope: !5116, inlinedAt: !4793)
!5125 = !DILocation(line: 426, column: 50, scope: !5116, inlinedAt: !4793)
!5126 = !DILocation(line: 427, column: 4, scope: !5116, inlinedAt: !4793)
!5127 = !DILocation(line: 424, column: 11, scope: !5106, inlinedAt: !4793)
!5128 = !DILocation(line: 428, column: 18, scope: !5116, inlinedAt: !4793)
!5129 = !DILocation(line: 428, column: 10, scope: !5116, inlinedAt: !4793)
!5130 = !DILocation(line: 428, column: 24, scope: !5116, inlinedAt: !4793)
!5131 = !DILocation(line: 428, column: 30, scope: !5116, inlinedAt: !4793)
!5132 = !DILocation(line: 428, column: 22, scope: !5116, inlinedAt: !4793)
!5133 = !DILocation(line: 428, column: 38, scope: !5116, inlinedAt: !4793)
!5134 = !DILocation(line: 428, column: 44, scope: !5116, inlinedAt: !4793)
!5135 = !DILocation(line: 428, column: 3, scope: !5116, inlinedAt: !4793)
!5136 = !DILocation(line: 430, column: 18, scope: !5116, inlinedAt: !4793)
!5137 = !DILocation(line: 430, column: 23, scope: !5116, inlinedAt: !4793)
!5138 = !DILocation(line: 430, column: 30, scope: !5116, inlinedAt: !4793)
!5139 = !DILocation(line: 430, column: 3, scope: !5116, inlinedAt: !4793)
!5140 = !DILocation(line: 2447, column: 5, scope: !4794)
!5141 = !DILocation(line: 2446, column: 39, scope: !4794)
!5142 = !DILocation(line: 2446, column: 4, scope: !4794)
!5143 = distinct !{!5143, !5098, !5144}
!5144 = !DILocation(line: 2448, column: 25, scope: !4795)
!5145 = !DILocation(line: 2449, column: 3, scope: !4796)
!5146 = !DILocation(line: 2450, column: 2, scope: !4798)
!5147 = !DILocation(line: 2452, column: 9, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2452, column: 2)
!5149 = !DILocation(line: 2452, column: 7, scope: !5148)
!5150 = !DILocation(line: 2452, column: 14, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5148, file: !3, line: 2452, column: 2)
!5152 = !DILocation(line: 2452, column: 18, scope: !5151)
!5153 = !DILocation(line: 2452, column: 23, scope: !5151)
!5154 = !DILocation(line: 2452, column: 16, scope: !5151)
!5155 = !DILocation(line: 2452, column: 2, scope: !5148)
!5156 = !DILocation(line: 2454, column: 17, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 2454, column: 7)
!5158 = distinct !DILexicalBlock(scope: !5151, file: !3, line: 2452, column: 39)
!5159 = !DILocation(line: 2454, column: 20, scope: !5157)
!5160 = !DILocation(line: 2454, column: 25, scope: !5157)
!5161 = !DILocation(line: 2454, column: 8, scope: !5157)
!5162 = !DILocation(line: 2454, column: 7, scope: !5158)
!5163 = !DILocation(line: 2455, column: 20, scope: !5157)
!5164 = !DILocation(line: 2455, column: 25, scope: !5157)
!5165 = !DILocation(line: 2455, column: 4, scope: !5157)
!5166 = !DILocation(line: 2456, column: 2, scope: !5158)
!5167 = !DILocation(line: 2452, column: 35, scope: !5151)
!5168 = !DILocation(line: 2452, column: 2, scope: !5151)
!5169 = distinct !{!5169, !5155, !5170}
!5170 = !DILocation(line: 2456, column: 2, scope: !5148)
!5171 = !DILocation(line: 2458, column: 32, scope: !4786)
!5172 = !DILocation(line: 2458, column: 8, scope: !4786)
!5173 = !DILocation(line: 2458, column: 6, scope: !4786)
!5174 = !DILocation(line: 2459, column: 6, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2459, column: 6)
!5176 = !DILocation(line: 2459, column: 10, scope: !5175)
!5177 = !DILocation(line: 2459, column: 14, scope: !5175)
!5178 = !DILocation(line: 2459, column: 17, scope: !5175)
!5179 = !DILocation(line: 2459, column: 6, scope: !4786)
!5180 = !DILocation(line: 2460, column: 30, scope: !5175)
!5181 = !DILocation(line: 2460, column: 9, scope: !5175)
!5182 = !DILocation(line: 2460, column: 7, scope: !5175)
!5183 = !DILocation(line: 2460, column: 3, scope: !5175)
!5184 = !DILocation(line: 2462, column: 6, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2462, column: 6)
!5186 = !DILocation(line: 2462, column: 10, scope: !5185)
!5187 = !DILocation(line: 2462, column: 6, scope: !4786)
!5188 = !DILocation(line: 2463, column: 29, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 2462, column: 16)
!5190 = !DILocation(line: 2464, column: 17, scope: !5189)
!5191 = !DILocation(line: 2464, column: 8, scope: !5189)
!5192 = !DILocation(line: 2463, column: 14, scope: !5189)
!5193 = !DILocation(line: 2463, column: 12, scope: !5189)
!5194 = !DILocation(line: 2465, column: 26, scope: !5189)
!5195 = !DILocation(line: 2465, column: 31, scope: !5189)
!5196 = !DILocation(line: 2465, column: 56, scope: !5189)
!5197 = !DILocation(line: 2466, column: 12, scope: !5189)
!5198 = !DILocation(line: 2465, column: 9, scope: !5189)
!5199 = !DILocation(line: 2465, column: 7, scope: !5189)
!5200 = !DILocation(line: 2467, column: 7, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 2467, column: 7)
!5202 = !DILocation(line: 2467, column: 7, scope: !5189)
!5203 = !DILocation(line: 2468, column: 4, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 2467, column: 12)
!5205 = !DILocation(line: 2469, column: 4, scope: !5204)
!5206 = !DILocation(line: 2471, column: 16, scope: !5189)
!5207 = !DILocation(line: 2471, column: 3, scope: !5189)
!5208 = !DILocation(line: 2471, column: 8, scope: !5189)
!5209 = !DILocation(line: 2471, column: 14, scope: !5189)
!5210 = !DILocation(line: 2472, column: 2, scope: !5189)
!5211 = !DILocation(line: 2474, column: 32, scope: !4786)
!5212 = !DILocation(line: 2474, column: 8, scope: !4786)
!5213 = !DILocation(line: 2474, column: 6, scope: !4786)
!5214 = !DILocation(line: 2475, column: 6, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2475, column: 6)
!5216 = !DILocation(line: 2475, column: 10, scope: !5215)
!5217 = !DILocation(line: 2475, column: 14, scope: !5215)
!5218 = !DILocation(line: 2475, column: 17, scope: !5215)
!5219 = !DILocation(line: 2475, column: 6, scope: !4786)
!5220 = !DILocation(line: 2476, column: 30, scope: !5215)
!5221 = !DILocation(line: 2476, column: 9, scope: !5215)
!5222 = !DILocation(line: 2476, column: 7, scope: !5215)
!5223 = !DILocation(line: 2476, column: 3, scope: !5215)
!5224 = !DILocation(line: 2478, column: 6, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2478, column: 6)
!5226 = !DILocation(line: 2478, column: 10, scope: !5225)
!5227 = !DILocation(line: 2478, column: 6, scope: !4786)
!5228 = !DILocation(line: 2479, column: 29, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 2478, column: 16)
!5230 = !DILocation(line: 2480, column: 17, scope: !5229)
!5231 = !DILocation(line: 2480, column: 8, scope: !5229)
!5232 = !DILocation(line: 2479, column: 14, scope: !5229)
!5233 = !DILocation(line: 2479, column: 12, scope: !5229)
!5234 = !DILocation(line: 2481, column: 26, scope: !5229)
!5235 = !DILocation(line: 2481, column: 31, scope: !5229)
!5236 = !DILocation(line: 2481, column: 58, scope: !5229)
!5237 = !DILocation(line: 2482, column: 12, scope: !5229)
!5238 = !DILocation(line: 2481, column: 9, scope: !5229)
!5239 = !DILocation(line: 2481, column: 7, scope: !5229)
!5240 = !DILocation(line: 2483, column: 7, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 2483, column: 7)
!5242 = !DILocation(line: 2483, column: 7, scope: !5229)
!5243 = !DILocation(line: 2484, column: 4, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2483, column: 12)
!5245 = !DILocation(line: 2485, column: 4, scope: !5244)
!5246 = !DILocation(line: 2487, column: 19, scope: !5229)
!5247 = !DILocation(line: 2487, column: 3, scope: !5229)
!5248 = !DILocation(line: 2487, column: 8, scope: !5229)
!5249 = !DILocation(line: 2487, column: 17, scope: !5229)
!5250 = !DILocation(line: 2488, column: 2, scope: !5229)
!5251 = !DILocation(line: 2490, column: 36, scope: !4786)
!5252 = !DILocation(line: 2490, column: 20, scope: !4786)
!5253 = !DILocation(line: 2490, column: 2, scope: !4786)
!5254 = !DILocation(line: 2490, column: 7, scope: !4786)
!5255 = !DILocation(line: 2490, column: 18, scope: !4786)
!5256 = !DILocation(line: 2491, column: 6, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2491, column: 6)
!5258 = !DILocation(line: 2491, column: 11, scope: !5257)
!5259 = !DILocation(line: 2491, column: 22, scope: !5257)
!5260 = !DILocation(line: 2491, column: 6, scope: !4786)
!5261 = !DILocation(line: 2492, column: 3, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5257, file: !3, line: 2491, column: 27)
!5263 = !DILocation(line: 2493, column: 9, scope: !5262)
!5264 = !DILocation(line: 2493, column: 14, scope: !5262)
!5265 = !DILocation(line: 2493, column: 7, scope: !5262)
!5266 = !DILocation(line: 2494, column: 3, scope: !5262)
!5267 = !DILocation(line: 2497, column: 27, scope: !4786)
!5268 = !DILocation(line: 2497, column: 33, scope: !4786)
!5269 = !DILocation(line: 2497, column: 25, scope: !4786)
!5270 = !DILocation(line: 2499, column: 7, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2499, column: 6)
!5272 = !DILocation(line: 2499, column: 12, scope: !5271)
!5273 = !DILocation(line: 2499, column: 6, scope: !4786)
!5274 = !DILocalVariable(name: "lowest_priority", scope: !5275, file: !3, line: 2500, type: !130)
!5275 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 2499, column: 25)
!5276 = !DILocation(line: 2500, column: 7, scope: !5275)
!5277 = !DILocalVariable(name: "array_max", scope: !5275, file: !3, line: 2501, type: !7)
!5278 = !DILocation(line: 2501, column: 16, scope: !5275)
!5279 = !DILocalVariable(name: "tc_args", scope: !5275, file: !3, line: 2502, type: !5280)
!5280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_phandle_args", file: !3799, line: 74, size: 640, elements: !5281)
!5281 = !{!5282, !5283, !5284}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "np", scope: !5280, file: !3799, line: 75, baseType: !3797, size: 64)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "args_count", scope: !5280, file: !3799, line: 76, baseType: !130, size: 32, offset: 64)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !5280, file: !3799, line: 77, baseType: !5285, size: 512, offset: 96)
!5285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !678, size: 512, elements: !1872)
!5286 = !DILocation(line: 2502, column: 26, scope: !5275)
!5287 = !DILocation(line: 2504, column: 31, scope: !5275)
!5288 = !DILocation(line: 2504, column: 36, scope: !5275)
!5289 = !DILocation(line: 2504, column: 41, scope: !5275)
!5290 = !DILocation(line: 2504, column: 18, scope: !5275)
!5291 = !DILocation(line: 2504, column: 3, scope: !5275)
!5292 = !DILocation(line: 2504, column: 8, scope: !5275)
!5293 = !DILocation(line: 2504, column: 16, scope: !5275)
!5294 = !DILocation(line: 2506, column: 8, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 2506, column: 7)
!5296 = !DILocation(line: 2506, column: 13, scope: !5295)
!5297 = !DILocation(line: 2506, column: 7, scope: !5275)
!5298 = !DILocation(line: 2507, column: 8, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 2506, column: 22)
!5300 = !DILocation(line: 2508, column: 4, scope: !5299)
!5301 = !DILocation(line: 2511, column: 10, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 2511, column: 3)
!5303 = !DILocation(line: 2511, column: 8, scope: !5302)
!5304 = !DILocation(line: 2512, column: 43, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 2511, column: 21)
!5306 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 2511, column: 3)
!5307 = !DILocation(line: 2513, column: 18, scope: !5305)
!5308 = !DILocation(line: 2512, column: 10, scope: !5305)
!5309 = !DILocation(line: 2512, column: 8, scope: !5305)
!5310 = !DILocation(line: 2514, column: 8, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 2514, column: 8)
!5312 = !DILocation(line: 2514, column: 12, scope: !5311)
!5313 = !DILocation(line: 2514, column: 15, scope: !5311)
!5314 = !DILocation(line: 2514, column: 20, scope: !5311)
!5315 = !DILocation(line: 2514, column: 25, scope: !5311)
!5316 = !DILocation(line: 2514, column: 17, scope: !5311)
!5317 = !DILocation(line: 2514, column: 8, scope: !5305)
!5318 = !DILocation(line: 2515, column: 5, scope: !5311)
!5319 = !DILocation(line: 2517, column: 35, scope: !5305)
!5320 = !DILocation(line: 2517, column: 4, scope: !5305)
!5321 = !DILocation(line: 2517, column: 9, scope: !5305)
!5322 = !DILocation(line: 2517, column: 17, scope: !5305)
!5323 = !DILocation(line: 2517, column: 20, scope: !5305)
!5324 = !DILocation(line: 2517, column: 25, scope: !5305)
!5325 = !DILocation(line: 2518, column: 25, scope: !5305)
!5326 = !DILocation(line: 2518, column: 4, scope: !5305)
!5327 = !DILocation(line: 2518, column: 9, scope: !5305)
!5328 = !DILocation(line: 2518, column: 17, scope: !5305)
!5329 = !DILocation(line: 2518, column: 20, scope: !5305)
!5330 = !DILocation(line: 2518, column: 23, scope: !5305)
!5331 = !DILocation(line: 2519, column: 43, scope: !5305)
!5332 = !DILocation(line: 2519, column: 35, scope: !5305)
!5333 = !DILocation(line: 2519, column: 4, scope: !5305)
!5334 = !DILocation(line: 2519, column: 27, scope: !5305)
!5335 = !DILocation(line: 2519, column: 33, scope: !5305)
!5336 = !DILocation(line: 2520, column: 8, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 2520, column: 8)
!5338 = !DILocation(line: 2520, column: 31, scope: !5337)
!5339 = !DILocation(line: 2520, column: 39, scope: !5337)
!5340 = !DILocation(line: 2520, column: 37, scope: !5337)
!5341 = !DILocation(line: 2520, column: 8, scope: !5305)
!5342 = !DILocation(line: 2521, column: 23, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 2520, column: 56)
!5344 = !DILocation(line: 2521, column: 46, scope: !5343)
!5345 = !DILocation(line: 2521, column: 21, scope: !5343)
!5346 = !DILocation(line: 2522, column: 27, scope: !5343)
!5347 = !DILocation(line: 2522, column: 5, scope: !5343)
!5348 = !DILocation(line: 2522, column: 11, scope: !5343)
!5349 = !DILocation(line: 2522, column: 25, scope: !5343)
!5350 = !DILocation(line: 2523, column: 4, scope: !5343)
!5351 = !DILocation(line: 2524, column: 3, scope: !5305)
!5352 = !DILocation(line: 2511, column: 17, scope: !5306)
!5353 = !DILocation(line: 2511, column: 3, scope: !5306)
!5354 = distinct !{!5354, !5355, !5356}
!5355 = !DILocation(line: 2511, column: 3, scope: !5302)
!5356 = !DILocation(line: 2524, column: 3, scope: !5302)
!5357 = !DILocation(line: 2527, column: 15, scope: !5275)
!5358 = !DILocation(line: 2527, column: 13, scope: !5275)
!5359 = !DILocation(line: 2528, column: 45, scope: !5275)
!5360 = !DILocation(line: 2530, column: 14, scope: !5275)
!5361 = !DILocation(line: 2530, column: 19, scope: !5275)
!5362 = !DILocation(line: 2530, column: 7, scope: !5275)
!5363 = !DILocation(line: 2531, column: 10, scope: !5275)
!5364 = !DILocation(line: 2528, column: 9, scope: !5275)
!5365 = !DILocation(line: 2528, column: 7, scope: !5275)
!5366 = !DILocation(line: 2532, column: 7, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 2532, column: 7)
!5368 = !DILocation(line: 2532, column: 11, scope: !5367)
!5369 = !DILocation(line: 2532, column: 15, scope: !5367)
!5370 = !DILocation(line: 2532, column: 18, scope: !5367)
!5371 = !DILocation(line: 2532, column: 25, scope: !5367)
!5372 = !DILocation(line: 2532, column: 22, scope: !5367)
!5373 = !DILocation(line: 2532, column: 7, scope: !5275)
!5374 = !DILocation(line: 2533, column: 4, scope: !5367)
!5375 = !DILocation(line: 2534, column: 12, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 2534, column: 12)
!5377 = !DILocation(line: 2534, column: 16, scope: !5376)
!5378 = !DILocation(line: 2534, column: 30, scope: !5376)
!5379 = !DILocation(line: 2534, column: 33, scope: !5376)
!5380 = !DILocation(line: 2534, column: 37, scope: !5376)
!5381 = !DILocation(line: 2534, column: 12, scope: !5367)
!5382 = !DILocation(line: 2535, column: 4, scope: !5376)
!5383 = !DILocation(line: 2537, column: 2, scope: !5275)
!5384 = !DILocation(line: 2540, column: 9, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2540, column: 2)
!5386 = !DILocation(line: 2540, column: 7, scope: !5385)
!5387 = !DILocation(line: 2540, column: 14, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5385, file: !3, line: 2540, column: 2)
!5389 = !DILocation(line: 2540, column: 37, scope: !5388)
!5390 = !DILocation(line: 2540, column: 43, scope: !5388)
!5391 = !DILocation(line: 2540, column: 2, scope: !5385)
!5392 = !DILocation(line: 2541, column: 33, scope: !5388)
!5393 = !DILocation(line: 2541, column: 38, scope: !5388)
!5394 = !DILocation(line: 2541, column: 61, scope: !5388)
!5395 = !DILocation(line: 2542, column: 12, scope: !5388)
!5396 = !DILocation(line: 2542, column: 35, scope: !5388)
!5397 = !DILocation(line: 2541, column: 3, scope: !5388)
!5398 = !DILocation(line: 2540, column: 51, scope: !5388)
!5399 = !DILocation(line: 2540, column: 2, scope: !5388)
!5400 = distinct !{!5400, !5391, !5401}
!5401 = !DILocation(line: 2542, column: 40, scope: !5385)
!5402 = !DILocation(line: 2544, column: 20, scope: !4786)
!5403 = !DILocation(line: 2544, column: 2, scope: !4786)
!5404 = !DILocation(line: 2545, column: 20, scope: !4786)
!5405 = !DILocation(line: 2545, column: 2, scope: !4786)
!5406 = !DILocation(line: 2546, column: 19, scope: !4786)
!5407 = !DILocation(line: 2546, column: 2, scope: !4786)
!5408 = !DILocation(line: 2548, column: 14, scope: !4786)
!5409 = !DILocation(line: 2548, column: 2, scope: !4786)
!5410 = !DILocation(line: 2548, column: 7, scope: !4786)
!5411 = !DILocation(line: 2548, column: 12, scope: !4786)
!5412 = !DILocation(line: 2551, column: 16, scope: !4786)
!5413 = !DILocation(line: 2551, column: 21, scope: !4786)
!5414 = !DILocation(line: 2551, column: 2, scope: !4786)
!5415 = !DILocation(line: 2553, column: 9, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2553, column: 2)
!5417 = !DILocation(line: 2553, column: 7, scope: !5416)
!5418 = !DILocation(line: 2553, column: 14, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 2553, column: 2)
!5420 = !DILocation(line: 2553, column: 18, scope: !5419)
!5421 = !DILocation(line: 2553, column: 23, scope: !5419)
!5422 = !DILocation(line: 2553, column: 16, scope: !5419)
!5423 = !DILocation(line: 2553, column: 2, scope: !5416)
!5424 = !DILocation(line: 2555, column: 17, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 2555, column: 7)
!5426 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 2553, column: 42)
!5427 = !DILocation(line: 2555, column: 20, scope: !5425)
!5428 = !DILocation(line: 2555, column: 25, scope: !5425)
!5429 = !DILocation(line: 2555, column: 8, scope: !5425)
!5430 = !DILocation(line: 2555, column: 7, scope: !5426)
!5431 = !DILocation(line: 2556, column: 4, scope: !5425)
!5432 = !DILocation(line: 2559, column: 31, scope: !5426)
!5433 = !DILocation(line: 2559, column: 36, scope: !5426)
!5434 = !DILocation(line: 2559, column: 48, scope: !5426)
!5435 = !DILocation(line: 2560, column: 9, scope: !5426)
!5436 = !DILocation(line: 2560, column: 15, scope: !5426)
!5437 = !DILocation(line: 2559, column: 3, scope: !5426)
!5438 = !DILocation(line: 2562, column: 19, scope: !5426)
!5439 = !DILocation(line: 2562, column: 24, scope: !5426)
!5440 = !DILocation(line: 2562, column: 36, scope: !5426)
!5441 = !DILocation(line: 2562, column: 40, scope: !5426)
!5442 = !DILocation(line: 2562, column: 45, scope: !5426)
!5443 = !DILocation(line: 2562, column: 3, scope: !5426)
!5444 = !DILocation(line: 2563, column: 2, scope: !5426)
!5445 = !DILocation(line: 2553, column: 38, scope: !5419)
!5446 = !DILocation(line: 2553, column: 2, scope: !5419)
!5447 = distinct !{!5447, !5423, !5448}
!5448 = !DILocation(line: 2563, column: 2, scope: !5416)
!5449 = !DILocation(line: 2565, column: 30, scope: !4786)
!5450 = !DILocation(line: 2565, column: 36, scope: !4786)
!5451 = !DILocation(line: 2565, column: 2, scope: !4786)
!5452 = !DILocation(line: 2565, column: 7, scope: !4786)
!5453 = !DILocation(line: 2565, column: 17, scope: !4786)
!5454 = !DILocation(line: 2565, column: 24, scope: !4786)
!5455 = !DILocation(line: 2565, column: 28, scope: !4786)
!5456 = !DILocation(line: 2566, column: 33, scope: !4786)
!5457 = !DILocation(line: 2566, column: 39, scope: !4786)
!5458 = !DILocation(line: 2566, column: 2, scope: !4786)
!5459 = !DILocation(line: 2566, column: 7, scope: !4786)
!5460 = !DILocation(line: 2566, column: 17, scope: !4786)
!5461 = !DILocation(line: 2566, column: 24, scope: !4786)
!5462 = !DILocation(line: 2566, column: 31, scope: !4786)
!5463 = !DILocation(line: 2567, column: 2, scope: !4786)
!5464 = !DILocation(line: 2567, column: 7, scope: !4786)
!5465 = !DILocation(line: 2567, column: 17, scope: !4786)
!5466 = !DILocation(line: 2567, column: 24, scope: !4786)
!5467 = !DILocation(line: 2567, column: 27, scope: !4786)
!5468 = !DILocation(line: 2569, column: 35, scope: !4786)
!5469 = !DILocation(line: 2569, column: 40, scope: !4786)
!5470 = !DILocation(line: 2569, column: 8, scope: !4786)
!5471 = !DILocation(line: 2569, column: 6, scope: !4786)
!5472 = !DILocation(line: 2570, column: 6, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2570, column: 6)
!5474 = !DILocation(line: 2570, column: 6, scope: !4786)
!5475 = !DILocation(line: 2571, column: 3, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 2570, column: 11)
!5477 = !DILocation(line: 2572, column: 3, scope: !5476)
!5478 = !DILocation(line: 2575, column: 6, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2575, column: 6)
!5480 = !DILocation(line: 2575, column: 11, scope: !5479)
!5481 = !DILocation(line: 2575, column: 6, scope: !4786)
!5482 = !DILocation(line: 2576, column: 35, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 2575, column: 23)
!5484 = !DILocation(line: 2576, column: 40, scope: !5483)
!5485 = !DILocation(line: 2576, column: 9, scope: !5483)
!5486 = !DILocation(line: 2576, column: 7, scope: !5483)
!5487 = !DILocation(line: 2577, column: 7, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 2577, column: 7)
!5489 = !DILocation(line: 2577, column: 7, scope: !5483)
!5490 = !DILocation(line: 2578, column: 4, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 2577, column: 12)
!5492 = !DILocation(line: 2580, column: 33, scope: !5491)
!5493 = !DILocation(line: 2580, column: 38, scope: !5491)
!5494 = !DILocation(line: 2580, column: 4, scope: !5491)
!5495 = !DILocation(line: 2581, column: 4, scope: !5491)
!5496 = !DILocation(line: 2583, column: 2, scope: !5483)
!5497 = !DILocation(line: 2585, column: 6, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2585, column: 6)
!5499 = !DILocation(line: 2585, column: 6, scope: !4786)
!5500 = !DILocation(line: 2586, column: 30, scope: !5498)
!5501 = !DILocation(line: 2586, column: 51, scope: !5498)
!5502 = !DILocation(line: 2586, column: 3, scope: !5498)
!5503 = !DILocation(line: 2588, column: 2, scope: !4786)
!5504 = !DILocation(line: 2590, column: 2, scope: !4786)
!5505 = !DILabel(scope: !4786, name: "err_reg1", file: !3, line: 2592)
!5506 = !DILocation(line: 2592, column: 1, scope: !4786)
!5507 = !DILocation(line: 2593, column: 17, scope: !4786)
!5508 = !DILocation(line: 2593, column: 22, scope: !4786)
!5509 = !DILocation(line: 2593, column: 27, scope: !4786)
!5510 = !DILocation(line: 2593, column: 2, scope: !4786)
!5511 = !DILabel(scope: !4786, name: "err_disable_pm", file: !3, line: 2594)
!5512 = !DILocation(line: 2594, column: 1, scope: !4786)
!5513 = !DILocation(line: 2595, column: 22, scope: !4786)
!5514 = !DILocation(line: 2595, column: 2, scope: !4786)
!5515 = !DILocation(line: 2596, column: 21, scope: !4786)
!5516 = !DILocation(line: 2596, column: 2, scope: !4786)
!5517 = !DILocation(line: 2597, column: 9, scope: !4786)
!5518 = !DILocation(line: 2597, column: 2, scope: !4786)
!5519 = !DILocation(line: 2598, column: 1, scope: !4786)
!5520 = distinct !DISubprogram(name: "edma_remove", scope: !3, file: !3, line: 2611, type: !4692, scopeLine: 2612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!5521 = !DILocalVariable(name: "pdev", arg: 1, scope: !5520, file: !3, line: 2611, type: !4694)
!5522 = !DILocation(line: 2611, column: 48, scope: !5520)
!5523 = !DILocalVariable(name: "dev", scope: !5520, file: !3, line: 2613, type: !345)
!5524 = !DILocation(line: 2613, column: 17, scope: !5520)
!5525 = !DILocation(line: 2613, column: 24, scope: !5520)
!5526 = !DILocation(line: 2613, column: 30, scope: !5520)
!5527 = !DILocalVariable(name: "ecc", scope: !5520, file: !3, line: 2614, type: !4579)
!5528 = !DILocation(line: 2614, column: 18, scope: !5520)
!5529 = !DILocation(line: 2614, column: 40, scope: !5520)
!5530 = !DILocation(line: 2614, column: 24, scope: !5520)
!5531 = !DILocation(line: 2616, column: 16, scope: !5520)
!5532 = !DILocation(line: 2616, column: 21, scope: !5520)
!5533 = !DILocation(line: 2616, column: 26, scope: !5520)
!5534 = !DILocation(line: 2616, column: 33, scope: !5520)
!5535 = !DILocation(line: 2616, column: 2, scope: !5520)
!5536 = !DILocation(line: 2617, column: 16, scope: !5520)
!5537 = !DILocation(line: 2617, column: 21, scope: !5520)
!5538 = !DILocation(line: 2617, column: 26, scope: !5520)
!5539 = !DILocation(line: 2617, column: 36, scope: !5520)
!5540 = !DILocation(line: 2617, column: 2, scope: !5520)
!5541 = !DILocation(line: 2619, column: 23, scope: !5520)
!5542 = !DILocation(line: 2619, column: 28, scope: !5520)
!5543 = !DILocation(line: 2619, column: 2, scope: !5520)
!5544 = !DILocation(line: 2621, column: 6, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 2621, column: 6)
!5546 = !DILocation(line: 2621, column: 11, scope: !5545)
!5547 = !DILocation(line: 2621, column: 6, scope: !5520)
!5548 = !DILocation(line: 2622, column: 26, scope: !5545)
!5549 = !DILocation(line: 2622, column: 31, scope: !5545)
!5550 = !DILocation(line: 2622, column: 3, scope: !5545)
!5551 = !DILocation(line: 2623, column: 31, scope: !5520)
!5552 = !DILocation(line: 2623, column: 36, scope: !5520)
!5553 = !DILocation(line: 2623, column: 2, scope: !5520)
!5554 = !DILocation(line: 2624, column: 6, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 2624, column: 6)
!5556 = !DILocation(line: 2624, column: 11, scope: !5555)
!5557 = !DILocation(line: 2624, column: 6, scope: !5520)
!5558 = !DILocation(line: 2625, column: 31, scope: !5555)
!5559 = !DILocation(line: 2625, column: 36, scope: !5555)
!5560 = !DILocation(line: 2625, column: 3, scope: !5555)
!5561 = !DILocation(line: 2626, column: 17, scope: !5520)
!5562 = !DILocation(line: 2626, column: 22, scope: !5520)
!5563 = !DILocation(line: 2626, column: 27, scope: !5520)
!5564 = !DILocation(line: 2626, column: 2, scope: !5520)
!5565 = !DILocation(line: 2627, column: 22, scope: !5520)
!5566 = !DILocation(line: 2627, column: 2, scope: !5520)
!5567 = !DILocation(line: 2628, column: 21, scope: !5520)
!5568 = !DILocation(line: 2628, column: 2, scope: !5520)
!5569 = !DILocation(line: 2630, column: 2, scope: !5520)
!5570 = distinct !DISubprogram(name: "edma_setup_info_from_dt", scope: !3, file: !3, line: 2191, type: !5571, scopeLine: 2193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!5571 = !DISubroutineType(types: !5572)
!5572 = !{!4584, !345, !314}
!5573 = !DILocalVariable(name: "dev", arg: 1, scope: !5570, file: !3, line: 2191, type: !345)
!5574 = !DILocation(line: 2191, column: 69, scope: !5570)
!5575 = !DILocalVariable(name: "legacy_mode", arg: 2, scope: !5570, file: !3, line: 2192, type: !314)
!5576 = !DILocation(line: 2192, column: 17, scope: !5570)
!5577 = !DILocalVariable(name: "info", scope: !5570, file: !3, line: 2194, type: !4584)
!5578 = !DILocation(line: 2194, column: 24, scope: !5570)
!5579 = !DILocalVariable(name: "prop", scope: !5570, file: !3, line: 2195, type: !3896)
!5580 = !DILocation(line: 2195, column: 19, scope: !5570)
!5581 = !DILocalVariable(name: "sz", scope: !5570, file: !3, line: 2196, type: !130)
!5582 = !DILocation(line: 2196, column: 6, scope: !5570)
!5583 = !DILocalVariable(name: "ret", scope: !5570, file: !3, line: 2196, type: !130)
!5584 = !DILocation(line: 2196, column: 10, scope: !5570)
!5585 = !DILocation(line: 2198, column: 22, scope: !5570)
!5586 = !DILocation(line: 2198, column: 9, scope: !5570)
!5587 = !DILocation(line: 2198, column: 7, scope: !5570)
!5588 = !DILocation(line: 2199, column: 7, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 2199, column: 6)
!5590 = !DILocation(line: 2199, column: 6, scope: !5570)
!5591 = !DILocation(line: 2200, column: 10, scope: !5589)
!5592 = !DILocation(line: 2200, column: 3, scope: !5589)
!5593 = !DILocation(line: 2202, column: 6, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 2202, column: 6)
!5595 = !DILocation(line: 2202, column: 6, scope: !5570)
!5596 = !DILocation(line: 2203, column: 27, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 2202, column: 19)
!5598 = !DILocation(line: 2203, column: 32, scope: !5597)
!5599 = !DILocation(line: 2203, column: 10, scope: !5597)
!5600 = !DILocation(line: 2203, column: 8, scope: !5597)
!5601 = !DILocation(line: 2205, column: 7, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 2205, column: 7)
!5603 = !DILocation(line: 2205, column: 7, scope: !5597)
!5604 = !DILocation(line: 2206, column: 30, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 2205, column: 13)
!5606 = !DILocation(line: 2206, column: 35, scope: !5605)
!5607 = !DILocation(line: 2206, column: 41, scope: !5605)
!5608 = !DILocation(line: 2206, column: 10, scope: !5605)
!5609 = !DILocation(line: 2206, column: 8, scope: !5605)
!5610 = !DILocation(line: 2207, column: 8, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 2207, column: 8)
!5612 = !DILocation(line: 2207, column: 8, scope: !5605)
!5613 = !DILocation(line: 2208, column: 20, scope: !5611)
!5614 = !DILocation(line: 2208, column: 12, scope: !5611)
!5615 = !DILocation(line: 2208, column: 5, scope: !5611)
!5616 = !DILocation(line: 2209, column: 3, scope: !5605)
!5617 = !DILocation(line: 2210, column: 10, scope: !5597)
!5618 = !DILocation(line: 2210, column: 3, scope: !5597)
!5619 = !DILocation(line: 2214, column: 26, scope: !5570)
!5620 = !DILocation(line: 2214, column: 31, scope: !5570)
!5621 = !DILocation(line: 2214, column: 9, scope: !5570)
!5622 = !DILocation(line: 2214, column: 7, scope: !5570)
!5623 = !DILocation(line: 2215, column: 6, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 2215, column: 6)
!5625 = !DILocation(line: 2215, column: 6, scope: !5570)
!5626 = !DILocalVariable(name: "pname", scope: !5627, file: !3, line: 2216, type: !5628)
!5627 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 2215, column: 12)
!5628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 192, elements: !5629)
!5629 = !{!5630}
!5630 = !DISubrange(count: 24)
!5631 = !DILocation(line: 2216, column: 14, scope: !5627)
!5632 = !DILocalVariable(name: "nelm", scope: !5627, file: !3, line: 2217, type: !447)
!5633 = !DILocation(line: 2217, column: 10, scope: !5627)
!5634 = !DILocation(line: 2217, column: 17, scope: !5627)
!5635 = !DILocation(line: 2217, column: 20, scope: !5627)
!5636 = !DILocalVariable(name: "memcpy_ch", scope: !5627, file: !3, line: 2218, type: !4595)
!5637 = !DILocation(line: 2218, column: 8, scope: !5627)
!5638 = !DILocation(line: 2220, column: 28, scope: !5627)
!5639 = !DILocation(line: 2220, column: 33, scope: !5627)
!5640 = !DILocation(line: 2220, column: 38, scope: !5627)
!5641 = !DILocation(line: 2220, column: 15, scope: !5627)
!5642 = !DILocation(line: 2220, column: 13, scope: !5627)
!5643 = !DILocation(line: 2222, column: 8, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 2222, column: 7)
!5645 = !DILocation(line: 2222, column: 7, scope: !5627)
!5646 = !DILocation(line: 2223, column: 11, scope: !5644)
!5647 = !DILocation(line: 2223, column: 4, scope: !5644)
!5648 = !DILocation(line: 2225, column: 36, scope: !5627)
!5649 = !DILocation(line: 2225, column: 41, scope: !5627)
!5650 = !DILocation(line: 2225, column: 50, scope: !5627)
!5651 = !DILocation(line: 2226, column: 15, scope: !5627)
!5652 = !DILocation(line: 2226, column: 26, scope: !5627)
!5653 = !DILocation(line: 2225, column: 9, scope: !5627)
!5654 = !DILocation(line: 2225, column: 7, scope: !5627)
!5655 = !DILocation(line: 2227, column: 7, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 2227, column: 7)
!5657 = !DILocation(line: 2227, column: 7, scope: !5627)
!5658 = !DILocation(line: 2228, column: 19, scope: !5656)
!5659 = !DILocation(line: 2228, column: 11, scope: !5656)
!5660 = !DILocation(line: 2228, column: 4, scope: !5656)
!5661 = !DILocation(line: 2230, column: 3, scope: !5627)
!5662 = !DILocation(line: 2230, column: 13, scope: !5627)
!5663 = !DILocation(line: 2230, column: 19, scope: !5627)
!5664 = !DILocation(line: 2231, column: 27, scope: !5627)
!5665 = !DILocation(line: 2231, column: 3, scope: !5627)
!5666 = !DILocation(line: 2231, column: 9, scope: !5627)
!5667 = !DILocation(line: 2231, column: 25, scope: !5627)
!5668 = !DILocation(line: 2232, column: 2, scope: !5627)
!5669 = !DILocation(line: 2234, column: 26, scope: !5570)
!5670 = !DILocation(line: 2234, column: 31, scope: !5570)
!5671 = !DILocation(line: 2234, column: 9, scope: !5570)
!5672 = !DILocation(line: 2234, column: 7, scope: !5570)
!5673 = !DILocation(line: 2236, column: 6, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 2236, column: 6)
!5675 = !DILocation(line: 2236, column: 6, scope: !5570)
!5676 = !DILocalVariable(name: "pname", scope: !5677, file: !3, line: 2237, type: !5678)
!5677 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 2236, column: 12)
!5678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 232, elements: !5679)
!5679 = !{!5680}
!5680 = !DISubrange(count: 29)
!5681 = !DILocation(line: 2237, column: 14, scope: !5677)
!5682 = !DILocalVariable(name: "tmp", scope: !5677, file: !3, line: 2238, type: !5683)
!5683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5684, size: 64)
!5684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 64, elements: !256)
!5685 = !DILocation(line: 2238, column: 9, scope: !5677)
!5686 = !DILocalVariable(name: "rsv_slots", scope: !5677, file: !3, line: 2239, type: !5687)
!5687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5688, size: 64)
!5688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !253, size: 32, elements: !256)
!5689 = !DILocation(line: 2239, column: 9, scope: !5677)
!5690 = !DILocalVariable(name: "nelm", scope: !5677, file: !3, line: 2240, type: !447)
!5691 = !DILocation(line: 2240, column: 10, scope: !5677)
!5692 = !DILocation(line: 2240, column: 17, scope: !5677)
!5693 = !DILocation(line: 2240, column: 20, scope: !5677)
!5694 = !DILocalVariable(name: "rsv_info", scope: !5677, file: !3, line: 2241, type: !4589)
!5695 = !DILocation(line: 2241, column: 25, scope: !5677)
!5696 = !DILocalVariable(name: "i", scope: !5677, file: !3, line: 2242, type: !130)
!5697 = !DILocation(line: 2242, column: 7, scope: !5677)
!5698 = !DILocation(line: 2244, column: 8, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 2244, column: 7)
!5700 = !DILocation(line: 2244, column: 7, scope: !5677)
!5701 = !DILocation(line: 2245, column: 11, scope: !5699)
!5702 = !DILocation(line: 2245, column: 4, scope: !5699)
!5703 = !DILocation(line: 2247, column: 17, scope: !5677)
!5704 = !DILocation(line: 2247, column: 9, scope: !5677)
!5705 = !DILocation(line: 2247, column: 7, scope: !5677)
!5706 = !DILocation(line: 2248, column: 8, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 2248, column: 7)
!5708 = !DILocation(line: 2248, column: 7, scope: !5677)
!5709 = !DILocation(line: 2249, column: 11, scope: !5707)
!5710 = !DILocation(line: 2249, column: 4, scope: !5707)
!5711 = !DILocation(line: 2251, column: 27, scope: !5677)
!5712 = !DILocation(line: 2251, column: 14, scope: !5677)
!5713 = !DILocation(line: 2251, column: 12, scope: !5677)
!5714 = !DILocation(line: 2252, column: 8, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 2252, column: 7)
!5716 = !DILocation(line: 2252, column: 7, scope: !5677)
!5717 = !DILocation(line: 2253, column: 10, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 2252, column: 18)
!5719 = !DILocation(line: 2253, column: 4, scope: !5718)
!5720 = !DILocation(line: 2254, column: 11, scope: !5718)
!5721 = !DILocation(line: 2254, column: 4, scope: !5718)
!5722 = !DILocation(line: 2257, column: 28, scope: !5677)
!5723 = !DILocation(line: 2257, column: 33, scope: !5677)
!5724 = !DILocation(line: 2257, column: 38, scope: !5677)
!5725 = !DILocation(line: 2257, column: 15, scope: !5677)
!5726 = !DILocation(line: 2257, column: 13, scope: !5677)
!5727 = !DILocation(line: 2259, column: 8, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 2259, column: 7)
!5729 = !DILocation(line: 2259, column: 7, scope: !5677)
!5730 = !DILocation(line: 2260, column: 10, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 2259, column: 19)
!5732 = !DILocation(line: 2260, column: 4, scope: !5731)
!5733 = !DILocation(line: 2261, column: 11, scope: !5731)
!5734 = !DILocation(line: 2261, column: 4, scope: !5731)
!5735 = !DILocation(line: 2264, column: 36, scope: !5677)
!5736 = !DILocation(line: 2264, column: 41, scope: !5677)
!5737 = !DILocation(line: 2264, column: 50, scope: !5677)
!5738 = !DILocation(line: 2265, column: 15, scope: !5677)
!5739 = !DILocation(line: 2265, column: 8, scope: !5677)
!5740 = !DILocation(line: 2265, column: 20, scope: !5677)
!5741 = !DILocation(line: 2265, column: 25, scope: !5677)
!5742 = !DILocation(line: 2264, column: 9, scope: !5677)
!5743 = !DILocation(line: 2264, column: 7, scope: !5677)
!5744 = !DILocation(line: 2266, column: 7, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 2266, column: 7)
!5746 = !DILocation(line: 2266, column: 7, scope: !5677)
!5747 = !DILocation(line: 2267, column: 10, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 2266, column: 12)
!5749 = !DILocation(line: 2267, column: 4, scope: !5748)
!5750 = !DILocation(line: 2268, column: 19, scope: !5748)
!5751 = !DILocation(line: 2268, column: 11, scope: !5748)
!5752 = !DILocation(line: 2268, column: 4, scope: !5748)
!5753 = !DILocation(line: 2271, column: 10, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 2271, column: 3)
!5755 = !DILocation(line: 2271, column: 8, scope: !5754)
!5756 = !DILocation(line: 2271, column: 15, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 2271, column: 3)
!5758 = !DILocation(line: 2271, column: 19, scope: !5757)
!5759 = !DILocation(line: 2271, column: 17, scope: !5757)
!5760 = !DILocation(line: 2271, column: 3, scope: !5754)
!5761 = !DILocation(line: 2272, column: 22, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 2271, column: 30)
!5763 = !DILocation(line: 2272, column: 26, scope: !5762)
!5764 = !DILocation(line: 2272, column: 4, scope: !5762)
!5765 = !DILocation(line: 2272, column: 14, scope: !5762)
!5766 = !DILocation(line: 2272, column: 20, scope: !5762)
!5767 = !DILocation(line: 2273, column: 22, scope: !5762)
!5768 = !DILocation(line: 2273, column: 26, scope: !5762)
!5769 = !DILocation(line: 2273, column: 4, scope: !5762)
!5770 = !DILocation(line: 2273, column: 14, scope: !5762)
!5771 = !DILocation(line: 2273, column: 20, scope: !5762)
!5772 = !DILocation(line: 2274, column: 3, scope: !5762)
!5773 = !DILocation(line: 2271, column: 26, scope: !5757)
!5774 = !DILocation(line: 2271, column: 3, scope: !5757)
!5775 = distinct !{!5775, !5760, !5776}
!5776 = !DILocation(line: 2274, column: 3, scope: !5754)
!5777 = !DILocation(line: 2275, column: 3, scope: !5677)
!5778 = !DILocation(line: 2275, column: 13, scope: !5677)
!5779 = !DILocation(line: 2275, column: 22, scope: !5677)
!5780 = !DILocation(line: 2276, column: 3, scope: !5677)
!5781 = !DILocation(line: 2276, column: 13, scope: !5677)
!5782 = !DILocation(line: 2276, column: 22, scope: !5677)
!5783 = !DILocation(line: 2278, column: 15, scope: !5677)
!5784 = !DILocation(line: 2278, column: 3, scope: !5677)
!5785 = !DILocation(line: 2278, column: 9, scope: !5677)
!5786 = !DILocation(line: 2278, column: 13, scope: !5677)
!5787 = !DILocation(line: 2279, column: 44, scope: !5677)
!5788 = !DILocation(line: 2279, column: 3, scope: !5677)
!5789 = !DILocation(line: 2279, column: 9, scope: !5677)
!5790 = !DILocation(line: 2279, column: 14, scope: !5677)
!5791 = !DILocation(line: 2279, column: 24, scope: !5677)
!5792 = !DILocation(line: 2281, column: 9, scope: !5677)
!5793 = !DILocation(line: 2281, column: 3, scope: !5677)
!5794 = !DILocation(line: 2282, column: 2, scope: !5677)
!5795 = !DILocation(line: 2284, column: 9, scope: !5570)
!5796 = !DILocation(line: 2284, column: 2, scope: !5570)
!5797 = !DILocation(line: 2285, column: 1, scope: !5570)
!5798 = distinct !DISubprogram(name: "IS_ERR", scope: !5799, file: !5799, line: 34, type: !5800, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!5799 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5800 = !DISubroutineType(types: !5801)
!5801 = !{!314, !2263}
!5802 = !DILocalVariable(name: "ptr", arg: 1, scope: !5798, file: !5799, line: 34, type: !2263)
!5803 = !DILocation(line: 34, column: 60, scope: !5798)
!5804 = !DILocation(line: 36, column: 9, scope: !5798)
!5805 = !DILocation(line: 36, column: 2, scope: !5798)
!5806 = distinct !DISubprogram(name: "PTR_ERR", scope: !5799, file: !5799, line: 29, type: !5807, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!5807 = !DISubroutineType(types: !5808)
!5808 = !{!266, !2263}
!5809 = !DILocalVariable(name: "ptr", arg: 1, scope: !5806, file: !5799, line: 29, type: !2263)
!5810 = !DILocation(line: 29, column: 61, scope: !5806)
!5811 = !DILocation(line: 31, column: 16, scope: !5806)
!5812 = !DILocation(line: 31, column: 9, scope: !5806)
!5813 = !DILocation(line: 31, column: 2, scope: !5806)
!5814 = distinct !DISubprogram(name: "dma_set_mask_and_coherent", scope: !5815, file: !5815, line: 420, type: !5816, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!5815 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!5816 = !DISubroutineType(types: !5817)
!5817 = !{!130, !345, !542}
!5818 = !DILocalVariable(name: "dev", arg: 1, scope: !5814, file: !5815, line: 420, type: !345)
!5819 = !DILocation(line: 420, column: 60, scope: !5814)
!5820 = !DILocalVariable(name: "mask", arg: 2, scope: !5814, file: !5815, line: 420, type: !542)
!5821 = !DILocation(line: 420, column: 69, scope: !5814)
!5822 = !DILocalVariable(name: "rc", scope: !5814, file: !5815, line: 422, type: !130)
!5823 = !DILocation(line: 422, column: 6, scope: !5814)
!5824 = !DILocation(line: 422, column: 24, scope: !5814)
!5825 = !DILocation(line: 422, column: 29, scope: !5814)
!5826 = !DILocation(line: 422, column: 11, scope: !5814)
!5827 = !DILocation(line: 423, column: 6, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5814, file: !5815, line: 423, column: 6)
!5829 = !DILocation(line: 423, column: 9, scope: !5828)
!5830 = !DILocation(line: 423, column: 6, scope: !5814)
!5831 = !DILocation(line: 424, column: 25, scope: !5828)
!5832 = !DILocation(line: 424, column: 30, scope: !5828)
!5833 = !DILocation(line: 424, column: 3, scope: !5828)
!5834 = !DILocation(line: 425, column: 9, scope: !5814)
!5835 = !DILocation(line: 425, column: 2, scope: !5814)
!5836 = distinct !DISubprogram(name: "devm_kzalloc", scope: !73, file: !73, line: 215, type: !5837, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!5837 = !DISubroutineType(types: !5838)
!5838 = !{!258, !345, !447, !248}
!5839 = !DILocalVariable(name: "dev", arg: 1, scope: !5836, file: !73, line: 215, type: !345)
!5840 = !DILocation(line: 215, column: 49, scope: !5836)
!5841 = !DILocalVariable(name: "size", arg: 2, scope: !5836, file: !73, line: 215, type: !447)
!5842 = !DILocation(line: 215, column: 61, scope: !5836)
!5843 = !DILocalVariable(name: "gfp", arg: 3, scope: !5836, file: !73, line: 215, type: !248)
!5844 = !DILocation(line: 215, column: 73, scope: !5836)
!5845 = !DILocation(line: 217, column: 22, scope: !5836)
!5846 = !DILocation(line: 217, column: 27, scope: !5836)
!5847 = !DILocation(line: 217, column: 33, scope: !5836)
!5848 = !DILocation(line: 217, column: 37, scope: !5836)
!5849 = !DILocation(line: 217, column: 9, scope: !5836)
!5850 = !DILocation(line: 217, column: 2, scope: !5836)
!5851 = distinct !DISubprogram(name: "platform_set_drvdata", scope: !4688, file: !4688, line: 236, type: !5852, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!5852 = !DISubroutineType(types: !5853)
!5853 = !{null, !4694, !258}
!5854 = !DILocalVariable(name: "pdev", arg: 1, scope: !5851, file: !4688, line: 236, type: !4694)
!5855 = !DILocation(line: 236, column: 65, scope: !5851)
!5856 = !DILocalVariable(name: "data", arg: 2, scope: !5851, file: !4688, line: 237, type: !258)
!5857 = !DILocation(line: 237, column: 12, scope: !5851)
!5858 = !DILocation(line: 239, column: 19, scope: !5851)
!5859 = !DILocation(line: 239, column: 25, scope: !5851)
!5860 = !DILocation(line: 239, column: 30, scope: !5851)
!5861 = !DILocation(line: 239, column: 2, scope: !5851)
!5862 = !DILocation(line: 240, column: 1, scope: !5851)
!5863 = distinct !DISubprogram(name: "pm_runtime_get_sync", scope: !5864, file: !5864, line: 384, type: !3536, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!5864 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!5865 = !DILocalVariable(name: "dev", arg: 1, scope: !5863, file: !5864, line: 384, type: !345)
!5866 = !DILocation(line: 384, column: 54, scope: !5863)
!5867 = !DILocation(line: 386, column: 29, scope: !5863)
!5868 = !DILocation(line: 386, column: 9, scope: !5863)
!5869 = !DILocation(line: 386, column: 2, scope: !5863)
!5870 = distinct !DISubprogram(name: "pm_runtime_disable", scope: !5864, file: !5864, line: 524, type: !3527, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!5871 = !DILocalVariable(name: "dev", arg: 1, scope: !5870, file: !5864, line: 524, type: !345)
!5872 = !DILocation(line: 524, column: 54, scope: !5870)
!5873 = !DILocation(line: 526, column: 23, scope: !5870)
!5874 = !DILocation(line: 526, column: 2, scope: !5870)
!5875 = !DILocation(line: 527, column: 1, scope: !5870)
!5876 = distinct !DISubprogram(name: "edma_setup_from_hw", scope: !3, file: !3, line: 2076, type: !5877, scopeLine: 2078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!5877 = !DISubroutineType(types: !5878)
!5878 = !{!130, !345, !4584, !4579}
!5879 = !DILocalVariable(name: "dev", arg: 1, scope: !5876, file: !3, line: 2076, type: !345)
!5880 = !DILocation(line: 2076, column: 46, scope: !5876)
!5881 = !DILocalVariable(name: "pdata", arg: 2, scope: !5876, file: !3, line: 2076, type: !4584)
!5882 = !DILocation(line: 2076, column: 73, scope: !5876)
!5883 = !DILocalVariable(name: "ecc", arg: 3, scope: !5876, file: !3, line: 2077, type: !4579)
!5884 = !DILocation(line: 2077, column: 26, scope: !5876)
!5885 = !DILocalVariable(name: "i", scope: !5876, file: !3, line: 2079, type: !130)
!5886 = !DILocation(line: 2079, column: 6, scope: !5876)
!5887 = !DILocalVariable(name: "value", scope: !5876, file: !3, line: 2080, type: !244)
!5888 = !DILocation(line: 2080, column: 6, scope: !5876)
!5889 = !DILocalVariable(name: "cccfg", scope: !5876, file: !3, line: 2080, type: !244)
!5890 = !DILocation(line: 2080, column: 13, scope: !5876)
!5891 = !DILocalVariable(name: "queue_priority_map", scope: !5876, file: !3, line: 2081, type: !4597)
!5892 = !DILocation(line: 2081, column: 7, scope: !5876)
!5893 = !DILocation(line: 2084, column: 20, scope: !5876)
!5894 = !DILocation(line: 2084, column: 10, scope: !5876)
!5895 = !DILocation(line: 2084, column: 8, scope: !5876)
!5896 = !DILocation(line: 2086, column: 10, scope: !5876)
!5897 = !DILocation(line: 2086, column: 8, scope: !5876)
!5898 = !DILocation(line: 2087, column: 20, scope: !5876)
!5899 = !DILocation(line: 2087, column: 2, scope: !5876)
!5900 = !DILocation(line: 2087, column: 7, scope: !5876)
!5901 = !DILocation(line: 2087, column: 18, scope: !5876)
!5902 = !DILocation(line: 2089, column: 10, scope: !5876)
!5903 = !DILocation(line: 2089, column: 8, scope: !5876)
!5904 = !DILocation(line: 2090, column: 22, scope: !5876)
!5905 = !DILocation(line: 2090, column: 2, scope: !5876)
!5906 = !DILocation(line: 2090, column: 7, scope: !5876)
!5907 = !DILocation(line: 2090, column: 20, scope: !5876)
!5908 = !DILocation(line: 2092, column: 10, scope: !5876)
!5909 = !DILocation(line: 2092, column: 8, scope: !5876)
!5910 = !DILocation(line: 2093, column: 23, scope: !5876)
!5911 = !DILocation(line: 2093, column: 29, scope: !5876)
!5912 = !DILocation(line: 2093, column: 2, scope: !5876)
!5913 = !DILocation(line: 2093, column: 7, scope: !5876)
!5914 = !DILocation(line: 2093, column: 21, scope: !5876)
!5915 = !DILocation(line: 2095, column: 10, scope: !5876)
!5916 = !DILocation(line: 2095, column: 8, scope: !5876)
!5917 = !DILocation(line: 2096, column: 19, scope: !5876)
!5918 = !DILocation(line: 2096, column: 2, scope: !5876)
!5919 = !DILocation(line: 2096, column: 7, scope: !5876)
!5920 = !DILocation(line: 2096, column: 17, scope: !5876)
!5921 = !DILocation(line: 2098, column: 10, scope: !5876)
!5922 = !DILocation(line: 2098, column: 8, scope: !5876)
!5923 = !DILocation(line: 2099, column: 16, scope: !5876)
!5924 = !DILocation(line: 2099, column: 22, scope: !5876)
!5925 = !DILocation(line: 2099, column: 2, scope: !5876)
!5926 = !DILocation(line: 2099, column: 7, scope: !5876)
!5927 = !DILocation(line: 2099, column: 14, scope: !5876)
!5928 = !DILocation(line: 2101, column: 22, scope: !5876)
!5929 = !DILocation(line: 2101, column: 28, scope: !5876)
!5930 = !DILocation(line: 2101, column: 21, scope: !5876)
!5931 = !DILocation(line: 2101, column: 2, scope: !5876)
!5932 = !DILocation(line: 2101, column: 7, scope: !5876)
!5933 = !DILocation(line: 2101, column: 19, scope: !5876)
!5934 = !DILocation(line: 2112, column: 6, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 2112, column: 6)
!5936 = !DILocation(line: 2112, column: 13, scope: !5935)
!5937 = !DILocation(line: 2112, column: 6, scope: !5876)
!5938 = !DILocation(line: 2113, column: 3, scope: !5935)
!5939 = !DILocation(line: 2125, column: 36, scope: !5876)
!5940 = !DILocation(line: 2125, column: 41, scope: !5876)
!5941 = !DILocation(line: 2125, column: 46, scope: !5876)
!5942 = !DILocation(line: 2125, column: 53, scope: !5876)
!5943 = !DILocation(line: 2125, column: 23, scope: !5876)
!5944 = !DILocation(line: 2125, column: 21, scope: !5876)
!5945 = !DILocation(line: 2127, column: 7, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 2127, column: 6)
!5947 = !DILocation(line: 2127, column: 6, scope: !5876)
!5948 = !DILocation(line: 2128, column: 3, scope: !5946)
!5949 = !DILocation(line: 2130, column: 9, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 2130, column: 2)
!5951 = !DILocation(line: 2130, column: 7, scope: !5950)
!5952 = !DILocation(line: 2130, column: 14, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 2130, column: 2)
!5954 = !DILocation(line: 2130, column: 18, scope: !5953)
!5955 = !DILocation(line: 2130, column: 23, scope: !5953)
!5956 = !DILocation(line: 2130, column: 16, scope: !5953)
!5957 = !DILocation(line: 2130, column: 2, scope: !5950)
!5958 = !DILocation(line: 2131, column: 30, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 2130, column: 36)
!5960 = !DILocation(line: 2131, column: 3, scope: !5959)
!5961 = !DILocation(line: 2131, column: 22, scope: !5959)
!5962 = !DILocation(line: 2131, column: 28, scope: !5959)
!5963 = !DILocation(line: 2132, column: 30, scope: !5959)
!5964 = !DILocation(line: 2132, column: 3, scope: !5959)
!5965 = !DILocation(line: 2132, column: 22, scope: !5959)
!5966 = !DILocation(line: 2132, column: 28, scope: !5959)
!5967 = !DILocation(line: 2133, column: 2, scope: !5959)
!5968 = !DILocation(line: 2130, column: 32, scope: !5953)
!5969 = !DILocation(line: 2130, column: 2, scope: !5953)
!5970 = distinct !{!5970, !5957, !5971}
!5971 = !DILocation(line: 2133, column: 2, scope: !5950)
!5972 = !DILocation(line: 2134, column: 2, scope: !5876)
!5973 = !DILocation(line: 2134, column: 21, scope: !5876)
!5974 = !DILocation(line: 2134, column: 27, scope: !5876)
!5975 = !DILocation(line: 2135, column: 2, scope: !5876)
!5976 = !DILocation(line: 2135, column: 21, scope: !5876)
!5977 = !DILocation(line: 2135, column: 27, scope: !5876)
!5978 = !DILocation(line: 2137, column: 34, scope: !5876)
!5979 = !DILocation(line: 2137, column: 2, scope: !5876)
!5980 = !DILocation(line: 2137, column: 9, scope: !5876)
!5981 = !DILocation(line: 2137, column: 32, scope: !5876)
!5982 = !DILocation(line: 2139, column: 25, scope: !5876)
!5983 = !DILocation(line: 2139, column: 27, scope: !5876)
!5984 = !DILocation(line: 2139, column: 2, scope: !5876)
!5985 = !DILocation(line: 2139, column: 9, scope: !5876)
!5986 = !DILocation(line: 2139, column: 23, scope: !5876)
!5987 = !DILocation(line: 2141, column: 2, scope: !5876)
!5988 = !DILocation(line: 2142, column: 1, scope: !5876)
!5989 = distinct !DISubprogram(name: "devm_kcalloc", scope: !73, file: !73, line: 229, type: !5990, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{!258, !345, !447, !447, !248}
!5992 = !DILocalVariable(name: "dev", arg: 1, scope: !5989, file: !73, line: 229, type: !345)
!5993 = !DILocation(line: 229, column: 49, scope: !5989)
!5994 = !DILocalVariable(name: "n", arg: 2, scope: !5989, file: !73, line: 230, type: !447)
!5995 = !DILocation(line: 230, column: 13, scope: !5989)
!5996 = !DILocalVariable(name: "size", arg: 3, scope: !5989, file: !73, line: 230, type: !447)
!5997 = !DILocation(line: 230, column: 23, scope: !5989)
!5998 = !DILocalVariable(name: "flags", arg: 4, scope: !5989, file: !73, line: 230, type: !248)
!5999 = !DILocation(line: 230, column: 35, scope: !5989)
!6000 = !DILocation(line: 232, column: 28, scope: !5989)
!6001 = !DILocation(line: 232, column: 33, scope: !5989)
!6002 = !DILocation(line: 232, column: 36, scope: !5989)
!6003 = !DILocation(line: 232, column: 42, scope: !5989)
!6004 = !DILocation(line: 232, column: 48, scope: !5989)
!6005 = !DILocation(line: 232, column: 9, scope: !5989)
!6006 = !DILocation(line: 232, column: 2, scope: !5989)
!6007 = distinct !DISubprogram(name: "bitmap_fill", scope: !4789, file: !4789, line: 241, type: !6008, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{null, !271, !7}
!6010 = !DILocalVariable(name: "dst", arg: 1, scope: !6007, file: !4789, line: 241, type: !271)
!6011 = !DILocation(line: 241, column: 47, scope: !6007)
!6012 = !DILocalVariable(name: "nbits", arg: 2, scope: !6007, file: !4789, line: 241, type: !7)
!6013 = !DILocation(line: 241, column: 65, scope: !6007)
!6014 = !DILocalVariable(name: "len", scope: !6007, file: !4789, line: 243, type: !7)
!6015 = !DILocation(line: 243, column: 15, scope: !6007)
!6016 = !DILocation(line: 243, column: 21, scope: !6007)
!6017 = !DILocation(line: 243, column: 42, scope: !6007)
!6018 = !DILocation(line: 244, column: 9, scope: !6007)
!6019 = !DILocation(line: 244, column: 2, scope: !6007)
!6020 = !DILocation(line: 244, column: 20, scope: !6007)
!6021 = !DILocation(line: 245, column: 1, scope: !6007)
!6022 = distinct !DISubprogram(name: "test_bit", scope: !6023, file: !6023, line: 132, type: !6024, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6023 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!6024 = !DISubroutineType(types: !6025)
!6025 = !{!314, !266, !6026}
!6026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6027, size: 64)
!6027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6028)
!6028 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !265)
!6029 = !DILocalVariable(name: "nr", arg: 1, scope: !6030, file: !6031, line: 210, type: !266)
!6030 = distinct !DISubprogram(name: "variable_test_bit", scope: !6031, file: !6031, line: 210, type: !6024, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6031 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6032 = !DILocation(line: 210, column: 52, scope: !6030, inlinedAt: !6033)
!6033 = distinct !DILocation(line: 135, column: 9, scope: !6022)
!6034 = !DILocalVariable(name: "addr", arg: 2, scope: !6030, file: !6031, line: 210, type: !6026)
!6035 = !DILocation(line: 210, column: 86, scope: !6030, inlinedAt: !6033)
!6036 = !DILocalVariable(name: "oldbit", scope: !6030, file: !6031, line: 212, type: !314)
!6037 = !DILocation(line: 212, column: 7, scope: !6030, inlinedAt: !6033)
!6038 = !DILocalVariable(name: "nr", arg: 1, scope: !6039, file: !6031, line: 204, type: !266)
!6039 = distinct !DISubprogram(name: "constant_test_bit", scope: !6031, file: !6031, line: 204, type: !6024, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6040 = !DILocation(line: 204, column: 52, scope: !6039, inlinedAt: !6041)
!6041 = distinct !DILocation(line: 135, column: 9, scope: !6022)
!6042 = !DILocalVariable(name: "addr", arg: 2, scope: !6039, file: !6031, line: 204, type: !6026)
!6043 = !DILocation(line: 204, column: 86, scope: !6039, inlinedAt: !6041)
!6044 = !DILocalVariable(name: "v", arg: 1, scope: !6045, file: !6046, line: 69, type: !6049)
!6045 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !6046, file: !6046, line: 69, type: !6047, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6046 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6047 = !DISubroutineType(types: !6048)
!6048 = !{null, !6049, !447}
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6050, size: 64)
!6050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6051)
!6051 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6052 = !DILocation(line: 69, column: 73, scope: !6045, inlinedAt: !6053)
!6053 = distinct !DILocation(line: 134, column: 2, scope: !6022)
!6054 = !DILocalVariable(name: "size", arg: 2, scope: !6045, file: !6046, line: 69, type: !447)
!6055 = !DILocation(line: 69, column: 83, scope: !6045, inlinedAt: !6053)
!6056 = !DILocalVariable(name: "nr", arg: 1, scope: !6022, file: !6023, line: 132, type: !266)
!6057 = !DILocation(line: 132, column: 34, scope: !6022)
!6058 = !DILocalVariable(name: "addr", arg: 2, scope: !6022, file: !6023, line: 132, type: !6026)
!6059 = !DILocation(line: 132, column: 68, scope: !6022)
!6060 = !DILocation(line: 134, column: 25, scope: !6022)
!6061 = !DILocation(line: 134, column: 32, scope: !6022)
!6062 = !DILocation(line: 134, column: 30, scope: !6022)
!6063 = !DILocation(line: 71, column: 19, scope: !6045, inlinedAt: !6053)
!6064 = !DILocation(line: 71, column: 22, scope: !6045, inlinedAt: !6053)
!6065 = !DILocation(line: 71, column: 2, scope: !6045, inlinedAt: !6053)
!6066 = !DILocation(line: 72, column: 2, scope: !6045, inlinedAt: !6053)
!6067 = !DILocation(line: 135, column: 9, scope: !6022)
!6068 = !DILocation(line: 206, column: 19, scope: !6039, inlinedAt: !6041)
!6069 = !DILocation(line: 206, column: 22, scope: !6039, inlinedAt: !6041)
!6070 = !DILocation(line: 206, column: 15, scope: !6039, inlinedAt: !6041)
!6071 = !DILocation(line: 207, column: 4, scope: !6039, inlinedAt: !6041)
!6072 = !DILocation(line: 207, column: 9, scope: !6039, inlinedAt: !6041)
!6073 = !DILocation(line: 207, column: 12, scope: !6039, inlinedAt: !6041)
!6074 = !DILocation(line: 206, column: 44, scope: !6039, inlinedAt: !6041)
!6075 = !DILocation(line: 207, column: 37, scope: !6039, inlinedAt: !6041)
!6076 = !DILocation(line: 217, column: 33, scope: !6030, inlinedAt: !6033)
!6077 = !DILocation(line: 217, column: 46, scope: !6030, inlinedAt: !6033)
!6078 = !DILocation(line: 214, column: 2, scope: !6030, inlinedAt: !6033)
!6079 = !{i32 -2146940726, i32 -2146940666}
!6080 = !DILocation(line: 219, column: 9, scope: !6030, inlinedAt: !6033)
!6081 = !DILocation(line: 135, column: 2, scope: !6022)
!6082 = distinct !DISubprogram(name: "edma_write_slot", scope: !3, file: !3, line: 471, type: !6083, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6083 = !DISubroutineType(types: !6084)
!6084 = !{null, !4579, !7, !6085}
!6085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4747, size: 64)
!6086 = !DILocalVariable(name: "ecc", arg: 1, scope: !6082, file: !3, line: 471, type: !4579)
!6087 = !DILocation(line: 471, column: 45, scope: !6082)
!6088 = !DILocalVariable(name: "slot", arg: 2, scope: !6082, file: !3, line: 471, type: !7)
!6089 = !DILocation(line: 471, column: 59, scope: !6082)
!6090 = !DILocalVariable(name: "param", arg: 3, scope: !6082, file: !3, line: 472, type: !6085)
!6091 = !DILocation(line: 472, column: 35, scope: !6082)
!6092 = !DILocation(line: 474, column: 9, scope: !6082)
!6093 = !DILocation(line: 474, column: 7, scope: !6082)
!6094 = !DILocation(line: 475, column: 6, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6082, file: !3, line: 475, column: 6)
!6096 = !DILocation(line: 475, column: 14, scope: !6095)
!6097 = !DILocation(line: 475, column: 19, scope: !6095)
!6098 = !DILocation(line: 475, column: 11, scope: !6095)
!6099 = !DILocation(line: 475, column: 6, scope: !6082)
!6100 = !DILocation(line: 476, column: 3, scope: !6095)
!6101 = !DILocation(line: 477, column: 14, scope: !6082)
!6102 = !DILocation(line: 477, column: 19, scope: !6082)
!6103 = !DILocation(line: 477, column: 26, scope: !6082)
!6104 = !DILocation(line: 477, column: 24, scope: !6082)
!6105 = !DILocation(line: 477, column: 45, scope: !6082)
!6106 = !DILocation(line: 477, column: 2, scope: !6082)
!6107 = !DILocation(line: 478, column: 1, scope: !6082)
!6108 = distinct !DISubprogram(name: "dev_name", scope: !73, file: !73, line: 609, type: !6109, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6109 = !DISubroutineType(types: !6110)
!6110 = !{!324, !3834}
!6111 = !DILocalVariable(name: "dev", arg: 1, scope: !6108, file: !73, line: 609, type: !3834)
!6112 = !DILocation(line: 609, column: 57, scope: !6108)
!6113 = !DILocation(line: 612, column: 6, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6108, file: !73, line: 612, column: 6)
!6115 = !DILocation(line: 612, column: 11, scope: !6114)
!6116 = !DILocation(line: 612, column: 6, scope: !6108)
!6117 = !DILocation(line: 613, column: 10, scope: !6114)
!6118 = !DILocation(line: 613, column: 15, scope: !6114)
!6119 = !DILocation(line: 613, column: 3, scope: !6114)
!6120 = !DILocation(line: 615, column: 23, scope: !6108)
!6121 = !DILocation(line: 615, column: 28, scope: !6108)
!6122 = !DILocation(line: 615, column: 9, scope: !6108)
!6123 = !DILocation(line: 615, column: 2, scope: !6108)
!6124 = !DILocation(line: 616, column: 1, scope: !6108)
!6125 = distinct !DISubprogram(name: "devm_request_irq", scope: !108, file: !108, line: 203, type: !6126, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6126 = !DISubroutineType(types: !6127)
!6127 = !{!130, !345, !7, !4139, !265, !324, !258}
!6128 = !DILocalVariable(name: "dev", arg: 1, scope: !6125, file: !108, line: 203, type: !345)
!6129 = !DILocation(line: 203, column: 33, scope: !6125)
!6130 = !DILocalVariable(name: "irq", arg: 2, scope: !6125, file: !108, line: 203, type: !7)
!6131 = !DILocation(line: 203, column: 51, scope: !6125)
!6132 = !DILocalVariable(name: "handler", arg: 3, scope: !6125, file: !108, line: 203, type: !4139)
!6133 = !DILocation(line: 203, column: 70, scope: !6125)
!6134 = !DILocalVariable(name: "irqflags", arg: 4, scope: !6125, file: !108, line: 204, type: !265)
!6135 = !DILocation(line: 204, column: 18, scope: !6125)
!6136 = !DILocalVariable(name: "devname", arg: 5, scope: !6125, file: !108, line: 204, type: !324)
!6137 = !DILocation(line: 204, column: 40, scope: !6125)
!6138 = !DILocalVariable(name: "dev_id", arg: 6, scope: !6125, file: !108, line: 204, type: !258)
!6139 = !DILocation(line: 204, column: 55, scope: !6125)
!6140 = !DILocation(line: 206, column: 35, scope: !6125)
!6141 = !DILocation(line: 206, column: 40, scope: !6125)
!6142 = !DILocation(line: 206, column: 45, scope: !6125)
!6143 = !DILocation(line: 206, column: 60, scope: !6125)
!6144 = !DILocation(line: 207, column: 7, scope: !6125)
!6145 = !DILocation(line: 207, column: 16, scope: !6125)
!6146 = !DILocation(line: 206, column: 9, scope: !6125)
!6147 = !DILocation(line: 206, column: 2, scope: !6125)
!6148 = distinct !DISubprogram(name: "dma_irq_handler", scope: !3, file: !3, line: 1548, type: !4141, scopeLine: 1549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6149 = !DILocalVariable(name: "word", arg: 1, scope: !6150, file: !6031, line: 233, type: !265)
!6150 = distinct !DISubprogram(name: "__ffs", scope: !6031, file: !6031, line: 233, type: !6151, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{!265, !265}
!6153 = !DILocation(line: 233, column: 58, scope: !6150, inlinedAt: !6154)
!6154 = distinct !DILocation(line: 1578, column: 10, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 1574, column: 5)
!6156 = !DILocalVariable(name: "irq", arg: 1, scope: !6148, file: !3, line: 1548, type: !130)
!6157 = !DILocation(line: 1548, column: 40, scope: !6148)
!6158 = !DILocalVariable(name: "data", arg: 2, scope: !6148, file: !3, line: 1548, type: !258)
!6159 = !DILocation(line: 1548, column: 51, scope: !6148)
!6160 = !DILocalVariable(name: "ecc", scope: !6148, file: !3, line: 1550, type: !4579)
!6161 = !DILocation(line: 1550, column: 18, scope: !6148)
!6162 = !DILocation(line: 1550, column: 24, scope: !6148)
!6163 = !DILocalVariable(name: "ctlr", scope: !6148, file: !3, line: 1551, type: !130)
!6164 = !DILocation(line: 1551, column: 6, scope: !6148)
!6165 = !DILocalVariable(name: "sh_ier", scope: !6148, file: !3, line: 1552, type: !244)
!6166 = !DILocation(line: 1552, column: 6, scope: !6148)
!6167 = !DILocalVariable(name: "sh_ipr", scope: !6148, file: !3, line: 1553, type: !244)
!6168 = !DILocation(line: 1553, column: 6, scope: !6148)
!6169 = !DILocalVariable(name: "bank", scope: !6148, file: !3, line: 1554, type: !244)
!6170 = !DILocation(line: 1554, column: 6, scope: !6148)
!6171 = !DILocation(line: 1556, column: 9, scope: !6148)
!6172 = !DILocation(line: 1556, column: 14, scope: !6148)
!6173 = !DILocation(line: 1556, column: 7, scope: !6148)
!6174 = !DILocation(line: 1557, column: 6, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 1557, column: 6)
!6176 = !DILocation(line: 1557, column: 11, scope: !6175)
!6177 = !DILocation(line: 1557, column: 6, scope: !6148)
!6178 = !DILocation(line: 1558, column: 3, scope: !6175)
!6179 = !DILocation(line: 1562, column: 35, scope: !6148)
!6180 = !DILocation(line: 1562, column: 11, scope: !6148)
!6181 = !DILocation(line: 1562, column: 9, scope: !6148)
!6182 = !DILocation(line: 1563, column: 7, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 1563, column: 6)
!6184 = !DILocation(line: 1563, column: 6, scope: !6148)
!6185 = !DILocation(line: 1564, column: 36, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 1563, column: 15)
!6187 = !DILocation(line: 1564, column: 12, scope: !6186)
!6188 = !DILocation(line: 1564, column: 10, scope: !6186)
!6189 = !DILocation(line: 1565, column: 8, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 1565, column: 7)
!6191 = !DILocation(line: 1565, column: 7, scope: !6186)
!6192 = !DILocation(line: 1566, column: 4, scope: !6190)
!6193 = !DILocation(line: 1567, column: 36, scope: !6186)
!6194 = !DILocation(line: 1567, column: 12, scope: !6186)
!6195 = !DILocation(line: 1567, column: 10, scope: !6186)
!6196 = !DILocation(line: 1568, column: 8, scope: !6186)
!6197 = !DILocation(line: 1569, column: 2, scope: !6186)
!6198 = !DILocation(line: 1570, column: 36, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 1569, column: 9)
!6200 = !DILocation(line: 1570, column: 12, scope: !6199)
!6201 = !DILocation(line: 1570, column: 10, scope: !6199)
!6202 = !DILocation(line: 1571, column: 8, scope: !6199)
!6203 = !DILocation(line: 1574, column: 2, scope: !6148)
!6204 = !DILocalVariable(name: "slot", scope: !6155, file: !3, line: 1575, type: !244)
!6205 = !DILocation(line: 1575, column: 7, scope: !6155)
!6206 = !DILocalVariable(name: "channel", scope: !6155, file: !3, line: 1576, type: !244)
!6207 = !DILocation(line: 1576, column: 7, scope: !6155)
!6208 = !DILocation(line: 1578, column: 16, scope: !6155)
!6209 = !DILocation(line: 237, column: 11, scope: !6150, inlinedAt: !6154)
!6210 = !DILocation(line: 235, column: 2, scope: !6150, inlinedAt: !6154)
!6211 = !{i32 498711}
!6212 = !DILocation(line: 238, column: 9, scope: !6150, inlinedAt: !6154)
!6213 = !DILocation(line: 1578, column: 10, scope: !6155)
!6214 = !DILocation(line: 1578, column: 8, scope: !6155)
!6215 = !DILocation(line: 1579, column: 15, scope: !6155)
!6216 = !DILocation(line: 1579, column: 13, scope: !6155)
!6217 = !DILocation(line: 1579, column: 10, scope: !6155)
!6218 = !DILocation(line: 1581, column: 7, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 1581, column: 7)
!6220 = !DILocation(line: 1581, column: 16, scope: !6219)
!6221 = !DILocation(line: 1581, column: 14, scope: !6219)
!6222 = !DILocation(line: 1581, column: 7, scope: !6155)
!6223 = !DILocation(line: 1582, column: 15, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 1581, column: 27)
!6225 = !DILocation(line: 1582, column: 20, scope: !6224)
!6226 = !DILocation(line: 1582, column: 28, scope: !6224)
!6227 = !DILocation(line: 1582, column: 26, scope: !6224)
!6228 = !DILocation(line: 1582, column: 12, scope: !6224)
!6229 = !DILocation(line: 1584, column: 29, scope: !6224)
!6230 = !DILocation(line: 1584, column: 42, scope: !6224)
!6231 = !DILocation(line: 1584, column: 48, scope: !6224)
!6232 = !DILocation(line: 1584, column: 4, scope: !6224)
!6233 = !DILocation(line: 1585, column: 29, scope: !6224)
!6234 = !DILocation(line: 1585, column: 34, scope: !6224)
!6235 = !DILocation(line: 1585, column: 46, scope: !6224)
!6236 = !DILocation(line: 1585, column: 4, scope: !6224)
!6237 = !DILocation(line: 1586, column: 3, scope: !6224)
!6238 = !DILocation(line: 1587, column: 2, scope: !6155)
!6239 = !DILocation(line: 1587, column: 11, scope: !6148)
!6240 = distinct !{!6240, !6203, !6241}
!6241 = !DILocation(line: 1587, column: 17, scope: !6148)
!6242 = !DILocation(line: 1589, column: 21, scope: !6148)
!6243 = !DILocation(line: 1589, column: 2, scope: !6148)
!6244 = !DILocation(line: 1590, column: 2, scope: !6148)
!6245 = !DILocation(line: 1591, column: 1, scope: !6148)
!6246 = distinct !DISubprogram(name: "dma_ccerr_handler", scope: !3, file: !3, line: 1647, type: !4141, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6247 = !DILocalVariable(name: "irq", arg: 1, scope: !6246, file: !3, line: 1647, type: !130)
!6248 = !DILocation(line: 1647, column: 42, scope: !6246)
!6249 = !DILocalVariable(name: "data", arg: 2, scope: !6246, file: !3, line: 1647, type: !258)
!6250 = !DILocation(line: 1647, column: 53, scope: !6246)
!6251 = !DILocalVariable(name: "ecc", scope: !6246, file: !3, line: 1649, type: !4579)
!6252 = !DILocation(line: 1649, column: 18, scope: !6246)
!6253 = !DILocation(line: 1649, column: 24, scope: !6246)
!6254 = !DILocalVariable(name: "i", scope: !6246, file: !3, line: 1650, type: !130)
!6255 = !DILocation(line: 1650, column: 6, scope: !6246)
!6256 = !DILocalVariable(name: "j", scope: !6246, file: !3, line: 1650, type: !130)
!6257 = !DILocation(line: 1650, column: 9, scope: !6246)
!6258 = !DILocalVariable(name: "ctlr", scope: !6246, file: !3, line: 1651, type: !130)
!6259 = !DILocation(line: 1651, column: 6, scope: !6246)
!6260 = !DILocalVariable(name: "cnt", scope: !6246, file: !3, line: 1652, type: !7)
!6261 = !DILocation(line: 1652, column: 15, scope: !6246)
!6262 = !DILocalVariable(name: "val", scope: !6246, file: !3, line: 1653, type: !7)
!6263 = !DILocation(line: 1653, column: 15, scope: !6246)
!6264 = !DILocation(line: 1655, column: 9, scope: !6246)
!6265 = !DILocation(line: 1655, column: 14, scope: !6246)
!6266 = !DILocation(line: 1655, column: 7, scope: !6246)
!6267 = !DILocation(line: 1656, column: 6, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 1656, column: 6)
!6269 = !DILocation(line: 1656, column: 11, scope: !6268)
!6270 = !DILocation(line: 1656, column: 6, scope: !6246)
!6271 = !DILocation(line: 1657, column: 3, scope: !6268)
!6272 = !DILocation(line: 1661, column: 26, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 1661, column: 6)
!6274 = !DILocation(line: 1661, column: 7, scope: !6273)
!6275 = !DILocation(line: 1661, column: 6, scope: !6246)
!6276 = !DILocation(line: 1667, column: 3, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 1661, column: 32)
!6278 = !DILocation(line: 1669, column: 14, scope: !6277)
!6279 = !DILocation(line: 1669, column: 3, scope: !6277)
!6280 = !DILocation(line: 1670, column: 3, scope: !6277)
!6281 = !DILocation(line: 1673, column: 2, scope: !6246)
!6282 = !DILocation(line: 1675, column: 10, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 1675, column: 3)
!6284 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 1673, column: 12)
!6285 = !DILocation(line: 1675, column: 8, scope: !6283)
!6286 = !DILocation(line: 1675, column: 15, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1675, column: 3)
!6288 = !DILocation(line: 1675, column: 17, scope: !6287)
!6289 = !DILocation(line: 1675, column: 3, scope: !6283)
!6290 = !DILocalVariable(name: "emr", scope: !6291, file: !3, line: 1676, type: !265)
!6291 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 1675, column: 27)
!6292 = !DILocation(line: 1676, column: 18, scope: !6291)
!6293 = !DILocation(line: 1678, column: 26, scope: !6291)
!6294 = !DILocation(line: 1678, column: 41, scope: !6291)
!6295 = !DILocation(line: 1678, column: 10, scope: !6291)
!6296 = !DILocation(line: 1678, column: 8, scope: !6291)
!6297 = !DILocation(line: 1679, column: 9, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1679, column: 8)
!6299 = !DILocation(line: 1679, column: 8, scope: !6291)
!6300 = !DILocation(line: 1680, column: 5, scope: !6298)
!6301 = !DILocation(line: 1683, column: 10, scope: !6291)
!6302 = !DILocation(line: 1683, column: 8, scope: !6291)
!6303 = !DILocation(line: 1684, column: 13, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1684, column: 4)
!6305 = !DILocation(line: 1684, column: 11, scope: !6304)
!6306 = !DILocation(line: 1684, column: 9, scope: !6304)
!6307 = !DILocation(line: 1684, column: 41, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 1684, column: 4)
!6309 = !DILocation(line: 1684, column: 43, scope: !6308)
!6310 = !DILocation(line: 1684, column: 4, scope: !6304)
!6311 = !DILocalVariable(name: "k", scope: !6312, file: !3, line: 1686, type: !130)
!6312 = distinct !DILexicalBlock(scope: !6308, file: !3, line: 1685, column: 45)
!6313 = !DILocation(line: 1686, column: 9, scope: !6312)
!6314 = !DILocation(line: 1686, column: 14, scope: !6312)
!6315 = !DILocation(line: 1686, column: 16, scope: !6312)
!6316 = !DILocation(line: 1686, column: 24, scope: !6312)
!6317 = !DILocation(line: 1686, column: 22, scope: !6312)
!6318 = !DILocation(line: 1689, column: 22, scope: !6312)
!6319 = !DILocation(line: 1689, column: 38, scope: !6312)
!6320 = !DILocation(line: 1689, column: 41, scope: !6312)
!6321 = !DILocation(line: 1689, column: 5, scope: !6312)
!6322 = !DILocation(line: 1691, column: 30, scope: !6312)
!6323 = !DILocation(line: 1691, column: 44, scope: !6312)
!6324 = !DILocation(line: 1692, column: 9, scope: !6312)
!6325 = !DILocation(line: 1691, column: 5, scope: !6312)
!6326 = !DILocation(line: 1693, column: 25, scope: !6312)
!6327 = !DILocation(line: 1693, column: 30, scope: !6312)
!6328 = !DILocation(line: 1693, column: 42, scope: !6312)
!6329 = !DILocation(line: 1693, column: 5, scope: !6312)
!6330 = !DILocation(line: 1694, column: 4, scope: !6312)
!6331 = !DILocation(line: 1685, column: 37, scope: !6308)
!6332 = !DILocation(line: 1685, column: 39, scope: !6308)
!6333 = !DILocation(line: 1685, column: 13, scope: !6308)
!6334 = !DILocation(line: 1685, column: 11, scope: !6308)
!6335 = !DILocation(line: 1684, column: 4, scope: !6308)
!6336 = distinct !{!6336, !6310, !6337}
!6337 = !DILocation(line: 1694, column: 4, scope: !6304)
!6338 = !DILocation(line: 1695, column: 3, scope: !6291)
!6339 = !DILocation(line: 1675, column: 23, scope: !6287)
!6340 = !DILocation(line: 1675, column: 3, scope: !6287)
!6341 = distinct !{!6341, !6289, !6342}
!6342 = !DILocation(line: 1695, column: 3, scope: !6283)
!6343 = !DILocation(line: 1697, column: 19, scope: !6284)
!6344 = !DILocation(line: 1697, column: 9, scope: !6284)
!6345 = !DILocation(line: 1697, column: 7, scope: !6284)
!6346 = !DILocation(line: 1698, column: 7, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 1698, column: 7)
!6348 = !DILocation(line: 1698, column: 7, scope: !6284)
!6349 = !DILocation(line: 1701, column: 15, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 1698, column: 12)
!6351 = !DILocation(line: 1701, column: 32, scope: !6350)
!6352 = !DILocation(line: 1701, column: 4, scope: !6350)
!6353 = !DILocation(line: 1702, column: 23, scope: !6350)
!6354 = !DILocation(line: 1702, column: 38, scope: !6350)
!6355 = !DILocation(line: 1702, column: 4, scope: !6350)
!6356 = !DILocation(line: 1703, column: 3, scope: !6350)
!6357 = !DILocation(line: 1705, column: 19, scope: !6284)
!6358 = !DILocation(line: 1705, column: 9, scope: !6284)
!6359 = !DILocation(line: 1705, column: 7, scope: !6284)
!6360 = !DILocation(line: 1706, column: 7, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 1706, column: 7)
!6362 = !DILocation(line: 1706, column: 7, scope: !6284)
!6363 = !DILocation(line: 1707, column: 4, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 1706, column: 12)
!6365 = !DILocation(line: 1709, column: 15, scope: !6364)
!6366 = !DILocation(line: 1709, column: 35, scope: !6364)
!6367 = !DILocation(line: 1709, column: 4, scope: !6364)
!6368 = !DILocation(line: 1710, column: 3, scope: !6364)
!6369 = !DILocation(line: 1712, column: 27, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 1712, column: 7)
!6371 = !DILocation(line: 1712, column: 8, scope: !6370)
!6372 = !DILocation(line: 1712, column: 7, scope: !6284)
!6373 = !DILocation(line: 1713, column: 4, scope: !6370)
!6374 = !DILocation(line: 1714, column: 6, scope: !6284)
!6375 = !DILocation(line: 1715, column: 7, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 1715, column: 7)
!6377 = !DILocation(line: 1715, column: 11, scope: !6376)
!6378 = !DILocation(line: 1715, column: 7, scope: !6284)
!6379 = !DILocation(line: 1716, column: 4, scope: !6376)
!6380 = distinct !{!6380, !6281, !6381}
!6381 = !DILocation(line: 1717, column: 2, scope: !6246)
!6382 = !DILocation(line: 1718, column: 13, scope: !6246)
!6383 = !DILocation(line: 1718, column: 2, scope: !6246)
!6384 = !DILocation(line: 1719, column: 2, scope: !6246)
!6385 = !DILocation(line: 1720, column: 1, scope: !6246)
!6386 = distinct !DISubprogram(name: "edma_alloc_slot", scope: !3, file: !3, line: 506, type: !6387, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6387 = !DISubroutineType(types: !6388)
!6388 = !{!130, !4579, !130}
!6389 = !DILocalVariable(name: "ecc", arg: 1, scope: !6386, file: !3, line: 506, type: !4579)
!6390 = !DILocation(line: 506, column: 44, scope: !6386)
!6391 = !DILocalVariable(name: "slot", arg: 2, scope: !6386, file: !3, line: 506, type: !130)
!6392 = !DILocation(line: 506, column: 53, scope: !6386)
!6393 = !DILocation(line: 508, column: 6, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 508, column: 6)
!6395 = !DILocation(line: 508, column: 11, scope: !6394)
!6396 = !DILocation(line: 508, column: 6, scope: !6386)
!6397 = !DILocation(line: 509, column: 10, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 508, column: 17)
!6399 = !DILocation(line: 509, column: 8, scope: !6398)
!6400 = !DILocation(line: 511, column: 7, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 511, column: 7)
!6402 = !DILocation(line: 511, column: 12, scope: !6401)
!6403 = !DILocation(line: 511, column: 24, scope: !6401)
!6404 = !DILocation(line: 511, column: 27, scope: !6401)
!6405 = !DILocation(line: 511, column: 34, scope: !6401)
!6406 = !DILocation(line: 511, column: 39, scope: !6401)
!6407 = !DILocation(line: 511, column: 32, scope: !6401)
!6408 = !DILocation(line: 511, column: 7, scope: !6398)
!6409 = !DILocation(line: 512, column: 9, scope: !6401)
!6410 = !DILocation(line: 512, column: 4, scope: !6401)
!6411 = !DILocation(line: 513, column: 2, scope: !6398)
!6412 = !DILocation(line: 515, column: 6, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 515, column: 6)
!6414 = !DILocation(line: 515, column: 11, scope: !6413)
!6415 = !DILocation(line: 515, column: 6, scope: !6386)
!6416 = !DILocation(line: 516, column: 7, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 516, column: 7)
!6418 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 515, column: 16)
!6419 = !DILocation(line: 516, column: 12, scope: !6417)
!6420 = !DILocation(line: 516, column: 7, scope: !6418)
!6421 = !DILocation(line: 517, column: 9, scope: !6417)
!6422 = !DILocation(line: 517, column: 4, scope: !6417)
!6423 = !DILocation(line: 519, column: 11, scope: !6417)
!6424 = !DILocation(line: 519, column: 16, scope: !6417)
!6425 = !DILocation(line: 519, column: 9, scope: !6417)
!6426 = !DILocation(line: 520, column: 3, scope: !6418)
!6427 = !DILocation(line: 521, column: 30, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 520, column: 12)
!6429 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 520, column: 3)
!6430 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 520, column: 3)
!6431 = !DILocation(line: 521, column: 35, scope: !6428)
!6432 = !DILocation(line: 522, column: 9, scope: !6428)
!6433 = !DILocation(line: 522, column: 14, scope: !6428)
!6434 = !DILocation(line: 523, column: 9, scope: !6428)
!6435 = !DILocation(line: 521, column: 11, scope: !6428)
!6436 = !DILocation(line: 521, column: 9, scope: !6428)
!6437 = !DILocation(line: 524, column: 8, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 524, column: 8)
!6439 = !DILocation(line: 524, column: 16, scope: !6438)
!6440 = !DILocation(line: 524, column: 21, scope: !6438)
!6441 = !DILocation(line: 524, column: 13, scope: !6438)
!6442 = !DILocation(line: 524, column: 8, scope: !6428)
!6443 = !DILocation(line: 525, column: 5, scope: !6438)
!6444 = !DILocation(line: 526, column: 26, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 526, column: 8)
!6446 = !DILocation(line: 526, column: 32, scope: !6445)
!6447 = !DILocation(line: 526, column: 37, scope: !6445)
!6448 = !DILocation(line: 526, column: 9, scope: !6445)
!6449 = !DILocation(line: 526, column: 8, scope: !6428)
!6450 = !DILocation(line: 527, column: 5, scope: !6445)
!6451 = !DILocation(line: 520, column: 3, scope: !6429)
!6452 = distinct !{!6452, !6453, !6454}
!6453 = !DILocation(line: 520, column: 3, scope: !6430)
!6454 = !DILocation(line: 528, column: 3, scope: !6430)
!6455 = !DILocation(line: 529, column: 2, scope: !6418)
!6456 = !DILocation(line: 529, column: 13, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 529, column: 13)
!6458 = !DILocation(line: 529, column: 21, scope: !6457)
!6459 = !DILocation(line: 529, column: 26, scope: !6457)
!6460 = !DILocation(line: 529, column: 18, scope: !6457)
!6461 = !DILocation(line: 529, column: 13, scope: !6413)
!6462 = !DILocation(line: 530, column: 3, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 529, column: 37)
!6464 = !DILocation(line: 531, column: 30, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 531, column: 13)
!6466 = !DILocation(line: 531, column: 36, scope: !6465)
!6467 = !DILocation(line: 531, column: 41, scope: !6465)
!6468 = !DILocation(line: 531, column: 13, scope: !6465)
!6469 = !DILocation(line: 531, column: 13, scope: !6457)
!6470 = !DILocation(line: 532, column: 3, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 531, column: 54)
!6472 = !DILocation(line: 535, column: 18, scope: !6386)
!6473 = !DILocation(line: 535, column: 23, scope: !6386)
!6474 = !DILocation(line: 535, column: 2, scope: !6386)
!6475 = !DILocation(line: 537, column: 9, scope: !6386)
!6476 = !DILocation(line: 537, column: 2, scope: !6386)
!6477 = !DILocation(line: 538, column: 1, scope: !6386)
!6478 = distinct !DISubprogram(name: "edma_assign_priority_to_queue", scope: !3, file: !3, line: 434, type: !6479, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6479 = !DISubroutineType(types: !6480)
!6480 = !{null, !4579, !130, !130}
!6481 = !DILocalVariable(name: "ecc", arg: 1, scope: !6478, file: !3, line: 434, type: !4579)
!6482 = !DILocation(line: 434, column: 59, scope: !6478)
!6483 = !DILocalVariable(name: "queue_no", arg: 2, scope: !6478, file: !3, line: 434, type: !130)
!6484 = !DILocation(line: 434, column: 68, scope: !6478)
!6485 = !DILocalVariable(name: "priority", arg: 3, scope: !6478, file: !3, line: 435, type: !130)
!6486 = !DILocation(line: 435, column: 12, scope: !6478)
!6487 = !DILocalVariable(name: "bit", scope: !6478, file: !3, line: 437, type: !130)
!6488 = !DILocation(line: 437, column: 6, scope: !6478)
!6489 = !DILocation(line: 437, column: 12, scope: !6478)
!6490 = !DILocation(line: 437, column: 21, scope: !6478)
!6491 = !DILocation(line: 439, column: 14, scope: !6478)
!6492 = !DILocation(line: 439, column: 41, scope: !6478)
!6493 = !DILocation(line: 439, column: 38, scope: !6478)
!6494 = !DILocation(line: 439, column: 32, scope: !6478)
!6495 = !DILocation(line: 439, column: 49, scope: !6478)
!6496 = !DILocation(line: 439, column: 58, scope: !6478)
!6497 = !DILocation(line: 439, column: 68, scope: !6478)
!6498 = !DILocation(line: 439, column: 65, scope: !6478)
!6499 = !DILocation(line: 439, column: 2, scope: !6478)
!6500 = !DILocation(line: 440, column: 1, scope: !6478)
!6501 = distinct !DISubprogram(name: "edma_write_array2", scope: !3, file: !3, line: 375, type: !6502, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6502 = !DISubroutineType(types: !6503)
!6503 = !{null, !4579, !130, !130, !130, !7}
!6504 = !DILocalVariable(name: "ecc", arg: 1, scope: !6501, file: !3, line: 375, type: !4579)
!6505 = !DILocation(line: 375, column: 54, scope: !6501)
!6506 = !DILocalVariable(name: "offset", arg: 2, scope: !6501, file: !3, line: 375, type: !130)
!6507 = !DILocation(line: 375, column: 63, scope: !6501)
!6508 = !DILocalVariable(name: "i", arg: 3, scope: !6501, file: !3, line: 375, type: !130)
!6509 = !DILocation(line: 375, column: 75, scope: !6501)
!6510 = !DILocalVariable(name: "j", arg: 4, scope: !6501, file: !3, line: 376, type: !130)
!6511 = !DILocation(line: 376, column: 14, scope: !6501)
!6512 = !DILocalVariable(name: "val", arg: 5, scope: !6501, file: !3, line: 376, type: !7)
!6513 = !DILocation(line: 376, column: 26, scope: !6501)
!6514 = !DILocation(line: 378, column: 13, scope: !6501)
!6515 = !DILocation(line: 378, column: 18, scope: !6501)
!6516 = !DILocation(line: 378, column: 29, scope: !6501)
!6517 = !DILocation(line: 378, column: 31, scope: !6501)
!6518 = !DILocation(line: 378, column: 37, scope: !6501)
!6519 = !DILocation(line: 378, column: 35, scope: !6501)
!6520 = !DILocation(line: 378, column: 40, scope: !6501)
!6521 = !DILocation(line: 378, column: 25, scope: !6501)
!6522 = !DILocation(line: 378, column: 47, scope: !6501)
!6523 = !DILocation(line: 378, column: 2, scope: !6501)
!6524 = !DILocation(line: 379, column: 1, scope: !6501)
!6525 = distinct !DISubprogram(name: "edma_write_array", scope: !3, file: !3, line: 351, type: !6526, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6526 = !DISubroutineType(types: !6527)
!6527 = !{null, !4579, !130, !130, !7}
!6528 = !DILocalVariable(name: "ecc", arg: 1, scope: !6525, file: !3, line: 351, type: !4579)
!6529 = !DILocation(line: 351, column: 53, scope: !6525)
!6530 = !DILocalVariable(name: "offset", arg: 2, scope: !6525, file: !3, line: 351, type: !130)
!6531 = !DILocation(line: 351, column: 62, scope: !6525)
!6532 = !DILocalVariable(name: "i", arg: 3, scope: !6525, file: !3, line: 351, type: !130)
!6533 = !DILocation(line: 351, column: 74, scope: !6525)
!6534 = !DILocalVariable(name: "val", arg: 4, scope: !6525, file: !3, line: 352, type: !7)
!6535 = !DILocation(line: 352, column: 18, scope: !6525)
!6536 = !DILocation(line: 354, column: 13, scope: !6525)
!6537 = !DILocation(line: 354, column: 18, scope: !6525)
!6538 = !DILocation(line: 354, column: 28, scope: !6525)
!6539 = !DILocation(line: 354, column: 30, scope: !6525)
!6540 = !DILocation(line: 354, column: 25, scope: !6525)
!6541 = !DILocation(line: 354, column: 37, scope: !6525)
!6542 = !DILocation(line: 354, column: 2, scope: !6525)
!6543 = !DILocation(line: 355, column: 1, scope: !6525)
!6544 = distinct !DISubprogram(name: "edma_dma_init", scope: !3, file: !3, line: 1980, type: !6545, scopeLine: 1981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6545 = !DISubroutineType(types: !6546)
!6546 = !{null, !4579, !314}
!6547 = !DILocalVariable(name: "ecc", arg: 1, scope: !6544, file: !3, line: 1980, type: !4579)
!6548 = !DILocation(line: 1980, column: 43, scope: !6544)
!6549 = !DILocalVariable(name: "legacy_mode", arg: 2, scope: !6544, file: !3, line: 1980, type: !314)
!6550 = !DILocation(line: 1980, column: 53, scope: !6544)
!6551 = !DILocalVariable(name: "s_ddev", scope: !6544, file: !3, line: 1982, type: !280)
!6552 = !DILocation(line: 1982, column: 21, scope: !6544)
!6553 = !DILocation(line: 1982, column: 31, scope: !6544)
!6554 = !DILocation(line: 1982, column: 36, scope: !6544)
!6555 = !DILocalVariable(name: "m_ddev", scope: !6544, file: !3, line: 1983, type: !280)
!6556 = !DILocation(line: 1983, column: 21, scope: !6544)
!6557 = !DILocalVariable(name: "memcpy_channels", scope: !6544, file: !3, line: 1984, type: !4595)
!6558 = !DILocation(line: 1984, column: 7, scope: !6544)
!6559 = !DILocation(line: 1984, column: 25, scope: !6544)
!6560 = !DILocation(line: 1984, column: 30, scope: !6544)
!6561 = !DILocation(line: 1984, column: 36, scope: !6544)
!6562 = !DILocalVariable(name: "i", scope: !6544, file: !3, line: 1985, type: !130)
!6563 = !DILocation(line: 1985, column: 6, scope: !6544)
!6564 = !DILocalVariable(name: "j", scope: !6544, file: !3, line: 1985, type: !130)
!6565 = !DILocation(line: 1985, column: 9, scope: !6544)
!6566 = !DILocation(line: 1987, column: 2, scope: !6544)
!6567 = !DILocation(line: 1988, column: 2, scope: !6544)
!6568 = !DILocation(line: 1989, column: 2, scope: !6544)
!6569 = !DILocation(line: 1990, column: 6, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 1990, column: 6)
!6571 = !DILocation(line: 1990, column: 11, scope: !6570)
!6572 = !DILocation(line: 1990, column: 23, scope: !6570)
!6573 = !DILocation(line: 1990, column: 27, scope: !6570)
!6574 = !DILocation(line: 1990, column: 6, scope: !6544)
!6575 = !DILocation(line: 1991, column: 3, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 1990, column: 44)
!6577 = !DILocation(line: 1994, column: 3, scope: !6576)
!6578 = !DILocation(line: 1995, column: 3, scope: !6576)
!6579 = !DILocation(line: 1996, column: 3, scope: !6576)
!6580 = !DILocation(line: 1996, column: 11, scope: !6576)
!6581 = !DILocation(line: 1996, column: 34, scope: !6576)
!6582 = !DILocation(line: 1997, column: 3, scope: !6576)
!6583 = !DILocation(line: 1997, column: 11, scope: !6576)
!6584 = !DILocation(line: 1997, column: 39, scope: !6576)
!6585 = !DILocation(line: 1998, column: 3, scope: !6576)
!6586 = !DILocation(line: 1998, column: 11, scope: !6576)
!6587 = !DILocation(line: 1998, column: 22, scope: !6576)
!6588 = !DILocation(line: 1999, column: 2, scope: !6576)
!6589 = !DILocation(line: 2001, column: 2, scope: !6544)
!6590 = !DILocation(line: 2001, column: 10, scope: !6544)
!6591 = !DILocation(line: 2001, column: 31, scope: !6544)
!6592 = !DILocation(line: 2002, column: 2, scope: !6544)
!6593 = !DILocation(line: 2002, column: 10, scope: !6544)
!6594 = !DILocation(line: 2002, column: 33, scope: !6544)
!6595 = !DILocation(line: 2003, column: 2, scope: !6544)
!6596 = !DILocation(line: 2003, column: 10, scope: !6544)
!6597 = !DILocation(line: 2003, column: 38, scope: !6544)
!6598 = !DILocation(line: 2004, column: 2, scope: !6544)
!6599 = !DILocation(line: 2004, column: 10, scope: !6544)
!6600 = !DILocation(line: 2004, column: 37, scope: !6544)
!6601 = !DILocation(line: 2005, column: 2, scope: !6544)
!6602 = !DILocation(line: 2005, column: 10, scope: !6544)
!6603 = !DILocation(line: 2005, column: 31, scope: !6544)
!6604 = !DILocation(line: 2006, column: 2, scope: !6544)
!6605 = !DILocation(line: 2006, column: 10, scope: !6544)
!6606 = !DILocation(line: 2006, column: 27, scope: !6544)
!6607 = !DILocation(line: 2007, column: 2, scope: !6544)
!6608 = !DILocation(line: 2007, column: 10, scope: !6544)
!6609 = !DILocation(line: 2007, column: 24, scope: !6544)
!6610 = !DILocation(line: 2008, column: 2, scope: !6544)
!6611 = !DILocation(line: 2008, column: 10, scope: !6544)
!6612 = !DILocation(line: 2008, column: 23, scope: !6544)
!6613 = !DILocation(line: 2009, column: 2, scope: !6544)
!6614 = !DILocation(line: 2009, column: 10, scope: !6544)
!6615 = !DILocation(line: 2009, column: 24, scope: !6544)
!6616 = !DILocation(line: 2010, column: 2, scope: !6544)
!6617 = !DILocation(line: 2010, column: 10, scope: !6544)
!6618 = !DILocation(line: 2010, column: 31, scope: !6544)
!6619 = !DILocation(line: 2011, column: 2, scope: !6544)
!6620 = !DILocation(line: 2011, column: 10, scope: !6544)
!6621 = !DILocation(line: 2011, column: 29, scope: !6544)
!6622 = !DILocation(line: 2013, column: 2, scope: !6544)
!6623 = !DILocation(line: 2013, column: 10, scope: !6544)
!6624 = !DILocation(line: 2013, column: 26, scope: !6544)
!6625 = !DILocation(line: 2014, column: 2, scope: !6544)
!6626 = !DILocation(line: 2014, column: 10, scope: !6544)
!6627 = !DILocation(line: 2014, column: 26, scope: !6544)
!6628 = !DILocation(line: 2015, column: 2, scope: !6544)
!6629 = !DILocation(line: 2015, column: 10, scope: !6544)
!6630 = !DILocation(line: 2015, column: 21, scope: !6544)
!6631 = !DILocation(line: 2016, column: 2, scope: !6544)
!6632 = !DILocation(line: 2016, column: 10, scope: !6544)
!6633 = !DILocation(line: 2016, column: 30, scope: !6544)
!6634 = !DILocation(line: 2017, column: 2, scope: !6544)
!6635 = !DILocation(line: 2017, column: 10, scope: !6544)
!6636 = !DILocation(line: 2017, column: 20, scope: !6544)
!6637 = !DILocation(line: 2019, column: 16, scope: !6544)
!6638 = !DILocation(line: 2019, column: 21, scope: !6544)
!6639 = !DILocation(line: 2019, column: 2, scope: !6544)
!6640 = !DILocation(line: 2019, column: 10, scope: !6544)
!6641 = !DILocation(line: 2019, column: 14, scope: !6544)
!6642 = !DILocation(line: 2020, column: 18, scope: !6544)
!6643 = !DILocation(line: 2020, column: 26, scope: !6544)
!6644 = !DILocation(line: 2020, column: 2, scope: !6544)
!6645 = !DILocation(line: 2022, column: 6, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 2022, column: 6)
!6647 = !DILocation(line: 2022, column: 6, scope: !6544)
!6648 = !DILocation(line: 2023, column: 25, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 2022, column: 23)
!6650 = !DILocation(line: 2023, column: 30, scope: !6649)
!6651 = !DILocation(line: 2023, column: 12, scope: !6649)
!6652 = !DILocation(line: 2023, column: 10, scope: !6649)
!6653 = !DILocation(line: 2024, column: 8, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 2024, column: 7)
!6655 = !DILocation(line: 2024, column: 7, scope: !6649)
!6656 = !DILocation(line: 2025, column: 4, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 2024, column: 16)
!6658 = !DILocation(line: 2026, column: 20, scope: !6657)
!6659 = !DILocation(line: 2027, column: 4, scope: !6657)
!6660 = !DILocation(line: 2029, column: 21, scope: !6649)
!6661 = !DILocation(line: 2029, column: 3, scope: !6649)
!6662 = !DILocation(line: 2029, column: 8, scope: !6649)
!6663 = !DILocation(line: 2029, column: 19, scope: !6649)
!6664 = !DILocation(line: 2031, column: 3, scope: !6649)
!6665 = !DILocation(line: 2032, column: 3, scope: !6649)
!6666 = !DILocation(line: 2033, column: 3, scope: !6649)
!6667 = !DILocation(line: 2035, column: 3, scope: !6649)
!6668 = !DILocation(line: 2035, column: 11, scope: !6649)
!6669 = !DILocation(line: 2035, column: 34, scope: !6649)
!6670 = !DILocation(line: 2036, column: 3, scope: !6649)
!6671 = !DILocation(line: 2036, column: 11, scope: !6649)
!6672 = !DILocation(line: 2036, column: 39, scope: !6649)
!6673 = !DILocation(line: 2037, column: 3, scope: !6649)
!6674 = !DILocation(line: 2037, column: 11, scope: !6649)
!6675 = !DILocation(line: 2037, column: 39, scope: !6649)
!6676 = !DILocation(line: 2038, column: 3, scope: !6649)
!6677 = !DILocation(line: 2038, column: 11, scope: !6649)
!6678 = !DILocation(line: 2038, column: 38, scope: !6649)
!6679 = !DILocation(line: 2039, column: 3, scope: !6649)
!6680 = !DILocation(line: 2039, column: 11, scope: !6649)
!6681 = !DILocation(line: 2039, column: 32, scope: !6649)
!6682 = !DILocation(line: 2040, column: 3, scope: !6649)
!6683 = !DILocation(line: 2040, column: 11, scope: !6649)
!6684 = !DILocation(line: 2040, column: 28, scope: !6649)
!6685 = !DILocation(line: 2041, column: 3, scope: !6649)
!6686 = !DILocation(line: 2041, column: 11, scope: !6649)
!6687 = !DILocation(line: 2041, column: 25, scope: !6649)
!6688 = !DILocation(line: 2042, column: 3, scope: !6649)
!6689 = !DILocation(line: 2042, column: 11, scope: !6649)
!6690 = !DILocation(line: 2042, column: 24, scope: !6649)
!6691 = !DILocation(line: 2043, column: 3, scope: !6649)
!6692 = !DILocation(line: 2043, column: 11, scope: !6649)
!6693 = !DILocation(line: 2043, column: 25, scope: !6649)
!6694 = !DILocation(line: 2044, column: 3, scope: !6649)
!6695 = !DILocation(line: 2044, column: 11, scope: !6649)
!6696 = !DILocation(line: 2044, column: 32, scope: !6649)
!6697 = !DILocation(line: 2045, column: 3, scope: !6649)
!6698 = !DILocation(line: 2045, column: 11, scope: !6649)
!6699 = !DILocation(line: 2045, column: 30, scope: !6649)
!6700 = !DILocation(line: 2047, column: 3, scope: !6649)
!6701 = !DILocation(line: 2047, column: 11, scope: !6649)
!6702 = !DILocation(line: 2047, column: 27, scope: !6649)
!6703 = !DILocation(line: 2048, column: 3, scope: !6649)
!6704 = !DILocation(line: 2048, column: 11, scope: !6649)
!6705 = !DILocation(line: 2048, column: 27, scope: !6649)
!6706 = !DILocation(line: 2049, column: 3, scope: !6649)
!6707 = !DILocation(line: 2049, column: 11, scope: !6649)
!6708 = !DILocation(line: 2049, column: 22, scope: !6649)
!6709 = !DILocation(line: 2050, column: 3, scope: !6649)
!6710 = !DILocation(line: 2050, column: 11, scope: !6649)
!6711 = !DILocation(line: 2050, column: 31, scope: !6649)
!6712 = !DILocation(line: 2052, column: 17, scope: !6649)
!6713 = !DILocation(line: 2052, column: 22, scope: !6649)
!6714 = !DILocation(line: 2052, column: 3, scope: !6649)
!6715 = !DILocation(line: 2052, column: 11, scope: !6649)
!6716 = !DILocation(line: 2052, column: 15, scope: !6649)
!6717 = !DILocation(line: 2053, column: 19, scope: !6649)
!6718 = !DILocation(line: 2053, column: 27, scope: !6649)
!6719 = !DILocation(line: 2053, column: 3, scope: !6649)
!6720 = !DILocation(line: 2054, column: 2, scope: !6649)
!6721 = !DILocation(line: 2054, column: 14, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 2054, column: 13)
!6723 = !DILocation(line: 2054, column: 19, scope: !6722)
!6724 = !DILocation(line: 2054, column: 13, scope: !6646)
!6725 = !DILocation(line: 2055, column: 3, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 2054, column: 32)
!6727 = !DILocation(line: 2056, column: 2, scope: !6726)
!6728 = !DILabel(scope: !6544, name: "ch_setup", file: !3, line: 2058)
!6729 = !DILocation(line: 2058, column: 1, scope: !6544)
!6730 = !DILocation(line: 2059, column: 9, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 2059, column: 2)
!6732 = !DILocation(line: 2059, column: 7, scope: !6731)
!6733 = !DILocation(line: 2059, column: 14, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 2059, column: 2)
!6735 = !DILocation(line: 2059, column: 18, scope: !6734)
!6736 = !DILocation(line: 2059, column: 23, scope: !6734)
!6737 = !DILocation(line: 2059, column: 16, scope: !6734)
!6738 = !DILocation(line: 2059, column: 2, scope: !6731)
!6739 = !DILocalVariable(name: "echan", scope: !6740, file: !3, line: 2060, type: !4572)
!6740 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 2059, column: 42)
!6741 = !DILocation(line: 2060, column: 21, scope: !6740)
!6742 = !DILocation(line: 2060, column: 30, scope: !6740)
!6743 = !DILocation(line: 2060, column: 35, scope: !6740)
!6744 = !DILocation(line: 2060, column: 47, scope: !6740)
!6745 = !DILocation(line: 2061, column: 19, scope: !6740)
!6746 = !DILocation(line: 2061, column: 3, scope: !6740)
!6747 = !DILocation(line: 2061, column: 10, scope: !6740)
!6748 = !DILocation(line: 2061, column: 17, scope: !6740)
!6749 = !DILocation(line: 2062, column: 16, scope: !6740)
!6750 = !DILocation(line: 2062, column: 3, scope: !6740)
!6751 = !DILocation(line: 2062, column: 10, scope: !6740)
!6752 = !DILocation(line: 2062, column: 14, scope: !6740)
!6753 = !DILocation(line: 2063, column: 3, scope: !6740)
!6754 = !DILocation(line: 2063, column: 10, scope: !6740)
!6755 = !DILocation(line: 2063, column: 16, scope: !6740)
!6756 = !DILocation(line: 2063, column: 26, scope: !6740)
!6757 = !DILocation(line: 2065, column: 7, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 2065, column: 7)
!6759 = !DILocation(line: 2065, column: 14, scope: !6758)
!6760 = !DILocation(line: 2065, column: 40, scope: !6758)
!6761 = !DILocation(line: 2065, column: 43, scope: !6758)
!6762 = !DILocation(line: 2065, column: 17, scope: !6758)
!6763 = !DILocation(line: 2065, column: 7, scope: !6740)
!6764 = !DILocation(line: 2066, column: 16, scope: !6758)
!6765 = !DILocation(line: 2066, column: 23, scope: !6758)
!6766 = !DILocation(line: 2066, column: 30, scope: !6758)
!6767 = !DILocation(line: 2066, column: 4, scope: !6758)
!6768 = !DILocation(line: 2068, column: 16, scope: !6758)
!6769 = !DILocation(line: 2068, column: 23, scope: !6758)
!6770 = !DILocation(line: 2068, column: 30, scope: !6758)
!6771 = !DILocation(line: 2068, column: 4, scope: !6758)
!6772 = !DILocation(line: 2070, column: 19, scope: !6740)
!6773 = !DILocation(line: 2070, column: 26, scope: !6740)
!6774 = !DILocation(line: 2070, column: 3, scope: !6740)
!6775 = !DILocation(line: 2071, column: 10, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 2071, column: 3)
!6777 = !DILocation(line: 2071, column: 8, scope: !6776)
!6778 = !DILocation(line: 2071, column: 15, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 2071, column: 3)
!6780 = !DILocation(line: 2071, column: 17, scope: !6779)
!6781 = !DILocation(line: 2071, column: 3, scope: !6776)
!6782 = !DILocation(line: 2072, column: 4, scope: !6779)
!6783 = !DILocation(line: 2072, column: 11, scope: !6779)
!6784 = !DILocation(line: 2072, column: 16, scope: !6779)
!6785 = !DILocation(line: 2072, column: 19, scope: !6779)
!6786 = !DILocation(line: 2071, column: 36, scope: !6779)
!6787 = !DILocation(line: 2071, column: 3, scope: !6779)
!6788 = distinct !{!6788, !6781, !6789}
!6789 = !DILocation(line: 2072, column: 22, scope: !6776)
!6790 = !DILocation(line: 2073, column: 2, scope: !6740)
!6791 = !DILocation(line: 2059, column: 38, scope: !6734)
!6792 = !DILocation(line: 2059, column: 2, scope: !6734)
!6793 = distinct !{!6793, !6738, !6794}
!6794 = !DILocation(line: 2073, column: 2, scope: !6731)
!6795 = !DILocation(line: 2074, column: 1, scope: !6544)
!6796 = distinct !DISubprogram(name: "edma_assign_channel_eventq", scope: !3, file: !3, line: 702, type: !6797, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6797 = !DISubroutineType(types: !6798)
!6798 = !{null, !4572, !128}
!6799 = !DILocalVariable(name: "echan", arg: 1, scope: !6796, file: !3, line: 702, type: !4572)
!6800 = !DILocation(line: 702, column: 58, scope: !6796)
!6801 = !DILocalVariable(name: "eventq_no", arg: 2, scope: !6796, file: !3, line: 703, type: !128)
!6802 = !DILocation(line: 703, column: 29, scope: !6796)
!6803 = !DILocalVariable(name: "ecc", scope: !6796, file: !3, line: 705, type: !4579)
!6804 = !DILocation(line: 705, column: 18, scope: !6796)
!6805 = !DILocation(line: 705, column: 24, scope: !6796)
!6806 = !DILocation(line: 705, column: 31, scope: !6796)
!6807 = !DILocalVariable(name: "channel", scope: !6796, file: !3, line: 706, type: !130)
!6808 = !DILocation(line: 706, column: 6, scope: !6796)
!6809 = !DILocation(line: 706, column: 16, scope: !6796)
!6810 = !DILocalVariable(name: "bit", scope: !6796, file: !3, line: 707, type: !130)
!6811 = !DILocation(line: 707, column: 6, scope: !6796)
!6812 = !DILocation(line: 707, column: 13, scope: !6796)
!6813 = !DILocation(line: 707, column: 21, scope: !6796)
!6814 = !DILocation(line: 707, column: 28, scope: !6796)
!6815 = !DILocation(line: 710, column: 6, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 710, column: 6)
!6817 = !DILocation(line: 710, column: 16, scope: !6816)
!6818 = !DILocation(line: 710, column: 6, scope: !6796)
!6819 = !DILocation(line: 711, column: 15, scope: !6816)
!6820 = !DILocation(line: 711, column: 20, scope: !6816)
!6821 = !DILocation(line: 711, column: 13, scope: !6816)
!6822 = !DILocation(line: 711, column: 3, scope: !6816)
!6823 = !DILocation(line: 712, column: 6, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 712, column: 6)
!6825 = !DILocation(line: 712, column: 19, scope: !6824)
!6826 = !DILocation(line: 712, column: 24, scope: !6824)
!6827 = !DILocation(line: 712, column: 16, scope: !6824)
!6828 = !DILocation(line: 712, column: 6, scope: !6796)
!6829 = !DILocation(line: 713, column: 3, scope: !6824)
!6830 = !DILocation(line: 715, column: 12, scope: !6796)
!6831 = !DILocation(line: 716, column: 20, scope: !6796)
!6832 = !DILocation(line: 716, column: 40, scope: !6796)
!6833 = !DILocation(line: 716, column: 48, scope: !6796)
!6834 = !DILocation(line: 716, column: 64, scope: !6796)
!6835 = !DILocation(line: 716, column: 61, scope: !6796)
!6836 = !DILocation(line: 716, column: 55, scope: !6796)
!6837 = !DILocation(line: 717, column: 6, scope: !6796)
!6838 = !DILocation(line: 717, column: 19, scope: !6796)
!6839 = !DILocation(line: 717, column: 16, scope: !6796)
!6840 = !DILocation(line: 716, column: 2, scope: !6796)
!6841 = !DILocation(line: 718, column: 1, scope: !6796)
!6842 = distinct !DISubprogram(name: "edma_set_chmap", scope: !3, file: !3, line: 442, type: !6843, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6843 = !DISubroutineType(types: !6844)
!6844 = !{null, !4572, !130}
!6845 = !DILocalVariable(name: "echan", arg: 1, scope: !6842, file: !3, line: 442, type: !4572)
!6846 = !DILocation(line: 442, column: 46, scope: !6842)
!6847 = !DILocalVariable(name: "slot", arg: 2, scope: !6842, file: !3, line: 442, type: !130)
!6848 = !DILocation(line: 442, column: 57, scope: !6842)
!6849 = !DILocalVariable(name: "ecc", scope: !6842, file: !3, line: 444, type: !4579)
!6850 = !DILocation(line: 444, column: 18, scope: !6842)
!6851 = !DILocation(line: 444, column: 24, scope: !6842)
!6852 = !DILocation(line: 444, column: 31, scope: !6842)
!6853 = !DILocalVariable(name: "channel", scope: !6842, file: !3, line: 445, type: !130)
!6854 = !DILocation(line: 445, column: 6, scope: !6842)
!6855 = !DILocation(line: 445, column: 16, scope: !6842)
!6856 = !DILocation(line: 447, column: 6, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 447, column: 6)
!6858 = !DILocation(line: 447, column: 11, scope: !6857)
!6859 = !DILocation(line: 447, column: 6, scope: !6842)
!6860 = !DILocation(line: 448, column: 10, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6857, file: !3, line: 447, column: 24)
!6862 = !DILocation(line: 448, column: 8, scope: !6861)
!6863 = !DILocation(line: 449, column: 20, scope: !6861)
!6864 = !DILocation(line: 449, column: 38, scope: !6861)
!6865 = !DILocation(line: 449, column: 48, scope: !6861)
!6866 = !DILocation(line: 449, column: 53, scope: !6861)
!6867 = !DILocation(line: 449, column: 3, scope: !6861)
!6868 = !DILocation(line: 450, column: 2, scope: !6861)
!6869 = !DILocation(line: 451, column: 1, scope: !6842)
!6870 = distinct !DISubprogram(name: "edma_filter_fn", scope: !3, file: !3, line: 2711, type: !312, scopeLine: 2712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6871 = !DILocalVariable(name: "chan", arg: 1, scope: !6870, file: !3, line: 2711, type: !316)
!6872 = !DILocation(line: 2711, column: 45, scope: !6870)
!6873 = !DILocalVariable(name: "param", arg: 2, scope: !6870, file: !3, line: 2711, type: !258)
!6874 = !DILocation(line: 2711, column: 57, scope: !6870)
!6875 = !DILocalVariable(name: "match", scope: !6870, file: !3, line: 2713, type: !314)
!6876 = !DILocation(line: 2713, column: 7, scope: !6870)
!6877 = !DILocation(line: 2715, column: 6, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 2715, column: 6)
!6879 = !DILocation(line: 2715, column: 12, scope: !6878)
!6880 = !DILocation(line: 2715, column: 20, scope: !6878)
!6881 = !DILocation(line: 2715, column: 25, scope: !6878)
!6882 = !DILocation(line: 2715, column: 32, scope: !6878)
!6883 = !DILocation(line: 2715, column: 6, scope: !6870)
!6884 = !DILocalVariable(name: "echan", scope: !6885, file: !3, line: 2716, type: !4572)
!6885 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 2715, column: 56)
!6886 = !DILocation(line: 2716, column: 21, scope: !6885)
!6887 = !DILocation(line: 2716, column: 42, scope: !6885)
!6888 = !DILocation(line: 2716, column: 29, scope: !6885)
!6889 = !DILocalVariable(name: "ch_req", scope: !6885, file: !3, line: 2717, type: !7)
!6890 = !DILocation(line: 2717, column: 12, scope: !6885)
!6891 = !DILocation(line: 2717, column: 34, scope: !6885)
!6892 = !DILocation(line: 2717, column: 22, scope: !6885)
!6893 = !DILocation(line: 2717, column: 21, scope: !6885)
!6894 = !DILocation(line: 2718, column: 7, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 2718, column: 7)
!6896 = !DILocation(line: 2718, column: 17, scope: !6895)
!6897 = !DILocation(line: 2718, column: 24, scope: !6895)
!6898 = !DILocation(line: 2718, column: 14, scope: !6895)
!6899 = !DILocation(line: 2718, column: 7, scope: !6885)
!6900 = !DILocation(line: 2720, column: 4, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 2718, column: 32)
!6902 = !DILocation(line: 2720, column: 11, scope: !6901)
!6903 = !DILocation(line: 2720, column: 24, scope: !6901)
!6904 = !DILocation(line: 2721, column: 10, scope: !6901)
!6905 = !DILocation(line: 2722, column: 3, scope: !6901)
!6906 = !DILocation(line: 2723, column: 2, scope: !6885)
!6907 = !DILocation(line: 2724, column: 9, scope: !6870)
!6908 = !DILocation(line: 2724, column: 2, scope: !6870)
!6909 = distinct !DISubprogram(name: "of_edma_xlate", scope: !3, file: !3, line: 2287, type: !6910, scopeLine: 2289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!6910 = !DISubroutineType(types: !6911)
!6911 = !{!316, !6912, !6913}
!6912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5280, size: 64)
!6913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6914, size: 64)
!6914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_dma", file: !6915, line: 18, size: 448, elements: !6916)
!6915 = !DIFile(filename: "./include/linux/of_dma.h", directory: "/home/lizy2001/genbc/linux")
!6916 = !{!6917, !6918, !6919, !6921, !6925, !6926}
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "of_dma_controllers", scope: !6914, file: !6915, line: 19, baseType: !300, size: 128)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !6914, file: !6915, line: 20, baseType: !3797, size: 64, offset: 128)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "of_dma_xlate", scope: !6914, file: !6915, line: 21, baseType: !6920, size: 64, offset: 192)
!6920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6910, size: 64)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "of_dma_route_allocate", scope: !6914, file: !6915, line: 23, baseType: !6922, size: 64, offset: 256)
!6922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6923, size: 64)
!6923 = !DISubroutineType(types: !6924)
!6924 = !{!258, !6912, !6913}
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "dma_router", scope: !6914, file: !6915, line: 25, baseType: !4510, size: 64, offset: 320)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "of_dma_data", scope: !6914, file: !6915, line: 26, baseType: !258, size: 64, offset: 384)
!6927 = !DILocalVariable(name: "dma_spec", arg: 1, scope: !6909, file: !3, line: 2287, type: !6912)
!6928 = !DILocation(line: 2287, column: 63, scope: !6909)
!6929 = !DILocalVariable(name: "ofdma", arg: 2, scope: !6909, file: !3, line: 2288, type: !6913)
!6930 = !DILocation(line: 2288, column: 26, scope: !6909)
!6931 = !DILocalVariable(name: "ecc", scope: !6909, file: !3, line: 2290, type: !4579)
!6932 = !DILocation(line: 2290, column: 18, scope: !6909)
!6933 = !DILocation(line: 2290, column: 24, scope: !6909)
!6934 = !DILocation(line: 2290, column: 31, scope: !6909)
!6935 = !DILocalVariable(name: "chan", scope: !6909, file: !3, line: 2291, type: !316)
!6936 = !DILocation(line: 2291, column: 19, scope: !6909)
!6937 = !DILocalVariable(name: "echan", scope: !6909, file: !3, line: 2292, type: !4572)
!6938 = !DILocation(line: 2292, column: 20, scope: !6909)
!6939 = !DILocalVariable(name: "i", scope: !6909, file: !3, line: 2293, type: !130)
!6940 = !DILocation(line: 2293, column: 6, scope: !6909)
!6941 = !DILocation(line: 2295, column: 7, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2295, column: 6)
!6943 = !DILocation(line: 2295, column: 11, scope: !6942)
!6944 = !DILocation(line: 2295, column: 14, scope: !6942)
!6945 = !DILocation(line: 2295, column: 24, scope: !6942)
!6946 = !DILocation(line: 2295, column: 35, scope: !6942)
!6947 = !DILocation(line: 2295, column: 6, scope: !6909)
!6948 = !DILocation(line: 2296, column: 3, scope: !6942)
!6949 = !DILocation(line: 2298, column: 9, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2298, column: 2)
!6951 = !DILocation(line: 2298, column: 7, scope: !6950)
!6952 = !DILocation(line: 2298, column: 14, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 2298, column: 2)
!6954 = !DILocation(line: 2298, column: 18, scope: !6953)
!6955 = !DILocation(line: 2298, column: 23, scope: !6953)
!6956 = !DILocation(line: 2298, column: 16, scope: !6953)
!6957 = !DILocation(line: 2298, column: 2, scope: !6950)
!6958 = !DILocation(line: 2299, column: 12, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 2298, column: 42)
!6960 = !DILocation(line: 2299, column: 17, scope: !6959)
!6961 = !DILocation(line: 2299, column: 29, scope: !6959)
!6962 = !DILocation(line: 2299, column: 9, scope: !6959)
!6963 = !DILocation(line: 2300, column: 7, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 2300, column: 7)
!6965 = !DILocation(line: 2300, column: 14, scope: !6964)
!6966 = !DILocation(line: 2300, column: 24, scope: !6964)
!6967 = !DILocation(line: 2300, column: 34, scope: !6964)
!6968 = !DILocation(line: 2300, column: 21, scope: !6964)
!6969 = !DILocation(line: 2300, column: 7, scope: !6959)
!6970 = !DILocation(line: 2301, column: 12, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 2300, column: 43)
!6972 = !DILocation(line: 2301, column: 19, scope: !6971)
!6973 = !DILocation(line: 2301, column: 25, scope: !6971)
!6974 = !DILocation(line: 2301, column: 9, scope: !6971)
!6975 = !DILocation(line: 2302, column: 4, scope: !6971)
!6976 = !DILocation(line: 2304, column: 2, scope: !6959)
!6977 = !DILocation(line: 2298, column: 38, scope: !6953)
!6978 = !DILocation(line: 2298, column: 2, scope: !6953)
!6979 = distinct !{!6979, !6957, !6980}
!6980 = !DILocation(line: 2304, column: 2, scope: !6950)
!6981 = !DILocation(line: 2306, column: 7, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2306, column: 6)
!6983 = !DILocation(line: 2306, column: 6, scope: !6909)
!6984 = !DILocation(line: 2307, column: 3, scope: !6982)
!6985 = !DILocation(line: 2309, column: 6, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2309, column: 6)
!6987 = !DILocation(line: 2309, column: 13, scope: !6986)
!6988 = !DILocation(line: 2309, column: 18, scope: !6986)
!6989 = !DILocation(line: 2309, column: 30, scope: !6986)
!6990 = !DILocation(line: 2309, column: 33, scope: !6986)
!6991 = !DILocation(line: 2309, column: 43, scope: !6986)
!6992 = !DILocation(line: 2309, column: 54, scope: !6986)
!6993 = !DILocation(line: 2309, column: 6, scope: !6909)
!6994 = !DILocation(line: 2310, column: 3, scope: !6986)
!6995 = !DILocation(line: 2312, column: 7, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2312, column: 6)
!6997 = !DILocation(line: 2312, column: 14, scope: !6996)
!6998 = !DILocation(line: 2312, column: 19, scope: !6996)
!6999 = !DILocation(line: 2312, column: 31, scope: !6996)
!7000 = !DILocation(line: 2312, column: 34, scope: !6996)
!7001 = !DILocation(line: 2312, column: 44, scope: !6996)
!7002 = !DILocation(line: 2312, column: 55, scope: !6996)
!7003 = !DILocation(line: 2312, column: 60, scope: !6996)
!7004 = !DILocation(line: 2313, column: 6, scope: !6996)
!7005 = !DILocation(line: 2313, column: 16, scope: !6996)
!7006 = !DILocation(line: 2313, column: 26, scope: !6996)
!7007 = !DILocation(line: 2313, column: 33, scope: !6996)
!7008 = !DILocation(line: 2313, column: 38, scope: !6996)
!7009 = !DILocation(line: 2313, column: 24, scope: !6996)
!7010 = !DILocation(line: 2312, column: 6, scope: !6909)
!7011 = !DILocation(line: 2314, column: 16, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 2313, column: 46)
!7013 = !DILocation(line: 2314, column: 23, scope: !7012)
!7014 = !DILocation(line: 2314, column: 28, scope: !7012)
!7015 = !DILocation(line: 2314, column: 36, scope: !7012)
!7016 = !DILocation(line: 2314, column: 46, scope: !7012)
!7017 = !DILocation(line: 2314, column: 3, scope: !7012)
!7018 = !DILocation(line: 2314, column: 10, scope: !7012)
!7019 = !DILocation(line: 2314, column: 13, scope: !7012)
!7020 = !DILocation(line: 2315, column: 3, scope: !7012)
!7021 = !DILocation(line: 2318, column: 2, scope: !6909)
!7022 = !DILabel(scope: !6909, name: "out", file: !3, line: 2319)
!7023 = !DILocation(line: 2319, column: 1, scope: !6909)
!7024 = !DILocation(line: 2321, column: 2, scope: !6909)
!7025 = !DILocation(line: 2321, column: 9, scope: !6909)
!7026 = !DILocation(line: 2321, column: 22, scope: !6909)
!7027 = !DILocation(line: 2322, column: 31, scope: !6909)
!7028 = !DILocation(line: 2322, column: 9, scope: !6909)
!7029 = !DILocation(line: 2322, column: 2, scope: !6909)
!7030 = !DILocation(line: 2323, column: 1, scope: !6909)
!7031 = distinct !DISubprogram(name: "edma_free_slot", scope: !3, file: !3, line: 540, type: !7032, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7032 = !DISubroutineType(types: !7033)
!7033 = !{null, !4579, !7}
!7034 = !DILocalVariable(name: "ecc", arg: 1, scope: !7031, file: !3, line: 540, type: !4579)
!7035 = !DILocation(line: 540, column: 44, scope: !7031)
!7036 = !DILocalVariable(name: "slot", arg: 2, scope: !7031, file: !3, line: 540, type: !7)
!7037 = !DILocation(line: 540, column: 58, scope: !7031)
!7038 = !DILocation(line: 542, column: 9, scope: !7031)
!7039 = !DILocation(line: 542, column: 7, scope: !7031)
!7040 = !DILocation(line: 543, column: 6, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7031, file: !3, line: 543, column: 6)
!7042 = !DILocation(line: 543, column: 14, scope: !7041)
!7043 = !DILocation(line: 543, column: 19, scope: !7041)
!7044 = !DILocation(line: 543, column: 11, scope: !7041)
!7045 = !DILocation(line: 543, column: 6, scope: !7031)
!7046 = !DILocation(line: 544, column: 3, scope: !7041)
!7047 = !DILocation(line: 546, column: 18, scope: !7031)
!7048 = !DILocation(line: 546, column: 23, scope: !7031)
!7049 = !DILocation(line: 546, column: 2, scope: !7031)
!7050 = !DILocation(line: 547, column: 12, scope: !7031)
!7051 = !DILocation(line: 547, column: 18, scope: !7031)
!7052 = !DILocation(line: 547, column: 23, scope: !7031)
!7053 = !DILocation(line: 547, column: 2, scope: !7031)
!7054 = !DILocation(line: 548, column: 1, scope: !7031)
!7055 = distinct !DISubprogram(name: "pm_runtime_put_sync", scope: !5864, file: !5864, line: 448, type: !3536, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7056 = !DILocalVariable(name: "dev", arg: 1, scope: !7055, file: !5864, line: 448, type: !345)
!7057 = !DILocation(line: 448, column: 54, scope: !7055)
!7058 = !DILocation(line: 450, column: 27, scope: !7055)
!7059 = !DILocation(line: 450, column: 9, scope: !7055)
!7060 = !DILocation(line: 450, column: 2, scope: !7055)
!7061 = distinct !DISubprogram(name: "ERR_PTR", scope: !5799, file: !5799, line: 24, type: !7062, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7062 = !DISubroutineType(types: !7063)
!7063 = !{!258, !266}
!7064 = !DILocalVariable(name: "error", arg: 1, scope: !7061, file: !5799, line: 24, type: !266)
!7065 = !DILocation(line: 24, column: 48, scope: !7061)
!7066 = !DILocation(line: 26, column: 18, scope: !7061)
!7067 = !DILocation(line: 26, column: 9, scope: !7061)
!7068 = !DILocation(line: 26, column: 2, scope: !7061)
!7069 = distinct !DISubprogram(name: "edma_xbar_event_map", scope: !3, file: !3, line: 2145, type: !7070, scopeLine: 2147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7070 = !DISubroutineType(types: !7071)
!7071 = !{!130, !345, !4584, !447}
!7072 = !DILocalVariable(name: "dev", arg: 1, scope: !7069, file: !3, line: 2145, type: !345)
!7073 = !DILocation(line: 2145, column: 47, scope: !7069)
!7074 = !DILocalVariable(name: "pdata", arg: 2, scope: !7069, file: !3, line: 2145, type: !4584)
!7075 = !DILocation(line: 2145, column: 74, scope: !7069)
!7076 = !DILocalVariable(name: "sz", arg: 3, scope: !7069, file: !3, line: 2146, type: !447)
!7077 = !DILocation(line: 2146, column: 18, scope: !7069)
!7078 = !DILocalVariable(name: "pname", scope: !7069, file: !3, line: 2148, type: !7079)
!7079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 184, elements: !7080)
!7080 = !{!7081}
!7081 = !DISubrange(count: 23)
!7082 = !DILocation(line: 2148, column: 13, scope: !7069)
!7083 = !DILocalVariable(name: "res", scope: !7069, file: !3, line: 2149, type: !4706)
!7084 = !DILocation(line: 2149, column: 18, scope: !7069)
!7085 = !DILocalVariable(name: "xbar", scope: !7069, file: !3, line: 2150, type: !258)
!7086 = !DILocation(line: 2150, column: 16, scope: !7069)
!7087 = !DILocalVariable(name: "xbar_chans", scope: !7069, file: !3, line: 2151, type: !5687)
!7088 = !DILocation(line: 2151, column: 8, scope: !7069)
!7089 = !DILocalVariable(name: "nelm", scope: !7069, file: !3, line: 2152, type: !447)
!7090 = !DILocation(line: 2152, column: 9, scope: !7069)
!7091 = !DILocation(line: 2152, column: 16, scope: !7069)
!7092 = !DILocation(line: 2152, column: 19, scope: !7069)
!7093 = !DILocalVariable(name: "shift", scope: !7069, file: !3, line: 2153, type: !244)
!7094 = !DILocation(line: 2153, column: 6, scope: !7069)
!7095 = !DILocalVariable(name: "offset", scope: !7069, file: !3, line: 2153, type: !244)
!7096 = !DILocation(line: 2153, column: 13, scope: !7069)
!7097 = !DILocalVariable(name: "mux", scope: !7069, file: !3, line: 2153, type: !244)
!7098 = !DILocation(line: 2153, column: 21, scope: !7069)
!7099 = !DILocalVariable(name: "ret", scope: !7069, file: !3, line: 2154, type: !130)
!7100 = !DILocation(line: 2154, column: 6, scope: !7069)
!7101 = !DILocalVariable(name: "i", scope: !7069, file: !3, line: 2154, type: !130)
!7102 = !DILocation(line: 2154, column: 11, scope: !7069)
!7103 = !DILocation(line: 2156, column: 28, scope: !7069)
!7104 = !DILocation(line: 2156, column: 33, scope: !7069)
!7105 = !DILocation(line: 2156, column: 38, scope: !7069)
!7106 = !DILocation(line: 2156, column: 15, scope: !7069)
!7107 = !DILocation(line: 2156, column: 13, scope: !7069)
!7108 = !DILocation(line: 2157, column: 7, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 2157, column: 6)
!7110 = !DILocation(line: 2157, column: 6, scope: !7069)
!7111 = !DILocation(line: 2158, column: 3, scope: !7109)
!7112 = !DILocation(line: 2160, column: 31, scope: !7069)
!7113 = !DILocation(line: 2160, column: 36, scope: !7069)
!7114 = !DILocation(line: 2160, column: 8, scope: !7069)
!7115 = !DILocation(line: 2160, column: 6, scope: !7069)
!7116 = !DILocation(line: 2161, column: 6, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 2161, column: 6)
!7118 = !DILocation(line: 2161, column: 6, scope: !7069)
!7119 = !DILocation(line: 2162, column: 3, scope: !7117)
!7120 = !DILocation(line: 2164, column: 22, scope: !7069)
!7121 = !DILocation(line: 2164, column: 31, scope: !7069)
!7122 = !DILocation(line: 2164, column: 38, scope: !7069)
!7123 = !DILocation(line: 2164, column: 9, scope: !7069)
!7124 = !DILocation(line: 2164, column: 7, scope: !7069)
!7125 = !DILocation(line: 2165, column: 7, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 2165, column: 6)
!7127 = !DILocation(line: 2165, column: 6, scope: !7069)
!7128 = !DILocation(line: 2166, column: 3, scope: !7126)
!7129 = !DILocation(line: 2168, column: 35, scope: !7069)
!7130 = !DILocation(line: 2168, column: 40, scope: !7069)
!7131 = !DILocation(line: 2168, column: 49, scope: !7069)
!7132 = !DILocation(line: 2168, column: 63, scope: !7069)
!7133 = !DILocation(line: 2168, column: 56, scope: !7069)
!7134 = !DILocation(line: 2169, column: 7, scope: !7069)
!7135 = !DILocation(line: 2168, column: 8, scope: !7069)
!7136 = !DILocation(line: 2168, column: 6, scope: !7069)
!7137 = !DILocation(line: 2170, column: 6, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 2170, column: 6)
!7139 = !DILocation(line: 2170, column: 6, scope: !7069)
!7140 = !DILocation(line: 2171, column: 3, scope: !7138)
!7141 = !DILocation(line: 2174, column: 7, scope: !7069)
!7142 = !DILocation(line: 2175, column: 2, scope: !7069)
!7143 = !DILocation(line: 2175, column: 13, scope: !7069)
!7144 = !DILocation(line: 2175, column: 22, scope: !7069)
!7145 = !DILocation(line: 2176, column: 2, scope: !7069)
!7146 = !DILocation(line: 2176, column: 13, scope: !7069)
!7147 = !DILocation(line: 2176, column: 22, scope: !7069)
!7148 = !DILocation(line: 2178, column: 9, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 2178, column: 2)
!7150 = !DILocation(line: 2178, column: 7, scope: !7149)
!7151 = !DILocation(line: 2178, column: 14, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 2178, column: 2)
!7153 = !DILocation(line: 2178, column: 18, scope: !7152)
!7154 = !DILocation(line: 2178, column: 16, scope: !7152)
!7155 = !DILocation(line: 2178, column: 2, scope: !7149)
!7156 = !DILocation(line: 2179, column: 12, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 2178, column: 29)
!7158 = !DILocation(line: 2179, column: 23, scope: !7157)
!7159 = !DILocation(line: 2179, column: 29, scope: !7157)
!7160 = !DILocation(line: 2179, column: 37, scope: !7157)
!7161 = !DILocation(line: 2179, column: 9, scope: !7157)
!7162 = !DILocation(line: 2180, column: 12, scope: !7157)
!7163 = !DILocation(line: 2180, column: 23, scope: !7157)
!7164 = !DILocation(line: 2180, column: 29, scope: !7157)
!7165 = !DILocation(line: 2180, column: 10, scope: !7157)
!7166 = !DILocation(line: 2181, column: 15, scope: !7157)
!7167 = !DILocation(line: 2181, column: 22, scope: !7157)
!7168 = !DILocation(line: 2181, column: 20, scope: !7157)
!7169 = !DILocation(line: 2181, column: 9, scope: !7157)
!7170 = !DILocation(line: 2181, column: 7, scope: !7157)
!7171 = !DILocation(line: 2182, column: 20, scope: !7157)
!7172 = !DILocation(line: 2182, column: 17, scope: !7157)
!7173 = !DILocation(line: 2182, column: 10, scope: !7157)
!7174 = !DILocation(line: 2182, column: 7, scope: !7157)
!7175 = !DILocation(line: 2183, column: 10, scope: !7157)
!7176 = !DILocation(line: 2183, column: 21, scope: !7157)
!7177 = !DILocation(line: 2183, column: 30, scope: !7157)
!7178 = !DILocation(line: 2183, column: 27, scope: !7157)
!7179 = !DILocation(line: 2183, column: 7, scope: !7157)
!7180 = !DILocation(line: 2184, column: 10, scope: !7157)
!7181 = !DILocation(line: 2184, column: 16, scope: !7157)
!7182 = !DILocation(line: 2184, column: 23, scope: !7157)
!7183 = !DILocation(line: 2184, column: 21, scope: !7157)
!7184 = !DILocation(line: 2184, column: 3, scope: !7157)
!7185 = !DILocation(line: 2185, column: 2, scope: !7157)
!7186 = !DILocation(line: 2178, column: 25, scope: !7152)
!7187 = !DILocation(line: 2178, column: 2, scope: !7152)
!7188 = distinct !{!7188, !7155, !7189}
!7189 = !DILocation(line: 2185, column: 2, scope: !7149)
!7190 = !DILocation(line: 2187, column: 41, scope: !7069)
!7191 = !DILocation(line: 2187, column: 2, scope: !7069)
!7192 = !DILocation(line: 2187, column: 9, scope: !7069)
!7193 = !DILocation(line: 2187, column: 20, scope: !7069)
!7194 = !DILocation(line: 2188, column: 2, scope: !7069)
!7195 = !DILocation(line: 2189, column: 1, scope: !7069)
!7196 = distinct !DISubprogram(name: "of_property_read_u32_array", scope: !3799, file: !3799, line: 494, type: !7197, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7197 = !DISubroutineType(types: !7198)
!7198 = !{!130, !7199, !324, !243, !447}
!7199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7200, size: 64)
!7200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3798)
!7201 = !DILocalVariable(name: "np", arg: 1, scope: !7196, file: !3799, line: 494, type: !7199)
!7202 = !DILocation(line: 494, column: 72, scope: !7196)
!7203 = !DILocalVariable(name: "propname", arg: 2, scope: !7196, file: !3799, line: 495, type: !324)
!7204 = !DILocation(line: 495, column: 23, scope: !7196)
!7205 = !DILocalVariable(name: "out_values", arg: 3, scope: !7196, file: !3799, line: 496, type: !243)
!7206 = !DILocation(line: 496, column: 16, scope: !7196)
!7207 = !DILocalVariable(name: "sz", arg: 4, scope: !7196, file: !3799, line: 496, type: !447)
!7208 = !DILocation(line: 496, column: 35, scope: !7196)
!7209 = !DILocalVariable(name: "ret", scope: !7196, file: !3799, line: 498, type: !130)
!7210 = !DILocation(line: 498, column: 6, scope: !7196)
!7211 = !DILocation(line: 498, column: 48, scope: !7196)
!7212 = !DILocation(line: 498, column: 52, scope: !7196)
!7213 = !DILocation(line: 498, column: 62, scope: !7196)
!7214 = !DILocation(line: 499, column: 13, scope: !7196)
!7215 = !DILocation(line: 498, column: 12, scope: !7196)
!7216 = !DILocation(line: 500, column: 6, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7196, file: !3799, line: 500, column: 6)
!7218 = !DILocation(line: 500, column: 10, scope: !7217)
!7219 = !DILocation(line: 500, column: 6, scope: !7196)
!7220 = !DILocation(line: 501, column: 3, scope: !7217)
!7221 = !DILocation(line: 503, column: 10, scope: !7217)
!7222 = !DILocation(line: 503, column: 3, scope: !7217)
!7223 = !DILocation(line: 504, column: 1, scope: !7196)
!7224 = distinct !DISubprogram(name: "kcalloc", scope: !210, file: !210, line: 601, type: !7225, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7225 = !DISubroutineType(types: !7226)
!7226 = !{!258, !447, !447, !248}
!7227 = !DILocalVariable(name: "n", arg: 1, scope: !7224, file: !210, line: 601, type: !447)
!7228 = !DILocation(line: 601, column: 36, scope: !7224)
!7229 = !DILocalVariable(name: "size", arg: 2, scope: !7224, file: !210, line: 601, type: !447)
!7230 = !DILocation(line: 601, column: 46, scope: !7224)
!7231 = !DILocalVariable(name: "flags", arg: 3, scope: !7224, file: !210, line: 601, type: !248)
!7232 = !DILocation(line: 601, column: 58, scope: !7224)
!7233 = !DILocation(line: 603, column: 23, scope: !7224)
!7234 = !DILocation(line: 603, column: 26, scope: !7224)
!7235 = !DILocation(line: 603, column: 32, scope: !7224)
!7236 = !DILocation(line: 603, column: 38, scope: !7224)
!7237 = !DILocation(line: 603, column: 9, scope: !7224)
!7238 = !DILocation(line: 603, column: 2, scope: !7224)
!7239 = distinct !DISubprogram(name: "resource_size", scope: !4707, file: !4707, line: 210, type: !7240, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7240 = !DISubroutineType(types: !7241)
!7241 = !{!4710, !7242}
!7242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7243, size: 64)
!7243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4706)
!7244 = !DILocalVariable(name: "res", arg: 1, scope: !7239, file: !4707, line: 210, type: !7242)
!7245 = !DILocation(line: 210, column: 68, scope: !7239)
!7246 = !DILocation(line: 212, column: 9, scope: !7239)
!7247 = !DILocation(line: 212, column: 14, scope: !7239)
!7248 = !DILocation(line: 212, column: 20, scope: !7239)
!7249 = !DILocation(line: 212, column: 25, scope: !7239)
!7250 = !DILocation(line: 212, column: 18, scope: !7239)
!7251 = !DILocation(line: 212, column: 31, scope: !7239)
!7252 = !DILocation(line: 212, column: 2, scope: !7239)
!7253 = distinct !DISubprogram(name: "of_property_read_u16_array", scope: !3799, file: !3799, line: 466, type: !7254, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7254 = !DISubroutineType(types: !7255)
!7255 = !{!130, !7199, !324, !259, !447}
!7256 = !DILocalVariable(name: "np", arg: 1, scope: !7253, file: !3799, line: 466, type: !7199)
!7257 = !DILocation(line: 466, column: 72, scope: !7253)
!7258 = !DILocalVariable(name: "propname", arg: 2, scope: !7253, file: !3799, line: 467, type: !324)
!7259 = !DILocation(line: 467, column: 23, scope: !7253)
!7260 = !DILocalVariable(name: "out_values", arg: 3, scope: !7253, file: !3799, line: 468, type: !259)
!7261 = !DILocation(line: 468, column: 16, scope: !7253)
!7262 = !DILocalVariable(name: "sz", arg: 4, scope: !7253, file: !3799, line: 468, type: !447)
!7263 = !DILocation(line: 468, column: 35, scope: !7253)
!7264 = !DILocalVariable(name: "ret", scope: !7253, file: !3799, line: 470, type: !130)
!7265 = !DILocation(line: 470, column: 6, scope: !7253)
!7266 = !DILocation(line: 470, column: 48, scope: !7253)
!7267 = !DILocation(line: 470, column: 52, scope: !7253)
!7268 = !DILocation(line: 470, column: 62, scope: !7253)
!7269 = !DILocation(line: 471, column: 13, scope: !7253)
!7270 = !DILocation(line: 470, column: 12, scope: !7253)
!7271 = !DILocation(line: 472, column: 6, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7253, file: !3799, line: 472, column: 6)
!7273 = !DILocation(line: 472, column: 10, scope: !7272)
!7274 = !DILocation(line: 472, column: 6, scope: !7253)
!7275 = !DILocation(line: 473, column: 3, scope: !7272)
!7276 = !DILocation(line: 475, column: 10, scope: !7272)
!7277 = !DILocation(line: 475, column: 3, scope: !7272)
!7278 = !DILocation(line: 476, column: 1, scope: !7253)
!7279 = distinct !DISubprogram(name: "readl", scope: !7280, file: !7280, line: 59, type: !7281, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7280 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!7281 = !DISubroutineType(types: !7282)
!7282 = !{!7, !6049}
!7283 = !DILocalVariable(name: "addr", arg: 1, scope: !7279, file: !7280, line: 59, type: !6049)
!7284 = !DILocation(line: 59, column: 1, scope: !7279)
!7285 = !DILocalVariable(name: "ret", scope: !7279, file: !7280, line: 59, type: !7)
!7286 = !{i32 -2142282964}
!7287 = distinct !DISubprogram(name: "writel", scope: !7280, file: !7280, line: 67, type: !7288, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7288 = !DISubroutineType(types: !7289)
!7289 = !{null, !7, !7290}
!7290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6051, size: 64)
!7291 = !DILocalVariable(name: "val", arg: 1, scope: !7287, file: !7280, line: 67, type: !7)
!7292 = !DILocation(line: 67, column: 1, scope: !7287)
!7293 = !DILocalVariable(name: "addr", arg: 2, scope: !7287, file: !7280, line: 67, type: !7290)
!7294 = !{i32 -2142280571}
!7295 = distinct !DISubprogram(name: "kmalloc_array", scope: !210, file: !210, line: 584, type: !7225, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7296 = !DILocalVariable(name: "s", arg: 1, scope: !7297, file: !210, line: 445, type: !1088)
!7297 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !210, file: !210, line: 445, type: !7298, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7298 = !DISubroutineType(types: !7299)
!7299 = !{!258, !1088, !248, !447}
!7300 = !DILocation(line: 445, column: 72, scope: !7297, inlinedAt: !7301)
!7301 = distinct !DILocation(line: 552, column: 10, scope: !7302, inlinedAt: !7307)
!7302 = distinct !DILexicalBlock(scope: !7303, file: !210, line: 540, column: 34)
!7303 = distinct !DILexicalBlock(scope: !7304, file: !210, line: 540, column: 6)
!7304 = distinct !DISubprogram(name: "kmalloc", scope: !210, file: !210, line: 538, type: !7305, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7305 = !DISubroutineType(types: !7306)
!7306 = !{!258, !447, !248}
!7307 = distinct !DILocation(line: 591, column: 10, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7295, file: !210, line: 590, column: 6)
!7309 = !DILocalVariable(name: "flags", arg: 2, scope: !7297, file: !210, line: 446, type: !248)
!7310 = !DILocation(line: 446, column: 9, scope: !7297, inlinedAt: !7301)
!7311 = !DILocalVariable(name: "size", arg: 3, scope: !7297, file: !210, line: 446, type: !447)
!7312 = !DILocation(line: 446, column: 23, scope: !7297, inlinedAt: !7301)
!7313 = !DILocalVariable(name: "ret", scope: !7297, file: !210, line: 448, type: !258)
!7314 = !DILocation(line: 448, column: 8, scope: !7297, inlinedAt: !7301)
!7315 = !DILocalVariable(name: "flags", arg: 1, scope: !7316, file: !210, line: 318, type: !248)
!7316 = distinct !DISubprogram(name: "kmalloc_type", scope: !210, file: !210, line: 318, type: !7317, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7317 = !DISubroutineType(types: !7318)
!7318 = !{!209, !248}
!7319 = !DILocation(line: 318, column: 67, scope: !7316, inlinedAt: !7320)
!7320 = distinct !DILocation(line: 553, column: 20, scope: !7302, inlinedAt: !7307)
!7321 = !DILocalVariable(name: "size", arg: 1, scope: !7322, file: !210, line: 346, type: !447)
!7322 = distinct !DISubprogram(name: "kmalloc_index", scope: !210, file: !210, line: 346, type: !7323, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7323 = !DISubroutineType(types: !7324)
!7324 = !{!7, !447}
!7325 = !DILocation(line: 346, column: 58, scope: !7322, inlinedAt: !7326)
!7326 = distinct !DILocation(line: 547, column: 11, scope: !7302, inlinedAt: !7307)
!7327 = !DILocalVariable(name: "size", arg: 1, scope: !7328, file: !210, line: 472, type: !447)
!7328 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !210, file: !210, line: 472, type: !7329, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7329 = !DISubroutineType(types: !7330)
!7330 = !{!258, !447, !248, !7}
!7331 = !DILocation(line: 472, column: 28, scope: !7328, inlinedAt: !7332)
!7332 = distinct !DILocation(line: 481, column: 9, scope: !7333, inlinedAt: !7334)
!7333 = distinct !DISubprogram(name: "kmalloc_large", scope: !210, file: !210, line: 478, type: !7305, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7334 = distinct !DILocation(line: 545, column: 11, scope: !7335, inlinedAt: !7307)
!7335 = distinct !DILexicalBlock(scope: !7302, file: !210, line: 544, column: 7)
!7336 = !DILocalVariable(name: "flags", arg: 2, scope: !7328, file: !210, line: 472, type: !248)
!7337 = !DILocation(line: 472, column: 40, scope: !7328, inlinedAt: !7332)
!7338 = !DILocalVariable(name: "order", arg: 3, scope: !7328, file: !210, line: 472, type: !7)
!7339 = !DILocation(line: 472, column: 60, scope: !7328, inlinedAt: !7332)
!7340 = !DILocalVariable(name: "size", arg: 1, scope: !7333, file: !210, line: 478, type: !447)
!7341 = !DILocation(line: 478, column: 51, scope: !7333, inlinedAt: !7334)
!7342 = !DILocalVariable(name: "flags", arg: 2, scope: !7333, file: !210, line: 478, type: !248)
!7343 = !DILocation(line: 478, column: 63, scope: !7333, inlinedAt: !7334)
!7344 = !DILocalVariable(name: "order", scope: !7333, file: !210, line: 480, type: !7)
!7345 = !DILocation(line: 480, column: 15, scope: !7333, inlinedAt: !7334)
!7346 = !DILocalVariable(name: "size", arg: 1, scope: !7304, file: !210, line: 538, type: !447)
!7347 = !DILocation(line: 538, column: 45, scope: !7304, inlinedAt: !7307)
!7348 = !DILocalVariable(name: "flags", arg: 2, scope: !7304, file: !210, line: 538, type: !248)
!7349 = !DILocation(line: 538, column: 57, scope: !7304, inlinedAt: !7307)
!7350 = !DILocalVariable(name: "index", scope: !7302, file: !210, line: 542, type: !7)
!7351 = !DILocation(line: 542, column: 16, scope: !7302, inlinedAt: !7307)
!7352 = !DILocalVariable(name: "n", arg: 1, scope: !7295, file: !210, line: 584, type: !447)
!7353 = !DILocation(line: 584, column: 42, scope: !7295)
!7354 = !DILocalVariable(name: "size", arg: 2, scope: !7295, file: !210, line: 584, type: !447)
!7355 = !DILocation(line: 584, column: 52, scope: !7295)
!7356 = !DILocalVariable(name: "flags", arg: 3, scope: !7295, file: !210, line: 584, type: !248)
!7357 = !DILocation(line: 584, column: 64, scope: !7295)
!7358 = !DILocalVariable(name: "bytes", scope: !7295, file: !210, line: 586, type: !447)
!7359 = !DILocation(line: 586, column: 9, scope: !7295)
!7360 = !DILocalVariable(name: "__a", scope: !7361, file: !210, line: 588, type: !447)
!7361 = distinct !DILexicalBlock(scope: !7362, file: !210, line: 588, column: 6)
!7362 = distinct !DILexicalBlock(scope: !7295, file: !210, line: 588, column: 6)
!7363 = !DILocation(line: 588, column: 6, scope: !7361)
!7364 = !DILocalVariable(name: "__b", scope: !7361, file: !210, line: 588, type: !447)
!7365 = !DILocalVariable(name: "__d", scope: !7361, file: !210, line: 588, type: !4352)
!7366 = !DILocation(line: 588, column: 6, scope: !7362)
!7367 = !DILocation(line: 588, column: 6, scope: !7295)
!7368 = !DILocation(line: 589, column: 3, scope: !7362)
!7369 = !DILocation(line: 590, column: 27, scope: !7308)
!7370 = !DILocation(line: 590, column: 6, scope: !7308)
!7371 = !DILocation(line: 590, column: 30, scope: !7308)
!7372 = !DILocation(line: 590, column: 54, scope: !7308)
!7373 = !DILocation(line: 590, column: 33, scope: !7308)
!7374 = !DILocation(line: 590, column: 6, scope: !7295)
!7375 = !DILocation(line: 591, column: 18, scope: !7308)
!7376 = !DILocation(line: 591, column: 25, scope: !7308)
!7377 = !DILocation(line: 540, column: 27, scope: !7303, inlinedAt: !7307)
!7378 = !DILocation(line: 540, column: 6, scope: !7303, inlinedAt: !7307)
!7379 = !DILocation(line: 540, column: 6, scope: !7304, inlinedAt: !7307)
!7380 = !DILocation(line: 544, column: 7, scope: !7335, inlinedAt: !7307)
!7381 = !DILocation(line: 544, column: 12, scope: !7335, inlinedAt: !7307)
!7382 = !DILocation(line: 544, column: 7, scope: !7302, inlinedAt: !7307)
!7383 = !DILocation(line: 545, column: 25, scope: !7335, inlinedAt: !7307)
!7384 = !DILocation(line: 545, column: 31, scope: !7335, inlinedAt: !7307)
!7385 = !DILocation(line: 480, column: 33, scope: !7333, inlinedAt: !7334)
!7386 = !DILocation(line: 480, column: 23, scope: !7333, inlinedAt: !7334)
!7387 = !DILocation(line: 481, column: 29, scope: !7333, inlinedAt: !7334)
!7388 = !DILocation(line: 481, column: 35, scope: !7333, inlinedAt: !7334)
!7389 = !DILocation(line: 481, column: 42, scope: !7333, inlinedAt: !7334)
!7390 = !DILocation(line: 474, column: 23, scope: !7328, inlinedAt: !7332)
!7391 = !DILocation(line: 474, column: 29, scope: !7328, inlinedAt: !7332)
!7392 = !DILocation(line: 474, column: 36, scope: !7328, inlinedAt: !7332)
!7393 = !DILocation(line: 474, column: 9, scope: !7328, inlinedAt: !7332)
!7394 = !DILocation(line: 545, column: 4, scope: !7335, inlinedAt: !7307)
!7395 = !DILocation(line: 547, column: 25, scope: !7302, inlinedAt: !7307)
!7396 = !DILocation(line: 348, column: 7, scope: !7397, inlinedAt: !7326)
!7397 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 348, column: 6)
!7398 = !DILocation(line: 348, column: 6, scope: !7322, inlinedAt: !7326)
!7399 = !DILocation(line: 349, column: 3, scope: !7397, inlinedAt: !7326)
!7400 = !DILocation(line: 351, column: 6, scope: !7401, inlinedAt: !7326)
!7401 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 351, column: 6)
!7402 = !DILocation(line: 351, column: 11, scope: !7401, inlinedAt: !7326)
!7403 = !DILocation(line: 351, column: 6, scope: !7322, inlinedAt: !7326)
!7404 = !DILocation(line: 352, column: 3, scope: !7401, inlinedAt: !7326)
!7405 = !DILocation(line: 354, column: 32, scope: !7406, inlinedAt: !7326)
!7406 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 354, column: 6)
!7407 = !DILocation(line: 354, column: 37, scope: !7406, inlinedAt: !7326)
!7408 = !DILocation(line: 354, column: 42, scope: !7406, inlinedAt: !7326)
!7409 = !DILocation(line: 354, column: 45, scope: !7406, inlinedAt: !7326)
!7410 = !DILocation(line: 354, column: 50, scope: !7406, inlinedAt: !7326)
!7411 = !DILocation(line: 354, column: 6, scope: !7322, inlinedAt: !7326)
!7412 = !DILocation(line: 355, column: 3, scope: !7406, inlinedAt: !7326)
!7413 = !DILocation(line: 356, column: 32, scope: !7414, inlinedAt: !7326)
!7414 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 356, column: 6)
!7415 = !DILocation(line: 356, column: 37, scope: !7414, inlinedAt: !7326)
!7416 = !DILocation(line: 356, column: 43, scope: !7414, inlinedAt: !7326)
!7417 = !DILocation(line: 356, column: 46, scope: !7414, inlinedAt: !7326)
!7418 = !DILocation(line: 356, column: 51, scope: !7414, inlinedAt: !7326)
!7419 = !DILocation(line: 356, column: 6, scope: !7322, inlinedAt: !7326)
!7420 = !DILocation(line: 357, column: 3, scope: !7414, inlinedAt: !7326)
!7421 = !DILocation(line: 358, column: 6, scope: !7422, inlinedAt: !7326)
!7422 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 358, column: 6)
!7423 = !DILocation(line: 358, column: 11, scope: !7422, inlinedAt: !7326)
!7424 = !DILocation(line: 358, column: 6, scope: !7322, inlinedAt: !7326)
!7425 = !DILocation(line: 358, column: 26, scope: !7422, inlinedAt: !7326)
!7426 = !DILocation(line: 359, column: 6, scope: !7427, inlinedAt: !7326)
!7427 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 359, column: 6)
!7428 = !DILocation(line: 359, column: 11, scope: !7427, inlinedAt: !7326)
!7429 = !DILocation(line: 359, column: 6, scope: !7322, inlinedAt: !7326)
!7430 = !DILocation(line: 359, column: 26, scope: !7427, inlinedAt: !7326)
!7431 = !DILocation(line: 360, column: 6, scope: !7432, inlinedAt: !7326)
!7432 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 360, column: 6)
!7433 = !DILocation(line: 360, column: 11, scope: !7432, inlinedAt: !7326)
!7434 = !DILocation(line: 360, column: 6, scope: !7322, inlinedAt: !7326)
!7435 = !DILocation(line: 360, column: 26, scope: !7432, inlinedAt: !7326)
!7436 = !DILocation(line: 361, column: 6, scope: !7437, inlinedAt: !7326)
!7437 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 361, column: 6)
!7438 = !DILocation(line: 361, column: 11, scope: !7437, inlinedAt: !7326)
!7439 = !DILocation(line: 361, column: 6, scope: !7322, inlinedAt: !7326)
!7440 = !DILocation(line: 361, column: 26, scope: !7437, inlinedAt: !7326)
!7441 = !DILocation(line: 362, column: 6, scope: !7442, inlinedAt: !7326)
!7442 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 362, column: 6)
!7443 = !DILocation(line: 362, column: 11, scope: !7442, inlinedAt: !7326)
!7444 = !DILocation(line: 362, column: 6, scope: !7322, inlinedAt: !7326)
!7445 = !DILocation(line: 362, column: 26, scope: !7442, inlinedAt: !7326)
!7446 = !DILocation(line: 363, column: 6, scope: !7447, inlinedAt: !7326)
!7447 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 363, column: 6)
!7448 = !DILocation(line: 363, column: 11, scope: !7447, inlinedAt: !7326)
!7449 = !DILocation(line: 363, column: 6, scope: !7322, inlinedAt: !7326)
!7450 = !DILocation(line: 363, column: 26, scope: !7447, inlinedAt: !7326)
!7451 = !DILocation(line: 364, column: 6, scope: !7452, inlinedAt: !7326)
!7452 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 364, column: 6)
!7453 = !DILocation(line: 364, column: 11, scope: !7452, inlinedAt: !7326)
!7454 = !DILocation(line: 364, column: 6, scope: !7322, inlinedAt: !7326)
!7455 = !DILocation(line: 364, column: 26, scope: !7452, inlinedAt: !7326)
!7456 = !DILocation(line: 365, column: 6, scope: !7457, inlinedAt: !7326)
!7457 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 365, column: 6)
!7458 = !DILocation(line: 365, column: 11, scope: !7457, inlinedAt: !7326)
!7459 = !DILocation(line: 365, column: 6, scope: !7322, inlinedAt: !7326)
!7460 = !DILocation(line: 365, column: 26, scope: !7457, inlinedAt: !7326)
!7461 = !DILocation(line: 366, column: 6, scope: !7462, inlinedAt: !7326)
!7462 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 366, column: 6)
!7463 = !DILocation(line: 366, column: 11, scope: !7462, inlinedAt: !7326)
!7464 = !DILocation(line: 366, column: 6, scope: !7322, inlinedAt: !7326)
!7465 = !DILocation(line: 366, column: 26, scope: !7462, inlinedAt: !7326)
!7466 = !DILocation(line: 367, column: 6, scope: !7467, inlinedAt: !7326)
!7467 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 367, column: 6)
!7468 = !DILocation(line: 367, column: 11, scope: !7467, inlinedAt: !7326)
!7469 = !DILocation(line: 367, column: 6, scope: !7322, inlinedAt: !7326)
!7470 = !DILocation(line: 367, column: 26, scope: !7467, inlinedAt: !7326)
!7471 = !DILocation(line: 368, column: 6, scope: !7472, inlinedAt: !7326)
!7472 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 368, column: 6)
!7473 = !DILocation(line: 368, column: 11, scope: !7472, inlinedAt: !7326)
!7474 = !DILocation(line: 368, column: 6, scope: !7322, inlinedAt: !7326)
!7475 = !DILocation(line: 368, column: 26, scope: !7472, inlinedAt: !7326)
!7476 = !DILocation(line: 369, column: 6, scope: !7477, inlinedAt: !7326)
!7477 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 369, column: 6)
!7478 = !DILocation(line: 369, column: 11, scope: !7477, inlinedAt: !7326)
!7479 = !DILocation(line: 369, column: 6, scope: !7322, inlinedAt: !7326)
!7480 = !DILocation(line: 369, column: 26, scope: !7477, inlinedAt: !7326)
!7481 = !DILocation(line: 370, column: 6, scope: !7482, inlinedAt: !7326)
!7482 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 370, column: 6)
!7483 = !DILocation(line: 370, column: 11, scope: !7482, inlinedAt: !7326)
!7484 = !DILocation(line: 370, column: 6, scope: !7322, inlinedAt: !7326)
!7485 = !DILocation(line: 370, column: 26, scope: !7482, inlinedAt: !7326)
!7486 = !DILocation(line: 371, column: 6, scope: !7487, inlinedAt: !7326)
!7487 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 371, column: 6)
!7488 = !DILocation(line: 371, column: 11, scope: !7487, inlinedAt: !7326)
!7489 = !DILocation(line: 371, column: 6, scope: !7322, inlinedAt: !7326)
!7490 = !DILocation(line: 371, column: 26, scope: !7487, inlinedAt: !7326)
!7491 = !DILocation(line: 372, column: 6, scope: !7492, inlinedAt: !7326)
!7492 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 372, column: 6)
!7493 = !DILocation(line: 372, column: 11, scope: !7492, inlinedAt: !7326)
!7494 = !DILocation(line: 372, column: 6, scope: !7322, inlinedAt: !7326)
!7495 = !DILocation(line: 372, column: 26, scope: !7492, inlinedAt: !7326)
!7496 = !DILocation(line: 373, column: 6, scope: !7497, inlinedAt: !7326)
!7497 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 373, column: 6)
!7498 = !DILocation(line: 373, column: 11, scope: !7497, inlinedAt: !7326)
!7499 = !DILocation(line: 373, column: 6, scope: !7322, inlinedAt: !7326)
!7500 = !DILocation(line: 373, column: 26, scope: !7497, inlinedAt: !7326)
!7501 = !DILocation(line: 374, column: 6, scope: !7502, inlinedAt: !7326)
!7502 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 374, column: 6)
!7503 = !DILocation(line: 374, column: 11, scope: !7502, inlinedAt: !7326)
!7504 = !DILocation(line: 374, column: 6, scope: !7322, inlinedAt: !7326)
!7505 = !DILocation(line: 374, column: 26, scope: !7502, inlinedAt: !7326)
!7506 = !DILocation(line: 375, column: 6, scope: !7507, inlinedAt: !7326)
!7507 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 375, column: 6)
!7508 = !DILocation(line: 375, column: 11, scope: !7507, inlinedAt: !7326)
!7509 = !DILocation(line: 375, column: 6, scope: !7322, inlinedAt: !7326)
!7510 = !DILocation(line: 375, column: 27, scope: !7507, inlinedAt: !7326)
!7511 = !DILocation(line: 376, column: 6, scope: !7512, inlinedAt: !7326)
!7512 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 376, column: 6)
!7513 = !DILocation(line: 376, column: 11, scope: !7512, inlinedAt: !7326)
!7514 = !DILocation(line: 376, column: 6, scope: !7322, inlinedAt: !7326)
!7515 = !DILocation(line: 376, column: 32, scope: !7512, inlinedAt: !7326)
!7516 = !DILocation(line: 377, column: 6, scope: !7517, inlinedAt: !7326)
!7517 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 377, column: 6)
!7518 = !DILocation(line: 377, column: 11, scope: !7517, inlinedAt: !7326)
!7519 = !DILocation(line: 377, column: 6, scope: !7322, inlinedAt: !7326)
!7520 = !DILocation(line: 377, column: 32, scope: !7517, inlinedAt: !7326)
!7521 = !DILocation(line: 378, column: 6, scope: !7522, inlinedAt: !7326)
!7522 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 378, column: 6)
!7523 = !DILocation(line: 378, column: 11, scope: !7522, inlinedAt: !7326)
!7524 = !DILocation(line: 378, column: 6, scope: !7322, inlinedAt: !7326)
!7525 = !DILocation(line: 378, column: 32, scope: !7522, inlinedAt: !7326)
!7526 = !DILocation(line: 379, column: 6, scope: !7527, inlinedAt: !7326)
!7527 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 379, column: 6)
!7528 = !DILocation(line: 379, column: 11, scope: !7527, inlinedAt: !7326)
!7529 = !DILocation(line: 379, column: 6, scope: !7322, inlinedAt: !7326)
!7530 = !DILocation(line: 379, column: 33, scope: !7527, inlinedAt: !7326)
!7531 = !DILocation(line: 380, column: 6, scope: !7532, inlinedAt: !7326)
!7532 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 380, column: 6)
!7533 = !DILocation(line: 380, column: 11, scope: !7532, inlinedAt: !7326)
!7534 = !DILocation(line: 380, column: 6, scope: !7322, inlinedAt: !7326)
!7535 = !DILocation(line: 380, column: 33, scope: !7532, inlinedAt: !7326)
!7536 = !DILocation(line: 381, column: 6, scope: !7537, inlinedAt: !7326)
!7537 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 381, column: 6)
!7538 = !DILocation(line: 381, column: 11, scope: !7537, inlinedAt: !7326)
!7539 = !DILocation(line: 381, column: 6, scope: !7322, inlinedAt: !7326)
!7540 = !DILocation(line: 381, column: 33, scope: !7537, inlinedAt: !7326)
!7541 = !DILocation(line: 382, column: 2, scope: !7542, inlinedAt: !7326)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !210, line: 382, column: 2)
!7543 = distinct !DILexicalBlock(scope: !7322, file: !210, line: 382, column: 2)
!7544 = !{i32 -2141927949, i32 -2141927920, i32 -2141927874, i32 -2141927816, i32 -2141927762, i32 -2141927708, i32 -2141927653, i32 -2141927622}
!7545 = !DILocation(line: 382, column: 2, scope: !7546, inlinedAt: !7326)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !210, line: 382, column: 2)
!7547 = distinct !DILexicalBlock(scope: !7543, file: !210, line: 382, column: 2)
!7548 = !{i32 -2141927179, i32 -2141927172, i32 -2141927118, i32 -2141927087, i32 -2141927057}
!7549 = !DILocation(line: 382, column: 2, scope: !7547, inlinedAt: !7326)
!7550 = !DILocation(line: 386, column: 1, scope: !7322, inlinedAt: !7326)
!7551 = !DILocation(line: 547, column: 9, scope: !7302, inlinedAt: !7307)
!7552 = !DILocation(line: 549, column: 8, scope: !7553, inlinedAt: !7307)
!7553 = distinct !DILexicalBlock(scope: !7302, file: !210, line: 549, column: 7)
!7554 = !DILocation(line: 549, column: 7, scope: !7302, inlinedAt: !7307)
!7555 = !DILocation(line: 550, column: 4, scope: !7553, inlinedAt: !7307)
!7556 = !DILocation(line: 553, column: 33, scope: !7302, inlinedAt: !7307)
!7557 = !DILocation(line: 325, column: 6, scope: !7558, inlinedAt: !7320)
!7558 = distinct !DILexicalBlock(scope: !7316, file: !210, line: 325, column: 6)
!7559 = !DILocation(line: 325, column: 6, scope: !7316, inlinedAt: !7320)
!7560 = !DILocation(line: 326, column: 3, scope: !7558, inlinedAt: !7320)
!7561 = !DILocation(line: 332, column: 9, scope: !7316, inlinedAt: !7320)
!7562 = !DILocation(line: 332, column: 15, scope: !7316, inlinedAt: !7320)
!7563 = !DILocation(line: 332, column: 2, scope: !7316, inlinedAt: !7320)
!7564 = !DILocation(line: 336, column: 1, scope: !7316, inlinedAt: !7320)
!7565 = !DILocation(line: 553, column: 5, scope: !7302, inlinedAt: !7307)
!7566 = !DILocation(line: 553, column: 41, scope: !7302, inlinedAt: !7307)
!7567 = !DILocation(line: 554, column: 5, scope: !7302, inlinedAt: !7307)
!7568 = !DILocation(line: 554, column: 12, scope: !7302, inlinedAt: !7307)
!7569 = !DILocation(line: 448, column: 31, scope: !7297, inlinedAt: !7301)
!7570 = !DILocation(line: 448, column: 34, scope: !7297, inlinedAt: !7301)
!7571 = !DILocation(line: 448, column: 14, scope: !7297, inlinedAt: !7301)
!7572 = !DILocation(line: 450, column: 22, scope: !7297, inlinedAt: !7301)
!7573 = !DILocation(line: 450, column: 25, scope: !7297, inlinedAt: !7301)
!7574 = !DILocation(line: 450, column: 30, scope: !7297, inlinedAt: !7301)
!7575 = !DILocation(line: 450, column: 36, scope: !7297, inlinedAt: !7301)
!7576 = !DILocation(line: 450, column: 8, scope: !7297, inlinedAt: !7301)
!7577 = !DILocation(line: 450, column: 6, scope: !7297, inlinedAt: !7301)
!7578 = !DILocation(line: 451, column: 9, scope: !7297, inlinedAt: !7301)
!7579 = !DILocation(line: 552, column: 3, scope: !7302, inlinedAt: !7307)
!7580 = !DILocation(line: 557, column: 19, scope: !7304, inlinedAt: !7307)
!7581 = !DILocation(line: 557, column: 25, scope: !7304, inlinedAt: !7307)
!7582 = !DILocation(line: 557, column: 9, scope: !7304, inlinedAt: !7307)
!7583 = !DILocation(line: 557, column: 2, scope: !7304, inlinedAt: !7307)
!7584 = !DILocation(line: 558, column: 1, scope: !7304, inlinedAt: !7307)
!7585 = !DILocation(line: 591, column: 3, scope: !7308)
!7586 = !DILocation(line: 592, column: 19, scope: !7295)
!7587 = !DILocation(line: 592, column: 26, scope: !7295)
!7588 = !DILocation(line: 592, column: 9, scope: !7295)
!7589 = !DILocation(line: 592, column: 2, scope: !7295)
!7590 = !DILocation(line: 593, column: 1, scope: !7295)
!7591 = distinct !DISubprogram(name: "__must_check_overflow", scope: !7592, file: !7592, line: 52, type: !7593, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7592 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!7593 = !DISubroutineType(types: !7594)
!7594 = !{!314, !314}
!7595 = !DILocalVariable(name: "overflow", arg: 1, scope: !7591, file: !7592, line: 52, type: !314)
!7596 = !DILocation(line: 52, column: 60, scope: !7591)
!7597 = !DILocation(line: 54, column: 9, scope: !7591)
!7598 = !DILocation(line: 54, column: 2, scope: !7591)
!7599 = distinct !DISubprogram(name: "get_order", scope: !7600, file: !7600, line: 29, type: !7601, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7600 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!7601 = !DISubroutineType(types: !7602)
!7602 = !{!130, !265}
!7603 = !DILocalVariable(name: "x", arg: 1, scope: !7604, file: !6031, line: 366, type: !543)
!7604 = distinct !DISubprogram(name: "fls64", scope: !6031, file: !6031, line: 366, type: !7605, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7605 = !DISubroutineType(types: !7606)
!7606 = !{!130, !543}
!7607 = !DILocation(line: 366, column: 40, scope: !7604, inlinedAt: !7608)
!7608 = distinct !DILocation(line: 46, column: 9, scope: !7599)
!7609 = !DILocalVariable(name: "bitpos", scope: !7604, file: !6031, line: 368, type: !130)
!7610 = !DILocation(line: 368, column: 6, scope: !7604, inlinedAt: !7608)
!7611 = !DILocalVariable(name: "size", arg: 1, scope: !7599, file: !7600, line: 29, type: !265)
!7612 = !DILocation(line: 29, column: 63, scope: !7599)
!7613 = !DILocation(line: 31, column: 27, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7599, file: !7600, line: 31, column: 6)
!7615 = !DILocation(line: 31, column: 6, scope: !7614)
!7616 = !DILocation(line: 31, column: 6, scope: !7599)
!7617 = !DILocation(line: 32, column: 8, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7619, file: !7600, line: 32, column: 7)
!7619 = distinct !DILexicalBlock(scope: !7614, file: !7600, line: 31, column: 34)
!7620 = !DILocation(line: 32, column: 7, scope: !7619)
!7621 = !DILocation(line: 33, column: 4, scope: !7618)
!7622 = !DILocation(line: 35, column: 7, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7619, file: !7600, line: 35, column: 7)
!7624 = !DILocation(line: 35, column: 12, scope: !7623)
!7625 = !DILocation(line: 35, column: 7, scope: !7619)
!7626 = !DILocation(line: 36, column: 4, scope: !7623)
!7627 = !DILocation(line: 38, column: 10, scope: !7619)
!7628 = !DILocation(line: 38, column: 28, scope: !7619)
!7629 = !DILocation(line: 38, column: 41, scope: !7619)
!7630 = !DILocation(line: 38, column: 3, scope: !7619)
!7631 = !DILocation(line: 41, column: 6, scope: !7599)
!7632 = !DILocation(line: 42, column: 7, scope: !7599)
!7633 = !DILocation(line: 46, column: 15, scope: !7599)
!7634 = !DILocation(line: 374, column: 2, scope: !7604, inlinedAt: !7608)
!7635 = !DILocation(line: 376, column: 14, scope: !7604, inlinedAt: !7608)
!7636 = !{i32 502247}
!7637 = !DILocation(line: 377, column: 9, scope: !7604, inlinedAt: !7608)
!7638 = !DILocation(line: 377, column: 16, scope: !7604, inlinedAt: !7608)
!7639 = !DILocation(line: 46, column: 2, scope: !7599)
!7640 = !DILocation(line: 48, column: 1, scope: !7599)
!7641 = distinct !DISubprogram(name: "__ilog2_u64", scope: !7642, file: !7642, line: 30, type: !7643, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7642 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!7643 = !DISubroutineType(types: !7644)
!7644 = !{!130, !542}
!7645 = !DILocation(line: 366, column: 40, scope: !7604, inlinedAt: !7646)
!7646 = distinct !DILocation(line: 32, column: 9, scope: !7641)
!7647 = !DILocation(line: 368, column: 6, scope: !7604, inlinedAt: !7646)
!7648 = !DILocalVariable(name: "n", arg: 1, scope: !7641, file: !7642, line: 30, type: !542)
!7649 = !DILocation(line: 30, column: 21, scope: !7641)
!7650 = !DILocation(line: 32, column: 15, scope: !7641)
!7651 = !DILocation(line: 374, column: 2, scope: !7604, inlinedAt: !7646)
!7652 = !DILocation(line: 376, column: 14, scope: !7604, inlinedAt: !7646)
!7653 = !DILocation(line: 377, column: 9, scope: !7604, inlinedAt: !7646)
!7654 = !DILocation(line: 377, column: 16, scope: !7604, inlinedAt: !7646)
!7655 = !DILocation(line: 32, column: 18, scope: !7641)
!7656 = !DILocation(line: 32, column: 2, scope: !7641)
!7657 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !7658, file: !7658, line: 137, type: !7659, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7658 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!7659 = !DISubroutineType(types: !7660)
!7660 = !{!258, !1088, !2263, !447, !248}
!7661 = !DILocalVariable(name: "s", arg: 1, scope: !7657, file: !7658, line: 137, type: !1088)
!7662 = !DILocation(line: 137, column: 54, scope: !7657)
!7663 = !DILocalVariable(name: "object", arg: 2, scope: !7657, file: !7658, line: 137, type: !2263)
!7664 = !DILocation(line: 137, column: 69, scope: !7657)
!7665 = !DILocalVariable(name: "size", arg: 3, scope: !7657, file: !7658, line: 138, type: !447)
!7666 = !DILocation(line: 138, column: 12, scope: !7657)
!7667 = !DILocalVariable(name: "flags", arg: 4, scope: !7657, file: !7658, line: 138, type: !248)
!7668 = !DILocation(line: 138, column: 24, scope: !7657)
!7669 = !DILocation(line: 140, column: 17, scope: !7657)
!7670 = !DILocation(line: 140, column: 2, scope: !7657)
!7671 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !73, file: !73, line: 660, type: !4516, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7672 = !DILocalVariable(name: "dev", arg: 1, scope: !7671, file: !73, line: 660, type: !345)
!7673 = !DILocation(line: 660, column: 51, scope: !7671)
!7674 = !DILocalVariable(name: "data", arg: 2, scope: !7671, file: !73, line: 660, type: !258)
!7675 = !DILocation(line: 660, column: 62, scope: !7671)
!7676 = !DILocation(line: 662, column: 21, scope: !7671)
!7677 = !DILocation(line: 662, column: 2, scope: !7671)
!7678 = !DILocation(line: 662, column: 7, scope: !7671)
!7679 = !DILocation(line: 662, column: 19, scope: !7671)
!7680 = !DILocation(line: 663, column: 1, scope: !7671)
!7681 = distinct !DISubprogram(name: "edma_read", scope: !3, file: !3, line: 309, type: !7682, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7682 = !DISubroutineType(types: !7683)
!7683 = !{!7, !4579, !130}
!7684 = !DILocalVariable(name: "ecc", arg: 1, scope: !7681, file: !3, line: 309, type: !4579)
!7685 = !DILocation(line: 309, column: 54, scope: !7681)
!7686 = !DILocalVariable(name: "offset", arg: 2, scope: !7681, file: !3, line: 309, type: !130)
!7687 = !DILocation(line: 309, column: 63, scope: !7681)
!7688 = !DILocation(line: 311, column: 35, scope: !7681)
!7689 = !DILocation(line: 311, column: 40, scope: !7681)
!7690 = !DILocation(line: 311, column: 47, scope: !7681)
!7691 = !DILocation(line: 311, column: 45, scope: !7681)
!7692 = !DILocation(line: 311, column: 23, scope: !7681)
!7693 = !DILocation(line: 311, column: 2, scope: !7681)
!7694 = distinct !DISubprogram(name: "__readl", scope: !7280, file: !7280, line: 63, type: !7281, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7695 = !DILocalVariable(name: "addr", arg: 1, scope: !7694, file: !7280, line: 63, type: !6049)
!7696 = !DILocation(line: 63, column: 1, scope: !7694)
!7697 = !DILocalVariable(name: "ret", scope: !7694, file: !7280, line: 63, type: !7)
!7698 = !{i32 -2142281738}
!7699 = distinct !DISubprogram(name: "devm_kmalloc_array", scope: !73, file: !73, line: 219, type: !5990, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7700 = !DILocalVariable(name: "dev", arg: 1, scope: !7699, file: !73, line: 219, type: !345)
!7701 = !DILocation(line: 219, column: 55, scope: !7699)
!7702 = !DILocalVariable(name: "n", arg: 2, scope: !7699, file: !73, line: 220, type: !447)
!7703 = !DILocation(line: 220, column: 19, scope: !7699)
!7704 = !DILocalVariable(name: "size", arg: 3, scope: !7699, file: !73, line: 220, type: !447)
!7705 = !DILocation(line: 220, column: 29, scope: !7699)
!7706 = !DILocalVariable(name: "flags", arg: 4, scope: !7699, file: !73, line: 220, type: !248)
!7707 = !DILocation(line: 220, column: 41, scope: !7699)
!7708 = !DILocalVariable(name: "bytes", scope: !7699, file: !73, line: 222, type: !447)
!7709 = !DILocation(line: 222, column: 9, scope: !7699)
!7710 = !DILocalVariable(name: "__a", scope: !7711, file: !73, line: 224, type: !447)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !73, line: 224, column: 6)
!7712 = distinct !DILexicalBlock(scope: !7699, file: !73, line: 224, column: 6)
!7713 = !DILocation(line: 224, column: 6, scope: !7711)
!7714 = !DILocalVariable(name: "__b", scope: !7711, file: !73, line: 224, type: !447)
!7715 = !DILocalVariable(name: "__d", scope: !7711, file: !73, line: 224, type: !4352)
!7716 = !DILocation(line: 224, column: 6, scope: !7712)
!7717 = !DILocation(line: 224, column: 6, scope: !7699)
!7718 = !DILocation(line: 225, column: 3, scope: !7712)
!7719 = !DILocation(line: 227, column: 22, scope: !7699)
!7720 = !DILocation(line: 227, column: 27, scope: !7699)
!7721 = !DILocation(line: 227, column: 34, scope: !7699)
!7722 = !DILocation(line: 227, column: 9, scope: !7699)
!7723 = !DILocation(line: 227, column: 2, scope: !7699)
!7724 = !DILocation(line: 228, column: 1, scope: !7699)
!7725 = distinct !DISubprogram(name: "__set_bit", scope: !6023, file: !6023, line: 25, type: !7726, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7726 = !DISubroutineType(types: !7727)
!7727 = !{null, !266, !7728}
!7728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6028, size: 64)
!7729 = !DILocalVariable(name: "nr", arg: 1, scope: !7730, file: !6031, line: 66, type: !266)
!7730 = distinct !DISubprogram(name: "arch___set_bit", scope: !6031, file: !6031, line: 66, type: !7726, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7731 = !DILocation(line: 66, column: 21, scope: !7730, inlinedAt: !7732)
!7732 = distinct !DILocation(line: 28, column: 2, scope: !7725)
!7733 = !DILocalVariable(name: "addr", arg: 2, scope: !7730, file: !6031, line: 66, type: !7728)
!7734 = !DILocation(line: 66, column: 49, scope: !7730, inlinedAt: !7732)
!7735 = !DILocalVariable(name: "v", arg: 1, scope: !7736, file: !6046, line: 39, type: !6049)
!7736 = distinct !DISubprogram(name: "instrument_write", scope: !6046, file: !6046, line: 39, type: !6047, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7737 = !DILocation(line: 39, column: 67, scope: !7736, inlinedAt: !7738)
!7738 = distinct !DILocation(line: 27, column: 2, scope: !7725)
!7739 = !DILocalVariable(name: "size", arg: 2, scope: !7736, file: !6046, line: 39, type: !447)
!7740 = !DILocation(line: 39, column: 77, scope: !7736, inlinedAt: !7738)
!7741 = !DILocalVariable(name: "nr", arg: 1, scope: !7725, file: !6023, line: 25, type: !266)
!7742 = !DILocation(line: 25, column: 35, scope: !7725)
!7743 = !DILocalVariable(name: "addr", arg: 2, scope: !7725, file: !6023, line: 25, type: !7728)
!7744 = !DILocation(line: 25, column: 63, scope: !7725)
!7745 = !DILocation(line: 27, column: 19, scope: !7725)
!7746 = !DILocation(line: 27, column: 26, scope: !7725)
!7747 = !DILocation(line: 27, column: 24, scope: !7725)
!7748 = !DILocation(line: 41, column: 20, scope: !7736, inlinedAt: !7738)
!7749 = !DILocation(line: 41, column: 23, scope: !7736, inlinedAt: !7738)
!7750 = !DILocation(line: 41, column: 2, scope: !7736, inlinedAt: !7738)
!7751 = !DILocation(line: 42, column: 2, scope: !7736, inlinedAt: !7738)
!7752 = !DILocation(line: 28, column: 17, scope: !7725)
!7753 = !DILocation(line: 28, column: 21, scope: !7725)
!7754 = !DILocation(line: 68, column: 44, scope: !7730, inlinedAt: !7732)
!7755 = !DILocation(line: 68, column: 56, scope: !7730, inlinedAt: !7732)
!7756 = !DILocation(line: 68, column: 2, scope: !7730, inlinedAt: !7732)
!7757 = !{i32 -2146949338}
!7758 = !DILocation(line: 29, column: 1, scope: !7725)
!7759 = distinct !DISubprogram(name: "kasan_check_write", scope: !7760, file: !7760, line: 38, type: !7761, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7760 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7761 = !DISubroutineType(types: !7762)
!7762 = !{!314, !6049, !7}
!7763 = !DILocalVariable(name: "p", arg: 1, scope: !7759, file: !7760, line: 38, type: !6049)
!7764 = !DILocation(line: 38, column: 59, scope: !7759)
!7765 = !DILocalVariable(name: "size", arg: 2, scope: !7759, file: !7760, line: 38, type: !7)
!7766 = !DILocation(line: 38, column: 75, scope: !7759)
!7767 = !DILocation(line: 40, column: 2, scope: !7759)
!7768 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7769, file: !7769, line: 178, type: !7770, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7769 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7770 = !DISubroutineType(types: !7771)
!7771 = !{null, !6049, !447, !130}
!7772 = !DILocalVariable(name: "ptr", arg: 1, scope: !7768, file: !7769, line: 178, type: !6049)
!7773 = !DILocation(line: 178, column: 60, scope: !7768)
!7774 = !DILocalVariable(name: "size", arg: 2, scope: !7768, file: !7769, line: 178, type: !447)
!7775 = !DILocation(line: 178, column: 72, scope: !7768)
!7776 = !DILocalVariable(name: "type", arg: 3, scope: !7768, file: !7769, line: 179, type: !130)
!7777 = !DILocation(line: 179, column: 15, scope: !7768)
!7778 = !DILocation(line: 179, column: 23, scope: !7768)
!7779 = distinct !DISubprogram(name: "__clear_bit", scope: !6023, file: !6023, line: 40, type: !7726, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7780 = !DILocalVariable(name: "nr", arg: 1, scope: !7781, file: !6031, line: 92, type: !266)
!7781 = distinct !DISubprogram(name: "arch___clear_bit", scope: !6031, file: !6031, line: 92, type: !7726, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7782 = !DILocation(line: 92, column: 23, scope: !7781, inlinedAt: !7783)
!7783 = distinct !DILocation(line: 43, column: 2, scope: !7779)
!7784 = !DILocalVariable(name: "addr", arg: 2, scope: !7781, file: !6031, line: 92, type: !7728)
!7785 = !DILocation(line: 92, column: 51, scope: !7781, inlinedAt: !7783)
!7786 = !DILocation(line: 39, column: 67, scope: !7736, inlinedAt: !7787)
!7787 = distinct !DILocation(line: 42, column: 2, scope: !7779)
!7788 = !DILocation(line: 39, column: 77, scope: !7736, inlinedAt: !7787)
!7789 = !DILocalVariable(name: "nr", arg: 1, scope: !7779, file: !6023, line: 40, type: !266)
!7790 = !DILocation(line: 40, column: 37, scope: !7779)
!7791 = !DILocalVariable(name: "addr", arg: 2, scope: !7779, file: !6023, line: 40, type: !7728)
!7792 = !DILocation(line: 40, column: 65, scope: !7779)
!7793 = !DILocation(line: 42, column: 19, scope: !7779)
!7794 = !DILocation(line: 42, column: 26, scope: !7779)
!7795 = !DILocation(line: 42, column: 24, scope: !7779)
!7796 = !DILocation(line: 41, column: 20, scope: !7736, inlinedAt: !7787)
!7797 = !DILocation(line: 41, column: 23, scope: !7736, inlinedAt: !7787)
!7798 = !DILocation(line: 41, column: 2, scope: !7736, inlinedAt: !7787)
!7799 = !DILocation(line: 42, column: 2, scope: !7736, inlinedAt: !7787)
!7800 = !DILocation(line: 43, column: 19, scope: !7779)
!7801 = !DILocation(line: 43, column: 23, scope: !7779)
!7802 = !DILocation(line: 94, column: 44, scope: !7781, inlinedAt: !7783)
!7803 = !DILocation(line: 94, column: 56, scope: !7781, inlinedAt: !7783)
!7804 = !DILocation(line: 94, column: 2, scope: !7781, inlinedAt: !7783)
!7805 = !{i32 -2146948139}
!7806 = !DILocation(line: 44, column: 1, scope: !7779)
!7807 = distinct !DISubprogram(name: "kasan_check_read", scope: !7760, file: !7760, line: 34, type: !7761, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7808 = !DILocalVariable(name: "p", arg: 1, scope: !7807, file: !7760, line: 34, type: !6049)
!7809 = !DILocation(line: 34, column: 58, scope: !7807)
!7810 = !DILocalVariable(name: "size", arg: 2, scope: !7807, file: !7760, line: 34, type: !7)
!7811 = !DILocation(line: 34, column: 74, scope: !7807)
!7812 = !DILocation(line: 36, column: 2, scope: !7807)
!7813 = distinct !DISubprogram(name: "kobject_name", scope: !350, file: !350, line: 88, type: !7814, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7814 = !DISubroutineType(types: !7815)
!7815 = !{!324, !7816}
!7816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7817, size: 64)
!7817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !349)
!7818 = !DILocalVariable(name: "kobj", arg: 1, scope: !7813, file: !350, line: 88, type: !7816)
!7819 = !DILocation(line: 88, column: 62, scope: !7813)
!7820 = !DILocation(line: 90, column: 9, scope: !7813)
!7821 = !DILocation(line: 90, column: 15, scope: !7813)
!7822 = !DILocation(line: 90, column: 2, scope: !7813)
!7823 = distinct !DISubprogram(name: "edma_shadow0_read_array", scope: !3, file: !3, line: 386, type: !7824, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7824 = !DISubroutineType(types: !7825)
!7825 = !{!7, !4579, !130, !130}
!7826 = !DILocalVariable(name: "ecc", arg: 1, scope: !7823, file: !3, line: 386, type: !4579)
!7827 = !DILocation(line: 386, column: 68, scope: !7823)
!7828 = !DILocalVariable(name: "offset", arg: 2, scope: !7823, file: !3, line: 387, type: !130)
!7829 = !DILocation(line: 387, column: 14, scope: !7823)
!7830 = !DILocalVariable(name: "i", arg: 3, scope: !7823, file: !3, line: 387, type: !130)
!7831 = !DILocation(line: 387, column: 26, scope: !7823)
!7832 = !DILocation(line: 389, column: 19, scope: !7823)
!7833 = !DILocation(line: 389, column: 39, scope: !7823)
!7834 = !DILocation(line: 389, column: 37, scope: !7823)
!7835 = !DILocation(line: 389, column: 49, scope: !7823)
!7836 = !DILocation(line: 389, column: 51, scope: !7823)
!7837 = !DILocation(line: 389, column: 46, scope: !7823)
!7838 = !DILocation(line: 389, column: 9, scope: !7823)
!7839 = !DILocation(line: 389, column: 2, scope: !7823)
!7840 = distinct !DISubprogram(name: "edma_shadow0_write_array", scope: !3, file: !3, line: 398, type: !6526, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7841 = !DILocalVariable(name: "ecc", arg: 1, scope: !7840, file: !3, line: 398, type: !4579)
!7842 = !DILocation(line: 398, column: 61, scope: !7840)
!7843 = !DILocalVariable(name: "offset", arg: 2, scope: !7840, file: !3, line: 398, type: !130)
!7844 = !DILocation(line: 398, column: 70, scope: !7840)
!7845 = !DILocalVariable(name: "i", arg: 3, scope: !7840, file: !3, line: 399, type: !130)
!7846 = !DILocation(line: 399, column: 14, scope: !7840)
!7847 = !DILocalVariable(name: "val", arg: 4, scope: !7840, file: !3, line: 399, type: !7)
!7848 = !DILocation(line: 399, column: 26, scope: !7840)
!7849 = !DILocation(line: 401, column: 13, scope: !7840)
!7850 = !DILocation(line: 401, column: 33, scope: !7840)
!7851 = !DILocation(line: 401, column: 31, scope: !7840)
!7852 = !DILocation(line: 401, column: 43, scope: !7840)
!7853 = !DILocation(line: 401, column: 45, scope: !7840)
!7854 = !DILocation(line: 401, column: 40, scope: !7840)
!7855 = !DILocation(line: 401, column: 52, scope: !7840)
!7856 = !DILocation(line: 401, column: 2, scope: !7840)
!7857 = !DILocation(line: 402, column: 1, scope: !7840)
!7858 = distinct !DISubprogram(name: "edma_completion_handler", scope: !3, file: !3, line: 1510, type: !7859, scopeLine: 1511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7859 = !DISubroutineType(types: !7860)
!7860 = !{null, !4572}
!7861 = !DILocalVariable(name: "lock", arg: 1, scope: !7862, file: !7863, line: 392, type: !1217)
!7862 = distinct !DISubprogram(name: "spin_unlock", scope: !7863, file: !7863, line: 392, type: !7864, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7863 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!7864 = !DISubroutineType(types: !7865)
!7865 = !{null, !1217}
!7866 = !DILocation(line: 392, column: 53, scope: !7862, inlinedAt: !7867)
!7867 = distinct !DILocation(line: 1544, column: 2, scope: !7858)
!7868 = !DILocation(line: 392, column: 53, scope: !7862, inlinedAt: !7869)
!7869 = distinct !DILocation(line: 1520, column: 4, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 1518, column: 22)
!7871 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 1518, column: 7)
!7872 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 1517, column: 13)
!7873 = distinct !DILexicalBlock(scope: !7858, file: !3, line: 1517, column: 6)
!7874 = !DILocalVariable(name: "lock", arg: 1, scope: !7875, file: !7863, line: 352, type: !1217)
!7875 = distinct !DISubprogram(name: "spin_lock", scope: !7863, file: !7863, line: 352, type: !7864, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7876 = !DILocation(line: 352, column: 51, scope: !7875, inlinedAt: !7877)
!7877 = distinct !DILocation(line: 1515, column: 2, scope: !7858)
!7878 = !DILocalVariable(name: "echan", arg: 1, scope: !7858, file: !3, line: 1510, type: !4572)
!7879 = !DILocation(line: 1510, column: 55, scope: !7858)
!7880 = !DILocalVariable(name: "dev", scope: !7858, file: !3, line: 1512, type: !345)
!7881 = !DILocation(line: 1512, column: 17, scope: !7858)
!7882 = !DILocation(line: 1512, column: 23, scope: !7858)
!7883 = !DILocation(line: 1512, column: 30, scope: !7858)
!7884 = !DILocation(line: 1512, column: 36, scope: !7858)
!7885 = !DILocation(line: 1512, column: 41, scope: !7858)
!7886 = !DILocation(line: 1512, column: 49, scope: !7858)
!7887 = !DILocalVariable(name: "edesc", scope: !7858, file: !3, line: 1513, type: !4561)
!7888 = !DILocation(line: 1513, column: 20, scope: !7858)
!7889 = !DILocation(line: 1515, column: 13, scope: !7858)
!7890 = !DILocation(line: 1515, column: 20, scope: !7858)
!7891 = !DILocation(line: 1515, column: 26, scope: !7858)
!7892 = !DILocation(line: 354, column: 2, scope: !7893, inlinedAt: !7877)
!7893 = distinct !DILexicalBlock(scope: !7875, file: !7863, line: 354, column: 2)
!7894 = !{i32 -2145176045}
!7895 = !DILocation(line: 354, column: 2, scope: !7896, inlinedAt: !7877)
!7896 = distinct !DILexicalBlock(scope: !7893, file: !7863, line: 354, column: 2)
!7897 = !DILocation(line: 1516, column: 10, scope: !7858)
!7898 = !DILocation(line: 1516, column: 17, scope: !7858)
!7899 = !DILocation(line: 1516, column: 8, scope: !7858)
!7900 = !DILocation(line: 1517, column: 6, scope: !7873)
!7901 = !DILocation(line: 1517, column: 6, scope: !7858)
!7902 = !DILocation(line: 1518, column: 7, scope: !7871)
!7903 = !DILocation(line: 1518, column: 14, scope: !7871)
!7904 = !DILocation(line: 1518, column: 7, scope: !7872)
!7905 = !DILocation(line: 1519, column: 27, scope: !7870)
!7906 = !DILocation(line: 1519, column: 34, scope: !7870)
!7907 = !DILocation(line: 1519, column: 4, scope: !7870)
!7908 = !DILocation(line: 1520, column: 17, scope: !7870)
!7909 = !DILocation(line: 1520, column: 24, scope: !7870)
!7910 = !DILocation(line: 1520, column: 30, scope: !7870)
!7911 = !DILocation(line: 394, column: 2, scope: !7912, inlinedAt: !7869)
!7912 = distinct !DILexicalBlock(scope: !7862, file: !7863, line: 394, column: 2)
!7913 = !{i32 -2145173684}
!7914 = !DILocation(line: 394, column: 2, scope: !7915, inlinedAt: !7869)
!7915 = distinct !DILexicalBlock(scope: !7912, file: !7863, line: 394, column: 2)
!7916 = !DILocation(line: 1521, column: 4, scope: !7870)
!7917 = !DILocation(line: 1522, column: 14, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 1522, column: 14)
!7919 = !DILocation(line: 1522, column: 21, scope: !7918)
!7920 = !DILocation(line: 1522, column: 34, scope: !7918)
!7921 = !DILocation(line: 1522, column: 41, scope: !7918)
!7922 = !DILocation(line: 1522, column: 31, scope: !7918)
!7923 = !DILocation(line: 1522, column: 14, scope: !7871)
!7924 = !DILocation(line: 1523, column: 4, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 1522, column: 50)
!7926 = !DILocation(line: 1523, column: 11, scope: !7925)
!7927 = !DILocation(line: 1523, column: 19, scope: !7925)
!7928 = !DILocation(line: 1524, column: 14, scope: !7925)
!7929 = !DILocation(line: 1524, column: 4, scope: !7925)
!7930 = !DILocation(line: 1525, column: 27, scope: !7925)
!7931 = !DILocation(line: 1525, column: 34, scope: !7925)
!7932 = !DILocation(line: 1525, column: 4, scope: !7925)
!7933 = !DILocation(line: 1526, column: 4, scope: !7925)
!7934 = !DILocation(line: 1526, column: 11, scope: !7925)
!7935 = !DILocation(line: 1526, column: 17, scope: !7925)
!7936 = !DILocation(line: 1530, column: 3, scope: !7925)
!7937 = !DILocation(line: 1534, column: 15, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 1530, column: 10)
!7939 = !DILocation(line: 1534, column: 4, scope: !7938)
!7940 = !DILocation(line: 1537, column: 22, scope: !7938)
!7941 = !DILocation(line: 1537, column: 29, scope: !7938)
!7942 = !DILocation(line: 1537, column: 4, scope: !7938)
!7943 = !DILocation(line: 1537, column: 11, scope: !7938)
!7944 = !DILocation(line: 1537, column: 19, scope: !7938)
!7945 = !DILocation(line: 1538, column: 26, scope: !7938)
!7946 = !DILocation(line: 1538, column: 33, scope: !7938)
!7947 = !DILocation(line: 1538, column: 4, scope: !7938)
!7948 = !DILocation(line: 1538, column: 11, scope: !7938)
!7949 = !DILocation(line: 1538, column: 24, scope: !7938)
!7950 = !DILocation(line: 1539, column: 28, scope: !7938)
!7951 = !DILocation(line: 1539, column: 35, scope: !7938)
!7952 = !DILocation(line: 1539, column: 4, scope: !7938)
!7953 = !DILocation(line: 1539, column: 11, scope: !7938)
!7954 = !DILocation(line: 1539, column: 26, scope: !7938)
!7955 = !DILocation(line: 1541, column: 16, scope: !7872)
!7956 = !DILocation(line: 1541, column: 3, scope: !7872)
!7957 = !DILocation(line: 1542, column: 2, scope: !7872)
!7958 = !DILocation(line: 1544, column: 15, scope: !7858)
!7959 = !DILocation(line: 1544, column: 22, scope: !7858)
!7960 = !DILocation(line: 1544, column: 28, scope: !7858)
!7961 = !DILocation(line: 394, column: 2, scope: !7912, inlinedAt: !7867)
!7962 = !DILocation(line: 394, column: 2, scope: !7915, inlinedAt: !7867)
!7963 = !DILocation(line: 1545, column: 1, scope: !7858)
!7964 = distinct !DISubprogram(name: "edma_shadow0_write", scope: !3, file: !3, line: 392, type: !7965, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7965 = !DISubroutineType(types: !7966)
!7966 = !{null, !4579, !130, !7}
!7967 = !DILocalVariable(name: "ecc", arg: 1, scope: !7964, file: !3, line: 392, type: !4579)
!7968 = !DILocation(line: 392, column: 55, scope: !7964)
!7969 = !DILocalVariable(name: "offset", arg: 2, scope: !7964, file: !3, line: 392, type: !130)
!7970 = !DILocation(line: 392, column: 64, scope: !7964)
!7971 = !DILocalVariable(name: "val", arg: 3, scope: !7964, file: !3, line: 393, type: !7)
!7972 = !DILocation(line: 393, column: 20, scope: !7964)
!7973 = !DILocation(line: 395, column: 13, scope: !7964)
!7974 = !DILocation(line: 395, column: 33, scope: !7964)
!7975 = !DILocation(line: 395, column: 31, scope: !7964)
!7976 = !DILocation(line: 395, column: 41, scope: !7964)
!7977 = !DILocation(line: 395, column: 2, scope: !7964)
!7978 = !DILocation(line: 396, column: 1, scope: !7964)
!7979 = distinct !DISubprogram(name: "edma_write", scope: !3, file: !3, line: 314, type: !6479, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7980 = !DILocalVariable(name: "ecc", arg: 1, scope: !7979, file: !3, line: 314, type: !4579)
!7981 = !DILocation(line: 314, column: 47, scope: !7979)
!7982 = !DILocalVariable(name: "offset", arg: 2, scope: !7979, file: !3, line: 314, type: !130)
!7983 = !DILocation(line: 314, column: 56, scope: !7979)
!7984 = !DILocalVariable(name: "val", arg: 3, scope: !7979, file: !3, line: 314, type: !130)
!7985 = !DILocation(line: 314, column: 68, scope: !7979)
!7986 = !DILocation(line: 316, column: 15, scope: !7979)
!7987 = !DILocation(line: 316, column: 20, scope: !7979)
!7988 = !DILocation(line: 316, column: 25, scope: !7979)
!7989 = !DILocation(line: 316, column: 32, scope: !7979)
!7990 = !DILocation(line: 316, column: 30, scope: !7979)
!7991 = !DILocation(line: 316, column: 2, scope: !7979)
!7992 = !DILocation(line: 317, column: 1, scope: !7979)
!7993 = distinct !DISubprogram(name: "__writel", scope: !7280, file: !7280, line: 71, type: !7288, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7994 = !DILocalVariable(name: "val", arg: 1, scope: !7993, file: !7280, line: 71, type: !7)
!7995 = !DILocation(line: 71, column: 1, scope: !7993)
!7996 = !DILocalVariable(name: "addr", arg: 2, scope: !7993, file: !7280, line: 71, type: !7290)
!7997 = !{i32 -2142279435}
!7998 = distinct !DISubprogram(name: "vchan_cyclic_callback", scope: !274, file: !274, line: 131, type: !4542, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!7999 = !DILocalVariable(name: "vd", arg: 1, scope: !7998, file: !274, line: 131, type: !4544)
!8000 = !DILocation(line: 131, column: 64, scope: !7998)
!8001 = !DILocalVariable(name: "vc", scope: !7998, file: !274, line: 133, type: !272)
!8002 = !DILocation(line: 133, column: 24, scope: !7998)
!8003 = !DILocation(line: 133, column: 42, scope: !7998)
!8004 = !DILocation(line: 133, column: 46, scope: !7998)
!8005 = !DILocation(line: 133, column: 49, scope: !7998)
!8006 = !DILocation(line: 133, column: 29, scope: !7998)
!8007 = !DILocation(line: 135, column: 15, scope: !7998)
!8008 = !DILocation(line: 135, column: 2, scope: !7998)
!8009 = !DILocation(line: 135, column: 6, scope: !7998)
!8010 = !DILocation(line: 135, column: 13, scope: !7998)
!8011 = !DILocation(line: 136, column: 20, scope: !7998)
!8012 = !DILocation(line: 136, column: 24, scope: !7998)
!8013 = !DILocation(line: 136, column: 2, scope: !7998)
!8014 = !DILocation(line: 137, column: 1, scope: !7998)
!8015 = distinct !DISubprogram(name: "edma_stop", scope: !3, file: !3, line: 625, type: !7859, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8016 = !DILocalVariable(name: "echan", arg: 1, scope: !8015, file: !3, line: 625, type: !4572)
!8017 = !DILocation(line: 625, column: 41, scope: !8015)
!8018 = !DILocalVariable(name: "ecc", scope: !8015, file: !3, line: 627, type: !4579)
!8019 = !DILocation(line: 627, column: 18, scope: !8015)
!8020 = !DILocation(line: 627, column: 24, scope: !8015)
!8021 = !DILocation(line: 627, column: 31, scope: !8015)
!8022 = !DILocalVariable(name: "channel", scope: !8015, file: !3, line: 628, type: !130)
!8023 = !DILocation(line: 628, column: 6, scope: !8015)
!8024 = !DILocation(line: 628, column: 16, scope: !8015)
!8025 = !DILocalVariable(name: "idx", scope: !8015, file: !3, line: 629, type: !130)
!8026 = !DILocation(line: 629, column: 6, scope: !8015)
!8027 = !DILocation(line: 629, column: 12, scope: !8015)
!8028 = !DILocalVariable(name: "ch_bit", scope: !8015, file: !3, line: 630, type: !130)
!8029 = !DILocation(line: 630, column: 6, scope: !8015)
!8030 = !DILocation(line: 630, column: 15, scope: !8015)
!8031 = !DILocation(line: 632, column: 27, scope: !8015)
!8032 = !DILocation(line: 632, column: 41, scope: !8015)
!8033 = !DILocation(line: 632, column: 46, scope: !8015)
!8034 = !DILocation(line: 632, column: 2, scope: !8015)
!8035 = !DILocation(line: 633, column: 27, scope: !8015)
!8036 = !DILocation(line: 633, column: 40, scope: !8015)
!8037 = !DILocation(line: 633, column: 45, scope: !8015)
!8038 = !DILocation(line: 633, column: 2, scope: !8015)
!8039 = !DILocation(line: 634, column: 27, scope: !8015)
!8040 = !DILocation(line: 634, column: 41, scope: !8015)
!8041 = !DILocation(line: 634, column: 46, scope: !8015)
!8042 = !DILocation(line: 634, column: 2, scope: !8015)
!8043 = !DILocation(line: 635, column: 19, scope: !8015)
!8044 = !DILocation(line: 635, column: 35, scope: !8015)
!8045 = !DILocation(line: 635, column: 40, scope: !8015)
!8046 = !DILocation(line: 635, column: 2, scope: !8015)
!8047 = !DILocation(line: 638, column: 27, scope: !8015)
!8048 = !DILocation(line: 638, column: 40, scope: !8015)
!8049 = !DILocation(line: 638, column: 45, scope: !8015)
!8050 = !DILocation(line: 638, column: 2, scope: !8015)
!8051 = !DILocation(line: 646, column: 1, scope: !8015)
!8052 = distinct !DISubprogram(name: "vchan_cookie_complete", scope: !274, file: !274, line: 94, type: !4542, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8053 = !DILocalVariable(name: "vd", arg: 1, scope: !8052, file: !274, line: 94, type: !4544)
!8054 = !DILocation(line: 94, column: 64, scope: !8052)
!8055 = !DILocalVariable(name: "vc", scope: !8052, file: !274, line: 96, type: !272)
!8056 = !DILocation(line: 96, column: 24, scope: !8052)
!8057 = !DILocation(line: 96, column: 42, scope: !8052)
!8058 = !DILocation(line: 96, column: 46, scope: !8052)
!8059 = !DILocation(line: 96, column: 49, scope: !8052)
!8060 = !DILocation(line: 96, column: 29, scope: !8052)
!8061 = !DILocalVariable(name: "cookie", scope: !8052, file: !274, line: 97, type: !4300)
!8062 = !DILocation(line: 97, column: 15, scope: !8052)
!8063 = !DILocation(line: 99, column: 11, scope: !8052)
!8064 = !DILocation(line: 99, column: 15, scope: !8052)
!8065 = !DILocation(line: 99, column: 18, scope: !8052)
!8066 = !DILocation(line: 99, column: 9, scope: !8052)
!8067 = !DILocation(line: 100, column: 23, scope: !8052)
!8068 = !DILocation(line: 100, column: 27, scope: !8052)
!8069 = !DILocation(line: 100, column: 2, scope: !8052)
!8070 = !DILocation(line: 103, column: 17, scope: !8052)
!8071 = !DILocation(line: 103, column: 21, scope: !8052)
!8072 = !DILocation(line: 103, column: 28, scope: !8052)
!8073 = !DILocation(line: 103, column: 32, scope: !8052)
!8074 = !DILocation(line: 103, column: 2, scope: !8052)
!8075 = !DILocation(line: 105, column: 20, scope: !8052)
!8076 = !DILocation(line: 105, column: 24, scope: !8052)
!8077 = !DILocation(line: 105, column: 2, scope: !8052)
!8078 = !DILocation(line: 106, column: 1, scope: !8052)
!8079 = distinct !DISubprogram(name: "edma_pause", scope: !3, file: !3, line: 652, type: !7859, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8080 = !DILocalVariable(name: "echan", arg: 1, scope: !8079, file: !3, line: 652, type: !4572)
!8081 = !DILocation(line: 652, column: 42, scope: !8079)
!8082 = !DILocalVariable(name: "channel", scope: !8079, file: !3, line: 654, type: !130)
!8083 = !DILocation(line: 654, column: 6, scope: !8079)
!8084 = !DILocation(line: 654, column: 16, scope: !8079)
!8085 = !DILocation(line: 656, column: 27, scope: !8079)
!8086 = !DILocation(line: 656, column: 34, scope: !8079)
!8087 = !DILocation(line: 657, column: 6, scope: !8079)
!8088 = !DILocation(line: 658, column: 6, scope: !8079)
!8089 = !DILocation(line: 656, column: 2, scope: !8079)
!8090 = !DILocation(line: 659, column: 1, scope: !8079)
!8091 = distinct !DISubprogram(name: "edma_execute", scope: !3, file: !3, line: 775, type: !7859, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8092 = !DILocalVariable(name: "echan", arg: 1, scope: !8091, file: !3, line: 775, type: !4572)
!8093 = !DILocation(line: 775, column: 44, scope: !8091)
!8094 = !DILocalVariable(name: "ecc", scope: !8091, file: !3, line: 777, type: !4579)
!8095 = !DILocation(line: 777, column: 18, scope: !8091)
!8096 = !DILocation(line: 777, column: 24, scope: !8091)
!8097 = !DILocation(line: 777, column: 31, scope: !8091)
!8098 = !DILocalVariable(name: "vdesc", scope: !8091, file: !3, line: 778, type: !4544)
!8099 = !DILocation(line: 778, column: 24, scope: !8091)
!8100 = !DILocalVariable(name: "edesc", scope: !8091, file: !3, line: 779, type: !4561)
!8101 = !DILocation(line: 779, column: 20, scope: !8091)
!8102 = !DILocalVariable(name: "dev", scope: !8091, file: !3, line: 780, type: !345)
!8103 = !DILocation(line: 780, column: 17, scope: !8091)
!8104 = !DILocation(line: 780, column: 23, scope: !8091)
!8105 = !DILocation(line: 780, column: 30, scope: !8091)
!8106 = !DILocation(line: 780, column: 36, scope: !8091)
!8107 = !DILocation(line: 780, column: 41, scope: !8091)
!8108 = !DILocation(line: 780, column: 49, scope: !8091)
!8109 = !DILocalVariable(name: "i", scope: !8091, file: !3, line: 781, type: !130)
!8110 = !DILocation(line: 781, column: 6, scope: !8091)
!8111 = !DILocalVariable(name: "j", scope: !8091, file: !3, line: 781, type: !130)
!8112 = !DILocation(line: 781, column: 9, scope: !8091)
!8113 = !DILocalVariable(name: "left", scope: !8091, file: !3, line: 781, type: !130)
!8114 = !DILocation(line: 781, column: 12, scope: !8091)
!8115 = !DILocalVariable(name: "nslots", scope: !8091, file: !3, line: 781, type: !130)
!8116 = !DILocation(line: 781, column: 18, scope: !8091)
!8117 = !DILocation(line: 783, column: 7, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 783, column: 6)
!8119 = !DILocation(line: 783, column: 14, scope: !8118)
!8120 = !DILocation(line: 783, column: 6, scope: !8091)
!8121 = !DILocation(line: 785, column: 28, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 783, column: 21)
!8123 = !DILocation(line: 785, column: 35, scope: !8122)
!8124 = !DILocation(line: 785, column: 11, scope: !8122)
!8125 = !DILocation(line: 785, column: 9, scope: !8122)
!8126 = !DILocation(line: 786, column: 8, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 786, column: 7)
!8128 = !DILocation(line: 786, column: 7, scope: !8122)
!8129 = !DILocation(line: 787, column: 4, scope: !8127)
!8130 = !DILocation(line: 788, column: 13, scope: !8122)
!8131 = !DILocation(line: 788, column: 20, scope: !8122)
!8132 = !DILocation(line: 788, column: 3, scope: !8122)
!8133 = !DILocation(line: 789, column: 32, scope: !8122)
!8134 = !DILocation(line: 789, column: 39, scope: !8122)
!8135 = !DILocation(line: 789, column: 18, scope: !8122)
!8136 = !DILocation(line: 789, column: 3, scope: !8122)
!8137 = !DILocation(line: 789, column: 10, scope: !8122)
!8138 = !DILocation(line: 789, column: 16, scope: !8122)
!8139 = !DILocation(line: 790, column: 2, scope: !8122)
!8140 = !DILocation(line: 792, column: 10, scope: !8091)
!8141 = !DILocation(line: 792, column: 17, scope: !8091)
!8142 = !DILocation(line: 792, column: 8, scope: !8091)
!8143 = !DILocation(line: 795, column: 9, scope: !8091)
!8144 = !DILocation(line: 795, column: 16, scope: !8091)
!8145 = !DILocation(line: 795, column: 26, scope: !8091)
!8146 = !DILocation(line: 795, column: 33, scope: !8091)
!8147 = !DILocation(line: 795, column: 24, scope: !8091)
!8148 = !DILocation(line: 795, column: 7, scope: !8091)
!8149 = !DILocalVariable(name: "__UNIQUE_ID___x249", scope: !8150, file: !3, line: 796, type: !130)
!8150 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 796, column: 11)
!8151 = !DILocation(line: 796, column: 11, scope: !8150)
!8152 = !DILocalVariable(name: "__UNIQUE_ID___y250", scope: !8150, file: !3, line: 796, type: !130)
!8153 = !DILocation(line: 796, column: 9, scope: !8091)
!8154 = !DILocation(line: 797, column: 2, scope: !8091)
!8155 = !DILocation(line: 797, column: 9, scope: !8091)
!8156 = !DILocation(line: 797, column: 16, scope: !8091)
!8157 = !DILocation(line: 800, column: 9, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 800, column: 2)
!8159 = !DILocation(line: 800, column: 7, scope: !8158)
!8160 = !DILocation(line: 800, column: 14, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 800, column: 2)
!8162 = !DILocation(line: 800, column: 18, scope: !8161)
!8163 = !DILocation(line: 800, column: 16, scope: !8161)
!8164 = !DILocation(line: 800, column: 2, scope: !8158)
!8165 = !DILocation(line: 801, column: 7, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 800, column: 31)
!8167 = !DILocation(line: 801, column: 11, scope: !8166)
!8168 = !DILocation(line: 801, column: 18, scope: !8166)
!8169 = !DILocation(line: 801, column: 9, scope: !8166)
!8170 = !DILocation(line: 801, column: 5, scope: !8166)
!8171 = !DILocation(line: 802, column: 19, scope: !8166)
!8172 = !DILocation(line: 802, column: 24, scope: !8166)
!8173 = !DILocation(line: 802, column: 31, scope: !8166)
!8174 = !DILocation(line: 802, column: 36, scope: !8166)
!8175 = !DILocation(line: 802, column: 41, scope: !8166)
!8176 = !DILocation(line: 802, column: 48, scope: !8166)
!8177 = !DILocation(line: 802, column: 53, scope: !8166)
!8178 = !DILocation(line: 802, column: 56, scope: !8166)
!8179 = !DILocation(line: 802, column: 3, scope: !8166)
!8180 = !DILocation(line: 803, column: 20, scope: !8166)
!8181 = !DILocation(line: 803, column: 27, scope: !8166)
!8182 = !DILocation(line: 803, column: 32, scope: !8166)
!8183 = !DILocation(line: 803, column: 35, scope: !8166)
!8184 = !DILocation(line: 803, column: 3, scope: !8166)
!8185 = !DILocation(line: 803, column: 10, scope: !8166)
!8186 = !DILocation(line: 803, column: 17, scope: !8166)
!8187 = !DILocation(line: 826, column: 7, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 826, column: 7)
!8189 = !DILocation(line: 826, column: 13, scope: !8188)
!8190 = !DILocation(line: 826, column: 20, scope: !8188)
!8191 = !DILocation(line: 826, column: 9, scope: !8188)
!8192 = !DILocation(line: 826, column: 7, scope: !8166)
!8193 = !DILocation(line: 827, column: 14, scope: !8188)
!8194 = !DILocation(line: 827, column: 19, scope: !8188)
!8195 = !DILocation(line: 827, column: 26, scope: !8188)
!8196 = !DILocation(line: 827, column: 31, scope: !8188)
!8197 = !DILocation(line: 827, column: 35, scope: !8188)
!8198 = !DILocation(line: 827, column: 42, scope: !8188)
!8199 = !DILocation(line: 827, column: 47, scope: !8188)
!8200 = !DILocation(line: 827, column: 49, scope: !8188)
!8201 = !DILocation(line: 827, column: 4, scope: !8188)
!8202 = !DILocation(line: 828, column: 2, scope: !8166)
!8203 = !DILocation(line: 800, column: 27, scope: !8161)
!8204 = !DILocation(line: 800, column: 2, scope: !8161)
!8205 = distinct !{!8205, !8164, !8206}
!8206 = !DILocation(line: 828, column: 2, scope: !8158)
!8207 = !DILocation(line: 830, column: 22, scope: !8091)
!8208 = !DILocation(line: 830, column: 2, scope: !8091)
!8209 = !DILocation(line: 830, column: 9, scope: !8091)
!8210 = !DILocation(line: 830, column: 19, scope: !8091)
!8211 = !DILocation(line: 837, column: 6, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 837, column: 6)
!8213 = !DILocation(line: 837, column: 13, scope: !8212)
!8214 = !DILocation(line: 837, column: 26, scope: !8212)
!8215 = !DILocation(line: 837, column: 33, scope: !8212)
!8216 = !DILocation(line: 837, column: 23, scope: !8212)
!8217 = !DILocation(line: 837, column: 6, scope: !8091)
!8218 = !DILocation(line: 838, column: 7, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 838, column: 7)
!8220 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 837, column: 42)
!8221 = !DILocation(line: 838, column: 14, scope: !8219)
!8222 = !DILocation(line: 838, column: 7, scope: !8220)
!8223 = !DILocation(line: 839, column: 14, scope: !8219)
!8224 = !DILocation(line: 839, column: 19, scope: !8219)
!8225 = !DILocation(line: 839, column: 26, scope: !8219)
!8226 = !DILocation(line: 839, column: 31, scope: !8219)
!8227 = !DILocation(line: 839, column: 38, scope: !8219)
!8228 = !DILocation(line: 839, column: 44, scope: !8219)
!8229 = !DILocation(line: 839, column: 51, scope: !8219)
!8230 = !DILocation(line: 839, column: 4, scope: !8219)
!8231 = !DILocation(line: 841, column: 14, scope: !8219)
!8232 = !DILocation(line: 841, column: 19, scope: !8219)
!8233 = !DILocation(line: 841, column: 26, scope: !8219)
!8234 = !DILocation(line: 841, column: 31, scope: !8219)
!8235 = !DILocation(line: 841, column: 38, scope: !8219)
!8236 = !DILocation(line: 842, column: 7, scope: !8219)
!8237 = !DILocation(line: 842, column: 14, scope: !8219)
!8238 = !DILocation(line: 842, column: 19, scope: !8219)
!8239 = !DILocation(line: 841, column: 4, scope: !8219)
!8240 = !DILocation(line: 843, column: 2, scope: !8220)
!8241 = !DILocation(line: 845, column: 6, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 845, column: 6)
!8243 = !DILocation(line: 845, column: 13, scope: !8242)
!8244 = !DILocation(line: 845, column: 6, scope: !8091)
!8245 = !DILocation(line: 852, column: 22, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 845, column: 21)
!8247 = !DILocation(line: 852, column: 3, scope: !8246)
!8248 = !DILocation(line: 853, column: 13, scope: !8246)
!8249 = !DILocation(line: 853, column: 3, scope: !8246)
!8250 = !DILocation(line: 854, column: 14, scope: !8246)
!8251 = !DILocation(line: 854, column: 3, scope: !8246)
!8252 = !DILocation(line: 855, column: 24, scope: !8246)
!8253 = !DILocation(line: 855, column: 3, scope: !8246)
!8254 = !DILocation(line: 856, column: 3, scope: !8246)
!8255 = !DILocation(line: 856, column: 10, scope: !8246)
!8256 = !DILocation(line: 856, column: 17, scope: !8246)
!8257 = !DILocation(line: 857, column: 2, scope: !8246)
!8258 = !DILocation(line: 857, column: 13, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 857, column: 13)
!8260 = !DILocation(line: 857, column: 20, scope: !8259)
!8261 = !DILocation(line: 857, column: 30, scope: !8259)
!8262 = !DILocation(line: 857, column: 13, scope: !8242)
!8263 = !DILocation(line: 860, column: 14, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 857, column: 44)
!8265 = !DILocation(line: 860, column: 3, scope: !8264)
!8266 = !DILocation(line: 861, column: 2, scope: !8264)
!8267 = !DILocation(line: 864, column: 15, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 861, column: 9)
!8269 = !DILocation(line: 864, column: 3, scope: !8268)
!8270 = !DILocation(line: 866, column: 1, scope: !8091)
!8271 = distinct !DISubprogram(name: "to_virt_chan", scope: !274, file: !274, line: 39, type: !8272, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8272 = !DISubroutineType(types: !8273)
!8273 = !{!272, !316}
!8274 = !DILocalVariable(name: "chan", arg: 1, scope: !8271, file: !274, line: 39, type: !316)
!8275 = !DILocation(line: 39, column: 67, scope: !8271)
!8276 = !DILocalVariable(name: "__mptr", scope: !8277, file: !274, line: 41, type: !258)
!8277 = distinct !DILexicalBlock(scope: !8271, file: !274, line: 41, column: 9)
!8278 = !DILocation(line: 41, column: 9, scope: !8277)
!8279 = !DILocation(line: 41, column: 9, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8277, file: !274, line: 41, column: 9)
!8281 = !DILocation(line: 41, column: 2, scope: !8271)
!8282 = distinct !DISubprogram(name: "tasklet_schedule", scope: !108, file: !108, line: 681, type: !4537, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8283 = !DILocalVariable(name: "t", arg: 1, scope: !8282, file: !108, line: 681, type: !4524)
!8284 = !DILocation(line: 681, column: 60, scope: !8282)
!8285 = !DILocation(line: 683, column: 46, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8282, file: !108, line: 683, column: 6)
!8287 = !DILocation(line: 683, column: 49, scope: !8286)
!8288 = !DILocation(line: 683, column: 7, scope: !8286)
!8289 = !DILocation(line: 683, column: 6, scope: !8282)
!8290 = !DILocation(line: 684, column: 22, scope: !8286)
!8291 = !DILocation(line: 684, column: 3, scope: !8286)
!8292 = !DILocation(line: 685, column: 1, scope: !8282)
!8293 = distinct !DISubprogram(name: "test_and_set_bit", scope: !8294, file: !8294, line: 68, type: !8295, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8294 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!8295 = !DISubroutineType(types: !8296)
!8296 = !{!314, !266, !7728}
!8297 = !DILocalVariable(name: "nr", arg: 1, scope: !8298, file: !6031, line: 136, type: !266)
!8298 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !6031, file: !6031, line: 136, type: !8295, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8299 = !DILocation(line: 136, column: 28, scope: !8298, inlinedAt: !8300)
!8300 = distinct !DILocation(line: 71, column: 9, scope: !8293)
!8301 = !DILocalVariable(name: "addr", arg: 2, scope: !8298, file: !6031, line: 136, type: !7728)
!8302 = !DILocation(line: 136, column: 56, scope: !8298, inlinedAt: !8300)
!8303 = !DILocalVariable(name: "c", scope: !8304, file: !6031, line: 138, type: !314)
!8304 = distinct !DILexicalBlock(scope: !8298, file: !6031, line: 138, column: 9)
!8305 = !DILocation(line: 138, column: 9, scope: !8304, inlinedAt: !8300)
!8306 = !DILocalVariable(name: "v", arg: 1, scope: !8307, file: !6046, line: 99, type: !6049)
!8307 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !6046, file: !6046, line: 99, type: !6047, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8308 = !DILocation(line: 99, column: 79, scope: !8307, inlinedAt: !8309)
!8309 = distinct !DILocation(line: 70, column: 2, scope: !8293)
!8310 = !DILocalVariable(name: "size", arg: 2, scope: !8307, file: !6046, line: 99, type: !447)
!8311 = !DILocation(line: 99, column: 89, scope: !8307, inlinedAt: !8309)
!8312 = !DILocalVariable(name: "nr", arg: 1, scope: !8293, file: !8294, line: 68, type: !266)
!8313 = !DILocation(line: 68, column: 42, scope: !8293)
!8314 = !DILocalVariable(name: "addr", arg: 2, scope: !8293, file: !8294, line: 68, type: !7728)
!8315 = !DILocation(line: 68, column: 70, scope: !8293)
!8316 = !DILocation(line: 70, column: 31, scope: !8293)
!8317 = !DILocation(line: 70, column: 38, scope: !8293)
!8318 = !DILocation(line: 70, column: 36, scope: !8293)
!8319 = !DILocation(line: 101, column: 20, scope: !8307, inlinedAt: !8309)
!8320 = !DILocation(line: 101, column: 23, scope: !8307, inlinedAt: !8309)
!8321 = !DILocation(line: 101, column: 2, scope: !8307, inlinedAt: !8309)
!8322 = !DILocation(line: 102, column: 2, scope: !8307, inlinedAt: !8309)
!8323 = !DILocation(line: 71, column: 31, scope: !8293)
!8324 = !DILocation(line: 71, column: 35, scope: !8293)
!8325 = !{i32 -2146945488, i32 -2146945392}
!8326 = !DILocation(line: 71, column: 2, scope: !8293)
!8327 = distinct !DISubprogram(name: "dma_cookie_complete", scope: !8328, file: !8328, line: 52, type: !8329, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8328 = !DIFile(filename: "drivers/dma/ti/../dmaengine.h", directory: "/home/lizy2001/genbc/linux")
!8329 = !DISubroutineType(types: !8330)
!8330 = !{null, !4296}
!8331 = !DILocalVariable(name: "tx", arg: 1, scope: !8327, file: !8328, line: 52, type: !4296)
!8332 = !DILocation(line: 52, column: 72, scope: !8327)
!8333 = !DILocation(line: 54, column: 2, scope: !8327)
!8334 = !DILocation(line: 54, column: 2, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !8328, line: 54, column: 2)
!8336 = distinct !DILexicalBlock(scope: !8327, file: !8328, line: 54, column: 2)
!8337 = !DILocation(line: 54, column: 2, scope: !8336)
!8338 = !DILocation(line: 54, column: 2, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8335, file: !8328, line: 54, column: 2)
!8340 = !DILocation(line: 54, column: 2, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8339, file: !8328, line: 54, column: 2)
!8342 = !DILocation(line: 54, column: 2, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8339, file: !8328, line: 54, column: 2)
!8344 = !{i32 -2141607546, i32 -2141607517, i32 -2141607471, i32 -2141607413, i32 -2141607359, i32 -2141607305, i32 -2141607250, i32 -2141607219}
!8345 = !DILocation(line: 54, column: 2, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8347, file: !8328, line: 54, column: 2)
!8347 = distinct !DILexicalBlock(scope: !8339, file: !8328, line: 54, column: 2)
!8348 = !{i32 -2141606768, i32 -2141606761, i32 -2141606707, i32 -2141606676, i32 -2141606646}
!8349 = !DILocation(line: 54, column: 2, scope: !8347)
!8350 = !DILocation(line: 55, column: 31, scope: !8327)
!8351 = !DILocation(line: 55, column: 35, scope: !8327)
!8352 = !DILocation(line: 55, column: 2, scope: !8327)
!8353 = !DILocation(line: 55, column: 6, scope: !8327)
!8354 = !DILocation(line: 55, column: 12, scope: !8327)
!8355 = !DILocation(line: 55, column: 29, scope: !8327)
!8356 = !DILocation(line: 56, column: 2, scope: !8327)
!8357 = !DILocation(line: 56, column: 6, scope: !8327)
!8358 = !DILocation(line: 56, column: 13, scope: !8327)
!8359 = !DILocation(line: 57, column: 1, scope: !8327)
!8360 = distinct !DISubprogram(name: "list_add_tail", scope: !8361, file: !8361, line: 98, type: !8362, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8361 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!8362 = !DISubroutineType(types: !8363)
!8363 = !{null, !303, !303}
!8364 = !DILocalVariable(name: "new", arg: 1, scope: !8360, file: !8361, line: 98, type: !303)
!8365 = !DILocation(line: 98, column: 52, scope: !8360)
!8366 = !DILocalVariable(name: "head", arg: 2, scope: !8360, file: !8361, line: 98, type: !303)
!8367 = !DILocation(line: 98, column: 75, scope: !8360)
!8368 = !DILocation(line: 100, column: 13, scope: !8360)
!8369 = !DILocation(line: 100, column: 18, scope: !8360)
!8370 = !DILocation(line: 100, column: 24, scope: !8360)
!8371 = !DILocation(line: 100, column: 30, scope: !8360)
!8372 = !DILocation(line: 100, column: 2, scope: !8360)
!8373 = !DILocation(line: 101, column: 1, scope: !8360)
!8374 = distinct !DISubprogram(name: "__list_add", scope: !8361, file: !8361, line: 63, type: !8375, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8375 = !DISubroutineType(types: !8376)
!8376 = !{null, !303, !303, !303}
!8377 = !DILocalVariable(name: "new", arg: 1, scope: !8374, file: !8361, line: 63, type: !303)
!8378 = !DILocation(line: 63, column: 49, scope: !8374)
!8379 = !DILocalVariable(name: "prev", arg: 2, scope: !8374, file: !8361, line: 64, type: !303)
!8380 = !DILocation(line: 64, column: 28, scope: !8374)
!8381 = !DILocalVariable(name: "next", arg: 3, scope: !8374, file: !8361, line: 65, type: !303)
!8382 = !DILocation(line: 65, column: 28, scope: !8374)
!8383 = !DILocation(line: 67, column: 24, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8374, file: !8361, line: 67, column: 6)
!8385 = !DILocation(line: 67, column: 29, scope: !8384)
!8386 = !DILocation(line: 67, column: 35, scope: !8384)
!8387 = !DILocation(line: 67, column: 7, scope: !8384)
!8388 = !DILocation(line: 67, column: 6, scope: !8374)
!8389 = !DILocation(line: 68, column: 3, scope: !8384)
!8390 = !DILocation(line: 70, column: 15, scope: !8374)
!8391 = !DILocation(line: 70, column: 2, scope: !8374)
!8392 = !DILocation(line: 70, column: 8, scope: !8374)
!8393 = !DILocation(line: 70, column: 13, scope: !8374)
!8394 = !DILocation(line: 71, column: 14, scope: !8374)
!8395 = !DILocation(line: 71, column: 2, scope: !8374)
!8396 = !DILocation(line: 71, column: 7, scope: !8374)
!8397 = !DILocation(line: 71, column: 12, scope: !8374)
!8398 = !DILocation(line: 72, column: 14, scope: !8374)
!8399 = !DILocation(line: 72, column: 2, scope: !8374)
!8400 = !DILocation(line: 72, column: 7, scope: !8374)
!8401 = !DILocation(line: 72, column: 12, scope: !8374)
!8402 = !DILocation(line: 73, column: 2, scope: !8374)
!8403 = !DILocation(line: 73, column: 2, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8374, file: !8361, line: 73, column: 2)
!8405 = !DILocation(line: 73, column: 2, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8404, file: !8361, line: 73, column: 2)
!8407 = !DILocation(line: 73, column: 2, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8404, file: !8361, line: 73, column: 2)
!8409 = !DILocation(line: 74, column: 1, scope: !8374)
!8410 = distinct !DISubprogram(name: "__list_add_valid", scope: !8361, file: !8361, line: 45, type: !8411, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8411 = !DISubroutineType(types: !8412)
!8412 = !{!314, !303, !303, !303}
!8413 = !DILocalVariable(name: "new", arg: 1, scope: !8410, file: !8361, line: 45, type: !303)
!8414 = !DILocation(line: 45, column: 55, scope: !8410)
!8415 = !DILocalVariable(name: "prev", arg: 2, scope: !8410, file: !8361, line: 46, type: !303)
!8416 = !DILocation(line: 46, column: 23, scope: !8410)
!8417 = !DILocalVariable(name: "next", arg: 3, scope: !8410, file: !8361, line: 47, type: !303)
!8418 = !DILocation(line: 47, column: 23, scope: !8410)
!8419 = !DILocation(line: 49, column: 2, scope: !8410)
!8420 = distinct !DISubprogram(name: "vchan_next_desc", scope: !274, file: !274, line: 161, type: !8421, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8421 = !DISubroutineType(types: !8422)
!8422 = !{!4544, !272}
!8423 = !DILocalVariable(name: "vc", arg: 1, scope: !8420, file: !274, line: 161, type: !272)
!8424 = !DILocation(line: 161, column: 75, scope: !8420)
!8425 = !DILocalVariable(name: "head__", scope: !8426, file: !274, line: 163, type: !303)
!8426 = distinct !DILexicalBlock(scope: !8420, file: !274, line: 163, column: 9)
!8427 = !DILocation(line: 163, column: 9, scope: !8426)
!8428 = !DILocalVariable(name: "pos__", scope: !8426, file: !274, line: 163, type: !303)
!8429 = !DILocation(line: 163, column: 9, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8426, file: !274, line: 163, column: 9)
!8431 = !DILocation(line: 163, column: 9, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8430, file: !274, line: 163, column: 9)
!8433 = !DILocalVariable(name: "__mptr", scope: !8434, file: !274, line: 163, type: !258)
!8434 = distinct !DILexicalBlock(scope: !8426, file: !274, line: 163, column: 9)
!8435 = !DILocation(line: 163, column: 9, scope: !8434)
!8436 = !DILocation(line: 163, column: 9, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8434, file: !274, line: 163, column: 9)
!8438 = !DILocation(line: 163, column: 2, scope: !8420)
!8439 = distinct !DISubprogram(name: "list_del", scope: !8361, file: !8361, line: 144, type: !8440, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8440 = !DISubroutineType(types: !8441)
!8441 = !{null, !303}
!8442 = !DILocalVariable(name: "entry", arg: 1, scope: !8439, file: !8361, line: 144, type: !303)
!8443 = !DILocation(line: 144, column: 47, scope: !8439)
!8444 = !DILocation(line: 146, column: 19, scope: !8439)
!8445 = !DILocation(line: 146, column: 2, scope: !8439)
!8446 = !DILocation(line: 147, column: 2, scope: !8439)
!8447 = !DILocation(line: 147, column: 9, scope: !8439)
!8448 = !DILocation(line: 147, column: 14, scope: !8439)
!8449 = !DILocation(line: 148, column: 2, scope: !8439)
!8450 = !DILocation(line: 148, column: 9, scope: !8439)
!8451 = !DILocation(line: 148, column: 14, scope: !8439)
!8452 = !DILocation(line: 149, column: 1, scope: !8439)
!8453 = distinct !DISubprogram(name: "to_edma_desc", scope: !3, file: !3, line: 764, type: !8454, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8454 = !DISubroutineType(types: !8455)
!8455 = !{!4561, !4296}
!8456 = !DILocalVariable(name: "tx", arg: 1, scope: !8453, file: !3, line: 764, type: !4296)
!8457 = !DILocation(line: 764, column: 78, scope: !8453)
!8458 = !DILocalVariable(name: "__mptr", scope: !8459, file: !3, line: 766, type: !258)
!8459 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 766, column: 9)
!8460 = !DILocation(line: 766, column: 9, scope: !8459)
!8461 = !DILocation(line: 766, column: 9, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 766, column: 9)
!8463 = !DILocation(line: 766, column: 2, scope: !8453)
!8464 = distinct !DISubprogram(name: "edma_link", scope: !3, file: !3, line: 558, type: !8465, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8465 = !DISubroutineType(types: !8466)
!8466 = !{null, !4579, !7, !7}
!8467 = !DILocalVariable(name: "ecc", arg: 1, scope: !8464, file: !3, line: 558, type: !4579)
!8468 = !DILocation(line: 558, column: 39, scope: !8464)
!8469 = !DILocalVariable(name: "from", arg: 2, scope: !8464, file: !3, line: 558, type: !7)
!8470 = !DILocation(line: 558, column: 53, scope: !8464)
!8471 = !DILocalVariable(name: "to", arg: 3, scope: !8464, file: !3, line: 558, type: !7)
!8472 = !DILocation(line: 558, column: 68, scope: !8464)
!8473 = !DILocation(line: 560, column: 6, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 560, column: 6)
!8475 = !DILocation(line: 560, column: 6, scope: !8464)
!8476 = !DILocation(line: 561, column: 3, scope: !8474)
!8477 = !DILocation(line: 563, column: 9, scope: !8464)
!8478 = !DILocation(line: 563, column: 7, scope: !8464)
!8479 = !DILocation(line: 564, column: 7, scope: !8464)
!8480 = !DILocation(line: 564, column: 5, scope: !8464)
!8481 = !DILocation(line: 565, column: 6, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 565, column: 6)
!8483 = !DILocation(line: 565, column: 14, scope: !8482)
!8484 = !DILocation(line: 565, column: 19, scope: !8482)
!8485 = !DILocation(line: 565, column: 11, scope: !8482)
!8486 = !DILocation(line: 565, column: 29, scope: !8482)
!8487 = !DILocation(line: 565, column: 32, scope: !8482)
!8488 = !DILocation(line: 565, column: 38, scope: !8482)
!8489 = !DILocation(line: 565, column: 43, scope: !8482)
!8490 = !DILocation(line: 565, column: 35, scope: !8482)
!8491 = !DILocation(line: 565, column: 6, scope: !8464)
!8492 = !DILocation(line: 566, column: 3, scope: !8482)
!8493 = !DILocation(line: 568, column: 20, scope: !8464)
!8494 = !DILocation(line: 568, column: 44, scope: !8464)
!8495 = !DILocation(line: 569, column: 6, scope: !8464)
!8496 = !DILocation(line: 568, column: 2, scope: !8464)
!8497 = !DILocation(line: 570, column: 1, scope: !8464)
!8498 = distinct !DISubprogram(name: "edma_clean_channel", scope: !3, file: !3, line: 684, type: !7859, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8499 = !DILocalVariable(name: "echan", arg: 1, scope: !8498, file: !3, line: 684, type: !4572)
!8500 = !DILocation(line: 684, column: 50, scope: !8498)
!8501 = !DILocalVariable(name: "ecc", scope: !8498, file: !3, line: 686, type: !4579)
!8502 = !DILocation(line: 686, column: 18, scope: !8498)
!8503 = !DILocation(line: 686, column: 24, scope: !8498)
!8504 = !DILocation(line: 686, column: 31, scope: !8498)
!8505 = !DILocalVariable(name: "channel", scope: !8498, file: !3, line: 687, type: !130)
!8506 = !DILocation(line: 687, column: 6, scope: !8498)
!8507 = !DILocation(line: 687, column: 16, scope: !8498)
!8508 = !DILocalVariable(name: "idx", scope: !8498, file: !3, line: 688, type: !130)
!8509 = !DILocation(line: 688, column: 6, scope: !8498)
!8510 = !DILocation(line: 688, column: 12, scope: !8498)
!8511 = !DILocalVariable(name: "ch_bit", scope: !8498, file: !3, line: 689, type: !130)
!8512 = !DILocation(line: 689, column: 6, scope: !8498)
!8513 = !DILocation(line: 689, column: 15, scope: !8498)
!8514 = !DILocation(line: 693, column: 27, scope: !8498)
!8515 = !DILocation(line: 693, column: 40, scope: !8498)
!8516 = !DILocation(line: 693, column: 45, scope: !8498)
!8517 = !DILocation(line: 693, column: 2, scope: !8498)
!8518 = !DILocation(line: 695, column: 19, scope: !8498)
!8519 = !DILocation(line: 695, column: 35, scope: !8498)
!8520 = !DILocation(line: 695, column: 40, scope: !8498)
!8521 = !DILocation(line: 695, column: 2, scope: !8498)
!8522 = !DILocation(line: 697, column: 27, scope: !8498)
!8523 = !DILocation(line: 697, column: 41, scope: !8498)
!8524 = !DILocation(line: 697, column: 46, scope: !8498)
!8525 = !DILocation(line: 697, column: 2, scope: !8498)
!8526 = !DILocation(line: 698, column: 13, scope: !8498)
!8527 = !DILocation(line: 698, column: 2, scope: !8498)
!8528 = !DILocation(line: 699, column: 1, scope: !8498)
!8529 = distinct !DISubprogram(name: "edma_start", scope: !3, file: !3, line: 598, type: !7859, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8530 = !DILocalVariable(name: "echan", arg: 1, scope: !8529, file: !3, line: 598, type: !4572)
!8531 = !DILocation(line: 598, column: 42, scope: !8529)
!8532 = !DILocalVariable(name: "ecc", scope: !8529, file: !3, line: 600, type: !4579)
!8533 = !DILocation(line: 600, column: 18, scope: !8529)
!8534 = !DILocation(line: 600, column: 24, scope: !8529)
!8535 = !DILocation(line: 600, column: 31, scope: !8529)
!8536 = !DILocalVariable(name: "channel", scope: !8529, file: !3, line: 601, type: !130)
!8537 = !DILocation(line: 601, column: 6, scope: !8529)
!8538 = !DILocation(line: 601, column: 16, scope: !8529)
!8539 = !DILocalVariable(name: "idx", scope: !8529, file: !3, line: 602, type: !130)
!8540 = !DILocation(line: 602, column: 6, scope: !8529)
!8541 = !DILocation(line: 602, column: 12, scope: !8529)
!8542 = !DILocalVariable(name: "ch_bit", scope: !8529, file: !3, line: 603, type: !130)
!8543 = !DILocation(line: 603, column: 6, scope: !8529)
!8544 = !DILocation(line: 603, column: 15, scope: !8529)
!8545 = !DILocation(line: 605, column: 7, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 605, column: 6)
!8547 = !DILocation(line: 605, column: 14, scope: !8546)
!8548 = !DILocation(line: 605, column: 6, scope: !8529)
!8549 = !DILocation(line: 609, column: 28, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 605, column: 28)
!8551 = !DILocation(line: 609, column: 41, scope: !8550)
!8552 = !DILocation(line: 609, column: 46, scope: !8550)
!8553 = !DILocation(line: 609, column: 3, scope: !8550)
!8554 = !DILocation(line: 610, column: 2, scope: !8550)
!8555 = !DILocation(line: 615, column: 20, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 610, column: 9)
!8557 = !DILocation(line: 615, column: 35, scope: !8556)
!8558 = !DILocation(line: 615, column: 40, scope: !8556)
!8559 = !DILocation(line: 615, column: 3, scope: !8556)
!8560 = !DILocation(line: 616, column: 20, scope: !8556)
!8561 = !DILocation(line: 616, column: 36, scope: !8556)
!8562 = !DILocation(line: 616, column: 41, scope: !8556)
!8563 = !DILocation(line: 616, column: 3, scope: !8556)
!8564 = !DILocation(line: 618, column: 28, scope: !8556)
!8565 = !DILocation(line: 618, column: 42, scope: !8556)
!8566 = !DILocation(line: 618, column: 47, scope: !8556)
!8567 = !DILocation(line: 618, column: 3, scope: !8556)
!8568 = !DILocation(line: 619, column: 28, scope: !8556)
!8569 = !DILocation(line: 619, column: 42, scope: !8556)
!8570 = !DILocation(line: 619, column: 47, scope: !8556)
!8571 = !DILocation(line: 619, column: 3, scope: !8556)
!8572 = !DILocation(line: 623, column: 1, scope: !8529)
!8573 = distinct !DISubprogram(name: "edma_trigger_channel", scope: !3, file: !3, line: 671, type: !7859, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8574 = !DILocalVariable(name: "echan", arg: 1, scope: !8573, file: !3, line: 671, type: !4572)
!8575 = !DILocation(line: 671, column: 52, scope: !8573)
!8576 = !DILocalVariable(name: "ecc", scope: !8573, file: !3, line: 673, type: !4579)
!8577 = !DILocation(line: 673, column: 18, scope: !8573)
!8578 = !DILocation(line: 673, column: 24, scope: !8573)
!8579 = !DILocation(line: 673, column: 31, scope: !8573)
!8580 = !DILocalVariable(name: "channel", scope: !8573, file: !3, line: 674, type: !130)
!8581 = !DILocation(line: 674, column: 6, scope: !8573)
!8582 = !DILocation(line: 674, column: 16, scope: !8573)
!8583 = !DILocalVariable(name: "idx", scope: !8573, file: !3, line: 675, type: !130)
!8584 = !DILocation(line: 675, column: 6, scope: !8573)
!8585 = !DILocation(line: 675, column: 12, scope: !8573)
!8586 = !DILocalVariable(name: "ch_bit", scope: !8573, file: !3, line: 676, type: !130)
!8587 = !DILocation(line: 676, column: 6, scope: !8573)
!8588 = !DILocation(line: 676, column: 15, scope: !8573)
!8589 = !DILocation(line: 678, column: 27, scope: !8573)
!8590 = !DILocation(line: 678, column: 40, scope: !8573)
!8591 = !DILocation(line: 678, column: 45, scope: !8573)
!8592 = !DILocation(line: 678, column: 2, scope: !8573)
!8593 = !DILocation(line: 682, column: 1, scope: !8573)
!8594 = distinct !DISubprogram(name: "edma_resume", scope: !3, file: !3, line: 662, type: !7859, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8595 = !DILocalVariable(name: "echan", arg: 1, scope: !8594, file: !3, line: 662, type: !4572)
!8596 = !DILocation(line: 662, column: 43, scope: !8594)
!8597 = !DILocalVariable(name: "channel", scope: !8594, file: !3, line: 664, type: !130)
!8598 = !DILocation(line: 664, column: 6, scope: !8594)
!8599 = !DILocation(line: 664, column: 16, scope: !8594)
!8600 = !DILocation(line: 666, column: 27, scope: !8594)
!8601 = !DILocation(line: 666, column: 34, scope: !8594)
!8602 = !DILocation(line: 667, column: 6, scope: !8594)
!8603 = !DILocation(line: 668, column: 6, scope: !8594)
!8604 = !DILocation(line: 666, column: 2, scope: !8594)
!8605 = !DILocation(line: 669, column: 1, scope: !8594)
!8606 = distinct !DISubprogram(name: "__list_del_entry", scope: !8361, file: !8361, line: 130, type: !8440, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8607 = !DILocalVariable(name: "entry", arg: 1, scope: !8606, file: !8361, line: 130, type: !303)
!8608 = !DILocation(line: 130, column: 55, scope: !8606)
!8609 = !DILocation(line: 132, column: 30, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8606, file: !8361, line: 132, column: 6)
!8611 = !DILocation(line: 132, column: 7, scope: !8610)
!8612 = !DILocation(line: 132, column: 6, scope: !8606)
!8613 = !DILocation(line: 133, column: 3, scope: !8610)
!8614 = !DILocation(line: 135, column: 13, scope: !8606)
!8615 = !DILocation(line: 135, column: 20, scope: !8606)
!8616 = !DILocation(line: 135, column: 26, scope: !8606)
!8617 = !DILocation(line: 135, column: 33, scope: !8606)
!8618 = !DILocation(line: 135, column: 2, scope: !8606)
!8619 = !DILocation(line: 136, column: 1, scope: !8606)
!8620 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !8361, file: !8361, line: 51, type: !8621, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8621 = !DISubroutineType(types: !8622)
!8622 = !{!314, !303}
!8623 = !DILocalVariable(name: "entry", arg: 1, scope: !8620, file: !8361, line: 51, type: !303)
!8624 = !DILocation(line: 51, column: 61, scope: !8620)
!8625 = !DILocation(line: 53, column: 2, scope: !8620)
!8626 = distinct !DISubprogram(name: "__list_del", scope: !8361, file: !8361, line: 110, type: !8362, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8627 = !DILocalVariable(name: "prev", arg: 1, scope: !8626, file: !8361, line: 110, type: !303)
!8628 = !DILocation(line: 110, column: 50, scope: !8626)
!8629 = !DILocalVariable(name: "next", arg: 2, scope: !8626, file: !8361, line: 110, type: !303)
!8630 = !DILocation(line: 110, column: 75, scope: !8626)
!8631 = !DILocation(line: 112, column: 15, scope: !8626)
!8632 = !DILocation(line: 112, column: 2, scope: !8626)
!8633 = !DILocation(line: 112, column: 8, scope: !8626)
!8634 = !DILocation(line: 112, column: 13, scope: !8626)
!8635 = !DILocation(line: 113, column: 2, scope: !8626)
!8636 = !DILocation(line: 113, column: 2, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8626, file: !8361, line: 113, column: 2)
!8638 = !DILocation(line: 113, column: 2, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8637, file: !8361, line: 113, column: 2)
!8640 = !DILocation(line: 113, column: 2, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8637, file: !8361, line: 113, column: 2)
!8642 = !DILocation(line: 114, column: 1, scope: !8626)
!8643 = distinct !DISubprogram(name: "edma_param_modify", scope: !3, file: !3, line: 416, type: !8644, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8644 = !DISubroutineType(types: !8645)
!8645 = !{null, !4579, !130, !130, !7, !7}
!8646 = !DILocalVariable(name: "ecc", arg: 1, scope: !8643, file: !3, line: 416, type: !4579)
!8647 = !DILocation(line: 416, column: 54, scope: !8643)
!8648 = !DILocalVariable(name: "offset", arg: 2, scope: !8643, file: !3, line: 416, type: !130)
!8649 = !DILocation(line: 416, column: 63, scope: !8643)
!8650 = !DILocalVariable(name: "param_no", arg: 3, scope: !8643, file: !3, line: 417, type: !130)
!8651 = !DILocation(line: 417, column: 14, scope: !8643)
!8652 = !DILocalVariable(name: "and", arg: 4, scope: !8643, file: !3, line: 417, type: !7)
!8653 = !DILocation(line: 417, column: 33, scope: !8643)
!8654 = !DILocalVariable(name: "or", arg: 5, scope: !8643, file: !3, line: 417, type: !7)
!8655 = !DILocation(line: 417, column: 47, scope: !8643)
!8656 = !DILocation(line: 419, column: 14, scope: !8643)
!8657 = !DILocation(line: 419, column: 31, scope: !8643)
!8658 = !DILocation(line: 419, column: 29, scope: !8643)
!8659 = !DILocation(line: 419, column: 41, scope: !8643)
!8660 = !DILocation(line: 419, column: 50, scope: !8643)
!8661 = !DILocation(line: 419, column: 38, scope: !8643)
!8662 = !DILocation(line: 419, column: 57, scope: !8643)
!8663 = !DILocation(line: 419, column: 62, scope: !8643)
!8664 = !DILocation(line: 419, column: 2, scope: !8643)
!8665 = !DILocation(line: 420, column: 1, scope: !8643)
!8666 = distinct !DISubprogram(name: "edma_modify", scope: !3, file: !3, line: 319, type: !8667, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{null, !4579, !130, !7, !7}
!8669 = !DILocalVariable(name: "ecc", arg: 1, scope: !8666, file: !3, line: 319, type: !4579)
!8670 = !DILocation(line: 319, column: 48, scope: !8666)
!8671 = !DILocalVariable(name: "offset", arg: 2, scope: !8666, file: !3, line: 319, type: !130)
!8672 = !DILocation(line: 319, column: 57, scope: !8666)
!8673 = !DILocalVariable(name: "and", arg: 3, scope: !8666, file: !3, line: 319, type: !7)
!8674 = !DILocation(line: 319, column: 74, scope: !8666)
!8675 = !DILocalVariable(name: "or", arg: 4, scope: !8666, file: !3, line: 320, type: !7)
!8676 = !DILocation(line: 320, column: 20, scope: !8666)
!8677 = !DILocalVariable(name: "val", scope: !8666, file: !3, line: 322, type: !7)
!8678 = !DILocation(line: 322, column: 11, scope: !8666)
!8679 = !DILocation(line: 322, column: 27, scope: !8666)
!8680 = !DILocation(line: 322, column: 32, scope: !8666)
!8681 = !DILocation(line: 322, column: 17, scope: !8666)
!8682 = !DILocation(line: 324, column: 9, scope: !8666)
!8683 = !DILocation(line: 324, column: 6, scope: !8666)
!8684 = !DILocation(line: 325, column: 9, scope: !8666)
!8685 = !DILocation(line: 325, column: 6, scope: !8666)
!8686 = !DILocation(line: 326, column: 13, scope: !8666)
!8687 = !DILocation(line: 326, column: 18, scope: !8666)
!8688 = !DILocation(line: 326, column: 26, scope: !8666)
!8689 = !DILocation(line: 326, column: 2, scope: !8666)
!8690 = !DILocation(line: 327, column: 1, scope: !8666)
!8691 = distinct !DISubprogram(name: "edma_error_pending", scope: !3, file: !3, line: 1636, type: !8692, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8692 = !DISubroutineType(types: !8693)
!8693 = !{!314, !4579}
!8694 = !DILocalVariable(name: "ecc", arg: 1, scope: !8691, file: !3, line: 1636, type: !4579)
!8695 = !DILocation(line: 1636, column: 55, scope: !8691)
!8696 = !DILocation(line: 1638, column: 22, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8691, file: !3, line: 1638, column: 6)
!8698 = !DILocation(line: 1638, column: 6, scope: !8697)
!8699 = !DILocation(line: 1638, column: 40, scope: !8697)
!8700 = !DILocation(line: 1639, column: 22, scope: !8697)
!8701 = !DILocation(line: 1639, column: 6, scope: !8697)
!8702 = !DILocation(line: 1639, column: 40, scope: !8697)
!8703 = !DILocation(line: 1640, column: 16, scope: !8697)
!8704 = !DILocation(line: 1640, column: 6, scope: !8697)
!8705 = !DILocation(line: 1640, column: 32, scope: !8697)
!8706 = !DILocation(line: 1640, column: 45, scope: !8697)
!8707 = !DILocation(line: 1640, column: 35, scope: !8697)
!8708 = !DILocation(line: 1638, column: 6, scope: !8691)
!8709 = !DILocation(line: 1641, column: 3, scope: !8697)
!8710 = !DILocation(line: 1643, column: 2, scope: !8691)
!8711 = !DILocation(line: 1644, column: 1, scope: !8691)
!8712 = distinct !DISubprogram(name: "edma_read_array", scope: !3, file: !3, line: 345, type: !7824, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8713 = !DILocalVariable(name: "ecc", arg: 1, scope: !8712, file: !3, line: 345, type: !4579)
!8714 = !DILocation(line: 345, column: 60, scope: !8712)
!8715 = !DILocalVariable(name: "offset", arg: 2, scope: !8712, file: !3, line: 345, type: !130)
!8716 = !DILocation(line: 345, column: 69, scope: !8712)
!8717 = !DILocalVariable(name: "i", arg: 3, scope: !8712, file: !3, line: 346, type: !130)
!8718 = !DILocation(line: 346, column: 13, scope: !8712)
!8719 = !DILocation(line: 348, column: 19, scope: !8712)
!8720 = !DILocation(line: 348, column: 24, scope: !8712)
!8721 = !DILocation(line: 348, column: 34, scope: !8712)
!8722 = !DILocation(line: 348, column: 36, scope: !8712)
!8723 = !DILocation(line: 348, column: 31, scope: !8712)
!8724 = !DILocation(line: 348, column: 9, scope: !8712)
!8725 = !DILocation(line: 348, column: 2, scope: !8712)
!8726 = distinct !DISubprogram(name: "edma_error_handler", scope: !3, file: !3, line: 1593, type: !7859, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8727 = !DILocation(line: 392, column: 53, scope: !7862, inlinedAt: !8728)
!8728 = distinct !DILocation(line: 1633, column: 2, scope: !8726)
!8729 = !DILocation(line: 352, column: 51, scope: !7875, inlinedAt: !8730)
!8730 = distinct !DILocation(line: 1603, column: 2, scope: !8726)
!8731 = !DILocalVariable(name: "echan", arg: 1, scope: !8726, file: !3, line: 1593, type: !4572)
!8732 = !DILocation(line: 1593, column: 50, scope: !8726)
!8733 = !DILocalVariable(name: "ecc", scope: !8726, file: !3, line: 1595, type: !4579)
!8734 = !DILocation(line: 1595, column: 18, scope: !8726)
!8735 = !DILocation(line: 1595, column: 24, scope: !8726)
!8736 = !DILocation(line: 1595, column: 31, scope: !8726)
!8737 = !DILocalVariable(name: "dev", scope: !8726, file: !3, line: 1596, type: !345)
!8738 = !DILocation(line: 1596, column: 17, scope: !8726)
!8739 = !DILocation(line: 1596, column: 23, scope: !8726)
!8740 = !DILocation(line: 1596, column: 30, scope: !8726)
!8741 = !DILocation(line: 1596, column: 36, scope: !8726)
!8742 = !DILocation(line: 1596, column: 41, scope: !8726)
!8743 = !DILocation(line: 1596, column: 49, scope: !8726)
!8744 = !DILocalVariable(name: "p", scope: !8726, file: !3, line: 1597, type: !4649)
!8745 = !DILocation(line: 1597, column: 22, scope: !8726)
!8746 = !DILocalVariable(name: "err", scope: !8726, file: !3, line: 1598, type: !130)
!8747 = !DILocation(line: 1598, column: 6, scope: !8726)
!8748 = !DILocation(line: 1600, column: 7, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 1600, column: 6)
!8750 = !DILocation(line: 1600, column: 14, scope: !8749)
!8751 = !DILocation(line: 1600, column: 6, scope: !8726)
!8752 = !DILocation(line: 1601, column: 3, scope: !8749)
!8753 = !DILocation(line: 1603, column: 13, scope: !8726)
!8754 = !DILocation(line: 1603, column: 20, scope: !8726)
!8755 = !DILocation(line: 1603, column: 26, scope: !8726)
!8756 = !DILocation(line: 354, column: 2, scope: !7893, inlinedAt: !8730)
!8757 = !DILocation(line: 354, column: 2, scope: !7896, inlinedAt: !8730)
!8758 = !DILocation(line: 1605, column: 23, scope: !8726)
!8759 = !DILocation(line: 1605, column: 28, scope: !8726)
!8760 = !DILocation(line: 1605, column: 35, scope: !8726)
!8761 = !DILocation(line: 1605, column: 8, scope: !8726)
!8762 = !DILocation(line: 1605, column: 6, scope: !8726)
!8763 = !DILocation(line: 1619, column: 6, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 1619, column: 6)
!8765 = !DILocation(line: 1619, column: 10, scope: !8764)
!8766 = !DILocation(line: 1619, column: 16, scope: !8764)
!8767 = !DILocation(line: 1619, column: 24, scope: !8764)
!8768 = !DILocation(line: 1619, column: 29, scope: !8764)
!8769 = !DILocation(line: 1619, column: 34, scope: !8764)
!8770 = !DILocation(line: 1619, column: 39, scope: !8764)
!8771 = !DILocation(line: 1619, column: 6, scope: !8726)
!8772 = !DILocation(line: 1621, column: 3, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 1619, column: 46)
!8774 = !DILocation(line: 1621, column: 10, scope: !8773)
!8775 = !DILocation(line: 1621, column: 17, scope: !8773)
!8776 = !DILocation(line: 1622, column: 2, scope: !8773)
!8777 = !DILocation(line: 1628, column: 22, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 1622, column: 9)
!8779 = !DILocation(line: 1628, column: 3, scope: !8778)
!8780 = !DILocation(line: 1629, column: 13, scope: !8778)
!8781 = !DILocation(line: 1629, column: 3, scope: !8778)
!8782 = !DILocation(line: 1630, column: 14, scope: !8778)
!8783 = !DILocation(line: 1630, column: 3, scope: !8778)
!8784 = !DILocation(line: 1631, column: 24, scope: !8778)
!8785 = !DILocation(line: 1631, column: 3, scope: !8778)
!8786 = !DILocation(line: 1633, column: 15, scope: !8726)
!8787 = !DILocation(line: 1633, column: 22, scope: !8726)
!8788 = !DILocation(line: 1633, column: 28, scope: !8726)
!8789 = !DILocation(line: 394, column: 2, scope: !7912, inlinedAt: !8728)
!8790 = !DILocation(line: 394, column: 2, scope: !7915, inlinedAt: !8728)
!8791 = !DILocation(line: 1634, column: 1, scope: !8726)
!8792 = distinct !DISubprogram(name: "edma_read_slot", scope: !3, file: !3, line: 480, type: !8793, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8793 = !DISubroutineType(types: !8794)
!8794 = !{!130, !4579, !7, !8795}
!8795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!8796 = !DILocalVariable(name: "ecc", arg: 1, scope: !8792, file: !3, line: 480, type: !4579)
!8797 = !DILocation(line: 480, column: 43, scope: !8792)
!8798 = !DILocalVariable(name: "slot", arg: 2, scope: !8792, file: !3, line: 480, type: !7)
!8799 = !DILocation(line: 480, column: 57, scope: !8792)
!8800 = !DILocalVariable(name: "param", arg: 3, scope: !8792, file: !3, line: 481, type: !8795)
!8801 = !DILocation(line: 481, column: 28, scope: !8792)
!8802 = !DILocation(line: 483, column: 9, scope: !8792)
!8803 = !DILocation(line: 483, column: 7, scope: !8792)
!8804 = !DILocation(line: 484, column: 6, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 484, column: 6)
!8806 = !DILocation(line: 484, column: 14, scope: !8805)
!8807 = !DILocation(line: 484, column: 19, scope: !8805)
!8808 = !DILocation(line: 484, column: 11, scope: !8805)
!8809 = !DILocation(line: 484, column: 6, scope: !8792)
!8810 = !DILocation(line: 485, column: 3, scope: !8805)
!8811 = !DILocation(line: 486, column: 16, scope: !8792)
!8812 = !DILocation(line: 486, column: 23, scope: !8792)
!8813 = !DILocation(line: 486, column: 28, scope: !8792)
!8814 = !DILocation(line: 486, column: 35, scope: !8792)
!8815 = !DILocation(line: 486, column: 33, scope: !8792)
!8816 = !DILocation(line: 486, column: 2, scope: !8792)
!8817 = !DILocation(line: 488, column: 2, scope: !8792)
!8818 = !DILocation(line: 489, column: 1, scope: !8792)
!8819 = distinct !DISubprogram(name: "__dma_cap_zero", scope: !138, file: !138, line: 1382, type: !8820, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{null, !8822}
!8822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!8823 = !DILocalVariable(name: "dstp", arg: 1, scope: !8819, file: !138, line: 1382, type: !8822)
!8824 = !DILocation(line: 1382, column: 51, scope: !8819)
!8825 = !DILocation(line: 1384, column: 14, scope: !8819)
!8826 = !DILocation(line: 1384, column: 20, scope: !8819)
!8827 = !DILocation(line: 1384, column: 2, scope: !8819)
!8828 = !DILocation(line: 1385, column: 1, scope: !8819)
!8829 = distinct !DISubprogram(name: "__dma_cap_set", scope: !138, file: !138, line: 1369, type: !8830, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8830 = !DISubroutineType(types: !8831)
!8831 = !{null, !220, !8822}
!8832 = !DILocalVariable(name: "tx_type", arg: 1, scope: !8829, file: !138, line: 1369, type: !220)
!8833 = !DILocation(line: 1369, column: 41, scope: !8829)
!8834 = !DILocalVariable(name: "dstp", arg: 2, scope: !8829, file: !138, line: 1369, type: !8822)
!8835 = !DILocation(line: 1369, column: 66, scope: !8829)
!8836 = !DILocation(line: 1371, column: 10, scope: !8829)
!8837 = !DILocation(line: 1371, column: 19, scope: !8829)
!8838 = !DILocation(line: 1371, column: 25, scope: !8829)
!8839 = !DILocation(line: 1371, column: 2, scope: !8829)
!8840 = !DILocation(line: 1372, column: 1, scope: !8829)
!8841 = distinct !DISubprogram(name: "edma_prep_dma_memcpy", scope: !3, file: !3, line: 1162, type: !4294, scopeLine: 1165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!8842 = !DILocation(line: 233, column: 58, scope: !6150, inlinedAt: !8843)
!8843 = distinct !DILocation(line: 1176, column: 10, scope: !8841)
!8844 = !DILocalVariable(name: "chan", arg: 1, scope: !8841, file: !3, line: 1163, type: !316)
!8845 = !DILocation(line: 1163, column: 19, scope: !8841)
!8846 = !DILocalVariable(name: "dest", arg: 2, scope: !8841, file: !3, line: 1163, type: !1073)
!8847 = !DILocation(line: 1163, column: 36, scope: !8841)
!8848 = !DILocalVariable(name: "src", arg: 3, scope: !8841, file: !3, line: 1163, type: !1073)
!8849 = !DILocation(line: 1163, column: 53, scope: !8841)
!8850 = !DILocalVariable(name: "len", arg: 4, scope: !8841, file: !3, line: 1164, type: !447)
!8851 = !DILocation(line: 1164, column: 9, scope: !8841)
!8852 = !DILocalVariable(name: "tx_flags", arg: 5, scope: !8841, file: !3, line: 1164, type: !265)
!8853 = !DILocation(line: 1164, column: 28, scope: !8841)
!8854 = !DILocalVariable(name: "ret", scope: !8841, file: !3, line: 1166, type: !130)
!8855 = !DILocation(line: 1166, column: 6, scope: !8841)
!8856 = !DILocalVariable(name: "nslots", scope: !8841, file: !3, line: 1166, type: !130)
!8857 = !DILocation(line: 1166, column: 11, scope: !8841)
!8858 = !DILocalVariable(name: "edesc", scope: !8841, file: !3, line: 1167, type: !4561)
!8859 = !DILocation(line: 1167, column: 20, scope: !8841)
!8860 = !DILocalVariable(name: "dev", scope: !8841, file: !3, line: 1168, type: !345)
!8861 = !DILocation(line: 1168, column: 17, scope: !8841)
!8862 = !DILocation(line: 1168, column: 23, scope: !8841)
!8863 = !DILocation(line: 1168, column: 29, scope: !8841)
!8864 = !DILocation(line: 1168, column: 37, scope: !8841)
!8865 = !DILocalVariable(name: "echan", scope: !8841, file: !3, line: 1169, type: !4572)
!8866 = !DILocation(line: 1169, column: 20, scope: !8841)
!8867 = !DILocation(line: 1169, column: 41, scope: !8841)
!8868 = !DILocation(line: 1169, column: 28, scope: !8841)
!8869 = !DILocalVariable(name: "width", scope: !8841, file: !3, line: 1170, type: !7)
!8870 = !DILocation(line: 1170, column: 15, scope: !8841)
!8871 = !DILocalVariable(name: "pset_len", scope: !8841, file: !3, line: 1170, type: !7)
!8872 = !DILocation(line: 1170, column: 22, scope: !8841)
!8873 = !DILocalVariable(name: "array_size", scope: !8841, file: !3, line: 1170, type: !7)
!8874 = !DILocation(line: 1170, column: 32, scope: !8841)
!8875 = !DILocation(line: 1172, column: 6, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 1172, column: 6)
!8877 = !DILocation(line: 1172, column: 6, scope: !8841)
!8878 = !DILocation(line: 1173, column: 3, scope: !8876)
!8879 = !DILocation(line: 1176, column: 17, scope: !8841)
!8880 = !DILocation(line: 1176, column: 23, scope: !8841)
!8881 = !DILocation(line: 1176, column: 21, scope: !8841)
!8882 = !DILocation(line: 1176, column: 30, scope: !8841)
!8883 = !DILocation(line: 1176, column: 28, scope: !8841)
!8884 = !DILocation(line: 237, column: 11, scope: !6150, inlinedAt: !8843)
!8885 = !DILocation(line: 235, column: 2, scope: !6150, inlinedAt: !8843)
!8886 = !DILocation(line: 238, column: 9, scope: !6150, inlinedAt: !8843)
!8887 = !DILocation(line: 1176, column: 2, scope: !8841)
!8888 = !DILocation(line: 1178, column: 14, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 1176, column: 37)
!8890 = !DILocation(line: 1179, column: 3, scope: !8889)
!8891 = !DILocation(line: 1181, column: 14, scope: !8889)
!8892 = !DILocation(line: 1182, column: 3, scope: !8889)
!8893 = !DILocation(line: 1184, column: 14, scope: !8889)
!8894 = !DILocation(line: 1185, column: 3, scope: !8889)
!8895 = !DILocation(line: 1188, column: 6, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 1188, column: 6)
!8897 = !DILocation(line: 1188, column: 10, scope: !8896)
!8898 = !DILocation(line: 1188, column: 6, scope: !8841)
!8899 = !DILocation(line: 1194, column: 11, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8896, file: !3, line: 1188, column: 20)
!8901 = !DILocation(line: 1194, column: 9, scope: !8900)
!8902 = !DILocation(line: 1195, column: 14, scope: !8900)
!8903 = !DILocation(line: 1195, column: 12, scope: !8900)
!8904 = !DILocation(line: 1196, column: 10, scope: !8900)
!8905 = !DILocation(line: 1197, column: 2, scope: !8900)
!8906 = !DILocation(line: 1209, column: 11, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8896, file: !3, line: 1197, column: 9)
!8908 = !DILocation(line: 1209, column: 9, scope: !8907)
!8909 = !DILocalVariable(name: "__x", scope: !8910, file: !3, line: 1210, type: !447)
!8910 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 1210, column: 14)
!8911 = !DILocation(line: 1210, column: 14, scope: !8910)
!8912 = !DILocation(line: 1210, column: 14, scope: !8907)
!8913 = !DILocation(line: 1210, column: 12, scope: !8907)
!8914 = !DILocation(line: 1212, column: 7, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 1212, column: 7)
!8916 = !DILocation(line: 1212, column: 7, scope: !8907)
!8917 = !DILocation(line: 1213, column: 11, scope: !8915)
!8918 = !DILocation(line: 1213, column: 4, scope: !8915)
!8919 = !DILocation(line: 1215, column: 11, scope: !8915)
!8920 = !DILocation(line: 1218, column: 18, scope: !8841)
!8921 = !DILocation(line: 1218, column: 10, scope: !8841)
!8922 = !DILocation(line: 1218, column: 8, scope: !8841)
!8923 = !DILocation(line: 1219, column: 7, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 1219, column: 6)
!8925 = !DILocation(line: 1219, column: 6, scope: !8841)
!8926 = !DILocation(line: 1220, column: 3, scope: !8924)
!8927 = !DILocation(line: 1222, column: 19, scope: !8841)
!8928 = !DILocation(line: 1222, column: 2, scope: !8841)
!8929 = !DILocation(line: 1222, column: 9, scope: !8841)
!8930 = !DILocation(line: 1222, column: 17, scope: !8841)
!8931 = !DILocation(line: 1223, column: 41, scope: !8841)
!8932 = !DILocation(line: 1223, column: 19, scope: !8841)
!8933 = !DILocation(line: 1223, column: 26, scope: !8841)
!8934 = !DILocation(line: 1223, column: 39, scope: !8841)
!8935 = !DILocation(line: 1223, column: 2, scope: !8841)
!8936 = !DILocation(line: 1223, column: 9, scope: !8841)
!8937 = !DILocation(line: 1223, column: 17, scope: !8841)
!8938 = !DILocation(line: 1224, column: 2, scope: !8841)
!8939 = !DILocation(line: 1224, column: 9, scope: !8841)
!8940 = !DILocation(line: 1224, column: 19, scope: !8841)
!8941 = !DILocation(line: 1225, column: 17, scope: !8841)
!8942 = !DILocation(line: 1225, column: 2, scope: !8841)
!8943 = !DILocation(line: 1225, column: 9, scope: !8841)
!8944 = !DILocation(line: 1225, column: 15, scope: !8841)
!8945 = !DILocation(line: 1227, column: 25, scope: !8841)
!8946 = !DILocation(line: 1227, column: 32, scope: !8841)
!8947 = !DILocation(line: 1227, column: 39, scope: !8841)
!8948 = !DILocation(line: 1227, column: 48, scope: !8841)
!8949 = !DILocation(line: 1227, column: 53, scope: !8841)
!8950 = !DILocation(line: 1228, column: 11, scope: !8841)
!8951 = !DILocation(line: 1228, column: 18, scope: !8841)
!8952 = !DILocation(line: 1227, column: 8, scope: !8841)
!8953 = !DILocation(line: 1227, column: 6, scope: !8841)
!8954 = !DILocation(line: 1229, column: 6, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 1229, column: 6)
!8956 = !DILocation(line: 1229, column: 10, scope: !8955)
!8957 = !DILocation(line: 1229, column: 6, scope: !8841)
!8958 = !DILocation(line: 1230, column: 9, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8955, file: !3, line: 1229, column: 15)
!8960 = !DILocation(line: 1230, column: 3, scope: !8959)
!8961 = !DILocation(line: 1231, column: 3, scope: !8959)
!8962 = !DILocation(line: 1234, column: 18, scope: !8841)
!8963 = !DILocation(line: 1234, column: 2, scope: !8841)
!8964 = !DILocation(line: 1234, column: 9, scope: !8841)
!8965 = !DILocation(line: 1234, column: 16, scope: !8841)
!8966 = !DILocation(line: 1236, column: 2, scope: !8841)
!8967 = !DILocation(line: 1236, column: 9, scope: !8841)
!8968 = !DILocation(line: 1236, column: 17, scope: !8841)
!8969 = !DILocation(line: 1236, column: 23, scope: !8841)
!8970 = !DILocation(line: 1236, column: 27, scope: !8841)
!8971 = !DILocation(line: 1237, column: 6, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 1237, column: 6)
!8973 = !DILocation(line: 1237, column: 13, scope: !8972)
!8974 = !DILocation(line: 1237, column: 6, scope: !8841)
!8975 = !DILocation(line: 1239, column: 7, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 1239, column: 7)
!8977 = distinct !DILexicalBlock(scope: !8972, file: !3, line: 1237, column: 19)
!8978 = !DILocation(line: 1239, column: 16, scope: !8976)
!8979 = !DILocation(line: 1239, column: 7, scope: !8977)
!8980 = !DILocation(line: 1240, column: 4, scope: !8976)
!8981 = !DILocation(line: 1240, column: 11, scope: !8976)
!8982 = !DILocation(line: 1240, column: 19, scope: !8976)
!8983 = !DILocation(line: 1240, column: 25, scope: !8976)
!8984 = !DILocation(line: 1240, column: 29, scope: !8976)
!8985 = !DILocation(line: 1241, column: 2, scope: !8977)
!8986 = !DILocation(line: 1243, column: 3, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8972, file: !3, line: 1241, column: 9)
!8988 = !DILocation(line: 1243, column: 10, scope: !8987)
!8989 = !DILocation(line: 1243, column: 18, scope: !8987)
!8990 = !DILocation(line: 1243, column: 24, scope: !8987)
!8991 = !DILocation(line: 1243, column: 28, scope: !8987)
!8992 = !DILocation(line: 1245, column: 7, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 1245, column: 7)
!8994 = !DILocation(line: 1245, column: 14, scope: !8993)
!8995 = !DILocation(line: 1245, column: 22, scope: !8993)
!8996 = !DILocation(line: 1245, column: 7, scope: !8987)
!8997 = !DILocation(line: 1246, column: 37, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 1245, column: 27)
!8999 = !DILocation(line: 1246, column: 44, scope: !8998)
!9000 = !DILocation(line: 1246, column: 21, scope: !8998)
!9001 = !DILocation(line: 1246, column: 4, scope: !8998)
!9002 = !DILocation(line: 1246, column: 11, scope: !8998)
!9003 = !DILocation(line: 1246, column: 19, scope: !8998)
!9004 = !DILocation(line: 1248, column: 8, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8998, file: !3, line: 1248, column: 8)
!9006 = !DILocation(line: 1248, column: 15, scope: !9005)
!9007 = !DILocation(line: 1248, column: 23, scope: !9005)
!9008 = !DILocation(line: 1248, column: 8, scope: !8998)
!9009 = !DILocation(line: 1249, column: 11, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 1248, column: 28)
!9011 = !DILocation(line: 1249, column: 5, scope: !9010)
!9012 = !DILocation(line: 1250, column: 5, scope: !9010)
!9013 = !DILocation(line: 1252, column: 5, scope: !9010)
!9014 = !DILocation(line: 1254, column: 3, scope: !8998)
!9015 = !DILocation(line: 1255, column: 11, scope: !8987)
!9016 = !DILocation(line: 1255, column: 8, scope: !8987)
!9017 = !DILocation(line: 1256, column: 10, scope: !8987)
!9018 = !DILocation(line: 1256, column: 7, scope: !8987)
!9019 = !DILocation(line: 1257, column: 22, scope: !8987)
!9020 = !DILocation(line: 1257, column: 28, scope: !8987)
!9021 = !DILocation(line: 1257, column: 26, scope: !8987)
!9022 = !DILocation(line: 1257, column: 20, scope: !8987)
!9023 = !DILocation(line: 1257, column: 12, scope: !8987)
!9024 = !DILocation(line: 1259, column: 26, scope: !8987)
!9025 = !DILocation(line: 1259, column: 33, scope: !8987)
!9026 = !DILocation(line: 1259, column: 40, scope: !8987)
!9027 = !DILocation(line: 1259, column: 49, scope: !8987)
!9028 = !DILocation(line: 1259, column: 54, scope: !8987)
!9029 = !DILocation(line: 1260, column: 12, scope: !8987)
!9030 = !DILocation(line: 1260, column: 19, scope: !8987)
!9031 = !DILocation(line: 1259, column: 9, scope: !8987)
!9032 = !DILocation(line: 1259, column: 7, scope: !8987)
!9033 = !DILocation(line: 1261, column: 7, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 1261, column: 7)
!9035 = !DILocation(line: 1261, column: 11, scope: !9034)
!9036 = !DILocation(line: 1261, column: 7, scope: !8987)
!9037 = !DILocation(line: 1262, column: 10, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 1261, column: 16)
!9039 = !DILocation(line: 1262, column: 4, scope: !9038)
!9040 = !DILocation(line: 1263, column: 4, scope: !9038)
!9041 = !DILocation(line: 1266, column: 3, scope: !8987)
!9042 = !DILocation(line: 1266, column: 10, scope: !8987)
!9043 = !DILocation(line: 1266, column: 18, scope: !8987)
!9044 = !DILocation(line: 1266, column: 24, scope: !8987)
!9045 = !DILocation(line: 1266, column: 28, scope: !8987)
!9046 = !DILocation(line: 1268, column: 7, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 1268, column: 7)
!9048 = !DILocation(line: 1268, column: 16, scope: !9047)
!9049 = !DILocation(line: 1268, column: 7, scope: !8987)
!9050 = !DILocation(line: 1269, column: 4, scope: !9047)
!9051 = !DILocation(line: 1269, column: 11, scope: !9047)
!9052 = !DILocation(line: 1269, column: 19, scope: !9047)
!9053 = !DILocation(line: 1269, column: 25, scope: !9047)
!9054 = !DILocation(line: 1269, column: 29, scope: !9047)
!9055 = !DILocation(line: 1272, column: 8, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 1272, column: 6)
!9057 = !DILocation(line: 1272, column: 17, scope: !9056)
!9058 = !DILocation(line: 1272, column: 6, scope: !8841)
!9059 = !DILocation(line: 1273, column: 3, scope: !9056)
!9060 = !DILocation(line: 1273, column: 10, scope: !9056)
!9061 = !DILocation(line: 1273, column: 17, scope: !9056)
!9062 = !DILocation(line: 1275, column: 24, scope: !8841)
!9063 = !DILocation(line: 1275, column: 31, scope: !8841)
!9064 = !DILocation(line: 1275, column: 39, scope: !8841)
!9065 = !DILocation(line: 1275, column: 46, scope: !8841)
!9066 = !DILocation(line: 1275, column: 53, scope: !8841)
!9067 = !DILocation(line: 1275, column: 9, scope: !8841)
!9068 = !DILocation(line: 1275, column: 2, scope: !8841)
!9069 = !DILocation(line: 1276, column: 1, scope: !8841)
!9070 = distinct !DISubprogram(name: "edma_prep_dma_interleaved", scope: !3, file: !3, line: 1279, type: !4406, scopeLine: 1282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!9071 = !DILocalVariable(name: "chan", arg: 1, scope: !9070, file: !3, line: 1279, type: !316)
!9072 = !DILocation(line: 1279, column: 44, scope: !9070)
!9073 = !DILocalVariable(name: "xt", arg: 2, scope: !9070, file: !3, line: 1280, type: !4408)
!9074 = !DILocation(line: 1280, column: 39, scope: !9070)
!9075 = !DILocalVariable(name: "tx_flags", arg: 3, scope: !9070, file: !3, line: 1281, type: !265)
!9076 = !DILocation(line: 1281, column: 20, scope: !9070)
!9077 = !DILocalVariable(name: "dev", scope: !9070, file: !3, line: 1283, type: !345)
!9078 = !DILocation(line: 1283, column: 17, scope: !9070)
!9079 = !DILocation(line: 1283, column: 23, scope: !9070)
!9080 = !DILocation(line: 1283, column: 29, scope: !9070)
!9081 = !DILocation(line: 1283, column: 37, scope: !9070)
!9082 = !DILocalVariable(name: "echan", scope: !9070, file: !3, line: 1284, type: !4572)
!9083 = !DILocation(line: 1284, column: 20, scope: !9070)
!9084 = !DILocation(line: 1284, column: 41, scope: !9070)
!9085 = !DILocation(line: 1284, column: 28, scope: !9070)
!9086 = !DILocalVariable(name: "param", scope: !9070, file: !3, line: 1285, type: !8795)
!9087 = !DILocation(line: 1285, column: 23, scope: !9070)
!9088 = !DILocalVariable(name: "edesc", scope: !9070, file: !3, line: 1286, type: !4561)
!9089 = !DILocation(line: 1286, column: 20, scope: !9070)
!9090 = !DILocalVariable(name: "src_icg", scope: !9070, file: !3, line: 1287, type: !447)
!9091 = !DILocation(line: 1287, column: 9, scope: !9070)
!9092 = !DILocalVariable(name: "dst_icg", scope: !9070, file: !3, line: 1287, type: !447)
!9093 = !DILocation(line: 1287, column: 18, scope: !9070)
!9094 = !DILocalVariable(name: "src_bidx", scope: !9070, file: !3, line: 1288, type: !130)
!9095 = !DILocation(line: 1288, column: 6, scope: !9070)
!9096 = !DILocalVariable(name: "dst_bidx", scope: !9070, file: !3, line: 1288, type: !130)
!9097 = !DILocation(line: 1288, column: 16, scope: !9070)
!9098 = !DILocation(line: 1291, column: 25, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1291, column: 6)
!9100 = !DILocation(line: 1291, column: 29, scope: !9099)
!9101 = !DILocation(line: 1291, column: 6, scope: !9099)
!9102 = !DILocation(line: 1291, column: 6, scope: !9070)
!9103 = !DILocation(line: 1292, column: 3, scope: !9099)
!9104 = !DILocation(line: 1294, column: 6, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1294, column: 6)
!9106 = !DILocation(line: 1294, column: 10, scope: !9105)
!9107 = !DILocation(line: 1294, column: 21, scope: !9105)
!9108 = !DILocation(line: 1294, column: 26, scope: !9105)
!9109 = !DILocation(line: 1294, column: 29, scope: !9105)
!9110 = !DILocation(line: 1294, column: 33, scope: !9105)
!9111 = !DILocation(line: 1294, column: 38, scope: !9105)
!9112 = !DILocation(line: 1294, column: 6, scope: !9070)
!9113 = !DILocation(line: 1295, column: 3, scope: !9105)
!9114 = !DILocation(line: 1297, column: 6, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1297, column: 6)
!9116 = !DILocation(line: 1297, column: 10, scope: !9115)
!9117 = !DILocation(line: 1297, column: 17, scope: !9115)
!9118 = !DILocation(line: 1297, column: 22, scope: !9115)
!9119 = !DILocation(line: 1297, column: 31, scope: !9115)
!9120 = !DILocation(line: 1297, column: 34, scope: !9115)
!9121 = !DILocation(line: 1297, column: 38, scope: !9115)
!9122 = !DILocation(line: 1297, column: 43, scope: !9115)
!9123 = !DILocation(line: 1297, column: 6, scope: !9070)
!9124 = !DILocation(line: 1298, column: 3, scope: !9115)
!9125 = !DILocation(line: 1300, column: 34, scope: !9070)
!9126 = !DILocation(line: 1300, column: 39, scope: !9070)
!9127 = !DILocation(line: 1300, column: 43, scope: !9070)
!9128 = !DILocation(line: 1300, column: 12, scope: !9070)
!9129 = !DILocation(line: 1300, column: 10, scope: !9070)
!9130 = !DILocation(line: 1301, column: 6, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1301, column: 6)
!9132 = !DILocation(line: 1301, column: 6, scope: !9070)
!9133 = !DILocation(line: 1302, column: 14, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9131, file: !3, line: 1301, column: 15)
!9135 = !DILocation(line: 1302, column: 24, scope: !9134)
!9136 = !DILocation(line: 1302, column: 28, scope: !9134)
!9137 = !DILocation(line: 1302, column: 35, scope: !9134)
!9138 = !DILocation(line: 1302, column: 22, scope: !9134)
!9139 = !DILocation(line: 1302, column: 12, scope: !9134)
!9140 = !DILocation(line: 1303, column: 2, scope: !9134)
!9141 = !DILocation(line: 1303, column: 13, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9131, file: !3, line: 1303, column: 13)
!9143 = !DILocation(line: 1303, column: 17, scope: !9142)
!9144 = !DILocation(line: 1303, column: 13, scope: !9131)
!9145 = !DILocation(line: 1304, column: 14, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 1303, column: 26)
!9147 = !DILocation(line: 1304, column: 18, scope: !9146)
!9148 = !DILocation(line: 1304, column: 25, scope: !9146)
!9149 = !DILocation(line: 1304, column: 12, scope: !9146)
!9150 = !DILocation(line: 1305, column: 2, scope: !9146)
!9151 = !DILocation(line: 1306, column: 3, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 1305, column: 9)
!9153 = !DILocation(line: 1308, column: 3, scope: !9152)
!9154 = !DILocation(line: 1311, column: 34, scope: !9070)
!9155 = !DILocation(line: 1311, column: 39, scope: !9070)
!9156 = !DILocation(line: 1311, column: 43, scope: !9070)
!9157 = !DILocation(line: 1311, column: 12, scope: !9070)
!9158 = !DILocation(line: 1311, column: 10, scope: !9070)
!9159 = !DILocation(line: 1312, column: 6, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1312, column: 6)
!9161 = !DILocation(line: 1312, column: 6, scope: !9070)
!9162 = !DILocation(line: 1313, column: 14, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9160, file: !3, line: 1312, column: 15)
!9164 = !DILocation(line: 1313, column: 24, scope: !9163)
!9165 = !DILocation(line: 1313, column: 28, scope: !9163)
!9166 = !DILocation(line: 1313, column: 35, scope: !9163)
!9167 = !DILocation(line: 1313, column: 22, scope: !9163)
!9168 = !DILocation(line: 1313, column: 12, scope: !9163)
!9169 = !DILocation(line: 1314, column: 2, scope: !9163)
!9170 = !DILocation(line: 1314, column: 13, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9160, file: !3, line: 1314, column: 13)
!9172 = !DILocation(line: 1314, column: 17, scope: !9171)
!9173 = !DILocation(line: 1314, column: 13, scope: !9160)
!9174 = !DILocation(line: 1315, column: 14, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9171, file: !3, line: 1314, column: 26)
!9176 = !DILocation(line: 1315, column: 18, scope: !9175)
!9177 = !DILocation(line: 1315, column: 25, scope: !9175)
!9178 = !DILocation(line: 1315, column: 12, scope: !9175)
!9179 = !DILocation(line: 1316, column: 2, scope: !9175)
!9180 = !DILocation(line: 1317, column: 3, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9171, file: !3, line: 1316, column: 9)
!9182 = !DILocation(line: 1319, column: 3, scope: !9181)
!9183 = !DILocation(line: 1322, column: 6, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1322, column: 6)
!9185 = !DILocation(line: 1322, column: 15, scope: !9184)
!9186 = !DILocation(line: 1322, column: 24, scope: !9184)
!9187 = !DILocation(line: 1322, column: 27, scope: !9184)
!9188 = !DILocation(line: 1322, column: 36, scope: !9184)
!9189 = !DILocation(line: 1322, column: 6, scope: !9070)
!9190 = !DILocation(line: 1323, column: 3, scope: !9184)
!9191 = !DILocation(line: 1325, column: 18, scope: !9070)
!9192 = !DILocation(line: 1325, column: 10, scope: !9070)
!9193 = !DILocation(line: 1325, column: 8, scope: !9070)
!9194 = !DILocation(line: 1326, column: 7, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1326, column: 6)
!9196 = !DILocation(line: 1326, column: 6, scope: !9070)
!9197 = !DILocation(line: 1327, column: 3, scope: !9195)
!9198 = !DILocation(line: 1329, column: 2, scope: !9070)
!9199 = !DILocation(line: 1329, column: 9, scope: !9070)
!9200 = !DILocation(line: 1329, column: 19, scope: !9070)
!9201 = !DILocation(line: 1330, column: 17, scope: !9070)
!9202 = !DILocation(line: 1330, column: 2, scope: !9070)
!9203 = !DILocation(line: 1330, column: 9, scope: !9070)
!9204 = !DILocation(line: 1330, column: 15, scope: !9070)
!9205 = !DILocation(line: 1331, column: 2, scope: !9070)
!9206 = !DILocation(line: 1331, column: 9, scope: !9070)
!9207 = !DILocation(line: 1331, column: 17, scope: !9070)
!9208 = !DILocation(line: 1333, column: 11, scope: !9070)
!9209 = !DILocation(line: 1333, column: 18, scope: !9070)
!9210 = !DILocation(line: 1333, column: 26, scope: !9070)
!9211 = !DILocation(line: 1333, column: 8, scope: !9070)
!9212 = !DILocation(line: 1335, column: 15, scope: !9070)
!9213 = !DILocation(line: 1335, column: 19, scope: !9070)
!9214 = !DILocation(line: 1335, column: 2, scope: !9070)
!9215 = !DILocation(line: 1335, column: 9, scope: !9070)
!9216 = !DILocation(line: 1335, column: 13, scope: !9070)
!9217 = !DILocation(line: 1336, column: 15, scope: !9070)
!9218 = !DILocation(line: 1336, column: 19, scope: !9070)
!9219 = !DILocation(line: 1336, column: 2, scope: !9070)
!9220 = !DILocation(line: 1336, column: 9, scope: !9070)
!9221 = !DILocation(line: 1336, column: 13, scope: !9070)
!9222 = !DILocation(line: 1337, column: 19, scope: !9070)
!9223 = !DILocation(line: 1337, column: 23, scope: !9070)
!9224 = !DILocation(line: 1337, column: 28, scope: !9070)
!9225 = !DILocation(line: 1337, column: 36, scope: !9070)
!9226 = !DILocation(line: 1337, column: 40, scope: !9070)
!9227 = !DILocation(line: 1337, column: 47, scope: !9070)
!9228 = !DILocation(line: 1337, column: 34, scope: !9070)
!9229 = !DILocation(line: 1337, column: 2, scope: !9070)
!9230 = !DILocation(line: 1337, column: 9, scope: !9070)
!9231 = !DILocation(line: 1337, column: 17, scope: !9070)
!9232 = !DILocation(line: 1338, column: 2, scope: !9070)
!9233 = !DILocation(line: 1338, column: 9, scope: !9070)
!9234 = !DILocation(line: 1338, column: 14, scope: !9070)
!9235 = !DILocation(line: 1339, column: 25, scope: !9070)
!9236 = !DILocation(line: 1339, column: 34, scope: !9070)
!9237 = !DILocation(line: 1339, column: 43, scope: !9070)
!9238 = !DILocation(line: 1339, column: 41, scope: !9070)
!9239 = !DILocation(line: 1339, column: 2, scope: !9070)
!9240 = !DILocation(line: 1339, column: 9, scope: !9070)
!9241 = !DILocation(line: 1339, column: 22, scope: !9070)
!9242 = !DILocation(line: 1340, column: 2, scope: !9070)
!9243 = !DILocation(line: 1340, column: 9, scope: !9070)
!9244 = !DILocation(line: 1340, column: 22, scope: !9070)
!9245 = !DILocation(line: 1342, column: 15, scope: !9070)
!9246 = !DILocation(line: 1342, column: 2, scope: !9070)
!9247 = !DILocation(line: 1342, column: 9, scope: !9070)
!9248 = !DILocation(line: 1342, column: 13, scope: !9070)
!9249 = !DILocation(line: 1343, column: 2, scope: !9070)
!9250 = !DILocation(line: 1343, column: 9, scope: !9070)
!9251 = !DILocation(line: 1343, column: 13, scope: !9070)
!9252 = !DILocation(line: 1345, column: 6, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1345, column: 6)
!9254 = !DILocation(line: 1345, column: 15, scope: !9253)
!9255 = !DILocation(line: 1345, column: 6, scope: !9070)
!9256 = !DILocation(line: 1346, column: 3, scope: !9253)
!9257 = !DILocation(line: 1346, column: 10, scope: !9253)
!9258 = !DILocation(line: 1346, column: 14, scope: !9253)
!9259 = !DILocation(line: 1348, column: 3, scope: !9253)
!9260 = !DILocation(line: 1348, column: 10, scope: !9253)
!9261 = !DILocation(line: 1348, column: 17, scope: !9253)
!9262 = !DILocation(line: 1350, column: 24, scope: !9070)
!9263 = !DILocation(line: 1350, column: 31, scope: !9070)
!9264 = !DILocation(line: 1350, column: 39, scope: !9070)
!9265 = !DILocation(line: 1350, column: 46, scope: !9070)
!9266 = !DILocation(line: 1350, column: 53, scope: !9070)
!9267 = !DILocation(line: 1350, column: 9, scope: !9070)
!9268 = !DILocation(line: 1350, column: 2, scope: !9070)
!9269 = !DILocation(line: 1351, column: 1, scope: !9070)
!9270 = distinct !DISubprogram(name: "edma_prep_slave_sg", scope: !3, file: !3, line: 1066, type: !4398, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!9271 = !DILocalVariable(name: "chan", arg: 1, scope: !9270, file: !3, line: 1067, type: !316)
!9272 = !DILocation(line: 1067, column: 19, scope: !9270)
!9273 = !DILocalVariable(name: "sgl", arg: 2, scope: !9270, file: !3, line: 1067, type: !4383)
!9274 = !DILocation(line: 1067, column: 45, scope: !9270)
!9275 = !DILocalVariable(name: "sg_len", arg: 3, scope: !9270, file: !3, line: 1068, type: !7)
!9276 = !DILocation(line: 1068, column: 15, scope: !9270)
!9277 = !DILocalVariable(name: "direction", arg: 4, scope: !9270, file: !3, line: 1068, type: !179)
!9278 = !DILocation(line: 1068, column: 51, scope: !9270)
!9279 = !DILocalVariable(name: "tx_flags", arg: 5, scope: !9270, file: !3, line: 1069, type: !265)
!9280 = !DILocation(line: 1069, column: 16, scope: !9270)
!9281 = !DILocalVariable(name: "context", arg: 6, scope: !9270, file: !3, line: 1069, type: !258)
!9282 = !DILocation(line: 1069, column: 32, scope: !9270)
!9283 = !DILocalVariable(name: "echan", scope: !9270, file: !3, line: 1071, type: !4572)
!9284 = !DILocation(line: 1071, column: 20, scope: !9270)
!9285 = !DILocation(line: 1071, column: 41, scope: !9270)
!9286 = !DILocation(line: 1071, column: 28, scope: !9270)
!9287 = !DILocalVariable(name: "dev", scope: !9270, file: !3, line: 1072, type: !345)
!9288 = !DILocation(line: 1072, column: 17, scope: !9270)
!9289 = !DILocation(line: 1072, column: 23, scope: !9270)
!9290 = !DILocation(line: 1072, column: 29, scope: !9270)
!9291 = !DILocation(line: 1072, column: 37, scope: !9270)
!9292 = !DILocalVariable(name: "edesc", scope: !9270, file: !3, line: 1073, type: !4561)
!9293 = !DILocation(line: 1073, column: 20, scope: !9270)
!9294 = !DILocalVariable(name: "src_addr", scope: !9270, file: !3, line: 1074, type: !1073)
!9295 = !DILocation(line: 1074, column: 13, scope: !9270)
!9296 = !DILocalVariable(name: "dst_addr", scope: !9270, file: !3, line: 1074, type: !1073)
!9297 = !DILocation(line: 1074, column: 27, scope: !9270)
!9298 = !DILocalVariable(name: "dev_width", scope: !9270, file: !3, line: 1075, type: !186)
!9299 = !DILocation(line: 1075, column: 26, scope: !9270)
!9300 = !DILocalVariable(name: "burst", scope: !9270, file: !3, line: 1076, type: !244)
!9301 = !DILocation(line: 1076, column: 6, scope: !9270)
!9302 = !DILocalVariable(name: "sg", scope: !9270, file: !3, line: 1077, type: !4383)
!9303 = !DILocation(line: 1077, column: 22, scope: !9270)
!9304 = !DILocalVariable(name: "i", scope: !9270, file: !3, line: 1078, type: !130)
!9305 = !DILocation(line: 1078, column: 6, scope: !9270)
!9306 = !DILocalVariable(name: "nslots", scope: !9270, file: !3, line: 1078, type: !130)
!9307 = !DILocation(line: 1078, column: 9, scope: !9270)
!9308 = !DILocalVariable(name: "ret", scope: !9270, file: !3, line: 1078, type: !130)
!9309 = !DILocation(line: 1078, column: 17, scope: !9270)
!9310 = !DILocation(line: 1080, column: 6, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 1080, column: 6)
!9312 = !DILocation(line: 1080, column: 6, scope: !9270)
!9313 = !DILocation(line: 1081, column: 3, scope: !9311)
!9314 = !DILocation(line: 1083, column: 6, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 1083, column: 6)
!9316 = !DILocation(line: 1083, column: 16, scope: !9315)
!9317 = !DILocation(line: 1083, column: 6, scope: !9270)
!9318 = !DILocation(line: 1084, column: 14, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9315, file: !3, line: 1083, column: 35)
!9320 = !DILocation(line: 1084, column: 21, scope: !9319)
!9321 = !DILocation(line: 1084, column: 25, scope: !9319)
!9322 = !DILocation(line: 1084, column: 12, scope: !9319)
!9323 = !DILocation(line: 1085, column: 15, scope: !9319)
!9324 = !DILocation(line: 1085, column: 22, scope: !9319)
!9325 = !DILocation(line: 1085, column: 26, scope: !9319)
!9326 = !DILocation(line: 1085, column: 13, scope: !9319)
!9327 = !DILocation(line: 1086, column: 11, scope: !9319)
!9328 = !DILocation(line: 1086, column: 18, scope: !9319)
!9329 = !DILocation(line: 1086, column: 22, scope: !9319)
!9330 = !DILocation(line: 1086, column: 9, scope: !9319)
!9331 = !DILocation(line: 1087, column: 2, scope: !9319)
!9332 = !DILocation(line: 1087, column: 13, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9315, file: !3, line: 1087, column: 13)
!9334 = !DILocation(line: 1087, column: 23, scope: !9333)
!9335 = !DILocation(line: 1087, column: 13, scope: !9315)
!9336 = !DILocation(line: 1088, column: 14, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 1087, column: 42)
!9338 = !DILocation(line: 1088, column: 21, scope: !9337)
!9339 = !DILocation(line: 1088, column: 25, scope: !9337)
!9340 = !DILocation(line: 1088, column: 12, scope: !9337)
!9341 = !DILocation(line: 1089, column: 15, scope: !9337)
!9342 = !DILocation(line: 1089, column: 22, scope: !9337)
!9343 = !DILocation(line: 1089, column: 26, scope: !9337)
!9344 = !DILocation(line: 1089, column: 13, scope: !9337)
!9345 = !DILocation(line: 1090, column: 11, scope: !9337)
!9346 = !DILocation(line: 1090, column: 18, scope: !9337)
!9347 = !DILocation(line: 1090, column: 22, scope: !9337)
!9348 = !DILocation(line: 1090, column: 9, scope: !9337)
!9349 = !DILocation(line: 1091, column: 2, scope: !9337)
!9350 = !DILocation(line: 1092, column: 3, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 1091, column: 9)
!9352 = !DILocation(line: 1093, column: 3, scope: !9351)
!9353 = !DILocation(line: 1096, column: 6, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 1096, column: 6)
!9355 = !DILocation(line: 1096, column: 16, scope: !9354)
!9356 = !DILocation(line: 1096, column: 6, scope: !9270)
!9357 = !DILocation(line: 1097, column: 3, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9354, file: !3, line: 1096, column: 49)
!9359 = !DILocation(line: 1098, column: 3, scope: !9358)
!9360 = !DILocation(line: 1101, column: 18, scope: !9270)
!9361 = !DILocation(line: 1101, column: 10, scope: !9270)
!9362 = !DILocation(line: 1101, column: 8, scope: !9270)
!9363 = !DILocation(line: 1102, column: 7, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 1102, column: 6)
!9365 = !DILocation(line: 1102, column: 6, scope: !9270)
!9366 = !DILocation(line: 1103, column: 3, scope: !9364)
!9367 = !DILocation(line: 1105, column: 19, scope: !9270)
!9368 = !DILocation(line: 1105, column: 2, scope: !9270)
!9369 = !DILocation(line: 1105, column: 9, scope: !9270)
!9370 = !DILocation(line: 1105, column: 17, scope: !9270)
!9371 = !DILocation(line: 1106, column: 2, scope: !9270)
!9372 = !DILocation(line: 1106, column: 9, scope: !9270)
!9373 = !DILocation(line: 1106, column: 17, scope: !9270)
!9374 = !DILocation(line: 1107, column: 21, scope: !9270)
!9375 = !DILocation(line: 1107, column: 2, scope: !9270)
!9376 = !DILocation(line: 1107, column: 9, scope: !9270)
!9377 = !DILocation(line: 1107, column: 19, scope: !9270)
!9378 = !DILocation(line: 1108, column: 17, scope: !9270)
!9379 = !DILocation(line: 1108, column: 2, scope: !9270)
!9380 = !DILocation(line: 1108, column: 9, scope: !9270)
!9381 = !DILocation(line: 1108, column: 15, scope: !9270)
!9382 = !DILocalVariable(name: "__UNIQUE_ID___x251", scope: !9383, file: !3, line: 1111, type: !7)
!9383 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 1111, column: 11)
!9384 = !DILocation(line: 1111, column: 11, scope: !9383)
!9385 = !DILocalVariable(name: "__UNIQUE_ID___y252", scope: !9383, file: !3, line: 1111, type: !7)
!9386 = !DILocation(line: 1111, column: 9, scope: !9270)
!9387 = !DILocation(line: 1113, column: 9, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 1113, column: 2)
!9389 = !DILocation(line: 1113, column: 7, scope: !9388)
!9390 = !DILocation(line: 1113, column: 14, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9388, file: !3, line: 1113, column: 2)
!9392 = !DILocation(line: 1113, column: 18, scope: !9391)
!9393 = !DILocation(line: 1113, column: 16, scope: !9391)
!9394 = !DILocation(line: 1113, column: 2, scope: !9388)
!9395 = !DILocation(line: 1114, column: 7, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9397, file: !3, line: 1114, column: 7)
!9397 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 1113, column: 31)
!9398 = !DILocation(line: 1114, column: 14, scope: !9396)
!9399 = !DILocation(line: 1114, column: 19, scope: !9396)
!9400 = !DILocation(line: 1114, column: 22, scope: !9396)
!9401 = !DILocation(line: 1114, column: 7, scope: !9397)
!9402 = !DILocation(line: 1116, column: 21, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 1114, column: 27)
!9404 = !DILocation(line: 1116, column: 28, scope: !9403)
!9405 = !DILocation(line: 1116, column: 5, scope: !9403)
!9406 = !DILocation(line: 1115, column: 4, scope: !9403)
!9407 = !DILocation(line: 1115, column: 11, scope: !9403)
!9408 = !DILocation(line: 1115, column: 16, scope: !9403)
!9409 = !DILocation(line: 1115, column: 19, scope: !9403)
!9410 = !DILocation(line: 1117, column: 8, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 1117, column: 8)
!9412 = !DILocation(line: 1117, column: 15, scope: !9411)
!9413 = !DILocation(line: 1117, column: 20, scope: !9411)
!9414 = !DILocation(line: 1117, column: 23, scope: !9411)
!9415 = !DILocation(line: 1117, column: 8, scope: !9403)
!9416 = !DILocation(line: 1118, column: 11, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9411, file: !3, line: 1117, column: 28)
!9418 = !DILocation(line: 1118, column: 5, scope: !9417)
!9419 = !DILocation(line: 1119, column: 5, scope: !9417)
!9420 = !DILocation(line: 1121, column: 5, scope: !9417)
!9421 = !DILocation(line: 1123, column: 3, scope: !9403)
!9422 = !DILocation(line: 1124, column: 2, scope: !9397)
!9423 = !DILocation(line: 1113, column: 27, scope: !9391)
!9424 = !DILocation(line: 1113, column: 2, scope: !9391)
!9425 = distinct !{!9425, !9394, !9426}
!9426 = !DILocation(line: 1124, column: 2, scope: !9388)
!9427 = !DILocation(line: 1127, column: 2, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 1127, column: 2)
!9429 = !DILocation(line: 1127, column: 2, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 1127, column: 2)
!9431 = !DILocation(line: 1129, column: 7, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 1129, column: 7)
!9433 = distinct !DILexicalBlock(scope: !9430, file: !3, line: 1127, column: 34)
!9434 = !DILocation(line: 1129, column: 17, scope: !9432)
!9435 = !DILocation(line: 1129, column: 7, scope: !9433)
!9436 = !DILocation(line: 1130, column: 15, scope: !9432)
!9437 = !DILocation(line: 1130, column: 13, scope: !9432)
!9438 = !DILocation(line: 1130, column: 4, scope: !9432)
!9439 = !DILocation(line: 1132, column: 15, scope: !9432)
!9440 = !DILocation(line: 1132, column: 13, scope: !9432)
!9441 = !DILocation(line: 1134, column: 26, scope: !9433)
!9442 = !DILocation(line: 1134, column: 33, scope: !9433)
!9443 = !DILocation(line: 1134, column: 40, scope: !9433)
!9444 = !DILocation(line: 1134, column: 45, scope: !9433)
!9445 = !DILocation(line: 1134, column: 49, scope: !9433)
!9446 = !DILocation(line: 1135, column: 12, scope: !9433)
!9447 = !DILocation(line: 1135, column: 22, scope: !9433)
!9448 = !DILocation(line: 1135, column: 29, scope: !9433)
!9449 = !DILocation(line: 1136, column: 12, scope: !9433)
!9450 = !DILocation(line: 1136, column: 28, scope: !9433)
!9451 = !DILocation(line: 1134, column: 9, scope: !9433)
!9452 = !DILocation(line: 1134, column: 7, scope: !9433)
!9453 = !DILocation(line: 1137, column: 7, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 1137, column: 7)
!9455 = !DILocation(line: 1137, column: 11, scope: !9454)
!9456 = !DILocation(line: 1137, column: 7, scope: !9433)
!9457 = !DILocation(line: 1138, column: 10, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 1137, column: 16)
!9459 = !DILocation(line: 1138, column: 4, scope: !9458)
!9460 = !DILocation(line: 1139, column: 4, scope: !9458)
!9461 = !DILocation(line: 1142, column: 19, scope: !9433)
!9462 = !DILocation(line: 1142, column: 3, scope: !9433)
!9463 = !DILocation(line: 1142, column: 10, scope: !9433)
!9464 = !DILocation(line: 1142, column: 17, scope: !9433)
!9465 = !DILocation(line: 1143, column: 21, scope: !9433)
!9466 = !DILocation(line: 1143, column: 3, scope: !9433)
!9467 = !DILocation(line: 1143, column: 10, scope: !9433)
!9468 = !DILocation(line: 1143, column: 18, scope: !9433)
!9469 = !DILocation(line: 1145, column: 7, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 1145, column: 7)
!9471 = !DILocation(line: 1145, column: 12, scope: !9470)
!9472 = !DILocation(line: 1145, column: 19, scope: !9470)
!9473 = !DILocation(line: 1145, column: 9, scope: !9470)
!9474 = !DILocation(line: 1145, column: 7, scope: !9433)
!9475 = !DILocation(line: 1147, column: 4, scope: !9470)
!9476 = !DILocation(line: 1147, column: 11, scope: !9470)
!9477 = !DILocation(line: 1147, column: 16, scope: !9470)
!9478 = !DILocation(line: 1147, column: 19, scope: !9470)
!9479 = !DILocation(line: 1147, column: 25, scope: !9470)
!9480 = !DILocation(line: 1147, column: 29, scope: !9470)
!9481 = !DILocation(line: 1148, column: 15, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 1148, column: 12)
!9483 = !DILocation(line: 1148, column: 16, scope: !9482)
!9484 = !DILocation(line: 1148, column: 20, scope: !9482)
!9485 = !DILocation(line: 1148, column: 12, scope: !9470)
!9486 = !DILocation(line: 1155, column: 4, scope: !9482)
!9487 = !DILocation(line: 1155, column: 11, scope: !9482)
!9488 = !DILocation(line: 1155, column: 16, scope: !9482)
!9489 = !DILocation(line: 1155, column: 19, scope: !9482)
!9490 = !DILocation(line: 1155, column: 25, scope: !9482)
!9491 = !DILocation(line: 1155, column: 29, scope: !9482)
!9492 = !DILocation(line: 1156, column: 2, scope: !9433)
!9493 = distinct !{!9493, !9427, !9494}
!9494 = !DILocation(line: 1156, column: 2, scope: !9428)
!9495 = !DILocation(line: 1157, column: 24, scope: !9270)
!9496 = !DILocation(line: 1157, column: 31, scope: !9270)
!9497 = !DILocation(line: 1157, column: 2, scope: !9270)
!9498 = !DILocation(line: 1157, column: 9, scope: !9270)
!9499 = !DILocation(line: 1157, column: 22, scope: !9270)
!9500 = !DILocation(line: 1159, column: 24, scope: !9270)
!9501 = !DILocation(line: 1159, column: 31, scope: !9270)
!9502 = !DILocation(line: 1159, column: 39, scope: !9270)
!9503 = !DILocation(line: 1159, column: 46, scope: !9270)
!9504 = !DILocation(line: 1159, column: 53, scope: !9270)
!9505 = !DILocation(line: 1159, column: 9, scope: !9270)
!9506 = !DILocation(line: 1159, column: 2, scope: !9270)
!9507 = !DILocation(line: 1160, column: 1, scope: !9270)
!9508 = distinct !DISubprogram(name: "edma_prep_dma_cyclic", scope: !3, file: !3, line: 1353, type: !4402, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!9509 = !DILocalVariable(name: "chan", arg: 1, scope: !9508, file: !3, line: 1354, type: !316)
!9510 = !DILocation(line: 1354, column: 19, scope: !9508)
!9511 = !DILocalVariable(name: "buf_addr", arg: 2, scope: !9508, file: !3, line: 1354, type: !1073)
!9512 = !DILocation(line: 1354, column: 36, scope: !9508)
!9513 = !DILocalVariable(name: "buf_len", arg: 3, scope: !9508, file: !3, line: 1354, type: !447)
!9514 = !DILocation(line: 1354, column: 53, scope: !9508)
!9515 = !DILocalVariable(name: "period_len", arg: 4, scope: !9508, file: !3, line: 1355, type: !447)
!9516 = !DILocation(line: 1355, column: 9, scope: !9508)
!9517 = !DILocalVariable(name: "direction", arg: 5, scope: !9508, file: !3, line: 1355, type: !179)
!9518 = !DILocation(line: 1355, column: 49, scope: !9508)
!9519 = !DILocalVariable(name: "tx_flags", arg: 6, scope: !9508, file: !3, line: 1356, type: !265)
!9520 = !DILocation(line: 1356, column: 16, scope: !9508)
!9521 = !DILocalVariable(name: "echan", scope: !9508, file: !3, line: 1358, type: !4572)
!9522 = !DILocation(line: 1358, column: 20, scope: !9508)
!9523 = !DILocation(line: 1358, column: 41, scope: !9508)
!9524 = !DILocation(line: 1358, column: 28, scope: !9508)
!9525 = !DILocalVariable(name: "dev", scope: !9508, file: !3, line: 1359, type: !345)
!9526 = !DILocation(line: 1359, column: 17, scope: !9508)
!9527 = !DILocation(line: 1359, column: 23, scope: !9508)
!9528 = !DILocation(line: 1359, column: 29, scope: !9508)
!9529 = !DILocation(line: 1359, column: 37, scope: !9508)
!9530 = !DILocalVariable(name: "edesc", scope: !9508, file: !3, line: 1360, type: !4561)
!9531 = !DILocation(line: 1360, column: 20, scope: !9508)
!9532 = !DILocalVariable(name: "src_addr", scope: !9508, file: !3, line: 1361, type: !1073)
!9533 = !DILocation(line: 1361, column: 13, scope: !9508)
!9534 = !DILocalVariable(name: "dst_addr", scope: !9508, file: !3, line: 1361, type: !1073)
!9535 = !DILocation(line: 1361, column: 23, scope: !9508)
!9536 = !DILocalVariable(name: "dev_width", scope: !9508, file: !3, line: 1362, type: !186)
!9537 = !DILocation(line: 1362, column: 26, scope: !9508)
!9538 = !DILocalVariable(name: "use_intermediate", scope: !9508, file: !3, line: 1363, type: !314)
!9539 = !DILocation(line: 1363, column: 7, scope: !9508)
!9540 = !DILocalVariable(name: "burst", scope: !9508, file: !3, line: 1364, type: !244)
!9541 = !DILocation(line: 1364, column: 6, scope: !9508)
!9542 = !DILocalVariable(name: "i", scope: !9508, file: !3, line: 1365, type: !130)
!9543 = !DILocation(line: 1365, column: 6, scope: !9508)
!9544 = !DILocalVariable(name: "ret", scope: !9508, file: !3, line: 1365, type: !130)
!9545 = !DILocation(line: 1365, column: 9, scope: !9508)
!9546 = !DILocalVariable(name: "nslots", scope: !9508, file: !3, line: 1365, type: !130)
!9547 = !DILocation(line: 1365, column: 14, scope: !9508)
!9548 = !DILocation(line: 1367, column: 6, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 1367, column: 6)
!9550 = !DILocation(line: 1367, column: 6, scope: !9508)
!9551 = !DILocation(line: 1368, column: 3, scope: !9549)
!9552 = !DILocation(line: 1370, column: 6, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 1370, column: 6)
!9554 = !DILocation(line: 1370, column: 16, scope: !9553)
!9555 = !DILocation(line: 1370, column: 6, scope: !9508)
!9556 = !DILocation(line: 1371, column: 14, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9553, file: !3, line: 1370, column: 35)
!9558 = !DILocation(line: 1371, column: 21, scope: !9557)
!9559 = !DILocation(line: 1371, column: 25, scope: !9557)
!9560 = !DILocation(line: 1371, column: 12, scope: !9557)
!9561 = !DILocation(line: 1372, column: 14, scope: !9557)
!9562 = !DILocation(line: 1372, column: 12, scope: !9557)
!9563 = !DILocation(line: 1373, column: 15, scope: !9557)
!9564 = !DILocation(line: 1373, column: 22, scope: !9557)
!9565 = !DILocation(line: 1373, column: 26, scope: !9557)
!9566 = !DILocation(line: 1373, column: 13, scope: !9557)
!9567 = !DILocation(line: 1374, column: 11, scope: !9557)
!9568 = !DILocation(line: 1374, column: 18, scope: !9557)
!9569 = !DILocation(line: 1374, column: 22, scope: !9557)
!9570 = !DILocation(line: 1374, column: 9, scope: !9557)
!9571 = !DILocation(line: 1375, column: 2, scope: !9557)
!9572 = !DILocation(line: 1375, column: 13, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9553, file: !3, line: 1375, column: 13)
!9574 = !DILocation(line: 1375, column: 23, scope: !9573)
!9575 = !DILocation(line: 1375, column: 13, scope: !9553)
!9576 = !DILocation(line: 1376, column: 14, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 1375, column: 42)
!9578 = !DILocation(line: 1376, column: 12, scope: !9577)
!9579 = !DILocation(line: 1377, column: 14, scope: !9577)
!9580 = !DILocation(line: 1377, column: 21, scope: !9577)
!9581 = !DILocation(line: 1377, column: 25, scope: !9577)
!9582 = !DILocation(line: 1377, column: 12, scope: !9577)
!9583 = !DILocation(line: 1378, column: 15, scope: !9577)
!9584 = !DILocation(line: 1378, column: 22, scope: !9577)
!9585 = !DILocation(line: 1378, column: 26, scope: !9577)
!9586 = !DILocation(line: 1378, column: 13, scope: !9577)
!9587 = !DILocation(line: 1379, column: 11, scope: !9577)
!9588 = !DILocation(line: 1379, column: 18, scope: !9577)
!9589 = !DILocation(line: 1379, column: 22, scope: !9577)
!9590 = !DILocation(line: 1379, column: 9, scope: !9577)
!9591 = !DILocation(line: 1380, column: 2, scope: !9577)
!9592 = !DILocation(line: 1381, column: 3, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 1380, column: 9)
!9594 = !DILocation(line: 1382, column: 3, scope: !9593)
!9595 = !DILocation(line: 1385, column: 6, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 1385, column: 6)
!9597 = !DILocation(line: 1385, column: 16, scope: !9596)
!9598 = !DILocation(line: 1385, column: 6, scope: !9508)
!9599 = !DILocation(line: 1386, column: 3, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9596, file: !3, line: 1385, column: 49)
!9601 = !DILocation(line: 1387, column: 3, scope: !9600)
!9602 = !DILocation(line: 1390, column: 6, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 1390, column: 6)
!9604 = !DILocation(line: 1390, column: 6, scope: !9508)
!9605 = !DILocation(line: 1391, column: 3, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 1390, column: 38)
!9607 = !DILocation(line: 1392, column: 3, scope: !9606)
!9608 = !DILocation(line: 1395, column: 12, scope: !9508)
!9609 = !DILocation(line: 1395, column: 22, scope: !9508)
!9610 = !DILocation(line: 1395, column: 20, scope: !9508)
!9611 = !DILocation(line: 1395, column: 34, scope: !9508)
!9612 = !DILocation(line: 1395, column: 11, scope: !9508)
!9613 = !DILocation(line: 1395, column: 9, scope: !9508)
!9614 = !DILocation(line: 1405, column: 6, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 1405, column: 6)
!9616 = !DILocation(line: 1405, column: 13, scope: !9615)
!9617 = !DILocation(line: 1405, column: 6, scope: !9508)
!9618 = !DILocation(line: 1412, column: 7, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 1412, column: 7)
!9620 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 1405, column: 26)
!9621 = !DILocation(line: 1412, column: 16, scope: !9619)
!9622 = !DILocation(line: 1412, column: 13, scope: !9619)
!9623 = !DILocation(line: 1412, column: 7, scope: !9620)
!9624 = !DILocation(line: 1413, column: 17, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 1412, column: 28)
!9626 = !DILocation(line: 1413, column: 15, scope: !9625)
!9627 = !DILocation(line: 1414, column: 11, scope: !9625)
!9628 = !DILocation(line: 1415, column: 21, scope: !9625)
!9629 = !DILocation(line: 1416, column: 3, scope: !9625)
!9630 = !DILocation(line: 1417, column: 4, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 1416, column: 10)
!9632 = !DILocation(line: 1419, column: 2, scope: !9620)
!9633 = !DILocation(line: 1421, column: 18, scope: !9508)
!9634 = !DILocation(line: 1421, column: 10, scope: !9508)
!9635 = !DILocation(line: 1421, column: 8, scope: !9508)
!9636 = !DILocation(line: 1422, column: 7, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 1422, column: 6)
!9638 = !DILocation(line: 1422, column: 6, scope: !9508)
!9639 = !DILocation(line: 1423, column: 3, scope: !9637)
!9640 = !DILocation(line: 1425, column: 2, scope: !9508)
!9641 = !DILocation(line: 1425, column: 9, scope: !9508)
!9642 = !DILocation(line: 1425, column: 16, scope: !9508)
!9643 = !DILocation(line: 1426, column: 19, scope: !9508)
!9644 = !DILocation(line: 1426, column: 2, scope: !9508)
!9645 = !DILocation(line: 1426, column: 9, scope: !9508)
!9646 = !DILocation(line: 1426, column: 17, scope: !9508)
!9647 = !DILocation(line: 1427, column: 41, scope: !9508)
!9648 = !DILocation(line: 1427, column: 19, scope: !9508)
!9649 = !DILocation(line: 1427, column: 26, scope: !9508)
!9650 = !DILocation(line: 1427, column: 39, scope: !9508)
!9651 = !DILocation(line: 1427, column: 2, scope: !9508)
!9652 = !DILocation(line: 1427, column: 9, scope: !9508)
!9653 = !DILocation(line: 1427, column: 17, scope: !9508)
!9654 = !DILocation(line: 1428, column: 21, scope: !9508)
!9655 = !DILocation(line: 1428, column: 2, scope: !9508)
!9656 = !DILocation(line: 1428, column: 9, scope: !9508)
!9657 = !DILocation(line: 1428, column: 19, scope: !9508)
!9658 = !DILocation(line: 1429, column: 17, scope: !9508)
!9659 = !DILocation(line: 1429, column: 2, scope: !9508)
!9660 = !DILocation(line: 1429, column: 9, scope: !9508)
!9661 = !DILocation(line: 1429, column: 15, scope: !9508)
!9662 = !DILocation(line: 1434, column: 9, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 1434, column: 2)
!9664 = !DILocation(line: 1434, column: 7, scope: !9663)
!9665 = !DILocation(line: 1434, column: 14, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 1434, column: 2)
!9667 = !DILocation(line: 1434, column: 18, scope: !9666)
!9668 = !DILocation(line: 1434, column: 16, scope: !9666)
!9669 = !DILocation(line: 1434, column: 2, scope: !9663)
!9670 = !DILocation(line: 1436, column: 7, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 1436, column: 7)
!9672 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 1434, column: 31)
!9673 = !DILocation(line: 1436, column: 14, scope: !9671)
!9674 = !DILocation(line: 1436, column: 19, scope: !9671)
!9675 = !DILocation(line: 1436, column: 22, scope: !9671)
!9676 = !DILocation(line: 1436, column: 7, scope: !9672)
!9677 = !DILocation(line: 1438, column: 21, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9671, file: !3, line: 1436, column: 27)
!9679 = !DILocation(line: 1438, column: 28, scope: !9678)
!9680 = !DILocation(line: 1438, column: 5, scope: !9678)
!9681 = !DILocation(line: 1437, column: 4, scope: !9678)
!9682 = !DILocation(line: 1437, column: 11, scope: !9678)
!9683 = !DILocation(line: 1437, column: 16, scope: !9678)
!9684 = !DILocation(line: 1437, column: 19, scope: !9678)
!9685 = !DILocation(line: 1439, column: 8, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9678, file: !3, line: 1439, column: 8)
!9687 = !DILocation(line: 1439, column: 15, scope: !9686)
!9688 = !DILocation(line: 1439, column: 20, scope: !9686)
!9689 = !DILocation(line: 1439, column: 23, scope: !9686)
!9690 = !DILocation(line: 1439, column: 8, scope: !9678)
!9691 = !DILocation(line: 1440, column: 11, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 1439, column: 28)
!9693 = !DILocation(line: 1440, column: 5, scope: !9692)
!9694 = !DILocation(line: 1441, column: 5, scope: !9692)
!9695 = !DILocation(line: 1443, column: 5, scope: !9692)
!9696 = !DILocation(line: 1445, column: 3, scope: !9678)
!9697 = !DILocation(line: 1447, column: 7, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 1447, column: 7)
!9699 = !DILocation(line: 1447, column: 12, scope: !9698)
!9700 = !DILocation(line: 1447, column: 19, scope: !9698)
!9701 = !DILocation(line: 1447, column: 9, scope: !9698)
!9702 = !DILocation(line: 1447, column: 7, scope: !9672)
!9703 = !DILocation(line: 1448, column: 12, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9698, file: !3, line: 1447, column: 24)
!9705 = !DILocation(line: 1448, column: 19, scope: !9704)
!9706 = !DILocation(line: 1448, column: 24, scope: !9704)
!9707 = !DILocation(line: 1448, column: 4, scope: !9704)
!9708 = !DILocation(line: 1448, column: 29, scope: !9704)
!9709 = !DILocation(line: 1448, column: 36, scope: !9704)
!9710 = !DILocation(line: 1450, column: 4, scope: !9704)
!9711 = !DILocation(line: 1453, column: 26, scope: !9672)
!9712 = !DILocation(line: 1453, column: 33, scope: !9672)
!9713 = !DILocation(line: 1453, column: 40, scope: !9672)
!9714 = !DILocation(line: 1453, column: 45, scope: !9672)
!9715 = !DILocation(line: 1453, column: 49, scope: !9672)
!9716 = !DILocation(line: 1454, column: 12, scope: !9672)
!9717 = !DILocation(line: 1454, column: 22, scope: !9672)
!9718 = !DILocation(line: 1454, column: 29, scope: !9672)
!9719 = !DILocation(line: 1454, column: 40, scope: !9672)
!9720 = !DILocation(line: 1455, column: 12, scope: !9672)
!9721 = !DILocation(line: 1453, column: 9, scope: !9672)
!9722 = !DILocation(line: 1453, column: 7, scope: !9672)
!9723 = !DILocation(line: 1456, column: 7, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 1456, column: 7)
!9725 = !DILocation(line: 1456, column: 11, scope: !9724)
!9726 = !DILocation(line: 1456, column: 7, scope: !9672)
!9727 = !DILocation(line: 1457, column: 10, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9724, file: !3, line: 1456, column: 16)
!9729 = !DILocation(line: 1457, column: 4, scope: !9728)
!9730 = !DILocation(line: 1458, column: 4, scope: !9728)
!9731 = !DILocation(line: 1461, column: 7, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 1461, column: 7)
!9733 = !DILocation(line: 1461, column: 17, scope: !9732)
!9734 = !DILocation(line: 1461, column: 7, scope: !9672)
!9735 = !DILocation(line: 1462, column: 16, scope: !9732)
!9736 = !DILocation(line: 1462, column: 13, scope: !9732)
!9737 = !DILocation(line: 1462, column: 4, scope: !9732)
!9738 = !DILocation(line: 1464, column: 16, scope: !9732)
!9739 = !DILocation(line: 1464, column: 13, scope: !9732)
!9740 = !DILocation(line: 1489, column: 19, scope: !9672)
!9741 = !DILocation(line: 1489, column: 3, scope: !9672)
!9742 = !DILocation(line: 1489, column: 10, scope: !9672)
!9743 = !DILocation(line: 1489, column: 17, scope: !9672)
!9744 = !DILocation(line: 1494, column: 7, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 1494, column: 7)
!9746 = !DILocation(line: 1494, column: 16, scope: !9745)
!9747 = !DILocation(line: 1494, column: 7, scope: !9672)
!9748 = !DILocation(line: 1495, column: 4, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 1494, column: 38)
!9750 = !DILocation(line: 1495, column: 11, scope: !9749)
!9751 = !DILocation(line: 1495, column: 16, scope: !9749)
!9752 = !DILocation(line: 1495, column: 19, scope: !9749)
!9753 = !DILocation(line: 1495, column: 25, scope: !9749)
!9754 = !DILocation(line: 1495, column: 29, scope: !9749)
!9755 = !DILocation(line: 1498, column: 8, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 1498, column: 8)
!9757 = !DILocation(line: 1498, column: 8, scope: !9749)
!9758 = !DILocation(line: 1499, column: 5, scope: !9756)
!9759 = !DILocation(line: 1499, column: 12, scope: !9756)
!9760 = !DILocation(line: 1499, column: 17, scope: !9756)
!9761 = !DILocation(line: 1499, column: 20, scope: !9756)
!9762 = !DILocation(line: 1499, column: 26, scope: !9756)
!9763 = !DILocation(line: 1499, column: 30, scope: !9756)
!9764 = !DILocation(line: 1500, column: 3, scope: !9749)
!9765 = !DILocation(line: 1501, column: 2, scope: !9672)
!9766 = !DILocation(line: 1434, column: 27, scope: !9666)
!9767 = !DILocation(line: 1434, column: 2, scope: !9666)
!9768 = distinct !{!9768, !9669, !9769}
!9769 = !DILocation(line: 1501, column: 2, scope: !9663)
!9770 = !DILocation(line: 1504, column: 7, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 1504, column: 6)
!9772 = !DILocation(line: 1504, column: 14, scope: !9771)
!9773 = !DILocation(line: 1504, column: 6, scope: !9508)
!9774 = !DILocation(line: 1505, column: 30, scope: !9771)
!9775 = !DILocation(line: 1505, column: 3, scope: !9771)
!9776 = !DILocation(line: 1507, column: 24, scope: !9508)
!9777 = !DILocation(line: 1507, column: 31, scope: !9508)
!9778 = !DILocation(line: 1507, column: 39, scope: !9508)
!9779 = !DILocation(line: 1507, column: 46, scope: !9508)
!9780 = !DILocation(line: 1507, column: 53, scope: !9508)
!9781 = !DILocation(line: 1507, column: 9, scope: !9508)
!9782 = !DILocation(line: 1507, column: 2, scope: !9508)
!9783 = !DILocation(line: 1508, column: 1, scope: !9508)
!9784 = distinct !DISubprogram(name: "edma_alloc_chan_resources", scope: !3, file: !3, line: 1723, type: !4286, scopeLine: 1724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!9785 = !DILocalVariable(name: "chan", arg: 1, scope: !9784, file: !3, line: 1723, type: !316)
!9786 = !DILocation(line: 1723, column: 55, scope: !9784)
!9787 = !DILocalVariable(name: "echan", scope: !9784, file: !3, line: 1725, type: !4572)
!9788 = !DILocation(line: 1725, column: 20, scope: !9784)
!9789 = !DILocation(line: 1725, column: 41, scope: !9784)
!9790 = !DILocation(line: 1725, column: 28, scope: !9784)
!9791 = !DILocalVariable(name: "ecc", scope: !9784, file: !3, line: 1726, type: !4579)
!9792 = !DILocation(line: 1726, column: 18, scope: !9784)
!9793 = !DILocation(line: 1726, column: 24, scope: !9784)
!9794 = !DILocation(line: 1726, column: 31, scope: !9784)
!9795 = !DILocalVariable(name: "dev", scope: !9784, file: !3, line: 1727, type: !345)
!9796 = !DILocation(line: 1727, column: 17, scope: !9784)
!9797 = !DILocation(line: 1727, column: 23, scope: !9784)
!9798 = !DILocation(line: 1727, column: 28, scope: !9784)
!9799 = !DILocalVariable(name: "eventq_no", scope: !9784, file: !3, line: 1728, type: !128)
!9800 = !DILocation(line: 1728, column: 19, scope: !9784)
!9801 = !DILocalVariable(name: "ret", scope: !9784, file: !3, line: 1729, type: !130)
!9802 = !DILocation(line: 1729, column: 6, scope: !9784)
!9803 = !DILocation(line: 1731, column: 6, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 1731, column: 6)
!9805 = !DILocation(line: 1731, column: 13, scope: !9804)
!9806 = !DILocation(line: 1731, column: 6, scope: !9784)
!9807 = !DILocation(line: 1732, column: 15, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 1731, column: 17)
!9809 = !DILocation(line: 1732, column: 22, scope: !9808)
!9810 = !DILocation(line: 1732, column: 26, scope: !9808)
!9811 = !DILocation(line: 1732, column: 13, scope: !9808)
!9812 = !DILocation(line: 1733, column: 2, scope: !9808)
!9813 = !DILocation(line: 1733, column: 13, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 1733, column: 13)
!9815 = !DILocation(line: 1733, column: 18, scope: !9814)
!9816 = !DILocation(line: 1733, column: 13, scope: !9804)
!9817 = !DILocation(line: 1735, column: 16, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9814, file: !3, line: 1733, column: 27)
!9819 = !DILocation(line: 1735, column: 21, scope: !9818)
!9820 = !DILocation(line: 1735, column: 29, scope: !9818)
!9821 = !DILocation(line: 1735, column: 34, scope: !9818)
!9822 = !DILocation(line: 1735, column: 40, scope: !9818)
!9823 = !DILocation(line: 1735, column: 3, scope: !9818)
!9824 = !DILocation(line: 1735, column: 10, scope: !9818)
!9825 = !DILocation(line: 1735, column: 13, scope: !9818)
!9826 = !DILocation(line: 1736, column: 15, scope: !9818)
!9827 = !DILocation(line: 1736, column: 22, scope: !9818)
!9828 = !DILocation(line: 1736, column: 26, scope: !9818)
!9829 = !DILocation(line: 1736, column: 13, scope: !9818)
!9830 = !DILocation(line: 1737, column: 2, scope: !9818)
!9831 = !DILocation(line: 1739, column: 27, scope: !9784)
!9832 = !DILocation(line: 1739, column: 34, scope: !9784)
!9833 = !DILocation(line: 1739, column: 8, scope: !9784)
!9834 = !DILocation(line: 1739, column: 6, scope: !9784)
!9835 = !DILocation(line: 1740, column: 6, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 1740, column: 6)
!9837 = !DILocation(line: 1740, column: 6, scope: !9784)
!9838 = !DILocation(line: 1741, column: 10, scope: !9836)
!9839 = !DILocation(line: 1741, column: 3, scope: !9836)
!9840 = !DILocation(line: 1743, column: 35, scope: !9784)
!9841 = !DILocation(line: 1743, column: 40, scope: !9784)
!9842 = !DILocation(line: 1743, column: 47, scope: !9784)
!9843 = !DILocation(line: 1743, column: 19, scope: !9784)
!9844 = !DILocation(line: 1743, column: 2, scope: !9784)
!9845 = !DILocation(line: 1743, column: 9, scope: !9784)
!9846 = !DILocation(line: 1743, column: 17, scope: !9784)
!9847 = !DILocation(line: 1744, column: 6, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 1744, column: 6)
!9849 = !DILocation(line: 1744, column: 13, scope: !9848)
!9850 = !DILocation(line: 1744, column: 21, scope: !9848)
!9851 = !DILocation(line: 1744, column: 6, scope: !9784)
!9852 = !DILocation(line: 1745, column: 3, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 1744, column: 26)
!9854 = !DILocation(line: 1747, column: 9, scope: !9853)
!9855 = !DILocation(line: 1747, column: 16, scope: !9853)
!9856 = !DILocation(line: 1747, column: 7, scope: !9853)
!9857 = !DILocation(line: 1748, column: 3, scope: !9853)
!9858 = !DILocation(line: 1752, column: 17, scope: !9784)
!9859 = !DILocation(line: 1752, column: 24, scope: !9784)
!9860 = !DILocation(line: 1752, column: 31, scope: !9784)
!9861 = !DILocation(line: 1752, column: 2, scope: !9784)
!9862 = !DILocation(line: 1753, column: 2, scope: !9784)
!9863 = !DILocation(line: 1753, column: 9, scope: !9784)
!9864 = !DILocation(line: 1753, column: 17, scope: !9784)
!9865 = !DILocation(line: 1759, column: 2, scope: !9784)
!9866 = !DILabel(scope: !9784, name: "err_slot", file: !3, line: 1761)
!9867 = !DILocation(line: 1761, column: 1, scope: !9784)
!9868 = !DILocation(line: 1762, column: 20, scope: !9784)
!9869 = !DILocation(line: 1762, column: 2, scope: !9784)
!9870 = !DILocation(line: 1763, column: 9, scope: !9784)
!9871 = !DILocation(line: 1763, column: 2, scope: !9784)
!9872 = !DILocation(line: 1764, column: 1, scope: !9784)
!9873 = distinct !DISubprogram(name: "edma_free_chan_resources", scope: !3, file: !3, line: 1767, type: !4290, scopeLine: 1768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!9874 = !DILocalVariable(name: "chan", arg: 1, scope: !9873, file: !3, line: 1767, type: !316)
!9875 = !DILocation(line: 1767, column: 55, scope: !9873)
!9876 = !DILocalVariable(name: "echan", scope: !9873, file: !3, line: 1769, type: !4572)
!9877 = !DILocation(line: 1769, column: 20, scope: !9873)
!9878 = !DILocation(line: 1769, column: 41, scope: !9873)
!9879 = !DILocation(line: 1769, column: 28, scope: !9873)
!9880 = !DILocalVariable(name: "dev", scope: !9873, file: !3, line: 1770, type: !345)
!9881 = !DILocation(line: 1770, column: 17, scope: !9873)
!9882 = !DILocation(line: 1770, column: 23, scope: !9873)
!9883 = !DILocation(line: 1770, column: 30, scope: !9873)
!9884 = !DILocation(line: 1770, column: 35, scope: !9873)
!9885 = !DILocalVariable(name: "i", scope: !9873, file: !3, line: 1771, type: !130)
!9886 = !DILocation(line: 1771, column: 6, scope: !9873)
!9887 = !DILocation(line: 1774, column: 12, scope: !9873)
!9888 = !DILocation(line: 1774, column: 2, scope: !9873)
!9889 = !DILocation(line: 1776, column: 29, scope: !9873)
!9890 = !DILocation(line: 1776, column: 36, scope: !9873)
!9891 = !DILocation(line: 1776, column: 2, scope: !9873)
!9892 = !DILocation(line: 1779, column: 9, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9873, file: !3, line: 1779, column: 2)
!9894 = !DILocation(line: 1779, column: 7, scope: !9893)
!9895 = !DILocation(line: 1779, column: 14, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9893, file: !3, line: 1779, column: 2)
!9897 = !DILocation(line: 1779, column: 16, scope: !9896)
!9898 = !DILocation(line: 1779, column: 2, scope: !9893)
!9899 = !DILocation(line: 1780, column: 7, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 1780, column: 7)
!9901 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 1779, column: 39)
!9902 = !DILocation(line: 1780, column: 14, scope: !9900)
!9903 = !DILocation(line: 1780, column: 19, scope: !9900)
!9904 = !DILocation(line: 1780, column: 22, scope: !9900)
!9905 = !DILocation(line: 1780, column: 7, scope: !9901)
!9906 = !DILocation(line: 1781, column: 19, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 1780, column: 28)
!9908 = !DILocation(line: 1781, column: 26, scope: !9907)
!9909 = !DILocation(line: 1781, column: 31, scope: !9907)
!9910 = !DILocation(line: 1781, column: 38, scope: !9907)
!9911 = !DILocation(line: 1781, column: 43, scope: !9907)
!9912 = !DILocation(line: 1781, column: 4, scope: !9907)
!9913 = !DILocation(line: 1782, column: 4, scope: !9907)
!9914 = !DILocation(line: 1782, column: 11, scope: !9907)
!9915 = !DILocation(line: 1782, column: 16, scope: !9907)
!9916 = !DILocation(line: 1782, column: 19, scope: !9907)
!9917 = !DILocation(line: 1783, column: 3, scope: !9907)
!9918 = !DILocation(line: 1784, column: 2, scope: !9901)
!9919 = !DILocation(line: 1779, column: 35, scope: !9896)
!9920 = !DILocation(line: 1779, column: 2, scope: !9896)
!9921 = distinct !{!9921, !9898, !9922}
!9922 = !DILocation(line: 1784, column: 2, scope: !9893)
!9923 = !DILocation(line: 1787, column: 17, scope: !9873)
!9924 = !DILocation(line: 1787, column: 24, scope: !9873)
!9925 = !DILocation(line: 1787, column: 31, scope: !9873)
!9926 = !DILocation(line: 1787, column: 36, scope: !9873)
!9927 = !DILocation(line: 1787, column: 2, scope: !9873)
!9928 = !DILocation(line: 1790, column: 6, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9873, file: !3, line: 1790, column: 6)
!9930 = !DILocation(line: 1790, column: 13, scope: !9929)
!9931 = !DILocation(line: 1790, column: 6, scope: !9873)
!9932 = !DILocation(line: 1791, column: 21, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 1790, column: 22)
!9934 = !DILocation(line: 1791, column: 3, scope: !9933)
!9935 = !DILocation(line: 1792, column: 3, scope: !9933)
!9936 = !DILocation(line: 1792, column: 10, scope: !9933)
!9937 = !DILocation(line: 1792, column: 18, scope: !9933)
!9938 = !DILocation(line: 1793, column: 2, scope: !9933)
!9939 = !DILocation(line: 1795, column: 2, scope: !9873)
!9940 = !DILocation(line: 1795, column: 9, scope: !9873)
!9941 = !DILocation(line: 1795, column: 12, scope: !9873)
!9942 = !DILocation(line: 1796, column: 2, scope: !9873)
!9943 = !DILocation(line: 1796, column: 9, scope: !9873)
!9944 = !DILocation(line: 1796, column: 22, scope: !9873)
!9945 = !DILocation(line: 1800, column: 1, scope: !9873)
!9946 = distinct !DISubprogram(name: "edma_issue_pending", scope: !3, file: !3, line: 1803, type: !4290, scopeLine: 1804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!9947 = !DILocalVariable(name: "lock", arg: 1, scope: !9948, file: !7863, line: 407, type: !1217)
!9948 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !7863, file: !7863, line: 407, type: !9949, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!9949 = !DISubroutineType(types: !9950)
!9950 = !{null, !1217, !265}
!9951 = !DILocation(line: 407, column: 64, scope: !9948, inlinedAt: !9952)
!9952 = distinct !DILocation(line: 1811, column: 2, scope: !9946)
!9953 = !DILocalVariable(name: "flags", arg: 2, scope: !9948, file: !7863, line: 407, type: !265)
!9954 = !DILocation(line: 407, column: 84, scope: !9948, inlinedAt: !9952)
!9955 = !DILocalVariable(name: "lock", arg: 1, scope: !9956, file: !7863, line: 327, type: !1217)
!9956 = distinct !DISubprogram(name: "spinlock_check", scope: !7863, file: !7863, line: 327, type: !9957, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!9957 = !DISubroutineType(types: !9958)
!9958 = !{!9959, !1217}
!9959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!9960 = !DILocation(line: 327, column: 67, scope: !9956, inlinedAt: !9961)
!9961 = distinct !DILocation(line: 1808, column: 2, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 1808, column: 2)
!9963 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 1808, column: 2)
!9964 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 1808, column: 2)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1808, column: 2)
!9966 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 1808, column: 2)
!9967 = !DILocalVariable(name: "chan", arg: 1, scope: !9946, file: !3, line: 1803, type: !316)
!9968 = !DILocation(line: 1803, column: 49, scope: !9946)
!9969 = !DILocalVariable(name: "echan", scope: !9946, file: !3, line: 1805, type: !4572)
!9970 = !DILocation(line: 1805, column: 20, scope: !9946)
!9971 = !DILocation(line: 1805, column: 41, scope: !9946)
!9972 = !DILocation(line: 1805, column: 28, scope: !9946)
!9973 = !DILocalVariable(name: "flags", scope: !9946, file: !3, line: 1806, type: !265)
!9974 = !DILocation(line: 1806, column: 16, scope: !9946)
!9975 = !DILocation(line: 1808, column: 2, scope: !9946)
!9976 = !DILocation(line: 1808, column: 2, scope: !9966)
!9977 = !DILocalVariable(name: "__dummy", scope: !9978, file: !3, line: 1808, type: !265)
!9978 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 1808, column: 2)
!9979 = !DILocation(line: 1808, column: 2, scope: !9978)
!9980 = !DILocalVariable(name: "__dummy2", scope: !9978, file: !3, line: 1808, type: !265)
!9981 = !DILocation(line: 1808, column: 2, scope: !9965)
!9982 = !DILocation(line: 1808, column: 2, scope: !9964)
!9983 = !DILocation(line: 1808, column: 2, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 1808, column: 2)
!9985 = !DILocalVariable(name: "__dummy", scope: !9986, file: !3, line: 1808, type: !265)
!9986 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 1808, column: 2)
!9987 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1808, column: 2)
!9988 = !DILocation(line: 1808, column: 2, scope: !9986)
!9989 = !DILocalVariable(name: "__dummy2", scope: !9986, file: !3, line: 1808, type: !265)
!9990 = !DILocation(line: 1808, column: 2, scope: !9987)
!9991 = !DILocation(line: 1808, column: 2, scope: !9963)
!9992 = !{i32 -2141552868}
!9993 = !DILocation(line: 1808, column: 2, scope: !9962)
!9994 = !DILocation(line: 329, column: 10, scope: !9956, inlinedAt: !9961)
!9995 = !DILocation(line: 329, column: 16, scope: !9956, inlinedAt: !9961)
!9996 = !DILocation(line: 1809, column: 27, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 1809, column: 6)
!9998 = !DILocation(line: 1809, column: 34, scope: !9997)
!9999 = !DILocation(line: 1809, column: 6, scope: !9997)
!10000 = !DILocation(line: 1809, column: 41, scope: !9997)
!10001 = !DILocation(line: 1809, column: 45, scope: !9997)
!10002 = !DILocation(line: 1809, column: 52, scope: !9997)
!10003 = !DILocation(line: 1809, column: 6, scope: !9946)
!10004 = !DILocation(line: 1810, column: 16, scope: !9997)
!10005 = !DILocation(line: 1810, column: 3, scope: !9997)
!10006 = !DILocation(line: 1811, column: 26, scope: !9946)
!10007 = !DILocation(line: 1811, column: 33, scope: !9946)
!10008 = !DILocation(line: 1811, column: 39, scope: !9946)
!10009 = !DILocation(line: 1811, column: 45, scope: !9946)
!10010 = !DILocalVariable(name: "__dummy", scope: !10011, file: !7863, line: 409, type: !265)
!10011 = distinct !DILexicalBlock(scope: !10012, file: !7863, line: 409, column: 2)
!10012 = distinct !DILexicalBlock(scope: !9948, file: !7863, line: 409, column: 2)
!10013 = !DILocation(line: 409, column: 2, scope: !10011, inlinedAt: !9952)
!10014 = !DILocalVariable(name: "__dummy2", scope: !10011, file: !7863, line: 409, type: !265)
!10015 = !DILocalVariable(name: "__dummy", scope: !10016, file: !7863, line: 409, type: !265)
!10016 = distinct !DILexicalBlock(scope: !10017, file: !7863, line: 409, column: 2)
!10017 = distinct !DILexicalBlock(scope: !10018, file: !7863, line: 409, column: 2)
!10018 = distinct !DILexicalBlock(scope: !10019, file: !7863, line: 409, column: 2)
!10019 = distinct !DILexicalBlock(scope: !10012, file: !7863, line: 409, column: 2)
!10020 = !DILocation(line: 409, column: 2, scope: !10016, inlinedAt: !9952)
!10021 = !DILocalVariable(name: "__dummy2", scope: !10016, file: !7863, line: 409, type: !265)
!10022 = !DILocation(line: 409, column: 2, scope: !10017, inlinedAt: !9952)
!10023 = !DILocation(line: 409, column: 2, scope: !10024, inlinedAt: !9952)
!10024 = distinct !DILexicalBlock(scope: !10019, file: !7863, line: 409, column: 2)
!10025 = !{i32 -2145171358}
!10026 = !DILocation(line: 409, column: 2, scope: !10027, inlinedAt: !9952)
!10027 = distinct !DILexicalBlock(scope: !10024, file: !7863, line: 409, column: 2)
!10028 = !DILocation(line: 1812, column: 1, scope: !9946)
!10029 = distinct !DISubprogram(name: "edma_tx_status", scope: !3, file: !3, line: 1913, type: !4474, scopeLine: 1916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10030 = !DILocation(line: 407, column: 64, scope: !9948, inlinedAt: !10031)
!10031 = distinct !DILocation(line: 1958, column: 2, scope: !10029)
!10032 = !DILocation(line: 407, column: 84, scope: !9948, inlinedAt: !10031)
!10033 = !DILocation(line: 327, column: 67, scope: !9956, inlinedAt: !10034)
!10034 = distinct !DILocation(line: 1931, column: 2, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 1931, column: 2)
!10036 = distinct !DILexicalBlock(scope: !10037, file: !3, line: 1931, column: 2)
!10037 = distinct !DILexicalBlock(scope: !10038, file: !3, line: 1931, column: 2)
!10038 = distinct !DILexicalBlock(scope: !10039, file: !3, line: 1931, column: 2)
!10039 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 1931, column: 2)
!10040 = !DILocalVariable(name: "chan", arg: 1, scope: !10029, file: !3, line: 1913, type: !316)
!10041 = !DILocation(line: 1913, column: 56, scope: !10029)
!10042 = !DILocalVariable(name: "cookie", arg: 2, scope: !10029, file: !3, line: 1914, type: !4300)
!10043 = !DILocation(line: 1914, column: 24, scope: !10029)
!10044 = !DILocalVariable(name: "txstate", arg: 3, scope: !10029, file: !3, line: 1915, type: !4476)
!10045 = !DILocation(line: 1915, column: 32, scope: !10029)
!10046 = !DILocalVariable(name: "echan", scope: !10029, file: !3, line: 1917, type: !4572)
!10047 = !DILocation(line: 1917, column: 20, scope: !10029)
!10048 = !DILocation(line: 1917, column: 41, scope: !10029)
!10049 = !DILocation(line: 1917, column: 28, scope: !10029)
!10050 = !DILocalVariable(name: "txstate_tmp", scope: !10029, file: !3, line: 1918, type: !4477)
!10051 = !DILocation(line: 1918, column: 22, scope: !10029)
!10052 = !DILocalVariable(name: "ret", scope: !10029, file: !3, line: 1919, type: !197)
!10053 = !DILocation(line: 1919, column: 18, scope: !10029)
!10054 = !DILocalVariable(name: "flags", scope: !10029, file: !3, line: 1920, type: !265)
!10055 = !DILocation(line: 1920, column: 16, scope: !10029)
!10056 = !DILocation(line: 1922, column: 26, scope: !10029)
!10057 = !DILocation(line: 1922, column: 32, scope: !10029)
!10058 = !DILocation(line: 1922, column: 40, scope: !10029)
!10059 = !DILocation(line: 1922, column: 8, scope: !10029)
!10060 = !DILocation(line: 1922, column: 6, scope: !10029)
!10061 = !DILocation(line: 1924, column: 6, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 1924, column: 6)
!10063 = !DILocation(line: 1924, column: 10, scope: !10062)
!10064 = !DILocation(line: 1924, column: 6, scope: !10029)
!10065 = !DILocation(line: 1925, column: 10, scope: !10062)
!10066 = !DILocation(line: 1925, column: 3, scope: !10062)
!10067 = !DILocation(line: 1928, column: 7, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 1928, column: 6)
!10069 = !DILocation(line: 1928, column: 6, scope: !10029)
!10070 = !DILocation(line: 1929, column: 11, scope: !10068)
!10071 = !DILocation(line: 1929, column: 3, scope: !10068)
!10072 = !DILocation(line: 1931, column: 2, scope: !10029)
!10073 = !DILocation(line: 1931, column: 2, scope: !10039)
!10074 = !DILocalVariable(name: "__dummy", scope: !10075, file: !3, line: 1931, type: !265)
!10075 = distinct !DILexicalBlock(scope: !10038, file: !3, line: 1931, column: 2)
!10076 = !DILocation(line: 1931, column: 2, scope: !10075)
!10077 = !DILocalVariable(name: "__dummy2", scope: !10075, file: !3, line: 1931, type: !265)
!10078 = !DILocation(line: 1931, column: 2, scope: !10038)
!10079 = !DILocation(line: 1931, column: 2, scope: !10037)
!10080 = !DILocation(line: 1931, column: 2, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10037, file: !3, line: 1931, column: 2)
!10082 = !DILocalVariable(name: "__dummy", scope: !10083, file: !3, line: 1931, type: !265)
!10083 = distinct !DILexicalBlock(scope: !10084, file: !3, line: 1931, column: 2)
!10084 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 1931, column: 2)
!10085 = !DILocation(line: 1931, column: 2, scope: !10083)
!10086 = !DILocalVariable(name: "__dummy2", scope: !10083, file: !3, line: 1931, type: !265)
!10087 = !DILocation(line: 1931, column: 2, scope: !10084)
!10088 = !DILocation(line: 1931, column: 2, scope: !10036)
!10089 = !{i32 -2141551354}
!10090 = !DILocation(line: 1931, column: 2, scope: !10035)
!10091 = !DILocation(line: 329, column: 10, scope: !9956, inlinedAt: !10034)
!10092 = !DILocation(line: 329, column: 16, scope: !9956, inlinedAt: !10034)
!10093 = !DILocation(line: 1932, column: 6, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 1932, column: 6)
!10095 = !DILocation(line: 1932, column: 13, scope: !10094)
!10096 = !DILocation(line: 1932, column: 19, scope: !10094)
!10097 = !DILocation(line: 1932, column: 22, scope: !10094)
!10098 = !DILocation(line: 1932, column: 29, scope: !10094)
!10099 = !DILocation(line: 1932, column: 36, scope: !10094)
!10100 = !DILocation(line: 1932, column: 42, scope: !10094)
!10101 = !DILocation(line: 1932, column: 45, scope: !10094)
!10102 = !DILocation(line: 1932, column: 55, scope: !10094)
!10103 = !DILocation(line: 1932, column: 52, scope: !10094)
!10104 = !DILocation(line: 1932, column: 6, scope: !10029)
!10105 = !DILocation(line: 1933, column: 35, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 1932, column: 63)
!10107 = !DILocation(line: 1933, column: 42, scope: !10106)
!10108 = !DILocation(line: 1933, column: 22, scope: !10106)
!10109 = !DILocation(line: 1933, column: 3, scope: !10106)
!10110 = !DILocation(line: 1933, column: 12, scope: !10106)
!10111 = !DILocation(line: 1933, column: 20, scope: !10106)
!10112 = !DILocation(line: 1934, column: 2, scope: !10106)
!10113 = !DILocalVariable(name: "vdesc", scope: !10114, file: !3, line: 1935, type: !4544)
!10114 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 1934, column: 9)
!10115 = !DILocation(line: 1935, column: 25, scope: !10114)
!10116 = !DILocation(line: 1935, column: 50, scope: !10114)
!10117 = !DILocation(line: 1935, column: 57, scope: !10114)
!10118 = !DILocation(line: 1936, column: 14, scope: !10114)
!10119 = !DILocation(line: 1935, column: 33, scope: !10114)
!10120 = !DILocation(line: 1938, column: 7, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10114, file: !3, line: 1938, column: 7)
!10122 = !DILocation(line: 1938, column: 7, scope: !10114)
!10123 = !DILocation(line: 1939, column: 37, scope: !10121)
!10124 = !DILocation(line: 1939, column: 44, scope: !10121)
!10125 = !DILocation(line: 1939, column: 23, scope: !10121)
!10126 = !DILocation(line: 1939, column: 49, scope: !10121)
!10127 = !DILocation(line: 1939, column: 4, scope: !10121)
!10128 = !DILocation(line: 1939, column: 13, scope: !10121)
!10129 = !DILocation(line: 1939, column: 21, scope: !10121)
!10130 = !DILocation(line: 1941, column: 4, scope: !10121)
!10131 = !DILocation(line: 1941, column: 13, scope: !10121)
!10132 = !DILocation(line: 1941, column: 21, scope: !10121)
!10133 = !DILocation(line: 1948, column: 6, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 1948, column: 6)
!10135 = !DILocation(line: 1948, column: 10, scope: !10134)
!10136 = !DILocation(line: 1948, column: 26, scope: !10134)
!10137 = !DILocation(line: 1948, column: 30, scope: !10134)
!10138 = !DILocation(line: 1948, column: 39, scope: !10134)
!10139 = !DILocation(line: 1948, column: 47, scope: !10134)
!10140 = !DILocation(line: 1949, column: 6, scope: !10134)
!10141 = !DILocation(line: 1949, column: 13, scope: !10134)
!10142 = !DILocation(line: 1949, column: 19, scope: !10134)
!10143 = !DILocation(line: 1949, column: 22, scope: !10134)
!10144 = !DILocation(line: 1949, column: 29, scope: !10134)
!10145 = !DILocation(line: 1949, column: 36, scope: !10134)
!10146 = !DILocation(line: 1949, column: 43, scope: !10134)
!10147 = !DILocation(line: 1950, column: 6, scope: !10134)
!10148 = !DILocation(line: 1950, column: 13, scope: !10134)
!10149 = !DILocation(line: 1950, column: 20, scope: !10134)
!10150 = !DILocation(line: 1950, column: 26, scope: !10134)
!10151 = !DILocation(line: 1950, column: 29, scope: !10134)
!10152 = !DILocation(line: 1950, column: 39, scope: !10134)
!10153 = !DILocation(line: 1950, column: 36, scope: !10134)
!10154 = !DILocation(line: 1948, column: 6, scope: !10029)
!10155 = !DILocation(line: 1951, column: 13, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 1950, column: 47)
!10157 = !DILocation(line: 1951, column: 3, scope: !10156)
!10158 = !DILocation(line: 1952, column: 26, scope: !10156)
!10159 = !DILocation(line: 1952, column: 33, scope: !10156)
!10160 = !DILocation(line: 1952, column: 40, scope: !10156)
!10161 = !DILocation(line: 1952, column: 3, scope: !10156)
!10162 = !DILocation(line: 1953, column: 3, scope: !10156)
!10163 = !DILocation(line: 1953, column: 10, scope: !10156)
!10164 = !DILocation(line: 1953, column: 16, scope: !10156)
!10165 = !DILocation(line: 1954, column: 16, scope: !10156)
!10166 = !DILocation(line: 1954, column: 3, scope: !10156)
!10167 = !DILocation(line: 1955, column: 7, scope: !10156)
!10168 = !DILocation(line: 1956, column: 2, scope: !10156)
!10169 = !DILocation(line: 1958, column: 26, scope: !10029)
!10170 = !DILocation(line: 1958, column: 33, scope: !10029)
!10171 = !DILocation(line: 1958, column: 39, scope: !10029)
!10172 = !DILocation(line: 1958, column: 45, scope: !10029)
!10173 = !DILocation(line: 409, column: 2, scope: !10011, inlinedAt: !10031)
!10174 = !DILocation(line: 409, column: 2, scope: !10016, inlinedAt: !10031)
!10175 = !DILocation(line: 409, column: 2, scope: !10017, inlinedAt: !10031)
!10176 = !DILocation(line: 409, column: 2, scope: !10024, inlinedAt: !10031)
!10177 = !DILocation(line: 409, column: 2, scope: !10027, inlinedAt: !10031)
!10178 = !DILocation(line: 1960, column: 9, scope: !10029)
!10179 = !DILocation(line: 1960, column: 2, scope: !10029)
!10180 = !DILocation(line: 1961, column: 1, scope: !10029)
!10181 = distinct !DISubprogram(name: "edma_slave_config", scope: !3, file: !3, line: 905, type: !4452, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10182 = !DILocalVariable(name: "chan", arg: 1, scope: !10181, file: !3, line: 905, type: !316)
!10183 = !DILocation(line: 905, column: 47, scope: !10181)
!10184 = !DILocalVariable(name: "cfg", arg: 2, scope: !10181, file: !3, line: 906, type: !4454)
!10185 = !DILocation(line: 906, column: 27, scope: !10181)
!10186 = !DILocalVariable(name: "echan", scope: !10181, file: !3, line: 908, type: !4572)
!10187 = !DILocation(line: 908, column: 20, scope: !10181)
!10188 = !DILocation(line: 908, column: 41, scope: !10181)
!10189 = !DILocation(line: 908, column: 28, scope: !10181)
!10190 = !DILocation(line: 910, column: 6, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10181, file: !3, line: 910, column: 6)
!10192 = !DILocation(line: 910, column: 11, scope: !10191)
!10193 = !DILocation(line: 910, column: 26, scope: !10191)
!10194 = !DILocation(line: 910, column: 56, scope: !10191)
!10195 = !DILocation(line: 911, column: 6, scope: !10191)
!10196 = !DILocation(line: 911, column: 11, scope: !10191)
!10197 = !DILocation(line: 911, column: 26, scope: !10191)
!10198 = !DILocation(line: 910, column: 6, scope: !10181)
!10199 = !DILocation(line: 912, column: 3, scope: !10191)
!10200 = !DILocation(line: 914, column: 6, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10181, file: !3, line: 914, column: 6)
!10202 = !DILocation(line: 914, column: 11, scope: !10201)
!10203 = !DILocation(line: 914, column: 26, scope: !10201)
!10204 = !DILocation(line: 914, column: 32, scope: !10201)
!10205 = !DILocation(line: 914, column: 40, scope: !10201)
!10206 = !DILocation(line: 914, column: 24, scope: !10201)
!10207 = !DILocation(line: 914, column: 50, scope: !10201)
!10208 = !DILocation(line: 915, column: 6, scope: !10201)
!10209 = !DILocation(line: 915, column: 11, scope: !10201)
!10210 = !DILocation(line: 915, column: 26, scope: !10201)
!10211 = !DILocation(line: 915, column: 32, scope: !10201)
!10212 = !DILocation(line: 915, column: 40, scope: !10201)
!10213 = !DILocation(line: 915, column: 24, scope: !10201)
!10214 = !DILocation(line: 914, column: 6, scope: !10181)
!10215 = !DILocation(line: 916, column: 3, scope: !10201)
!10216 = !DILocation(line: 918, column: 10, scope: !10181)
!10217 = !DILocation(line: 918, column: 17, scope: !10181)
!10218 = !DILocation(line: 918, column: 2, scope: !10181)
!10219 = !DILocation(line: 918, column: 22, scope: !10181)
!10220 = !DILocation(line: 920, column: 2, scope: !10181)
!10221 = !DILocation(line: 921, column: 1, scope: !10181)
!10222 = distinct !DISubprogram(name: "edma_dma_pause", scope: !3, file: !3, line: 923, type: !4286, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10223 = !DILocalVariable(name: "chan", arg: 1, scope: !10222, file: !3, line: 923, type: !316)
!10224 = !DILocation(line: 923, column: 44, scope: !10222)
!10225 = !DILocalVariable(name: "echan", scope: !10222, file: !3, line: 925, type: !4572)
!10226 = !DILocation(line: 925, column: 20, scope: !10222)
!10227 = !DILocation(line: 925, column: 41, scope: !10222)
!10228 = !DILocation(line: 925, column: 28, scope: !10222)
!10229 = !DILocation(line: 927, column: 7, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10222, file: !3, line: 927, column: 6)
!10231 = !DILocation(line: 927, column: 14, scope: !10230)
!10232 = !DILocation(line: 927, column: 6, scope: !10222)
!10233 = !DILocation(line: 928, column: 3, scope: !10230)
!10234 = !DILocation(line: 930, column: 13, scope: !10222)
!10235 = !DILocation(line: 930, column: 2, scope: !10222)
!10236 = !DILocation(line: 931, column: 2, scope: !10222)
!10237 = !DILocation(line: 932, column: 1, scope: !10222)
!10238 = distinct !DISubprogram(name: "edma_dma_resume", scope: !3, file: !3, line: 934, type: !4286, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10239 = !DILocalVariable(name: "chan", arg: 1, scope: !10238, file: !3, line: 934, type: !316)
!10240 = !DILocation(line: 934, column: 45, scope: !10238)
!10241 = !DILocalVariable(name: "echan", scope: !10238, file: !3, line: 936, type: !4572)
!10242 = !DILocation(line: 936, column: 20, scope: !10238)
!10243 = !DILocation(line: 936, column: 41, scope: !10238)
!10244 = !DILocation(line: 936, column: 28, scope: !10238)
!10245 = !DILocation(line: 938, column: 14, scope: !10238)
!10246 = !DILocation(line: 938, column: 2, scope: !10238)
!10247 = !DILocation(line: 939, column: 2, scope: !10238)
!10248 = distinct !DISubprogram(name: "edma_terminate_all", scope: !3, file: !3, line: 868, type: !4286, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10249 = !DILocation(line: 407, column: 64, scope: !9948, inlinedAt: !10250)
!10250 = distinct !DILocation(line: 892, column: 2, scope: !10248)
!10251 = !DILocation(line: 407, column: 84, scope: !9948, inlinedAt: !10250)
!10252 = !DILocation(line: 327, column: 67, scope: !9956, inlinedAt: !10253)
!10253 = distinct !DILocation(line: 874, column: 2, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 874, column: 2)
!10255 = distinct !DILexicalBlock(scope: !10256, file: !3, line: 874, column: 2)
!10256 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 874, column: 2)
!10257 = distinct !DILexicalBlock(scope: !10258, file: !3, line: 874, column: 2)
!10258 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 874, column: 2)
!10259 = !DILocalVariable(name: "chan", arg: 1, scope: !10248, file: !3, line: 868, type: !316)
!10260 = !DILocation(line: 868, column: 48, scope: !10248)
!10261 = !DILocalVariable(name: "echan", scope: !10248, file: !3, line: 870, type: !4572)
!10262 = !DILocation(line: 870, column: 20, scope: !10248)
!10263 = !DILocation(line: 870, column: 41, scope: !10248)
!10264 = !DILocation(line: 870, column: 28, scope: !10248)
!10265 = !DILocalVariable(name: "flags", scope: !10248, file: !3, line: 871, type: !265)
!10266 = !DILocation(line: 871, column: 16, scope: !10248)
!10267 = !DILocalVariable(name: "head", scope: !10248, file: !3, line: 872, type: !300)
!10268 = !DILocation(line: 872, column: 2, scope: !10248)
!10269 = !DILocation(line: 874, column: 2, scope: !10248)
!10270 = !DILocation(line: 874, column: 2, scope: !10258)
!10271 = !DILocalVariable(name: "__dummy", scope: !10272, file: !3, line: 874, type: !265)
!10272 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 874, column: 2)
!10273 = !DILocation(line: 874, column: 2, scope: !10272)
!10274 = !DILocalVariable(name: "__dummy2", scope: !10272, file: !3, line: 874, type: !265)
!10275 = !DILocation(line: 874, column: 2, scope: !10257)
!10276 = !DILocation(line: 874, column: 2, scope: !10256)
!10277 = !DILocation(line: 874, column: 2, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10256, file: !3, line: 874, column: 2)
!10279 = !DILocalVariable(name: "__dummy", scope: !10280, file: !3, line: 874, type: !265)
!10280 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 874, column: 2)
!10281 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 874, column: 2)
!10282 = !DILocation(line: 874, column: 2, scope: !10280)
!10283 = !DILocalVariable(name: "__dummy2", scope: !10280, file: !3, line: 874, type: !265)
!10284 = !DILocation(line: 874, column: 2, scope: !10281)
!10285 = !DILocation(line: 874, column: 2, scope: !10255)
!10286 = !{i32 -2141566593}
!10287 = !DILocation(line: 874, column: 2, scope: !10254)
!10288 = !DILocation(line: 329, column: 10, scope: !9956, inlinedAt: !10253)
!10289 = !DILocation(line: 329, column: 16, scope: !9956, inlinedAt: !10253)
!10290 = !DILocation(line: 881, column: 6, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 881, column: 6)
!10292 = !DILocation(line: 881, column: 13, scope: !10291)
!10293 = !DILocation(line: 881, column: 6, scope: !10248)
!10294 = !DILocation(line: 882, column: 13, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 881, column: 20)
!10296 = !DILocation(line: 882, column: 3, scope: !10295)
!10297 = !DILocation(line: 884, column: 8, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 884, column: 7)
!10299 = !DILocation(line: 884, column: 15, scope: !10298)
!10300 = !DILocation(line: 884, column: 18, scope: !10298)
!10301 = !DILocation(line: 884, column: 21, scope: !10298)
!10302 = !DILocation(line: 884, column: 28, scope: !10298)
!10303 = !DILocation(line: 884, column: 35, scope: !10298)
!10304 = !DILocation(line: 884, column: 7, scope: !10295)
!10305 = !DILocation(line: 885, column: 31, scope: !10298)
!10306 = !DILocation(line: 885, column: 4, scope: !10298)
!10307 = !DILocation(line: 887, column: 26, scope: !10295)
!10308 = !DILocation(line: 887, column: 33, scope: !10295)
!10309 = !DILocation(line: 887, column: 40, scope: !10295)
!10310 = !DILocation(line: 887, column: 3, scope: !10295)
!10311 = !DILocation(line: 888, column: 3, scope: !10295)
!10312 = !DILocation(line: 888, column: 10, scope: !10295)
!10313 = !DILocation(line: 888, column: 16, scope: !10295)
!10314 = !DILocation(line: 889, column: 2, scope: !10295)
!10315 = !DILocation(line: 891, column: 29, scope: !10248)
!10316 = !DILocation(line: 891, column: 36, scope: !10248)
!10317 = !DILocation(line: 891, column: 2, scope: !10248)
!10318 = !DILocation(line: 892, column: 26, scope: !10248)
!10319 = !DILocation(line: 892, column: 33, scope: !10248)
!10320 = !DILocation(line: 892, column: 39, scope: !10248)
!10321 = !DILocation(line: 892, column: 45, scope: !10248)
!10322 = !DILocation(line: 409, column: 2, scope: !10011, inlinedAt: !10250)
!10323 = !DILocation(line: 409, column: 2, scope: !10016, inlinedAt: !10250)
!10324 = !DILocation(line: 409, column: 2, scope: !10017, inlinedAt: !10250)
!10325 = !DILocation(line: 409, column: 2, scope: !10024, inlinedAt: !10250)
!10326 = !DILocation(line: 409, column: 2, scope: !10027, inlinedAt: !10250)
!10327 = !DILocation(line: 893, column: 28, scope: !10248)
!10328 = !DILocation(line: 893, column: 35, scope: !10248)
!10329 = !DILocation(line: 893, column: 2, scope: !10248)
!10330 = !DILocation(line: 895, column: 2, scope: !10248)
!10331 = distinct !DISubprogram(name: "edma_synchronize", scope: !3, file: !3, line: 898, type: !4290, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10332 = !DILocalVariable(name: "chan", arg: 1, scope: !10331, file: !3, line: 898, type: !316)
!10333 = !DILocation(line: 898, column: 47, scope: !10331)
!10334 = !DILocalVariable(name: "echan", scope: !10331, file: !3, line: 900, type: !4572)
!10335 = !DILocation(line: 900, column: 20, scope: !10331)
!10336 = !DILocation(line: 900, column: 41, scope: !10331)
!10337 = !DILocation(line: 900, column: 28, scope: !10331)
!10338 = !DILocation(line: 902, column: 21, scope: !10331)
!10339 = !DILocation(line: 902, column: 28, scope: !10331)
!10340 = !DILocation(line: 902, column: 2, scope: !10331)
!10341 = !DILocation(line: 903, column: 1, scope: !10331)
!10342 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !8361, file: !8361, line: 33, type: !8440, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10343 = !DILocalVariable(name: "list", arg: 1, scope: !10342, file: !8361, line: 33, type: !303)
!10344 = !DILocation(line: 33, column: 53, scope: !10342)
!10345 = !DILocation(line: 35, column: 2, scope: !10342)
!10346 = !DILocation(line: 35, column: 2, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10342, file: !8361, line: 35, column: 2)
!10348 = !DILocation(line: 35, column: 2, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10347, file: !8361, line: 35, column: 2)
!10350 = !DILocation(line: 35, column: 2, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10347, file: !8361, line: 35, column: 2)
!10352 = !DILocation(line: 36, column: 15, scope: !10342)
!10353 = !DILocation(line: 36, column: 2, scope: !10342)
!10354 = !DILocation(line: 36, column: 8, scope: !10342)
!10355 = !DILocation(line: 36, column: 13, scope: !10342)
!10356 = !DILocation(line: 37, column: 1, scope: !10342)
!10357 = distinct !DISubprogram(name: "edma_desc_free", scope: !3, file: !3, line: 769, type: !4542, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10358 = !DILocalVariable(name: "vdesc", arg: 1, scope: !10357, file: !3, line: 769, type: !4544)
!10359 = !DILocation(line: 769, column: 50, scope: !10357)
!10360 = !DILocalVariable(name: "__mptr", scope: !10361, file: !3, line: 771, type: !258)
!10361 = distinct !DILexicalBlock(scope: !10357, file: !3, line: 771, column: 8)
!10362 = !DILocation(line: 771, column: 8, scope: !10361)
!10363 = !DILocation(line: 771, column: 8, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10361, file: !3, line: 771, column: 8)
!10365 = !DILocation(line: 771, column: 8, scope: !10357)
!10366 = !DILocation(line: 771, column: 2, scope: !10357)
!10367 = !DILocation(line: 772, column: 1, scope: !10357)
!10368 = distinct !DISubprogram(name: "edma_is_memcpy_channel", scope: !3, file: !3, line: 1963, type: !10369, scopeLine: 1964, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10369 = !DISubroutineType(types: !10370)
!10370 = !{!314, !130, !4595}
!10371 = !DILocalVariable(name: "ch_num", arg: 1, scope: !10368, file: !3, line: 1963, type: !130)
!10372 = !DILocation(line: 1963, column: 40, scope: !10368)
!10373 = !DILocalVariable(name: "memcpy_channels", arg: 2, scope: !10368, file: !3, line: 1963, type: !4595)
!10374 = !DILocation(line: 1963, column: 53, scope: !10368)
!10375 = !DILocation(line: 1965, column: 7, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10368, file: !3, line: 1965, column: 6)
!10377 = !DILocation(line: 1965, column: 6, scope: !10368)
!10378 = !DILocation(line: 1966, column: 3, scope: !10376)
!10379 = !DILocation(line: 1967, column: 2, scope: !10368)
!10380 = !DILocation(line: 1967, column: 10, scope: !10368)
!10381 = !DILocation(line: 1967, column: 9, scope: !10368)
!10382 = !DILocation(line: 1967, column: 26, scope: !10368)
!10383 = !DILocation(line: 1968, column: 8, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10385, file: !3, line: 1968, column: 7)
!10385 = distinct !DILexicalBlock(scope: !10368, file: !3, line: 1967, column: 33)
!10386 = !DILocation(line: 1968, column: 7, scope: !10384)
!10387 = !DILocation(line: 1968, column: 27, scope: !10384)
!10388 = !DILocation(line: 1968, column: 24, scope: !10384)
!10389 = !DILocation(line: 1968, column: 7, scope: !10385)
!10390 = !DILocation(line: 1969, column: 4, scope: !10384)
!10391 = !DILocation(line: 1970, column: 18, scope: !10385)
!10392 = distinct !{!10392, !10379, !10393}
!10393 = !DILocation(line: 1971, column: 2, scope: !10368)
!10394 = !DILocation(line: 1972, column: 2, scope: !10368)
!10395 = !DILocation(line: 1973, column: 1, scope: !10368)
!10396 = distinct !DISubprogram(name: "bitmap_zero", scope: !4789, file: !4789, line: 235, type: !6008, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10397 = !DILocalVariable(name: "dst", arg: 1, scope: !10396, file: !4789, line: 235, type: !271)
!10398 = !DILocation(line: 235, column: 47, scope: !10396)
!10399 = !DILocalVariable(name: "nbits", arg: 2, scope: !10396, file: !4789, line: 235, type: !7)
!10400 = !DILocation(line: 235, column: 65, scope: !10396)
!10401 = !DILocalVariable(name: "len", scope: !10396, file: !4789, line: 237, type: !7)
!10402 = !DILocation(line: 237, column: 15, scope: !10396)
!10403 = !DILocation(line: 237, column: 21, scope: !10396)
!10404 = !DILocation(line: 237, column: 42, scope: !10396)
!10405 = !DILocation(line: 238, column: 9, scope: !10396)
!10406 = !DILocation(line: 238, column: 2, scope: !10396)
!10407 = !DILocation(line: 238, column: 17, scope: !10396)
!10408 = !DILocation(line: 239, column: 1, scope: !10396)
!10409 = distinct !DISubprogram(name: "set_bit", scope: !8294, file: !8294, line: 26, type: !7726, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10410 = !DILocalVariable(name: "nr", arg: 1, scope: !10411, file: !6031, line: 52, type: !266)
!10411 = distinct !DISubprogram(name: "arch_set_bit", scope: !6031, file: !6031, line: 52, type: !7726, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10412 = !DILocation(line: 52, column: 19, scope: !10411, inlinedAt: !10413)
!10413 = distinct !DILocation(line: 29, column: 2, scope: !10409)
!10414 = !DILocalVariable(name: "addr", arg: 2, scope: !10411, file: !6031, line: 52, type: !7728)
!10415 = !DILocation(line: 52, column: 47, scope: !10411, inlinedAt: !10413)
!10416 = !DILocalVariable(name: "v", arg: 1, scope: !10417, file: !6046, line: 84, type: !6049)
!10417 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !6046, file: !6046, line: 84, type: !6047, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10418 = !DILocation(line: 84, column: 74, scope: !10417, inlinedAt: !10419)
!10419 = distinct !DILocation(line: 28, column: 2, scope: !10409)
!10420 = !DILocalVariable(name: "size", arg: 2, scope: !10417, file: !6046, line: 84, type: !447)
!10421 = !DILocation(line: 84, column: 84, scope: !10417, inlinedAt: !10419)
!10422 = !DILocalVariable(name: "nr", arg: 1, scope: !10409, file: !8294, line: 26, type: !266)
!10423 = !DILocation(line: 26, column: 33, scope: !10409)
!10424 = !DILocalVariable(name: "addr", arg: 2, scope: !10409, file: !8294, line: 26, type: !7728)
!10425 = !DILocation(line: 26, column: 61, scope: !10409)
!10426 = !DILocation(line: 28, column: 26, scope: !10409)
!10427 = !DILocation(line: 28, column: 33, scope: !10409)
!10428 = !DILocation(line: 28, column: 31, scope: !10409)
!10429 = !DILocation(line: 86, column: 20, scope: !10417, inlinedAt: !10419)
!10430 = !DILocation(line: 86, column: 23, scope: !10417, inlinedAt: !10419)
!10431 = !DILocation(line: 86, column: 2, scope: !10417, inlinedAt: !10419)
!10432 = !DILocation(line: 87, column: 2, scope: !10417, inlinedAt: !10419)
!10433 = !DILocation(line: 29, column: 15, scope: !10409)
!10434 = !DILocation(line: 29, column: 19, scope: !10409)
!10435 = !DILocation(line: 54, column: 27, scope: !10436, inlinedAt: !10413)
!10436 = distinct !DILexicalBlock(scope: !10411, file: !6031, line: 54, column: 6)
!10437 = !DILocation(line: 54, column: 6, scope: !10436, inlinedAt: !10413)
!10438 = !DILocation(line: 54, column: 6, scope: !10411, inlinedAt: !10413)
!10439 = !DILocation(line: 56, column: 6, scope: !10440, inlinedAt: !10413)
!10440 = distinct !DILexicalBlock(scope: !10436, file: !6031, line: 54, column: 32)
!10441 = !DILocation(line: 57, column: 12, scope: !10440, inlinedAt: !10413)
!10442 = !DILocation(line: 55, column: 3, scope: !10440, inlinedAt: !10413)
!10443 = !{i32 -2146949974}
!10444 = !DILocation(line: 59, column: 2, scope: !10440, inlinedAt: !10413)
!10445 = !DILocation(line: 61, column: 8, scope: !10446, inlinedAt: !10413)
!10446 = distinct !DILexicalBlock(scope: !10436, file: !6031, line: 59, column: 9)
!10447 = !DILocation(line: 61, column: 32, scope: !10446, inlinedAt: !10413)
!10448 = !DILocation(line: 60, column: 3, scope: !10446, inlinedAt: !10413)
!10449 = !{i32 -2146949842}
!10450 = !DILocation(line: 30, column: 1, scope: !10409)
!10451 = distinct !DISubprogram(name: "to_edma_chan", scope: !3, file: !3, line: 759, type: !10452, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10452 = !DISubroutineType(types: !10453)
!10453 = !{!4572, !316}
!10454 = !DILocalVariable(name: "c", arg: 1, scope: !10451, file: !3, line: 759, type: !316)
!10455 = !DILocation(line: 759, column: 63, scope: !10451)
!10456 = !DILocalVariable(name: "__mptr", scope: !10457, file: !3, line: 761, type: !258)
!10457 = distinct !DILexicalBlock(scope: !10451, file: !3, line: 761, column: 9)
!10458 = !DILocation(line: 761, column: 9, scope: !10457)
!10459 = !DILocation(line: 761, column: 9, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 761, column: 9)
!10461 = !DILocation(line: 761, column: 2, scope: !10451)
!10462 = distinct !DISubprogram(name: "kzalloc", scope: !210, file: !210, line: 662, type: !7305, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10463 = !DILocation(line: 445, column: 72, scope: !7297, inlinedAt: !10464)
!10464 = distinct !DILocation(line: 552, column: 10, scope: !7302, inlinedAt: !10465)
!10465 = distinct !DILocation(line: 664, column: 9, scope: !10462)
!10466 = !DILocation(line: 446, column: 9, scope: !7297, inlinedAt: !10464)
!10467 = !DILocation(line: 446, column: 23, scope: !7297, inlinedAt: !10464)
!10468 = !DILocation(line: 448, column: 8, scope: !7297, inlinedAt: !10464)
!10469 = !DILocation(line: 318, column: 67, scope: !7316, inlinedAt: !10470)
!10470 = distinct !DILocation(line: 553, column: 20, scope: !7302, inlinedAt: !10465)
!10471 = !DILocation(line: 346, column: 58, scope: !7322, inlinedAt: !10472)
!10472 = distinct !DILocation(line: 547, column: 11, scope: !7302, inlinedAt: !10465)
!10473 = !DILocation(line: 472, column: 28, scope: !7328, inlinedAt: !10474)
!10474 = distinct !DILocation(line: 481, column: 9, scope: !7333, inlinedAt: !10475)
!10475 = distinct !DILocation(line: 545, column: 11, scope: !7335, inlinedAt: !10465)
!10476 = !DILocation(line: 472, column: 40, scope: !7328, inlinedAt: !10474)
!10477 = !DILocation(line: 472, column: 60, scope: !7328, inlinedAt: !10474)
!10478 = !DILocation(line: 478, column: 51, scope: !7333, inlinedAt: !10475)
!10479 = !DILocation(line: 478, column: 63, scope: !7333, inlinedAt: !10475)
!10480 = !DILocation(line: 480, column: 15, scope: !7333, inlinedAt: !10475)
!10481 = !DILocation(line: 538, column: 45, scope: !7304, inlinedAt: !10465)
!10482 = !DILocation(line: 538, column: 57, scope: !7304, inlinedAt: !10465)
!10483 = !DILocation(line: 542, column: 16, scope: !7302, inlinedAt: !10465)
!10484 = !DILocalVariable(name: "size", arg: 1, scope: !10462, file: !210, line: 662, type: !447)
!10485 = !DILocation(line: 662, column: 36, scope: !10462)
!10486 = !DILocalVariable(name: "flags", arg: 2, scope: !10462, file: !210, line: 662, type: !248)
!10487 = !DILocation(line: 662, column: 48, scope: !10462)
!10488 = !DILocation(line: 664, column: 17, scope: !10462)
!10489 = !DILocation(line: 664, column: 23, scope: !10462)
!10490 = !DILocation(line: 664, column: 29, scope: !10462)
!10491 = !DILocation(line: 540, column: 27, scope: !7303, inlinedAt: !10465)
!10492 = !DILocation(line: 540, column: 6, scope: !7303, inlinedAt: !10465)
!10493 = !DILocation(line: 540, column: 6, scope: !7304, inlinedAt: !10465)
!10494 = !DILocation(line: 544, column: 7, scope: !7335, inlinedAt: !10465)
!10495 = !DILocation(line: 544, column: 12, scope: !7335, inlinedAt: !10465)
!10496 = !DILocation(line: 544, column: 7, scope: !7302, inlinedAt: !10465)
!10497 = !DILocation(line: 545, column: 25, scope: !7335, inlinedAt: !10465)
!10498 = !DILocation(line: 545, column: 31, scope: !7335, inlinedAt: !10465)
!10499 = !DILocation(line: 480, column: 33, scope: !7333, inlinedAt: !10475)
!10500 = !DILocation(line: 480, column: 23, scope: !7333, inlinedAt: !10475)
!10501 = !DILocation(line: 481, column: 29, scope: !7333, inlinedAt: !10475)
!10502 = !DILocation(line: 481, column: 35, scope: !7333, inlinedAt: !10475)
!10503 = !DILocation(line: 481, column: 42, scope: !7333, inlinedAt: !10475)
!10504 = !DILocation(line: 474, column: 23, scope: !7328, inlinedAt: !10474)
!10505 = !DILocation(line: 474, column: 29, scope: !7328, inlinedAt: !10474)
!10506 = !DILocation(line: 474, column: 36, scope: !7328, inlinedAt: !10474)
!10507 = !DILocation(line: 474, column: 9, scope: !7328, inlinedAt: !10474)
!10508 = !DILocation(line: 545, column: 4, scope: !7335, inlinedAt: !10465)
!10509 = !DILocation(line: 547, column: 25, scope: !7302, inlinedAt: !10465)
!10510 = !DILocation(line: 348, column: 7, scope: !7397, inlinedAt: !10472)
!10511 = !DILocation(line: 348, column: 6, scope: !7322, inlinedAt: !10472)
!10512 = !DILocation(line: 349, column: 3, scope: !7397, inlinedAt: !10472)
!10513 = !DILocation(line: 351, column: 6, scope: !7401, inlinedAt: !10472)
!10514 = !DILocation(line: 351, column: 11, scope: !7401, inlinedAt: !10472)
!10515 = !DILocation(line: 351, column: 6, scope: !7322, inlinedAt: !10472)
!10516 = !DILocation(line: 352, column: 3, scope: !7401, inlinedAt: !10472)
!10517 = !DILocation(line: 354, column: 32, scope: !7406, inlinedAt: !10472)
!10518 = !DILocation(line: 354, column: 37, scope: !7406, inlinedAt: !10472)
!10519 = !DILocation(line: 354, column: 42, scope: !7406, inlinedAt: !10472)
!10520 = !DILocation(line: 354, column: 45, scope: !7406, inlinedAt: !10472)
!10521 = !DILocation(line: 354, column: 50, scope: !7406, inlinedAt: !10472)
!10522 = !DILocation(line: 354, column: 6, scope: !7322, inlinedAt: !10472)
!10523 = !DILocation(line: 355, column: 3, scope: !7406, inlinedAt: !10472)
!10524 = !DILocation(line: 356, column: 32, scope: !7414, inlinedAt: !10472)
!10525 = !DILocation(line: 356, column: 37, scope: !7414, inlinedAt: !10472)
!10526 = !DILocation(line: 356, column: 43, scope: !7414, inlinedAt: !10472)
!10527 = !DILocation(line: 356, column: 46, scope: !7414, inlinedAt: !10472)
!10528 = !DILocation(line: 356, column: 51, scope: !7414, inlinedAt: !10472)
!10529 = !DILocation(line: 356, column: 6, scope: !7322, inlinedAt: !10472)
!10530 = !DILocation(line: 357, column: 3, scope: !7414, inlinedAt: !10472)
!10531 = !DILocation(line: 358, column: 6, scope: !7422, inlinedAt: !10472)
!10532 = !DILocation(line: 358, column: 11, scope: !7422, inlinedAt: !10472)
!10533 = !DILocation(line: 358, column: 6, scope: !7322, inlinedAt: !10472)
!10534 = !DILocation(line: 358, column: 26, scope: !7422, inlinedAt: !10472)
!10535 = !DILocation(line: 359, column: 6, scope: !7427, inlinedAt: !10472)
!10536 = !DILocation(line: 359, column: 11, scope: !7427, inlinedAt: !10472)
!10537 = !DILocation(line: 359, column: 6, scope: !7322, inlinedAt: !10472)
!10538 = !DILocation(line: 359, column: 26, scope: !7427, inlinedAt: !10472)
!10539 = !DILocation(line: 360, column: 6, scope: !7432, inlinedAt: !10472)
!10540 = !DILocation(line: 360, column: 11, scope: !7432, inlinedAt: !10472)
!10541 = !DILocation(line: 360, column: 6, scope: !7322, inlinedAt: !10472)
!10542 = !DILocation(line: 360, column: 26, scope: !7432, inlinedAt: !10472)
!10543 = !DILocation(line: 361, column: 6, scope: !7437, inlinedAt: !10472)
!10544 = !DILocation(line: 361, column: 11, scope: !7437, inlinedAt: !10472)
!10545 = !DILocation(line: 361, column: 6, scope: !7322, inlinedAt: !10472)
!10546 = !DILocation(line: 361, column: 26, scope: !7437, inlinedAt: !10472)
!10547 = !DILocation(line: 362, column: 6, scope: !7442, inlinedAt: !10472)
!10548 = !DILocation(line: 362, column: 11, scope: !7442, inlinedAt: !10472)
!10549 = !DILocation(line: 362, column: 6, scope: !7322, inlinedAt: !10472)
!10550 = !DILocation(line: 362, column: 26, scope: !7442, inlinedAt: !10472)
!10551 = !DILocation(line: 363, column: 6, scope: !7447, inlinedAt: !10472)
!10552 = !DILocation(line: 363, column: 11, scope: !7447, inlinedAt: !10472)
!10553 = !DILocation(line: 363, column: 6, scope: !7322, inlinedAt: !10472)
!10554 = !DILocation(line: 363, column: 26, scope: !7447, inlinedAt: !10472)
!10555 = !DILocation(line: 364, column: 6, scope: !7452, inlinedAt: !10472)
!10556 = !DILocation(line: 364, column: 11, scope: !7452, inlinedAt: !10472)
!10557 = !DILocation(line: 364, column: 6, scope: !7322, inlinedAt: !10472)
!10558 = !DILocation(line: 364, column: 26, scope: !7452, inlinedAt: !10472)
!10559 = !DILocation(line: 365, column: 6, scope: !7457, inlinedAt: !10472)
!10560 = !DILocation(line: 365, column: 11, scope: !7457, inlinedAt: !10472)
!10561 = !DILocation(line: 365, column: 6, scope: !7322, inlinedAt: !10472)
!10562 = !DILocation(line: 365, column: 26, scope: !7457, inlinedAt: !10472)
!10563 = !DILocation(line: 366, column: 6, scope: !7462, inlinedAt: !10472)
!10564 = !DILocation(line: 366, column: 11, scope: !7462, inlinedAt: !10472)
!10565 = !DILocation(line: 366, column: 6, scope: !7322, inlinedAt: !10472)
!10566 = !DILocation(line: 366, column: 26, scope: !7462, inlinedAt: !10472)
!10567 = !DILocation(line: 367, column: 6, scope: !7467, inlinedAt: !10472)
!10568 = !DILocation(line: 367, column: 11, scope: !7467, inlinedAt: !10472)
!10569 = !DILocation(line: 367, column: 6, scope: !7322, inlinedAt: !10472)
!10570 = !DILocation(line: 367, column: 26, scope: !7467, inlinedAt: !10472)
!10571 = !DILocation(line: 368, column: 6, scope: !7472, inlinedAt: !10472)
!10572 = !DILocation(line: 368, column: 11, scope: !7472, inlinedAt: !10472)
!10573 = !DILocation(line: 368, column: 6, scope: !7322, inlinedAt: !10472)
!10574 = !DILocation(line: 368, column: 26, scope: !7472, inlinedAt: !10472)
!10575 = !DILocation(line: 369, column: 6, scope: !7477, inlinedAt: !10472)
!10576 = !DILocation(line: 369, column: 11, scope: !7477, inlinedAt: !10472)
!10577 = !DILocation(line: 369, column: 6, scope: !7322, inlinedAt: !10472)
!10578 = !DILocation(line: 369, column: 26, scope: !7477, inlinedAt: !10472)
!10579 = !DILocation(line: 370, column: 6, scope: !7482, inlinedAt: !10472)
!10580 = !DILocation(line: 370, column: 11, scope: !7482, inlinedAt: !10472)
!10581 = !DILocation(line: 370, column: 6, scope: !7322, inlinedAt: !10472)
!10582 = !DILocation(line: 370, column: 26, scope: !7482, inlinedAt: !10472)
!10583 = !DILocation(line: 371, column: 6, scope: !7487, inlinedAt: !10472)
!10584 = !DILocation(line: 371, column: 11, scope: !7487, inlinedAt: !10472)
!10585 = !DILocation(line: 371, column: 6, scope: !7322, inlinedAt: !10472)
!10586 = !DILocation(line: 371, column: 26, scope: !7487, inlinedAt: !10472)
!10587 = !DILocation(line: 372, column: 6, scope: !7492, inlinedAt: !10472)
!10588 = !DILocation(line: 372, column: 11, scope: !7492, inlinedAt: !10472)
!10589 = !DILocation(line: 372, column: 6, scope: !7322, inlinedAt: !10472)
!10590 = !DILocation(line: 372, column: 26, scope: !7492, inlinedAt: !10472)
!10591 = !DILocation(line: 373, column: 6, scope: !7497, inlinedAt: !10472)
!10592 = !DILocation(line: 373, column: 11, scope: !7497, inlinedAt: !10472)
!10593 = !DILocation(line: 373, column: 6, scope: !7322, inlinedAt: !10472)
!10594 = !DILocation(line: 373, column: 26, scope: !7497, inlinedAt: !10472)
!10595 = !DILocation(line: 374, column: 6, scope: !7502, inlinedAt: !10472)
!10596 = !DILocation(line: 374, column: 11, scope: !7502, inlinedAt: !10472)
!10597 = !DILocation(line: 374, column: 6, scope: !7322, inlinedAt: !10472)
!10598 = !DILocation(line: 374, column: 26, scope: !7502, inlinedAt: !10472)
!10599 = !DILocation(line: 375, column: 6, scope: !7507, inlinedAt: !10472)
!10600 = !DILocation(line: 375, column: 11, scope: !7507, inlinedAt: !10472)
!10601 = !DILocation(line: 375, column: 6, scope: !7322, inlinedAt: !10472)
!10602 = !DILocation(line: 375, column: 27, scope: !7507, inlinedAt: !10472)
!10603 = !DILocation(line: 376, column: 6, scope: !7512, inlinedAt: !10472)
!10604 = !DILocation(line: 376, column: 11, scope: !7512, inlinedAt: !10472)
!10605 = !DILocation(line: 376, column: 6, scope: !7322, inlinedAt: !10472)
!10606 = !DILocation(line: 376, column: 32, scope: !7512, inlinedAt: !10472)
!10607 = !DILocation(line: 377, column: 6, scope: !7517, inlinedAt: !10472)
!10608 = !DILocation(line: 377, column: 11, scope: !7517, inlinedAt: !10472)
!10609 = !DILocation(line: 377, column: 6, scope: !7322, inlinedAt: !10472)
!10610 = !DILocation(line: 377, column: 32, scope: !7517, inlinedAt: !10472)
!10611 = !DILocation(line: 378, column: 6, scope: !7522, inlinedAt: !10472)
!10612 = !DILocation(line: 378, column: 11, scope: !7522, inlinedAt: !10472)
!10613 = !DILocation(line: 378, column: 6, scope: !7322, inlinedAt: !10472)
!10614 = !DILocation(line: 378, column: 32, scope: !7522, inlinedAt: !10472)
!10615 = !DILocation(line: 379, column: 6, scope: !7527, inlinedAt: !10472)
!10616 = !DILocation(line: 379, column: 11, scope: !7527, inlinedAt: !10472)
!10617 = !DILocation(line: 379, column: 6, scope: !7322, inlinedAt: !10472)
!10618 = !DILocation(line: 379, column: 33, scope: !7527, inlinedAt: !10472)
!10619 = !DILocation(line: 380, column: 6, scope: !7532, inlinedAt: !10472)
!10620 = !DILocation(line: 380, column: 11, scope: !7532, inlinedAt: !10472)
!10621 = !DILocation(line: 380, column: 6, scope: !7322, inlinedAt: !10472)
!10622 = !DILocation(line: 380, column: 33, scope: !7532, inlinedAt: !10472)
!10623 = !DILocation(line: 381, column: 6, scope: !7537, inlinedAt: !10472)
!10624 = !DILocation(line: 381, column: 11, scope: !7537, inlinedAt: !10472)
!10625 = !DILocation(line: 381, column: 6, scope: !7322, inlinedAt: !10472)
!10626 = !DILocation(line: 381, column: 33, scope: !7537, inlinedAt: !10472)
!10627 = !DILocation(line: 382, column: 2, scope: !7542, inlinedAt: !10472)
!10628 = !DILocation(line: 382, column: 2, scope: !7546, inlinedAt: !10472)
!10629 = !DILocation(line: 382, column: 2, scope: !7547, inlinedAt: !10472)
!10630 = !DILocation(line: 386, column: 1, scope: !7322, inlinedAt: !10472)
!10631 = !DILocation(line: 547, column: 9, scope: !7302, inlinedAt: !10465)
!10632 = !DILocation(line: 549, column: 8, scope: !7553, inlinedAt: !10465)
!10633 = !DILocation(line: 549, column: 7, scope: !7302, inlinedAt: !10465)
!10634 = !DILocation(line: 550, column: 4, scope: !7553, inlinedAt: !10465)
!10635 = !DILocation(line: 553, column: 33, scope: !7302, inlinedAt: !10465)
!10636 = !DILocation(line: 325, column: 6, scope: !7558, inlinedAt: !10470)
!10637 = !DILocation(line: 325, column: 6, scope: !7316, inlinedAt: !10470)
!10638 = !DILocation(line: 326, column: 3, scope: !7558, inlinedAt: !10470)
!10639 = !DILocation(line: 332, column: 9, scope: !7316, inlinedAt: !10470)
!10640 = !DILocation(line: 332, column: 15, scope: !7316, inlinedAt: !10470)
!10641 = !DILocation(line: 332, column: 2, scope: !7316, inlinedAt: !10470)
!10642 = !DILocation(line: 336, column: 1, scope: !7316, inlinedAt: !10470)
!10643 = !DILocation(line: 553, column: 5, scope: !7302, inlinedAt: !10465)
!10644 = !DILocation(line: 553, column: 41, scope: !7302, inlinedAt: !10465)
!10645 = !DILocation(line: 554, column: 5, scope: !7302, inlinedAt: !10465)
!10646 = !DILocation(line: 554, column: 12, scope: !7302, inlinedAt: !10465)
!10647 = !DILocation(line: 448, column: 31, scope: !7297, inlinedAt: !10464)
!10648 = !DILocation(line: 448, column: 34, scope: !7297, inlinedAt: !10464)
!10649 = !DILocation(line: 448, column: 14, scope: !7297, inlinedAt: !10464)
!10650 = !DILocation(line: 450, column: 22, scope: !7297, inlinedAt: !10464)
!10651 = !DILocation(line: 450, column: 25, scope: !7297, inlinedAt: !10464)
!10652 = !DILocation(line: 450, column: 30, scope: !7297, inlinedAt: !10464)
!10653 = !DILocation(line: 450, column: 36, scope: !7297, inlinedAt: !10464)
!10654 = !DILocation(line: 450, column: 8, scope: !7297, inlinedAt: !10464)
!10655 = !DILocation(line: 450, column: 6, scope: !7297, inlinedAt: !10464)
!10656 = !DILocation(line: 451, column: 9, scope: !7297, inlinedAt: !10464)
!10657 = !DILocation(line: 552, column: 3, scope: !7302, inlinedAt: !10465)
!10658 = !DILocation(line: 557, column: 19, scope: !7304, inlinedAt: !10465)
!10659 = !DILocation(line: 557, column: 25, scope: !7304, inlinedAt: !10465)
!10660 = !DILocation(line: 557, column: 9, scope: !7304, inlinedAt: !10465)
!10661 = !DILocation(line: 557, column: 2, scope: !7304, inlinedAt: !10465)
!10662 = !DILocation(line: 558, column: 1, scope: !7304, inlinedAt: !10465)
!10663 = !DILocation(line: 664, column: 2, scope: !10462)
!10664 = distinct !DISubprogram(name: "__ab_c_size", scope: !7592, file: !7592, line: 301, type: !10665, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10665 = !DISubroutineType(types: !10666)
!10666 = !{!447, !447, !447, !447}
!10667 = !DILocalVariable(name: "a", arg: 1, scope: !10664, file: !7592, line: 301, type: !447)
!10668 = !DILocation(line: 301, column: 54, scope: !10664)
!10669 = !DILocalVariable(name: "b", arg: 2, scope: !10664, file: !7592, line: 301, type: !447)
!10670 = !DILocation(line: 301, column: 64, scope: !10664)
!10671 = !DILocalVariable(name: "c", arg: 3, scope: !10664, file: !7592, line: 301, type: !447)
!10672 = !DILocation(line: 301, column: 74, scope: !10664)
!10673 = !DILocalVariable(name: "bytes", scope: !10664, file: !7592, line: 303, type: !447)
!10674 = !DILocation(line: 303, column: 9, scope: !10664)
!10675 = !DILocalVariable(name: "__a", scope: !10676, file: !7592, line: 305, type: !447)
!10676 = distinct !DILexicalBlock(scope: !10677, file: !7592, line: 305, column: 6)
!10677 = distinct !DILexicalBlock(scope: !10664, file: !7592, line: 305, column: 6)
!10678 = !DILocation(line: 305, column: 6, scope: !10676)
!10679 = !DILocalVariable(name: "__b", scope: !10676, file: !7592, line: 305, type: !447)
!10680 = !DILocalVariable(name: "__d", scope: !10676, file: !7592, line: 305, type: !4352)
!10681 = !DILocation(line: 305, column: 6, scope: !10677)
!10682 = !DILocation(line: 305, column: 6, scope: !10664)
!10683 = !DILocation(line: 306, column: 3, scope: !10677)
!10684 = !DILocalVariable(name: "__a", scope: !10685, file: !7592, line: 307, type: !447)
!10685 = distinct !DILexicalBlock(scope: !10686, file: !7592, line: 307, column: 6)
!10686 = distinct !DILexicalBlock(scope: !10664, file: !7592, line: 307, column: 6)
!10687 = !DILocation(line: 307, column: 6, scope: !10685)
!10688 = !DILocalVariable(name: "__b", scope: !10685, file: !7592, line: 307, type: !447)
!10689 = !DILocalVariable(name: "__d", scope: !10685, file: !7592, line: 307, type: !4352)
!10690 = !DILocation(line: 307, column: 6, scope: !10686)
!10691 = !DILocation(line: 307, column: 6, scope: !10664)
!10692 = !DILocation(line: 308, column: 3, scope: !10686)
!10693 = !DILocation(line: 310, column: 9, scope: !10664)
!10694 = !DILocation(line: 310, column: 2, scope: !10664)
!10695 = !DILocation(line: 311, column: 1, scope: !10664)
!10696 = distinct !DISubprogram(name: "edma_config_pset", scope: !3, file: !3, line: 953, type: !10697, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10697 = !DISubroutineType(types: !10698)
!10698 = !{!130, !316, !10699, !1073, !1073, !244, !7, !7, !179}
!10699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!10700 = !DILocalVariable(name: "chan", arg: 1, scope: !10696, file: !3, line: 953, type: !316)
!10701 = !DILocation(line: 953, column: 46, scope: !10696)
!10702 = !DILocalVariable(name: "epset", arg: 2, scope: !10696, file: !3, line: 953, type: !10699)
!10703 = !DILocation(line: 953, column: 70, scope: !10696)
!10704 = !DILocalVariable(name: "src_addr", arg: 3, scope: !10696, file: !3, line: 954, type: !1073)
!10705 = !DILocation(line: 954, column: 19, scope: !10696)
!10706 = !DILocalVariable(name: "dst_addr", arg: 4, scope: !10696, file: !3, line: 954, type: !1073)
!10707 = !DILocation(line: 954, column: 40, scope: !10696)
!10708 = !DILocalVariable(name: "burst", arg: 5, scope: !10696, file: !3, line: 954, type: !244)
!10709 = !DILocation(line: 954, column: 54, scope: !10696)
!10710 = !DILocalVariable(name: "acnt", arg: 6, scope: !10696, file: !3, line: 955, type: !7)
!10711 = !DILocation(line: 955, column: 21, scope: !10696)
!10712 = !DILocalVariable(name: "dma_length", arg: 7, scope: !10696, file: !3, line: 955, type: !7)
!10713 = !DILocation(line: 955, column: 40, scope: !10696)
!10714 = !DILocalVariable(name: "direction", arg: 8, scope: !10696, file: !3, line: 956, type: !179)
!10715 = !DILocation(line: 956, column: 36, scope: !10696)
!10716 = !DILocalVariable(name: "echan", scope: !10696, file: !3, line: 958, type: !4572)
!10717 = !DILocation(line: 958, column: 20, scope: !10696)
!10718 = !DILocation(line: 958, column: 41, scope: !10696)
!10719 = !DILocation(line: 958, column: 28, scope: !10696)
!10720 = !DILocalVariable(name: "dev", scope: !10696, file: !3, line: 959, type: !345)
!10721 = !DILocation(line: 959, column: 17, scope: !10696)
!10722 = !DILocation(line: 959, column: 23, scope: !10696)
!10723 = !DILocation(line: 959, column: 29, scope: !10696)
!10724 = !DILocation(line: 959, column: 37, scope: !10696)
!10725 = !DILocalVariable(name: "param", scope: !10696, file: !3, line: 960, type: !8795)
!10726 = !DILocation(line: 960, column: 23, scope: !10696)
!10727 = !DILocation(line: 960, column: 32, scope: !10696)
!10728 = !DILocation(line: 960, column: 39, scope: !10696)
!10729 = !DILocalVariable(name: "bcnt", scope: !10696, file: !3, line: 961, type: !130)
!10730 = !DILocation(line: 961, column: 6, scope: !10696)
!10731 = !DILocalVariable(name: "ccnt", scope: !10696, file: !3, line: 961, type: !130)
!10732 = !DILocation(line: 961, column: 12, scope: !10696)
!10733 = !DILocalVariable(name: "cidx", scope: !10696, file: !3, line: 961, type: !130)
!10734 = !DILocation(line: 961, column: 18, scope: !10696)
!10735 = !DILocalVariable(name: "src_bidx", scope: !10696, file: !3, line: 962, type: !130)
!10736 = !DILocation(line: 962, column: 6, scope: !10696)
!10737 = !DILocalVariable(name: "dst_bidx", scope: !10696, file: !3, line: 962, type: !130)
!10738 = !DILocation(line: 962, column: 16, scope: !10696)
!10739 = !DILocalVariable(name: "src_cidx", scope: !10696, file: !3, line: 962, type: !130)
!10740 = !DILocation(line: 962, column: 26, scope: !10696)
!10741 = !DILocalVariable(name: "dst_cidx", scope: !10696, file: !3, line: 962, type: !130)
!10742 = !DILocation(line: 962, column: 36, scope: !10696)
!10743 = !DILocalVariable(name: "absync", scope: !10696, file: !3, line: 963, type: !130)
!10744 = !DILocation(line: 963, column: 6, scope: !10696)
!10745 = !DILocation(line: 966, column: 7, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 966, column: 6)
!10747 = !DILocation(line: 966, column: 6, scope: !10696)
!10748 = !DILocation(line: 967, column: 9, scope: !10746)
!10749 = !DILocation(line: 967, column: 3, scope: !10746)
!10750 = !DILocation(line: 973, column: 6, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 973, column: 6)
!10752 = !DILocation(line: 973, column: 12, scope: !10751)
!10753 = !DILocation(line: 973, column: 6, scope: !10696)
!10754 = !DILocation(line: 986, column: 10, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10751, file: !3, line: 973, column: 18)
!10756 = !DILocation(line: 987, column: 10, scope: !10755)
!10757 = !DILocation(line: 987, column: 23, scope: !10755)
!10758 = !DILocation(line: 987, column: 21, scope: !10755)
!10759 = !DILocation(line: 987, column: 28, scope: !10755)
!10760 = !DILocation(line: 987, column: 8, scope: !10755)
!10761 = !DILocation(line: 988, column: 10, scope: !10755)
!10762 = !DILocation(line: 988, column: 23, scope: !10755)
!10763 = !DILocation(line: 988, column: 21, scope: !10755)
!10764 = !DILocation(line: 988, column: 30, scope: !10755)
!10765 = !DILocation(line: 988, column: 35, scope: !10755)
!10766 = !DILocation(line: 988, column: 28, scope: !10755)
!10767 = !DILocation(line: 988, column: 8, scope: !10755)
!10768 = !DILocation(line: 993, column: 7, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10755, file: !3, line: 993, column: 7)
!10770 = !DILocation(line: 993, column: 7, scope: !10755)
!10771 = !DILocation(line: 994, column: 8, scope: !10769)
!10772 = !DILocation(line: 994, column: 4, scope: !10769)
!10773 = !DILocation(line: 996, column: 9, scope: !10769)
!10774 = !DILocation(line: 997, column: 10, scope: !10755)
!10775 = !DILocation(line: 997, column: 8, scope: !10755)
!10776 = !DILocation(line: 998, column: 2, scope: !10755)
!10777 = !DILocation(line: 1008, column: 10, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10751, file: !3, line: 998, column: 9)
!10779 = !DILocation(line: 1009, column: 10, scope: !10778)
!10780 = !DILocation(line: 1009, column: 8, scope: !10778)
!10781 = !DILocation(line: 1010, column: 10, scope: !10778)
!10782 = !DILocation(line: 1010, column: 24, scope: !10778)
!10783 = !DILocation(line: 1010, column: 31, scope: !10778)
!10784 = !DILocation(line: 1010, column: 29, scope: !10778)
!10785 = !DILocation(line: 1010, column: 21, scope: !10778)
!10786 = !DILocation(line: 1010, column: 8, scope: !10778)
!10787 = !DILocation(line: 1011, column: 7, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10778, file: !3, line: 1011, column: 7)
!10789 = !DILocation(line: 1011, column: 12, scope: !10788)
!10790 = !DILocation(line: 1011, column: 7, scope: !10778)
!10791 = !DILocation(line: 1012, column: 4, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10788, file: !3, line: 1011, column: 28)
!10793 = !DILocation(line: 1013, column: 4, scope: !10792)
!10794 = !DILocation(line: 1015, column: 10, scope: !10778)
!10795 = !DILocation(line: 1015, column: 17, scope: !10778)
!10796 = !DILocation(line: 1015, column: 15, scope: !10778)
!10797 = !DILocation(line: 1015, column: 8, scope: !10778)
!10798 = !DILocation(line: 1018, column: 15, scope: !10696)
!10799 = !DILocation(line: 1018, column: 2, scope: !10696)
!10800 = !DILocation(line: 1018, column: 9, scope: !10696)
!10801 = !DILocation(line: 1018, column: 13, scope: !10696)
!10802 = !DILocation(line: 1020, column: 6, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 1020, column: 6)
!10804 = !DILocation(line: 1020, column: 16, scope: !10803)
!10805 = !DILocation(line: 1020, column: 6, scope: !10696)
!10806 = !DILocation(line: 1021, column: 14, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10803, file: !3, line: 1020, column: 35)
!10808 = !DILocation(line: 1021, column: 12, scope: !10807)
!10809 = !DILocation(line: 1022, column: 14, scope: !10807)
!10810 = !DILocation(line: 1022, column: 12, scope: !10807)
!10811 = !DILocation(line: 1023, column: 12, scope: !10807)
!10812 = !DILocation(line: 1024, column: 12, scope: !10807)
!10813 = !DILocation(line: 1025, column: 17, scope: !10807)
!10814 = !DILocation(line: 1025, column: 3, scope: !10807)
!10815 = !DILocation(line: 1025, column: 10, scope: !10807)
!10816 = !DILocation(line: 1025, column: 15, scope: !10807)
!10817 = !DILocation(line: 1026, column: 2, scope: !10807)
!10818 = !DILocation(line: 1026, column: 13, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10803, file: !3, line: 1026, column: 13)
!10820 = !DILocation(line: 1026, column: 23, scope: !10819)
!10821 = !DILocation(line: 1026, column: 13, scope: !10803)
!10822 = !DILocation(line: 1027, column: 12, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10819, file: !3, line: 1026, column: 43)
!10824 = !DILocation(line: 1028, column: 12, scope: !10823)
!10825 = !DILocation(line: 1029, column: 14, scope: !10823)
!10826 = !DILocation(line: 1029, column: 12, scope: !10823)
!10827 = !DILocation(line: 1030, column: 14, scope: !10823)
!10828 = !DILocation(line: 1030, column: 12, scope: !10823)
!10829 = !DILocation(line: 1031, column: 17, scope: !10823)
!10830 = !DILocation(line: 1031, column: 3, scope: !10823)
!10831 = !DILocation(line: 1031, column: 10, scope: !10823)
!10832 = !DILocation(line: 1031, column: 15, scope: !10823)
!10833 = !DILocation(line: 1032, column: 2, scope: !10823)
!10834 = !DILocation(line: 1032, column: 13, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10819, file: !3, line: 1032, column: 13)
!10836 = !DILocation(line: 1032, column: 23, scope: !10835)
!10837 = !DILocation(line: 1032, column: 13, scope: !10819)
!10838 = !DILocation(line: 1033, column: 14, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10835, file: !3, line: 1032, column: 43)
!10840 = !DILocation(line: 1033, column: 12, scope: !10839)
!10841 = !DILocation(line: 1034, column: 14, scope: !10839)
!10842 = !DILocation(line: 1034, column: 12, scope: !10839)
!10843 = !DILocation(line: 1035, column: 14, scope: !10839)
!10844 = !DILocation(line: 1035, column: 12, scope: !10839)
!10845 = !DILocation(line: 1036, column: 14, scope: !10839)
!10846 = !DILocation(line: 1036, column: 12, scope: !10839)
!10847 = !DILocation(line: 1037, column: 17, scope: !10839)
!10848 = !DILocation(line: 1037, column: 3, scope: !10839)
!10849 = !DILocation(line: 1037, column: 10, scope: !10839)
!10850 = !DILocation(line: 1037, column: 15, scope: !10839)
!10851 = !DILocation(line: 1038, column: 2, scope: !10839)
!10852 = !DILocation(line: 1039, column: 3, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10835, file: !3, line: 1038, column: 9)
!10854 = !DILocation(line: 1040, column: 3, scope: !10853)
!10855 = !DILocation(line: 1043, column: 15, scope: !10696)
!10856 = !DILocation(line: 1043, column: 2, scope: !10696)
!10857 = !DILocation(line: 1043, column: 9, scope: !10696)
!10858 = !DILocation(line: 1043, column: 13, scope: !10696)
!10859 = !DILocation(line: 1045, column: 6, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 1045, column: 6)
!10861 = !DILocation(line: 1045, column: 6, scope: !10696)
!10862 = !DILocation(line: 1046, column: 3, scope: !10860)
!10863 = !DILocation(line: 1046, column: 10, scope: !10860)
!10864 = !DILocation(line: 1046, column: 14, scope: !10860)
!10865 = !DILocation(line: 1048, column: 15, scope: !10696)
!10866 = !DILocation(line: 1048, column: 2, scope: !10696)
!10867 = !DILocation(line: 1048, column: 9, scope: !10696)
!10868 = !DILocation(line: 1048, column: 13, scope: !10696)
!10869 = !DILocation(line: 1049, column: 15, scope: !10696)
!10870 = !DILocation(line: 1049, column: 2, scope: !10696)
!10871 = !DILocation(line: 1049, column: 9, scope: !10696)
!10872 = !DILocation(line: 1049, column: 13, scope: !10696)
!10873 = !DILocation(line: 1051, column: 25, scope: !10696)
!10874 = !DILocation(line: 1051, column: 34, scope: !10696)
!10875 = !DILocation(line: 1051, column: 43, scope: !10696)
!10876 = !DILocation(line: 1051, column: 41, scope: !10696)
!10877 = !DILocation(line: 1051, column: 2, scope: !10696)
!10878 = !DILocation(line: 1051, column: 9, scope: !10696)
!10879 = !DILocation(line: 1051, column: 22, scope: !10696)
!10880 = !DILocation(line: 1052, column: 25, scope: !10696)
!10881 = !DILocation(line: 1052, column: 34, scope: !10696)
!10882 = !DILocation(line: 1052, column: 43, scope: !10696)
!10883 = !DILocation(line: 1052, column: 41, scope: !10696)
!10884 = !DILocation(line: 1052, column: 2, scope: !10696)
!10885 = !DILocation(line: 1052, column: 9, scope: !10696)
!10886 = !DILocation(line: 1052, column: 22, scope: !10696)
!10887 = !DILocation(line: 1054, column: 19, scope: !10696)
!10888 = !DILocation(line: 1054, column: 24, scope: !10696)
!10889 = !DILocation(line: 1054, column: 32, scope: !10696)
!10890 = !DILocation(line: 1054, column: 30, scope: !10696)
!10891 = !DILocation(line: 1054, column: 2, scope: !10696)
!10892 = !DILocation(line: 1054, column: 9, scope: !10696)
!10893 = !DILocation(line: 1054, column: 17, scope: !10696)
!10894 = !DILocation(line: 1055, column: 16, scope: !10696)
!10895 = !DILocation(line: 1055, column: 2, scope: !10696)
!10896 = !DILocation(line: 1055, column: 9, scope: !10696)
!10897 = !DILocation(line: 1055, column: 14, scope: !10696)
!10898 = !DILocation(line: 1062, column: 2, scope: !10696)
!10899 = !DILocation(line: 1062, column: 9, scope: !10696)
!10900 = !DILocation(line: 1062, column: 22, scope: !10696)
!10901 = !DILocation(line: 1063, column: 9, scope: !10696)
!10902 = !DILocation(line: 1063, column: 2, scope: !10696)
!10903 = !DILocation(line: 1064, column: 1, scope: !10696)
!10904 = distinct !DISubprogram(name: "vchan_tx_prep", scope: !274, file: !274, line: 56, type: !10905, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10905 = !DISubroutineType(types: !10906)
!10906 = !{!4296, !272, !4544, !265}
!10907 = !DILocation(line: 407, column: 64, scope: !9948, inlinedAt: !10908)
!10908 = distinct !DILocation(line: 71, column: 2, scope: !10904)
!10909 = !DILocation(line: 407, column: 84, scope: !9948, inlinedAt: !10908)
!10910 = !DILocation(line: 327, column: 67, scope: !9956, inlinedAt: !10911)
!10911 = distinct !DILocation(line: 69, column: 2, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10913, file: !274, line: 69, column: 2)
!10913 = distinct !DILexicalBlock(scope: !10914, file: !274, line: 69, column: 2)
!10914 = distinct !DILexicalBlock(scope: !10915, file: !274, line: 69, column: 2)
!10915 = distinct !DILexicalBlock(scope: !10916, file: !274, line: 69, column: 2)
!10916 = distinct !DILexicalBlock(scope: !10904, file: !274, line: 69, column: 2)
!10917 = !DILocalVariable(name: "vc", arg: 1, scope: !10904, file: !274, line: 56, type: !272)
!10918 = !DILocation(line: 56, column: 83, scope: !10904)
!10919 = !DILocalVariable(name: "vd", arg: 2, scope: !10904, file: !274, line: 57, type: !4544)
!10920 = !DILocation(line: 57, column: 24, scope: !10904)
!10921 = !DILocalVariable(name: "tx_flags", arg: 3, scope: !10904, file: !274, line: 57, type: !265)
!10922 = !DILocation(line: 57, column: 42, scope: !10904)
!10923 = !DILocalVariable(name: "flags", scope: !10904, file: !274, line: 59, type: !265)
!10924 = !DILocation(line: 59, column: 16, scope: !10904)
!10925 = !DILocation(line: 61, column: 32, scope: !10904)
!10926 = !DILocation(line: 61, column: 36, scope: !10904)
!10927 = !DILocation(line: 61, column: 41, scope: !10904)
!10928 = !DILocation(line: 61, column: 45, scope: !10904)
!10929 = !DILocation(line: 61, column: 2, scope: !10904)
!10930 = !DILocation(line: 62, column: 17, scope: !10904)
!10931 = !DILocation(line: 62, column: 2, scope: !10904)
!10932 = !DILocation(line: 62, column: 6, scope: !10904)
!10933 = !DILocation(line: 62, column: 9, scope: !10904)
!10934 = !DILocation(line: 62, column: 15, scope: !10904)
!10935 = !DILocation(line: 63, column: 2, scope: !10904)
!10936 = !DILocation(line: 63, column: 6, scope: !10904)
!10937 = !DILocation(line: 63, column: 9, scope: !10904)
!10938 = !DILocation(line: 63, column: 19, scope: !10904)
!10939 = !DILocation(line: 64, column: 2, scope: !10904)
!10940 = !DILocation(line: 64, column: 6, scope: !10904)
!10941 = !DILocation(line: 64, column: 9, scope: !10904)
!10942 = !DILocation(line: 64, column: 19, scope: !10904)
!10943 = !DILocation(line: 66, column: 2, scope: !10904)
!10944 = !DILocation(line: 66, column: 6, scope: !10904)
!10945 = !DILocation(line: 66, column: 16, scope: !10904)
!10946 = !DILocation(line: 66, column: 23, scope: !10904)
!10947 = !DILocation(line: 67, column: 2, scope: !10904)
!10948 = !DILocation(line: 67, column: 6, scope: !10904)
!10949 = !DILocation(line: 67, column: 16, scope: !10904)
!10950 = !DILocation(line: 67, column: 24, scope: !10904)
!10951 = !DILocation(line: 69, column: 2, scope: !10904)
!10952 = !DILocation(line: 69, column: 2, scope: !10916)
!10953 = !DILocalVariable(name: "__dummy", scope: !10954, file: !274, line: 69, type: !265)
!10954 = distinct !DILexicalBlock(scope: !10915, file: !274, line: 69, column: 2)
!10955 = !DILocation(line: 69, column: 2, scope: !10954)
!10956 = !DILocalVariable(name: "__dummy2", scope: !10954, file: !274, line: 69, type: !265)
!10957 = !DILocation(line: 69, column: 2, scope: !10915)
!10958 = !DILocation(line: 69, column: 2, scope: !10914)
!10959 = !DILocation(line: 69, column: 2, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10914, file: !274, line: 69, column: 2)
!10961 = !DILocalVariable(name: "__dummy", scope: !10962, file: !274, line: 69, type: !265)
!10962 = distinct !DILexicalBlock(scope: !10963, file: !274, line: 69, column: 2)
!10963 = distinct !DILexicalBlock(scope: !10960, file: !274, line: 69, column: 2)
!10964 = !DILocation(line: 69, column: 2, scope: !10962)
!10965 = !DILocalVariable(name: "__dummy2", scope: !10962, file: !274, line: 69, type: !265)
!10966 = !DILocation(line: 69, column: 2, scope: !10963)
!10967 = !DILocation(line: 69, column: 2, scope: !10913)
!10968 = !{i32 -2141596511}
!10969 = !DILocation(line: 69, column: 2, scope: !10912)
!10970 = !DILocation(line: 329, column: 10, scope: !9956, inlinedAt: !10911)
!10971 = !DILocation(line: 329, column: 16, scope: !9956, inlinedAt: !10911)
!10972 = !DILocation(line: 70, column: 17, scope: !10904)
!10973 = !DILocation(line: 70, column: 21, scope: !10904)
!10974 = !DILocation(line: 70, column: 28, scope: !10904)
!10975 = !DILocation(line: 70, column: 32, scope: !10904)
!10976 = !DILocation(line: 70, column: 2, scope: !10904)
!10977 = !DILocation(line: 71, column: 26, scope: !10904)
!10978 = !DILocation(line: 71, column: 30, scope: !10904)
!10979 = !DILocation(line: 71, column: 36, scope: !10904)
!10980 = !DILocation(line: 409, column: 2, scope: !10011, inlinedAt: !10908)
!10981 = !DILocation(line: 409, column: 2, scope: !10016, inlinedAt: !10908)
!10982 = !DILocation(line: 409, column: 2, scope: !10017, inlinedAt: !10908)
!10983 = !DILocation(line: 409, column: 2, scope: !10024, inlinedAt: !10908)
!10984 = !DILocation(line: 409, column: 2, scope: !10027, inlinedAt: !10908)
!10985 = !DILocation(line: 73, column: 10, scope: !10904)
!10986 = !DILocation(line: 73, column: 14, scope: !10904)
!10987 = !DILocation(line: 73, column: 2, scope: !10904)
!10988 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !10989, file: !10989, line: 666, type: !10990, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!10989 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!10990 = !DISubroutineType(types: !10991)
!10991 = !{!265}
!10992 = !DILocalVariable(name: "f", scope: !10988, file: !10989, line: 668, type: !265)
!10993 = !DILocation(line: 668, column: 16, scope: !10988)
!10994 = !DILocation(line: 670, column: 6, scope: !10988)
!10995 = !DILocation(line: 670, column: 4, scope: !10988)
!10996 = !DILocation(line: 671, column: 2, scope: !10988)
!10997 = !DILocation(line: 672, column: 9, scope: !10988)
!10998 = !DILocation(line: 672, column: 2, scope: !10988)
!10999 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !10989, file: !10989, line: 646, type: !10990, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11000 = !DILocalVariable(name: "__ret", scope: !11001, file: !10989, line: 648, type: !265)
!11001 = distinct !DILexicalBlock(scope: !10999, file: !10989, line: 648, column: 9)
!11002 = !DILocation(line: 648, column: 9, scope: !11001)
!11003 = !DILocalVariable(name: "__edi", scope: !11001, file: !10989, line: 648, type: !265)
!11004 = !DILocalVariable(name: "__esi", scope: !11001, file: !10989, line: 648, type: !265)
!11005 = !DILocalVariable(name: "__edx", scope: !11001, file: !10989, line: 648, type: !265)
!11006 = !DILocalVariable(name: "__ecx", scope: !11001, file: !10989, line: 648, type: !265)
!11007 = !DILocalVariable(name: "__eax", scope: !11001, file: !10989, line: 648, type: !265)
!11008 = !DILocation(line: 648, column: 9, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !10989, line: 648, column: 9)
!11010 = distinct !DILexicalBlock(scope: !11001, file: !10989, line: 648, column: 9)
!11011 = !{i32 -2145648201, i32 -2145645886, i32 -2145645652, i32 -2145645601, i32 -2145645573, i32 -2145645548, i32 -2145645864, i32 -2145645851, i32 -2145645413, i32 -2145645294, i32 -2145645759, i32 -2145645732, i32 -2145645704, i32 -2145645674}
!11012 = !DILocalVariable(name: "__mask", scope: !11013, file: !10989, line: 648, type: !265)
!11013 = distinct !DILexicalBlock(scope: !11009, file: !10989, line: 648, column: 9)
!11014 = !DILocation(line: 648, column: 9, scope: !11013)
!11015 = !DILocation(line: 648, column: 9, scope: !11010)
!11016 = !DILocation(line: 648, column: 2, scope: !10999)
!11017 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !10989, file: !10989, line: 656, type: !2016, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11018 = !DILocalVariable(name: "__edi", scope: !11019, file: !10989, line: 658, type: !265)
!11019 = distinct !DILexicalBlock(scope: !11017, file: !10989, line: 658, column: 2)
!11020 = !DILocation(line: 658, column: 2, scope: !11019)
!11021 = !DILocalVariable(name: "__esi", scope: !11019, file: !10989, line: 658, type: !265)
!11022 = !DILocalVariable(name: "__edx", scope: !11019, file: !10989, line: 658, type: !265)
!11023 = !DILocalVariable(name: "__ecx", scope: !11019, file: !10989, line: 658, type: !265)
!11024 = !DILocalVariable(name: "__eax", scope: !11019, file: !10989, line: 658, type: !265)
!11025 = !{i32 -2145641107, i32 -2145640375, i32 -2145640141, i32 -2145640090, i32 -2145640062, i32 -2145640037, i32 -2145640353, i32 -2145640340, i32 -2145639902, i32 -2145639783, i32 -2145640248, i32 -2145640221, i32 -2145640193, i32 -2145640163}
!11026 = !DILocation(line: 659, column: 1, scope: !11017)
!11027 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !10989, file: !10989, line: 651, type: !4533, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11028 = !DILocalVariable(name: "f", arg: 1, scope: !11027, file: !10989, line: 651, type: !265)
!11029 = !DILocation(line: 651, column: 65, scope: !11027)
!11030 = !DILocalVariable(name: "__edi", scope: !11031, file: !10989, line: 653, type: !265)
!11031 = distinct !DILexicalBlock(scope: !11027, file: !10989, line: 653, column: 2)
!11032 = !DILocation(line: 653, column: 2, scope: !11031)
!11033 = !DILocalVariable(name: "__esi", scope: !11031, file: !10989, line: 653, type: !265)
!11034 = !DILocalVariable(name: "__edx", scope: !11031, file: !10989, line: 653, type: !265)
!11035 = !DILocalVariable(name: "__ecx", scope: !11031, file: !10989, line: 653, type: !265)
!11036 = !DILocalVariable(name: "__eax", scope: !11031, file: !10989, line: 653, type: !265)
!11037 = !{i32 -2145643734, i32 -2145642984, i32 -2145642750, i32 -2145642699, i32 -2145642671, i32 -2145642646, i32 -2145642962, i32 -2145642949, i32 -2145642511, i32 -2145642392, i32 -2145642857, i32 -2145642830, i32 -2145642802, i32 -2145642772}
!11038 = !DILocation(line: 654, column: 1, scope: !11027)
!11039 = distinct !DISubprogram(name: "is_slave_direction", scope: !138, file: !138, line: 950, type: !11040, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11040 = !DISubroutineType(types: !11041)
!11041 = !{!314, !179}
!11042 = !DILocalVariable(name: "direction", arg: 1, scope: !11039, file: !138, line: 950, type: !179)
!11043 = !DILocation(line: 950, column: 67, scope: !11039)
!11044 = !DILocation(line: 952, column: 10, scope: !11039)
!11045 = !DILocation(line: 952, column: 20, scope: !11039)
!11046 = !DILocation(line: 952, column: 39, scope: !11039)
!11047 = !DILocation(line: 952, column: 43, scope: !11039)
!11048 = !DILocation(line: 952, column: 53, scope: !11039)
!11049 = !DILocation(line: 952, column: 2, scope: !11039)
!11050 = distinct !DISubprogram(name: "dmaengine_get_src_icg", scope: !138, file: !138, line: 1307, type: !11051, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11051 = !DISubroutineType(types: !11052)
!11052 = !{!447, !4408, !11053}
!11053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 64)
!11054 = !DILocalVariable(name: "xt", arg: 1, scope: !11050, file: !138, line: 1307, type: !4408)
!11055 = !DILocation(line: 1307, column: 77, scope: !11050)
!11056 = !DILocalVariable(name: "chunk", arg: 2, scope: !11050, file: !138, line: 1308, type: !11053)
!11057 = !DILocation(line: 1308, column: 28, scope: !11050)
!11058 = !DILocation(line: 1310, column: 27, scope: !11050)
!11059 = !DILocation(line: 1310, column: 31, scope: !11050)
!11060 = !DILocation(line: 1310, column: 40, scope: !11050)
!11061 = !DILocation(line: 1310, column: 44, scope: !11050)
!11062 = !DILocation(line: 1311, column: 6, scope: !11050)
!11063 = !DILocation(line: 1311, column: 13, scope: !11050)
!11064 = !DILocation(line: 1311, column: 18, scope: !11050)
!11065 = !DILocation(line: 1311, column: 25, scope: !11050)
!11066 = !DILocation(line: 1310, column: 9, scope: !11050)
!11067 = !DILocation(line: 1310, column: 2, scope: !11050)
!11068 = distinct !DISubprogram(name: "dmaengine_get_dst_icg", scope: !138, file: !138, line: 1300, type: !11051, scopeLine: 1302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11069 = !DILocalVariable(name: "xt", arg: 1, scope: !11068, file: !138, line: 1300, type: !4408)
!11070 = !DILocation(line: 1300, column: 77, scope: !11068)
!11071 = !DILocalVariable(name: "chunk", arg: 2, scope: !11068, file: !138, line: 1301, type: !11053)
!11072 = !DILocation(line: 1301, column: 28, scope: !11068)
!11073 = !DILocation(line: 1303, column: 27, scope: !11068)
!11074 = !DILocation(line: 1303, column: 31, scope: !11068)
!11075 = !DILocation(line: 1303, column: 40, scope: !11068)
!11076 = !DILocation(line: 1303, column: 44, scope: !11068)
!11077 = !DILocation(line: 1304, column: 6, scope: !11068)
!11078 = !DILocation(line: 1304, column: 13, scope: !11068)
!11079 = !DILocation(line: 1304, column: 18, scope: !11068)
!11080 = !DILocation(line: 1304, column: 25, scope: !11068)
!11081 = !DILocation(line: 1303, column: 9, scope: !11068)
!11082 = !DILocation(line: 1303, column: 2, scope: !11068)
!11083 = distinct !DISubprogram(name: "dmaengine_get_icg", scope: !138, file: !138, line: 1287, type: !11084, scopeLine: 1289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11084 = !DISubroutineType(types: !11085)
!11085 = !{!447, !314, !314, !447, !447}
!11086 = !DILocalVariable(name: "inc", arg: 1, scope: !11083, file: !138, line: 1287, type: !314)
!11087 = !DILocation(line: 1287, column: 45, scope: !11083)
!11088 = !DILocalVariable(name: "sgl", arg: 2, scope: !11083, file: !138, line: 1287, type: !314)
!11089 = !DILocation(line: 1287, column: 55, scope: !11083)
!11090 = !DILocalVariable(name: "icg", arg: 3, scope: !11083, file: !138, line: 1287, type: !447)
!11091 = !DILocation(line: 1287, column: 67, scope: !11083)
!11092 = !DILocalVariable(name: "dir_icg", arg: 4, scope: !11083, file: !138, line: 1288, type: !447)
!11093 = !DILocation(line: 1288, column: 18, scope: !11083)
!11094 = !DILocation(line: 1290, column: 6, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11083, file: !138, line: 1290, column: 6)
!11096 = !DILocation(line: 1290, column: 6, scope: !11083)
!11097 = !DILocation(line: 1291, column: 7, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11099, file: !138, line: 1291, column: 7)
!11099 = distinct !DILexicalBlock(scope: !11095, file: !138, line: 1290, column: 11)
!11100 = !DILocation(line: 1291, column: 7, scope: !11099)
!11101 = !DILocation(line: 1292, column: 11, scope: !11098)
!11102 = !DILocation(line: 1292, column: 4, scope: !11098)
!11103 = !DILocation(line: 1293, column: 7, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11099, file: !138, line: 1293, column: 7)
!11105 = !DILocation(line: 1293, column: 7, scope: !11099)
!11106 = !DILocation(line: 1294, column: 11, scope: !11104)
!11107 = !DILocation(line: 1294, column: 4, scope: !11104)
!11108 = !DILocation(line: 1295, column: 2, scope: !11099)
!11109 = !DILocation(line: 1297, column: 2, scope: !11083)
!11110 = !DILocation(line: 1298, column: 1, scope: !11083)
!11111 = distinct !DISubprogram(name: "edma_alloc_channel", scope: !3, file: !3, line: 720, type: !11112, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11112 = !DISubroutineType(types: !11113)
!11113 = !{!130, !4572, !128}
!11114 = !DILocalVariable(name: "echan", arg: 1, scope: !11111, file: !3, line: 720, type: !4572)
!11115 = !DILocation(line: 720, column: 49, scope: !11111)
!11116 = !DILocalVariable(name: "eventq_no", arg: 2, scope: !11111, file: !3, line: 721, type: !128)
!11117 = !DILocation(line: 721, column: 27, scope: !11111)
!11118 = !DILocalVariable(name: "ecc", scope: !11111, file: !3, line: 723, type: !4579)
!11119 = !DILocation(line: 723, column: 18, scope: !11111)
!11120 = !DILocation(line: 723, column: 24, scope: !11111)
!11121 = !DILocation(line: 723, column: 31, scope: !11111)
!11122 = !DILocalVariable(name: "channel", scope: !11111, file: !3, line: 724, type: !130)
!11123 = !DILocation(line: 724, column: 6, scope: !11111)
!11124 = !DILocation(line: 724, column: 16, scope: !11111)
!11125 = !DILocation(line: 726, column: 16, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11111, file: !3, line: 726, column: 6)
!11127 = !DILocation(line: 726, column: 23, scope: !11126)
!11128 = !DILocation(line: 726, column: 31, scope: !11126)
!11129 = !DILocation(line: 726, column: 36, scope: !11126)
!11130 = !DILocation(line: 726, column: 7, scope: !11126)
!11131 = !DILocation(line: 726, column: 6, scope: !11111)
!11132 = !DILocation(line: 727, column: 3, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 726, column: 52)
!11134 = !DILocation(line: 729, column: 3, scope: !11133)
!11135 = !DILocation(line: 733, column: 17, scope: !11111)
!11136 = !DILocation(line: 733, column: 36, scope: !11111)
!11137 = !DILocation(line: 734, column: 10, scope: !11111)
!11138 = !DILocation(line: 733, column: 2, scope: !11111)
!11139 = !DILocation(line: 737, column: 12, scope: !11111)
!11140 = !DILocation(line: 737, column: 2, scope: !11111)
!11141 = !DILocation(line: 739, column: 23, scope: !11111)
!11142 = !DILocation(line: 739, column: 2, scope: !11111)
!11143 = !DILocation(line: 741, column: 29, scope: !11111)
!11144 = !DILocation(line: 741, column: 36, scope: !11111)
!11145 = !DILocation(line: 741, column: 2, scope: !11111)
!11146 = !DILocation(line: 743, column: 2, scope: !11111)
!11147 = !DILocation(line: 744, column: 1, scope: !11111)
!11148 = distinct !DISubprogram(name: "edma_free_channel", scope: !3, file: !3, line: 746, type: !7859, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11149 = !DILocalVariable(name: "echan", arg: 1, scope: !11148, file: !3, line: 746, type: !4572)
!11150 = !DILocation(line: 746, column: 49, scope: !11148)
!11151 = !DILocation(line: 749, column: 12, scope: !11148)
!11152 = !DILocation(line: 749, column: 2, scope: !11148)
!11153 = !DILocation(line: 751, column: 23, scope: !11148)
!11154 = !DILocation(line: 751, column: 2, scope: !11148)
!11155 = !DILocation(line: 752, column: 1, scope: !11148)
!11156 = distinct !DISubprogram(name: "edma_or_array2", scope: !3, file: !3, line: 369, type: !6502, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11157 = !DILocalVariable(name: "ecc", arg: 1, scope: !11156, file: !3, line: 369, type: !4579)
!11158 = !DILocation(line: 369, column: 51, scope: !11156)
!11159 = !DILocalVariable(name: "offset", arg: 2, scope: !11156, file: !3, line: 369, type: !130)
!11160 = !DILocation(line: 369, column: 60, scope: !11156)
!11161 = !DILocalVariable(name: "i", arg: 3, scope: !11156, file: !3, line: 369, type: !130)
!11162 = !DILocation(line: 369, column: 72, scope: !11156)
!11163 = !DILocalVariable(name: "j", arg: 4, scope: !11156, file: !3, line: 369, type: !130)
!11164 = !DILocation(line: 369, column: 79, scope: !11156)
!11165 = !DILocalVariable(name: "or", arg: 5, scope: !11156, file: !3, line: 370, type: !7)
!11166 = !DILocation(line: 370, column: 16, scope: !11156)
!11167 = !DILocation(line: 372, column: 10, scope: !11156)
!11168 = !DILocation(line: 372, column: 15, scope: !11156)
!11169 = !DILocation(line: 372, column: 26, scope: !11156)
!11170 = !DILocation(line: 372, column: 28, scope: !11156)
!11171 = !DILocation(line: 372, column: 34, scope: !11156)
!11172 = !DILocation(line: 372, column: 32, scope: !11156)
!11173 = !DILocation(line: 372, column: 37, scope: !11156)
!11174 = !DILocation(line: 372, column: 22, scope: !11156)
!11175 = !DILocation(line: 372, column: 44, scope: !11156)
!11176 = !DILocation(line: 372, column: 2, scope: !11156)
!11177 = !DILocation(line: 373, column: 1, scope: !11156)
!11178 = distinct !DISubprogram(name: "edma_setup_interrupt", scope: !3, file: !3, line: 453, type: !11179, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11179 = !DISubroutineType(types: !11180)
!11180 = !{null, !4572, !314}
!11181 = !DILocalVariable(name: "echan", arg: 1, scope: !11178, file: !3, line: 453, type: !4572)
!11182 = !DILocation(line: 453, column: 52, scope: !11178)
!11183 = !DILocalVariable(name: "enable", arg: 2, scope: !11178, file: !3, line: 453, type: !314)
!11184 = !DILocation(line: 453, column: 64, scope: !11178)
!11185 = !DILocalVariable(name: "ecc", scope: !11178, file: !3, line: 455, type: !4579)
!11186 = !DILocation(line: 455, column: 18, scope: !11178)
!11187 = !DILocation(line: 455, column: 24, scope: !11178)
!11188 = !DILocation(line: 455, column: 31, scope: !11178)
!11189 = !DILocalVariable(name: "channel", scope: !11178, file: !3, line: 456, type: !130)
!11190 = !DILocation(line: 456, column: 6, scope: !11178)
!11191 = !DILocation(line: 456, column: 16, scope: !11178)
!11192 = !DILocalVariable(name: "idx", scope: !11178, file: !3, line: 457, type: !130)
!11193 = !DILocation(line: 457, column: 6, scope: !11178)
!11194 = !DILocation(line: 457, column: 12, scope: !11178)
!11195 = !DILocalVariable(name: "ch_bit", scope: !11178, file: !3, line: 458, type: !130)
!11196 = !DILocation(line: 458, column: 6, scope: !11178)
!11197 = !DILocation(line: 458, column: 15, scope: !11178)
!11198 = !DILocation(line: 460, column: 6, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11178, file: !3, line: 460, column: 6)
!11200 = !DILocation(line: 460, column: 6, scope: !11178)
!11201 = !DILocation(line: 461, column: 28, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11199, file: !3, line: 460, column: 14)
!11203 = !DILocation(line: 461, column: 41, scope: !11202)
!11204 = !DILocation(line: 461, column: 46, scope: !11202)
!11205 = !DILocation(line: 461, column: 3, scope: !11202)
!11206 = !DILocation(line: 462, column: 28, scope: !11202)
!11207 = !DILocation(line: 462, column: 42, scope: !11202)
!11208 = !DILocation(line: 462, column: 47, scope: !11202)
!11209 = !DILocation(line: 462, column: 3, scope: !11202)
!11210 = !DILocation(line: 463, column: 2, scope: !11202)
!11211 = !DILocation(line: 464, column: 28, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11199, file: !3, line: 463, column: 9)
!11213 = !DILocation(line: 464, column: 42, scope: !11212)
!11214 = !DILocation(line: 464, column: 47, scope: !11212)
!11215 = !DILocation(line: 464, column: 3, scope: !11212)
!11216 = !DILocation(line: 466, column: 1, scope: !11178)
!11217 = distinct !DISubprogram(name: "edma_or", scope: !3, file: !3, line: 337, type: !7965, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11218 = !DILocalVariable(name: "ecc", arg: 1, scope: !11217, file: !3, line: 337, type: !4579)
!11219 = !DILocation(line: 337, column: 44, scope: !11217)
!11220 = !DILocalVariable(name: "offset", arg: 2, scope: !11217, file: !3, line: 337, type: !130)
!11221 = !DILocation(line: 337, column: 53, scope: !11217)
!11222 = !DILocalVariable(name: "or", arg: 3, scope: !11217, file: !3, line: 337, type: !7)
!11223 = !DILocation(line: 337, column: 70, scope: !11217)
!11224 = !DILocalVariable(name: "val", scope: !11217, file: !3, line: 339, type: !7)
!11225 = !DILocation(line: 339, column: 11, scope: !11217)
!11226 = !DILocation(line: 339, column: 27, scope: !11217)
!11227 = !DILocation(line: 339, column: 32, scope: !11217)
!11228 = !DILocation(line: 339, column: 17, scope: !11217)
!11229 = !DILocation(line: 341, column: 9, scope: !11217)
!11230 = !DILocation(line: 341, column: 6, scope: !11217)
!11231 = !DILocation(line: 342, column: 13, scope: !11217)
!11232 = !DILocation(line: 342, column: 18, scope: !11217)
!11233 = !DILocation(line: 342, column: 26, scope: !11217)
!11234 = !DILocation(line: 342, column: 2, scope: !11217)
!11235 = !DILocation(line: 343, column: 1, scope: !11217)
!11236 = distinct !DISubprogram(name: "vchan_free_chan_resources", scope: !274, file: !274, line: 187, type: !11237, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11237 = !DISubroutineType(types: !11238)
!11238 = !{null, !272}
!11239 = !DILocation(line: 407, column: 64, scope: !9948, inlinedAt: !11240)
!11240 = distinct !DILocation(line: 197, column: 2, scope: !11236)
!11241 = !DILocation(line: 407, column: 84, scope: !9948, inlinedAt: !11240)
!11242 = !DILocation(line: 327, column: 67, scope: !9956, inlinedAt: !11243)
!11243 = distinct !DILocation(line: 193, column: 2, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11245, file: !274, line: 193, column: 2)
!11245 = distinct !DILexicalBlock(scope: !11246, file: !274, line: 193, column: 2)
!11246 = distinct !DILexicalBlock(scope: !11247, file: !274, line: 193, column: 2)
!11247 = distinct !DILexicalBlock(scope: !11248, file: !274, line: 193, column: 2)
!11248 = distinct !DILexicalBlock(scope: !11236, file: !274, line: 193, column: 2)
!11249 = !DILocalVariable(name: "vc", arg: 1, scope: !11236, file: !274, line: 187, type: !272)
!11250 = !DILocation(line: 187, column: 68, scope: !11236)
!11251 = !DILocalVariable(name: "vd", scope: !11236, file: !274, line: 189, type: !4544)
!11252 = !DILocation(line: 189, column: 24, scope: !11236)
!11253 = !DILocalVariable(name: "flags", scope: !11236, file: !274, line: 190, type: !265)
!11254 = !DILocation(line: 190, column: 16, scope: !11236)
!11255 = !DILocalVariable(name: "head", scope: !11236, file: !274, line: 191, type: !300)
!11256 = !DILocation(line: 191, column: 2, scope: !11236)
!11257 = !DILocation(line: 193, column: 2, scope: !11236)
!11258 = !DILocation(line: 193, column: 2, scope: !11248)
!11259 = !DILocalVariable(name: "__dummy", scope: !11260, file: !274, line: 193, type: !265)
!11260 = distinct !DILexicalBlock(scope: !11247, file: !274, line: 193, column: 2)
!11261 = !DILocation(line: 193, column: 2, scope: !11260)
!11262 = !DILocalVariable(name: "__dummy2", scope: !11260, file: !274, line: 193, type: !265)
!11263 = !DILocation(line: 193, column: 2, scope: !11247)
!11264 = !DILocation(line: 193, column: 2, scope: !11246)
!11265 = !DILocation(line: 193, column: 2, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11246, file: !274, line: 193, column: 2)
!11267 = !DILocalVariable(name: "__dummy", scope: !11268, file: !274, line: 193, type: !265)
!11268 = distinct !DILexicalBlock(scope: !11269, file: !274, line: 193, column: 2)
!11269 = distinct !DILexicalBlock(scope: !11266, file: !274, line: 193, column: 2)
!11270 = !DILocation(line: 193, column: 2, scope: !11268)
!11271 = !DILocalVariable(name: "__dummy2", scope: !11268, file: !274, line: 193, type: !265)
!11272 = !DILocation(line: 193, column: 2, scope: !11269)
!11273 = !DILocation(line: 193, column: 2, scope: !11245)
!11274 = !{i32 -2141589104}
!11275 = !DILocation(line: 193, column: 2, scope: !11244)
!11276 = !DILocation(line: 329, column: 10, scope: !9956, inlinedAt: !11243)
!11277 = !DILocation(line: 329, column: 16, scope: !9956, inlinedAt: !11243)
!11278 = !DILocation(line: 194, column: 28, scope: !11236)
!11279 = !DILocation(line: 194, column: 2, scope: !11236)
!11280 = !DILocalVariable(name: "__mptr", scope: !11281, file: !274, line: 195, type: !258)
!11281 = distinct !DILexicalBlock(scope: !11282, file: !274, line: 195, column: 2)
!11282 = distinct !DILexicalBlock(scope: !11236, file: !274, line: 195, column: 2)
!11283 = !DILocation(line: 195, column: 2, scope: !11281)
!11284 = !DILocation(line: 195, column: 2, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11281, file: !274, line: 195, column: 2)
!11286 = !DILocation(line: 195, column: 2, scope: !11282)
!11287 = !DILocation(line: 195, column: 2, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11282, file: !274, line: 195, column: 2)
!11289 = !DILocation(line: 196, column: 31, scope: !11288)
!11290 = !DILocation(line: 196, column: 35, scope: !11288)
!11291 = !DILocation(line: 196, column: 3, scope: !11288)
!11292 = !DILocalVariable(name: "__mptr", scope: !11293, file: !274, line: 195, type: !258)
!11293 = distinct !DILexicalBlock(scope: !11288, file: !274, line: 195, column: 2)
!11294 = !DILocation(line: 195, column: 2, scope: !11293)
!11295 = !DILocation(line: 195, column: 2, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11293, file: !274, line: 195, column: 2)
!11297 = distinct !{!11297, !11286, !11298}
!11298 = !DILocation(line: 196, column: 37, scope: !11282)
!11299 = !DILocation(line: 197, column: 26, scope: !11236)
!11300 = !DILocation(line: 197, column: 30, scope: !11236)
!11301 = !DILocation(line: 197, column: 36, scope: !11236)
!11302 = !DILocation(line: 409, column: 2, scope: !10011, inlinedAt: !11240)
!11303 = !DILocation(line: 409, column: 2, scope: !10016, inlinedAt: !11240)
!11304 = !DILocation(line: 409, column: 2, scope: !10017, inlinedAt: !11240)
!11305 = !DILocation(line: 409, column: 2, scope: !10024, inlinedAt: !11240)
!11306 = !DILocation(line: 409, column: 2, scope: !10027, inlinedAt: !11240)
!11307 = !DILocation(line: 199, column: 27, scope: !11236)
!11308 = !DILocation(line: 199, column: 2, scope: !11236)
!11309 = !DILocation(line: 200, column: 1, scope: !11236)
!11310 = distinct !DISubprogram(name: "vchan_get_all_descriptors", scope: !274, file: !274, line: 177, type: !11311, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11311 = !DISubroutineType(types: !11312)
!11312 = !{null, !272, !303}
!11313 = !DILocalVariable(name: "vc", arg: 1, scope: !11310, file: !274, line: 177, type: !272)
!11314 = !DILocation(line: 177, column: 68, scope: !11310)
!11315 = !DILocalVariable(name: "head", arg: 2, scope: !11310, file: !274, line: 178, type: !303)
!11316 = !DILocation(line: 178, column: 20, scope: !11310)
!11317 = !DILocation(line: 180, column: 25, scope: !11310)
!11318 = !DILocation(line: 180, column: 29, scope: !11310)
!11319 = !DILocation(line: 180, column: 45, scope: !11310)
!11320 = !DILocation(line: 180, column: 2, scope: !11310)
!11321 = !DILocation(line: 181, column: 25, scope: !11310)
!11322 = !DILocation(line: 181, column: 29, scope: !11310)
!11323 = !DILocation(line: 181, column: 45, scope: !11310)
!11324 = !DILocation(line: 181, column: 2, scope: !11310)
!11325 = !DILocation(line: 182, column: 25, scope: !11310)
!11326 = !DILocation(line: 182, column: 29, scope: !11310)
!11327 = !DILocation(line: 182, column: 42, scope: !11310)
!11328 = !DILocation(line: 182, column: 2, scope: !11310)
!11329 = !DILocation(line: 183, column: 25, scope: !11310)
!11330 = !DILocation(line: 183, column: 29, scope: !11310)
!11331 = !DILocation(line: 183, column: 45, scope: !11310)
!11332 = !DILocation(line: 183, column: 2, scope: !11310)
!11333 = !DILocation(line: 184, column: 25, scope: !11310)
!11334 = !DILocation(line: 184, column: 29, scope: !11310)
!11335 = !DILocation(line: 184, column: 46, scope: !11310)
!11336 = !DILocation(line: 184, column: 2, scope: !11310)
!11337 = !DILocation(line: 185, column: 1, scope: !11310)
!11338 = distinct !DISubprogram(name: "dmaengine_desc_clear_reuse", scope: !138, file: !138, line: 1540, type: !8329, scopeLine: 1541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11339 = !DILocalVariable(name: "tx", arg: 1, scope: !11338, file: !138, line: 1540, type: !4296)
!11340 = !DILocation(line: 1540, column: 79, scope: !11338)
!11341 = !DILocation(line: 1542, column: 2, scope: !11338)
!11342 = !DILocation(line: 1542, column: 6, scope: !11338)
!11343 = !DILocation(line: 1542, column: 12, scope: !11338)
!11344 = !DILocation(line: 1543, column: 1, scope: !11338)
!11345 = distinct !DISubprogram(name: "list_splice_tail_init", scope: !8361, file: !8361, line: 495, type: !8362, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11346 = !DILocalVariable(name: "list", arg: 1, scope: !11345, file: !8361, line: 495, type: !303)
!11347 = !DILocation(line: 495, column: 60, scope: !11345)
!11348 = !DILocalVariable(name: "head", arg: 2, scope: !11345, file: !8361, line: 496, type: !303)
!11349 = !DILocation(line: 496, column: 25, scope: !11345)
!11350 = !DILocation(line: 498, column: 18, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11345, file: !8361, line: 498, column: 6)
!11352 = !DILocation(line: 498, column: 7, scope: !11351)
!11353 = !DILocation(line: 498, column: 6, scope: !11345)
!11354 = !DILocation(line: 499, column: 17, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11351, file: !8361, line: 498, column: 25)
!11356 = !DILocation(line: 499, column: 23, scope: !11355)
!11357 = !DILocation(line: 499, column: 29, scope: !11355)
!11358 = !DILocation(line: 499, column: 35, scope: !11355)
!11359 = !DILocation(line: 499, column: 3, scope: !11355)
!11360 = !DILocation(line: 500, column: 18, scope: !11355)
!11361 = !DILocation(line: 500, column: 3, scope: !11355)
!11362 = !DILocation(line: 501, column: 2, scope: !11355)
!11363 = !DILocation(line: 502, column: 1, scope: !11345)
!11364 = distinct !DISubprogram(name: "list_empty", scope: !8361, file: !8361, line: 280, type: !11365, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11365 = !DISubroutineType(types: !11366)
!11366 = !{!130, !11367}
!11367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11368, size: 64)
!11368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !300)
!11369 = !DILocalVariable(name: "head", arg: 1, scope: !11364, file: !8361, line: 280, type: !11367)
!11370 = !DILocation(line: 280, column: 54, scope: !11364)
!11371 = !DILocation(line: 282, column: 9, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11364, file: !8361, line: 282, column: 9)
!11373 = !DILocation(line: 282, column: 9, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11372, file: !8361, line: 282, column: 9)
!11375 = !DILocation(line: 282, column: 34, scope: !11364)
!11376 = !DILocation(line: 282, column: 31, scope: !11364)
!11377 = !DILocation(line: 282, column: 2, scope: !11364)
!11378 = distinct !DISubprogram(name: "__list_splice", scope: !8361, file: !8361, line: 433, type: !11379, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11379 = !DISubroutineType(types: !11380)
!11380 = !{null, !11367, !303, !303}
!11381 = !DILocalVariable(name: "list", arg: 1, scope: !11378, file: !8361, line: 433, type: !11367)
!11382 = !DILocation(line: 433, column: 58, scope: !11378)
!11383 = !DILocalVariable(name: "prev", arg: 2, scope: !11378, file: !8361, line: 434, type: !303)
!11384 = !DILocation(line: 434, column: 24, scope: !11378)
!11385 = !DILocalVariable(name: "next", arg: 3, scope: !11378, file: !8361, line: 435, type: !303)
!11386 = !DILocation(line: 435, column: 24, scope: !11378)
!11387 = !DILocalVariable(name: "first", scope: !11378, file: !8361, line: 437, type: !303)
!11388 = !DILocation(line: 437, column: 20, scope: !11378)
!11389 = !DILocation(line: 437, column: 28, scope: !11378)
!11390 = !DILocation(line: 437, column: 34, scope: !11378)
!11391 = !DILocalVariable(name: "last", scope: !11378, file: !8361, line: 438, type: !303)
!11392 = !DILocation(line: 438, column: 20, scope: !11378)
!11393 = !DILocation(line: 438, column: 27, scope: !11378)
!11394 = !DILocation(line: 438, column: 33, scope: !11378)
!11395 = !DILocation(line: 440, column: 16, scope: !11378)
!11396 = !DILocation(line: 440, column: 2, scope: !11378)
!11397 = !DILocation(line: 440, column: 9, scope: !11378)
!11398 = !DILocation(line: 440, column: 14, scope: !11378)
!11399 = !DILocation(line: 441, column: 15, scope: !11378)
!11400 = !DILocation(line: 441, column: 2, scope: !11378)
!11401 = !DILocation(line: 441, column: 8, scope: !11378)
!11402 = !DILocation(line: 441, column: 13, scope: !11378)
!11403 = !DILocation(line: 443, column: 15, scope: !11378)
!11404 = !DILocation(line: 443, column: 2, scope: !11378)
!11405 = !DILocation(line: 443, column: 8, scope: !11378)
!11406 = !DILocation(line: 443, column: 13, scope: !11378)
!11407 = !DILocation(line: 444, column: 15, scope: !11378)
!11408 = !DILocation(line: 444, column: 2, scope: !11378)
!11409 = !DILocation(line: 444, column: 8, scope: !11378)
!11410 = !DILocation(line: 444, column: 13, scope: !11378)
!11411 = !DILocation(line: 445, column: 1, scope: !11378)
!11412 = distinct !DISubprogram(name: "vchan_issue_pending", scope: !274, file: !274, line: 82, type: !11413, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11413 = !DISubroutineType(types: !11414)
!11414 = !{!314, !272}
!11415 = !DILocalVariable(name: "vc", arg: 1, scope: !11412, file: !274, line: 82, type: !272)
!11416 = !DILocation(line: 82, column: 62, scope: !11412)
!11417 = !DILocation(line: 84, column: 25, scope: !11412)
!11418 = !DILocation(line: 84, column: 29, scope: !11412)
!11419 = !DILocation(line: 84, column: 46, scope: !11412)
!11420 = !DILocation(line: 84, column: 50, scope: !11412)
!11421 = !DILocation(line: 84, column: 2, scope: !11412)
!11422 = !DILocation(line: 85, column: 22, scope: !11412)
!11423 = !DILocation(line: 85, column: 26, scope: !11412)
!11424 = !DILocation(line: 85, column: 10, scope: !11412)
!11425 = !DILocation(line: 85, column: 9, scope: !11412)
!11426 = !DILocation(line: 85, column: 2, scope: !11412)
!11427 = distinct !DISubprogram(name: "dma_cookie_status", scope: !8328, file: !8328, line: 68, type: !4474, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11428 = !DILocalVariable(name: "chan", arg: 1, scope: !11427, file: !8328, line: 68, type: !316)
!11429 = !DILocation(line: 68, column: 66, scope: !11427)
!11430 = !DILocalVariable(name: "cookie", arg: 2, scope: !11427, file: !8328, line: 69, type: !4300)
!11431 = !DILocation(line: 69, column: 15, scope: !11427)
!11432 = !DILocalVariable(name: "state", arg: 3, scope: !11427, file: !8328, line: 69, type: !4476)
!11433 = !DILocation(line: 69, column: 44, scope: !11427)
!11434 = !DILocalVariable(name: "used", scope: !11427, file: !8328, line: 71, type: !4300)
!11435 = !DILocation(line: 71, column: 15, scope: !11427)
!11436 = !DILocalVariable(name: "complete", scope: !11427, file: !8328, line: 71, type: !4300)
!11437 = !DILocation(line: 71, column: 21, scope: !11427)
!11438 = !DILocation(line: 73, column: 9, scope: !11427)
!11439 = !DILocation(line: 73, column: 15, scope: !11427)
!11440 = !DILocation(line: 73, column: 7, scope: !11427)
!11441 = !DILocation(line: 74, column: 13, scope: !11427)
!11442 = !DILocation(line: 74, column: 19, scope: !11427)
!11443 = !DILocation(line: 74, column: 11, scope: !11427)
!11444 = !DILocation(line: 75, column: 2, scope: !11427)
!11445 = !{i32 -2141606422}
!11446 = !DILocation(line: 76, column: 6, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11427, file: !8328, line: 76, column: 6)
!11448 = !DILocation(line: 76, column: 6, scope: !11427)
!11449 = !DILocation(line: 77, column: 17, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11447, file: !8328, line: 76, column: 13)
!11451 = !DILocation(line: 77, column: 3, scope: !11450)
!11452 = !DILocation(line: 77, column: 10, scope: !11450)
!11453 = !DILocation(line: 77, column: 15, scope: !11450)
!11454 = !DILocation(line: 78, column: 17, scope: !11450)
!11455 = !DILocation(line: 78, column: 3, scope: !11450)
!11456 = !DILocation(line: 78, column: 10, scope: !11450)
!11457 = !DILocation(line: 78, column: 15, scope: !11450)
!11458 = !DILocation(line: 79, column: 3, scope: !11450)
!11459 = !DILocation(line: 79, column: 10, scope: !11450)
!11460 = !DILocation(line: 79, column: 18, scope: !11450)
!11461 = !DILocation(line: 80, column: 3, scope: !11450)
!11462 = !DILocation(line: 80, column: 10, scope: !11450)
!11463 = !DILocation(line: 80, column: 26, scope: !11450)
!11464 = !DILocation(line: 81, column: 2, scope: !11450)
!11465 = !DILocation(line: 82, column: 31, scope: !11427)
!11466 = !DILocation(line: 82, column: 39, scope: !11427)
!11467 = !DILocation(line: 82, column: 49, scope: !11427)
!11468 = !DILocation(line: 82, column: 9, scope: !11427)
!11469 = !DILocation(line: 82, column: 2, scope: !11427)
!11470 = distinct !DISubprogram(name: "edma_residue", scope: !3, file: !3, line: 1823, type: !11471, scopeLine: 1824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11471 = !DISubroutineType(types: !11472)
!11472 = !{!244, !4561}
!11473 = !DILocalVariable(name: "edesc", arg: 1, scope: !11470, file: !3, line: 1823, type: !4561)
!11474 = !DILocation(line: 1823, column: 43, scope: !11470)
!11475 = !DILocalVariable(name: "dst", scope: !11470, file: !3, line: 1825, type: !314)
!11476 = !DILocation(line: 1825, column: 7, scope: !11470)
!11477 = !DILocation(line: 1825, column: 13, scope: !11470)
!11478 = !DILocation(line: 1825, column: 20, scope: !11470)
!11479 = !DILocation(line: 1825, column: 30, scope: !11470)
!11480 = !DILocalVariable(name: "loop_count", scope: !11470, file: !3, line: 1826, type: !130)
!11481 = !DILocation(line: 1826, column: 6, scope: !11470)
!11482 = !DILocalVariable(name: "echan", scope: !11470, file: !3, line: 1827, type: !4572)
!11483 = !DILocation(line: 1827, column: 20, scope: !11470)
!11484 = !DILocation(line: 1827, column: 28, scope: !11470)
!11485 = !DILocation(line: 1827, column: 35, scope: !11470)
!11486 = !DILocalVariable(name: "pset", scope: !11470, file: !3, line: 1828, type: !10699)
!11487 = !DILocation(line: 1828, column: 20, scope: !11470)
!11488 = !DILocation(line: 1828, column: 27, scope: !11470)
!11489 = !DILocation(line: 1828, column: 34, scope: !11470)
!11490 = !DILocalVariable(name: "done", scope: !11470, file: !3, line: 1829, type: !1073)
!11491 = !DILocation(line: 1829, column: 13, scope: !11470)
!11492 = !DILocalVariable(name: "pos", scope: !11470, file: !3, line: 1829, type: !1073)
!11493 = !DILocation(line: 1829, column: 19, scope: !11470)
!11494 = !DILocalVariable(name: "pos_old", scope: !11470, file: !3, line: 1829, type: !1073)
!11495 = !DILocation(line: 1829, column: 24, scope: !11470)
!11496 = !DILocalVariable(name: "channel", scope: !11470, file: !3, line: 1830, type: !130)
!11497 = !DILocation(line: 1830, column: 6, scope: !11470)
!11498 = !DILocation(line: 1830, column: 16, scope: !11470)
!11499 = !DILocalVariable(name: "idx", scope: !11470, file: !3, line: 1831, type: !130)
!11500 = !DILocation(line: 1831, column: 6, scope: !11470)
!11501 = !DILocation(line: 1831, column: 12, scope: !11470)
!11502 = !DILocalVariable(name: "ch_bit", scope: !11470, file: !3, line: 1832, type: !130)
!11503 = !DILocation(line: 1832, column: 6, scope: !11470)
!11504 = !DILocation(line: 1832, column: 15, scope: !11470)
!11505 = !DILocalVariable(name: "event_reg", scope: !11470, file: !3, line: 1833, type: !130)
!11506 = !DILocation(line: 1833, column: 6, scope: !11470)
!11507 = !DILocalVariable(name: "i", scope: !11470, file: !3, line: 1834, type: !130)
!11508 = !DILocation(line: 1834, column: 6, scope: !11470)
!11509 = !DILocation(line: 1840, column: 26, scope: !11470)
!11510 = !DILocation(line: 1840, column: 33, scope: !11470)
!11511 = !DILocation(line: 1840, column: 38, scope: !11470)
!11512 = !DILocation(line: 1840, column: 45, scope: !11470)
!11513 = !DILocation(line: 1840, column: 54, scope: !11470)
!11514 = !DILocation(line: 1840, column: 8, scope: !11470)
!11515 = !DILocation(line: 1840, column: 6, scope: !11470)
!11516 = !DILocation(line: 1850, column: 25, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 1850, column: 6)
!11518 = !DILocation(line: 1850, column: 32, scope: !11517)
!11519 = !DILocation(line: 1850, column: 6, scope: !11517)
!11520 = !DILocation(line: 1850, column: 6, scope: !11470)
!11521 = !DILocation(line: 1851, column: 13, scope: !11517)
!11522 = !DILocation(line: 1851, column: 3, scope: !11517)
!11523 = !DILocation(line: 1853, column: 13, scope: !11517)
!11524 = !DILocation(line: 1855, column: 12, scope: !11470)
!11525 = !DILocation(line: 1855, column: 10, scope: !11470)
!11526 = !DILocation(line: 1856, column: 2, scope: !11470)
!11527 = !DILocation(line: 1856, column: 33, scope: !11470)
!11528 = !DILocation(line: 1856, column: 40, scope: !11470)
!11529 = !DILocation(line: 1856, column: 45, scope: !11470)
!11530 = !DILocation(line: 1856, column: 56, scope: !11470)
!11531 = !DILocation(line: 1856, column: 9, scope: !11470)
!11532 = !DILocation(line: 1856, column: 63, scope: !11470)
!11533 = !DILocation(line: 1856, column: 61, scope: !11470)
!11534 = !DILocation(line: 1857, column: 27, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 1856, column: 71)
!11536 = !DILocation(line: 1857, column: 34, scope: !11535)
!11537 = !DILocation(line: 1857, column: 39, scope: !11535)
!11538 = !DILocation(line: 1857, column: 46, scope: !11535)
!11539 = !DILocation(line: 1857, column: 55, scope: !11535)
!11540 = !DILocation(line: 1857, column: 9, scope: !11535)
!11541 = !DILocation(line: 1857, column: 7, scope: !11535)
!11542 = !DILocation(line: 1858, column: 7, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 1858, column: 7)
!11544 = !DILocation(line: 1858, column: 14, scope: !11543)
!11545 = !DILocation(line: 1858, column: 11, scope: !11543)
!11546 = !DILocation(line: 1858, column: 7, scope: !11535)
!11547 = !DILocation(line: 1859, column: 4, scope: !11543)
!11548 = !DILocation(line: 1861, column: 8, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 1861, column: 7)
!11550 = !DILocation(line: 1861, column: 7, scope: !11535)
!11551 = !DILocation(line: 1862, column: 4, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11549, file: !3, line: 1861, column: 22)
!11553 = !DILocation(line: 1862, column: 4, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 1862, column: 4)
!11555 = !DILocation(line: 1865, column: 4, scope: !11552)
!11556 = !DILocation(line: 13, column: 2, scope: !11557, inlinedAt: !11559)
!11557 = distinct !DISubprogram(name: "rep_nop", scope: !11558, file: !11558, line: 11, type: !2016, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11558 = !DIFile(filename: "./arch/x86/include/asm/vdso/processor.h", directory: "/home/lizy2001/genbc/linux")
!11559 = distinct !DILocation(line: 18, column: 2, scope: !11560, inlinedAt: !11561)
!11560 = distinct !DISubprogram(name: "cpu_relax", scope: !11558, file: !11558, line: 16, type: !2016, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11561 = distinct !DILocation(line: 1868, column: 3, scope: !11535)
!11562 = !{i32 2033420}
!11563 = distinct !{!11563, !11526, !11564}
!11564 = !DILocation(line: 1869, column: 2, scope: !11470)
!11565 = !DILocation(line: 1878, column: 6, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 1878, column: 6)
!11567 = !DILocation(line: 1878, column: 13, scope: !11566)
!11568 = !DILocation(line: 1878, column: 6, scope: !11470)
!11569 = !DILocation(line: 1879, column: 10, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 1878, column: 21)
!11571 = !DILocation(line: 1879, column: 16, scope: !11570)
!11572 = !DILocation(line: 1879, column: 22, scope: !11570)
!11573 = !DILocation(line: 1879, column: 14, scope: !11570)
!11574 = !DILocation(line: 1879, column: 8, scope: !11570)
!11575 = !DILocation(line: 1880, column: 25, scope: !11570)
!11576 = !DILocation(line: 1880, column: 32, scope: !11570)
!11577 = !DILocation(line: 1880, column: 42, scope: !11570)
!11578 = !DILocation(line: 1880, column: 40, scope: !11570)
!11579 = !DILocation(line: 1880, column: 3, scope: !11570)
!11580 = !DILocation(line: 1880, column: 10, scope: !11570)
!11581 = !DILocation(line: 1880, column: 23, scope: !11570)
!11582 = !DILocation(line: 1881, column: 10, scope: !11570)
!11583 = !DILocation(line: 1881, column: 17, scope: !11570)
!11584 = !DILocation(line: 1881, column: 3, scope: !11570)
!11585 = !DILocation(line: 1888, column: 7, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 1888, column: 6)
!11587 = !DILocation(line: 1888, column: 6, scope: !11470)
!11588 = !DILocation(line: 1889, column: 3, scope: !11586)
!11589 = !DILocation(line: 1894, column: 10, scope: !11470)
!11590 = !DILocation(line: 1894, column: 17, scope: !11470)
!11591 = !DILocation(line: 1894, column: 7, scope: !11470)
!11592 = !DILocation(line: 1896, column: 11, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 1896, column: 2)
!11594 = !DILocation(line: 1896, column: 18, scope: !11593)
!11595 = !DILocation(line: 1896, column: 9, scope: !11593)
!11596 = !DILocation(line: 1896, column: 7, scope: !11593)
!11597 = !DILocation(line: 1896, column: 34, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11593, file: !3, line: 1896, column: 2)
!11599 = !DILocation(line: 1896, column: 38, scope: !11598)
!11600 = !DILocation(line: 1896, column: 45, scope: !11598)
!11601 = !DILocation(line: 1896, column: 36, scope: !11598)
!11602 = !DILocation(line: 1896, column: 2, scope: !11593)
!11603 = !DILocation(line: 1902, column: 7, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11605, file: !3, line: 1902, column: 7)
!11605 = distinct !DILexicalBlock(scope: !11598, file: !3, line: 1896, column: 69)
!11606 = !DILocation(line: 1902, column: 14, scope: !11604)
!11607 = !DILocation(line: 1902, column: 20, scope: !11604)
!11608 = !DILocation(line: 1902, column: 11, scope: !11604)
!11609 = !DILocation(line: 1902, column: 25, scope: !11604)
!11610 = !DILocation(line: 1902, column: 28, scope: !11604)
!11611 = !DILocation(line: 1902, column: 34, scope: !11604)
!11612 = !DILocation(line: 1902, column: 40, scope: !11604)
!11613 = !DILocation(line: 1902, column: 47, scope: !11604)
!11614 = !DILocation(line: 1902, column: 53, scope: !11604)
!11615 = !DILocation(line: 1902, column: 45, scope: !11604)
!11616 = !DILocation(line: 1902, column: 32, scope: !11604)
!11617 = !DILocation(line: 1902, column: 7, scope: !11605)
!11618 = !DILocation(line: 1903, column: 11, scope: !11604)
!11619 = !DILocation(line: 1903, column: 18, scope: !11604)
!11620 = !DILocation(line: 1903, column: 34, scope: !11604)
!11621 = !DILocation(line: 1903, column: 40, scope: !11604)
!11622 = !DILocation(line: 1903, column: 46, scope: !11604)
!11623 = !DILocation(line: 1903, column: 38, scope: !11604)
!11624 = !DILocation(line: 1903, column: 31, scope: !11604)
!11625 = !DILocation(line: 1903, column: 4, scope: !11604)
!11626 = !DILocation(line: 1906, column: 3, scope: !11605)
!11627 = !DILocation(line: 1906, column: 10, scope: !11605)
!11628 = !DILocation(line: 1906, column: 24, scope: !11605)
!11629 = !DILocation(line: 1907, column: 26, scope: !11605)
!11630 = !DILocation(line: 1907, column: 32, scope: !11605)
!11631 = !DILocation(line: 1907, column: 3, scope: !11605)
!11632 = !DILocation(line: 1907, column: 10, scope: !11605)
!11633 = !DILocation(line: 1907, column: 23, scope: !11605)
!11634 = !DILocation(line: 1908, column: 2, scope: !11605)
!11635 = !DILocation(line: 1896, column: 57, scope: !11598)
!11636 = !DILocation(line: 1896, column: 65, scope: !11598)
!11637 = !DILocation(line: 1896, column: 2, scope: !11598)
!11638 = distinct !{!11638, !11602, !11639}
!11639 = !DILocation(line: 1908, column: 2, scope: !11593)
!11640 = !DILocation(line: 1909, column: 9, scope: !11470)
!11641 = !DILocation(line: 1909, column: 16, scope: !11470)
!11642 = !DILocation(line: 1909, column: 2, scope: !11470)
!11643 = !DILocation(line: 1910, column: 1, scope: !11470)
!11644 = distinct !DISubprogram(name: "dma_async_is_complete", scope: !138, file: !138, line: 1443, type: !11645, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11645 = !DISubroutineType(types: !11646)
!11646 = !{!197, !4300, !4300, !4300}
!11647 = !DILocalVariable(name: "cookie", arg: 1, scope: !11644, file: !138, line: 1443, type: !4300)
!11648 = !DILocation(line: 1443, column: 66, scope: !11644)
!11649 = !DILocalVariable(name: "last_complete", arg: 2, scope: !11644, file: !138, line: 1444, type: !4300)
!11650 = !DILocation(line: 1444, column: 17, scope: !11644)
!11651 = !DILocalVariable(name: "last_used", arg: 3, scope: !11644, file: !138, line: 1444, type: !4300)
!11652 = !DILocation(line: 1444, column: 45, scope: !11644)
!11653 = !DILocation(line: 1446, column: 6, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11644, file: !138, line: 1446, column: 6)
!11655 = !DILocation(line: 1446, column: 23, scope: !11654)
!11656 = !DILocation(line: 1446, column: 20, scope: !11654)
!11657 = !DILocation(line: 1446, column: 6, scope: !11644)
!11658 = !DILocation(line: 1447, column: 8, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11660, file: !138, line: 1447, column: 7)
!11660 = distinct !DILexicalBlock(scope: !11654, file: !138, line: 1446, column: 34)
!11661 = !DILocation(line: 1447, column: 18, scope: !11659)
!11662 = !DILocation(line: 1447, column: 15, scope: !11659)
!11663 = !DILocation(line: 1447, column: 33, scope: !11659)
!11664 = !DILocation(line: 1447, column: 37, scope: !11659)
!11665 = !DILocation(line: 1447, column: 46, scope: !11659)
!11666 = !DILocation(line: 1447, column: 44, scope: !11659)
!11667 = !DILocation(line: 1447, column: 7, scope: !11660)
!11668 = !DILocation(line: 1448, column: 4, scope: !11659)
!11669 = !DILocation(line: 1449, column: 2, scope: !11660)
!11670 = !DILocation(line: 1450, column: 8, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11672, file: !138, line: 1450, column: 7)
!11672 = distinct !DILexicalBlock(scope: !11654, file: !138, line: 1449, column: 9)
!11673 = !DILocation(line: 1450, column: 18, scope: !11671)
!11674 = !DILocation(line: 1450, column: 15, scope: !11671)
!11675 = !DILocation(line: 1450, column: 33, scope: !11671)
!11676 = !DILocation(line: 1450, column: 37, scope: !11671)
!11677 = !DILocation(line: 1450, column: 46, scope: !11671)
!11678 = !DILocation(line: 1450, column: 44, scope: !11671)
!11679 = !DILocation(line: 1450, column: 7, scope: !11672)
!11680 = !DILocation(line: 1451, column: 4, scope: !11671)
!11681 = !DILocation(line: 1453, column: 2, scope: !11644)
!11682 = !DILocation(line: 1454, column: 1, scope: !11644)
!11683 = distinct !DISubprogram(name: "edma_get_position", scope: !3, file: !3, line: 580, type: !11684, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11684 = !DISubroutineType(types: !11685)
!11685 = !{!1073, !4579, !7, !314}
!11686 = !DILocalVariable(name: "ecc", arg: 1, scope: !11683, file: !3, line: 580, type: !4579)
!11687 = !DILocation(line: 580, column: 53, scope: !11683)
!11688 = !DILocalVariable(name: "slot", arg: 2, scope: !11683, file: !3, line: 580, type: !7)
!11689 = !DILocation(line: 580, column: 67, scope: !11683)
!11690 = !DILocalVariable(name: "dst", arg: 3, scope: !11683, file: !3, line: 581, type: !314)
!11691 = !DILocation(line: 581, column: 14, scope: !11683)
!11692 = !DILocalVariable(name: "offs", scope: !11683, file: !3, line: 583, type: !244)
!11693 = !DILocation(line: 583, column: 6, scope: !11683)
!11694 = !DILocation(line: 585, column: 9, scope: !11683)
!11695 = !DILocation(line: 585, column: 7, scope: !11683)
!11696 = !DILocation(line: 586, column: 9, scope: !11683)
!11697 = !DILocation(line: 586, column: 7, scope: !11683)
!11698 = !DILocation(line: 587, column: 10, scope: !11683)
!11699 = !DILocation(line: 587, column: 7, scope: !11683)
!11700 = !DILocation(line: 589, column: 19, scope: !11683)
!11701 = !DILocation(line: 589, column: 24, scope: !11683)
!11702 = !DILocation(line: 589, column: 9, scope: !11683)
!11703 = !DILocation(line: 589, column: 2, scope: !11683)
!11704 = distinct !DISubprogram(name: "vchan_terminate_vdesc", scope: !274, file: !274, line: 145, type: !4542, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11705 = !DILocalVariable(name: "vd", arg: 1, scope: !11704, file: !274, line: 145, type: !4544)
!11706 = !DILocation(line: 145, column: 64, scope: !11704)
!11707 = !DILocalVariable(name: "vc", scope: !11704, file: !274, line: 147, type: !272)
!11708 = !DILocation(line: 147, column: 24, scope: !11704)
!11709 = !DILocation(line: 147, column: 42, scope: !11704)
!11710 = !DILocation(line: 147, column: 46, scope: !11704)
!11711 = !DILocation(line: 147, column: 49, scope: !11704)
!11712 = !DILocation(line: 147, column: 29, scope: !11704)
!11713 = !DILocation(line: 149, column: 17, scope: !11704)
!11714 = !DILocation(line: 149, column: 21, scope: !11704)
!11715 = !DILocation(line: 149, column: 28, scope: !11704)
!11716 = !DILocation(line: 149, column: 32, scope: !11704)
!11717 = !DILocation(line: 149, column: 2, scope: !11704)
!11718 = !DILocation(line: 151, column: 6, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11704, file: !274, line: 151, column: 6)
!11720 = !DILocation(line: 151, column: 10, scope: !11719)
!11721 = !DILocation(line: 151, column: 20, scope: !11719)
!11722 = !DILocation(line: 151, column: 17, scope: !11719)
!11723 = !DILocation(line: 151, column: 6, scope: !11704)
!11724 = !DILocation(line: 152, column: 3, scope: !11719)
!11725 = !DILocation(line: 152, column: 7, scope: !11719)
!11726 = !DILocation(line: 152, column: 14, scope: !11719)
!11727 = !DILocation(line: 153, column: 1, scope: !11704)
!11728 = distinct !DISubprogram(name: "vchan_synchronize", scope: !274, file: !274, line: 211, type: !11237, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11729 = !DILocation(line: 407, column: 64, scope: !9948, inlinedAt: !11730)
!11730 = distinct !DILocation(line: 222, column: 2, scope: !11728)
!11731 = !DILocation(line: 407, column: 84, scope: !9948, inlinedAt: !11730)
!11732 = !DILocation(line: 327, column: 67, scope: !9956, inlinedAt: !11733)
!11733 = distinct !DILocation(line: 218, column: 2, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11735, file: !274, line: 218, column: 2)
!11735 = distinct !DILexicalBlock(scope: !11736, file: !274, line: 218, column: 2)
!11736 = distinct !DILexicalBlock(scope: !11737, file: !274, line: 218, column: 2)
!11737 = distinct !DILexicalBlock(scope: !11738, file: !274, line: 218, column: 2)
!11738 = distinct !DILexicalBlock(scope: !11728, file: !274, line: 218, column: 2)
!11739 = !DILocalVariable(name: "vc", arg: 1, scope: !11728, file: !274, line: 211, type: !272)
!11740 = !DILocation(line: 211, column: 60, scope: !11728)
!11741 = !DILocalVariable(name: "head", scope: !11728, file: !274, line: 213, type: !300)
!11742 = !DILocation(line: 213, column: 2, scope: !11728)
!11743 = !DILocalVariable(name: "flags", scope: !11728, file: !274, line: 214, type: !265)
!11744 = !DILocation(line: 214, column: 16, scope: !11728)
!11745 = !DILocation(line: 216, column: 16, scope: !11728)
!11746 = !DILocation(line: 216, column: 20, scope: !11728)
!11747 = !DILocation(line: 216, column: 2, scope: !11728)
!11748 = !DILocation(line: 218, column: 2, scope: !11728)
!11749 = !DILocation(line: 218, column: 2, scope: !11738)
!11750 = !DILocalVariable(name: "__dummy", scope: !11751, file: !274, line: 218, type: !265)
!11751 = distinct !DILexicalBlock(scope: !11737, file: !274, line: 218, column: 2)
!11752 = !DILocation(line: 218, column: 2, scope: !11751)
!11753 = !DILocalVariable(name: "__dummy2", scope: !11751, file: !274, line: 218, type: !265)
!11754 = !DILocation(line: 218, column: 2, scope: !11737)
!11755 = !DILocation(line: 218, column: 2, scope: !11736)
!11756 = !DILocation(line: 218, column: 2, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11736, file: !274, line: 218, column: 2)
!11758 = !DILocalVariable(name: "__dummy", scope: !11759, file: !274, line: 218, type: !265)
!11759 = distinct !DILexicalBlock(scope: !11760, file: !274, line: 218, column: 2)
!11760 = distinct !DILexicalBlock(scope: !11757, file: !274, line: 218, column: 2)
!11761 = !DILocation(line: 218, column: 2, scope: !11759)
!11762 = !DILocalVariable(name: "__dummy2", scope: !11759, file: !274, line: 218, type: !265)
!11763 = !DILocation(line: 218, column: 2, scope: !11760)
!11764 = !DILocation(line: 218, column: 2, scope: !11735)
!11765 = !{i32 -2141584212}
!11766 = !DILocation(line: 218, column: 2, scope: !11734)
!11767 = !DILocation(line: 329, column: 10, scope: !9956, inlinedAt: !11733)
!11768 = !DILocation(line: 329, column: 16, scope: !9956, inlinedAt: !11733)
!11769 = !DILocation(line: 220, column: 25, scope: !11728)
!11770 = !DILocation(line: 220, column: 29, scope: !11728)
!11771 = !DILocation(line: 220, column: 2, scope: !11728)
!11772 = !DILocation(line: 222, column: 26, scope: !11728)
!11773 = !DILocation(line: 222, column: 30, scope: !11728)
!11774 = !DILocation(line: 222, column: 36, scope: !11728)
!11775 = !DILocation(line: 409, column: 2, scope: !10011, inlinedAt: !11730)
!11776 = !DILocation(line: 409, column: 2, scope: !10016, inlinedAt: !11730)
!11777 = !DILocation(line: 409, column: 2, scope: !10017, inlinedAt: !11730)
!11778 = !DILocation(line: 409, column: 2, scope: !10024, inlinedAt: !11730)
!11779 = !DILocation(line: 409, column: 2, scope: !10027, inlinedAt: !11730)
!11780 = !DILocation(line: 224, column: 27, scope: !11728)
!11781 = !DILocation(line: 224, column: 2, scope: !11728)
!11782 = !DILocation(line: 225, column: 1, scope: !11728)
!11783 = distinct !DISubprogram(name: "edma_modify_array", scope: !3, file: !3, line: 357, type: !8644, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11784 = !DILocalVariable(name: "ecc", arg: 1, scope: !11783, file: !3, line: 357, type: !4579)
!11785 = !DILocation(line: 357, column: 54, scope: !11783)
!11786 = !DILocalVariable(name: "offset", arg: 2, scope: !11783, file: !3, line: 357, type: !130)
!11787 = !DILocation(line: 357, column: 63, scope: !11783)
!11788 = !DILocalVariable(name: "i", arg: 3, scope: !11783, file: !3, line: 357, type: !130)
!11789 = !DILocation(line: 357, column: 75, scope: !11783)
!11790 = !DILocalVariable(name: "and", arg: 4, scope: !11783, file: !3, line: 358, type: !7)
!11791 = !DILocation(line: 358, column: 19, scope: !11783)
!11792 = !DILocalVariable(name: "or", arg: 5, scope: !11783, file: !3, line: 358, type: !7)
!11793 = !DILocation(line: 358, column: 33, scope: !11783)
!11794 = !DILocation(line: 360, column: 14, scope: !11783)
!11795 = !DILocation(line: 360, column: 19, scope: !11783)
!11796 = !DILocation(line: 360, column: 29, scope: !11783)
!11797 = !DILocation(line: 360, column: 31, scope: !11783)
!11798 = !DILocation(line: 360, column: 26, scope: !11783)
!11799 = !DILocation(line: 360, column: 38, scope: !11783)
!11800 = !DILocation(line: 360, column: 43, scope: !11783)
!11801 = !DILocation(line: 360, column: 2, scope: !11783)
!11802 = !DILocation(line: 361, column: 1, scope: !11783)
!11803 = distinct !DISubprogram(name: "clear_bit", scope: !8294, file: !8294, line: 39, type: !7726, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11804 = !DILocalVariable(name: "nr", arg: 1, scope: !11805, file: !6031, line: 72, type: !266)
!11805 = distinct !DISubprogram(name: "arch_clear_bit", scope: !6031, file: !6031, line: 72, type: !7726, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11806 = !DILocation(line: 72, column: 21, scope: !11805, inlinedAt: !11807)
!11807 = distinct !DILocation(line: 42, column: 2, scope: !11803)
!11808 = !DILocalVariable(name: "addr", arg: 2, scope: !11805, file: !6031, line: 72, type: !7728)
!11809 = !DILocation(line: 72, column: 49, scope: !11805, inlinedAt: !11807)
!11810 = !DILocation(line: 84, column: 74, scope: !10417, inlinedAt: !11811)
!11811 = distinct !DILocation(line: 41, column: 2, scope: !11803)
!11812 = !DILocation(line: 84, column: 84, scope: !10417, inlinedAt: !11811)
!11813 = !DILocalVariable(name: "nr", arg: 1, scope: !11803, file: !8294, line: 39, type: !266)
!11814 = !DILocation(line: 39, column: 35, scope: !11803)
!11815 = !DILocalVariable(name: "addr", arg: 2, scope: !11803, file: !8294, line: 39, type: !7728)
!11816 = !DILocation(line: 39, column: 63, scope: !11803)
!11817 = !DILocation(line: 41, column: 26, scope: !11803)
!11818 = !DILocation(line: 41, column: 33, scope: !11803)
!11819 = !DILocation(line: 41, column: 31, scope: !11803)
!11820 = !DILocation(line: 86, column: 20, scope: !10417, inlinedAt: !11811)
!11821 = !DILocation(line: 86, column: 23, scope: !10417, inlinedAt: !11811)
!11822 = !DILocation(line: 86, column: 2, scope: !10417, inlinedAt: !11811)
!11823 = !DILocation(line: 87, column: 2, scope: !10417, inlinedAt: !11811)
!11824 = !DILocation(line: 42, column: 17, scope: !11803)
!11825 = !DILocation(line: 42, column: 21, scope: !11803)
!11826 = !DILocation(line: 74, column: 27, scope: !11827, inlinedAt: !11807)
!11827 = distinct !DILexicalBlock(scope: !11805, file: !6031, line: 74, column: 6)
!11828 = !DILocation(line: 74, column: 6, scope: !11827, inlinedAt: !11807)
!11829 = !DILocation(line: 74, column: 6, scope: !11805, inlinedAt: !11807)
!11830 = !DILocation(line: 76, column: 6, scope: !11831, inlinedAt: !11807)
!11831 = distinct !DILexicalBlock(scope: !11827, file: !6031, line: 74, column: 32)
!11832 = !DILocation(line: 77, column: 13, scope: !11831, inlinedAt: !11807)
!11833 = !DILocation(line: 77, column: 12, scope: !11831, inlinedAt: !11807)
!11834 = !DILocation(line: 75, column: 3, scope: !11831, inlinedAt: !11807)
!11835 = !{i32 -2146949020}
!11836 = !DILocation(line: 78, column: 2, scope: !11831, inlinedAt: !11807)
!11837 = !DILocation(line: 80, column: 8, scope: !11838, inlinedAt: !11807)
!11838 = distinct !DILexicalBlock(scope: !11827, file: !6031, line: 78, column: 9)
!11839 = !DILocation(line: 80, column: 32, scope: !11838, inlinedAt: !11807)
!11840 = !DILocation(line: 79, column: 3, scope: !11838, inlinedAt: !11807)
!11841 = !{i32 -2146948888}
!11842 = !DILocation(line: 43, column: 1, scope: !11803)
!11843 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !73, file: !73, line: 655, type: !11844, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11844 = !DISubroutineType(types: !11845)
!11845 = !{!258, !3834}
!11846 = !DILocalVariable(name: "dev", arg: 1, scope: !11843, file: !73, line: 655, type: !3834)
!11847 = !DILocation(line: 655, column: 58, scope: !11843)
!11848 = !DILocation(line: 657, column: 9, scope: !11843)
!11849 = !DILocation(line: 657, column: 14, scope: !11843)
!11850 = !DILocation(line: 657, column: 2, scope: !11843)
!11851 = distinct !DISubprogram(name: "edma_cleanupp_vchan", scope: !3, file: !3, line: 2600, type: !4486, scopeLine: 2601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11852 = !DILocalVariable(name: "dmadev", arg: 1, scope: !11851, file: !3, line: 2600, type: !280)
!11853 = !DILocation(line: 2600, column: 52, scope: !11851)
!11854 = !DILocalVariable(name: "echan", scope: !11851, file: !3, line: 2602, type: !4572)
!11855 = !DILocation(line: 2602, column: 20, scope: !11851)
!11856 = !DILocalVariable(name: "_echan", scope: !11851, file: !3, line: 2602, type: !4572)
!11857 = !DILocation(line: 2602, column: 28, scope: !11851)
!11858 = !DILocalVariable(name: "__mptr", scope: !11859, file: !3, line: 2604, type: !258)
!11859 = distinct !DILexicalBlock(scope: !11860, file: !3, line: 2604, column: 2)
!11860 = distinct !DILexicalBlock(scope: !11851, file: !3, line: 2604, column: 2)
!11861 = !DILocation(line: 2604, column: 2, scope: !11859)
!11862 = !DILocation(line: 2604, column: 2, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 2604, column: 2)
!11864 = !DILocation(line: 2604, column: 2, scope: !11860)
!11865 = !DILocalVariable(name: "__mptr", scope: !11866, file: !3, line: 2604, type: !258)
!11866 = distinct !DILexicalBlock(scope: !11860, file: !3, line: 2604, column: 2)
!11867 = !DILocation(line: 2604, column: 2, scope: !11866)
!11868 = !DILocation(line: 2604, column: 2, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11866, file: !3, line: 2604, column: 2)
!11870 = !DILocation(line: 2604, column: 2, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11860, file: !3, line: 2604, column: 2)
!11872 = !DILocation(line: 2606, column: 13, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 2605, column: 47)
!11874 = !DILocation(line: 2606, column: 20, scope: !11873)
!11875 = !DILocation(line: 2606, column: 26, scope: !11873)
!11876 = !DILocation(line: 2606, column: 31, scope: !11873)
!11877 = !DILocation(line: 2606, column: 3, scope: !11873)
!11878 = !DILocation(line: 2607, column: 17, scope: !11873)
!11879 = !DILocation(line: 2607, column: 24, scope: !11873)
!11880 = !DILocation(line: 2607, column: 30, scope: !11873)
!11881 = !DILocation(line: 2607, column: 3, scope: !11873)
!11882 = !DILocation(line: 2608, column: 2, scope: !11873)
!11883 = !DILocalVariable(name: "__mptr", scope: !11884, file: !3, line: 2604, type: !258)
!11884 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 2604, column: 2)
!11885 = !DILocation(line: 2604, column: 2, scope: !11884)
!11886 = !DILocation(line: 2604, column: 2, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11884, file: !3, line: 2604, column: 2)
!11888 = distinct !{!11888, !11864, !11889}
!11889 = !DILocation(line: 2608, column: 2, scope: !11860)
!11890 = !DILocation(line: 2609, column: 1, scope: !11851)
!11891 = distinct !DISubprogram(name: "edma_pm_suspend", scope: !3, file: !3, line: 2634, type: !3536, scopeLine: 2635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11892 = !DILocalVariable(name: "dev", arg: 1, scope: !11891, file: !3, line: 2634, type: !345)
!11893 = !DILocation(line: 2634, column: 43, scope: !11891)
!11894 = !DILocalVariable(name: "ecc", scope: !11891, file: !3, line: 2636, type: !4579)
!11895 = !DILocation(line: 2636, column: 18, scope: !11891)
!11896 = !DILocation(line: 2636, column: 40, scope: !11891)
!11897 = !DILocation(line: 2636, column: 24, scope: !11891)
!11898 = !DILocalVariable(name: "echan", scope: !11891, file: !3, line: 2637, type: !4572)
!11899 = !DILocation(line: 2637, column: 20, scope: !11891)
!11900 = !DILocation(line: 2637, column: 28, scope: !11891)
!11901 = !DILocation(line: 2637, column: 33, scope: !11891)
!11902 = !DILocalVariable(name: "i", scope: !11891, file: !3, line: 2638, type: !130)
!11903 = !DILocation(line: 2638, column: 6, scope: !11891)
!11904 = !DILocation(line: 2640, column: 9, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11891, file: !3, line: 2640, column: 2)
!11906 = !DILocation(line: 2640, column: 7, scope: !11905)
!11907 = !DILocation(line: 2640, column: 14, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 2640, column: 2)
!11909 = !DILocation(line: 2640, column: 18, scope: !11908)
!11910 = !DILocation(line: 2640, column: 23, scope: !11908)
!11911 = !DILocation(line: 2640, column: 16, scope: !11908)
!11912 = !DILocation(line: 2640, column: 2, scope: !11905)
!11913 = !DILocation(line: 2641, column: 7, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11915, file: !3, line: 2641, column: 7)
!11915 = distinct !DILexicalBlock(scope: !11908, file: !3, line: 2640, column: 42)
!11916 = !DILocation(line: 2641, column: 13, scope: !11914)
!11917 = !DILocation(line: 2641, column: 16, scope: !11914)
!11918 = !DILocation(line: 2641, column: 7, scope: !11915)
!11919 = !DILocation(line: 2642, column: 26, scope: !11914)
!11920 = !DILocation(line: 2642, column: 32, scope: !11914)
!11921 = !DILocation(line: 2642, column: 4, scope: !11914)
!11922 = !DILocation(line: 2643, column: 2, scope: !11915)
!11923 = !DILocation(line: 2640, column: 38, scope: !11908)
!11924 = !DILocation(line: 2640, column: 2, scope: !11908)
!11925 = distinct !{!11925, !11912, !11926}
!11926 = !DILocation(line: 2643, column: 2, scope: !11905)
!11927 = !DILocation(line: 2645, column: 2, scope: !11891)
!11928 = distinct !DISubprogram(name: "edma_pm_resume", scope: !3, file: !3, line: 2648, type: !3536, scopeLine: 2649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!11929 = !DILocalVariable(name: "dev", arg: 1, scope: !11928, file: !3, line: 2648, type: !345)
!11930 = !DILocation(line: 2648, column: 42, scope: !11928)
!11931 = !DILocalVariable(name: "ecc", scope: !11928, file: !3, line: 2650, type: !4579)
!11932 = !DILocation(line: 2650, column: 18, scope: !11928)
!11933 = !DILocation(line: 2650, column: 40, scope: !11928)
!11934 = !DILocation(line: 2650, column: 24, scope: !11928)
!11935 = !DILocalVariable(name: "echan", scope: !11928, file: !3, line: 2651, type: !4572)
!11936 = !DILocation(line: 2651, column: 20, scope: !11928)
!11937 = !DILocation(line: 2651, column: 28, scope: !11928)
!11938 = !DILocation(line: 2651, column: 33, scope: !11928)
!11939 = !DILocalVariable(name: "i", scope: !11928, file: !3, line: 2652, type: !130)
!11940 = !DILocation(line: 2652, column: 6, scope: !11928)
!11941 = !DILocalVariable(name: "queue_priority_mapping", scope: !11928, file: !3, line: 2653, type: !4597)
!11942 = !DILocation(line: 2653, column: 7, scope: !11928)
!11943 = !DILocation(line: 2656, column: 18, scope: !11928)
!11944 = !DILocation(line: 2656, column: 23, scope: !11928)
!11945 = !DILocation(line: 2656, column: 28, scope: !11928)
!11946 = !DILocation(line: 2656, column: 2, scope: !11928)
!11947 = !DILocation(line: 2658, column: 27, scope: !11928)
!11948 = !DILocation(line: 2658, column: 32, scope: !11928)
!11949 = !DILocation(line: 2658, column: 38, scope: !11928)
!11950 = !DILocation(line: 2658, column: 25, scope: !11928)
!11951 = !DILocation(line: 2661, column: 9, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11928, file: !3, line: 2661, column: 2)
!11953 = !DILocation(line: 2661, column: 7, scope: !11952)
!11954 = !DILocation(line: 2661, column: 14, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11952, file: !3, line: 2661, column: 2)
!11956 = !DILocation(line: 2661, column: 37, scope: !11955)
!11957 = !DILocation(line: 2661, column: 43, scope: !11955)
!11958 = !DILocation(line: 2661, column: 2, scope: !11952)
!11959 = !DILocation(line: 2662, column: 33, scope: !11955)
!11960 = !DILocation(line: 2662, column: 38, scope: !11955)
!11961 = !DILocation(line: 2662, column: 61, scope: !11955)
!11962 = !DILocation(line: 2663, column: 12, scope: !11955)
!11963 = !DILocation(line: 2663, column: 35, scope: !11955)
!11964 = !DILocation(line: 2662, column: 3, scope: !11955)
!11965 = !DILocation(line: 2661, column: 51, scope: !11955)
!11966 = !DILocation(line: 2661, column: 2, scope: !11955)
!11967 = distinct !{!11967, !11958, !11968}
!11968 = !DILocation(line: 2663, column: 40, scope: !11952)
!11969 = !DILocation(line: 2665, column: 9, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11928, file: !3, line: 2665, column: 2)
!11971 = !DILocation(line: 2665, column: 7, scope: !11970)
!11972 = !DILocation(line: 2665, column: 14, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 2665, column: 2)
!11974 = !DILocation(line: 2665, column: 18, scope: !11973)
!11975 = !DILocation(line: 2665, column: 23, scope: !11973)
!11976 = !DILocation(line: 2665, column: 16, scope: !11973)
!11977 = !DILocation(line: 2665, column: 2, scope: !11970)
!11978 = !DILocation(line: 2666, column: 7, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11980, file: !3, line: 2666, column: 7)
!11980 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2665, column: 42)
!11981 = !DILocation(line: 2666, column: 13, scope: !11979)
!11982 = !DILocation(line: 2666, column: 16, scope: !11979)
!11983 = !DILocation(line: 2666, column: 7, scope: !11980)
!11984 = !DILocation(line: 2668, column: 19, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11979, file: !3, line: 2666, column: 25)
!11986 = !DILocation(line: 2669, column: 12, scope: !11985)
!11987 = !DILocation(line: 2670, column: 12, scope: !11985)
!11988 = !DILocation(line: 2668, column: 4, scope: !11985)
!11989 = !DILocation(line: 2672, column: 26, scope: !11985)
!11990 = !DILocation(line: 2672, column: 32, scope: !11985)
!11991 = !DILocation(line: 2672, column: 4, scope: !11985)
!11992 = !DILocation(line: 2675, column: 20, scope: !11985)
!11993 = !DILocation(line: 2675, column: 26, scope: !11985)
!11994 = !DILocation(line: 2675, column: 30, scope: !11985)
!11995 = !DILocation(line: 2675, column: 36, scope: !11985)
!11996 = !DILocation(line: 2675, column: 39, scope: !11985)
!11997 = !DILocation(line: 2675, column: 4, scope: !11985)
!11998 = !DILocation(line: 2676, column: 3, scope: !11985)
!11999 = !DILocation(line: 2677, column: 2, scope: !11980)
!12000 = !DILocation(line: 2665, column: 38, scope: !11973)
!12001 = !DILocation(line: 2665, column: 2, scope: !11973)
!12002 = distinct !{!12002, !11977, !12003}
!12003 = !DILocation(line: 2677, column: 2, scope: !11970)
!12004 = !DILocation(line: 2679, column: 2, scope: !11928)
!12005 = distinct !DISubprogram(name: "edma_tptc_probe", scope: !3, file: !3, line: 2697, type: !4692, scopeLine: 2698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !376)
!12006 = !DILocalVariable(name: "pdev", arg: 1, scope: !12005, file: !3, line: 2697, type: !4694)
!12007 = !DILocation(line: 2697, column: 52, scope: !12005)
!12008 = !DILocation(line: 2699, column: 21, scope: !12005)
!12009 = !DILocation(line: 2699, column: 27, scope: !12005)
!12010 = !DILocation(line: 2699, column: 2, scope: !12005)
!12011 = !DILocation(line: 2700, column: 30, scope: !12005)
!12012 = !DILocation(line: 2700, column: 36, scope: !12005)
!12013 = !DILocation(line: 2700, column: 9, scope: !12005)
!12014 = !DILocation(line: 2700, column: 2, scope: !12005)
