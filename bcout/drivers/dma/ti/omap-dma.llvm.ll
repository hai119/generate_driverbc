; ModuleID = '../bcout/drivers/dma/ti/omap-dma.llvm.bc'
source_filename = "drivers/dma/ti/omap-dma.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall4.init\22, \22a\22\09"
module asm "__initcall_omap_dma_init4:\09\09\09"
module asm ".long\09omap_dma_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.platform_driver = type { i32 (%struct.platform_device*)*, i32 (%struct.platform_device*)*, void (%struct.platform_device*)*, i32 (%struct.platform_device*, i32)*, i32 (%struct.platform_device*)*, %struct.device_driver, %struct.platform_device_id*, i8 }
%struct.platform_device = type { i8*, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, %struct.resource*, %struct.platform_device_id*, i8*, %struct.mfd_cell*, %struct.pdev_archdata }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.67, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.67 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.65, %struct.list_head, %struct.list_head, %union.anon.66 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.63 }
%union.anon.63 = type { %struct.anon.64 }
%struct.anon.64 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.55, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.55 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.56, i32 }
%union.anon.56 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.48, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.34, %union.anon.35, i32 }
%struct.request_queue = type opaque
%union.anon.34 = type { %struct.list_head }
%union.anon.35 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.36 }
%struct.anon.36 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.40 }
%struct.anon.40 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.47, i32, [12 x i8] }
%union.anon.47 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.48 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.49, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.52 }
%union.anon.49 = type { %struct.anon.50 }
%struct.anon.50 = type { i64, i64 }
%union.anon.52 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.65 = type { %struct.list_head }
%union.anon.66 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.57, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.58, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.59, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.62, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.57 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.58 = type { %struct.callback_head }
%union.anon.59 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.62 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.60 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.60 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.33 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.33 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.mfd_cell = type opaque
%struct.pdev_archdata = type {}
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.platform_device_id = type { [20 x i8], i64 }
%struct.omap_dma_config = type { i32, i8 }
%struct.of_dma_filter_info = type { %struct.dma_cap_mask_t, i1 (%struct.dma_chan*, i8*)* }
%struct.dma_cap_mask_t = type { [1 x i64] }
%struct.dma_chan = type { %struct.dma_device*, %struct.device*, i32, i32, i32, %struct.dma_chan_dev*, i8*, %struct.list_head, %struct.dma_chan_percpu*, i32, i32, %struct.dma_router*, i8*, i8* }
%struct.dma_device = type { %struct.kref, i32, i32, %struct.list_head, %struct.list_head, %struct.dma_filter, %struct.dma_cap_mask_t, i32, i16, i16, i32, i32, i32, i32, i32, %struct.device*, %struct.module*, %struct.ida, %struct.mutex, i32, i32, i32, i32, i32, i32, i8, i32, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64*, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i32, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64)*, void (%struct.dma_chan*, %struct.dma_slave_caps*)*, i32 (%struct.dma_chan*, %struct.dma_slave_config*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)*, void (%struct.dma_chan*)*, void (%struct.dma_device*)* }
%struct.dma_filter = type { i1 (%struct.dma_chan*, i8*)*, i32, %struct.dma_slave_map* }
%struct.dma_slave_map = type { i8*, i8*, i8* }
%struct.ida = type { %struct.xarray }
%struct.dma_async_tx_descriptor = type { i32, i32, i64, %struct.dma_chan*, i32 (%struct.dma_async_tx_descriptor*)*, i32 (%struct.dma_async_tx_descriptor*)*, void (i8*)*, void (i8*, %struct.dmaengine_result*)*, i8*, %struct.dmaengine_unmap_data*, i32, %struct.dma_descriptor_metadata_ops* }
%struct.dmaengine_result = type { i32, i32 }
%struct.dmaengine_unmap_data = type { i8, i8, i8, i8, %struct.device*, %struct.kref, i64, [0 x i64] }
%struct.dma_descriptor_metadata_ops = type { i32 (%struct.dma_async_tx_descriptor*, i8*, i64)*, i8* (%struct.dma_async_tx_descriptor*, i64*, i64*)*, i32 (%struct.dma_async_tx_descriptor*, i64)* }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.dma_interleaved_template = type { i64, i64, i32, i8, i8, i8, i8, i64, i64, [0 x %struct.data_chunk] }
%struct.data_chunk = type { i64, i64, i64, i64 }
%struct.dma_slave_caps = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8 }
%struct.dma_slave_config = type { i32, i64, i64, i32, i32, i32, i32, i32, i32, i8, i32 }
%struct.dma_tx_state = type { i32, i32, i32, i32 }
%struct.dma_chan_dev = type { %struct.dma_chan*, %struct.device, i32 }
%struct.dma_chan_percpu = type { i64, i64 }
%struct.dma_router = type { %struct.device*, void (%struct.device*, i8*)* }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.kmem_cache = type opaque
%struct.omap_dmadev = type { %struct.dma_device, %struct.spinlock, i8*, %struct.omap_dma_reg*, %struct.omap_system_dma_plat_info*, %struct.omap_dma_config*, %struct.notifier_block, %struct.omap_dma_context, i32, [1 x i64], %struct.mutex, i8, i8, %struct.dma_pool*, i32, %struct.spinlock, i32, %struct.omap_chan** }
%struct.omap_dma_reg = type { i16, i8, i8 }
%struct.omap_system_dma_plat_info = type { %struct.omap_dma_reg*, i32, %struct.omap_dma_dev_attr*, i32, void ()*, void (i32)*, void (i32)*, void (i32, i32, i32)*, i32 (i32, i32)*, %struct.dma_slave_map*, i32 }
%struct.omap_dma_dev_attr = type { i32, i16, i16 }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.omap_dma_context = type { i32, i32, i32, i32 }
%struct.dma_pool = type opaque
%struct.omap_chan = type { %struct.virt_dma_chan, i8*, %struct.omap_dma_reg*, i32, %struct.dma_slave_config, i32, i8, i8, i8, i32, %struct.omap_desc*, i32 }
%struct.virt_dma_chan = type { %struct.dma_chan, %struct.tasklet_struct, void (%struct.virt_dma_desc*)*, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.virt_dma_desc* }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.68, i64 }
%union.anon.68 = type { void (i64)* }
%struct.virt_dma_desc = type { %struct.dma_async_tx_descriptor, %struct.dmaengine_result, %struct.list_head }
%struct.omap_desc = type { %struct.virt_dma_desc, i8, i32, i64, i8, i32, i16, i8, i32, i16, i16, i32, i32, [0 x %struct.omap_sg] }
%struct.omap_sg = type { i64, i32, i32, i32, i16, %struct.omap_type2_desc*, i64 }
%struct.omap_type2_desc = type { i32, i32, i32, i16, i16, i16, i16, i32, i32 }
%struct.of_phandle_args = type { %struct.device_node*, i32, [16 x i32] }
%struct.of_dma = type { %struct.list_head, %struct.device_node*, {}*, i8* (%struct.of_phandle_args*, %struct.of_dma*)*, %struct.dma_router*, i8* }

@__UNIQUE_ID___addressable_omap_dma_init251 = internal global i8* bitcast (i32 ()* @omap_dma_init to i8*), section ".discard.addressable", align 8, !dbg !0
@omap_dma_driver = internal global %struct.platform_driver { i32 (%struct.platform_device*)* @omap_dma_probe, i32 (%struct.platform_device*)* @omap_dma_remove, void (%struct.platform_device*)* null, i32 (%struct.platform_device*, i32)* null, i32 (%struct.platform_device*)* null, %struct.device_driver { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* getelementptr inbounds ([6 x %struct.of_device_id], [6 x %struct.of_device_id]* @omap_dma_match, i32 0, i32 0), %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* null, void (%struct.device*)* null, %struct.driver_private* null }, %struct.platform_device_id* null, i8 0 }, align 8, !dbg !4531
@__exitcall_omap_dma_exit = internal global void ()* @omap_dma_exit, section ".exitcall.exit", align 8, !dbg !4512
@__UNIQUE_ID_author252 = internal constant [29 x i8] c"omap_dma.author=Russell King\00", section ".modinfo", align 1, !dbg !4516
@__UNIQUE_ID_file253 = internal constant [38 x i8] c"omap_dma.file=drivers/dma/ti/omap-dma\00", section ".modinfo", align 1, !dbg !4521
@__UNIQUE_ID_license254 = internal constant [21 x i8] c"omap_dma.license=GPL\00", section ".modinfo", align 1, !dbg !4526
@.str = private unnamed_addr constant [16 x i8] c"omap-dma-engine\00", align 1
@omap_dma_match = internal constant [6 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"ti,omap2420-sdma\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.omap_dma_config* @omap2420_data to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"ti,omap2430-sdma\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.omap_dma_config* @omap2430_data to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"ti,omap3430-sdma\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.omap_dma_config* @omap3430_data to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"ti,omap3630-sdma\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.omap_dma_config* @omap3630_data to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"ti,omap4430-sdma\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.omap_dma_config* @omap4_data to i8*) }, %struct.of_device_id zeroinitializer], align 16, !dbg !4606
@.str.1 = private unnamed_addr constant [37 x i8] c"omap_system_dma_plat_info is missing\00", align 1
@default_cfg = internal constant %struct.omap_dma_config zeroinitializer, align 4, !dbg !4594
@omap_dma_probe.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4591
@.str.2 = private unnamed_addr constant [14 x i8] c"&od->lch_lock\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"dma-requests\00", align 1
@.str.4 = private unnamed_addr constant [42 x i8] c"Missing dma-requests property, using %u.\0A\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"dma-channels\00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"Missing dma-channels property, using %u.\0A\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"dma-channel-mask\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"failed to get L1 IRQ: %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"unable to allocate descriptor pool\0A\00", align 1
@.str.10 = private unnamed_addr constant [60 x i8] c"\014OMAP-DMA: failed to register slave DMA engine device: %d\0A\00", align 1
@omap_dma_info = internal global %struct.of_dma_filter_info { %struct.dma_cap_mask_t zeroinitializer, i1 (%struct.dma_chan*, i8*)* @omap_dma_filter_fn }, align 8, !dbg !4599
@.str.11 = private unnamed_addr constant [47 x i8] c"\014OMAP-DMA: failed to register DMA controller\0A\00", align 1
@.str.12 = private unnamed_addr constant [26 x i8] c"OMAP DMA engine driver%s\0A\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c" (LinkedList1/2/3 supported)\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"DMA engine\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.16 = private unnamed_addr constant [26 x i8] c"drivers/dma/ti/omap-dma.c\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"drivers/dma/ti/../dmaengine.h\00", align 1
@es_bytes = internal constant [3 x i32] [i32 1, i32 2, i32 4], align 4, !dbg !4596
@.str.18 = private unnamed_addr constant [20 x i8] c"%s: bad direction?\0A\00", align 1
@__func__.omap_dma_prep_slave_sg = private unnamed_addr constant [23 x i8] c"omap_dma_prep_slave_sg\00", align 1
@.str.19 = private unnamed_addr constant [31 x i8] c"t2_desc[%d] allocation failed\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.20 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@__func__.omap_dma_prep_dma_cyclic = private unnamed_addr constant [25 x i8] c"omap_dma_prep_dma_cyclic\00", align 1
@.str.21 = private unnamed_addr constant [46 x i8] c"%s: SRC constant addressing is not supported\0A\00", align 1
@__func__.omap_dma_prep_dma_interleaved = private unnamed_addr constant [30 x i8] c"omap_dma_prep_dma_interleaved\00", align 1
@.str.22 = private unnamed_addr constant [46 x i8] c"%s: DST constant addressing is not supported\0A\00", align 1
@.str.23 = private unnamed_addr constant [38 x i8] c"DMA drain did not complete on lch %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"invalid channel %u\0A\00", align 1
@omap2420_data = internal constant %struct.omap_dma_config { i32 49, i8 11 }, align 4, !dbg !4609
@omap2430_data = internal constant %struct.omap_dma_config { i32 49, i8 9 }, align 4, !dbg !4611
@omap3430_data = internal constant %struct.omap_dma_config { i32 49, i8 13 }, align 4, !dbg !4613
@omap3630_data = internal constant %struct.omap_dma_config { i32 52, i8 13 }, align 4, !dbg !4615
@omap4_data = internal constant %struct.omap_dma_config { i32 52, i8 9 }, align 4, !dbg !4617
@llvm.used = appending global [6 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_omap_dma_init251 to i8*), i8* bitcast (void ()* @omap_dma_exit to i8*), i8* bitcast (void ()** @__exitcall_omap_dma_exit to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_author252, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_file253, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_license254, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_init() #0 !dbg !4625 {
entry:
  %call = call i32 @__platform_driver_register(%struct.platform_driver* @omap_dma_driver, %struct.module* null) #11, !dbg !4628
  ret i32 %call, !dbg !4629
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_exit() #1 section ".exit.text" !dbg !4630 {
entry:
  call void @platform_driver_unregister(%struct.platform_driver* @omap_dma_driver) #11, !dbg !4631
  ret void, !dbg !4632
}

; Function Attrs: noredzone
declare dso_local void @platform_driver_unregister(%struct.platform_driver*) #2

; Function Attrs: noredzone
declare dso_local i32 @__platform_driver_register(%struct.platform_driver*, %struct.module*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_probe(%struct.platform_device* %pdev) #0 !dbg !4593 {
entry:
  %map.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %map.addr.i, metadata !4633, metadata !DIExpression()), !dbg !4639
  %start.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr.i, metadata !4642, metadata !DIExpression()), !dbg !4643
  %nbits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr.i, metadata !4644, metadata !DIExpression()), !dbg !4645
  %lock.addr.i232 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i232, metadata !4646, metadata !DIExpression()), !dbg !4652
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !4655
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %conf = alloca %struct.omap_dma_config*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %res = alloca %struct.resource*, align 8
  %rc = alloca i32, align 4
  %i = alloca i32, align 4
  %irq = alloca i32, align 4
  %val = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral74 = alloca %struct.spinlock, align 1
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !4658, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.declare(metadata %struct.omap_dma_config** %conf, metadata !4660, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !4662, metadata !DIExpression()), !dbg !4663
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !4664, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !4666, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4668, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !4670, metadata !DIExpression()), !dbg !4671
  call void @llvm.dbg.declare(metadata i32* %val, metadata !4672, metadata !DIExpression()), !dbg !4673
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4674
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !4675
  %call = call i8* @devm_kzalloc(%struct.device* %dev, i64 528, i32 3264) #11, !dbg !4676
  %1 = bitcast i8* %call to %struct.omap_dmadev*, !dbg !4676
  store %struct.omap_dmadev* %1, %struct.omap_dmadev** %od, align 8, !dbg !4677
  %2 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4678
  %tobool = icmp ne %struct.omap_dmadev* %2, null, !dbg !4678
  br i1 %tobool, label %if.end, label %if.then, !dbg !4680

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !4681
  br label %return, !dbg !4681

if.end:                                           ; preds = %entry
  %3 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4682
  %call1 = call %struct.resource* @platform_get_resource(%struct.platform_device* %3, i32 512, i32 0) #11, !dbg !4683
  store %struct.resource* %call1, %struct.resource** %res, align 8, !dbg !4684
  %4 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4685
  %dev2 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %4, i32 0, i32 3, !dbg !4686
  %5 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4687
  %call3 = call i8* @devm_ioremap_resource(%struct.device* %dev2, %struct.resource* %5) #11, !dbg !4688
  %6 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4689
  %base = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %6, i32 0, i32 2, !dbg !4690
  store i8* %call3, i8** %base, align 8, !dbg !4691
  %7 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4692
  %base4 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %7, i32 0, i32 2, !dbg !4694
  %8 = load i8*, i8** %base4, align 8, !dbg !4694
  %call5 = call zeroext i1 @IS_ERR(i8* %8) #11, !dbg !4695
  br i1 %call5, label %if.then6, label %if.end9, !dbg !4696

if.then6:                                         ; preds = %if.end
  %9 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4697
  %base7 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %9, i32 0, i32 2, !dbg !4698
  %10 = load i8*, i8** %base7, align 8, !dbg !4698
  %call8 = call i64 @PTR_ERR(i8* %10) #11, !dbg !4699
  %conv = trunc i64 %call8 to i32, !dbg !4699
  store i32 %conv, i32* %retval, align 4, !dbg !4700
  br label %return, !dbg !4700

if.end9:                                          ; preds = %if.end
  %11 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4701
  %dev10 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %11, i32 0, i32 3, !dbg !4702
  %call11 = call i8* @of_device_get_match_data(%struct.device* %dev10) #11, !dbg !4703
  %12 = bitcast i8* %call11 to %struct.omap_dma_config*, !dbg !4703
  store %struct.omap_dma_config* %12, %struct.omap_dma_config** %conf, align 8, !dbg !4704
  %13 = load %struct.omap_dma_config*, %struct.omap_dma_config** %conf, align 8, !dbg !4705
  %tobool12 = icmp ne %struct.omap_dma_config* %13, null, !dbg !4705
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !4707

if.then13:                                        ; preds = %if.end9
  %14 = load %struct.omap_dma_config*, %struct.omap_dma_config** %conf, align 8, !dbg !4708
  %15 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4710
  %cfg = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %15, i32 0, i32 5, !dbg !4711
  store %struct.omap_dma_config* %14, %struct.omap_dma_config** %cfg, align 8, !dbg !4712
  %16 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4713
  %dev14 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %16, i32 0, i32 3, !dbg !4714
  %call15 = call i8* @dev_get_platdata(%struct.device* %dev14) #11, !dbg !4715
  %17 = bitcast i8* %call15 to %struct.omap_system_dma_plat_info*, !dbg !4715
  %18 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4716
  %plat = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %18, i32 0, i32 4, !dbg !4717
  store %struct.omap_system_dma_plat_info* %17, %struct.omap_system_dma_plat_info** %plat, align 8, !dbg !4718
  %19 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4719
  %plat16 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %19, i32 0, i32 4, !dbg !4721
  %20 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat16, align 8, !dbg !4721
  %tobool17 = icmp ne %struct.omap_system_dma_plat_info* %20, null, !dbg !4719
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !4722

if.then18:                                        ; preds = %if.then13
  %21 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4723
  %dev19 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %21, i32 0, i32 3, !dbg !4723
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev19, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !4723
  store i32 -19, i32* %retval, align 4, !dbg !4725
  br label %return, !dbg !4725

if.end20:                                         ; preds = %if.then13
  br label %if.end28, !dbg !4726

if.else:                                          ; preds = %if.end9
  %22 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4727
  %cfg21 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %22, i32 0, i32 5, !dbg !4729
  store %struct.omap_dma_config* @default_cfg, %struct.omap_dma_config** %cfg21, align 8, !dbg !4730
  %call22 = call %struct.omap_system_dma_plat_info* @omap_get_plat_info() #11, !dbg !4731
  %23 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4732
  %plat23 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %23, i32 0, i32 4, !dbg !4733
  store %struct.omap_system_dma_plat_info* %call22, %struct.omap_system_dma_plat_info** %plat23, align 8, !dbg !4734
  %24 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4735
  %plat24 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %24, i32 0, i32 4, !dbg !4737
  %25 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat24, align 8, !dbg !4737
  %tobool25 = icmp ne %struct.omap_system_dma_plat_info* %25, null, !dbg !4735
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !4738

if.then26:                                        ; preds = %if.else
  store i32 -517, i32* %retval, align 4, !dbg !4739
  br label %return, !dbg !4739

if.end27:                                         ; preds = %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.end20
  %26 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4740
  %plat29 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %26, i32 0, i32 4, !dbg !4741
  %27 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat29, align 8, !dbg !4741
  %reg_map = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %27, i32 0, i32 0, !dbg !4742
  %28 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %reg_map, align 8, !dbg !4742
  %29 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4743
  %reg_map30 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %29, i32 0, i32 3, !dbg !4744
  store %struct.omap_dma_reg* %28, %struct.omap_dma_reg** %reg_map30, align 8, !dbg !4745
  %30 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4746
  %ddev = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %30, i32 0, i32 0, !dbg !4746
  %cap_mask = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev, i32 0, i32 6, !dbg !4746
  call void @__dma_cap_set(i32 10, %struct.dma_cap_mask_t* %cap_mask) #11, !dbg !4746
  %31 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4747
  %ddev31 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %31, i32 0, i32 0, !dbg !4747
  %cap_mask32 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev31, i32 0, i32 6, !dbg !4747
  call void @__dma_cap_set(i32 11, %struct.dma_cap_mask_t* %cap_mask32) #11, !dbg !4747
  %32 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4748
  %ddev33 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %32, i32 0, i32 0, !dbg !4748
  %cap_mask34 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev33, i32 0, i32 6, !dbg !4748
  call void @__dma_cap_set(i32 0, %struct.dma_cap_mask_t* %cap_mask34) #11, !dbg !4748
  %33 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4749
  %ddev35 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %33, i32 0, i32 0, !dbg !4749
  %cap_mask36 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev35, i32 0, i32 6, !dbg !4749
  call void @__dma_cap_set(i32 12, %struct.dma_cap_mask_t* %cap_mask36) #11, !dbg !4749
  %34 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4750
  %ddev37 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %34, i32 0, i32 0, !dbg !4751
  %device_alloc_chan_resources = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev37, i32 0, i32 27, !dbg !4752
  store i32 (%struct.dma_chan*)* @omap_dma_alloc_chan_resources, i32 (%struct.dma_chan*)** %device_alloc_chan_resources, align 8, !dbg !4753
  %35 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4754
  %ddev38 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %35, i32 0, i32 0, !dbg !4755
  %device_free_chan_resources = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev38, i32 0, i32 28, !dbg !4756
  store void (%struct.dma_chan*)* @omap_dma_free_chan_resources, void (%struct.dma_chan*)** %device_free_chan_resources, align 8, !dbg !4757
  %36 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4758
  %ddev39 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %36, i32 0, i32 0, !dbg !4759
  %device_tx_status = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev39, i32 0, i32 47, !dbg !4760
  store i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)* @omap_dma_tx_status, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)** %device_tx_status, align 8, !dbg !4761
  %37 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4762
  %ddev40 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %37, i32 0, i32 0, !dbg !4763
  %device_issue_pending = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev40, i32 0, i32 48, !dbg !4764
  store void (%struct.dma_chan*)* @omap_dma_issue_pending, void (%struct.dma_chan*)** %device_issue_pending, align 8, !dbg !4765
  %38 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4766
  %ddev41 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %38, i32 0, i32 0, !dbg !4767
  %device_prep_slave_sg = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev41, i32 0, i32 37, !dbg !4768
  store %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)* @omap_dma_prep_slave_sg, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)** %device_prep_slave_sg, align 8, !dbg !4769
  %39 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4770
  %ddev42 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %39, i32 0, i32 0, !dbg !4771
  %device_prep_dma_cyclic = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev42, i32 0, i32 38, !dbg !4772
  store %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)* @omap_dma_prep_dma_cyclic, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)** %device_prep_dma_cyclic, align 8, !dbg !4773
  %40 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4774
  %ddev43 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %40, i32 0, i32 0, !dbg !4775
  %device_prep_dma_memcpy = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev43, i32 0, i32 29, !dbg !4776
  store %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)* @omap_dma_prep_dma_memcpy, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)** %device_prep_dma_memcpy, align 8, !dbg !4777
  %41 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4778
  %ddev44 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %41, i32 0, i32 0, !dbg !4779
  %device_prep_interleaved_dma = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev44, i32 0, i32 39, !dbg !4780
  store %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)* @omap_dma_prep_dma_interleaved, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)** %device_prep_interleaved_dma, align 8, !dbg !4781
  %42 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4782
  %ddev45 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %42, i32 0, i32 0, !dbg !4783
  %device_config = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev45, i32 0, i32 42, !dbg !4784
  store i32 (%struct.dma_chan*, %struct.dma_slave_config*)* @omap_dma_slave_config, i32 (%struct.dma_chan*, %struct.dma_slave_config*)** %device_config, align 8, !dbg !4785
  %43 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4786
  %ddev46 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %43, i32 0, i32 0, !dbg !4787
  %device_pause = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev46, i32 0, i32 43, !dbg !4788
  store i32 (%struct.dma_chan*)* @omap_dma_pause, i32 (%struct.dma_chan*)** %device_pause, align 8, !dbg !4789
  %44 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4790
  %ddev47 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %44, i32 0, i32 0, !dbg !4791
  %device_resume = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev47, i32 0, i32 44, !dbg !4792
  store i32 (%struct.dma_chan*)* @omap_dma_resume, i32 (%struct.dma_chan*)** %device_resume, align 8, !dbg !4793
  %45 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4794
  %ddev48 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %45, i32 0, i32 0, !dbg !4795
  %device_terminate_all = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev48, i32 0, i32 45, !dbg !4796
  store i32 (%struct.dma_chan*)* @omap_dma_terminate_all, i32 (%struct.dma_chan*)** %device_terminate_all, align 8, !dbg !4797
  %46 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4798
  %ddev49 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %46, i32 0, i32 0, !dbg !4799
  %device_synchronize = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev49, i32 0, i32 46, !dbg !4800
  store void (%struct.dma_chan*)* @omap_dma_synchronize, void (%struct.dma_chan*)** %device_synchronize, align 8, !dbg !4801
  %47 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4802
  %ddev50 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %47, i32 0, i32 0, !dbg !4803
  %src_addr_widths = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev50, i32 0, i32 19, !dbg !4804
  store i32 22, i32* %src_addr_widths, align 8, !dbg !4805
  %48 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4806
  %ddev51 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %48, i32 0, i32 0, !dbg !4807
  %dst_addr_widths = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev51, i32 0, i32 20, !dbg !4808
  store i32 22, i32* %dst_addr_widths, align 4, !dbg !4809
  %49 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4810
  %ddev52 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %49, i32 0, i32 0, !dbg !4811
  %directions = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev52, i32 0, i32 21, !dbg !4812
  store i32 6, i32* %directions, align 8, !dbg !4813
  %50 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4814
  %plat53 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %50, i32 0, i32 4, !dbg !4814
  %51 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat53, align 8, !dbg !4814
  %dma_attr = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %51, i32 0, i32 2, !dbg !4814
  %52 = load %struct.omap_dma_dev_attr*, %struct.omap_dma_dev_attr** %dma_attr, align 8, !dbg !4814
  %dev_caps = getelementptr inbounds %struct.omap_dma_dev_attr, %struct.omap_dma_dev_attr* %52, i32 0, i32 0, !dbg !4814
  %53 = load i32, i32* %dev_caps, align 4, !dbg !4814
  %conv54 = zext i32 %53 to i64, !dbg !4814
  %and = and i64 %conv54, 64, !dbg !4814
  %tobool55 = icmp ne i64 %and, 0, !dbg !4814
  br i1 %tobool55, label %if.then56, label %if.else58, !dbg !4816

if.then56:                                        ; preds = %if.end28
  %54 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4817
  %ddev57 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %54, i32 0, i32 0, !dbg !4818
  %residue_granularity = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev57, i32 0, i32 26, !dbg !4819
  store i32 0, i32* %residue_granularity, align 4, !dbg !4820
  br label %if.end61, !dbg !4817

if.else58:                                        ; preds = %if.end28
  %55 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4821
  %ddev59 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %55, i32 0, i32 0, !dbg !4822
  %residue_granularity60 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev59, i32 0, i32 26, !dbg !4823
  store i32 2, i32* %residue_granularity60, align 4, !dbg !4824
  br label %if.end61

if.end61:                                         ; preds = %if.else58, %if.then56
  %56 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4825
  %ddev62 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %56, i32 0, i32 0, !dbg !4826
  %max_burst = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev62, i32 0, i32 23, !dbg !4827
  store i32 16777215, i32* %max_burst, align 8, !dbg !4828
  %57 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4829
  %dev63 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %57, i32 0, i32 3, !dbg !4830
  %58 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4831
  %ddev64 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %58, i32 0, i32 0, !dbg !4832
  %dev65 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev64, i32 0, i32 15, !dbg !4833
  store %struct.device* %dev63, %struct.device** %dev65, align 8, !dbg !4834
  %59 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4835
  %ddev66 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %59, i32 0, i32 0, !dbg !4836
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev66, i32 0, i32 3, !dbg !4837
  call void @INIT_LIST_HEAD(%struct.list_head* %channels) #11, !dbg !4838
  br label %do.body, !dbg !4839

do.body:                                          ; preds = %if.end61
  %60 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4840
  %lch_lock = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %60, i32 0, i32 10, !dbg !4840
  call void @__mutex_init(%struct.mutex* %lch_lock, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), %struct.lock_class_key* @omap_dma_probe.__key) #11, !dbg !4840
  br label %do.end, !dbg !4840

do.end:                                           ; preds = %do.body
  br label %do.body67, !dbg !4842

do.body67:                                        ; preds = %do.end
  %61 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4843
  %lock = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %61, i32 0, i32 1, !dbg !4843
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %62 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4844
  %63 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %62, i32 0, i32 0, !dbg !4845
  %rlock.i = bitcast %union.anon.3* %63 to %struct.raw_spinlock*, !dbg !4845
  %64 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4843
  %lock69 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %64, i32 0, i32 1, !dbg !4843
  %65 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !4843
  %rlock = bitcast %union.anon.3* %65 to %struct.raw_spinlock*, !dbg !4843
  %66 = bitcast %struct.spinlock* %lock69 to i8*, !dbg !4843
  %67 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !4843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 1 %67, i64 0, i1 false), !dbg !4843
  br label %do.end70, !dbg !4843

do.end70:                                         ; preds = %do.body67
  br label %do.body71, !dbg !4846

do.body71:                                        ; preds = %do.end70
  %68 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4847
  %irq_lock = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %68, i32 0, i32 15, !dbg !4847
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i232, align 8
  %69 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i232, align 8, !dbg !4848
  %70 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %69, i32 0, i32 0, !dbg !4849
  %rlock.i233 = bitcast %union.anon.3* %70 to %struct.raw_spinlock*, !dbg !4849
  %71 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4847
  %irq_lock73 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %71, i32 0, i32 15, !dbg !4847
  %72 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral74, i32 0, i32 0, !dbg !4847
  %rlock75 = bitcast %union.anon.3* %72 to %struct.raw_spinlock*, !dbg !4847
  %73 = bitcast %struct.spinlock* %irq_lock73 to i8*, !dbg !4847
  %74 = bitcast %struct.spinlock* %.compoundliteral74 to i8*, !dbg !4847
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 1 %74, i64 0, i1 false), !dbg !4847
  br label %do.end76, !dbg !4847

do.end76:                                         ; preds = %do.body71
  %75 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4850
  %dma_requests = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %75, i32 0, i32 14, !dbg !4851
  store i32 127, i32* %dma_requests, align 8, !dbg !4852
  %76 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4853
  %dev77 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %76, i32 0, i32 3, !dbg !4855
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev77, i32 0, i32 23, !dbg !4856
  %77 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !4856
  %tobool78 = icmp ne %struct.device_node* %77, null, !dbg !4853
  br i1 %tobool78, label %land.lhs.true, label %if.end86, !dbg !4857

land.lhs.true:                                    ; preds = %do.end76
  %78 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4858
  %dev79 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %78, i32 0, i32 3, !dbg !4859
  %of_node80 = getelementptr inbounds %struct.device, %struct.device* %dev79, i32 0, i32 23, !dbg !4860
  %79 = load %struct.device_node*, %struct.device_node** %of_node80, align 8, !dbg !4860
  %80 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4861
  %dma_requests81 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %80, i32 0, i32 14, !dbg !4862
  %call82 = call i32 @of_property_read_u32(%struct.device_node* %79, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i32* %dma_requests81) #11, !dbg !4863
  %tobool83 = icmp ne i32 %call82, 0, !dbg !4863
  br i1 %tobool83, label %if.then84, label %if.end86, !dbg !4864

if.then84:                                        ; preds = %land.lhs.true
  %81 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4865
  %dev85 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %81, i32 0, i32 3, !dbg !4865
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev85, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0), i32 127) #12, !dbg !4865
  br label %if.end86, !dbg !4867

if.end86:                                         ; preds = %if.then84, %land.lhs.true, %do.end76
  %82 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4868
  %dev87 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %82, i32 0, i32 3, !dbg !4870
  %of_node88 = getelementptr inbounds %struct.device, %struct.device* %dev87, i32 0, i32 23, !dbg !4871
  %83 = load %struct.device_node*, %struct.device_node** %of_node88, align 8, !dbg !4871
  %tobool89 = icmp ne %struct.device_node* %83, null, !dbg !4868
  br i1 %tobool89, label %if.else104, label %if.then90, !dbg !4872

if.then90:                                        ; preds = %if.end86
  %84 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4873
  %plat91 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %84, i32 0, i32 4, !dbg !4875
  %85 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat91, align 8, !dbg !4875
  %dma_attr92 = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %85, i32 0, i32 2, !dbg !4876
  %86 = load %struct.omap_dma_dev_attr*, %struct.omap_dma_dev_attr** %dma_attr92, align 8, !dbg !4876
  %lch_count = getelementptr inbounds %struct.omap_dma_dev_attr, %struct.omap_dma_dev_attr* %86, i32 0, i32 1, !dbg !4877
  %87 = load i16, i16* %lch_count, align 4, !dbg !4877
  %conv93 = zext i16 %87 to i32, !dbg !4873
  %88 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4878
  %lch_count94 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %88, i32 0, i32 8, !dbg !4879
  store i32 %conv93, i32* %lch_count94, align 8, !dbg !4880
  %89 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4881
  %lch_count95 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %89, i32 0, i32 8, !dbg !4881
  %90 = load i32, i32* %lch_count95, align 8, !dbg !4881
  %tobool96 = icmp ne i32 %90, 0, !dbg !4881
  %lnot = xor i1 %tobool96, true, !dbg !4881
  %lnot97 = xor i1 %lnot, true, !dbg !4881
  %lnot98 = xor i1 %lnot97, true, !dbg !4881
  %lnot.ext = zext i1 %lnot98 to i32, !dbg !4881
  %conv99 = sext i32 %lnot.ext to i64, !dbg !4881
  %tobool100 = icmp ne i64 %conv99, 0, !dbg !4881
  br i1 %tobool100, label %if.then101, label %if.end103, !dbg !4883

if.then101:                                       ; preds = %if.then90
  %91 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4884
  %lch_count102 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %91, i32 0, i32 8, !dbg !4885
  store i32 32, i32* %lch_count102, align 8, !dbg !4886
  br label %if.end103, !dbg !4884

if.end103:                                        ; preds = %if.then101, %if.then90
  br label %if.end114, !dbg !4887

if.else104:                                       ; preds = %if.end86
  %92 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4888
  %dev105 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %92, i32 0, i32 3, !dbg !4890
  %of_node106 = getelementptr inbounds %struct.device, %struct.device* %dev105, i32 0, i32 23, !dbg !4891
  %93 = load %struct.device_node*, %struct.device_node** %of_node106, align 8, !dbg !4891
  %94 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4892
  %lch_count107 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %94, i32 0, i32 8, !dbg !4893
  %call108 = call i32 @of_property_read_u32(%struct.device_node* %93, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i32* %lch_count107) #11, !dbg !4894
  %tobool109 = icmp ne i32 %call108, 0, !dbg !4894
  br i1 %tobool109, label %if.then110, label %if.end113, !dbg !4895

if.then110:                                       ; preds = %if.else104
  %95 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4896
  %dev111 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %95, i32 0, i32 3, !dbg !4896
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev111, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i32 32) #12, !dbg !4896
  %96 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4898
  %lch_count112 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %96, i32 0, i32 8, !dbg !4899
  store i32 32, i32* %lch_count112, align 8, !dbg !4900
  br label %if.end113, !dbg !4901

if.end113:                                        ; preds = %if.then110, %if.else104
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.end103
  %97 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4902
  %dev115 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %97, i32 0, i32 3, !dbg !4904
  %of_node116 = getelementptr inbounds %struct.device, %struct.device* %dev115, i32 0, i32 23, !dbg !4905
  %98 = load %struct.device_node*, %struct.device_node** %of_node116, align 8, !dbg !4905
  %tobool117 = icmp ne %struct.device_node* %98, null, !dbg !4902
  br i1 %tobool117, label %land.lhs.true118, label %if.end125, !dbg !4906

land.lhs.true118:                                 ; preds = %if.end114
  %99 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4907
  %dev119 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %99, i32 0, i32 3, !dbg !4908
  %of_node120 = getelementptr inbounds %struct.device, %struct.device* %dev119, i32 0, i32 23, !dbg !4909
  %100 = load %struct.device_node*, %struct.device_node** %of_node120, align 8, !dbg !4909
  %call121 = call i32 @of_property_read_u32(%struct.device_node* %100, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i32* %val) #11, !dbg !4910
  %tobool122 = icmp ne i32 %call121, 0, !dbg !4910
  br i1 %tobool122, label %if.end125, label %if.then123, !dbg !4911

if.then123:                                       ; preds = %land.lhs.true118
  %101 = load i32, i32* %val, align 4, !dbg !4912
  %neg = xor i32 %101, -1, !dbg !4914
  store i32 %neg, i32* %val, align 4, !dbg !4915
  %102 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4916
  %lch_bitmap = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %102, i32 0, i32 9, !dbg !4917
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %lch_bitmap, i64 0, i64 0, !dbg !4916
  %103 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4918
  %lch_count124 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %103, i32 0, i32 8, !dbg !4919
  %104 = load i32, i32* %lch_count124, align 8, !dbg !4919
  call void @bitmap_from_arr32(i64* %arraydecay, i32* %val, i32 %104) #11, !dbg !4920
  br label %if.end125, !dbg !4921

if.end125:                                        ; preds = %if.then123, %land.lhs.true118, %if.end114
  %105 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4922
  %plat126 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %105, i32 0, i32 4, !dbg !4923
  %106 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat126, align 8, !dbg !4923
  %dma_attr127 = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %106, i32 0, i32 2, !dbg !4924
  %107 = load %struct.omap_dma_dev_attr*, %struct.omap_dma_dev_attr** %dma_attr127, align 8, !dbg !4924
  %dev_caps128 = getelementptr inbounds %struct.omap_dma_dev_attr, %struct.omap_dma_dev_attr* %107, i32 0, i32 0, !dbg !4925
  %108 = load i32, i32* %dev_caps128, align 4, !dbg !4925
  %conv129 = zext i32 %108 to i64, !dbg !4922
  %and130 = and i64 %conv129, 32768, !dbg !4926
  %tobool131 = icmp ne i64 %and130, 0, !dbg !4926
  br i1 %tobool131, label %if.then132, label %if.end135, !dbg !4927

if.then132:                                       ; preds = %if.end125
  %109 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4928
  %lch_bitmap133 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %109, i32 0, i32 9, !dbg !4929
  %arraydecay134 = getelementptr inbounds [1 x i64], [1 x i64]* %lch_bitmap133, i64 0, i64 0, !dbg !4928
  store i64* %arraydecay134, i64** %map.addr.i, align 8
  store i32 0, i32* %start.addr.i, align 4
  store i32 2, i32* %nbits.addr.i, align 4
  %110 = load i32, i32* %nbits.addr.i, align 4, !dbg !4930
  %111 = call i1 @llvm.is.constant.i32(i32 %110) #8, !dbg !4932
  br i1 %111, label %land.lhs.true.i, label %if.else.i, !dbg !4933

land.lhs.true.i:                                  ; preds = %if.then132
  %112 = load i32, i32* %nbits.addr.i, align 4, !dbg !4934
  %cmp.i = icmp eq i32 %112, 1, !dbg !4935
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !4936

if.then.i:                                        ; preds = %land.lhs.true.i
  %113 = load i32, i32* %start.addr.i, align 4, !dbg !4937
  %conv.i = zext i32 %113 to i64, !dbg !4937
  %114 = load i64*, i64** %map.addr.i, align 8, !dbg !4938
  call void @__set_bit(i64 %conv.i, i64* %114) #13, !dbg !4939
  br label %bitmap_set.exit, !dbg !4939

if.else.i:                                        ; preds = %land.lhs.true.i, %if.then132
  %115 = load i32, i32* %start.addr.i, align 4, !dbg !4940
  %and.i = and i32 %115, 7, !dbg !4942
  %116 = call i1 @llvm.is.constant.i32(i32 %and.i) #8, !dbg !4943
  br i1 %116, label %land.lhs.true1.i, label %if.else14.i, !dbg !4944

land.lhs.true1.i:                                 ; preds = %if.else.i
  %117 = load i32, i32* %start.addr.i, align 4, !dbg !4945
  %and2.i = and i32 %117, 7, !dbg !4945
  %cmp3.i = icmp eq i32 %and2.i, 0, !dbg !4945
  br i1 %cmp3.i, label %land.lhs.true5.i, label %if.else14.i, !dbg !4946

land.lhs.true5.i:                                 ; preds = %land.lhs.true1.i
  %118 = load i32, i32* %nbits.addr.i, align 4, !dbg !4947
  %and6.i = and i32 %118, 7, !dbg !4948
  %119 = call i1 @llvm.is.constant.i32(i32 %and6.i) #8, !dbg !4949
  br i1 %119, label %land.lhs.true7.i, label %if.else14.i, !dbg !4950

land.lhs.true7.i:                                 ; preds = %land.lhs.true5.i
  %120 = load i32, i32* %nbits.addr.i, align 4, !dbg !4951
  %and8.i = and i32 %120, 7, !dbg !4951
  %cmp9.i = icmp eq i32 %and8.i, 0, !dbg !4951
  br i1 %cmp9.i, label %if.then11.i, label %if.else14.i, !dbg !4952

if.then11.i:                                      ; preds = %land.lhs.true7.i
  %121 = load i64*, i64** %map.addr.i, align 8, !dbg !4953
  %122 = bitcast i64* %121 to i8*, !dbg !4954
  %123 = load i32, i32* %start.addr.i, align 4, !dbg !4955
  %div.i = udiv i32 %123, 8, !dbg !4956
  %idx.ext.i = zext i32 %div.i to i64, !dbg !4957
  %add.ptr.i = getelementptr i8, i8* %122, i64 %idx.ext.i, !dbg !4957
  %124 = load i32, i32* %nbits.addr.i, align 4, !dbg !4958
  %div12.i = udiv i32 %124, 8, !dbg !4959
  %conv13.i = zext i32 %div12.i to i64, !dbg !4958
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr.i, i8 -1, i64 %conv13.i, i1 false) #8, !dbg !4960
  br label %if.end.i, !dbg !4960

if.else14.i:                                      ; preds = %land.lhs.true7.i, %land.lhs.true5.i, %land.lhs.true1.i, %if.else.i
  %125 = load i64*, i64** %map.addr.i, align 8, !dbg !4961
  %126 = load i32, i32* %start.addr.i, align 4, !dbg !4962
  %127 = load i32, i32* %nbits.addr.i, align 4, !dbg !4963
  call void @__bitmap_set(i64* %125, i32 %126, i32 %127) #13, !dbg !4964
  br label %if.end.i

if.end.i:                                         ; preds = %if.else14.i, %if.then11.i
  br label %bitmap_set.exit

bitmap_set.exit:                                  ; preds = %if.then.i, %if.end.i
  br label %if.end135, !dbg !4965

if.end135:                                        ; preds = %bitmap_set.exit, %if.end125
  %128 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4966
  %dev136 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %128, i32 0, i32 3, !dbg !4967
  %129 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4968
  %lch_count137 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %129, i32 0, i32 8, !dbg !4969
  %130 = load i32, i32* %lch_count137, align 8, !dbg !4969
  %conv138 = sext i32 %130 to i64, !dbg !4968
  %call139 = call i8* @devm_kcalloc(%struct.device* %dev136, i64 %conv138, i64 8, i32 3264) #11, !dbg !4970
  %131 = bitcast i8* %call139 to %struct.omap_chan**, !dbg !4970
  %132 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4971
  %lch_map = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %132, i32 0, i32 17, !dbg !4972
  store %struct.omap_chan** %131, %struct.omap_chan*** %lch_map, align 8, !dbg !4973
  %133 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4974
  %lch_map140 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %133, i32 0, i32 17, !dbg !4976
  %134 = load %struct.omap_chan**, %struct.omap_chan*** %lch_map140, align 8, !dbg !4976
  %tobool141 = icmp ne %struct.omap_chan** %134, null, !dbg !4974
  br i1 %tobool141, label %if.end143, label %if.then142, !dbg !4977

if.then142:                                       ; preds = %if.end135
  store i32 -12, i32* %retval, align 4, !dbg !4978
  br label %return, !dbg !4978

if.end143:                                        ; preds = %if.end135
  store i32 0, i32* %i, align 4, !dbg !4979
  br label %for.cond, !dbg !4981

for.cond:                                         ; preds = %for.inc, %if.end143
  %135 = load i32, i32* %i, align 4, !dbg !4982
  %136 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4984
  %dma_requests144 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %136, i32 0, i32 14, !dbg !4985
  %137 = load i32, i32* %dma_requests144, align 8, !dbg !4985
  %cmp = icmp ult i32 %135, %137, !dbg !4986
  br i1 %cmp, label %for.body, label %for.end, !dbg !4987

for.body:                                         ; preds = %for.cond
  %138 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4988
  %call146 = call i32 @omap_dma_chan_init(%struct.omap_dmadev* %138) #11, !dbg !4990
  store i32 %call146, i32* %rc, align 4, !dbg !4991
  %139 = load i32, i32* %rc, align 4, !dbg !4992
  %tobool147 = icmp ne i32 %139, 0, !dbg !4992
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !4994

if.then148:                                       ; preds = %for.body
  %140 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !4995
  call void @omap_dma_free(%struct.omap_dmadev* %140) #11, !dbg !4997
  %141 = load i32, i32* %rc, align 4, !dbg !4998
  store i32 %141, i32* %retval, align 4, !dbg !4999
  br label %return, !dbg !4999

if.end149:                                        ; preds = %for.body
  br label %for.inc, !dbg !5000

for.inc:                                          ; preds = %if.end149
  %142 = load i32, i32* %i, align 4, !dbg !5001
  %inc = add i32 %142, 1, !dbg !5001
  store i32 %inc, i32* %i, align 4, !dbg !5001
  br label %for.cond, !dbg !5002, !llvm.loop !5003

for.end:                                          ; preds = %for.cond
  %143 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5005
  %call150 = call i32 @platform_get_irq(%struct.platform_device* %143, i32 1) #11, !dbg !5006
  store i32 %call150, i32* %irq, align 4, !dbg !5007
  %144 = load i32, i32* %irq, align 4, !dbg !5008
  %cmp151 = icmp sle i32 %144, 0, !dbg !5010
  br i1 %cmp151, label %if.then153, label %if.else155, !dbg !5011

if.then153:                                       ; preds = %for.end
  %145 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5012
  %dev154 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %145, i32 0, i32 3, !dbg !5012
  %146 = load i32, i32* %irq, align 4, !dbg !5012
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev154, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i32 %146) #12, !dbg !5012
  %147 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5014
  %legacy = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %147, i32 0, i32 11, !dbg !5015
  store i8 1, i8* %legacy, align 8, !dbg !5016
  br label %if.end161, !dbg !5017

if.else155:                                       ; preds = %for.end
  %148 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5018
  %irq_enable_mask = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %148, i32 0, i32 16, !dbg !5020
  store i32 0, i32* %irq_enable_mask, align 4, !dbg !5021
  %149 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5022
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %149, i32 24, i32 0) #11, !dbg !5023
  %150 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5024
  %dev156 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %150, i32 0, i32 3, !dbg !5025
  %151 = load i32, i32* %irq, align 4, !dbg !5026
  %152 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5027
  %153 = bitcast %struct.omap_dmadev* %152 to i8*, !dbg !5027
  %call157 = call i32 @devm_request_irq(%struct.device* %dev156, i32 %151, i32 (i32, i8*)* @omap_dma_irq, i64 128, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* %153) #11, !dbg !5028
  store i32 %call157, i32* %rc, align 4, !dbg !5029
  %154 = load i32, i32* %rc, align 4, !dbg !5030
  %tobool158 = icmp ne i32 %154, 0, !dbg !5030
  br i1 %tobool158, label %if.then159, label %if.end160, !dbg !5032

if.then159:                                       ; preds = %if.else155
  %155 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5033
  call void @omap_dma_free(%struct.omap_dmadev* %155) #11, !dbg !5035
  %156 = load i32, i32* %rc, align 4, !dbg !5036
  store i32 %156, i32* %retval, align 4, !dbg !5037
  br label %return, !dbg !5037

if.end160:                                        ; preds = %if.else155
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then153
  %157 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5038
  %call162 = call i32 @omap_dma_glbl_read(%struct.omap_dmadev* %157, i32 9) #11, !dbg !5040
  %and163 = and i32 %call162, 1048576, !dbg !5041
  %tobool164 = icmp ne i32 %and163, 0, !dbg !5041
  br i1 %tobool164, label %if.then165, label %if.end166, !dbg !5042

if.then165:                                       ; preds = %if.end161
  %158 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5043
  %ll123_supported = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %158, i32 0, i32 12, !dbg !5044
  store i8 1, i8* %ll123_supported, align 1, !dbg !5045
  br label %if.end166, !dbg !5043

if.end166:                                        ; preds = %if.then165, %if.end161
  %159 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5046
  %plat167 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %159, i32 0, i32 4, !dbg !5047
  %160 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat167, align 8, !dbg !5047
  %slave_map = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %160, i32 0, i32 9, !dbg !5048
  %161 = load %struct.dma_slave_map*, %struct.dma_slave_map** %slave_map, align 8, !dbg !5048
  %162 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5049
  %ddev168 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %162, i32 0, i32 0, !dbg !5050
  %filter = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev168, i32 0, i32 5, !dbg !5051
  %map = getelementptr inbounds %struct.dma_filter, %struct.dma_filter* %filter, i32 0, i32 2, !dbg !5052
  store %struct.dma_slave_map* %161, %struct.dma_slave_map** %map, align 8, !dbg !5053
  %163 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5054
  %plat169 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %163, i32 0, i32 4, !dbg !5055
  %164 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat169, align 8, !dbg !5055
  %slavecnt = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %164, i32 0, i32 10, !dbg !5056
  %165 = load i32, i32* %slavecnt, align 8, !dbg !5056
  %166 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5057
  %ddev170 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %166, i32 0, i32 0, !dbg !5058
  %filter171 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev170, i32 0, i32 5, !dbg !5059
  %mapcnt = getelementptr inbounds %struct.dma_filter, %struct.dma_filter* %filter171, i32 0, i32 1, !dbg !5060
  store i32 %165, i32* %mapcnt, align 8, !dbg !5061
  %167 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5062
  %ddev172 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %167, i32 0, i32 0, !dbg !5063
  %filter173 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev172, i32 0, i32 5, !dbg !5064
  %fn = getelementptr inbounds %struct.dma_filter, %struct.dma_filter* %filter173, i32 0, i32 0, !dbg !5065
  store i1 (%struct.dma_chan*, i8*)* @omap_dma_filter_fn, i1 (%struct.dma_chan*, i8*)** %fn, align 8, !dbg !5066
  %168 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5067
  %ll123_supported174 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %168, i32 0, i32 12, !dbg !5069
  %169 = load i8, i8* %ll123_supported174, align 1, !dbg !5069
  %tobool175 = trunc i8 %169 to i1, !dbg !5069
  br i1 %tobool175, label %if.then176, label %if.end187, !dbg !5070

if.then176:                                       ; preds = %if.end166
  %170 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5071
  %dev177 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %170, i32 0, i32 3, !dbg !5073
  %call178 = call i8* @dev_name(%struct.device* %dev177) #11, !dbg !5074
  %171 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5075
  %dev179 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %171, i32 0, i32 3, !dbg !5076
  %call180 = call %struct.dma_pool* @dma_pool_create(i8* %call178, %struct.device* %dev179, i64 28, i64 4, i64 0) #11, !dbg !5077
  %172 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5078
  %desc_pool = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %172, i32 0, i32 13, !dbg !5079
  store %struct.dma_pool* %call180, %struct.dma_pool** %desc_pool, align 8, !dbg !5080
  %173 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5081
  %desc_pool181 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %173, i32 0, i32 13, !dbg !5083
  %174 = load %struct.dma_pool*, %struct.dma_pool** %desc_pool181, align 8, !dbg !5083
  %tobool182 = icmp ne %struct.dma_pool* %174, null, !dbg !5081
  br i1 %tobool182, label %if.end186, label %if.then183, !dbg !5084

if.then183:                                       ; preds = %if.then176
  %175 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5085
  %dev184 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %175, i32 0, i32 3, !dbg !5085
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev184, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0)) #12, !dbg !5085
  %176 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5087
  %ll123_supported185 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %176, i32 0, i32 12, !dbg !5088
  store i8 0, i8* %ll123_supported185, align 1, !dbg !5089
  br label %if.end186, !dbg !5090

if.end186:                                        ; preds = %if.then183, %if.then176
  br label %if.end187, !dbg !5091

if.end187:                                        ; preds = %if.end186, %if.end166
  %177 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5092
  %ddev188 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %177, i32 0, i32 0, !dbg !5093
  %call189 = call i32 @dma_async_device_register(%struct.dma_device* %ddev188) #11, !dbg !5094
  store i32 %call189, i32* %rc, align 4, !dbg !5095
  %178 = load i32, i32* %rc, align 4, !dbg !5096
  %tobool190 = icmp ne i32 %178, 0, !dbg !5096
  br i1 %tobool190, label %if.then191, label %if.end193, !dbg !5098

if.then191:                                       ; preds = %if.end187
  %179 = load i32, i32* %rc, align 4, !dbg !5099
  %call192 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.10, i64 0, i64 0), i32 %179) #12, !dbg !5099
  %180 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5101
  call void @omap_dma_free(%struct.omap_dmadev* %180) #11, !dbg !5102
  %181 = load i32, i32* %rc, align 4, !dbg !5103
  store i32 %181, i32* %retval, align 4, !dbg !5104
  br label %return, !dbg !5104

if.end193:                                        ; preds = %if.end187
  %182 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5105
  %183 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5106
  %184 = bitcast %struct.omap_dmadev* %183 to i8*, !dbg !5106
  call void @platform_set_drvdata(%struct.platform_device* %182, i8* %184) #11, !dbg !5107
  %185 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5108
  %dev194 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %185, i32 0, i32 3, !dbg !5110
  %of_node195 = getelementptr inbounds %struct.device, %struct.device* %dev194, i32 0, i32 23, !dbg !5111
  %186 = load %struct.device_node*, %struct.device_node** %of_node195, align 8, !dbg !5111
  %tobool196 = icmp ne %struct.device_node* %186, null, !dbg !5108
  br i1 %tobool196, label %if.then197, label %if.end208, !dbg !5112

if.then197:                                       ; preds = %if.end193
  %187 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5113
  %ddev198 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %187, i32 0, i32 0, !dbg !5115
  %cap_mask199 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev198, i32 0, i32 6, !dbg !5116
  %188 = bitcast %struct.dma_cap_mask_t* %cap_mask199 to i8*, !dbg !5116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.of_dma_filter_info* @omap_dma_info to i8*), i8* align 8 %188, i64 8, i1 false), !dbg !5116
  %189 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5117
  %dev200 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %189, i32 0, i32 3, !dbg !5118
  %of_node201 = getelementptr inbounds %struct.device, %struct.device* %dev200, i32 0, i32 23, !dbg !5119
  %190 = load %struct.device_node*, %struct.device_node** %of_node201, align 8, !dbg !5119
  %call202 = call i32 @of_dma_controller_register(%struct.device_node* %190, %struct.dma_chan* (%struct.of_phandle_args*, %struct.of_dma*)* @of_dma_simple_xlate, i8* bitcast (%struct.of_dma_filter_info* @omap_dma_info to i8*)) #11, !dbg !5120
  store i32 %call202, i32* %rc, align 4, !dbg !5121
  %191 = load i32, i32* %rc, align 4, !dbg !5122
  %tobool203 = icmp ne i32 %191, 0, !dbg !5122
  br i1 %tobool203, label %if.then204, label %if.end207, !dbg !5124

if.then204:                                       ; preds = %if.then197
  %call205 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !5125
  %192 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5127
  %ddev206 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %192, i32 0, i32 0, !dbg !5128
  call void @dma_async_device_unregister(%struct.dma_device* %ddev206) #11, !dbg !5129
  %193 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5130
  call void @omap_dma_free(%struct.omap_dmadev* %193) #11, !dbg !5131
  br label %if.end207, !dbg !5132

if.end207:                                        ; preds = %if.then204, %if.then197
  br label %if.end208, !dbg !5133

if.end208:                                        ; preds = %if.end207, %if.end193
  %194 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5134
  call void @omap_dma_init_gcr(%struct.omap_dmadev* %194, i32 1, i32 16, i32 0) #11, !dbg !5135
  %195 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5136
  %cfg209 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %195, i32 0, i32 5, !dbg !5138
  %196 = load %struct.omap_dma_config*, %struct.omap_dma_config** %cfg209, align 8, !dbg !5138
  %needs_busy_check = getelementptr inbounds %struct.omap_dma_config, %struct.omap_dma_config* %196, i32 0, i32 1, !dbg !5139
  %bf.load = load i8, i8* %needs_busy_check, align 4, !dbg !5139
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !5139
  %bf.clear = and i8 %bf.lshr, 1, !dbg !5139
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5139
  %tobool210 = icmp ne i32 %bf.cast, 0, !dbg !5136
  br i1 %tobool210, label %if.then211, label %if.else214, !dbg !5140

if.then211:                                       ; preds = %if.end208
  %197 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5141
  %nb = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %197, i32 0, i32 6, !dbg !5143
  %notifier_call = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %nb, i32 0, i32 0, !dbg !5144
  store i32 (%struct.notifier_block*, i64, i8*)* @omap_dma_busy_notifier, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call, align 8, !dbg !5145
  %198 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5146
  %nb212 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %198, i32 0, i32 6, !dbg !5147
  %call213 = call i32 @cpu_pm_register_notifier(%struct.notifier_block* %nb212) #11, !dbg !5148
  br label %if.end227, !dbg !5149

if.else214:                                       ; preds = %if.end208
  %199 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5150
  %cfg215 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %199, i32 0, i32 5, !dbg !5152
  %200 = load %struct.omap_dma_config*, %struct.omap_dma_config** %cfg215, align 8, !dbg !5152
  %may_lose_context = getelementptr inbounds %struct.omap_dma_config, %struct.omap_dma_config* %200, i32 0, i32 1, !dbg !5153
  %bf.load216 = load i8, i8* %may_lose_context, align 4, !dbg !5153
  %bf.lshr217 = lshr i8 %bf.load216, 2, !dbg !5153
  %bf.clear218 = and i8 %bf.lshr217, 1, !dbg !5153
  %bf.cast219 = zext i8 %bf.clear218 to i32, !dbg !5153
  %tobool220 = icmp ne i32 %bf.cast219, 0, !dbg !5150
  br i1 %tobool220, label %if.then221, label %if.end226, !dbg !5154

if.then221:                                       ; preds = %if.else214
  %201 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5155
  %nb222 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %201, i32 0, i32 6, !dbg !5157
  %notifier_call223 = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %nb222, i32 0, i32 0, !dbg !5158
  store i32 (%struct.notifier_block*, i64, i8*)* @omap_dma_context_notifier, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call223, align 8, !dbg !5159
  %202 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5160
  %nb224 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %202, i32 0, i32 6, !dbg !5161
  %call225 = call i32 @cpu_pm_register_notifier(%struct.notifier_block* %nb224) #11, !dbg !5162
  br label %if.end226, !dbg !5163

if.end226:                                        ; preds = %if.then221, %if.else214
  br label %if.end227

if.end227:                                        ; preds = %if.end226, %if.then211
  %203 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5164
  %dev228 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %203, i32 0, i32 3, !dbg !5164
  %204 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5164
  %ll123_supported229 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %204, i32 0, i32 12, !dbg !5164
  %205 = load i8, i8* %ll123_supported229, align 1, !dbg !5164
  %tobool230 = trunc i8 %205 to i1, !dbg !5164
  %206 = zext i1 %tobool230 to i64, !dbg !5164
  %cond = select i1 %tobool230, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), !dbg !5164
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev228, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i64 0, i64 0), i8* %cond) #12, !dbg !5164
  %207 = load i32, i32* %rc, align 4, !dbg !5165
  store i32 %207, i32* %retval, align 4, !dbg !5166
  br label %return, !dbg !5166

return:                                           ; preds = %if.end227, %if.then191, %if.then159, %if.then148, %if.then142, %if.then26, %if.then18, %if.then6, %if.then
  %208 = load i32, i32* %retval, align 4, !dbg !5167
  ret i32 %208, !dbg !5167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_remove(%struct.platform_device* %pdev) #0 !dbg !5168 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %irq = alloca i32, align 4
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !5169, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !5171, metadata !DIExpression()), !dbg !5172
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5173
  %call = call i8* @platform_get_drvdata(%struct.platform_device* %0) #11, !dbg !5174
  %1 = bitcast i8* %call to %struct.omap_dmadev*, !dbg !5174
  store %struct.omap_dmadev* %1, %struct.omap_dmadev** %od, align 8, !dbg !5172
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !5175, metadata !DIExpression()), !dbg !5176
  %2 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5177
  %cfg = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %2, i32 0, i32 5, !dbg !5179
  %3 = load %struct.omap_dma_config*, %struct.omap_dma_config** %cfg, align 8, !dbg !5179
  %may_lose_context = getelementptr inbounds %struct.omap_dma_config, %struct.omap_dma_config* %3, i32 0, i32 1, !dbg !5180
  %bf.load = load i8, i8* %may_lose_context, align 4, !dbg !5180
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !5180
  %bf.clear = and i8 %bf.lshr, 1, !dbg !5180
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5180
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5177
  br i1 %tobool, label %if.then, label %if.end, !dbg !5181

if.then:                                          ; preds = %entry
  %4 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5182
  %nb = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %4, i32 0, i32 6, !dbg !5183
  %call1 = call i32 @cpu_pm_unregister_notifier(%struct.notifier_block* %nb) #11, !dbg !5184
  br label %if.end, !dbg !5184

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5185
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %5, i32 0, i32 3, !dbg !5187
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 23, !dbg !5188
  %6 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !5188
  %tobool2 = icmp ne %struct.device_node* %6, null, !dbg !5185
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !5189

if.then3:                                         ; preds = %if.end
  %7 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5190
  %dev4 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %7, i32 0, i32 3, !dbg !5191
  %of_node5 = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 23, !dbg !5192
  %8 = load %struct.device_node*, %struct.device_node** %of_node5, align 8, !dbg !5192
  call void @of_dma_controller_free(%struct.device_node* %8) #11, !dbg !5193
  br label %if.end6, !dbg !5193

if.end6:                                          ; preds = %if.then3, %if.end
  %9 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5194
  %call7 = call i32 @platform_get_irq(%struct.platform_device* %9, i32 1) #11, !dbg !5195
  store i32 %call7, i32* %irq, align 4, !dbg !5196
  %10 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5197
  %dev8 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %10, i32 0, i32 3, !dbg !5198
  %11 = load i32, i32* %irq, align 4, !dbg !5199
  %12 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5200
  %13 = bitcast %struct.omap_dmadev* %12 to i8*, !dbg !5200
  call void @devm_free_irq(%struct.device* %dev8, i32 %11, i8* %13) #11, !dbg !5201
  %14 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5202
  %ddev = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %14, i32 0, i32 0, !dbg !5203
  call void @dma_async_device_unregister(%struct.dma_device* %ddev) #11, !dbg !5204
  %15 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5205
  %legacy = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %15, i32 0, i32 11, !dbg !5207
  %16 = load i8, i8* %legacy, align 8, !dbg !5207
  %tobool9 = trunc i8 %16 to i1, !dbg !5207
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !5208

if.then10:                                        ; preds = %if.end6
  %17 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5209
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %17, i32 23, i32 0) #11, !dbg !5211
  br label %if.end11, !dbg !5212

if.end11:                                         ; preds = %if.then10, %if.end6
  %18 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5213
  %ll123_supported = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %18, i32 0, i32 12, !dbg !5215
  %19 = load i8, i8* %ll123_supported, align 1, !dbg !5215
  %tobool12 = trunc i8 %19 to i1, !dbg !5215
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !5216

if.then13:                                        ; preds = %if.end11
  %20 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5217
  %desc_pool = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %20, i32 0, i32 13, !dbg !5218
  %21 = load %struct.dma_pool*, %struct.dma_pool** %desc_pool, align 8, !dbg !5218
  call void @dma_pool_destroy(%struct.dma_pool* %21) #11, !dbg !5219
  br label %if.end14, !dbg !5219

if.end14:                                         ; preds = %if.then13, %if.end11
  %22 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5220
  call void @omap_dma_free(%struct.omap_dmadev* %22) #11, !dbg !5221
  ret i32 0, !dbg !5222
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kzalloc(%struct.device* %dev, i64 %size, i32 %gfp) #0 !dbg !5223 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5226, metadata !DIExpression()), !dbg !5227
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5228, metadata !DIExpression()), !dbg !5229
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !5230, metadata !DIExpression()), !dbg !5231
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5232
  %1 = load i64, i64* %size.addr, align 8, !dbg !5233
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !5234
  %or = or i32 %2, 256, !dbg !5235
  %call = call noalias i8* @devm_kmalloc(%struct.device* %0, i64 %1, i32 %or) #11, !dbg !5236
  ret i8* %call, !dbg !5237
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @platform_get_resource(%struct.platform_device*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i8* @devm_ioremap_resource(%struct.device*, %struct.resource*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !5238 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5242, metadata !DIExpression()), !dbg !5243
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5244
  %1 = ptrtoint i8* %0 to i64, !dbg !5244
  %2 = inttoptr i64 %1 to i8*, !dbg !5244
  %3 = ptrtoint i8* %2 to i64, !dbg !5244
  %cmp = icmp uge i64 %3, -4095, !dbg !5244
  %lnot = xor i1 %cmp, true, !dbg !5244
  %lnot1 = xor i1 %lnot, true, !dbg !5244
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5244
  %conv = sext i32 %lnot.ext to i64, !dbg !5244
  %tobool = icmp ne i64 %conv, 0, !dbg !5244
  ret i1 %tobool, !dbg !5245
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !5246 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5249, metadata !DIExpression()), !dbg !5250
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5251
  %1 = ptrtoint i8* %0 to i64, !dbg !5252
  ret i64 %1, !dbg !5253
}

; Function Attrs: noredzone
declare dso_local i8* @of_device_get_match_data(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_platdata(%struct.device* %dev) #0 !dbg !5254 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5257, metadata !DIExpression()), !dbg !5258
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5259
  %platform_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 7, !dbg !5260
  %1 = load i8*, i8** %platform_data, align 8, !dbg !5260
  ret i8* %1, !dbg !5261
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.omap_system_dma_plat_info* @omap_get_plat_info() #0 !dbg !5262 {
entry:
  ret %struct.omap_system_dma_plat_info* null, !dbg !5265
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dma_cap_set(i32 %tx_type, %struct.dma_cap_mask_t* %dstp) #0 !dbg !5266 {
entry:
  %tx_type.addr = alloca i32, align 4
  %dstp.addr = alloca %struct.dma_cap_mask_t*, align 8
  store i32 %tx_type, i32* %tx_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tx_type.addr, metadata !5270, metadata !DIExpression()), !dbg !5271
  store %struct.dma_cap_mask_t* %dstp, %struct.dma_cap_mask_t** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_cap_mask_t** %dstp.addr, metadata !5272, metadata !DIExpression()), !dbg !5273
  %0 = load i32, i32* %tx_type.addr, align 4, !dbg !5274
  %conv = zext i32 %0 to i64, !dbg !5274
  %1 = load %struct.dma_cap_mask_t*, %struct.dma_cap_mask_t** %dstp.addr, align 8, !dbg !5275
  %bits = getelementptr inbounds %struct.dma_cap_mask_t, %struct.dma_cap_mask_t* %1, i32 0, i32 0, !dbg !5276
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !5275
  call void @set_bit(i64 %conv, i64* %arraydecay) #11, !dbg !5277
  ret void, !dbg !5278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_alloc_chan_resources(%struct.dma_chan* %chan) #0 !dbg !5279 {
entry:
  %lock.addr.i42 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i42, metadata !5280, metadata !DIExpression()), !dbg !5284
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5290, metadata !DIExpression()), !dbg !5292
  %chan.addr = alloca %struct.dma_chan*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %c = alloca %struct.omap_chan*, align 8
  %dev = alloca %struct.device*, align 8
  %ret = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !5294, metadata !DIExpression()), !dbg !5295
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !5296, metadata !DIExpression()), !dbg !5297
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5298
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !5299
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5299
  %call = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %1) #11, !dbg !5300
  store %struct.omap_dmadev* %call, %struct.omap_dmadev** %od, align 8, !dbg !5297
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !5301, metadata !DIExpression()), !dbg !5302
  %2 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5303
  %call1 = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %2) #11, !dbg !5304
  store %struct.omap_chan* %call1, %struct.omap_chan** %c, align 8, !dbg !5302
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !5305, metadata !DIExpression()), !dbg !5306
  %3 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5307
  %ddev = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %3, i32 0, i32 0, !dbg !5308
  %dev2 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev, i32 0, i32 15, !dbg !5309
  %4 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5309
  store %struct.device* %4, %struct.device** %dev, align 8, !dbg !5306
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5310, metadata !DIExpression()), !dbg !5311
  %5 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5312
  %legacy = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %5, i32 0, i32 11, !dbg !5314
  %6 = load i8, i8* %legacy, align 8, !dbg !5314
  %tobool = trunc i8 %6 to i1, !dbg !5314
  br i1 %tobool, label %if.then, label %if.else, !dbg !5315

if.then:                                          ; preds = %entry
  %7 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5316
  %dma_sig = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %7, i32 0, i32 5, !dbg !5318
  %8 = load i32, i32* %dma_sig, align 8, !dbg !5318
  %9 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5319
  %10 = bitcast %struct.omap_chan* %9 to i8*, !dbg !5319
  %11 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5320
  %dma_ch = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %11, i32 0, i32 9, !dbg !5321
  %call3 = call i32 @omap_request_dma(i32 %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), void (i32, i16, i8*)* @omap_dma_callback, i8* %10, i32* %dma_ch) #11, !dbg !5322
  store i32 %call3, i32* %ret, align 4, !dbg !5323
  br label %if.end, !dbg !5324

if.else:                                          ; preds = %entry
  %12 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5325
  %13 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5327
  %dma_ch4 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %13, i32 0, i32 9, !dbg !5328
  %call5 = call i32 @omap_dma_get_lch(%struct.omap_dmadev* %12, i32* %dma_ch4) #11, !dbg !5329
  store i32 %call5, i32* %ret, align 4, !dbg !5330
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !5331
  %cmp = icmp sge i32 %14, 0, !dbg !5332
  br i1 %cmp, label %if.then6, label %if.end21, !dbg !5333

if.then6:                                         ; preds = %if.end
  %15 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5334
  %16 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5335
  %17 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5336
  %dma_ch7 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %17, i32 0, i32 9, !dbg !5337
  %18 = load i32, i32* %dma_ch7, align 8, !dbg !5337
  call void @omap_dma_assign(%struct.omap_dmadev* %15, %struct.omap_chan* %16, i32 %18) #11, !dbg !5338
  %19 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5339
  %legacy8 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %19, i32 0, i32 11, !dbg !5340
  %20 = load i8, i8* %legacy8, align 8, !dbg !5340
  %tobool9 = trunc i8 %20 to i1, !dbg !5340
  br i1 %tobool9, label %if.end20, label %if.then10, !dbg !5341

if.then10:                                        ; preds = %if.then6
  call void @llvm.dbg.declare(metadata i32* %val, metadata !5342, metadata !DIExpression()), !dbg !5343
  %21 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5344
  %irq_lock = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %21, i32 0, i32 15, !dbg !5345
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !5346
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !5349, !srcloc !5351
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5352
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !5352
  %rlock.i = bitcast %union.anon.3* %23 to %struct.raw_spinlock*, !dbg !5352
  %24 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5354
  %dma_ch11 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %24, i32 0, i32 9, !dbg !5354
  %25 = load i32, i32* %dma_ch11, align 8, !dbg !5354
  %sh_prom = zext i32 %25 to i64, !dbg !5354
  %shl = shl i64 1, %sh_prom, !dbg !5354
  %conv = trunc i64 %shl to i32, !dbg !5354
  store i32 %conv, i32* %val, align 4, !dbg !5355
  %26 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5356
  %27 = load i32, i32* %val, align 4, !dbg !5357
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %26, i32 20, i32 %27) #11, !dbg !5358
  %28 = load i32, i32* %val, align 4, !dbg !5359
  %29 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5360
  %irq_enable_mask = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %29, i32 0, i32 16, !dbg !5361
  %30 = load i32, i32* %irq_enable_mask, align 4, !dbg !5362
  %or = or i32 %30, %28, !dbg !5362
  store i32 %or, i32* %irq_enable_mask, align 4, !dbg !5362
  %31 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5363
  %32 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5364
  %irq_enable_mask12 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %32, i32 0, i32 16, !dbg !5365
  %33 = load i32, i32* %irq_enable_mask12, align 4, !dbg !5365
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %31, i32 24, i32 %33) #11, !dbg !5366
  %34 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5367
  %call13 = call i32 @omap_dma_glbl_read(%struct.omap_dmadev* %34, i32 23) #11, !dbg !5368
  store i32 %call13, i32* %val, align 4, !dbg !5369
  %35 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5370
  %dma_ch14 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %35, i32 0, i32 9, !dbg !5370
  %36 = load i32, i32* %dma_ch14, align 8, !dbg !5370
  %sh_prom15 = zext i32 %36 to i64, !dbg !5370
  %shl16 = shl i64 1, %sh_prom15, !dbg !5370
  %neg = xor i64 %shl16, -1, !dbg !5371
  %37 = load i32, i32* %val, align 4, !dbg !5372
  %conv17 = zext i32 %37 to i64, !dbg !5372
  %and = and i64 %conv17, %neg, !dbg !5372
  %conv18 = trunc i64 %and to i32, !dbg !5372
  store i32 %conv18, i32* %val, align 4, !dbg !5372
  %38 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5373
  %39 = load i32, i32* %val, align 4, !dbg !5374
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %38, i32 23, i32 %39) #11, !dbg !5375
  %40 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5376
  %irq_lock19 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %40, i32 0, i32 15, !dbg !5377
  store %struct.spinlock* %irq_lock19, %struct.spinlock** %lock.addr.i42, align 8
  call void @arch_local_irq_enable() #13, !dbg !5378
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !5381, !srcloc !5383
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i42, align 8, !dbg !5384
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !5384
  %rlock.i43 = bitcast %union.anon.3* %42 to %struct.raw_spinlock*, !dbg !5384
  br label %if.end20, !dbg !5386

if.end20:                                         ; preds = %if.then10, %if.then6
  br label %if.end21, !dbg !5387

if.end21:                                         ; preds = %if.end20, %if.end
  %43 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5388
  %plat = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %43, i32 0, i32 4, !dbg !5388
  %44 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat, align 8, !dbg !5388
  %dma_attr = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %44, i32 0, i32 2, !dbg !5388
  %45 = load %struct.omap_dma_dev_attr*, %struct.omap_dma_dev_attr** %dma_attr, align 8, !dbg !5388
  %dev_caps = getelementptr inbounds %struct.omap_dma_dev_attr, %struct.omap_dma_dev_attr* %45, i32 0, i32 0, !dbg !5388
  %46 = load i32, i32* %dev_caps, align 4, !dbg !5388
  %conv22 = zext i32 %46 to i64, !dbg !5388
  %and23 = and i64 %conv22, 16384, !dbg !5388
  %tobool24 = icmp ne i64 %and23, 0, !dbg !5388
  br i1 %tobool24, label %if.then25, label %if.else29, !dbg !5392

if.then25:                                        ; preds = %if.end21
  %47 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5393
  %ccr = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %47, i32 0, i32 3, !dbg !5395
  store i32 1024, i32* %ccr, align 8, !dbg !5396
  %48 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5397
  %dma_ch26 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %48, i32 0, i32 9, !dbg !5398
  %49 = load i32, i32* %dma_ch26, align 8, !dbg !5398
  %add = add i32 %49, 1, !dbg !5399
  %50 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5400
  %ccr27 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %50, i32 0, i32 3, !dbg !5401
  %51 = load i32, i32* %ccr27, align 8, !dbg !5402
  %or28 = or i32 %51, %add, !dbg !5402
  store i32 %or28, i32* %ccr27, align 8, !dbg !5402
  br label %if.end33, !dbg !5403

if.else29:                                        ; preds = %if.end21
  %52 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5404
  %dma_sig30 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %52, i32 0, i32 5, !dbg !5406
  %53 = load i32, i32* %dma_sig30, align 8, !dbg !5406
  %and31 = and i32 %53, 31, !dbg !5407
  %54 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5408
  %ccr32 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %54, i32 0, i32 3, !dbg !5409
  store i32 %and31, i32* %ccr32, align 8, !dbg !5410
  br label %if.end33

if.end33:                                         ; preds = %if.else29, %if.then25
  %55 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5411
  %plat34 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %55, i32 0, i32 4, !dbg !5413
  %56 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat34, align 8, !dbg !5413
  %errata = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %56, i32 0, i32 3, !dbg !5414
  %57 = load i32, i32* %errata, align 8, !dbg !5414
  %conv35 = zext i32 %57 to i64, !dbg !5411
  %and36 = and i64 %conv35, 1, !dbg !5415
  %tobool37 = icmp ne i64 %and36, 0, !dbg !5415
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !5416

if.then38:                                        ; preds = %if.end33
  %58 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5417
  %ccr39 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %58, i32 0, i32 3, !dbg !5418
  %59 = load i32, i32* %ccr39, align 8, !dbg !5419
  %or40 = or i32 %59, 33554432, !dbg !5419
  store i32 %or40, i32* %ccr39, align 8, !dbg !5419
  br label %if.end41, !dbg !5417

if.end41:                                         ; preds = %if.then38, %if.end33
  %60 = load i32, i32* %ret, align 4, !dbg !5420
  ret i32 %60, !dbg !5421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_free_chan_resources(%struct.dma_chan* %chan) #0 !dbg !5422 {
entry:
  %lock.addr.i12 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i12, metadata !5280, metadata !DIExpression()), !dbg !5423
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5290, metadata !DIExpression()), !dbg !5427
  %chan.addr = alloca %struct.dma_chan*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %c = alloca %struct.omap_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !5431, metadata !DIExpression()), !dbg !5432
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5433
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !5434
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5434
  %call = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %1) #11, !dbg !5435
  store %struct.omap_dmadev* %call, %struct.omap_dmadev** %od, align 8, !dbg !5432
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !5436, metadata !DIExpression()), !dbg !5437
  %2 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5438
  %call1 = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %2) #11, !dbg !5439
  store %struct.omap_chan* %call1, %struct.omap_chan** %c, align 8, !dbg !5437
  %3 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5440
  %legacy = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %3, i32 0, i32 11, !dbg !5441
  %4 = load i8, i8* %legacy, align 8, !dbg !5441
  %tobool = trunc i8 %4 to i1, !dbg !5441
  br i1 %tobool, label %if.end, label %if.then, !dbg !5442

if.then:                                          ; preds = %entry
  %5 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5443
  %irq_lock = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %5, i32 0, i32 15, !dbg !5444
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !5445
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !5446, !srcloc !5351
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5447
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !5447
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !5447
  %8 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5448
  %dma_ch = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %8, i32 0, i32 9, !dbg !5448
  %9 = load i32, i32* %dma_ch, align 8, !dbg !5448
  %sh_prom = zext i32 %9 to i64, !dbg !5448
  %shl = shl i64 1, %sh_prom, !dbg !5448
  %neg = xor i64 %shl, -1, !dbg !5449
  %10 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5450
  %irq_enable_mask = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %10, i32 0, i32 16, !dbg !5451
  %11 = load i32, i32* %irq_enable_mask, align 4, !dbg !5452
  %conv = zext i32 %11 to i64, !dbg !5452
  %and = and i64 %conv, %neg, !dbg !5452
  %conv2 = trunc i64 %and to i32, !dbg !5452
  store i32 %conv2, i32* %irq_enable_mask, align 4, !dbg !5452
  %12 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5453
  %13 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5454
  %irq_enable_mask3 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %13, i32 0, i32 16, !dbg !5455
  %14 = load i32, i32* %irq_enable_mask3, align 4, !dbg !5455
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %12, i32 24, i32 %14) #11, !dbg !5456
  %15 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5457
  %irq_lock4 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %15, i32 0, i32 15, !dbg !5458
  store %struct.spinlock* %irq_lock4, %struct.spinlock** %lock.addr.i12, align 8
  call void @arch_local_irq_enable() #13, !dbg !5459
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !5460, !srcloc !5383
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i12, align 8, !dbg !5461
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !5461
  %rlock.i13 = bitcast %union.anon.3* %17 to %struct.raw_spinlock*, !dbg !5461
  br label %if.end, !dbg !5462

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5463
  %channel_base = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %18, i32 0, i32 1, !dbg !5464
  store i8* null, i8** %channel_base, align 8, !dbg !5465
  %19 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5466
  %lch_map = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %19, i32 0, i32 17, !dbg !5467
  %20 = load %struct.omap_chan**, %struct.omap_chan*** %lch_map, align 8, !dbg !5467
  %21 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5468
  %dma_ch5 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %21, i32 0, i32 9, !dbg !5469
  %22 = load i32, i32* %dma_ch5, align 8, !dbg !5469
  %idxprom = sext i32 %22 to i64, !dbg !5466
  %arrayidx = getelementptr %struct.omap_chan*, %struct.omap_chan** %20, i64 %idxprom, !dbg !5466
  store %struct.omap_chan* null, %struct.omap_chan** %arrayidx, align 8, !dbg !5470
  %23 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5471
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %23, i32 0, i32 0, !dbg !5472
  call void @vchan_free_chan_resources(%struct.virt_dma_chan* %vc) #11, !dbg !5473
  %24 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5474
  %legacy6 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %24, i32 0, i32 11, !dbg !5476
  %25 = load i8, i8* %legacy6, align 8, !dbg !5476
  %tobool7 = trunc i8 %25 to i1, !dbg !5476
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !5477

if.then8:                                         ; preds = %if.end
  %26 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5478
  %dma_ch9 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %26, i32 0, i32 9, !dbg !5479
  %27 = load i32, i32* %dma_ch9, align 8, !dbg !5479
  call void @omap_free_dma(i32 %27) #11, !dbg !5480
  br label %if.end11, !dbg !5480

if.else:                                          ; preds = %if.end
  %28 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !5481
  %29 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5482
  %dma_ch10 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %29, i32 0, i32 9, !dbg !5483
  %30 = load i32, i32* %dma_ch10, align 8, !dbg !5483
  call void @omap_dma_put_lch(%struct.omap_dmadev* %28, i32 %30) #11, !dbg !5484
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then8
  %31 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5485
  %dma_sig = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %31, i32 0, i32 5, !dbg !5486
  store i32 0, i32* %dma_sig, align 8, !dbg !5487
  ret void, !dbg !5488
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_tx_status(%struct.dma_chan* %chan, i32 %cookie, %struct.dma_tx_state* %txstate) #0 !dbg !5489 {
entry:
  %lock.addr.i90 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i90, metadata !5490, metadata !DIExpression()), !dbg !5494
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5496, metadata !DIExpression()), !dbg !5497
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !5498
  %retval = alloca i32, align 4
  %chan.addr = alloca %struct.dma_chan*, align 8
  %cookie.addr = alloca i32, align 4
  %txstate.addr = alloca %struct.dma_tx_state*, align 8
  %c = alloca %struct.omap_chan*, align 8
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %d = alloca %struct.omap_desc*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %pos = alloca i64, align 8
  %vd52 = alloca %struct.virt_dma_desc*, align 8
  %ccr = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !5505, metadata !DIExpression()), !dbg !5506
  store i32 %cookie, i32* %cookie.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cookie.addr, metadata !5507, metadata !DIExpression()), !dbg !5508
  store %struct.dma_tx_state* %txstate, %struct.dma_tx_state** %txstate.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_tx_state** %txstate.addr, metadata !5509, metadata !DIExpression()), !dbg !5510
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !5511, metadata !DIExpression()), !dbg !5512
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5513
  %call = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %0) #11, !dbg !5514
  store %struct.omap_chan* %call, %struct.omap_chan** %c, align 8, !dbg !5512
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5515, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5517, metadata !DIExpression()), !dbg !5518
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d, metadata !5519, metadata !DIExpression()), !dbg !5520
  store %struct.omap_desc* null, %struct.omap_desc** %d, align 8, !dbg !5520
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5521
  %2 = load i32, i32* %cookie.addr, align 4, !dbg !5522
  %3 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !5523
  %call1 = call i32 @dma_cookie_status(%struct.dma_chan* %1, i32 %2, %struct.dma_tx_state* %3) #11, !dbg !5524
  store i32 %call1, i32* %ret, align 4, !dbg !5525
  %4 = load i32, i32* %ret, align 4, !dbg !5526
  %cmp = icmp eq i32 %4, 0, !dbg !5528
  br i1 %cmp, label %if.then, label %if.end, !dbg !5529

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !5530
  store i32 %5, i32* %retval, align 4, !dbg !5531
  br label %return, !dbg !5531

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !5532

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !5533

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5534, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5537, metadata !DIExpression()), !dbg !5536
  %cmp3 = icmp eq i64* %__dummy, %__dummy2, !dbg !5536
  %conv = zext i1 %cmp3 to i32, !dbg !5536
  store i32 1, i32* %tmp, align 4, !dbg !5536
  %6 = load i32, i32* %tmp, align 4, !dbg !5536
  br label %do.body4, !dbg !5538

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !5539

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !5540

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !5542, metadata !DIExpression()), !dbg !5545
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !5546, metadata !DIExpression()), !dbg !5545
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !5545
  %conv10 = zext i1 %cmp9 to i32, !dbg !5545
  store i32 1, i32* %tmp11, align 4, !dbg !5545
  %7 = load i32, i32* %tmp11, align 4, !dbg !5545
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !5547
  store i64 %call12, i64* %flags, align 8, !dbg !5547
  br label %do.end, !dbg !5547

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !5540

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !5539

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !5548, !srcloc !5549
  br label %do.body15, !dbg !5548

do.body15:                                        ; preds = %do.body14
  %8 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5550
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %8, i32 0, i32 0, !dbg !5550
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 3, !dbg !5550
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5551
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !5552
  %rlock.i = bitcast %union.anon.3* %10 to %struct.raw_spinlock*, !dbg !5552
  br label %do.end17, !dbg !5550

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !5548

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !5539

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !5538

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !5533

do.end21:                                         ; preds = %do.end20
  %11 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5553
  %desc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %11, i32 0, i32 10, !dbg !5555
  %12 = load %struct.omap_desc*, %struct.omap_desc** %desc, align 8, !dbg !5555
  %tobool = icmp ne %struct.omap_desc* %12, null, !dbg !5553
  br i1 %tobool, label %land.lhs.true, label %if.end28, !dbg !5556

land.lhs.true:                                    ; preds = %do.end21
  %13 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5557
  %desc22 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %13, i32 0, i32 10, !dbg !5558
  %14 = load %struct.omap_desc*, %struct.omap_desc** %desc22, align 8, !dbg !5558
  %vd = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %14, i32 0, i32 0, !dbg !5559
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %vd, i32 0, i32 0, !dbg !5560
  %cookie23 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx, i32 0, i32 0, !dbg !5561
  %15 = load i32, i32* %cookie23, align 8, !dbg !5561
  %16 = load i32, i32* %cookie.addr, align 4, !dbg !5562
  %cmp24 = icmp eq i32 %15, %16, !dbg !5563
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !5564

if.then26:                                        ; preds = %land.lhs.true
  %17 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5565
  %desc27 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %17, i32 0, i32 10, !dbg !5566
  %18 = load %struct.omap_desc*, %struct.omap_desc** %desc27, align 8, !dbg !5566
  store %struct.omap_desc* %18, %struct.omap_desc** %d, align 8, !dbg !5567
  br label %if.end28, !dbg !5568

if.end28:                                         ; preds = %if.then26, %land.lhs.true, %do.end21
  %19 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !5569
  %tobool29 = icmp ne %struct.dma_tx_state* %19, null, !dbg !5569
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !5571

if.then30:                                        ; preds = %if.end28
  br label %out, !dbg !5572

if.end31:                                         ; preds = %if.end28
  %20 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5573
  %tobool32 = icmp ne %struct.omap_desc* %20, null, !dbg !5573
  br i1 %tobool32, label %if.then33, label %if.else51, !dbg !5575

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !5576, metadata !DIExpression()), !dbg !5578
  %21 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5579
  %dir = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %21, i32 0, i32 2, !dbg !5581
  %22 = load i32, i32* %dir, align 4, !dbg !5581
  %cmp34 = icmp eq i32 %22, 1, !dbg !5582
  br i1 %cmp34, label %if.then36, label %if.else, !dbg !5583

if.then36:                                        ; preds = %if.then33
  %23 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5584
  %call37 = call i64 @omap_dma_get_src_pos(%struct.omap_chan* %23) #11, !dbg !5585
  store i64 %call37, i64* %pos, align 8, !dbg !5586
  br label %if.end48, !dbg !5587

if.else:                                          ; preds = %if.then33
  %24 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5588
  %dir38 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %24, i32 0, i32 2, !dbg !5590
  %25 = load i32, i32* %dir38, align 4, !dbg !5590
  %cmp39 = icmp eq i32 %25, 2, !dbg !5591
  br i1 %cmp39, label %if.then44, label %lor.lhs.false, !dbg !5592

lor.lhs.false:                                    ; preds = %if.else
  %26 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5593
  %dir41 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %26, i32 0, i32 2, !dbg !5594
  %27 = load i32, i32* %dir41, align 4, !dbg !5594
  %cmp42 = icmp eq i32 %27, 0, !dbg !5595
  br i1 %cmp42, label %if.then44, label %if.else46, !dbg !5596

if.then44:                                        ; preds = %lor.lhs.false, %if.else
  %28 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5597
  %call45 = call i64 @omap_dma_get_dst_pos(%struct.omap_chan* %28) #11, !dbg !5598
  store i64 %call45, i64* %pos, align 8, !dbg !5599
  br label %if.end47, !dbg !5600

if.else46:                                        ; preds = %lor.lhs.false
  store i64 0, i64* %pos, align 8, !dbg !5601
  br label %if.end47

if.end47:                                         ; preds = %if.else46, %if.then44
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then36
  %29 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5602
  %30 = load i64, i64* %pos, align 8, !dbg !5603
  %call49 = call i64 @omap_dma_desc_size_pos(%struct.omap_desc* %29, i64 %30) #11, !dbg !5604
  %conv50 = trunc i64 %call49 to i32, !dbg !5604
  %31 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !5605
  %residue = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %31, i32 0, i32 2, !dbg !5606
  store i32 %conv50, i32* %residue, align 4, !dbg !5607
  br label %if.end65, !dbg !5608

if.else51:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd52, metadata !5609, metadata !DIExpression()), !dbg !5611
  %32 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5612
  %vc53 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %32, i32 0, i32 0, !dbg !5613
  %33 = load i32, i32* %cookie.addr, align 4, !dbg !5614
  %call54 = call %struct.virt_dma_desc* @vchan_find_desc(%struct.virt_dma_chan* %vc53, i32 %33) #11, !dbg !5615
  store %struct.virt_dma_desc* %call54, %struct.virt_dma_desc** %vd52, align 8, !dbg !5611
  %34 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd52, align 8, !dbg !5616
  %tobool55 = icmp ne %struct.virt_dma_desc* %34, null, !dbg !5616
  br i1 %tobool55, label %if.then56, label %if.else62, !dbg !5618

if.then56:                                        ; preds = %if.else51
  %35 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd52, align 8, !dbg !5619
  %tx57 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %35, i32 0, i32 0, !dbg !5620
  %call58 = call %struct.omap_desc* @to_omap_dma_desc(%struct.dma_async_tx_descriptor* %tx57) #11, !dbg !5621
  %call59 = call i64 @omap_dma_desc_size(%struct.omap_desc* %call58) #11, !dbg !5622
  %conv60 = trunc i64 %call59 to i32, !dbg !5622
  %36 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !5623
  %residue61 = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %36, i32 0, i32 2, !dbg !5624
  store i32 %conv60, i32* %residue61, align 4, !dbg !5625
  br label %if.end64, !dbg !5623

if.else62:                                        ; preds = %if.else51
  %37 = load %struct.dma_tx_state*, %struct.dma_tx_state** %txstate.addr, align 8, !dbg !5626
  %residue63 = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %37, i32 0, i32 2, !dbg !5627
  store i32 0, i32* %residue63, align 4, !dbg !5628
  br label %if.end64

if.end64:                                         ; preds = %if.else62, %if.then56
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end48
  br label %out, !dbg !5573

out:                                              ; preds = %if.end65, %if.then30
  call void @llvm.dbg.label(metadata !5629), !dbg !5630
  %38 = load i32, i32* %ret, align 4, !dbg !5631
  %cmp66 = icmp eq i32 %38, 1, !dbg !5633
  br i1 %cmp66, label %land.lhs.true68, label %if.else72, !dbg !5634

land.lhs.true68:                                  ; preds = %out
  %39 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5635
  %paused = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %39, i32 0, i32 7, !dbg !5636
  %40 = load i8, i8* %paused, align 1, !dbg !5636
  %tobool69 = trunc i8 %40 to i1, !dbg !5636
  br i1 %tobool69, label %if.then71, label %if.else72, !dbg !5637

if.then71:                                        ; preds = %land.lhs.true68
  store i32 2, i32* %ret, align 4, !dbg !5638
  br label %if.end87, !dbg !5640

if.else72:                                        ; preds = %land.lhs.true68, %out
  %41 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5641
  %tobool73 = icmp ne %struct.omap_desc* %41, null, !dbg !5641
  br i1 %tobool73, label %land.lhs.true74, label %if.end86, !dbg !5643

land.lhs.true74:                                  ; preds = %if.else72
  %42 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5644
  %polled = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %42, i32 0, i32 4, !dbg !5645
  %43 = load i8, i8* %polled, align 8, !dbg !5645
  %tobool75 = trunc i8 %43 to i1, !dbg !5645
  br i1 %tobool75, label %land.lhs.true77, label %if.end86, !dbg !5646

land.lhs.true77:                                  ; preds = %land.lhs.true74
  %44 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5647
  %running = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %44, i32 0, i32 8, !dbg !5648
  %45 = load i8, i8* %running, align 2, !dbg !5648
  %tobool78 = trunc i8 %45 to i1, !dbg !5648
  br i1 %tobool78, label %if.then80, label %if.end86, !dbg !5649

if.then80:                                        ; preds = %land.lhs.true77
  call void @llvm.dbg.declare(metadata i32* %ccr, metadata !5650, metadata !DIExpression()), !dbg !5652
  %46 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5653
  %call81 = call i32 @omap_dma_chan_read(%struct.omap_chan* %46, i32 33) #11, !dbg !5654
  store i32 %call81, i32* %ccr, align 4, !dbg !5652
  %47 = load i32, i32* %ccr, align 4, !dbg !5655
  %and = and i32 %47, 128, !dbg !5657
  %tobool82 = icmp ne i32 %and, 0, !dbg !5657
  br i1 %tobool82, label %if.end85, label %if.then83, !dbg !5658

if.then83:                                        ; preds = %if.then80
  store i32 0, i32* %ret, align 4, !dbg !5659
  %48 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5661
  call void @omap_dma_start_desc(%struct.omap_chan* %48) #11, !dbg !5662
  %49 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5663
  %vd84 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %49, i32 0, i32 0, !dbg !5664
  call void @vchan_cookie_complete(%struct.virt_dma_desc* %vd84) #11, !dbg !5665
  br label %if.end85, !dbg !5666

if.end85:                                         ; preds = %if.then83, %if.then80
  br label %if.end86, !dbg !5667

if.end86:                                         ; preds = %if.end85, %land.lhs.true77, %land.lhs.true74, %if.else72
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then71
  %50 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5668
  %vc88 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %50, i32 0, i32 0, !dbg !5669
  %lock89 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc88, i32 0, i32 3, !dbg !5670
  %51 = load i64, i64* %flags, align 8, !dbg !5671
  store %struct.spinlock* %lock89, %struct.spinlock** %lock.addr.i90, align 8
  store i64 %51, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !437, metadata !5672, metadata !DIExpression()) #8, !dbg !5675
  call void @llvm.dbg.declare(metadata !437, metadata !5676, metadata !DIExpression()) #8, !dbg !5675
  store i32 1, i32* %tmp.i, align 4, !dbg !5675
  %52 = load i32, i32* %tmp.i, align 4, !dbg !5675
  call void @llvm.dbg.declare(metadata !437, metadata !5677, metadata !DIExpression()) #8, !dbg !5682
  call void @llvm.dbg.declare(metadata !437, metadata !5683, metadata !DIExpression()) #8, !dbg !5682
  store i32 1, i32* %tmp8.i, align 4, !dbg !5682
  %53 = load i32, i32* %tmp8.i, align 4, !dbg !5682
  %54 = load i64, i64* %flags.addr.i, align 8, !dbg !5684
  call void @arch_local_irq_restore(i64 %54) #13, !dbg !5684
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !5685, !srcloc !5687
  %55 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i90, align 8, !dbg !5688
  %56 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %55, i32 0, i32 0, !dbg !5688
  %rlock.i91 = bitcast %union.anon.3* %56 to %struct.raw_spinlock*, !dbg !5688
  %57 = load i32, i32* %ret, align 4, !dbg !5690
  store i32 %57, i32* %retval, align 4, !dbg !5691
  br label %return, !dbg !5691

return:                                           ; preds = %if.end87, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !5692
  ret i32 %58, !dbg !5692
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_issue_pending(%struct.dma_chan* %chan) #0 !dbg !5693 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !5490, metadata !DIExpression()), !dbg !5694
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5496, metadata !DIExpression()), !dbg !5696
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !5697
  %chan.addr = alloca %struct.dma_chan*, align 8
  %c = alloca %struct.omap_chan*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !5704, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !5706, metadata !DIExpression()), !dbg !5707
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5708
  %call = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %0) #11, !dbg !5709
  store %struct.omap_chan* %call, %struct.omap_chan** %c, align 8, !dbg !5707
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5710, metadata !DIExpression()), !dbg !5711
  br label %do.body, !dbg !5712

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5713

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5714, metadata !DIExpression()), !dbg !5716
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5717, metadata !DIExpression()), !dbg !5716
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5716
  %conv = zext i1 %cmp to i32, !dbg !5716
  store i32 1, i32* %tmp, align 4, !dbg !5716
  %1 = load i32, i32* %tmp, align 4, !dbg !5716
  br label %do.body2, !dbg !5718

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5719

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5720

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5722, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5726, metadata !DIExpression()), !dbg !5725
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5725
  %conv8 = zext i1 %cmp7 to i32, !dbg !5725
  store i32 1, i32* %tmp9, align 4, !dbg !5725
  %2 = load i32, i32* %tmp9, align 4, !dbg !5725
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !5727
  store i64 %call10, i64* %flags, align 8, !dbg !5727
  br label %do.end, !dbg !5727

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !5720

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !5719

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !5728, !srcloc !5729
  br label %do.body13, !dbg !5728

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5730
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %3, i32 0, i32 0, !dbg !5730
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 3, !dbg !5730
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5731
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !5732
  %rlock.i = bitcast %union.anon.3* %5 to %struct.raw_spinlock*, !dbg !5732
  br label %do.end15, !dbg !5730

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !5728

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5719

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5718

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !5713

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5733
  %vc20 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %6, i32 0, i32 0, !dbg !5735
  %call21 = call zeroext i1 @vchan_issue_pending(%struct.virt_dma_chan* %vc20) #11, !dbg !5736
  br i1 %call21, label %land.lhs.true, label %if.end, !dbg !5737

land.lhs.true:                                    ; preds = %do.end19
  %7 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5738
  %desc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %7, i32 0, i32 10, !dbg !5739
  %8 = load %struct.omap_desc*, %struct.omap_desc** %desc, align 8, !dbg !5739
  %tobool = icmp ne %struct.omap_desc* %8, null, !dbg !5738
  br i1 %tobool, label %if.end, label %if.then, !dbg !5740

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5741
  call void @omap_dma_start_desc(%struct.omap_chan* %9) #11, !dbg !5742
  br label %if.end, !dbg !5742

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end19
  %10 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5743
  %vc23 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %10, i32 0, i32 0, !dbg !5744
  %lock24 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc23, i32 0, i32 3, !dbg !5745
  %11 = load i64, i64* %flags, align 8, !dbg !5746
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !437, metadata !5672, metadata !DIExpression()) #8, !dbg !5747
  call void @llvm.dbg.declare(metadata !437, metadata !5676, metadata !DIExpression()) #8, !dbg !5747
  store i32 1, i32* %tmp.i, align 4, !dbg !5747
  %12 = load i32, i32* %tmp.i, align 4, !dbg !5747
  call void @llvm.dbg.declare(metadata !437, metadata !5677, metadata !DIExpression()) #8, !dbg !5748
  call void @llvm.dbg.declare(metadata !437, metadata !5683, metadata !DIExpression()) #8, !dbg !5748
  store i32 1, i32* %tmp8.i, align 4, !dbg !5748
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !5748
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !5749
  call void @arch_local_irq_restore(i64 %14) #13, !dbg !5749
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !5750, !srcloc !5687
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !5751
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !5751
  %rlock.i26 = bitcast %union.anon.3* %16 to %struct.raw_spinlock*, !dbg !5751
  ret void, !dbg !5752
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @omap_dma_prep_slave_sg(%struct.dma_chan* %chan, %struct.scatterlist* %sgl, i32 %sglen, i32 %dir, i64 %tx_flags, i8* %context) #0 !dbg !5753 {
entry:
  %retval = alloca %struct.dma_async_tx_descriptor*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  %sgl.addr = alloca %struct.scatterlist*, align 8
  %sglen.addr = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %tx_flags.addr = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %c = alloca %struct.omap_chan*, align 8
  %dev_width = alloca i32, align 4
  %sgent = alloca %struct.scatterlist*, align 8
  %d = alloca %struct.omap_desc*, align 8
  %dev_addr = alloca i64, align 8
  %i = alloca i32, align 4
  %es = alloca i32, align 4
  %en = alloca i32, align 4
  %frame_bytes = alloca i32, align 4
  %ll_failed = alloca i8, align 1
  %burst = alloca i32, align 4
  %port_window = alloca i32, align 4
  %port_window_bytes = alloca i32, align 4
  %osg = alloca %struct.omap_sg*, align 8
  %osg150 = alloca %struct.omap_sg*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !5754, metadata !DIExpression()), !dbg !5755
  store %struct.scatterlist* %sgl, %struct.scatterlist** %sgl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sgl.addr, metadata !5756, metadata !DIExpression()), !dbg !5757
  store i32 %sglen, i32* %sglen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sglen.addr, metadata !5758, metadata !DIExpression()), !dbg !5759
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !5760, metadata !DIExpression()), !dbg !5761
  store i64 %tx_flags, i64* %tx_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tx_flags.addr, metadata !5762, metadata !DIExpression()), !dbg !5763
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !5764, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !5766, metadata !DIExpression()), !dbg !5767
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5768
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !5769
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !5769
  %call = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %1) #11, !dbg !5770
  store %struct.omap_dmadev* %call, %struct.omap_dmadev** %od, align 8, !dbg !5767
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !5771, metadata !DIExpression()), !dbg !5772
  %2 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5773
  %call1 = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %2) #11, !dbg !5774
  store %struct.omap_chan* %call1, %struct.omap_chan** %c, align 8, !dbg !5772
  call void @llvm.dbg.declare(metadata i32* %dev_width, metadata !5775, metadata !DIExpression()), !dbg !5776
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sgent, metadata !5777, metadata !DIExpression()), !dbg !5778
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d, metadata !5779, metadata !DIExpression()), !dbg !5780
  call void @llvm.dbg.declare(metadata i64* %dev_addr, metadata !5781, metadata !DIExpression()), !dbg !5782
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5783, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.declare(metadata i32* %es, metadata !5785, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.declare(metadata i32* %en, metadata !5787, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.declare(metadata i32* %frame_bytes, metadata !5789, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.declare(metadata i8* %ll_failed, metadata !5791, metadata !DIExpression()), !dbg !5792
  store i8 0, i8* %ll_failed, align 1, !dbg !5792
  call void @llvm.dbg.declare(metadata i32* %burst, metadata !5793, metadata !DIExpression()), !dbg !5794
  call void @llvm.dbg.declare(metadata i32* %port_window, metadata !5795, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.declare(metadata i32* %port_window_bytes, metadata !5797, metadata !DIExpression()), !dbg !5798
  %3 = load i32, i32* %dir.addr, align 4, !dbg !5799
  %cmp = icmp eq i32 %3, 2, !dbg !5801
  br i1 %cmp, label %if.then, label %if.else, !dbg !5802

if.then:                                          ; preds = %entry
  %4 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5803
  %cfg = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %4, i32 0, i32 4, !dbg !5805
  %src_addr = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 1, !dbg !5806
  %5 = load i64, i64* %src_addr, align 8, !dbg !5806
  store i64 %5, i64* %dev_addr, align 8, !dbg !5807
  %6 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5808
  %cfg2 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %6, i32 0, i32 4, !dbg !5809
  %src_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg2, i32 0, i32 3, !dbg !5810
  %7 = load i32, i32* %src_addr_width, align 8, !dbg !5810
  store i32 %7, i32* %dev_width, align 4, !dbg !5811
  %8 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5812
  %cfg3 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %8, i32 0, i32 4, !dbg !5813
  %src_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg3, i32 0, i32 5, !dbg !5814
  %9 = load i32, i32* %src_maxburst, align 8, !dbg !5814
  store i32 %9, i32* %burst, align 4, !dbg !5815
  %10 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5816
  %cfg4 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %10, i32 0, i32 4, !dbg !5817
  %src_port_window_size = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg4, i32 0, i32 7, !dbg !5818
  %11 = load i32, i32* %src_port_window_size, align 8, !dbg !5818
  store i32 %11, i32* %port_window, align 4, !dbg !5819
  br label %if.end13, !dbg !5820

if.else:                                          ; preds = %entry
  %12 = load i32, i32* %dir.addr, align 4, !dbg !5821
  %cmp5 = icmp eq i32 %12, 1, !dbg !5823
  br i1 %cmp5, label %if.then6, label %if.else11, !dbg !5824

if.then6:                                         ; preds = %if.else
  %13 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5825
  %cfg7 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %13, i32 0, i32 4, !dbg !5827
  %dst_addr = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg7, i32 0, i32 2, !dbg !5828
  %14 = load i64, i64* %dst_addr, align 8, !dbg !5828
  store i64 %14, i64* %dev_addr, align 8, !dbg !5829
  %15 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5830
  %cfg8 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %15, i32 0, i32 4, !dbg !5831
  %dst_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg8, i32 0, i32 4, !dbg !5832
  %16 = load i32, i32* %dst_addr_width, align 4, !dbg !5832
  store i32 %16, i32* %dev_width, align 4, !dbg !5833
  %17 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5834
  %cfg9 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %17, i32 0, i32 4, !dbg !5835
  %dst_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg9, i32 0, i32 6, !dbg !5836
  %18 = load i32, i32* %dst_maxburst, align 4, !dbg !5836
  store i32 %18, i32* %burst, align 4, !dbg !5837
  %19 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5838
  %cfg10 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %19, i32 0, i32 4, !dbg !5839
  %dst_port_window_size = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg10, i32 0, i32 8, !dbg !5840
  %20 = load i32, i32* %dst_port_window_size, align 4, !dbg !5840
  store i32 %20, i32* %port_window, align 4, !dbg !5841
  br label %if.end, !dbg !5842

if.else11:                                        ; preds = %if.else
  %21 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !5843
  %device12 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %21, i32 0, i32 0, !dbg !5843
  %22 = load %struct.dma_device*, %struct.dma_device** %device12, align 8, !dbg !5843
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %22, i32 0, i32 15, !dbg !5843
  %23 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5843
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %23, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.omap_dma_prep_slave_sg, i64 0, i64 0)) #12, !dbg !5843
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !5845
  br label %return, !dbg !5845

if.end:                                           ; preds = %if.then6
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %24 = load i32, i32* %dev_width, align 4, !dbg !5846
  switch i32 %24, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb14
    i32 4, label %sw.bb15
  ], !dbg !5847

sw.bb:                                            ; preds = %if.end13
  store i32 0, i32* %es, align 4, !dbg !5848
  br label %sw.epilog, !dbg !5850

sw.bb14:                                          ; preds = %if.end13
  store i32 1, i32* %es, align 4, !dbg !5851
  br label %sw.epilog, !dbg !5852

sw.bb15:                                          ; preds = %if.end13
  store i32 2, i32* %es, align 4, !dbg !5853
  br label %sw.epilog, !dbg !5854

sw.default:                                       ; preds = %if.end13
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !5855
  br label %return, !dbg !5855

sw.epilog:                                        ; preds = %sw.bb15, %sw.bb14, %sw.bb
  %25 = load i32, i32* %sglen.addr, align 4, !dbg !5856
  %conv = zext i32 %25 to i64, !dbg !5856
  %call16 = call i64 @__ab_c_size(i64 %conv, i64 40, i64 160) #11, !dbg !5856
  %call17 = call i8* @kzalloc(i64 %call16, i32 2592) #11, !dbg !5857
  %26 = bitcast i8* %call17 to %struct.omap_desc*, !dbg !5857
  store %struct.omap_desc* %26, %struct.omap_desc** %d, align 8, !dbg !5858
  %27 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5859
  %tobool = icmp ne %struct.omap_desc* %27, null, !dbg !5859
  br i1 %tobool, label %if.end19, label %if.then18, !dbg !5861

if.then18:                                        ; preds = %sw.epilog
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !5862
  br label %return, !dbg !5862

if.end19:                                         ; preds = %sw.epilog
  %28 = load i32, i32* %dir.addr, align 4, !dbg !5863
  %29 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5864
  %dir20 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %29, i32 0, i32 2, !dbg !5865
  store i32 %28, i32* %dir20, align 4, !dbg !5866
  %30 = load i64, i64* %dev_addr, align 8, !dbg !5867
  %31 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5868
  %dev_addr21 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %31, i32 0, i32 3, !dbg !5869
  store i64 %30, i64* %dev_addr21, align 8, !dbg !5870
  %32 = load i32, i32* %es, align 4, !dbg !5871
  %conv22 = trunc i32 %32 to i8, !dbg !5871
  %33 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5872
  %es23 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %33, i32 0, i32 7, !dbg !5873
  store i8 %conv22, i8* %es23, align 2, !dbg !5874
  %34 = load i32, i32* %port_window, align 4, !dbg !5875
  %tobool24 = icmp ne i32 %34, 0, !dbg !5875
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !5877

if.then25:                                        ; preds = %if.end19
  %35 = load i32, i32* %port_window, align 4, !dbg !5878
  store i32 %35, i32* %burst, align 4, !dbg !5880
  %36 = load i32, i32* %port_window, align 4, !dbg !5881
  %37 = load i32, i32* %es, align 4, !dbg !5882
  %idxprom = zext i32 %37 to i64, !dbg !5883
  %arrayidx = getelementptr [3 x i32], [3 x i32]* @es_bytes, i64 0, i64 %idxprom, !dbg !5883
  %38 = load i32, i32* %arrayidx, align 4, !dbg !5883
  %mul = mul i32 %36, %38, !dbg !5884
  store i32 %mul, i32* %port_window_bytes, align 4, !dbg !5885
  %39 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5886
  %ei = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %39, i32 0, i32 6, !dbg !5887
  store i16 1, i16* %ei, align 8, !dbg !5888
  %40 = load i32, i32* %port_window_bytes, align 4, !dbg !5889
  %sub = sub i32 %40, 1, !dbg !5890
  %sub26 = sub i32 0, %sub, !dbg !5891
  %41 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5892
  %fi = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %41, i32 0, i32 5, !dbg !5893
  store i32 %sub26, i32* %fi, align 4, !dbg !5894
  br label %if.end27, !dbg !5895

if.end27:                                         ; preds = %if.then25, %if.end19
  %42 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !5896
  %ccr = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %42, i32 0, i32 3, !dbg !5897
  %43 = load i32, i32* %ccr, align 8, !dbg !5897
  %or = or i32 %43, 32, !dbg !5898
  %44 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5899
  %ccr28 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %44, i32 0, i32 8, !dbg !5900
  store i32 %or, i32* %ccr28, align 4, !dbg !5901
  %45 = load i32, i32* %dir.addr, align 4, !dbg !5902
  %cmp29 = icmp eq i32 %45, 2, !dbg !5904
  br i1 %cmp29, label %if.then31, label %if.else61, !dbg !5905

if.then31:                                        ; preds = %if.end27
  %46 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5906
  %csdp = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %46, i32 0, i32 11, !dbg !5908
  store i32 57344, i32* %csdp, align 4, !dbg !5909
  %47 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5910
  %ccr32 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %47, i32 0, i32 8, !dbg !5911
  %48 = load i32, i32* %ccr32, align 4, !dbg !5912
  %or33 = or i32 %48, 16384, !dbg !5912
  store i32 %or33, i32* %ccr32, align 4, !dbg !5912
  %49 = load i32, i32* %port_window, align 4, !dbg !5913
  %tobool34 = icmp ne i32 %49, 0, !dbg !5913
  br i1 %tobool34, label %if.then35, label %if.else58, !dbg !5915

if.then35:                                        ; preds = %if.then31
  %50 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5916
  %ccr36 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %50, i32 0, i32 8, !dbg !5918
  %51 = load i32, i32* %ccr36, align 4, !dbg !5919
  %or37 = or i32 %51, 12288, !dbg !5919
  store i32 %or37, i32* %ccr36, align 4, !dbg !5919
  %52 = load i32, i32* %port_window_bytes, align 4, !dbg !5920
  %cmp38 = icmp uge i32 %52, 64, !dbg !5922
  br i1 %cmp38, label %if.then40, label %if.else43, !dbg !5923

if.then40:                                        ; preds = %if.then35
  %53 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5924
  %csdp41 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %53, i32 0, i32 11, !dbg !5925
  %54 = load i32, i32* %csdp41, align 4, !dbg !5926
  %or42 = or i32 %54, 384, !dbg !5926
  store i32 %or42, i32* %csdp41, align 4, !dbg !5926
  br label %if.end57, !dbg !5924

if.else43:                                        ; preds = %if.then35
  %55 = load i32, i32* %port_window_bytes, align 4, !dbg !5927
  %cmp44 = icmp uge i32 %55, 32, !dbg !5929
  br i1 %cmp44, label %if.then46, label %if.else49, !dbg !5930

if.then46:                                        ; preds = %if.else43
  %56 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5931
  %csdp47 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %56, i32 0, i32 11, !dbg !5932
  %57 = load i32, i32* %csdp47, align 4, !dbg !5933
  %or48 = or i32 %57, 256, !dbg !5933
  store i32 %or48, i32* %csdp47, align 4, !dbg !5933
  br label %if.end56, !dbg !5931

if.else49:                                        ; preds = %if.else43
  %58 = load i32, i32* %port_window_bytes, align 4, !dbg !5934
  %cmp50 = icmp uge i32 %58, 16, !dbg !5936
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !5937

if.then52:                                        ; preds = %if.else49
  %59 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5938
  %csdp53 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %59, i32 0, i32 11, !dbg !5939
  %60 = load i32, i32* %csdp53, align 4, !dbg !5940
  %or54 = or i32 %60, 128, !dbg !5940
  store i32 %or54, i32* %csdp53, align 4, !dbg !5940
  br label %if.end55, !dbg !5938

if.end55:                                         ; preds = %if.then52, %if.else49
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then46
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then40
  br label %if.end60, !dbg !5941

if.else58:                                        ; preds = %if.then31
  %61 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5942
  %ccr59 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %61, i32 0, i32 8, !dbg !5944
  %62 = load i32, i32* %ccr59, align 4, !dbg !5945
  store i32 %62, i32* %ccr59, align 4, !dbg !5945
  br label %if.end60

if.end60:                                         ; preds = %if.else58, %if.end57
  br label %if.end92, !dbg !5946

if.else61:                                        ; preds = %if.end27
  %63 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5947
  %csdp62 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %63, i32 0, i32 11, !dbg !5949
  store i32 448, i32* %csdp62, align 4, !dbg !5950
  %64 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5951
  %ccr63 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %64, i32 0, i32 8, !dbg !5952
  %65 = load i32, i32* %ccr63, align 4, !dbg !5953
  %or64 = or i32 %65, 4096, !dbg !5953
  store i32 %or64, i32* %ccr63, align 4, !dbg !5953
  %66 = load i32, i32* %port_window, align 4, !dbg !5954
  %tobool65 = icmp ne i32 %66, 0, !dbg !5954
  br i1 %tobool65, label %if.then66, label %if.else89, !dbg !5956

if.then66:                                        ; preds = %if.else61
  %67 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5957
  %ccr67 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %67, i32 0, i32 8, !dbg !5959
  %68 = load i32, i32* %ccr67, align 4, !dbg !5960
  %or68 = or i32 %68, 49152, !dbg !5960
  store i32 %or68, i32* %ccr67, align 4, !dbg !5960
  %69 = load i32, i32* %port_window_bytes, align 4, !dbg !5961
  %cmp69 = icmp uge i32 %69, 64, !dbg !5963
  br i1 %cmp69, label %if.then71, label %if.else74, !dbg !5964

if.then71:                                        ; preds = %if.then66
  %70 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5965
  %csdp72 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %70, i32 0, i32 11, !dbg !5966
  %71 = load i32, i32* %csdp72, align 4, !dbg !5967
  %or73 = or i32 %71, 49152, !dbg !5967
  store i32 %or73, i32* %csdp72, align 4, !dbg !5967
  br label %if.end88, !dbg !5965

if.else74:                                        ; preds = %if.then66
  %72 = load i32, i32* %port_window_bytes, align 4, !dbg !5968
  %cmp75 = icmp uge i32 %72, 32, !dbg !5970
  br i1 %cmp75, label %if.then77, label %if.else80, !dbg !5971

if.then77:                                        ; preds = %if.else74
  %73 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5972
  %csdp78 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %73, i32 0, i32 11, !dbg !5973
  %74 = load i32, i32* %csdp78, align 4, !dbg !5974
  %or79 = or i32 %74, 32768, !dbg !5974
  store i32 %or79, i32* %csdp78, align 4, !dbg !5974
  br label %if.end87, !dbg !5972

if.else80:                                        ; preds = %if.else74
  %75 = load i32, i32* %port_window_bytes, align 4, !dbg !5975
  %cmp81 = icmp uge i32 %75, 16, !dbg !5977
  br i1 %cmp81, label %if.then83, label %if.end86, !dbg !5978

if.then83:                                        ; preds = %if.else80
  %76 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5979
  %csdp84 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %76, i32 0, i32 11, !dbg !5980
  %77 = load i32, i32* %csdp84, align 4, !dbg !5981
  %or85 = or i32 %77, 16384, !dbg !5981
  store i32 %or85, i32* %csdp84, align 4, !dbg !5981
  br label %if.end86, !dbg !5979

if.end86:                                         ; preds = %if.then83, %if.else80
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then77
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then71
  br label %if.end91, !dbg !5982

if.else89:                                        ; preds = %if.else61
  %78 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5983
  %ccr90 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %78, i32 0, i32 8, !dbg !5985
  %79 = load i32, i32* %ccr90, align 4, !dbg !5986
  store i32 %79, i32* %ccr90, align 4, !dbg !5986
  br label %if.end91

if.end91:                                         ; preds = %if.else89, %if.end88
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end60
  %80 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5987
  %cicr = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %80, i32 0, i32 10, !dbg !5988
  store i16 34, i16* %cicr, align 2, !dbg !5989
  %81 = load i32, i32* %es, align 4, !dbg !5990
  %82 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5991
  %csdp93 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %82, i32 0, i32 11, !dbg !5992
  %83 = load i32, i32* %csdp93, align 4, !dbg !5993
  %or94 = or i32 %83, %81, !dbg !5993
  store i32 %or94, i32* %csdp93, align 4, !dbg !5993
  %84 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !5994
  %cicr95 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %84, i32 0, i32 10, !dbg !5997
  %85 = load i16, i16* %cicr95, align 2, !dbg !5998
  %conv96 = zext i16 %85 to i32, !dbg !5998
  %or97 = or i32 %conv96, 1, !dbg !5998
  %conv98 = trunc i32 %or97 to i16, !dbg !5998
  store i16 %conv98, i16* %cicr95, align 2, !dbg !5998
  %86 = load i32, i32* %dir.addr, align 4, !dbg !5999
  %cmp99 = icmp eq i32 %86, 2, !dbg !6001
  br i1 %cmp99, label %if.then101, label %if.else104, !dbg !6002

if.then101:                                       ; preds = %if.end92
  %87 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6003
  %csdp102 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %87, i32 0, i32 11, !dbg !6004
  %88 = load i32, i32* %csdp102, align 4, !dbg !6005
  %or103 = or i32 %88, 12, !dbg !6005
  store i32 %or103, i32* %csdp102, align 4, !dbg !6005
  br label %if.end107, !dbg !6003

if.else104:                                       ; preds = %if.end92
  %89 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6006
  %csdp105 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %89, i32 0, i32 11, !dbg !6007
  %90 = load i32, i32* %csdp105, align 4, !dbg !6008
  %or106 = or i32 %90, 1536, !dbg !6008
  store i32 %or106, i32* %csdp105, align 4, !dbg !6008
  br label %if.end107

if.end107:                                        ; preds = %if.else104, %if.then101
  %91 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !6009
  %plat = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %91, i32 0, i32 4, !dbg !6011
  %92 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat, align 8, !dbg !6011
  %errata = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %92, i32 0, i32 3, !dbg !6012
  %93 = load i32, i32* %errata, align 8, !dbg !6012
  %conv108 = zext i32 %93 to i64, !dbg !6009
  %and = and i64 %conv108, 2, !dbg !6013
  %tobool109 = icmp ne i64 %and, 0, !dbg !6013
  br i1 %tobool109, label %if.then110, label %if.end112, !dbg !6014

if.then110:                                       ; preds = %if.end107
  %94 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6015
  %dma_ch = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %94, i32 0, i32 9, !dbg !6016
  %95 = load i32, i32* %dma_ch, align 8, !dbg !6016
  %conv111 = trunc i32 %95 to i16, !dbg !6015
  %96 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6017
  %clnk_ctrl = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %96, i32 0, i32 9, !dbg !6018
  store i16 %conv111, i16* %clnk_ctrl, align 8, !dbg !6019
  br label %if.end112, !dbg !6017

if.end112:                                        ; preds = %if.then110, %if.end107
  %97 = load i32, i32* %burst, align 4, !dbg !6020
  store i32 %97, i32* %en, align 4, !dbg !6021
  %98 = load i32, i32* %es, align 4, !dbg !6022
  %idxprom113 = zext i32 %98 to i64, !dbg !6023
  %arrayidx114 = getelementptr [3 x i32], [3 x i32]* @es_bytes, i64 0, i64 %idxprom113, !dbg !6023
  %99 = load i32, i32* %arrayidx114, align 4, !dbg !6023
  %100 = load i32, i32* %en, align 4, !dbg !6024
  %mul115 = mul i32 %99, %100, !dbg !6025
  store i32 %mul115, i32* %frame_bytes, align 4, !dbg !6026
  %101 = load i32, i32* %sglen.addr, align 4, !dbg !6027
  %cmp116 = icmp uge i32 %101, 2, !dbg !6029
  br i1 %cmp116, label %if.then118, label %if.end120, !dbg !6030

if.then118:                                       ; preds = %if.end112
  %102 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !6031
  %ll123_supported = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %102, i32 0, i32 12, !dbg !6032
  %103 = load i8, i8* %ll123_supported, align 1, !dbg !6032
  %tobool119 = trunc i8 %103 to i1, !dbg !6032
  %104 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6033
  %using_ll = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %104, i32 0, i32 1, !dbg !6034
  %frombool = zext i1 %tobool119 to i8, !dbg !6035
  store i8 %frombool, i8* %using_ll, align 8, !dbg !6035
  br label %if.end120, !dbg !6033

if.end120:                                        ; preds = %if.then118, %if.end112
  store i32 0, i32* %i, align 4, !dbg !6036
  %105 = load %struct.scatterlist*, %struct.scatterlist** %sgl.addr, align 8, !dbg !6036
  store %struct.scatterlist* %105, %struct.scatterlist** %sgent, align 8, !dbg !6036
  br label %for.cond, !dbg !6036

for.cond:                                         ; preds = %for.inc, %if.end120
  %106 = load i32, i32* %i, align 4, !dbg !6038
  %107 = load i32, i32* %sglen.addr, align 4, !dbg !6038
  %cmp121 = icmp ult i32 %106, %107, !dbg !6038
  br i1 %cmp121, label %for.body, label %for.end, !dbg !6036

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.omap_sg** %osg, metadata !6040, metadata !DIExpression()), !dbg !6043
  %108 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6044
  %sg = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %108, i32 0, i32 13, !dbg !6045
  %109 = load i32, i32* %i, align 4, !dbg !6046
  %idxprom123 = zext i32 %109 to i64, !dbg !6044
  %arrayidx124 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg, i64 0, i64 %idxprom123, !dbg !6044
  store %struct.omap_sg* %arrayidx124, %struct.omap_sg** %osg, align 8, !dbg !6043
  %110 = load %struct.scatterlist*, %struct.scatterlist** %sgent, align 8, !dbg !6047
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %110, i32 0, i32 3, !dbg !6047
  %111 = load i64, i64* %dma_address, align 8, !dbg !6047
  %112 = load %struct.omap_sg*, %struct.omap_sg** %osg, align 8, !dbg !6048
  %addr = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %112, i32 0, i32 0, !dbg !6049
  store i64 %111, i64* %addr, align 8, !dbg !6050
  %113 = load i32, i32* %en, align 4, !dbg !6051
  %114 = load %struct.omap_sg*, %struct.omap_sg** %osg, align 8, !dbg !6052
  %en125 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %114, i32 0, i32 1, !dbg !6053
  store i32 %113, i32* %en125, align 8, !dbg !6054
  %115 = load %struct.scatterlist*, %struct.scatterlist** %sgent, align 8, !dbg !6055
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %115, i32 0, i32 4, !dbg !6055
  %116 = load i32, i32* %dma_length, align 8, !dbg !6055
  %117 = load i32, i32* %frame_bytes, align 4, !dbg !6056
  %div = udiv i32 %116, %117, !dbg !6057
  %118 = load %struct.omap_sg*, %struct.omap_sg** %osg, align 8, !dbg !6058
  %fn = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %118, i32 0, i32 2, !dbg !6059
  store i32 %div, i32* %fn, align 4, !dbg !6060
  %119 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6061
  %using_ll126 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %119, i32 0, i32 1, !dbg !6063
  %120 = load i8, i8* %using_ll126, align 8, !dbg !6063
  %tobool127 = trunc i8 %120 to i1, !dbg !6063
  br i1 %tobool127, label %if.then128, label %if.end140, !dbg !6064

if.then128:                                       ; preds = %for.body
  %121 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !6065
  %desc_pool = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %121, i32 0, i32 13, !dbg !6067
  %122 = load %struct.dma_pool*, %struct.dma_pool** %desc_pool, align 8, !dbg !6067
  %123 = load %struct.omap_sg*, %struct.omap_sg** %osg, align 8, !dbg !6068
  %t2_desc_paddr = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %123, i32 0, i32 6, !dbg !6069
  %call129 = call i8* @dma_pool_alloc(%struct.dma_pool* %122, i32 2592, i64* %t2_desc_paddr) #11, !dbg !6070
  %124 = bitcast i8* %call129 to %struct.omap_type2_desc*, !dbg !6070
  %125 = load %struct.omap_sg*, %struct.omap_sg** %osg, align 8, !dbg !6071
  %t2_desc = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %125, i32 0, i32 5, !dbg !6072
  store %struct.omap_type2_desc* %124, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !6073
  %126 = load %struct.omap_sg*, %struct.omap_sg** %osg, align 8, !dbg !6074
  %t2_desc130 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %126, i32 0, i32 5, !dbg !6076
  %127 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc130, align 8, !dbg !6076
  %tobool131 = icmp ne %struct.omap_type2_desc* %127, null, !dbg !6074
  br i1 %tobool131, label %if.end136, label %if.then132, !dbg !6077

if.then132:                                       ; preds = %if.then128
  %128 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6078
  %device133 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %128, i32 0, i32 0, !dbg !6078
  %129 = load %struct.dma_device*, %struct.dma_device** %device133, align 8, !dbg !6078
  %dev134 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %129, i32 0, i32 15, !dbg !6078
  %130 = load %struct.device*, %struct.device** %dev134, align 8, !dbg !6078
  %131 = load i32, i32* %i, align 4, !dbg !6078
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %130, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0), i32 %131) #12, !dbg !6078
  store i8 1, i8* %ll_failed, align 1, !dbg !6080
  %132 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6081
  %using_ll135 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %132, i32 0, i32 1, !dbg !6082
  store i8 0, i8* %using_ll135, align 8, !dbg !6083
  br label %for.inc, !dbg !6084

if.end136:                                        ; preds = %if.then128
  %133 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6085
  %134 = load i32, i32* %i, align 4, !dbg !6086
  %135 = load i32, i32* %dir.addr, align 4, !dbg !6087
  %136 = load i32, i32* %i, align 4, !dbg !6088
  %137 = load i32, i32* %sglen.addr, align 4, !dbg !6089
  %sub137 = sub i32 %137, 1, !dbg !6090
  %cmp138 = icmp eq i32 %136, %sub137, !dbg !6091
  call void @omap_dma_fill_type2_desc(%struct.omap_desc* %133, i32 %134, i32 %135, i1 zeroext %cmp138) #11, !dbg !6092
  br label %if.end140, !dbg !6093

if.end140:                                        ; preds = %if.end136, %for.body
  br label %for.inc, !dbg !6094

for.inc:                                          ; preds = %if.end140, %if.then132
  %138 = load i32, i32* %i, align 4, !dbg !6038
  %inc = add i32 %138, 1, !dbg !6038
  store i32 %inc, i32* %i, align 4, !dbg !6038
  %139 = load %struct.scatterlist*, %struct.scatterlist** %sgent, align 8, !dbg !6038
  %call141 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %139) #11, !dbg !6038
  store %struct.scatterlist* %call141, %struct.scatterlist** %sgent, align 8, !dbg !6038
  br label %for.cond, !dbg !6038, !llvm.loop !6095

for.end:                                          ; preds = %for.cond
  %140 = load i32, i32* %sglen.addr, align 4, !dbg !6097
  %141 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6098
  %sglen142 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %141, i32 0, i32 12, !dbg !6099
  store i32 %140, i32* %sglen142, align 8, !dbg !6100
  %142 = load i8, i8* %ll_failed, align 1, !dbg !6101
  %tobool143 = trunc i8 %142 to i1, !dbg !6101
  br i1 %tobool143, label %if.then144, label %if.end165, !dbg !6103

if.then144:                                       ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !6104
  br label %for.cond145, !dbg !6107

for.cond145:                                      ; preds = %for.inc162, %if.then144
  %143 = load i32, i32* %i, align 4, !dbg !6108
  %144 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6110
  %sglen146 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %144, i32 0, i32 12, !dbg !6111
  %145 = load i32, i32* %sglen146, align 8, !dbg !6111
  %cmp147 = icmp ult i32 %143, %145, !dbg !6112
  br i1 %cmp147, label %for.body149, label %for.end164, !dbg !6113

for.body149:                                      ; preds = %for.cond145
  call void @llvm.dbg.declare(metadata %struct.omap_sg** %osg150, metadata !6114, metadata !DIExpression()), !dbg !6116
  %146 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6117
  %sg151 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %146, i32 0, i32 13, !dbg !6118
  %147 = load i32, i32* %i, align 4, !dbg !6119
  %idxprom152 = zext i32 %147 to i64, !dbg !6117
  %arrayidx153 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg151, i64 0, i64 %idxprom152, !dbg !6117
  store %struct.omap_sg* %arrayidx153, %struct.omap_sg** %osg150, align 8, !dbg !6116
  %148 = load %struct.omap_sg*, %struct.omap_sg** %osg150, align 8, !dbg !6120
  %t2_desc154 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %148, i32 0, i32 5, !dbg !6122
  %149 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc154, align 8, !dbg !6122
  %tobool155 = icmp ne %struct.omap_type2_desc* %149, null, !dbg !6120
  br i1 %tobool155, label %if.then156, label %if.end161, !dbg !6123

if.then156:                                       ; preds = %for.body149
  %150 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !6124
  %desc_pool157 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %150, i32 0, i32 13, !dbg !6126
  %151 = load %struct.dma_pool*, %struct.dma_pool** %desc_pool157, align 8, !dbg !6126
  %152 = load %struct.omap_sg*, %struct.omap_sg** %osg150, align 8, !dbg !6127
  %t2_desc158 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %152, i32 0, i32 5, !dbg !6128
  %153 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc158, align 8, !dbg !6128
  %154 = bitcast %struct.omap_type2_desc* %153 to i8*, !dbg !6127
  %155 = load %struct.omap_sg*, %struct.omap_sg** %osg150, align 8, !dbg !6129
  %t2_desc_paddr159 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %155, i32 0, i32 6, !dbg !6130
  %156 = load i64, i64* %t2_desc_paddr159, align 8, !dbg !6130
  call void @dma_pool_free(%struct.dma_pool* %151, i8* %154, i64 %156) #11, !dbg !6131
  %157 = load %struct.omap_sg*, %struct.omap_sg** %osg150, align 8, !dbg !6132
  %t2_desc160 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %157, i32 0, i32 5, !dbg !6133
  store %struct.omap_type2_desc* null, %struct.omap_type2_desc** %t2_desc160, align 8, !dbg !6134
  br label %if.end161, !dbg !6135

if.end161:                                        ; preds = %if.then156, %for.body149
  br label %for.inc162, !dbg !6136

for.inc162:                                       ; preds = %if.end161
  %158 = load i32, i32* %i, align 4, !dbg !6137
  %inc163 = add i32 %158, 1, !dbg !6137
  store i32 %inc163, i32* %i, align 4, !dbg !6137
  br label %for.cond145, !dbg !6138, !llvm.loop !6139

for.end164:                                       ; preds = %for.cond145
  br label %if.end165, !dbg !6141

if.end165:                                        ; preds = %for.end164, %for.end
  %159 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6142
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %159, i32 0, i32 0, !dbg !6143
  %160 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6144
  %vd = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %160, i32 0, i32 0, !dbg !6145
  %161 = load i64, i64* %tx_flags.addr, align 8, !dbg !6146
  %call166 = call %struct.dma_async_tx_descriptor* @vchan_tx_prep(%struct.virt_dma_chan* %vc, %struct.virt_dma_desc* %vd, i64 %161) #11, !dbg !6147
  store %struct.dma_async_tx_descriptor* %call166, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6148
  br label %return, !dbg !6148

return:                                           ; preds = %if.end165, %if.then18, %sw.default, %if.else11
  %162 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6149
  ret %struct.dma_async_tx_descriptor* %162, !dbg !6149
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @omap_dma_prep_dma_cyclic(%struct.dma_chan* %chan, i64 %buf_addr, i64 %buf_len, i64 %period_len, i32 %dir, i64 %flags) #0 !dbg !6150 {
entry:
  %retval = alloca %struct.dma_async_tx_descriptor*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  %buf_addr.addr = alloca i64, align 8
  %buf_len.addr = alloca i64, align 8
  %period_len.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %flags.addr = alloca i64, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %c = alloca %struct.omap_chan*, align 8
  %dev_width = alloca i32, align 4
  %d = alloca %struct.omap_desc*, align 8
  %dev_addr = alloca i64, align 8
  %es = alloca i32, align 4
  %burst = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !6151, metadata !DIExpression()), !dbg !6152
  store i64 %buf_addr, i64* %buf_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_addr.addr, metadata !6153, metadata !DIExpression()), !dbg !6154
  store i64 %buf_len, i64* %buf_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_len.addr, metadata !6155, metadata !DIExpression()), !dbg !6156
  store i64 %period_len, i64* %period_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %period_len.addr, metadata !6157, metadata !DIExpression()), !dbg !6158
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !6159, metadata !DIExpression()), !dbg !6160
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !6161, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !6163, metadata !DIExpression()), !dbg !6164
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6165
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !6166
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !6166
  %call = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %1) #11, !dbg !6167
  store %struct.omap_dmadev* %call, %struct.omap_dmadev** %od, align 8, !dbg !6164
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !6168, metadata !DIExpression()), !dbg !6169
  %2 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6170
  %call1 = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %2) #11, !dbg !6171
  store %struct.omap_chan* %call1, %struct.omap_chan** %c, align 8, !dbg !6169
  call void @llvm.dbg.declare(metadata i32* %dev_width, metadata !6172, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d, metadata !6174, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.declare(metadata i64* %dev_addr, metadata !6176, metadata !DIExpression()), !dbg !6177
  call void @llvm.dbg.declare(metadata i32* %es, metadata !6178, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.declare(metadata i32* %burst, metadata !6180, metadata !DIExpression()), !dbg !6181
  %3 = load i32, i32* %dir.addr, align 4, !dbg !6182
  %cmp = icmp eq i32 %3, 2, !dbg !6184
  br i1 %cmp, label %if.then, label %if.else, !dbg !6185

if.then:                                          ; preds = %entry
  %4 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6186
  %cfg = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %4, i32 0, i32 4, !dbg !6188
  %src_addr = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 1, !dbg !6189
  %5 = load i64, i64* %src_addr, align 8, !dbg !6189
  store i64 %5, i64* %dev_addr, align 8, !dbg !6190
  %6 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6191
  %cfg2 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %6, i32 0, i32 4, !dbg !6192
  %src_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg2, i32 0, i32 3, !dbg !6193
  %7 = load i32, i32* %src_addr_width, align 8, !dbg !6193
  store i32 %7, i32* %dev_width, align 4, !dbg !6194
  %8 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6195
  %cfg3 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %8, i32 0, i32 4, !dbg !6196
  %src_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg3, i32 0, i32 5, !dbg !6197
  %9 = load i32, i32* %src_maxburst, align 8, !dbg !6197
  store i32 %9, i32* %burst, align 4, !dbg !6198
  br label %if.end11, !dbg !6199

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %dir.addr, align 4, !dbg !6200
  %cmp4 = icmp eq i32 %10, 1, !dbg !6202
  br i1 %cmp4, label %if.then5, label %if.else9, !dbg !6203

if.then5:                                         ; preds = %if.else
  %11 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6204
  %cfg6 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %11, i32 0, i32 4, !dbg !6206
  %dst_addr = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg6, i32 0, i32 2, !dbg !6207
  %12 = load i64, i64* %dst_addr, align 8, !dbg !6207
  store i64 %12, i64* %dev_addr, align 8, !dbg !6208
  %13 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6209
  %cfg7 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %13, i32 0, i32 4, !dbg !6210
  %dst_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg7, i32 0, i32 4, !dbg !6211
  %14 = load i32, i32* %dst_addr_width, align 4, !dbg !6211
  store i32 %14, i32* %dev_width, align 4, !dbg !6212
  %15 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6213
  %cfg8 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %15, i32 0, i32 4, !dbg !6214
  %dst_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg8, i32 0, i32 6, !dbg !6215
  %16 = load i32, i32* %dst_maxburst, align 4, !dbg !6215
  store i32 %16, i32* %burst, align 4, !dbg !6216
  br label %if.end, !dbg !6217

if.else9:                                         ; preds = %if.else
  %17 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6218
  %device10 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %17, i32 0, i32 0, !dbg !6218
  %18 = load %struct.dma_device*, %struct.dma_device** %device10, align 8, !dbg !6218
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %18, i32 0, i32 15, !dbg !6218
  %19 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6218
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %19, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.omap_dma_prep_dma_cyclic, i64 0, i64 0)) #12, !dbg !6218
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6220
  br label %return, !dbg !6220

if.end:                                           ; preds = %if.then5
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %20 = load i32, i32* %dev_width, align 4, !dbg !6221
  switch i32 %20, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb12
    i32 4, label %sw.bb13
  ], !dbg !6222

sw.bb:                                            ; preds = %if.end11
  store i32 0, i32* %es, align 4, !dbg !6223
  br label %sw.epilog, !dbg !6225

sw.bb12:                                          ; preds = %if.end11
  store i32 1, i32* %es, align 4, !dbg !6226
  br label %sw.epilog, !dbg !6227

sw.bb13:                                          ; preds = %if.end11
  store i32 2, i32* %es, align 4, !dbg !6228
  br label %sw.epilog, !dbg !6229

sw.default:                                       ; preds = %if.end11
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6230
  br label %return, !dbg !6230

sw.epilog:                                        ; preds = %sw.bb13, %sw.bb12, %sw.bb
  %call14 = call i8* @kzalloc(i64 200, i32 2592) #11, !dbg !6231
  %21 = bitcast i8* %call14 to %struct.omap_desc*, !dbg !6231
  store %struct.omap_desc* %21, %struct.omap_desc** %d, align 8, !dbg !6232
  %22 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6233
  %tobool = icmp ne %struct.omap_desc* %22, null, !dbg !6233
  br i1 %tobool, label %if.end16, label %if.then15, !dbg !6235

if.then15:                                        ; preds = %sw.epilog
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6236
  br label %return, !dbg !6236

if.end16:                                         ; preds = %sw.epilog
  %23 = load i32, i32* %dir.addr, align 4, !dbg !6237
  %24 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6238
  %dir17 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %24, i32 0, i32 2, !dbg !6239
  store i32 %23, i32* %dir17, align 4, !dbg !6240
  %25 = load i64, i64* %dev_addr, align 8, !dbg !6241
  %26 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6242
  %dev_addr18 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %26, i32 0, i32 3, !dbg !6243
  store i64 %25, i64* %dev_addr18, align 8, !dbg !6244
  %27 = load i32, i32* %burst, align 4, !dbg !6245
  %28 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6246
  %fi = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %28, i32 0, i32 5, !dbg !6247
  store i32 %27, i32* %fi, align 4, !dbg !6248
  %29 = load i32, i32* %es, align 4, !dbg !6249
  %conv = trunc i32 %29 to i8, !dbg !6249
  %30 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6250
  %es19 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %30, i32 0, i32 7, !dbg !6251
  store i8 %conv, i8* %es19, align 2, !dbg !6252
  %31 = load i64, i64* %buf_addr.addr, align 8, !dbg !6253
  %32 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6254
  %sg = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %32, i32 0, i32 13, !dbg !6255
  %arrayidx = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg, i64 0, i64 0, !dbg !6254
  %addr = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx, i32 0, i32 0, !dbg !6256
  store i64 %31, i64* %addr, align 8, !dbg !6257
  %33 = load i64, i64* %period_len.addr, align 8, !dbg !6258
  %34 = load i32, i32* %es, align 4, !dbg !6259
  %idxprom = zext i32 %34 to i64, !dbg !6260
  %arrayidx20 = getelementptr [3 x i32], [3 x i32]* @es_bytes, i64 0, i64 %idxprom, !dbg !6260
  %35 = load i32, i32* %arrayidx20, align 4, !dbg !6260
  %conv21 = zext i32 %35 to i64, !dbg !6260
  %div = udiv i64 %33, %conv21, !dbg !6261
  %conv22 = trunc i64 %div to i32, !dbg !6258
  %36 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6262
  %sg23 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %36, i32 0, i32 13, !dbg !6263
  %arrayidx24 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg23, i64 0, i64 0, !dbg !6262
  %en = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx24, i32 0, i32 1, !dbg !6264
  store i32 %conv22, i32* %en, align 8, !dbg !6265
  %37 = load i64, i64* %buf_len.addr, align 8, !dbg !6266
  %38 = load i64, i64* %period_len.addr, align 8, !dbg !6267
  %div25 = udiv i64 %37, %38, !dbg !6268
  %conv26 = trunc i64 %div25 to i32, !dbg !6266
  %39 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6269
  %sg27 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %39, i32 0, i32 13, !dbg !6270
  %arrayidx28 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg27, i64 0, i64 0, !dbg !6269
  %fn = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx28, i32 0, i32 2, !dbg !6271
  store i32 %conv26, i32* %fn, align 4, !dbg !6272
  %40 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6273
  %sglen = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %40, i32 0, i32 12, !dbg !6274
  store i32 1, i32* %sglen, align 8, !dbg !6275
  %41 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6276
  %ccr = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %41, i32 0, i32 3, !dbg !6277
  %42 = load i32, i32* %ccr, align 8, !dbg !6277
  %43 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6278
  %ccr29 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %43, i32 0, i32 8, !dbg !6279
  store i32 %42, i32* %ccr29, align 4, !dbg !6280
  %44 = load i32, i32* %dir.addr, align 4, !dbg !6281
  %cmp30 = icmp eq i32 %44, 2, !dbg !6283
  br i1 %cmp30, label %if.then32, label %if.else34, !dbg !6284

if.then32:                                        ; preds = %if.end16
  %45 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6285
  %ccr33 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %45, i32 0, i32 8, !dbg !6286
  %46 = load i32, i32* %ccr33, align 4, !dbg !6287
  %or = or i32 %46, 16384, !dbg !6287
  store i32 %or, i32* %ccr33, align 4, !dbg !6287
  br label %if.end37, !dbg !6285

if.else34:                                        ; preds = %if.end16
  %47 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6288
  %ccr35 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %47, i32 0, i32 8, !dbg !6289
  %48 = load i32, i32* %ccr35, align 4, !dbg !6290
  %or36 = or i32 %48, 4096, !dbg !6290
  store i32 %or36, i32* %ccr35, align 4, !dbg !6290
  br label %if.end37

if.end37:                                         ; preds = %if.else34, %if.then32
  %49 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6291
  %cicr = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %49, i32 0, i32 10, !dbg !6292
  store i16 2, i16* %cicr, align 2, !dbg !6293
  %50 = load i64, i64* %flags.addr, align 8, !dbg !6294
  %and = and i64 %50, 1, !dbg !6296
  %tobool38 = icmp ne i64 %and, 0, !dbg !6296
  br i1 %tobool38, label %if.then39, label %if.end44, !dbg !6297

if.then39:                                        ; preds = %if.end37
  %51 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6298
  %cicr40 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %51, i32 0, i32 10, !dbg !6299
  %52 = load i16, i16* %cicr40, align 2, !dbg !6300
  %conv41 = zext i16 %52 to i32, !dbg !6300
  %or42 = or i32 %conv41, 8, !dbg !6300
  %conv43 = trunc i32 %or42 to i16, !dbg !6300
  store i16 %conv43, i16* %cicr40, align 2, !dbg !6300
  br label %if.end44, !dbg !6298

if.end44:                                         ; preds = %if.then39, %if.end37
  %53 = load i32, i32* %es, align 4, !dbg !6301
  %54 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6302
  %csdp = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %54, i32 0, i32 11, !dbg !6303
  store i32 %53, i32* %csdp, align 4, !dbg !6304
  %55 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6305
  %cicr45 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %55, i32 0, i32 10, !dbg !6308
  %56 = load i16, i16* %cicr45, align 2, !dbg !6309
  %conv46 = zext i16 %56 to i32, !dbg !6309
  %or47 = or i32 %conv46, 1, !dbg !6309
  %conv48 = trunc i32 %or47 to i16, !dbg !6309
  store i16 %conv48, i16* %cicr45, align 2, !dbg !6309
  %57 = load i32, i32* %dir.addr, align 4, !dbg !6310
  %cmp49 = icmp eq i32 %57, 2, !dbg !6312
  br i1 %cmp49, label %if.then51, label %if.else54, !dbg !6313

if.then51:                                        ; preds = %if.end44
  %58 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6314
  %csdp52 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %58, i32 0, i32 11, !dbg !6315
  %59 = load i32, i32* %csdp52, align 4, !dbg !6316
  %or53 = or i32 %59, 20, !dbg !6316
  store i32 %or53, i32* %csdp52, align 4, !dbg !6316
  br label %if.end57, !dbg !6314

if.else54:                                        ; preds = %if.end44
  %60 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6317
  %csdp55 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %60, i32 0, i32 11, !dbg !6318
  %61 = load i32, i32* %csdp55, align 4, !dbg !6319
  %or56 = or i32 %61, 2560, !dbg !6319
  store i32 %or56, i32* %csdp55, align 4, !dbg !6319
  br label %if.end57

if.end57:                                         ; preds = %if.else54, %if.then51
  %62 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !6320
  %plat = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %62, i32 0, i32 4, !dbg !6320
  %63 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat, align 8, !dbg !6320
  %dma_attr = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %63, i32 0, i32 2, !dbg !6320
  %64 = load %struct.omap_dma_dev_attr*, %struct.omap_dma_dev_attr** %dma_attr, align 8, !dbg !6320
  %dev_caps = getelementptr inbounds %struct.omap_dma_dev_attr, %struct.omap_dma_dev_attr* %64, i32 0, i32 0, !dbg !6320
  %65 = load i32, i32* %dev_caps, align 4, !dbg !6320
  %conv58 = zext i32 %65 to i64, !dbg !6320
  %and59 = and i64 %conv58, 64, !dbg !6320
  %tobool60 = icmp ne i64 %and59, 0, !dbg !6320
  br i1 %tobool60, label %if.then61, label %if.else64, !dbg !6322

if.then61:                                        ; preds = %if.end57
  %66 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6323
  %ccr62 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %66, i32 0, i32 8, !dbg !6324
  %67 = load i32, i32* %ccr62, align 4, !dbg !6325
  %or63 = or i32 %67, 768, !dbg !6325
  store i32 %or63, i32* %ccr62, align 4, !dbg !6325
  br label %if.end67, !dbg !6323

if.else64:                                        ; preds = %if.end57
  %68 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6326
  %dma_ch = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %68, i32 0, i32 9, !dbg !6327
  %69 = load i32, i32* %dma_ch, align 8, !dbg !6327
  %or65 = or i32 %69, 32768, !dbg !6328
  %conv66 = trunc i32 %or65 to i16, !dbg !6326
  %70 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6329
  %clnk_ctrl = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %70, i32 0, i32 9, !dbg !6330
  store i16 %conv66, i16* %clnk_ctrl, align 8, !dbg !6331
  br label %if.end67

if.end67:                                         ; preds = %if.else64, %if.then61
  %71 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6332
  %cyclic = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %71, i32 0, i32 6, !dbg !6333
  store i8 1, i8* %cyclic, align 4, !dbg !6334
  %72 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6335
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %72, i32 0, i32 0, !dbg !6336
  %73 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6337
  %vd = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %73, i32 0, i32 0, !dbg !6338
  %74 = load i64, i64* %flags.addr, align 8, !dbg !6339
  %call68 = call %struct.dma_async_tx_descriptor* @vchan_tx_prep(%struct.virt_dma_chan* %vc, %struct.virt_dma_desc* %vd, i64 %74) #11, !dbg !6340
  store %struct.dma_async_tx_descriptor* %call68, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6341
  br label %return, !dbg !6341

return:                                           ; preds = %if.end67, %if.then15, %sw.default, %if.else9
  %75 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6342
  ret %struct.dma_async_tx_descriptor* %75, !dbg !6342
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @omap_dma_prep_dma_memcpy(%struct.dma_chan* %chan, i64 %dest, i64 %src, i64 %len, i64 %tx_flags) #0 !dbg !6343 {
entry:
  %word.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %word.addr.i, metadata !6344, metadata !DIExpression()), !dbg !6349
  %retval = alloca %struct.dma_async_tx_descriptor*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  %dest.addr = alloca i64, align 8
  %src.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %tx_flags.addr = alloca i64, align 8
  %c = alloca %struct.omap_chan*, align 8
  %d = alloca %struct.omap_desc*, align 8
  %data_type = alloca i8, align 1
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !6351, metadata !DIExpression()), !dbg !6352
  store i64 %dest, i64* %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dest.addr, metadata !6353, metadata !DIExpression()), !dbg !6354
  store i64 %src, i64* %src.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %src.addr, metadata !6355, metadata !DIExpression()), !dbg !6356
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6357, metadata !DIExpression()), !dbg !6358
  store i64 %tx_flags, i64* %tx_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tx_flags.addr, metadata !6359, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !6361, metadata !DIExpression()), !dbg !6362
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6363
  %call = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %0) #11, !dbg !6364
  store %struct.omap_chan* %call, %struct.omap_chan** %c, align 8, !dbg !6362
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d, metadata !6365, metadata !DIExpression()), !dbg !6366
  call void @llvm.dbg.declare(metadata i8* %data_type, metadata !6367, metadata !DIExpression()), !dbg !6368
  %call1 = call i8* @kzalloc(i64 200, i32 2592) #11, !dbg !6369
  %1 = bitcast i8* %call1 to %struct.omap_desc*, !dbg !6369
  store %struct.omap_desc* %1, %struct.omap_desc** %d, align 8, !dbg !6370
  %2 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6371
  %tobool = icmp ne %struct.omap_desc* %2, null, !dbg !6371
  br i1 %tobool, label %if.end, label %if.then, !dbg !6373

if.then:                                          ; preds = %entry
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6374
  br label %return, !dbg !6374

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %src.addr, align 8, !dbg !6375
  %4 = load i64, i64* %dest.addr, align 8, !dbg !6376
  %or = or i64 %3, %4, !dbg !6377
  %5 = load i64, i64* %len.addr, align 8, !dbg !6378
  %or2 = or i64 %or, %5, !dbg !6379
  store i64 %or2, i64* %word.addr.i, align 8
  %6 = load i64, i64* %word.addr.i, align 8, !dbg !6380
  %7 = call i64 asm "rep; bsf $1,$0", "=r,rm,~{dirflag},~{fpsr},~{flags}"(i64 %6) #7, !dbg !6381, !srcloc !6382
  store i64 %7, i64* %word.addr.i, align 8, !dbg !6381
  %8 = load i64, i64* %word.addr.i, align 8, !dbg !6383
  %conv = trunc i64 %8 to i8, !dbg !6384
  store i8 %conv, i8* %data_type, align 1, !dbg !6385
  %9 = load i8, i8* %data_type, align 1, !dbg !6386
  %conv4 = zext i8 %9 to i32, !dbg !6386
  %cmp = icmp sgt i32 %conv4, 2, !dbg !6388
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !6389

if.then6:                                         ; preds = %if.end
  store i8 2, i8* %data_type, align 1, !dbg !6390
  br label %if.end7, !dbg !6391

if.end7:                                          ; preds = %if.then6, %if.end
  %10 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6392
  %dir = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %10, i32 0, i32 2, !dbg !6393
  store i32 0, i32* %dir, align 4, !dbg !6394
  %11 = load i64, i64* %src.addr, align 8, !dbg !6395
  %12 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6396
  %dev_addr = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %12, i32 0, i32 3, !dbg !6397
  store i64 %11, i64* %dev_addr, align 8, !dbg !6398
  %13 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6399
  %fi = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %13, i32 0, i32 5, !dbg !6400
  store i32 0, i32* %fi, align 4, !dbg !6401
  %14 = load i8, i8* %data_type, align 1, !dbg !6402
  %15 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6403
  %es = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %15, i32 0, i32 7, !dbg !6404
  store i8 %14, i8* %es, align 2, !dbg !6405
  %16 = load i64, i64* %len.addr, align 8, !dbg !6406
  %17 = load i8, i8* %data_type, align 1, !dbg !6407
  %conv8 = zext i8 %17 to i32, !dbg !6407
  %sh_prom = zext i32 %conv8 to i64, !dbg !6407
  %shl = shl i64 1, %sh_prom, !dbg !6407
  %div = udiv i64 %16, %shl, !dbg !6408
  %conv9 = trunc i64 %div to i32, !dbg !6406
  %18 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6409
  %sg = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %18, i32 0, i32 13, !dbg !6410
  %arrayidx = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg, i64 0, i64 0, !dbg !6409
  %en = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx, i32 0, i32 1, !dbg !6411
  store i32 %conv9, i32* %en, align 8, !dbg !6412
  %19 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6413
  %sg10 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %19, i32 0, i32 13, !dbg !6414
  %arrayidx11 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg10, i64 0, i64 0, !dbg !6413
  %fn = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx11, i32 0, i32 2, !dbg !6415
  store i32 1, i32* %fn, align 4, !dbg !6416
  %20 = load i64, i64* %dest.addr, align 8, !dbg !6417
  %21 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6418
  %sg12 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %21, i32 0, i32 13, !dbg !6419
  %arrayidx13 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg12, i64 0, i64 0, !dbg !6418
  %addr = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx13, i32 0, i32 0, !dbg !6420
  store i64 %20, i64* %addr, align 8, !dbg !6421
  %22 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6422
  %sglen = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %22, i32 0, i32 12, !dbg !6423
  store i32 1, i32* %sglen, align 8, !dbg !6424
  %23 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6425
  %ccr = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %23, i32 0, i32 3, !dbg !6426
  %24 = load i32, i32* %ccr, align 8, !dbg !6426
  %25 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6427
  %ccr14 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %25, i32 0, i32 8, !dbg !6428
  store i32 %24, i32* %ccr14, align 4, !dbg !6429
  %26 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6430
  %ccr15 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %26, i32 0, i32 8, !dbg !6431
  %27 = load i32, i32* %ccr15, align 4, !dbg !6432
  %or16 = or i32 %27, 20480, !dbg !6432
  store i32 %or16, i32* %ccr15, align 4, !dbg !6432
  %28 = load i64, i64* %tx_flags.addr, align 8, !dbg !6433
  %and = and i64 %28, 1, !dbg !6435
  %tobool17 = icmp ne i64 %and, 0, !dbg !6435
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !6436

if.then18:                                        ; preds = %if.end7
  %29 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6437
  %cicr = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %29, i32 0, i32 10, !dbg !6438
  %30 = load i16, i16* %cicr, align 2, !dbg !6439
  %conv19 = zext i16 %30 to i32, !dbg !6439
  %or20 = or i32 %conv19, 8, !dbg !6439
  %conv21 = trunc i32 %or20 to i16, !dbg !6439
  store i16 %conv21, i16* %cicr, align 2, !dbg !6439
  br label %if.end22, !dbg !6437

if.else:                                          ; preds = %if.end7
  %31 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6440
  %polled = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %31, i32 0, i32 4, !dbg !6441
  store i8 1, i8* %polled, align 8, !dbg !6442
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then18
  %32 = load i8, i8* %data_type, align 1, !dbg !6443
  %conv23 = zext i8 %32 to i32, !dbg !6443
  %33 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6444
  %csdp = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %33, i32 0, i32 11, !dbg !6445
  store i32 %conv23, i32* %csdp, align 4, !dbg !6446
  %34 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6447
  %cicr24 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %34, i32 0, i32 10, !dbg !6450
  %35 = load i16, i16* %cicr24, align 2, !dbg !6451
  %conv25 = zext i16 %35 to i32, !dbg !6451
  %or26 = or i32 %conv25, 1, !dbg !6451
  %conv27 = trunc i32 %or26 to i16, !dbg !6451
  store i16 %conv27, i16* %cicr24, align 2, !dbg !6451
  %36 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6452
  %csdp28 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %36, i32 0, i32 11, !dbg !6453
  %37 = load i32, i32* %csdp28, align 4, !dbg !6454
  store i32 %37, i32* %csdp28, align 4, !dbg !6454
  %38 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6455
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %38, i32 0, i32 0, !dbg !6456
  %39 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6457
  %vd = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %39, i32 0, i32 0, !dbg !6458
  %40 = load i64, i64* %tx_flags.addr, align 8, !dbg !6459
  %call29 = call %struct.dma_async_tx_descriptor* @vchan_tx_prep(%struct.virt_dma_chan* %vc, %struct.virt_dma_desc* %vd, i64 %40) #11, !dbg !6460
  store %struct.dma_async_tx_descriptor* %call29, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6461
  br label %return, !dbg !6461

return:                                           ; preds = %if.end22, %if.then
  %41 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6462
  ret %struct.dma_async_tx_descriptor* %41, !dbg !6462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @omap_dma_prep_dma_interleaved(%struct.dma_chan* %chan, %struct.dma_interleaved_template* %xt, i64 %flags) #0 !dbg !6463 {
entry:
  %word.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %word.addr.i, metadata !6344, metadata !DIExpression()), !dbg !6464
  %retval = alloca %struct.dma_async_tx_descriptor*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  %xt.addr = alloca %struct.dma_interleaved_template*, align 8
  %flags.addr = alloca i64, align 8
  %c = alloca %struct.omap_chan*, align 8
  %d = alloca %struct.omap_desc*, align 8
  %sg = alloca %struct.omap_sg*, align 8
  %data_type = alloca i8, align 1
  %src_icg = alloca i64, align 8
  %dst_icg = alloca i64, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !6466, metadata !DIExpression()), !dbg !6467
  store %struct.dma_interleaved_template* %xt, %struct.dma_interleaved_template** %xt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_interleaved_template** %xt.addr, metadata !6468, metadata !DIExpression()), !dbg !6469
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !6472, metadata !DIExpression()), !dbg !6473
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6474
  %call = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %0) #11, !dbg !6475
  store %struct.omap_chan* %call, %struct.omap_chan** %c, align 8, !dbg !6473
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d, metadata !6476, metadata !DIExpression()), !dbg !6477
  call void @llvm.dbg.declare(metadata %struct.omap_sg** %sg, metadata !6478, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.declare(metadata i8* %data_type, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.declare(metadata i64* %src_icg, metadata !6482, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.declare(metadata i64* %dst_icg, metadata !6484, metadata !DIExpression()), !dbg !6485
  %1 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6486
  %dir = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %1, i32 0, i32 2, !dbg !6488
  %2 = load i32, i32* %dir, align 8, !dbg !6488
  %call1 = call zeroext i1 @is_slave_direction(i32 %2) #11, !dbg !6489
  br i1 %call1, label %if.then, label %if.end, !dbg !6490

if.then:                                          ; preds = %entry
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6491
  br label %return, !dbg !6491

if.end:                                           ; preds = %entry
  %3 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6492
  %frame_size = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %3, i32 0, i32 8, !dbg !6494
  %4 = load i64, i64* %frame_size, align 8, !dbg !6494
  %cmp = icmp ne i64 %4, 1, !dbg !6495
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !6496

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6497
  %numf = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %5, i32 0, i32 7, !dbg !6498
  %6 = load i64, i64* %numf, align 8, !dbg !6498
  %cmp2 = icmp eq i64 %6, 0, !dbg !6499
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6500

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6501
  br label %return, !dbg !6501

if.end4:                                          ; preds = %lor.lhs.false
  %call5 = call i8* @kzalloc(i64 200, i32 2592) #11, !dbg !6502
  %7 = bitcast i8* %call5 to %struct.omap_desc*, !dbg !6502
  store %struct.omap_desc* %7, %struct.omap_desc** %d, align 8, !dbg !6503
  %8 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6504
  %tobool = icmp ne %struct.omap_desc* %8, null, !dbg !6504
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !6506

if.then6:                                         ; preds = %if.end4
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6507
  br label %return, !dbg !6507

if.end7:                                          ; preds = %if.end4
  %9 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6508
  %src_start = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %9, i32 0, i32 0, !dbg !6509
  %10 = load i64, i64* %src_start, align 8, !dbg !6509
  %11 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6510
  %dst_start = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %11, i32 0, i32 1, !dbg !6511
  %12 = load i64, i64* %dst_start, align 8, !dbg !6511
  %or = or i64 %10, %12, !dbg !6512
  %13 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6513
  %sgl = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %13, i32 0, i32 9, !dbg !6514
  %arrayidx = getelementptr [0 x %struct.data_chunk], [0 x %struct.data_chunk]* %sgl, i64 0, i64 0, !dbg !6513
  %size = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %arrayidx, i32 0, i32 0, !dbg !6515
  %14 = load i64, i64* %size, align 8, !dbg !6515
  %or8 = or i64 %or, %14, !dbg !6516
  store i64 %or8, i64* %word.addr.i, align 8
  %15 = load i64, i64* %word.addr.i, align 8, !dbg !6517
  %16 = call i64 asm "rep; bsf $1,$0", "=r,rm,~{dirflag},~{fpsr},~{flags}"(i64 %15) #7, !dbg !6518, !srcloc !6382
  store i64 %16, i64* %word.addr.i, align 8, !dbg !6518
  %17 = load i64, i64* %word.addr.i, align 8, !dbg !6519
  %conv = trunc i64 %17 to i8, !dbg !6520
  store i8 %conv, i8* %data_type, align 1, !dbg !6521
  %18 = load i8, i8* %data_type, align 1, !dbg !6522
  %conv10 = zext i8 %18 to i32, !dbg !6522
  %cmp11 = icmp sgt i32 %conv10, 2, !dbg !6524
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !6525

if.then13:                                        ; preds = %if.end7
  store i8 2, i8* %data_type, align 1, !dbg !6526
  br label %if.end14, !dbg !6527

if.end14:                                         ; preds = %if.then13, %if.end7
  %19 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6528
  %sg15 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %19, i32 0, i32 13, !dbg !6529
  %arrayidx16 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg15, i64 0, i64 0, !dbg !6528
  store %struct.omap_sg* %arrayidx16, %struct.omap_sg** %sg, align 8, !dbg !6530
  %20 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6531
  %dir17 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %20, i32 0, i32 2, !dbg !6532
  store i32 0, i32* %dir17, align 4, !dbg !6533
  %21 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6534
  %src_start18 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %21, i32 0, i32 0, !dbg !6535
  %22 = load i64, i64* %src_start18, align 8, !dbg !6535
  %23 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6536
  %dev_addr = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %23, i32 0, i32 3, !dbg !6537
  store i64 %22, i64* %dev_addr, align 8, !dbg !6538
  %24 = load i8, i8* %data_type, align 1, !dbg !6539
  %25 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6540
  %es = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %25, i32 0, i32 7, !dbg !6541
  store i8 %24, i8* %es, align 2, !dbg !6542
  %26 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6543
  %sgl19 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %26, i32 0, i32 9, !dbg !6544
  %arrayidx20 = getelementptr [0 x %struct.data_chunk], [0 x %struct.data_chunk]* %sgl19, i64 0, i64 0, !dbg !6543
  %size21 = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %arrayidx20, i32 0, i32 0, !dbg !6545
  %27 = load i64, i64* %size21, align 8, !dbg !6545
  %28 = load i8, i8* %data_type, align 1, !dbg !6546
  %conv22 = zext i8 %28 to i32, !dbg !6546
  %sh_prom = zext i32 %conv22 to i64, !dbg !6546
  %shl = shl i64 1, %sh_prom, !dbg !6546
  %div = udiv i64 %27, %shl, !dbg !6547
  %conv23 = trunc i64 %div to i32, !dbg !6543
  %29 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !6548
  %en = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %29, i32 0, i32 1, !dbg !6549
  store i32 %conv23, i32* %en, align 8, !dbg !6550
  %30 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6551
  %numf24 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %30, i32 0, i32 7, !dbg !6552
  %31 = load i64, i64* %numf24, align 8, !dbg !6552
  %conv25 = trunc i64 %31 to i32, !dbg !6551
  %32 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !6553
  %fn = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %32, i32 0, i32 2, !dbg !6554
  store i32 %conv25, i32* %fn, align 4, !dbg !6555
  %33 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6556
  %dst_start26 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %33, i32 0, i32 1, !dbg !6557
  %34 = load i64, i64* %dst_start26, align 8, !dbg !6557
  %35 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !6558
  %addr = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %35, i32 0, i32 0, !dbg !6559
  store i64 %34, i64* %addr, align 8, !dbg !6560
  %36 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6561
  %sglen = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %36, i32 0, i32 12, !dbg !6562
  store i32 1, i32* %sglen, align 8, !dbg !6563
  %37 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6564
  %ccr = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %37, i32 0, i32 3, !dbg !6565
  %38 = load i32, i32* %ccr, align 8, !dbg !6565
  %39 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6566
  %ccr27 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %39, i32 0, i32 8, !dbg !6567
  store i32 %38, i32* %ccr27, align 4, !dbg !6568
  %40 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6569
  %41 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6570
  %sgl28 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %41, i32 0, i32 9, !dbg !6571
  %arrayidx29 = getelementptr [0 x %struct.data_chunk], [0 x %struct.data_chunk]* %sgl28, i64 0, i64 0, !dbg !6570
  %call30 = call i64 @dmaengine_get_src_icg(%struct.dma_interleaved_template* %40, %struct.data_chunk* %arrayidx29) #11, !dbg !6572
  store i64 %call30, i64* %src_icg, align 8, !dbg !6573
  %42 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6574
  %43 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6575
  %sgl31 = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %43, i32 0, i32 9, !dbg !6576
  %arrayidx32 = getelementptr [0 x %struct.data_chunk], [0 x %struct.data_chunk]* %sgl31, i64 0, i64 0, !dbg !6575
  %call33 = call i64 @dmaengine_get_dst_icg(%struct.dma_interleaved_template* %42, %struct.data_chunk* %arrayidx32) #11, !dbg !6577
  store i64 %call33, i64* %dst_icg, align 8, !dbg !6578
  %44 = load i64, i64* %src_icg, align 8, !dbg !6579
  %tobool34 = icmp ne i64 %44, 0, !dbg !6579
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !6581

if.then35:                                        ; preds = %if.end14
  %45 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6582
  %ccr36 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %45, i32 0, i32 8, !dbg !6584
  %46 = load i32, i32* %ccr36, align 4, !dbg !6585
  %or37 = or i32 %46, 12288, !dbg !6585
  store i32 %or37, i32* %ccr36, align 4, !dbg !6585
  %47 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6586
  %ei = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %47, i32 0, i32 6, !dbg !6587
  store i16 1, i16* %ei, align 8, !dbg !6588
  %48 = load i64, i64* %src_icg, align 8, !dbg !6589
  %add = add i64 %48, 1, !dbg !6590
  %conv38 = trunc i64 %add to i32, !dbg !6589
  %49 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6591
  %fi = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %49, i32 0, i32 5, !dbg !6592
  store i32 %conv38, i32* %fi, align 4, !dbg !6593
  br label %if.end46, !dbg !6594

if.else:                                          ; preds = %if.end14
  %50 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6595
  %src_inc = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %50, i32 0, i32 3, !dbg !6597
  %51 = load i8, i8* %src_inc, align 4, !dbg !6597
  %tobool39 = trunc i8 %51 to i1, !dbg !6597
  br i1 %tobool39, label %if.then40, label %if.else44, !dbg !6598

if.then40:                                        ; preds = %if.else
  %52 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6599
  %ccr41 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %52, i32 0, i32 8, !dbg !6601
  %53 = load i32, i32* %ccr41, align 4, !dbg !6602
  %or42 = or i32 %53, 4096, !dbg !6602
  store i32 %or42, i32* %ccr41, align 4, !dbg !6602
  %54 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6603
  %fi43 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %54, i32 0, i32 5, !dbg !6604
  store i32 0, i32* %fi43, align 4, !dbg !6605
  br label %if.end45, !dbg !6606

if.else44:                                        ; preds = %if.else
  %55 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6607
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %55, i32 0, i32 0, !dbg !6607
  %56 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !6607
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %56, i32 0, i32 15, !dbg !6607
  %57 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6607
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %57, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.omap_dma_prep_dma_interleaved, i64 0, i64 0)) #12, !dbg !6607
  %58 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6609
  %59 = bitcast %struct.omap_desc* %58 to i8*, !dbg !6609
  call void @kfree(i8* %59) #11, !dbg !6610
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6611
  br label %return, !dbg !6611

if.end45:                                         ; preds = %if.then40
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then35
  %60 = load i64, i64* %dst_icg, align 8, !dbg !6612
  %tobool47 = icmp ne i64 %60, 0, !dbg !6612
  br i1 %tobool47, label %if.then48, label %if.else55, !dbg !6614

if.then48:                                        ; preds = %if.end46
  %61 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6615
  %ccr49 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %61, i32 0, i32 8, !dbg !6617
  %62 = load i32, i32* %ccr49, align 4, !dbg !6618
  %or50 = or i32 %62, 49152, !dbg !6618
  store i32 %or50, i32* %ccr49, align 4, !dbg !6618
  %63 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !6619
  %ei51 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %63, i32 0, i32 4, !dbg !6620
  store i16 1, i16* %ei51, align 4, !dbg !6621
  %64 = load i64, i64* %dst_icg, align 8, !dbg !6622
  %add52 = add i64 %64, 1, !dbg !6623
  %conv53 = trunc i64 %add52 to i32, !dbg !6622
  %65 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !6624
  %fi54 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %65, i32 0, i32 3, !dbg !6625
  store i32 %conv53, i32* %fi54, align 8, !dbg !6626
  br label %if.end65, !dbg !6627

if.else55:                                        ; preds = %if.end46
  %66 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !6628
  %dst_inc = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %66, i32 0, i32 4, !dbg !6630
  %67 = load i8, i8* %dst_inc, align 1, !dbg !6630
  %tobool56 = trunc i8 %67 to i1, !dbg !6630
  br i1 %tobool56, label %if.then57, label %if.else61, !dbg !6631

if.then57:                                        ; preds = %if.else55
  %68 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6632
  %ccr58 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %68, i32 0, i32 8, !dbg !6634
  %69 = load i32, i32* %ccr58, align 4, !dbg !6635
  %or59 = or i32 %69, 16384, !dbg !6635
  store i32 %or59, i32* %ccr58, align 4, !dbg !6635
  %70 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !6636
  %fi60 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %70, i32 0, i32 3, !dbg !6637
  store i32 0, i32* %fi60, align 8, !dbg !6638
  br label %if.end64, !dbg !6639

if.else61:                                        ; preds = %if.else55
  %71 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6640
  %device62 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %71, i32 0, i32 0, !dbg !6640
  %72 = load %struct.dma_device*, %struct.dma_device** %device62, align 8, !dbg !6640
  %dev63 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %72, i32 0, i32 15, !dbg !6640
  %73 = load %struct.device*, %struct.device** %dev63, align 8, !dbg !6640
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %73, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.omap_dma_prep_dma_interleaved, i64 0, i64 0)) #12, !dbg !6640
  %74 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6642
  %75 = bitcast %struct.omap_desc* %74 to i8*, !dbg !6642
  call void @kfree(i8* %75) #11, !dbg !6643
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6644
  br label %return, !dbg !6644

if.end64:                                         ; preds = %if.then57
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then48
  %76 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6645
  %cicr = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %76, i32 0, i32 10, !dbg !6646
  store i16 10, i16* %cicr, align 2, !dbg !6647
  %77 = load i8, i8* %data_type, align 1, !dbg !6648
  %conv66 = zext i8 %77 to i32, !dbg !6648
  %78 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6649
  %csdp = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %78, i32 0, i32 11, !dbg !6650
  store i32 %conv66, i32* %csdp, align 4, !dbg !6651
  %79 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6652
  %cicr67 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %79, i32 0, i32 10, !dbg !6655
  %80 = load i16, i16* %cicr67, align 2, !dbg !6656
  %conv68 = zext i16 %80 to i32, !dbg !6656
  %or69 = or i32 %conv68, 1, !dbg !6656
  %conv70 = trunc i32 %or69 to i16, !dbg !6656
  store i16 %conv70, i16* %cicr67, align 2, !dbg !6656
  %81 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6657
  %csdp71 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %81, i32 0, i32 11, !dbg !6658
  %82 = load i32, i32* %csdp71, align 4, !dbg !6659
  store i32 %82, i32* %csdp71, align 4, !dbg !6659
  %83 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6660
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %83, i32 0, i32 0, !dbg !6661
  %84 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !6662
  %vd = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %84, i32 0, i32 0, !dbg !6663
  %85 = load i64, i64* %flags.addr, align 8, !dbg !6664
  %call72 = call %struct.dma_async_tx_descriptor* @vchan_tx_prep(%struct.virt_dma_chan* %vc, %struct.virt_dma_desc* %vd, i64 %85) #11, !dbg !6665
  store %struct.dma_async_tx_descriptor* %call72, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6666
  br label %return, !dbg !6666

return:                                           ; preds = %if.end65, %if.else61, %if.else44, %if.then6, %if.then3, %if.then
  %86 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !6667
  ret %struct.dma_async_tx_descriptor* %86, !dbg !6667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_slave_config(%struct.dma_chan* %chan, %struct.dma_slave_config* %cfg) #0 !dbg !6668 {
entry:
  %retval = alloca i32, align 4
  %chan.addr = alloca %struct.dma_chan*, align 8
  %cfg.addr = alloca %struct.dma_slave_config*, align 8
  %c = alloca %struct.omap_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !6669, metadata !DIExpression()), !dbg !6670
  store %struct.dma_slave_config* %cfg, %struct.dma_slave_config** %cfg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_slave_config** %cfg.addr, metadata !6671, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !6673, metadata !DIExpression()), !dbg !6674
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6675
  %call = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %0) #11, !dbg !6676
  store %struct.omap_chan* %call, %struct.omap_chan** %c, align 8, !dbg !6674
  %1 = load %struct.dma_slave_config*, %struct.dma_slave_config** %cfg.addr, align 8, !dbg !6677
  %src_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %1, i32 0, i32 3, !dbg !6679
  %2 = load i32, i32* %src_addr_width, align 8, !dbg !6679
  %cmp = icmp eq i32 %2, 8, !dbg !6680
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6681

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.dma_slave_config*, %struct.dma_slave_config** %cfg.addr, align 8, !dbg !6682
  %dst_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %3, i32 0, i32 4, !dbg !6683
  %4 = load i32, i32* %dst_addr_width, align 4, !dbg !6683
  %cmp1 = icmp eq i32 %4, 8, !dbg !6684
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6685

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !6686
  br label %return, !dbg !6686

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.dma_slave_config*, %struct.dma_slave_config** %cfg.addr, align 8, !dbg !6687
  %src_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %5, i32 0, i32 5, !dbg !6689
  %6 = load i32, i32* %src_maxburst, align 8, !dbg !6689
  %7 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6690
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %7, i32 0, i32 0, !dbg !6691
  %8 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !6691
  %max_burst = getelementptr inbounds %struct.dma_device, %struct.dma_device* %8, i32 0, i32 23, !dbg !6692
  %9 = load i32, i32* %max_burst, align 8, !dbg !6692
  %cmp2 = icmp ugt i32 %6, %9, !dbg !6693
  br i1 %cmp2, label %if.then7, label %lor.lhs.false3, !dbg !6694

lor.lhs.false3:                                   ; preds = %if.end
  %10 = load %struct.dma_slave_config*, %struct.dma_slave_config** %cfg.addr, align 8, !dbg !6695
  %dst_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %10, i32 0, i32 6, !dbg !6696
  %11 = load i32, i32* %dst_maxburst, align 4, !dbg !6696
  %12 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6697
  %device4 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %12, i32 0, i32 0, !dbg !6698
  %13 = load %struct.dma_device*, %struct.dma_device** %device4, align 8, !dbg !6698
  %max_burst5 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %13, i32 0, i32 23, !dbg !6699
  %14 = load i32, i32* %max_burst5, align 8, !dbg !6699
  %cmp6 = icmp ugt i32 %11, %14, !dbg !6700
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !6701

if.then7:                                         ; preds = %lor.lhs.false3, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !6702
  br label %return, !dbg !6702

if.end8:                                          ; preds = %lor.lhs.false3
  %15 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6703
  %cfg9 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %15, i32 0, i32 4, !dbg !6704
  %16 = bitcast %struct.dma_slave_config* %cfg9 to i8*, !dbg !6705
  %17 = load %struct.dma_slave_config*, %struct.dma_slave_config** %cfg.addr, align 8, !dbg !6706
  %18 = bitcast %struct.dma_slave_config* %17 to i8*, !dbg !6705
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %18, i64 56, i1 false), !dbg !6705
  store i32 0, i32* %retval, align 4, !dbg !6707
  br label %return, !dbg !6707

return:                                           ; preds = %if.end8, %if.then7, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !6708
  ret i32 %19, !dbg !6708
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_pause(%struct.dma_chan* %chan) #0 !dbg !6709 {
entry:
  %lock.addr.i40 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i40, metadata !5490, metadata !DIExpression()), !dbg !6710
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5496, metadata !DIExpression()), !dbg !6712
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !6713
  %chan.addr = alloca %struct.dma_chan*, align 8
  %c = alloca %struct.omap_chan*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %can_pause = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !6720, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !6722, metadata !DIExpression()), !dbg !6723
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6724
  %call = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %0) #11, !dbg !6725
  store %struct.omap_chan* %call, %struct.omap_chan** %c, align 8, !dbg !6723
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !6726, metadata !DIExpression()), !dbg !6727
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6728
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %1, i32 0, i32 0, !dbg !6729
  %2 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !6729
  %call1 = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %2) #11, !dbg !6730
  store %struct.omap_dmadev* %call1, %struct.omap_dmadev** %od, align 8, !dbg !6727
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6731, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6733, metadata !DIExpression()), !dbg !6734
  store i32 -22, i32* %ret, align 4, !dbg !6734
  call void @llvm.dbg.declare(metadata i8* %can_pause, metadata !6735, metadata !DIExpression()), !dbg !6736
  store i8 0, i8* %can_pause, align 1, !dbg !6736
  br label %do.body, !dbg !6737

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !6738

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6739, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6742, metadata !DIExpression()), !dbg !6741
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6741
  %conv = zext i1 %cmp to i32, !dbg !6741
  store i32 1, i32* %tmp, align 4, !dbg !6741
  %3 = load i32, i32* %tmp, align 4, !dbg !6741
  br label %do.body3, !dbg !6743

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6744

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !6745

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !6747, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !6751, metadata !DIExpression()), !dbg !6750
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !6750
  %conv9 = zext i1 %cmp8 to i32, !dbg !6750
  store i32 1, i32* %tmp10, align 4, !dbg !6750
  %4 = load i32, i32* %tmp10, align 4, !dbg !6750
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !6752
  store i64 %call11, i64* %flags, align 8, !dbg !6752
  br label %do.end, !dbg !6752

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !6745

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !6744

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6753, !srcloc !6754
  br label %do.body14, !dbg !6753

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !6755
  %irq_lock = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %5, i32 0, i32 15, !dbg !6755
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6756
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !6757
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !6757
  br label %do.end16, !dbg !6755

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !6753

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6744

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6743

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6738

do.end20:                                         ; preds = %do.end19
  %8 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6758
  %desc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %8, i32 0, i32 10, !dbg !6760
  %9 = load %struct.omap_desc*, %struct.omap_desc** %desc, align 8, !dbg !6760
  %tobool = icmp ne %struct.omap_desc* %9, null, !dbg !6758
  br i1 %tobool, label %if.end, label %if.then, !dbg !6761

if.then:                                          ; preds = %do.end20
  br label %out, !dbg !6762

if.end:                                           ; preds = %do.end20
  %10 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6763
  %cyclic = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %10, i32 0, i32 6, !dbg !6765
  %11 = load i8, i8* %cyclic, align 4, !dbg !6765
  %tobool21 = trunc i8 %11 to i1, !dbg !6765
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !6766

if.then22:                                        ; preds = %if.end
  store i8 1, i8* %can_pause, align 1, !dbg !6767
  br label %if.end28, !dbg !6768

if.else:                                          ; preds = %if.end
  %12 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6769
  %desc23 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %12, i32 0, i32 10, !dbg !6771
  %13 = load %struct.omap_desc*, %struct.omap_desc** %desc23, align 8, !dbg !6771
  %dir = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %13, i32 0, i32 2, !dbg !6772
  %14 = load i32, i32* %dir, align 4, !dbg !6772
  %cmp24 = icmp eq i32 %14, 2, !dbg !6773
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !6774

if.then26:                                        ; preds = %if.else
  store i8 1, i8* %can_pause, align 1, !dbg !6775
  br label %if.end27, !dbg !6776

if.end27:                                         ; preds = %if.then26, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then22
  %15 = load i8, i8* %can_pause, align 1, !dbg !6777
  %tobool29 = trunc i8 %15 to i1, !dbg !6777
  br i1 %tobool29, label %land.lhs.true, label %if.end38, !dbg !6779

land.lhs.true:                                    ; preds = %if.end28
  %16 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6780
  %paused = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %16, i32 0, i32 7, !dbg !6781
  %17 = load i8, i8* %paused, align 1, !dbg !6781
  %tobool31 = trunc i8 %17 to i1, !dbg !6781
  br i1 %tobool31, label %if.end38, label %if.then32, !dbg !6782

if.then32:                                        ; preds = %land.lhs.true
  %18 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6783
  %call33 = call i32 @omap_dma_stop(%struct.omap_chan* %18) #11, !dbg !6785
  store i32 %call33, i32* %ret, align 4, !dbg !6786
  %19 = load i32, i32* %ret, align 4, !dbg !6787
  %tobool34 = icmp ne i32 %19, 0, !dbg !6787
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !6789

if.then35:                                        ; preds = %if.then32
  %20 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6790
  %paused36 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %20, i32 0, i32 7, !dbg !6791
  store i8 1, i8* %paused36, align 1, !dbg !6792
  br label %if.end37, !dbg !6790

if.end37:                                         ; preds = %if.then35, %if.then32
  br label %if.end38, !dbg !6793

if.end38:                                         ; preds = %if.end37, %land.lhs.true, %if.end28
  br label %out, !dbg !6781

out:                                              ; preds = %if.end38, %if.then
  call void @llvm.dbg.label(metadata !6794), !dbg !6795
  %21 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !6796
  %irq_lock39 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %21, i32 0, i32 15, !dbg !6797
  %22 = load i64, i64* %flags, align 8, !dbg !6798
  store %struct.spinlock* %irq_lock39, %struct.spinlock** %lock.addr.i40, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !437, metadata !5672, metadata !DIExpression()) #8, !dbg !6799
  call void @llvm.dbg.declare(metadata !437, metadata !5676, metadata !DIExpression()) #8, !dbg !6799
  store i32 1, i32* %tmp.i, align 4, !dbg !6799
  %23 = load i32, i32* %tmp.i, align 4, !dbg !6799
  call void @llvm.dbg.declare(metadata !437, metadata !5677, metadata !DIExpression()) #8, !dbg !6800
  call void @llvm.dbg.declare(metadata !437, metadata !5683, metadata !DIExpression()) #8, !dbg !6800
  store i32 1, i32* %tmp8.i, align 4, !dbg !6800
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !6800
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !6801
  call void @arch_local_irq_restore(i64 %25) #13, !dbg !6801
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6802, !srcloc !5687
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i40, align 8, !dbg !6803
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !6803
  %rlock.i41 = bitcast %union.anon.3* %27 to %struct.raw_spinlock*, !dbg !6803
  %28 = load i32, i32* %ret, align 4, !dbg !6804
  ret i32 %28, !dbg !6805
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_resume(%struct.dma_chan* %chan) #0 !dbg !6806 {
entry:
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !5490, metadata !DIExpression()), !dbg !6807
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5496, metadata !DIExpression()), !dbg !6809
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !6810
  %chan.addr = alloca %struct.dma_chan*, align 8
  %c = alloca %struct.omap_chan*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !6817, metadata !DIExpression()), !dbg !6818
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !6819, metadata !DIExpression()), !dbg !6820
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6821
  %call = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %0) #11, !dbg !6822
  store %struct.omap_chan* %call, %struct.omap_chan** %c, align 8, !dbg !6820
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !6823, metadata !DIExpression()), !dbg !6824
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6825
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %1, i32 0, i32 0, !dbg !6826
  %2 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !6826
  %call1 = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %2) #11, !dbg !6827
  store %struct.omap_dmadev* %call1, %struct.omap_dmadev** %od, align 8, !dbg !6824
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6828, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6830, metadata !DIExpression()), !dbg !6831
  store i32 -22, i32* %ret, align 4, !dbg !6831
  br label %do.body, !dbg !6832

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !6833

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6834, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6837, metadata !DIExpression()), !dbg !6836
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6836
  %conv = zext i1 %cmp to i32, !dbg !6836
  store i32 1, i32* %tmp, align 4, !dbg !6836
  %3 = load i32, i32* %tmp, align 4, !dbg !6836
  br label %do.body3, !dbg !6838

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6839

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !6840

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !6842, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !6846, metadata !DIExpression()), !dbg !6845
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !6845
  %conv9 = zext i1 %cmp8 to i32, !dbg !6845
  store i32 1, i32* %tmp10, align 4, !dbg !6845
  %4 = load i32, i32* %tmp10, align 4, !dbg !6845
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !6847
  store i64 %call11, i64* %flags, align 8, !dbg !6847
  br label %do.end, !dbg !6847

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !6840

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !6839

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6848, !srcloc !6849
  br label %do.body14, !dbg !6848

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !6850
  %irq_lock = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %5, i32 0, i32 15, !dbg !6850
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6851
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !6852
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !6852
  br label %do.end16, !dbg !6850

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !6848

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6839

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6838

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6833

do.end20:                                         ; preds = %do.end19
  %8 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6853
  %paused = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %8, i32 0, i32 7, !dbg !6855
  %9 = load i8, i8* %paused, align 1, !dbg !6855
  %tobool = trunc i8 %9 to i1, !dbg !6855
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6856

land.lhs.true:                                    ; preds = %do.end20
  %10 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6857
  %desc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %10, i32 0, i32 10, !dbg !6858
  %11 = load %struct.omap_desc*, %struct.omap_desc** %desc, align 8, !dbg !6858
  %tobool22 = icmp ne %struct.omap_desc* %11, null, !dbg !6857
  br i1 %tobool22, label %if.then, label %if.end, !dbg !6859

if.then:                                          ; preds = %land.lhs.true
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6860, !srcloc !6862
  %12 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6863
  %13 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6864
  %desc23 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %13, i32 0, i32 10, !dbg !6865
  %14 = load %struct.omap_desc*, %struct.omap_desc** %desc23, align 8, !dbg !6865
  %clnk_ctrl = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %14, i32 0, i32 9, !dbg !6866
  %15 = load i16, i16* %clnk_ctrl, align 8, !dbg !6866
  %conv24 = zext i16 %15 to i32, !dbg !6864
  call void @omap_dma_chan_write(%struct.omap_chan* %12, i32 44, i32 %conv24) #11, !dbg !6867
  %16 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6868
  %17 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6869
  %desc25 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %17, i32 0, i32 10, !dbg !6870
  %18 = load %struct.omap_desc*, %struct.omap_desc** %desc25, align 8, !dbg !6870
  call void @omap_dma_start(%struct.omap_chan* %16, %struct.omap_desc* %18) #11, !dbg !6871
  %19 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6872
  %paused26 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %19, i32 0, i32 7, !dbg !6873
  store i8 0, i8* %paused26, align 1, !dbg !6874
  store i32 0, i32* %ret, align 4, !dbg !6875
  br label %if.end, !dbg !6876

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end20
  %20 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !6877
  %irq_lock27 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %20, i32 0, i32 15, !dbg !6878
  %21 = load i64, i64* %flags, align 8, !dbg !6879
  store %struct.spinlock* %irq_lock27, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !437, metadata !5672, metadata !DIExpression()) #8, !dbg !6880
  call void @llvm.dbg.declare(metadata !437, metadata !5676, metadata !DIExpression()) #8, !dbg !6880
  store i32 1, i32* %tmp.i, align 4, !dbg !6880
  %22 = load i32, i32* %tmp.i, align 4, !dbg !6880
  call void @llvm.dbg.declare(metadata !437, metadata !5677, metadata !DIExpression()) #8, !dbg !6881
  call void @llvm.dbg.declare(metadata !437, metadata !5683, metadata !DIExpression()) #8, !dbg !6881
  store i32 1, i32* %tmp8.i, align 4, !dbg !6881
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !6881
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !6882
  call void @arch_local_irq_restore(i64 %24) #13, !dbg !6882
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6883, !srcloc !5687
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !6884
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !6884
  %rlock.i29 = bitcast %union.anon.3* %26 to %struct.raw_spinlock*, !dbg !6884
  %27 = load i32, i32* %ret, align 4, !dbg !6885
  ret i32 %27, !dbg !6886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_terminate_all(%struct.dma_chan* %chan) #0 !dbg !6887 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !5490, metadata !DIExpression()), !dbg !6888
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5496, metadata !DIExpression()), !dbg !6890
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !6891
  %chan.addr = alloca %struct.dma_chan*, align 8
  %c = alloca %struct.omap_chan*, align 8
  %flags = alloca i64, align 8
  %head = alloca %struct.list_head, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !6898, metadata !DIExpression()), !dbg !6899
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !6900, metadata !DIExpression()), !dbg !6901
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6902
  %call = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %0) #11, !dbg !6903
  store %struct.omap_chan* %call, %struct.omap_chan** %c, align 8, !dbg !6901
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6904, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.declare(metadata %struct.list_head* %head, metadata !6906, metadata !DIExpression()), !dbg !6907
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0, !dbg !6907
  store %struct.list_head* %head, %struct.list_head** %next, align 8, !dbg !6907
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1, !dbg !6907
  store %struct.list_head* %head, %struct.list_head** %prev, align 8, !dbg !6907
  br label %do.body, !dbg !6908

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6909

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6910, metadata !DIExpression()), !dbg !6912
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6913, metadata !DIExpression()), !dbg !6912
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6912
  %conv = zext i1 %cmp to i32, !dbg !6912
  store i32 1, i32* %tmp, align 4, !dbg !6912
  %1 = load i32, i32* %tmp, align 4, !dbg !6912
  br label %do.body2, !dbg !6914

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6915

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6916

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6918, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6922, metadata !DIExpression()), !dbg !6921
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6921
  %conv8 = zext i1 %cmp7 to i32, !dbg !6921
  store i32 1, i32* %tmp9, align 4, !dbg !6921
  %2 = load i32, i32* %tmp9, align 4, !dbg !6921
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !6923
  store i64 %call10, i64* %flags, align 8, !dbg !6923
  br label %do.end, !dbg !6923

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !6916

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !6915

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6924, !srcloc !6925
  br label %do.body13, !dbg !6924

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6926
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %3, i32 0, i32 0, !dbg !6926
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 3, !dbg !6926
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6927
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !6928
  %rlock.i = bitcast %union.anon.3* %5 to %struct.raw_spinlock*, !dbg !6928
  br label %do.end15, !dbg !6926

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !6924

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6915

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6914

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6909

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6929
  %desc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %6, i32 0, i32 10, !dbg !6931
  %7 = load %struct.omap_desc*, %struct.omap_desc** %desc, align 8, !dbg !6931
  %tobool = icmp ne %struct.omap_desc* %7, null, !dbg !6929
  br i1 %tobool, label %if.then, label %if.end25, !dbg !6932

if.then:                                          ; preds = %do.end19
  %8 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6933
  %desc20 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %8, i32 0, i32 10, !dbg !6935
  %9 = load %struct.omap_desc*, %struct.omap_desc** %desc20, align 8, !dbg !6935
  %vd = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %9, i32 0, i32 0, !dbg !6936
  call void @vchan_terminate_vdesc(%struct.virt_dma_desc* %vd) #11, !dbg !6937
  %10 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6938
  %desc21 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %10, i32 0, i32 10, !dbg !6939
  store %struct.omap_desc* null, %struct.omap_desc** %desc21, align 8, !dbg !6940
  %11 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6941
  %paused = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %11, i32 0, i32 7, !dbg !6943
  %12 = load i8, i8* %paused, align 1, !dbg !6943
  %tobool22 = trunc i8 %12 to i1, !dbg !6943
  br i1 %tobool22, label %if.end, label %if.then23, !dbg !6944

if.then23:                                        ; preds = %if.then
  %13 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6945
  %call24 = call i32 @omap_dma_stop(%struct.omap_chan* %13) #11, !dbg !6946
  br label %if.end, !dbg !6946

if.end:                                           ; preds = %if.then23, %if.then
  br label %if.end25, !dbg !6947

if.end25:                                         ; preds = %if.end, %do.end19
  %14 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6948
  %cyclic = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %14, i32 0, i32 6, !dbg !6949
  store i8 0, i8* %cyclic, align 4, !dbg !6950
  %15 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6951
  %paused26 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %15, i32 0, i32 7, !dbg !6952
  store i8 0, i8* %paused26, align 1, !dbg !6953
  %16 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6954
  %vc27 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %16, i32 0, i32 0, !dbg !6955
  call void @vchan_get_all_descriptors(%struct.virt_dma_chan* %vc27, %struct.list_head* %head) #11, !dbg !6956
  %17 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6957
  %vc28 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %17, i32 0, i32 0, !dbg !6958
  %lock29 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc28, i32 0, i32 3, !dbg !6959
  %18 = load i64, i64* %flags, align 8, !dbg !6960
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !437, metadata !5672, metadata !DIExpression()) #8, !dbg !6961
  call void @llvm.dbg.declare(metadata !437, metadata !5676, metadata !DIExpression()) #8, !dbg !6961
  store i32 1, i32* %tmp.i, align 4, !dbg !6961
  %19 = load i32, i32* %tmp.i, align 4, !dbg !6961
  call void @llvm.dbg.declare(metadata !437, metadata !5677, metadata !DIExpression()) #8, !dbg !6962
  call void @llvm.dbg.declare(metadata !437, metadata !5683, metadata !DIExpression()) #8, !dbg !6962
  store i32 1, i32* %tmp8.i, align 4, !dbg !6962
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !6962
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !6963
  call void @arch_local_irq_restore(i64 %21) #13, !dbg !6963
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6964, !srcloc !5687
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !6965
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !6965
  %rlock.i32 = bitcast %union.anon.3* %23 to %struct.raw_spinlock*, !dbg !6965
  %24 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6966
  %vc30 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %24, i32 0, i32 0, !dbg !6967
  call void @vchan_dma_desc_free_list(%struct.virt_dma_chan* %vc30, %struct.list_head* %head) #11, !dbg !6968
  ret i32 0, !dbg !6969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_synchronize(%struct.dma_chan* %chan) #0 !dbg !6970 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %c = alloca %struct.omap_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !6971, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !6973, metadata !DIExpression()), !dbg !6974
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !6975
  %call = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %0) #11, !dbg !6976
  store %struct.omap_chan* %call, %struct.omap_chan** %c, align 8, !dbg !6974
  %1 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !6977
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %1, i32 0, i32 0, !dbg !6978
  call void @vchan_synchronize(%struct.virt_dma_chan* %vc) #11, !dbg !6979
  ret void, !dbg !6980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !6981 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !6985, metadata !DIExpression()), !dbg !6986
  br label %do.body, !dbg !6987

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6988

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !6990

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !6988

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6992
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6992
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6992
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !6992
  br label %do.end3, !dbg !6992

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !6988

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6994
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6995
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !6996
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !6997
  ret void, !dbg !6998
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32(%struct.device_node* %np, i8* %propname, i32* %out_value) #0 !dbg !6999 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_value.addr = alloca i32*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7004, metadata !DIExpression()), !dbg !7005
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !7006, metadata !DIExpression()), !dbg !7007
  store i32* %out_value, i32** %out_value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_value.addr, metadata !7008, metadata !DIExpression()), !dbg !7009
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7010
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !7011
  %2 = load i32*, i32** %out_value.addr, align 8, !dbg !7012
  %call = call i32 @of_property_read_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 1) #11, !dbg !7013
  ret i32 %call, !dbg !7014
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @bitmap_from_arr32(i64*, i32*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kcalloc(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !7015 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7018, metadata !DIExpression()), !dbg !7019
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7020, metadata !DIExpression()), !dbg !7021
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7022, metadata !DIExpression()), !dbg !7023
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7024, metadata !DIExpression()), !dbg !7025
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7026
  %1 = load i64, i64* %n.addr, align 8, !dbg !7027
  %2 = load i64, i64* %size.addr, align 8, !dbg !7028
  %3 = load i32, i32* %flags.addr, align 4, !dbg !7029
  %or = or i32 %3, 256, !dbg !7030
  %call = call i8* @devm_kmalloc_array(%struct.device* %0, i64 %1, i64 %2, i32 %or) #11, !dbg !7031
  ret i8* %call, !dbg !7032
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_chan_init(%struct.omap_dmadev* %od) #0 !dbg !7033 {
entry:
  %retval = alloca i32, align 4
  %od.addr = alloca %struct.omap_dmadev*, align 8
  %c = alloca %struct.omap_chan*, align 8
  store %struct.omap_dmadev* %od, %struct.omap_dmadev** %od.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od.addr, metadata !7036, metadata !DIExpression()), !dbg !7037
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !7038, metadata !DIExpression()), !dbg !7039
  %call = call i8* @kzalloc(i64 352, i32 3264) #11, !dbg !7040
  %0 = bitcast i8* %call to %struct.omap_chan*, !dbg !7040
  store %struct.omap_chan* %0, %struct.omap_chan** %c, align 8, !dbg !7041
  %1 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7042
  %tobool = icmp ne %struct.omap_chan* %1, null, !dbg !7042
  br i1 %tobool, label %if.end, label %if.then, !dbg !7044

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7045
  br label %return, !dbg !7045

if.end:                                           ; preds = %entry
  %2 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7046
  %reg_map = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %2, i32 0, i32 3, !dbg !7047
  %3 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %reg_map, align 8, !dbg !7047
  %4 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7048
  %reg_map1 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %4, i32 0, i32 2, !dbg !7049
  store %struct.omap_dma_reg* %3, %struct.omap_dma_reg** %reg_map1, align 8, !dbg !7050
  %5 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7051
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %5, i32 0, i32 0, !dbg !7052
  %desc_free = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 2, !dbg !7053
  store void (%struct.virt_dma_desc*)* @omap_dma_desc_free, void (%struct.virt_dma_desc*)** %desc_free, align 8, !dbg !7054
  %6 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7055
  %vc2 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %6, i32 0, i32 0, !dbg !7056
  %7 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7057
  %ddev = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %7, i32 0, i32 0, !dbg !7058
  call void @vchan_init(%struct.virt_dma_chan* %vc2, %struct.dma_device* %ddev) #11, !dbg !7059
  store i32 0, i32* %retval, align 4, !dbg !7060
  br label %return, !dbg !7060

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7061
  ret i32 %8, !dbg !7061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_free(%struct.omap_dmadev* %od) #0 !dbg !7062 {
entry:
  %od.addr = alloca %struct.omap_dmadev*, align 8
  %c = alloca %struct.omap_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.omap_chan*, align 8
  store %struct.omap_dmadev* %od, %struct.omap_dmadev** %od.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od.addr, metadata !7065, metadata !DIExpression()), !dbg !7066
  br label %while.cond, !dbg !7067

while.cond:                                       ; preds = %do.end, %entry
  %0 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7068
  %ddev = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %0, i32 0, i32 0, !dbg !7069
  %channels = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev, i32 0, i32 3, !dbg !7070
  %call = call i32 @list_empty(%struct.list_head* %channels) #11, !dbg !7071
  %tobool = icmp ne i32 %call, 0, !dbg !7072
  %lnot = xor i1 %tobool, true, !dbg !7072
  br i1 %lnot, label %while.body, label %while.end, !dbg !7067

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !7073, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7076, metadata !DIExpression()), !dbg !7078
  %1 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7078
  %ddev1 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %1, i32 0, i32 0, !dbg !7078
  %channels2 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev1, i32 0, i32 3, !dbg !7078
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %channels2, i32 0, i32 0, !dbg !7078
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7078
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !7078
  store i8* %3, i8** %__mptr, align 8, !dbg !7078
  br label %do.body, !dbg !7078

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !7079

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !7078
  %add.ptr = getelementptr i8, i8* %4, i64 -48, !dbg !7078
  %5 = bitcast i8* %add.ptr to %struct.omap_chan*, !dbg !7078
  store %struct.omap_chan* %5, %struct.omap_chan** %tmp, align 8, !dbg !7079
  %6 = load %struct.omap_chan*, %struct.omap_chan** %tmp, align 8, !dbg !7078
  store %struct.omap_chan* %6, %struct.omap_chan** %c, align 8, !dbg !7075
  %7 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7081
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %7, i32 0, i32 0, !dbg !7082
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 0, !dbg !7083
  %device_node = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan, i32 0, i32 7, !dbg !7084
  call void @list_del(%struct.list_head* %device_node) #11, !dbg !7085
  %8 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7086
  %vc3 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %8, i32 0, i32 0, !dbg !7087
  %task = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc3, i32 0, i32 1, !dbg !7088
  call void @tasklet_kill(%struct.tasklet_struct* %task) #11, !dbg !7089
  %9 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7090
  %10 = bitcast %struct.omap_chan* %9 to i8*, !dbg !7090
  call void @kfree(i8* %10) #11, !dbg !7091
  br label %while.cond, !dbg !7067, !llvm.loop !7092

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7094
}

; Function Attrs: noredzone
declare dso_local i32 @platform_get_irq(%struct.platform_device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_glbl_write(%struct.omap_dmadev* %od, i32 %reg, i32 %val) #0 !dbg !7095 {
entry:
  %od.addr = alloca %struct.omap_dmadev*, align 8
  %reg.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %r = alloca %struct.omap_dma_reg*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.omap_dmadev* %od, %struct.omap_dmadev** %od.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od.addr, metadata !7098, metadata !DIExpression()), !dbg !7099
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !7100, metadata !DIExpression()), !dbg !7101
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7102, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.declare(metadata %struct.omap_dma_reg** %r, metadata !7104, metadata !DIExpression()), !dbg !7105
  %0 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7106
  %reg_map = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %0, i32 0, i32 3, !dbg !7107
  %1 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %reg_map, align 8, !dbg !7107
  %2 = load i32, i32* %reg.addr, align 4, !dbg !7108
  %idx.ext = zext i32 %2 to i64, !dbg !7109
  %add.ptr = getelementptr %struct.omap_dma_reg, %struct.omap_dma_reg* %1, i64 %idx.ext, !dbg !7109
  store %struct.omap_dma_reg* %add.ptr, %struct.omap_dma_reg** %r, align 8, !dbg !7105
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7110, metadata !DIExpression()), !dbg !7112
  %3 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %r, align 8, !dbg !7112
  %stride = getelementptr inbounds %struct.omap_dma_reg, %struct.omap_dma_reg* %3, i32 0, i32 1, !dbg !7112
  %4 = load i8, i8* %stride, align 2, !dbg !7112
  %tobool = icmp ne i8 %4, 0, !dbg !7112
  %lnot = xor i1 %tobool, true, !dbg !7112
  %lnot1 = xor i1 %lnot, true, !dbg !7112
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7112
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7112
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !7113
  %tobool2 = icmp ne i32 %5, 0, !dbg !7113
  %lnot3 = xor i1 %tobool2, true, !dbg !7113
  %lnot5 = xor i1 %lnot3, true, !dbg !7113
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !7113
  %conv = sext i32 %lnot.ext6 to i64, !dbg !7113
  %tobool7 = icmp ne i64 %conv, 0, !dbg !7113
  br i1 %tobool7, label %if.then, label %if.end, !dbg !7112

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7113

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !7115

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !7117

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !7115

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i32 355, i32 2305, i64 12) #8, !dbg !7119, !srcloc !7121
  br label %do.end10, !dbg !7119

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 246) #8, !dbg !7122, !srcloc !7124
  br label %do.body11, !dbg !7115

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !7125

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !7115

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !7115

if.end:                                           ; preds = %do.end13, %entry
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !7112
  %tobool14 = icmp ne i32 %6, 0, !dbg !7112
  %lnot15 = xor i1 %tobool14, true, !dbg !7112
  %lnot17 = xor i1 %lnot15, true, !dbg !7112
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !7112
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !7112
  store i64 %conv19, i64* %tmp, align 8, !dbg !7113
  %7 = load i64, i64* %tmp, align 8, !dbg !7112
  %8 = load i32, i32* %val.addr, align 4, !dbg !7127
  %9 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %r, align 8, !dbg !7128
  %type = getelementptr inbounds %struct.omap_dma_reg, %struct.omap_dma_reg* %9, i32 0, i32 2, !dbg !7129
  %10 = load i8, i8* %type, align 1, !dbg !7129
  %conv20 = zext i8 %10 to i32, !dbg !7128
  %11 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7130
  %base = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %11, i32 0, i32 2, !dbg !7131
  %12 = load i8*, i8** %base, align 8, !dbg !7131
  %13 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %r, align 8, !dbg !7132
  %offset = getelementptr inbounds %struct.omap_dma_reg, %struct.omap_dma_reg* %13, i32 0, i32 0, !dbg !7133
  %14 = load i16, i16* %offset, align 2, !dbg !7133
  %conv21 = zext i16 %14 to i32, !dbg !7132
  %idx.ext22 = sext i32 %conv21 to i64, !dbg !7134
  %add.ptr23 = getelementptr i8, i8* %12, i64 %idx.ext22, !dbg !7134
  call void @omap_dma_write(i32 %8, i32 %conv20, i8* %add.ptr23) #11, !dbg !7135
  ret void, !dbg !7136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_request_irq(%struct.device* %dev, i32 %irq, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id) #0 !dbg !7137 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7145, metadata !DIExpression()), !dbg !7146
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7147, metadata !DIExpression()), !dbg !7148
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !7149, metadata !DIExpression()), !dbg !7150
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !7151, metadata !DIExpression()), !dbg !7152
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !7153, metadata !DIExpression()), !dbg !7154
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !7155, metadata !DIExpression()), !dbg !7156
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7157
  %1 = load i32, i32* %irq.addr, align 4, !dbg !7158
  %2 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !7159
  %3 = load i64, i64* %irqflags.addr, align 8, !dbg !7160
  %4 = load i8*, i8** %devname.addr, align 8, !dbg !7161
  %5 = load i8*, i8** %dev_id.addr, align 8, !dbg !7162
  %call = call i32 @devm_request_threaded_irq(%struct.device* %0, i32 %1, i32 (i32, i8*)* %2, i32 (i32, i8*)* null, i64 %3, i8* %4, i8* %5) #11, !dbg !7163
  ret i32 %call, !dbg !7164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_irq(i32 %irq, i8* %devid) #0 !dbg !7165 {
entry:
  %lock.addr.i14 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i14, metadata !7166, metadata !DIExpression()), !dbg !7168
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7170, metadata !DIExpression()), !dbg !7172
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !7174, metadata !DIExpression()), !dbg !7175
  %lock.addr.i12 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i12, metadata !7166, metadata !DIExpression()), !dbg !7176
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7180, metadata !DIExpression()), !dbg !7182
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %devid.addr = alloca i8*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %status = alloca i32, align 4
  %channel = alloca i32, align 4
  %mask = alloca i32, align 4
  %csr = alloca i32, align 4
  %c = alloca %struct.omap_chan*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7184, metadata !DIExpression()), !dbg !7185
  store i8* %devid, i8** %devid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devid.addr, metadata !7186, metadata !DIExpression()), !dbg !7187
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !7188, metadata !DIExpression()), !dbg !7189
  %0 = load i8*, i8** %devid.addr, align 8, !dbg !7190
  %1 = bitcast i8* %0 to %struct.omap_dmadev*, !dbg !7190
  store %struct.omap_dmadev* %1, %struct.omap_dmadev** %od, align 8, !dbg !7189
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7191, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !7193, metadata !DIExpression()), !dbg !7194
  %2 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7195
  %irq_lock = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %2, i32 0, i32 15, !dbg !7196
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7197, !srcloc !7199
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7200
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !7200
  %rlock.i = bitcast %union.anon.3* %4 to %struct.raw_spinlock*, !dbg !7200
  %5 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7202
  %call = call i32 @omap_dma_glbl_read(%struct.omap_dmadev* %5, i32 20) #11, !dbg !7203
  store i32 %call, i32* %status, align 4, !dbg !7204
  %6 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7205
  %irq_enable_mask = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %6, i32 0, i32 16, !dbg !7206
  %7 = load i32, i32* %irq_enable_mask, align 4, !dbg !7206
  %8 = load i32, i32* %status, align 4, !dbg !7207
  %and = and i32 %8, %7, !dbg !7207
  store i32 %and, i32* %status, align 4, !dbg !7207
  %9 = load i32, i32* %status, align 4, !dbg !7208
  %cmp = icmp eq i32 %9, 0, !dbg !7209
  br i1 %cmp, label %if.then, label %if.end, !dbg !7210

if.then:                                          ; preds = %entry
  %10 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7211
  %irq_lock1 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %10, i32 0, i32 15, !dbg !7212
  store %struct.spinlock* %irq_lock1, %struct.spinlock** %lock.addr.i12, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7213, !srcloc !7215
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i12, align 8, !dbg !7216
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !7216
  %rlock.i13 = bitcast %union.anon.3* %12 to %struct.raw_spinlock*, !dbg !7216
  store i32 0, i32* %retval, align 4, !dbg !7218
  br label %return, !dbg !7218

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !7219

while.cond:                                       ; preds = %if.end8, %if.then7, %if.end
  %13 = load i32, i32* %status, align 4, !dbg !7220
  store i32 %13, i32* %x.addr.i, align 4
  %14 = load i32, i32* %x.addr.i, align 4, !dbg !7221
  %15 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %14, i32 -1) #7, !dbg !7222, !srcloc !7223
  store i32 %15, i32* %r.i, align 4, !dbg !7222
  %16 = load i32, i32* %r.i, align 4, !dbg !7224
  %add.i = add i32 %16, 1, !dbg !7225
  store i32 %add.i, i32* %channel, align 4, !dbg !7226
  %cmp3 = icmp ne i32 %add.i, 0, !dbg !7227
  br i1 %cmp3, label %while.body, label %while.end, !dbg !7219

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !7228, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.declare(metadata i32* %csr, metadata !7231, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !7233, metadata !DIExpression()), !dbg !7234
  %17 = load i32, i32* %channel, align 4, !dbg !7235
  %sub = sub i32 %17, 1, !dbg !7235
  store i32 %sub, i32* %channel, align 4, !dbg !7235
  %18 = load i32, i32* %channel, align 4, !dbg !7236
  %sh_prom = zext i32 %18 to i64, !dbg !7236
  %shl = shl i64 1, %sh_prom, !dbg !7236
  %conv = trunc i64 %shl to i32, !dbg !7236
  store i32 %conv, i32* %mask, align 4, !dbg !7237
  %19 = load i32, i32* %mask, align 4, !dbg !7238
  %neg = xor i32 %19, -1, !dbg !7239
  %20 = load i32, i32* %status, align 4, !dbg !7240
  %and4 = and i32 %20, %neg, !dbg !7240
  store i32 %and4, i32* %status, align 4, !dbg !7240
  %21 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7241
  %lch_map = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %21, i32 0, i32 17, !dbg !7242
  %22 = load %struct.omap_chan**, %struct.omap_chan*** %lch_map, align 8, !dbg !7242
  %23 = load i32, i32* %channel, align 4, !dbg !7243
  %idxprom = zext i32 %23 to i64, !dbg !7241
  %arrayidx = getelementptr %struct.omap_chan*, %struct.omap_chan** %22, i64 %idxprom, !dbg !7241
  %24 = load %struct.omap_chan*, %struct.omap_chan** %arrayidx, align 8, !dbg !7241
  store %struct.omap_chan* %24, %struct.omap_chan** %c, align 8, !dbg !7244
  %25 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7245
  %cmp5 = icmp eq %struct.omap_chan* %25, null, !dbg !7247
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !7248

if.then7:                                         ; preds = %while.body
  %26 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7249
  %ddev = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %26, i32 0, i32 0, !dbg !7249
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %ddev, i32 0, i32 15, !dbg !7249
  %27 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7249
  %28 = load i32, i32* %channel, align 4, !dbg !7249
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %27, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0), i32 %28) #12, !dbg !7249
  br label %while.cond, !dbg !7251, !llvm.loop !7252

if.end8:                                          ; preds = %while.body
  %29 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7254
  %call9 = call i32 @omap_dma_get_csr(%struct.omap_chan* %29) #11, !dbg !7255
  store i32 %call9, i32* %csr, align 4, !dbg !7256
  %30 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7257
  %31 = load i32, i32* %mask, align 4, !dbg !7258
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %30, i32 20, i32 %31) #11, !dbg !7259
  %32 = load i32, i32* %channel, align 4, !dbg !7260
  %33 = load i32, i32* %csr, align 4, !dbg !7261
  %conv10 = trunc i32 %33 to i16, !dbg !7261
  %34 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7262
  %35 = bitcast %struct.omap_chan* %34 to i8*, !dbg !7262
  call void @omap_dma_callback(i32 %32, i16 zeroext %conv10, i8* %35) #11, !dbg !7263
  br label %while.cond, !dbg !7219, !llvm.loop !7252

while.end:                                        ; preds = %while.cond
  %36 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7264
  %irq_lock11 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %36, i32 0, i32 15, !dbg !7265
  store %struct.spinlock* %irq_lock11, %struct.spinlock** %lock.addr.i14, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7266, !srcloc !7215
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i14, align 8, !dbg !7267
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !7267
  %rlock.i15 = bitcast %union.anon.3* %38 to %struct.raw_spinlock*, !dbg !7267
  store i32 1, i32* %retval, align 4, !dbg !7268
  br label %return, !dbg !7268

return:                                           ; preds = %while.end, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !7269
  ret i32 %39, !dbg !7269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_glbl_read(%struct.omap_dmadev* %od, i32 %reg) #0 !dbg !7270 {
entry:
  %od.addr = alloca %struct.omap_dmadev*, align 8
  %reg.addr = alloca i32, align 4
  %r = alloca %struct.omap_dma_reg*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.omap_dmadev* %od, %struct.omap_dmadev** %od.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od.addr, metadata !7273, metadata !DIExpression()), !dbg !7274
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !7275, metadata !DIExpression()), !dbg !7276
  call void @llvm.dbg.declare(metadata %struct.omap_dma_reg** %r, metadata !7277, metadata !DIExpression()), !dbg !7278
  %0 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7279
  %reg_map = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %0, i32 0, i32 3, !dbg !7280
  %1 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %reg_map, align 8, !dbg !7280
  %2 = load i32, i32* %reg.addr, align 4, !dbg !7281
  %idx.ext = zext i32 %2 to i64, !dbg !7282
  %add.ptr = getelementptr %struct.omap_dma_reg, %struct.omap_dma_reg* %1, i64 %idx.ext, !dbg !7282
  store %struct.omap_dma_reg* %add.ptr, %struct.omap_dma_reg** %r, align 8, !dbg !7278
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7283, metadata !DIExpression()), !dbg !7285
  %3 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %r, align 8, !dbg !7285
  %stride = getelementptr inbounds %struct.omap_dma_reg, %struct.omap_dma_reg* %3, i32 0, i32 1, !dbg !7285
  %4 = load i8, i8* %stride, align 2, !dbg !7285
  %tobool = icmp ne i8 %4, 0, !dbg !7285
  %lnot = xor i1 %tobool, true, !dbg !7285
  %lnot1 = xor i1 %lnot, true, !dbg !7285
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7285
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7285
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !7286
  %tobool2 = icmp ne i32 %5, 0, !dbg !7286
  %lnot3 = xor i1 %tobool2, true, !dbg !7286
  %lnot5 = xor i1 %lnot3, true, !dbg !7286
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !7286
  %conv = sext i32 %lnot.ext6 to i64, !dbg !7286
  %tobool7 = icmp ne i64 %conv, 0, !dbg !7286
  br i1 %tobool7, label %if.then, label %if.end, !dbg !7285

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7286

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !7288

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !7290

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !7288

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i32 364, i32 2305, i64 12) #8, !dbg !7292, !srcloc !7294
  br label %do.end10, !dbg !7292

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 247) #8, !dbg !7295, !srcloc !7297
  br label %do.body11, !dbg !7288

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !7298

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !7288

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !7288

if.end:                                           ; preds = %do.end13, %entry
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !7285
  %tobool14 = icmp ne i32 %6, 0, !dbg !7285
  %lnot15 = xor i1 %tobool14, true, !dbg !7285
  %lnot17 = xor i1 %lnot15, true, !dbg !7285
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !7285
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !7285
  store i64 %conv19, i64* %tmp, align 8, !dbg !7286
  %7 = load i64, i64* %tmp, align 8, !dbg !7285
  %8 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %r, align 8, !dbg !7300
  %type = getelementptr inbounds %struct.omap_dma_reg, %struct.omap_dma_reg* %8, i32 0, i32 2, !dbg !7301
  %9 = load i8, i8* %type, align 1, !dbg !7301
  %conv20 = zext i8 %9 to i32, !dbg !7300
  %10 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7302
  %base = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %10, i32 0, i32 2, !dbg !7303
  %11 = load i8*, i8** %base, align 8, !dbg !7303
  %12 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %r, align 8, !dbg !7304
  %offset = getelementptr inbounds %struct.omap_dma_reg, %struct.omap_dma_reg* %12, i32 0, i32 0, !dbg !7305
  %13 = load i16, i16* %offset, align 2, !dbg !7305
  %conv21 = zext i16 %13 to i32, !dbg !7304
  %idx.ext22 = sext i32 %conv21 to i64, !dbg !7306
  %add.ptr23 = getelementptr i8, i8* %11, i64 %idx.ext22, !dbg !7306
  %call = call i32 @omap_dma_read(i32 %conv20, i8* %add.ptr23) #11, !dbg !7307
  ret i32 %call, !dbg !7308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @omap_dma_filter_fn(%struct.dma_chan* %chan, i8* %param) #0 !dbg !7309 {
entry:
  %retval = alloca i1, align 1
  %chan.addr = alloca %struct.dma_chan*, align 8
  %param.addr = alloca i8*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %c = alloca %struct.omap_chan*, align 8
  %req = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !7310, metadata !DIExpression()), !dbg !7311
  store i8* %param, i8** %param.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %param.addr, metadata !7312, metadata !DIExpression()), !dbg !7313
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7314
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !7316
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !7316
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 15, !dbg !7317
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7317
  %driver = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 6, !dbg !7318
  %3 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !7318
  %cmp = icmp eq %struct.device_driver* %3, getelementptr inbounds (%struct.platform_driver, %struct.platform_driver* @omap_dma_driver, i32 0, i32 5), !dbg !7319
  br i1 %cmp, label %if.then, label %if.end5, !dbg !7320

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !7321, metadata !DIExpression()), !dbg !7323
  %4 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7324
  %device1 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %4, i32 0, i32 0, !dbg !7325
  %5 = load %struct.dma_device*, %struct.dma_device** %device1, align 8, !dbg !7325
  %call = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %5) #11, !dbg !7326
  store %struct.omap_dmadev* %call, %struct.omap_dmadev** %od, align 8, !dbg !7323
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !7327, metadata !DIExpression()), !dbg !7328
  %6 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !7329
  %call2 = call %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %6) #11, !dbg !7330
  store %struct.omap_chan* %call2, %struct.omap_chan** %c, align 8, !dbg !7328
  call void @llvm.dbg.declare(metadata i32* %req, metadata !7331, metadata !DIExpression()), !dbg !7332
  %7 = load i8*, i8** %param.addr, align 8, !dbg !7333
  %8 = bitcast i8* %7 to i32*, !dbg !7334
  %9 = load i32, i32* %8, align 4, !dbg !7335
  store i32 %9, i32* %req, align 4, !dbg !7332
  %10 = load i32, i32* %req, align 4, !dbg !7336
  %11 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7338
  %dma_requests = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %11, i32 0, i32 14, !dbg !7339
  %12 = load i32, i32* %dma_requests, align 8, !dbg !7339
  %cmp3 = icmp ule i32 %10, %12, !dbg !7340
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !7341

if.then4:                                         ; preds = %if.then
  %13 = load i32, i32* %req, align 4, !dbg !7342
  %14 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7344
  %dma_sig = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %14, i32 0, i32 5, !dbg !7345
  store i32 %13, i32* %dma_sig, align 8, !dbg !7346
  store i1 true, i1* %retval, align 1, !dbg !7347
  br label %return, !dbg !7347

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !7348

if.end5:                                          ; preds = %if.end, %entry
  store i1 false, i1* %retval, align 1, !dbg !7349
  br label %return, !dbg !7349

return:                                           ; preds = %if.end5, %if.then4
  %15 = load i1, i1* %retval, align 1, !dbg !7350
  ret i1 %15, !dbg !7350
}

; Function Attrs: noredzone
declare dso_local %struct.dma_pool* @dma_pool_create(i8*, %struct.device*, i64, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !7351 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7354, metadata !DIExpression()), !dbg !7355
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7356
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !7358
  %1 = load i8*, i8** %init_name, align 8, !dbg !7358
  %tobool = icmp ne i8* %1, null, !dbg !7356
  br i1 %tobool, label %if.then, label %if.end, !dbg !7359

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7360
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !7361
  %3 = load i8*, i8** %init_name1, align 8, !dbg !7361
  store i8* %3, i8** %retval, align 8, !dbg !7362
  br label %return, !dbg !7362

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7363
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !7364
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !7365
  store i8* %call, i8** %retval, align 8, !dbg !7366
  br label %return, !dbg !7366

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !7367
  ret i8* %5, !dbg !7367
}

; Function Attrs: noredzone
declare dso_local i32 @dma_async_device_register(%struct.dma_device*) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @platform_set_drvdata(%struct.platform_device* %pdev, i8* %data) #0 !dbg !7368 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !7371, metadata !DIExpression()), !dbg !7372
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7373, metadata !DIExpression()), !dbg !7374
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !7375
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !7376
  %1 = load i8*, i8** %data.addr, align 8, !dbg !7377
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !7378
  ret void, !dbg !7379
}

; Function Attrs: noredzone
declare dso_local i32 @of_dma_controller_register(%struct.device_node*, %struct.dma_chan* (%struct.of_phandle_args*, %struct.of_dma*)*, i8*) #2

; Function Attrs: noredzone
declare dso_local %struct.dma_chan* @of_dma_simple_xlate(%struct.of_phandle_args*, %struct.of_dma*) #2

; Function Attrs: noredzone
declare dso_local void @dma_async_device_unregister(%struct.dma_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_init_gcr(%struct.omap_dmadev* %od, i32 %arb_rate, i32 %max_fifo_depth, i32 %tparams) #0 !dbg !7380 {
entry:
  %od.addr = alloca %struct.omap_dmadev*, align 8
  %arb_rate.addr = alloca i32, align 4
  %max_fifo_depth.addr = alloca i32, align 4
  %tparams.addr = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.omap_dmadev* %od, %struct.omap_dmadev** %od.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od.addr, metadata !7383, metadata !DIExpression()), !dbg !7384
  store i32 %arb_rate, i32* %arb_rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arb_rate.addr, metadata !7385, metadata !DIExpression()), !dbg !7386
  store i32 %max_fifo_depth, i32* %max_fifo_depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_fifo_depth.addr, metadata !7387, metadata !DIExpression()), !dbg !7388
  store i32 %tparams, i32* %tparams.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tparams.addr, metadata !7389, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7391, metadata !DIExpression()), !dbg !7392
  %0 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7393
  %cfg = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %0, i32 0, i32 5, !dbg !7395
  %1 = load %struct.omap_dma_config*, %struct.omap_dma_config** %cfg, align 8, !dbg !7395
  %rw_priority = getelementptr inbounds %struct.omap_dma_config, %struct.omap_dma_config* %1, i32 0, i32 1, !dbg !7396
  %bf.load = load i8, i8* %rw_priority, align 4, !dbg !7396
  %bf.clear = and i8 %bf.load, 1, !dbg !7396
  %bf.cast = zext i8 %bf.clear to i32, !dbg !7396
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7393
  br i1 %tobool, label %if.end, label %if.then, !dbg !7397

if.then:                                          ; preds = %entry
  br label %return, !dbg !7398

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %max_fifo_depth.addr, align 4, !dbg !7399
  %cmp = icmp eq i32 %2, 0, !dbg !7401
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !7402

if.then1:                                         ; preds = %if.end
  store i32 1, i32* %max_fifo_depth.addr, align 4, !dbg !7403
  br label %if.end2, !dbg !7404

if.end2:                                          ; preds = %if.then1, %if.end
  %3 = load i32, i32* %arb_rate.addr, align 4, !dbg !7405
  %cmp3 = icmp eq i32 %3, 0, !dbg !7407
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7408

if.then4:                                         ; preds = %if.end2
  store i32 1, i32* %arb_rate.addr, align 4, !dbg !7409
  br label %if.end5, !dbg !7410

if.end5:                                          ; preds = %if.then4, %if.end2
  %4 = load i32, i32* %max_fifo_depth.addr, align 4, !dbg !7411
  %and = and i32 255, %4, !dbg !7412
  store i32 %and, i32* %val, align 4, !dbg !7413
  %5 = load i32, i32* %tparams.addr, align 4, !dbg !7414
  %and6 = and i32 3, %5, !dbg !7415
  %shl = shl i32 %and6, 12, !dbg !7416
  %6 = load i32, i32* %val, align 4, !dbg !7417
  %or = or i32 %6, %shl, !dbg !7417
  store i32 %or, i32* %val, align 4, !dbg !7417
  %7 = load i32, i32* %arb_rate.addr, align 4, !dbg !7418
  %and7 = and i32 %7, 255, !dbg !7419
  %shl8 = shl i32 %and7, 16, !dbg !7420
  %8 = load i32, i32* %val, align 4, !dbg !7421
  %or9 = or i32 %8, %shl8, !dbg !7421
  store i32 %or9, i32* %val, align 4, !dbg !7421
  %9 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7422
  %10 = load i32, i32* %val, align 4, !dbg !7423
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %9, i32 0, i32 %10) #11, !dbg !7424
  br label %return, !dbg !7425

return:                                           ; preds = %if.end5, %if.then
  ret void, !dbg !7425
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_busy_notifier(%struct.notifier_block* %nb, i64 %cmd, i8* %v) #0 !dbg !7426 {
entry:
  %retval = alloca i32, align 4
  %nb.addr = alloca %struct.notifier_block*, align 8
  %cmd.addr = alloca i64, align 8
  %v.addr = alloca i8*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.omap_dmadev*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !7427, metadata !DIExpression()), !dbg !7428
  store i64 %cmd, i64* %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmd.addr, metadata !7429, metadata !DIExpression()), !dbg !7430
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !7431, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !7433, metadata !DIExpression()), !dbg !7434
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7435, metadata !DIExpression()), !dbg !7437
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !7437
  %1 = bitcast %struct.notifier_block* %0 to i8*, !dbg !7437
  store i8* %1, i8** %__mptr, align 8, !dbg !7437
  br label %do.body, !dbg !7437

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7438

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7437
  %add.ptr = getelementptr i8, i8* %2, i64 -416, !dbg !7437
  %3 = bitcast i8* %add.ptr to %struct.omap_dmadev*, !dbg !7437
  store %struct.omap_dmadev* %3, %struct.omap_dmadev** %tmp, align 8, !dbg !7438
  %4 = load %struct.omap_dmadev*, %struct.omap_dmadev** %tmp, align 8, !dbg !7437
  store %struct.omap_dmadev* %4, %struct.omap_dmadev** %od, align 8, !dbg !7440
  %5 = load i64, i64* %cmd.addr, align 8, !dbg !7441
  switch i64 %5, label %sw.epilog [
    i64 3, label %sw.bb
    i64 4, label %sw.bb1
    i64 5, label %sw.bb1
  ], !dbg !7442

sw.bb:                                            ; preds = %do.end
  %6 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7443
  %call = call zeroext i1 @omap_dma_busy(%struct.omap_dmadev* %6) #11, !dbg !7446
  br i1 %call, label %if.then, label %if.end, !dbg !7447

if.then:                                          ; preds = %sw.bb
  store i32 32770, i32* %retval, align 4, !dbg !7448
  br label %return, !dbg !7448

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !7449

sw.bb1:                                           ; preds = %do.end, %do.end
  br label %sw.epilog, !dbg !7450

sw.epilog:                                        ; preds = %do.end, %sw.bb1, %if.end
  store i32 1, i32* %retval, align 4, !dbg !7451
  br label %return, !dbg !7451

return:                                           ; preds = %sw.epilog, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !7452
  ret i32 %7, !dbg !7452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cpu_pm_register_notifier(%struct.notifier_block* %nb) #0 !dbg !7453 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !7457, metadata !DIExpression()), !dbg !7458
  ret i32 0, !dbg !7459
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_context_notifier(%struct.notifier_block* %nb, i64 %cmd, i8* %v) #0 !dbg !7460 {
entry:
  %retval = alloca i32, align 4
  %nb.addr = alloca %struct.notifier_block*, align 8
  %cmd.addr = alloca i64, align 8
  %v.addr = alloca i8*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.omap_dmadev*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !7461, metadata !DIExpression()), !dbg !7462
  store i64 %cmd, i64* %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmd.addr, metadata !7463, metadata !DIExpression()), !dbg !7464
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !7465, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !7467, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7469, metadata !DIExpression()), !dbg !7471
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !7471
  %1 = bitcast %struct.notifier_block* %0 to i8*, !dbg !7471
  store i8* %1, i8** %__mptr, align 8, !dbg !7471
  br label %do.body, !dbg !7471

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7472

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7471
  %add.ptr = getelementptr i8, i8* %2, i64 -416, !dbg !7471
  %3 = bitcast i8* %add.ptr to %struct.omap_dmadev*, !dbg !7471
  store %struct.omap_dmadev* %3, %struct.omap_dmadev** %tmp, align 8, !dbg !7472
  %4 = load %struct.omap_dmadev*, %struct.omap_dmadev** %tmp, align 8, !dbg !7471
  store %struct.omap_dmadev* %4, %struct.omap_dmadev** %od, align 8, !dbg !7474
  %5 = load i64, i64* %cmd.addr, align 8, !dbg !7475
  switch i64 %5, label %sw.epilog [
    i64 3, label %sw.bb
    i64 4, label %sw.bb1
    i64 5, label %sw.bb1
  ], !dbg !7476

sw.bb:                                            ; preds = %do.end
  %6 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7477
  %call = call zeroext i1 @omap_dma_busy(%struct.omap_dmadev* %6) #11, !dbg !7480
  br i1 %call, label %if.then, label %if.end, !dbg !7481

if.then:                                          ; preds = %sw.bb
  store i32 32770, i32* %retval, align 4, !dbg !7482
  br label %return, !dbg !7482

if.end:                                           ; preds = %sw.bb
  %7 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7483
  call void @omap_dma_context_save(%struct.omap_dmadev* %7) #11, !dbg !7484
  br label %sw.epilog, !dbg !7485

sw.bb1:                                           ; preds = %do.end, %do.end
  %8 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !7486
  call void @omap_dma_context_restore(%struct.omap_dmadev* %8) #11, !dbg !7487
  br label %sw.epilog, !dbg !7488

sw.epilog:                                        ; preds = %do.end, %sw.bb1, %if.end
  store i32 1, i32* %retval, align 4, !dbg !7489
  br label %return, !dbg !7489

return:                                           ; preds = %sw.epilog, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7490
  ret i32 %9, !dbg !7490
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kmalloc(%struct.device*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !7491 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7497, metadata !DIExpression()), !dbg !7499
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7501, metadata !DIExpression()), !dbg !7502
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7503, metadata !DIExpression()), !dbg !7511
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7513, metadata !DIExpression()), !dbg !7514
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7515, metadata !DIExpression()), !dbg !7516
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7517, metadata !DIExpression()), !dbg !7518
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7519
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7520
  %div = sdiv i64 %1, 64, !dbg !7520
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7521
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7519
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7522
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7523
  %conv.i = trunc i64 %4 to i32, !dbg !7523
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !7524
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7525
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7525
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !7525
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7526
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7527
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7528
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !7530
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7531

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7532
  %12 = bitcast i64* %11 to i8*, !dbg !7532
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7532
  %shr.i = ashr i64 %13, 3, !dbg !7532
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7532
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7534
  %and.i = and i64 %14, 7, !dbg !7534
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7534
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7534
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #8, !dbg !7535, !srcloc !7536
  br label %arch_set_bit.exit, !dbg !7537

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7538
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7540
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #8, !dbg !7541, !srcloc !7542
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !7544 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7548, metadata !DIExpression()), !dbg !7549
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7550, metadata !DIExpression()), !dbg !7551
  ret i1 true, !dbg !7552
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !7553 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7557, metadata !DIExpression()), !dbg !7558
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7559, metadata !DIExpression()), !dbg !7560
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7561, metadata !DIExpression()), !dbg !7562
  ret void, !dbg !7563
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %d) #0 !dbg !7564 {
entry:
  %d.addr = alloca %struct.dma_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.omap_dmadev*, align 8
  store %struct.dma_device* %d, %struct.dma_device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_device** %d.addr, metadata !7567, metadata !DIExpression()), !dbg !7568
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7569, metadata !DIExpression()), !dbg !7571
  %0 = load %struct.dma_device*, %struct.dma_device** %d.addr, align 8, !dbg !7571
  %1 = bitcast %struct.dma_device* %0 to i8*, !dbg !7571
  store i8* %1, i8** %__mptr, align 8, !dbg !7571
  br label %do.body, !dbg !7571

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7572

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7571
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7571
  %3 = bitcast i8* %add.ptr to %struct.omap_dmadev*, !dbg !7571
  store %struct.omap_dmadev* %3, %struct.omap_dmadev** %tmp, align 8, !dbg !7572
  %4 = load %struct.omap_dmadev*, %struct.omap_dmadev** %tmp, align 8, !dbg !7571
  ret %struct.omap_dmadev* %4, !dbg !7574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.omap_chan* @to_omap_dma_chan(%struct.dma_chan* %c) #0 !dbg !7575 {
entry:
  %c.addr = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.omap_chan*, align 8
  store %struct.dma_chan* %c, %struct.dma_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %c.addr, metadata !7578, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7580, metadata !DIExpression()), !dbg !7582
  %0 = load %struct.dma_chan*, %struct.dma_chan** %c.addr, align 8, !dbg !7582
  %1 = bitcast %struct.dma_chan* %0 to i8*, !dbg !7582
  store i8* %1, i8** %__mptr, align 8, !dbg !7582
  br label %do.body, !dbg !7582

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7583

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7582
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7582
  %3 = bitcast i8* %add.ptr to %struct.omap_chan*, !dbg !7582
  store %struct.omap_chan* %3, %struct.omap_chan** %tmp, align 8, !dbg !7583
  %4 = load %struct.omap_chan*, %struct.omap_chan** %tmp, align 8, !dbg !7582
  ret %struct.omap_chan* %4, !dbg !7585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_request_dma(i32 %dev_id, i8* %dev_name, void (i32, i16, i8*)* %callback, i8* %data, i32* %dma_ch) #0 !dbg !7586 {
entry:
  %dev_id.addr = alloca i32, align 4
  %dev_name.addr = alloca i8*, align 8
  %callback.addr = alloca void (i32, i16, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %dma_ch.addr = alloca i32*, align 8
  store i32 %dev_id, i32* %dev_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dev_id.addr, metadata !7592, metadata !DIExpression()), !dbg !7593
  store i8* %dev_name, i8** %dev_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_name.addr, metadata !7594, metadata !DIExpression()), !dbg !7595
  store void (i32, i16, i8*)* %callback, void (i32, i16, i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i32, i16, i8*)** %callback.addr, metadata !7596, metadata !DIExpression()), !dbg !7597
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7598, metadata !DIExpression()), !dbg !7599
  store i32* %dma_ch, i32** %dma_ch.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dma_ch.addr, metadata !7600, metadata !DIExpression()), !dbg !7601
  ret i32 -19, !dbg !7602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_callback(i32 %ch, i16 zeroext %status, i8* %data) #0 !dbg !7603 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !5490, metadata !DIExpression()), !dbg !7604
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5496, metadata !DIExpression()), !dbg !7606
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !7607
  %ch.addr = alloca i32, align 4
  %status.addr = alloca i16, align 2
  %data.addr = alloca i8*, align 8
  %c = alloca %struct.omap_chan*, align 8
  %d = alloca %struct.omap_desc*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !7614, metadata !DIExpression()), !dbg !7615
  store i16 %status, i16* %status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %status.addr, metadata !7616, metadata !DIExpression()), !dbg !7617
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7618, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !7620, metadata !DIExpression()), !dbg !7621
  %0 = load i8*, i8** %data.addr, align 8, !dbg !7622
  %1 = bitcast i8* %0 to %struct.omap_chan*, !dbg !7622
  store %struct.omap_chan* %1, %struct.omap_chan** %c, align 8, !dbg !7621
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d, metadata !7623, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7625, metadata !DIExpression()), !dbg !7626
  br label %do.body, !dbg !7627

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7628

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7629, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7632, metadata !DIExpression()), !dbg !7631
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7631
  %conv = zext i1 %cmp to i32, !dbg !7631
  store i32 1, i32* %tmp, align 4, !dbg !7631
  %2 = load i32, i32* %tmp, align 4, !dbg !7631
  br label %do.body2, !dbg !7633

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7634

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7635

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7637, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7641, metadata !DIExpression()), !dbg !7640
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7640
  %conv8 = zext i1 %cmp7 to i32, !dbg !7640
  store i32 1, i32* %tmp9, align 4, !dbg !7640
  %3 = load i32, i32* %tmp9, align 4, !dbg !7640
  %call = call i64 @arch_local_irq_save() #11, !dbg !7642
  store i64 %call, i64* %flags, align 8, !dbg !7642
  br label %do.end, !dbg !7642

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7635

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7634

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7643, !srcloc !7644
  br label %do.body12, !dbg !7643

do.body12:                                        ; preds = %do.body11
  %4 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7645
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %4, i32 0, i32 0, !dbg !7645
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 3, !dbg !7645
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7646
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !7647
  %rlock.i = bitcast %union.anon.3* %6 to %struct.raw_spinlock*, !dbg !7647
  br label %do.end14, !dbg !7645

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7643

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7634

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7633

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7628

do.end18:                                         ; preds = %do.end17
  %7 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7648
  %desc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %7, i32 0, i32 10, !dbg !7649
  %8 = load %struct.omap_desc*, %struct.omap_desc** %desc, align 8, !dbg !7649
  store %struct.omap_desc* %8, %struct.omap_desc** %d, align 8, !dbg !7650
  %9 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7651
  %tobool = icmp ne %struct.omap_desc* %9, null, !dbg !7651
  br i1 %tobool, label %if.then, label %if.end29, !dbg !7653

if.then:                                          ; preds = %do.end18
  %10 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7654
  %cyclic = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %10, i32 0, i32 6, !dbg !7657
  %11 = load i8, i8* %cyclic, align 4, !dbg !7657
  %tobool19 = trunc i8 %11 to i1, !dbg !7657
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !7658

if.then20:                                        ; preds = %if.then
  %12 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7659
  %vd = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %12, i32 0, i32 0, !dbg !7661
  call void @vchan_cyclic_callback(%struct.virt_dma_desc* %vd) #11, !dbg !7662
  br label %if.end28, !dbg !7663

if.else:                                          ; preds = %if.then
  %13 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7664
  %using_ll = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %13, i32 0, i32 1, !dbg !7666
  %14 = load i8, i8* %using_ll, align 8, !dbg !7666
  %tobool21 = trunc i8 %14 to i1, !dbg !7666
  br i1 %tobool21, label %if.then25, label %lor.lhs.false, !dbg !7667

lor.lhs.false:                                    ; preds = %if.else
  %15 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7668
  %sgidx = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %15, i32 0, i32 11, !dbg !7669
  %16 = load i32, i32* %sgidx, align 8, !dbg !7669
  %17 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7670
  %sglen = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %17, i32 0, i32 12, !dbg !7671
  %18 = load i32, i32* %sglen, align 8, !dbg !7671
  %cmp23 = icmp eq i32 %16, %18, !dbg !7672
  br i1 %cmp23, label %if.then25, label %if.else27, !dbg !7673

if.then25:                                        ; preds = %lor.lhs.false, %if.else
  %19 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7674
  call void @omap_dma_start_desc(%struct.omap_chan* %19) #11, !dbg !7676
  %20 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7677
  %vd26 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %20, i32 0, i32 0, !dbg !7678
  call void @vchan_cookie_complete(%struct.virt_dma_desc* %vd26) #11, !dbg !7679
  br label %if.end, !dbg !7680

if.else27:                                        ; preds = %lor.lhs.false
  %21 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7681
  %22 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7683
  call void @omap_dma_start_sg(%struct.omap_chan* %21, %struct.omap_desc* %22) #11, !dbg !7684
  br label %if.end

if.end:                                           ; preds = %if.else27, %if.then25
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.then20
  br label %if.end29, !dbg !7685

if.end29:                                         ; preds = %if.end28, %do.end18
  %23 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !7686
  %vc30 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %23, i32 0, i32 0, !dbg !7687
  %lock31 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc30, i32 0, i32 3, !dbg !7688
  %24 = load i64, i64* %flags, align 8, !dbg !7689
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %24, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !437, metadata !5672, metadata !DIExpression()) #8, !dbg !7690
  call void @llvm.dbg.declare(metadata !437, metadata !5676, metadata !DIExpression()) #8, !dbg !7690
  store i32 1, i32* %tmp.i, align 4, !dbg !7690
  %25 = load i32, i32* %tmp.i, align 4, !dbg !7690
  call void @llvm.dbg.declare(metadata !437, metadata !5677, metadata !DIExpression()) #8, !dbg !7691
  call void @llvm.dbg.declare(metadata !437, metadata !5683, metadata !DIExpression()) #8, !dbg !7691
  store i32 1, i32* %tmp8.i, align 4, !dbg !7691
  %26 = load i32, i32* %tmp8.i, align 4, !dbg !7691
  %27 = load i64, i64* %flags.addr.i, align 8, !dbg !7692
  call void @arch_local_irq_restore(i64 %27) #13, !dbg !7692
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7693, !srcloc !5687
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !7694
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !7694
  %rlock.i33 = bitcast %union.anon.3* %29 to %struct.raw_spinlock*, !dbg !7694
  ret void, !dbg !7695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_get_lch(%struct.omap_dmadev* %od, i32* %lch) #0 !dbg !7696 {
entry:
  %retval = alloca i32, align 4
  %od.addr = alloca %struct.omap_dmadev*, align 8
  %lch.addr = alloca i32*, align 8
  %channel = alloca i32, align 4
  store %struct.omap_dmadev* %od, %struct.omap_dmadev** %od.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od.addr, metadata !7699, metadata !DIExpression()), !dbg !7700
  store i32* %lch, i32** %lch.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %lch.addr, metadata !7701, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !7703, metadata !DIExpression()), !dbg !7704
  %0 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7705
  %lch_lock = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %0, i32 0, i32 10, !dbg !7706
  call void @mutex_lock(%struct.mutex* %lch_lock) #11, !dbg !7707
  %1 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7708
  %lch_bitmap = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %1, i32 0, i32 9, !dbg !7709
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %lch_bitmap, i64 0, i64 0, !dbg !7708
  %2 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7710
  %lch_count = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %2, i32 0, i32 8, !dbg !7711
  %3 = load i32, i32* %lch_count, align 8, !dbg !7711
  %conv = sext i32 %3 to i64, !dbg !7710
  %call = call i64 @find_first_zero_bit(i64* %arraydecay, i64 %conv) #11, !dbg !7712
  %conv1 = trunc i64 %call to i32, !dbg !7712
  store i32 %conv1, i32* %channel, align 4, !dbg !7713
  %4 = load i32, i32* %channel, align 4, !dbg !7714
  %5 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7716
  %lch_count2 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %5, i32 0, i32 8, !dbg !7717
  %6 = load i32, i32* %lch_count2, align 8, !dbg !7717
  %cmp = icmp sge i32 %4, %6, !dbg !7718
  br i1 %cmp, label %if.then, label %if.end, !dbg !7719

if.then:                                          ; preds = %entry
  br label %out_busy, !dbg !7720

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %channel, align 4, !dbg !7721
  %conv4 = sext i32 %7 to i64, !dbg !7721
  %8 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7722
  %lch_bitmap5 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %8, i32 0, i32 9, !dbg !7723
  %arraydecay6 = getelementptr inbounds [1 x i64], [1 x i64]* %lch_bitmap5, i64 0, i64 0, !dbg !7722
  call void @set_bit(i64 %conv4, i64* %arraydecay6) #11, !dbg !7724
  %9 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7725
  %lch_lock7 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %9, i32 0, i32 10, !dbg !7726
  call void @mutex_unlock(%struct.mutex* %lch_lock7) #11, !dbg !7727
  %10 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7728
  %11 = load i32, i32* %channel, align 4, !dbg !7729
  call void @omap_dma_clear_lch(%struct.omap_dmadev* %10, i32 %11) #11, !dbg !7730
  %12 = load i32, i32* %channel, align 4, !dbg !7731
  %13 = load i32*, i32** %lch.addr, align 8, !dbg !7732
  store i32 %12, i32* %13, align 4, !dbg !7733
  store i32 0, i32* %retval, align 4, !dbg !7734
  br label %return, !dbg !7734

out_busy:                                         ; preds = %if.then
  call void @llvm.dbg.label(metadata !7735), !dbg !7736
  %14 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7737
  %lch_lock8 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %14, i32 0, i32 10, !dbg !7738
  call void @mutex_unlock(%struct.mutex* %lch_lock8) #11, !dbg !7739
  %15 = load i32*, i32** %lch.addr, align 8, !dbg !7740
  store i32 -22, i32* %15, align 4, !dbg !7741
  store i32 -16, i32* %retval, align 4, !dbg !7742
  br label %return, !dbg !7742

return:                                           ; preds = %out_busy, %if.end
  %16 = load i32, i32* %retval, align 4, !dbg !7743
  ret i32 %16, !dbg !7743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_assign(%struct.omap_dmadev* %od, %struct.omap_chan* %c, i32 %lch) #0 !dbg !7744 {
entry:
  %od.addr = alloca %struct.omap_dmadev*, align 8
  %c.addr = alloca %struct.omap_chan*, align 8
  %lch.addr = alloca i32, align 4
  store %struct.omap_dmadev* %od, %struct.omap_dmadev** %od.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od.addr, metadata !7747, metadata !DIExpression()), !dbg !7748
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !7749, metadata !DIExpression()), !dbg !7750
  store i32 %lch, i32* %lch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lch.addr, metadata !7751, metadata !DIExpression()), !dbg !7752
  %0 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7753
  %base = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %0, i32 0, i32 2, !dbg !7754
  %1 = load i8*, i8** %base, align 8, !dbg !7754
  %2 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7755
  %plat = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %2, i32 0, i32 4, !dbg !7756
  %3 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat, align 8, !dbg !7756
  %channel_stride = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %3, i32 0, i32 1, !dbg !7757
  %4 = load i32, i32* %channel_stride, align 8, !dbg !7757
  %5 = load i32, i32* %lch.addr, align 4, !dbg !7758
  %mul = mul i32 %4, %5, !dbg !7759
  %idx.ext = zext i32 %mul to i64, !dbg !7760
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !7760
  %6 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7761
  %channel_base = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %6, i32 0, i32 1, !dbg !7762
  store i8* %add.ptr, i8** %channel_base, align 8, !dbg !7763
  %7 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7764
  %8 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !7765
  %lch_map = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %8, i32 0, i32 17, !dbg !7766
  %9 = load %struct.omap_chan**, %struct.omap_chan*** %lch_map, align 8, !dbg !7766
  %10 = load i32, i32* %lch.addr, align 4, !dbg !7767
  %idxprom = zext i32 %10 to i64, !dbg !7765
  %arrayidx = getelementptr %struct.omap_chan*, %struct.omap_chan** %9, i64 %idxprom, !dbg !7765
  store %struct.omap_chan* %7, %struct.omap_chan** %arrayidx, align 8, !dbg !7768
  ret void, !dbg !7769
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !7770 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7774, metadata !DIExpression()), !dbg !7775
  %call = call i64 @arch_local_save_flags() #11, !dbg !7776
  store i64 %call, i64* %f, align 8, !dbg !7777
  call void @arch_local_irq_disable() #11, !dbg !7778
  %0 = load i64, i64* %f, align 8, !dbg !7779
  ret i64 %0, !dbg !7780
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_cyclic_callback(%struct.virt_dma_desc* %vd) #0 !dbg !7781 {
entry:
  %vd.addr = alloca %struct.virt_dma_desc*, align 8
  %vc = alloca %struct.virt_dma_chan*, align 8
  store %struct.virt_dma_desc* %vd, %struct.virt_dma_desc** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd.addr, metadata !7782, metadata !DIExpression()), !dbg !7783
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc, metadata !7784, metadata !DIExpression()), !dbg !7785
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7786
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %0, i32 0, i32 0, !dbg !7787
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx, i32 0, i32 3, !dbg !7788
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7788
  %call = call %struct.virt_dma_chan* @to_virt_chan(%struct.dma_chan* %1) #11, !dbg !7789
  store %struct.virt_dma_chan* %call, %struct.virt_dma_chan** %vc, align 8, !dbg !7785
  %2 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7790
  %3 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !7791
  %cyclic = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %3, i32 0, i32 9, !dbg !7792
  store %struct.virt_dma_desc* %2, %struct.virt_dma_desc** %cyclic, align 8, !dbg !7793
  %4 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !7794
  %task = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %4, i32 0, i32 1, !dbg !7795
  call void @tasklet_schedule(%struct.tasklet_struct* %task) #11, !dbg !7796
  ret void, !dbg !7797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_start_desc(%struct.omap_chan* %c) #0 !dbg !7798 {
entry:
  %c.addr = alloca %struct.omap_chan*, align 8
  %vd = alloca %struct.virt_dma_desc*, align 8
  %d = alloca %struct.omap_desc*, align 8
  %cxsa = alloca i32, align 4
  %cxei = alloca i32, align 4
  %cxfi = alloca i32, align 4
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !7801, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd, metadata !7803, metadata !DIExpression()), !dbg !7804
  %0 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7805
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %0, i32 0, i32 0, !dbg !7806
  %call = call %struct.virt_dma_desc* @vchan_next_desc(%struct.virt_dma_chan* %vc) #11, !dbg !7807
  store %struct.virt_dma_desc* %call, %struct.virt_dma_desc** %vd, align 8, !dbg !7804
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d, metadata !7808, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.declare(metadata i32* %cxsa, metadata !7810, metadata !DIExpression()), !dbg !7811
  call void @llvm.dbg.declare(metadata i32* %cxei, metadata !7812, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.declare(metadata i32* %cxfi, metadata !7814, metadata !DIExpression()), !dbg !7815
  %1 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !7816
  %tobool = icmp ne %struct.virt_dma_desc* %1, null, !dbg !7816
  br i1 %tobool, label %if.end, label %if.then, !dbg !7818

if.then:                                          ; preds = %entry
  %2 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7819
  %desc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %2, i32 0, i32 10, !dbg !7821
  store %struct.omap_desc* null, %struct.omap_desc** %desc, align 8, !dbg !7822
  br label %return, !dbg !7823

if.end:                                           ; preds = %entry
  %3 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !7824
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %3, i32 0, i32 2, !dbg !7825
  call void @list_del(%struct.list_head* %node) #11, !dbg !7826
  %4 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !7827
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %4, i32 0, i32 0, !dbg !7828
  %call1 = call %struct.omap_desc* @to_omap_dma_desc(%struct.dma_async_tx_descriptor* %tx) #11, !dbg !7829
  store %struct.omap_desc* %call1, %struct.omap_desc** %d, align 8, !dbg !7830
  %5 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7831
  %desc2 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %5, i32 0, i32 10, !dbg !7832
  store %struct.omap_desc* %call1, %struct.omap_desc** %desc2, align 8, !dbg !7833
  %6 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7834
  %sgidx = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %6, i32 0, i32 11, !dbg !7835
  store i32 0, i32* %sgidx, align 8, !dbg !7836
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7837, !srcloc !7838
  %7 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7839
  %8 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7840
  %ccr = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %8, i32 0, i32 8, !dbg !7841
  %9 = load i32, i32* %ccr, align 4, !dbg !7841
  call void @omap_dma_chan_write(%struct.omap_chan* %7, i32 33, i32 %9) #11, !dbg !7842
  %10 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7843
  %11 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7845
  %ccr3 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %11, i32 0, i32 8, !dbg !7846
  %12 = load i32, i32* %ccr3, align 4, !dbg !7846
  %shr = lshr i32 %12, 16, !dbg !7847
  call void @omap_dma_chan_write(%struct.omap_chan* %10, i32 30, i32 %shr) #11, !dbg !7848
  %13 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7849
  %dir = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %13, i32 0, i32 2, !dbg !7851
  %14 = load i32, i32* %dir, align 4, !dbg !7851
  %cmp = icmp eq i32 %14, 2, !dbg !7852
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !7853

lor.lhs.false:                                    ; preds = %if.end
  %15 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7854
  %dir4 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %15, i32 0, i32 2, !dbg !7855
  %16 = load i32, i32* %dir4, align 4, !dbg !7855
  %cmp5 = icmp eq i32 %16, 0, !dbg !7856
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !7857

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  store i32 45, i32* %cxsa, align 4, !dbg !7858
  store i32 39, i32* %cxei, align 4, !dbg !7860
  store i32 38, i32* %cxfi, align 4, !dbg !7861
  br label %if.end7, !dbg !7862

if.else:                                          ; preds = %lor.lhs.false
  store i32 46, i32* %cxsa, align 4, !dbg !7863
  store i32 42, i32* %cxei, align 4, !dbg !7865
  store i32 43, i32* %cxfi, align 4, !dbg !7866
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  %17 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7867
  %18 = load i32, i32* %cxsa, align 4, !dbg !7868
  %19 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7869
  %dev_addr = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %19, i32 0, i32 3, !dbg !7870
  %20 = load i64, i64* %dev_addr, align 8, !dbg !7870
  %conv = trunc i64 %20 to i32, !dbg !7869
  call void @omap_dma_chan_write(%struct.omap_chan* %17, i32 %18, i32 %conv) #11, !dbg !7871
  %21 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7872
  %22 = load i32, i32* %cxei, align 4, !dbg !7873
  %23 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7874
  %ei = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %23, i32 0, i32 6, !dbg !7875
  %24 = load i16, i16* %ei, align 8, !dbg !7875
  %conv8 = sext i16 %24 to i32, !dbg !7874
  call void @omap_dma_chan_write(%struct.omap_chan* %21, i32 %22, i32 %conv8) #11, !dbg !7876
  %25 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7877
  %26 = load i32, i32* %cxfi, align 4, !dbg !7878
  %27 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7879
  %fi = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %27, i32 0, i32 5, !dbg !7880
  %28 = load i32, i32* %fi, align 4, !dbg !7880
  call void @omap_dma_chan_write(%struct.omap_chan* %25, i32 %26, i32 %28) #11, !dbg !7881
  %29 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7882
  %30 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7883
  %csdp = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %30, i32 0, i32 11, !dbg !7884
  %31 = load i32, i32* %csdp, align 4, !dbg !7884
  call void @omap_dma_chan_write(%struct.omap_chan* %29, i32 32, i32 %31) #11, !dbg !7885
  %32 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7886
  %33 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7887
  %clnk_ctrl = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %33, i32 0, i32 9, !dbg !7888
  %34 = load i16, i16* %clnk_ctrl, align 8, !dbg !7888
  %conv9 = zext i16 %34 to i32, !dbg !7887
  call void @omap_dma_chan_write(%struct.omap_chan* %32, i32 44, i32 %conv9) #11, !dbg !7889
  %35 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7890
  %36 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !7891
  call void @omap_dma_start_sg(%struct.omap_chan* %35, %struct.omap_desc* %36) #11, !dbg !7892
  br label %return, !dbg !7893

return:                                           ; preds = %if.end7, %if.then
  ret void, !dbg !7893
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_cookie_complete(%struct.virt_dma_desc* %vd) #0 !dbg !7894 {
entry:
  %vd.addr = alloca %struct.virt_dma_desc*, align 8
  %vc = alloca %struct.virt_dma_chan*, align 8
  %cookie = alloca i32, align 4
  store %struct.virt_dma_desc* %vd, %struct.virt_dma_desc** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd.addr, metadata !7895, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc, metadata !7897, metadata !DIExpression()), !dbg !7898
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7899
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %0, i32 0, i32 0, !dbg !7900
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx, i32 0, i32 3, !dbg !7901
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !7901
  %call = call %struct.virt_dma_chan* @to_virt_chan(%struct.dma_chan* %1) #11, !dbg !7902
  store %struct.virt_dma_chan* %call, %struct.virt_dma_chan** %vc, align 8, !dbg !7898
  call void @llvm.dbg.declare(metadata i32* %cookie, metadata !7903, metadata !DIExpression()), !dbg !7904
  %2 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7905
  %tx1 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %2, i32 0, i32 0, !dbg !7906
  %cookie2 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx1, i32 0, i32 0, !dbg !7907
  %3 = load i32, i32* %cookie2, align 8, !dbg !7907
  store i32 %3, i32* %cookie, align 4, !dbg !7908
  %4 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7909
  %tx3 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %4, i32 0, i32 0, !dbg !7910
  call void @dma_cookie_complete(%struct.dma_async_tx_descriptor* %tx3) #11, !dbg !7911
  %5 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !7912
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %5, i32 0, i32 2, !dbg !7913
  %6 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !7914
  %desc_completed = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %6, i32 0, i32 7, !dbg !7915
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* %desc_completed) #11, !dbg !7916
  %7 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !7917
  %task = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %7, i32 0, i32 1, !dbg !7918
  call void @tasklet_schedule(%struct.tasklet_struct* %task) #11, !dbg !7919
  ret void, !dbg !7920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_start_sg(%struct.omap_chan* %c, %struct.omap_desc* %d) #0 !dbg !7921 {
entry:
  %c.addr = alloca %struct.omap_chan*, align 8
  %d.addr = alloca %struct.omap_desc*, align 8
  %sg = alloca %struct.omap_sg*, align 8
  %cxsa = alloca i32, align 4
  %cxei = alloca i32, align 4
  %cxfi = alloca i32, align 4
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !7924, metadata !DIExpression()), !dbg !7925
  store %struct.omap_desc* %d, %struct.omap_desc** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d.addr, metadata !7926, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.declare(metadata %struct.omap_sg** %sg, metadata !7928, metadata !DIExpression()), !dbg !7929
  %0 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !7930
  %sg1 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %0, i32 0, i32 13, !dbg !7931
  %arraydecay = getelementptr inbounds [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg1, i64 0, i64 0, !dbg !7930
  %1 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7932
  %sgidx = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %1, i32 0, i32 11, !dbg !7933
  %2 = load i32, i32* %sgidx, align 8, !dbg !7933
  %idx.ext = zext i32 %2 to i64, !dbg !7934
  %add.ptr = getelementptr %struct.omap_sg, %struct.omap_sg* %arraydecay, i64 %idx.ext, !dbg !7934
  store %struct.omap_sg* %add.ptr, %struct.omap_sg** %sg, align 8, !dbg !7929
  call void @llvm.dbg.declare(metadata i32* %cxsa, metadata !7935, metadata !DIExpression()), !dbg !7936
  call void @llvm.dbg.declare(metadata i32* %cxei, metadata !7937, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.declare(metadata i32* %cxfi, metadata !7939, metadata !DIExpression()), !dbg !7940
  %3 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !7941
  %dir = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %3, i32 0, i32 2, !dbg !7943
  %4 = load i32, i32* %dir, align 4, !dbg !7943
  %cmp = icmp eq i32 %4, 2, !dbg !7944
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7945

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !7946
  %dir2 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %5, i32 0, i32 2, !dbg !7947
  %6 = load i32, i32* %dir2, align 4, !dbg !7947
  %cmp3 = icmp eq i32 %6, 0, !dbg !7948
  br i1 %cmp3, label %if.then, label %if.else, !dbg !7949

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 46, i32* %cxsa, align 4, !dbg !7950
  store i32 42, i32* %cxei, align 4, !dbg !7952
  store i32 43, i32* %cxfi, align 4, !dbg !7953
  br label %if.end, !dbg !7954

if.else:                                          ; preds = %lor.lhs.false
  store i32 45, i32* %cxsa, align 4, !dbg !7955
  store i32 39, i32* %cxei, align 4, !dbg !7957
  store i32 38, i32* %cxfi, align 4, !dbg !7958
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7959
  %8 = load i32, i32* %cxsa, align 4, !dbg !7960
  %9 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !7961
  %addr = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %9, i32 0, i32 0, !dbg !7962
  %10 = load i64, i64* %addr, align 8, !dbg !7962
  %conv = trunc i64 %10 to i32, !dbg !7961
  call void @omap_dma_chan_write(%struct.omap_chan* %7, i32 %8, i32 %conv) #11, !dbg !7963
  %11 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7964
  %12 = load i32, i32* %cxei, align 4, !dbg !7965
  %13 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !7966
  %ei = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %13, i32 0, i32 4, !dbg !7967
  %14 = load i16, i16* %ei, align 4, !dbg !7967
  %conv4 = sext i16 %14 to i32, !dbg !7966
  call void @omap_dma_chan_write(%struct.omap_chan* %11, i32 %12, i32 %conv4) #11, !dbg !7968
  %15 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7969
  %16 = load i32, i32* %cxfi, align 4, !dbg !7970
  %17 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !7971
  %fi = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %17, i32 0, i32 3, !dbg !7972
  %18 = load i32, i32* %fi, align 8, !dbg !7972
  call void @omap_dma_chan_write(%struct.omap_chan* %15, i32 %16, i32 %18) #11, !dbg !7973
  %19 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7974
  %20 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !7975
  %en = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %20, i32 0, i32 1, !dbg !7976
  %21 = load i32, i32* %en, align 8, !dbg !7976
  call void @omap_dma_chan_write(%struct.omap_chan* %19, i32 36, i32 %21) #11, !dbg !7977
  %22 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7978
  %23 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !7979
  %fn = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %23, i32 0, i32 2, !dbg !7980
  %24 = load i32, i32* %fn, align 4, !dbg !7980
  call void @omap_dma_chan_write(%struct.omap_chan* %22, i32 37, i32 %24) #11, !dbg !7981
  %25 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7982
  %26 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !7983
  call void @omap_dma_start(%struct.omap_chan* %25, %struct.omap_desc* %26) #11, !dbg !7984
  %27 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !7985
  %sgidx5 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %27, i32 0, i32 11, !dbg !7986
  %28 = load i32, i32* %sgidx5, align 8, !dbg !7987
  %inc = add i32 %28, 1, !dbg !7987
  store i32 %inc, i32* %sgidx5, align 8, !dbg !7987
  ret void, !dbg !7988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !7989 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7990, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7993, metadata !DIExpression()), !dbg !7992
  %0 = load i64, i64* %__edi, align 8, !dbg !7992
  store i64 %0, i64* %__edi, align 8, !dbg !7992
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7994, metadata !DIExpression()), !dbg !7992
  %1 = load i64, i64* %__esi, align 8, !dbg !7992
  store i64 %1, i64* %__esi, align 8, !dbg !7992
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7995, metadata !DIExpression()), !dbg !7992
  %2 = load i64, i64* %__edx, align 8, !dbg !7992
  store i64 %2, i64* %__edx, align 8, !dbg !7992
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7996, metadata !DIExpression()), !dbg !7992
  %3 = load i64, i64* %__ecx, align 8, !dbg !7992
  store i64 %3, i64* %__ecx, align 8, !dbg !7992
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7997, metadata !DIExpression()), !dbg !7992
  %4 = load i64, i64* %__eax, align 8, !dbg !7992
  store i64 %4, i64* %__eax, align 8, !dbg !7992
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7992
  %6 = call i64 @llvm.read_register.i64(metadata !4619), !dbg !7998
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #8, !dbg !7998, !srcloc !8001
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7998
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7998
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7998
  call void @llvm.write_register.i64(metadata !4619, i64 %asmresult1), !dbg !7998
  %8 = load i64, i64* %__eax, align 8, !dbg !7998
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !8002, metadata !DIExpression()), !dbg !8004
  store i64 -1, i64* %__mask, align 8, !dbg !8004
  %9 = load i64, i64* %__mask, align 8, !dbg !8004
  store i64 %9, i64* %tmp, align 8, !dbg !8004
  %10 = load i64, i64* %tmp, align 8, !dbg !8004
  %and = and i64 %8, %10, !dbg !7998
  store i64 %and, i64* %__ret, align 8, !dbg !7998
  %11 = load i64, i64* %__ret, align 8, !dbg !7992
  store i64 %11, i64* %tmp2, align 8, !dbg !8005
  %12 = load i64, i64* %tmp2, align 8, !dbg !7992
  ret i64 %12, !dbg !8006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !8007 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8008, metadata !DIExpression()), !dbg !8010
  %0 = load i64, i64* %__edi, align 8, !dbg !8010
  store i64 %0, i64* %__edi, align 8, !dbg !8010
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8011, metadata !DIExpression()), !dbg !8010
  %1 = load i64, i64* %__esi, align 8, !dbg !8010
  store i64 %1, i64* %__esi, align 8, !dbg !8010
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8012, metadata !DIExpression()), !dbg !8010
  %2 = load i64, i64* %__edx, align 8, !dbg !8010
  store i64 %2, i64* %__edx, align 8, !dbg !8010
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8013, metadata !DIExpression()), !dbg !8010
  %3 = load i64, i64* %__ecx, align 8, !dbg !8010
  store i64 %3, i64* %__ecx, align 8, !dbg !8010
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8014, metadata !DIExpression()), !dbg !8010
  %4 = load i64, i64* %__eax, align 8, !dbg !8010
  store i64 %4, i64* %__eax, align 8, !dbg !8010
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !8010
  %6 = call i64 @llvm.read_register.i64(metadata !4619), !dbg !8010
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #8, !dbg !8010, !srcloc !8015
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8010
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8010
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8010
  call void @llvm.write_register.i64(metadata !4619, i64 %asmresult1), !dbg !8010
  ret void, !dbg !8016
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #7

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.virt_dma_chan* @to_virt_chan(%struct.dma_chan* %chan) #0 !dbg !8017 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.virt_dma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !8020, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8022, metadata !DIExpression()), !dbg !8024
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !8024
  %1 = bitcast %struct.dma_chan* %0 to i8*, !dbg !8024
  store i8* %1, i8** %__mptr, align 8, !dbg !8024
  br label %do.body, !dbg !8024

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8025

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8024
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8024
  %3 = bitcast i8* %add.ptr to %struct.virt_dma_chan*, !dbg !8024
  store %struct.virt_dma_chan* %3, %struct.virt_dma_chan** %tmp, align 8, !dbg !8025
  %4 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %tmp, align 8, !dbg !8024
  ret %struct.virt_dma_chan* %4, !dbg !8027
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #0 !dbg !8028 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !8029, metadata !DIExpression()), !dbg !8030
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !8031
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !8033
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #11, !dbg !8034
  br i1 %call, label %if.end, label %if.then, !dbg !8035

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !8036
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #11, !dbg !8037
  br label %if.end, !dbg !8037

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !8039 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8042, metadata !DIExpression()), !dbg !8044
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8046, metadata !DIExpression()), !dbg !8047
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !8048, metadata !DIExpression()), !dbg !8050
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8051, metadata !DIExpression()), !dbg !8053
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8055, metadata !DIExpression()), !dbg !8056
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8057, metadata !DIExpression()), !dbg !8058
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8059, metadata !DIExpression()), !dbg !8060
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8061
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8062
  %div = sdiv i64 %1, 64, !dbg !8062
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8063
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8061
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8064
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8065
  %conv.i = trunc i64 %4 to i32, !dbg !8065
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !8066
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8067
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8067
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #13, !dbg !8067
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8068
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8069
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !8050
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !8050
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #8, !dbg !8050, !srcloc !8070
  store i8 %11, i8* %c.i, align 1, !dbg !8050
  %12 = load i8, i8* %c.i, align 1, !dbg !8050
  %tobool.i = trunc i8 %12 to i1, !dbg !8050
  %frombool.i = zext i1 %tobool.i to i8, !dbg !8050
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !8050
  %13 = load i8, i8* %tmp.i, align 1, !dbg !8050
  %tobool1.i = trunc i8 %13 to i1, !dbg !8050
  ret i1 %tobool1.i, !dbg !8071
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.virt_dma_desc* @vchan_next_desc(%struct.virt_dma_chan* %vc) #0 !dbg !8072 {
entry:
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %head__ = alloca %struct.list_head*, align 8
  %pos__ = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp1 = alloca %struct.virt_dma_desc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp4 = alloca %struct.virt_dma_desc*, align 8
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !8075, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.declare(metadata %struct.list_head** %head__, metadata !8077, metadata !DIExpression()), !dbg !8079
  %0 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !8079
  %desc_issued = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %0, i32 0, i32 6, !dbg !8079
  store %struct.list_head* %desc_issued, %struct.list_head** %head__, align 8, !dbg !8079
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos__, metadata !8080, metadata !DIExpression()), !dbg !8079
  br label %do.body, !dbg !8081

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8083

do.end:                                           ; preds = %do.body
  %1 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !8081
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8081
  %2 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8081
  store %struct.list_head* %2, %struct.list_head** %tmp, align 8, !dbg !8083
  %3 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !8081
  store %struct.list_head* %3, %struct.list_head** %pos__, align 8, !dbg !8079
  %4 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !8079
  %5 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !8079
  %cmp = icmp ne %struct.list_head* %4, %5, !dbg !8079
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8079

cond.true:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8085, metadata !DIExpression()), !dbg !8087
  %6 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !8087
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !8087
  store i8* %7, i8** %__mptr, align 8, !dbg !8087
  br label %do.body2, !dbg !8087

do.body2:                                         ; preds = %cond.true
  br label %do.end3, !dbg !8088

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr, align 8, !dbg !8087
  %add.ptr = getelementptr i8, i8* %8, i64 -96, !dbg !8087
  %9 = bitcast i8* %add.ptr to %struct.virt_dma_desc*, !dbg !8087
  store %struct.virt_dma_desc* %9, %struct.virt_dma_desc** %tmp4, align 8, !dbg !8088
  %10 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %tmp4, align 8, !dbg !8087
  br label %cond.end, !dbg !8079

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !8079

cond.end:                                         ; preds = %cond.false, %do.end3
  %cond = phi %struct.virt_dma_desc* [ %10, %do.end3 ], [ null, %cond.false ], !dbg !8079
  store %struct.virt_dma_desc* %cond, %struct.virt_dma_desc** %tmp1, align 8, !dbg !8079
  %11 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %tmp1, align 8, !dbg !8079
  ret %struct.virt_dma_desc* %11, !dbg !8090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !8091 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8094
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !8095
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8096
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8097
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !8098
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8099
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !8100
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !8101
  ret void, !dbg !8102
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.omap_desc* @to_omap_dma_desc(%struct.dma_async_tx_descriptor* %t) #0 !dbg !8103 {
entry:
  %t.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.omap_desc*, align 8
  store %struct.dma_async_tx_descriptor* %t, %struct.dma_async_tx_descriptor** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %t.addr, metadata !8106, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8108, metadata !DIExpression()), !dbg !8110
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %t.addr, align 8, !dbg !8110
  %1 = bitcast %struct.dma_async_tx_descriptor* %0 to i8*, !dbg !8110
  store i8* %1, i8** %__mptr, align 8, !dbg !8110
  br label %do.body, !dbg !8110

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8111

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8110
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8110
  %3 = bitcast i8* %add.ptr to %struct.omap_desc*, !dbg !8110
  store %struct.omap_desc* %3, %struct.omap_desc** %tmp, align 8, !dbg !8111
  %4 = load %struct.omap_desc*, %struct.omap_desc** %tmp, align 8, !dbg !8110
  ret %struct.omap_desc* %4, !dbg !8113
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_chan_write(%struct.omap_chan* %c, i32 %reg, i32 %val) #0 !dbg !8114 {
entry:
  %c.addr = alloca %struct.omap_chan*, align 8
  %reg.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %r = alloca %struct.omap_dma_reg*, align 8
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !8117, metadata !DIExpression()), !dbg !8118
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !8119, metadata !DIExpression()), !dbg !8120
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8121, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.declare(metadata %struct.omap_dma_reg** %r, metadata !8123, metadata !DIExpression()), !dbg !8124
  %0 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8125
  %reg_map = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %0, i32 0, i32 2, !dbg !8126
  %1 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %reg_map, align 8, !dbg !8126
  %2 = load i32, i32* %reg.addr, align 4, !dbg !8127
  %idx.ext = zext i32 %2 to i64, !dbg !8128
  %add.ptr = getelementptr %struct.omap_dma_reg, %struct.omap_dma_reg* %1, i64 %idx.ext, !dbg !8128
  store %struct.omap_dma_reg* %add.ptr, %struct.omap_dma_reg** %r, align 8, !dbg !8124
  %3 = load i32, i32* %val.addr, align 4, !dbg !8129
  %4 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %r, align 8, !dbg !8130
  %type = getelementptr inbounds %struct.omap_dma_reg, %struct.omap_dma_reg* %4, i32 0, i32 2, !dbg !8131
  %5 = load i8, i8* %type, align 1, !dbg !8131
  %conv = zext i8 %5 to i32, !dbg !8130
  %6 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8132
  %channel_base = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %6, i32 0, i32 1, !dbg !8133
  %7 = load i8*, i8** %channel_base, align 8, !dbg !8133
  %8 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %r, align 8, !dbg !8134
  %offset = getelementptr inbounds %struct.omap_dma_reg, %struct.omap_dma_reg* %8, i32 0, i32 0, !dbg !8135
  %9 = load i16, i16* %offset, align 2, !dbg !8135
  %conv1 = zext i16 %9 to i32, !dbg !8134
  %idx.ext2 = sext i32 %conv1 to i64, !dbg !8136
  %add.ptr3 = getelementptr i8, i8* %7, i64 %idx.ext2, !dbg !8136
  call void @omap_dma_write(i32 %3, i32 %conv, i8* %add.ptr3) #11, !dbg !8137
  ret void, !dbg !8138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !8139 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8140, metadata !DIExpression()), !dbg !8141
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8142
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !8144
  br i1 %call, label %if.end, label %if.then, !dbg !8145

if.then:                                          ; preds = %entry
  br label %return, !dbg !8146

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8147
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8148
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8148
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8149
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8150
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8150
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !8151
  br label %return, !dbg !8152

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !8153 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8156, metadata !DIExpression()), !dbg !8157
  ret i1 true, !dbg !8158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8159 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8162, metadata !DIExpression()), !dbg !8163
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8164, metadata !DIExpression()), !dbg !8165
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8166
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8167
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8168
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !8169
  br label %do.body, !dbg !8170

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !8171

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !8173

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !8171

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8175
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8175
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8175
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !8175
  br label %do.end5, !dbg !8175

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !8171

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !8177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_write(i32 %val, i32 %type, i8* %addr) #0 !dbg !8178 {
entry:
  %val.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8181, metadata !DIExpression()), !dbg !8182
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8183, metadata !DIExpression()), !dbg !8184
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8185, metadata !DIExpression()), !dbg !8186
  %0 = load i32, i32* %type.addr, align 4, !dbg !8187
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb4
  ], !dbg !8188

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %val.addr, align 4, !dbg !8189
  %conv = trunc i32 %1 to i16, !dbg !8189
  %2 = load i8*, i8** %addr.addr, align 8, !dbg !8189
  call void @__writew(i16 zeroext %conv, i8* %2) #11, !dbg !8189
  br label %sw.epilog, !dbg !8191

sw.bb1:                                           ; preds = %entry
  %3 = load i32, i32* %val.addr, align 4, !dbg !8192
  %conv2 = trunc i32 %3 to i16, !dbg !8192
  %4 = load i8*, i8** %addr.addr, align 8, !dbg !8192
  call void @__writew(i16 zeroext %conv2, i8* %4) #11, !dbg !8192
  %5 = load i32, i32* %val.addr, align 4, !dbg !8193
  %shr = lshr i32 %5, 16, !dbg !8193
  %conv3 = trunc i32 %shr to i16, !dbg !8193
  %6 = load i8*, i8** %addr.addr, align 8, !dbg !8193
  %add.ptr = getelementptr i8, i8* %6, i64 2, !dbg !8193
  call void @__writew(i16 zeroext %conv3, i8* %add.ptr) #11, !dbg !8193
  br label %sw.epilog, !dbg !8194

sw.bb4:                                           ; preds = %entry
  %7 = load i32, i32* %val.addr, align 4, !dbg !8195
  %8 = load i8*, i8** %addr.addr, align 8, !dbg !8195
  call void @__writel(i32 %7, i8* %8) #11, !dbg !8195
  br label %sw.epilog, !dbg !8196

sw.default:                                       ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8197, metadata !DIExpression()), !dbg !8199
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !8199
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !8200
  %tobool = icmp ne i32 %9, 0, !dbg !8200
  %lnot = xor i1 %tobool, true, !dbg !8200
  %lnot5 = xor i1 %lnot, true, !dbg !8200
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !8200
  %conv6 = sext i32 %lnot.ext to i64, !dbg !8200
  %tobool7 = icmp ne i64 %conv6, 0, !dbg !8200
  br i1 %tobool7, label %if.then, label %if.end, !dbg !8199

if.then:                                          ; preds = %sw.default
  br label %do.body, !dbg !8200

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !8202

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !8204

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !8202

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i32 324, i32 2305, i64 12) #8, !dbg !8206, !srcloc !8208
  br label %do.end10, !dbg !8206

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 244) #8, !dbg !8209, !srcloc !8211
  br label %do.body11, !dbg !8202

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !8212

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !8202

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !8202

if.end:                                           ; preds = %do.end13, %sw.default
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !8199
  %tobool14 = icmp ne i32 %10, 0, !dbg !8199
  %lnot15 = xor i1 %tobool14, true, !dbg !8199
  %lnot17 = xor i1 %lnot15, true, !dbg !8199
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !8199
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !8199
  store i64 %conv19, i64* %tmp, align 8, !dbg !8200
  %11 = load i64, i64* %tmp, align 8, !dbg !8199
  br label %sw.epilog, !dbg !8214

sw.epilog:                                        ; preds = %if.end, %sw.bb4, %sw.bb1, %sw.bb
  ret void, !dbg !8215
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__writew(i16 zeroext %val, i8* %addr) #0 !dbg !8216 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !8221, metadata !DIExpression()), !dbg !8222
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8223, metadata !DIExpression()), !dbg !8222
  %0 = load i16, i16* %val.addr, align 2, !dbg !8222
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !8222
  %2 = bitcast i8* %1 to i16*, !dbg !8222
  call void asm sideeffect "movw $0,$1", "r,*m,~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #8, !dbg !8222, !srcloc !8224
  ret void, !dbg !8222
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__writel(i32 %val, i8* %addr) #0 !dbg !8225 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8228, metadata !DIExpression()), !dbg !8229
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8230, metadata !DIExpression()), !dbg !8229
  %0 = load i32, i32* %val.addr, align 4, !dbg !8229
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !8229
  %2 = bitcast i8* %1 to i32*, !dbg !8229
  call void asm sideeffect "movl $0,$1", "r,*m,~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #8, !dbg !8229, !srcloc !8231
  ret void, !dbg !8229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_cookie_complete(%struct.dma_async_tx_descriptor* %tx) #0 !dbg !8232 {
entry:
  %tx.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  store %struct.dma_async_tx_descriptor* %tx, %struct.dma_async_tx_descriptor** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %tx.addr, metadata !8236, metadata !DIExpression()), !dbg !8237
  br label %do.body, !dbg !8238

do.body:                                          ; preds = %entry
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !8239
  %cookie = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %0, i32 0, i32 0, !dbg !8239
  %1 = load i32, i32* %cookie, align 8, !dbg !8239
  %cmp = icmp slt i32 %1, 1, !dbg !8239
  %lnot = xor i1 %cmp, true, !dbg !8239
  %lnot1 = xor i1 %lnot, true, !dbg !8239
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8239
  %conv = sext i32 %lnot.ext to i64, !dbg !8239
  %tobool = icmp ne i64 %conv, 0, !dbg !8239
  br i1 %tobool, label %if.then, label %if.end, !dbg !8242

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !8239

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !8243

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !8245

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !8243

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i32 54, i32 0, i64 12) #8, !dbg !8247, !srcloc !8249
  br label %do.end5, !dbg !8247

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !8243

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 235) #8, !dbg !8250, !srcloc !8253
  unreachable, !dbg !8254

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !8243

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !8243

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !8242

do.end9:                                          ; preds = %if.end
  %2 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !8255
  %cookie10 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %2, i32 0, i32 0, !dbg !8256
  %3 = load i32, i32* %cookie10, align 8, !dbg !8256
  %4 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !8257
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %4, i32 0, i32 3, !dbg !8258
  %5 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !8258
  %completed_cookie = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %5, i32 0, i32 3, !dbg !8259
  store i32 %3, i32* %completed_cookie, align 4, !dbg !8260
  %6 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !8261
  %cookie11 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %6, i32 0, i32 0, !dbg !8262
  store i32 0, i32* %cookie11, align 8, !dbg !8263
  ret void, !dbg !8264
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !8265 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8266, metadata !DIExpression()), !dbg !8267
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8268, metadata !DIExpression()), !dbg !8269
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8270
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8271
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8272
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8272
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8273
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !8274
  ret void, !dbg !8275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8276 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8279, metadata !DIExpression()), !dbg !8280
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8285
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8287
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8288
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !8289
  br i1 %call, label %if.end, label %if.then, !dbg !8290

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !8291

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8292
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8293
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !8294
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !8295
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8296
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8297
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !8298
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !8299
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8300
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8301
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !8302
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !8303
  br label %do.body, !dbg !8304

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !8305

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !8307

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !8305

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8309
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8309
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !8309
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !8309
  br label %do.end7, !dbg !8309

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !8305

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !8311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8312 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8315, metadata !DIExpression()), !dbg !8316
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8317, metadata !DIExpression()), !dbg !8318
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8319, metadata !DIExpression()), !dbg !8320
  ret i1 true, !dbg !8321
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_start(%struct.omap_chan* %c, %struct.omap_desc* %d) #0 !dbg !8322 {
entry:
  %c.addr = alloca %struct.omap_chan*, align 8
  %d.addr = alloca %struct.omap_desc*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %cicr = alloca i16, align 2
  %cdp = alloca i32, align 4
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !8323, metadata !DIExpression()), !dbg !8324
  store %struct.omap_desc* %d, %struct.omap_desc** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d.addr, metadata !8325, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !8327, metadata !DIExpression()), !dbg !8328
  %0 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8329
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %0, i32 0, i32 0, !dbg !8330
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 0, !dbg !8331
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan, i32 0, i32 0, !dbg !8332
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !8332
  %call = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %1) #11, !dbg !8333
  store %struct.omap_dmadev* %call, %struct.omap_dmadev** %od, align 8, !dbg !8328
  call void @llvm.dbg.declare(metadata i16* %cicr, metadata !8334, metadata !DIExpression()), !dbg !8335
  %2 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !8336
  %cicr1 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %2, i32 0, i32 10, !dbg !8337
  %3 = load i16, i16* %cicr1, align 2, !dbg !8337
  store i16 %3, i16* %cicr, align 2, !dbg !8335
  %4 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !8338
  %plat = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %4, i32 0, i32 4, !dbg !8338
  %5 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat, align 8, !dbg !8338
  %dma_attr = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %5, i32 0, i32 2, !dbg !8338
  %6 = load %struct.omap_dma_dev_attr*, %struct.omap_dma_dev_attr** %dma_attr, align 8, !dbg !8338
  %dev_caps = getelementptr inbounds %struct.omap_dma_dev_attr, %struct.omap_dma_dev_attr* %6, i32 0, i32 0, !dbg !8338
  %7 = load i32, i32* %dev_caps, align 4, !dbg !8338
  %conv = zext i32 %7 to i64, !dbg !8338
  %and = and i64 %conv, 64, !dbg !8338
  %tobool = icmp ne i64 %and, 0, !dbg !8338
  br i1 %tobool, label %if.then, label %if.else, !dbg !8340

if.then:                                          ; preds = %entry
  %8 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8341
  call void @omap_dma_chan_write(%struct.omap_chan* %8, i32 29, i32 0) #11, !dbg !8342
  br label %if.end, !dbg !8342

if.else:                                          ; preds = %entry
  %9 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8343
  call void @omap_dma_chan_write(%struct.omap_chan* %9, i32 41, i32 0) #11, !dbg !8344
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8345
  call void @omap_dma_clear_csr(%struct.omap_chan* %10) #11, !dbg !8346
  %11 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !8347
  %using_ll = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %11, i32 0, i32 1, !dbg !8349
  %12 = load i8, i8* %using_ll, align 8, !dbg !8349
  %tobool2 = trunc i8 %12 to i1, !dbg !8349
  br i1 %tobool2, label %if.then3, label %if.else13, !dbg !8350

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %cdp, metadata !8351, metadata !DIExpression()), !dbg !8353
  store i32 1312, i32* %cdp, align 4, !dbg !8353
  %13 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !8354
  %dir = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %13, i32 0, i32 2, !dbg !8356
  %14 = load i32, i32* %dir, align 4, !dbg !8356
  %cmp = icmp eq i32 %14, 2, !dbg !8357
  br i1 %cmp, label %if.then5, label %if.else6, !dbg !8358

if.then5:                                         ; preds = %if.then3
  %15 = load i32, i32* %cdp, align 4, !dbg !8359
  %or = or i32 %15, 9, !dbg !8359
  store i32 %or, i32* %cdp, align 4, !dbg !8359
  br label %if.end8, !dbg !8360

if.else6:                                         ; preds = %if.then3
  %16 = load i32, i32* %cdp, align 4, !dbg !8361
  %or7 = or i32 %16, 6, !dbg !8361
  store i32 %or7, i32* %cdp, align 4, !dbg !8361
  br label %if.end8

if.end8:                                          ; preds = %if.else6, %if.then5
  %17 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8362
  %18 = load i32, i32* %cdp, align 4, !dbg !8363
  call void @omap_dma_chan_write(%struct.omap_chan* %17, i32 50, i32 %18) #11, !dbg !8364
  %19 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8365
  %20 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !8366
  %sg = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %20, i32 0, i32 13, !dbg !8367
  %arrayidx = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg, i64 0, i64 0, !dbg !8366
  %t2_desc_paddr = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx, i32 0, i32 6, !dbg !8368
  %21 = load i64, i64* %t2_desc_paddr, align 8, !dbg !8368
  %conv9 = trunc i64 %21 to i32, !dbg !8366
  call void @omap_dma_chan_write(%struct.omap_chan* %19, i32 51, i32 %conv9) #11, !dbg !8369
  %22 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8370
  call void @omap_dma_chan_write(%struct.omap_chan* %22, i32 52, i32 0) #11, !dbg !8371
  %23 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8372
  call void @omap_dma_chan_write(%struct.omap_chan* %23, i32 49, i32 65535) #11, !dbg !8373
  %24 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8374
  call void @omap_dma_chan_write(%struct.omap_chan* %24, i32 48, i32 16777215) #11, !dbg !8375
  %25 = load i16, i16* %cicr, align 2, !dbg !8376
  %conv10 = zext i16 %25 to i32, !dbg !8376
  %and11 = and i32 %conv10, -33, !dbg !8376
  %conv12 = trunc i32 %and11 to i16, !dbg !8376
  store i16 %conv12, i16* %cicr, align 2, !dbg !8376
  br label %if.end17, !dbg !8377

if.else13:                                        ; preds = %if.end
  %26 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !8378
  %ll123_supported = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %26, i32 0, i32 12, !dbg !8380
  %27 = load i8, i8* %ll123_supported, align 1, !dbg !8380
  %tobool14 = trunc i8 %27 to i1, !dbg !8380
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !8381

if.then15:                                        ; preds = %if.else13
  %28 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8382
  call void @omap_dma_chan_write(%struct.omap_chan* %28, i32 50, i32 0) #11, !dbg !8384
  br label %if.end16, !dbg !8385

if.end16:                                         ; preds = %if.then15, %if.else13
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end8
  %29 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8386
  %30 = load i16, i16* %cicr, align 2, !dbg !8387
  %conv18 = zext i16 %30 to i32, !dbg !8387
  call void @omap_dma_chan_write(%struct.omap_chan* %29, i32 34, i32 %conv18) #11, !dbg !8388
  %31 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8389
  %32 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !8390
  %ccr = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %32, i32 0, i32 8, !dbg !8391
  %33 = load i32, i32* %ccr, align 4, !dbg !8391
  %or19 = or i32 %33, 128, !dbg !8392
  call void @omap_dma_chan_write(%struct.omap_chan* %31, i32 33, i32 %or19) #11, !dbg !8393
  %34 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8394
  %running = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %34, i32 0, i32 8, !dbg !8395
  store i8 1, i8* %running, align 2, !dbg !8396
  ret void, !dbg !8397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_clear_csr(%struct.omap_chan* %c) #0 !dbg !8398 {
entry:
  %c.addr = alloca %struct.omap_chan*, align 8
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !8399, metadata !DIExpression()), !dbg !8400
  %0 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8401
  %call = call i32 @omap_dma_chan_read(%struct.omap_chan* %0, i32 35) #11, !dbg !8403
  ret void, !dbg !8404
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_chan_read(%struct.omap_chan* %c, i32 %reg) #0 !dbg !8405 {
entry:
  %c.addr = alloca %struct.omap_chan*, align 8
  %reg.addr = alloca i32, align 4
  %r = alloca %struct.omap_dma_reg*, align 8
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !8408, metadata !DIExpression()), !dbg !8409
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !8410, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.declare(metadata %struct.omap_dma_reg** %r, metadata !8412, metadata !DIExpression()), !dbg !8413
  %0 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8414
  %reg_map = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %0, i32 0, i32 2, !dbg !8415
  %1 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %reg_map, align 8, !dbg !8415
  %2 = load i32, i32* %reg.addr, align 4, !dbg !8416
  %idx.ext = zext i32 %2 to i64, !dbg !8417
  %add.ptr = getelementptr %struct.omap_dma_reg, %struct.omap_dma_reg* %1, i64 %idx.ext, !dbg !8417
  store %struct.omap_dma_reg* %add.ptr, %struct.omap_dma_reg** %r, align 8, !dbg !8413
  %3 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %r, align 8, !dbg !8418
  %type = getelementptr inbounds %struct.omap_dma_reg, %struct.omap_dma_reg* %3, i32 0, i32 2, !dbg !8419
  %4 = load i8, i8* %type, align 1, !dbg !8419
  %conv = zext i8 %4 to i32, !dbg !8418
  %5 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8420
  %channel_base = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %5, i32 0, i32 1, !dbg !8421
  %6 = load i8*, i8** %channel_base, align 8, !dbg !8421
  %7 = load %struct.omap_dma_reg*, %struct.omap_dma_reg** %r, align 8, !dbg !8422
  %offset = getelementptr inbounds %struct.omap_dma_reg, %struct.omap_dma_reg* %7, i32 0, i32 0, !dbg !8423
  %8 = load i16, i16* %offset, align 2, !dbg !8423
  %conv1 = zext i16 %8 to i32, !dbg !8422
  %idx.ext2 = sext i32 %conv1 to i64, !dbg !8424
  %add.ptr3 = getelementptr i8, i8* %6, i64 %idx.ext2, !dbg !8424
  %call = call i32 @omap_dma_read(i32 %conv, i8* %add.ptr3) #11, !dbg !8425
  ret i32 %call, !dbg !8426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_read(i32 %type, i8* %addr) #0 !dbg !8427 {
entry:
  %type.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  %val = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8430, metadata !DIExpression()), !dbg !8431
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8432, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8434, metadata !DIExpression()), !dbg !8435
  %0 = load i32, i32* %type.addr, align 4, !dbg !8436
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb6
  ], !dbg !8437

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !8438
  %call = call zeroext i16 @__readw(i8* %1) #11, !dbg !8438
  %conv = zext i16 %call to i32, !dbg !8438
  store i32 %conv, i32* %val, align 4, !dbg !8440
  br label %sw.epilog, !dbg !8441

sw.bb1:                                           ; preds = %entry
  %2 = load i8*, i8** %addr.addr, align 8, !dbg !8442
  %call2 = call zeroext i16 @__readw(i8* %2) #11, !dbg !8442
  %conv3 = zext i16 %call2 to i32, !dbg !8442
  store i32 %conv3, i32* %val, align 4, !dbg !8443
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !8444
  %add.ptr = getelementptr i8, i8* %3, i64 2, !dbg !8444
  %call4 = call zeroext i16 @__readw(i8* %add.ptr) #11, !dbg !8444
  %conv5 = zext i16 %call4 to i32, !dbg !8444
  %shl = shl i32 %conv5, 16, !dbg !8445
  %4 = load i32, i32* %val, align 4, !dbg !8446
  %or = or i32 %4, %shl, !dbg !8446
  store i32 %or, i32* %val, align 4, !dbg !8446
  br label %sw.epilog, !dbg !8447

sw.bb6:                                           ; preds = %entry
  %5 = load i8*, i8** %addr.addr, align 8, !dbg !8448
  %call7 = call i32 @__readl(i8* %5) #11, !dbg !8448
  store i32 %call7, i32* %val, align 4, !dbg !8449
  br label %sw.epilog, !dbg !8450

sw.default:                                       ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8451, metadata !DIExpression()), !dbg !8453
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !8453
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !8454
  %tobool = icmp ne i32 %6, 0, !dbg !8454
  %lnot = xor i1 %tobool, true, !dbg !8454
  %lnot8 = xor i1 %lnot, true, !dbg !8454
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !8454
  %conv9 = sext i32 %lnot.ext to i64, !dbg !8454
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !8454
  br i1 %tobool10, label %if.then, label %if.end, !dbg !8453

if.then:                                          ; preds = %sw.default
  br label %do.body, !dbg !8454

do.body:                                          ; preds = %if.then
  br label %do.body11, !dbg !8456

do.body11:                                        ; preds = %do.body
  br label %do.end, !dbg !8458

do.end:                                           ; preds = %do.body11
  br label %do.body12, !dbg !8456

do.body12:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i32 344, i32 2305, i64 12) #8, !dbg !8460, !srcloc !8462
  br label %do.end13, !dbg !8460

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 245) #8, !dbg !8463, !srcloc !8465
  br label %do.body14, !dbg !8456

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !8466

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !8456

do.end16:                                         ; preds = %do.end15
  br label %if.end, !dbg !8456

if.end:                                           ; preds = %do.end16, %sw.default
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !8453
  %tobool17 = icmp ne i32 %7, 0, !dbg !8453
  %lnot18 = xor i1 %tobool17, true, !dbg !8453
  %lnot20 = xor i1 %lnot18, true, !dbg !8453
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !8453
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !8453
  store i64 %conv22, i64* %tmp, align 8, !dbg !8454
  %8 = load i64, i64* %tmp, align 8, !dbg !8453
  store i32 0, i32* %val, align 4, !dbg !8468
  br label %sw.epilog, !dbg !8469

sw.epilog:                                        ; preds = %if.end, %sw.bb6, %sw.bb1, %sw.bb
  %9 = load i32, i32* %val, align 4, !dbg !8470
  ret i32 %9, !dbg !8471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @__readw(i8* %addr) #0 !dbg !8472 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8475, metadata !DIExpression()), !dbg !8476
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !8477, metadata !DIExpression()), !dbg !8476
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !8476
  %1 = bitcast i8* %0 to i16*, !dbg !8476
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i16* %1) #8, !dbg !8476, !srcloc !8478
  store i16 %2, i16* %ret, align 2, !dbg !8476
  %3 = load i16, i16* %ret, align 2, !dbg !8476
  ret i16 %3, !dbg !8476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__readl(i8* %addr) #0 !dbg !8479 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8482, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8484, metadata !DIExpression()), !dbg !8483
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !8483
  %1 = bitcast i8* %0 to i32*, !dbg !8483
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* %1) #8, !dbg !8483, !srcloc !8485
  store i32 %2, i32* %ret, align 4, !dbg !8483
  %3 = load i32, i32* %ret, align 4, !dbg !8483
  ret i32 %3, !dbg !8483
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !8486 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !8487, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8489, metadata !DIExpression()), !dbg !8491
  %0 = load i64, i64* %__edi, align 8, !dbg !8491
  store i64 %0, i64* %__edi, align 8, !dbg !8491
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8492, metadata !DIExpression()), !dbg !8491
  %1 = load i64, i64* %__esi, align 8, !dbg !8491
  store i64 %1, i64* %__esi, align 8, !dbg !8491
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8493, metadata !DIExpression()), !dbg !8491
  %2 = load i64, i64* %__edx, align 8, !dbg !8491
  store i64 %2, i64* %__edx, align 8, !dbg !8491
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8494, metadata !DIExpression()), !dbg !8491
  %3 = load i64, i64* %__ecx, align 8, !dbg !8491
  store i64 %3, i64* %__ecx, align 8, !dbg !8491
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8495, metadata !DIExpression()), !dbg !8491
  %4 = load i64, i64* %__eax, align 8, !dbg !8491
  store i64 %4, i64* %__eax, align 8, !dbg !8491
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !8491
  %6 = call i64 @llvm.read_register.i64(metadata !4619), !dbg !8491
  %7 = load i64, i64* %f.addr, align 8, !dbg !8491
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #8, !dbg !8491, !srcloc !8496
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !8491
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !8491
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8491
  call void @llvm.write_register.i64(metadata !4619, i64 %asmresult1), !dbg !8491
  ret void, !dbg !8497
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local i64 @find_first_zero_bit(i64*, i64) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_clear_lch(%struct.omap_dmadev* %od, i32 %lch) #0 !dbg !8498 {
entry:
  %od.addr = alloca %struct.omap_dmadev*, align 8
  %lch.addr = alloca i32, align 4
  %c = alloca %struct.omap_chan*, align 8
  %i = alloca i32, align 4
  store %struct.omap_dmadev* %od, %struct.omap_dmadev** %od.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od.addr, metadata !8501, metadata !DIExpression()), !dbg !8502
  store i32 %lch, i32* %lch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lch.addr, metadata !8503, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !8505, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8507, metadata !DIExpression()), !dbg !8508
  %0 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !8509
  %lch_map = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %0, i32 0, i32 17, !dbg !8510
  %1 = load %struct.omap_chan**, %struct.omap_chan*** %lch_map, align 8, !dbg !8510
  %2 = load i32, i32* %lch.addr, align 4, !dbg !8511
  %idxprom = sext i32 %2 to i64, !dbg !8509
  %arrayidx = getelementptr %struct.omap_chan*, %struct.omap_chan** %1, i64 %idxprom, !dbg !8509
  %3 = load %struct.omap_chan*, %struct.omap_chan** %arrayidx, align 8, !dbg !8509
  store %struct.omap_chan* %3, %struct.omap_chan** %c, align 8, !dbg !8512
  %4 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !8513
  %tobool = icmp ne %struct.omap_chan* %4, null, !dbg !8513
  br i1 %tobool, label %if.end, label %if.then, !dbg !8515

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !8516

if.end:                                           ; preds = %entry
  store i32 32, i32* %i, align 4, !dbg !8517
  br label %for.cond, !dbg !8519

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !8520
  %6 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !8522
  %cfg = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %6, i32 0, i32 5, !dbg !8523
  %7 = load %struct.omap_dma_config*, %struct.omap_dma_config** %cfg, align 8, !dbg !8523
  %lch_end = getelementptr inbounds %struct.omap_dma_config, %struct.omap_dma_config* %7, i32 0, i32 0, !dbg !8524
  %8 = load i32, i32* %lch_end, align 4, !dbg !8524
  %cmp = icmp sle i32 %5, %8, !dbg !8525
  br i1 %cmp, label %for.body, label %for.end, !dbg !8526

for.body:                                         ; preds = %for.cond
  %9 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !8527
  %10 = load i32, i32* %i, align 4, !dbg !8528
  call void @omap_dma_chan_write(%struct.omap_chan* %9, i32 %10, i32 0) #11, !dbg !8529
  br label %for.inc, !dbg !8529

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !8530
  %inc = add i32 %11, 1, !dbg !8530
  store i32 %inc, i32* %i, align 4, !dbg !8530
  br label %for.cond, !dbg !8531, !llvm.loop !8532

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !8534
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !8535 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8536, metadata !DIExpression()), !dbg !8538
  %0 = load i64, i64* %__edi, align 8, !dbg !8538
  store i64 %0, i64* %__edi, align 8, !dbg !8538
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8539, metadata !DIExpression()), !dbg !8538
  %1 = load i64, i64* %__esi, align 8, !dbg !8538
  store i64 %1, i64* %__esi, align 8, !dbg !8538
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8540, metadata !DIExpression()), !dbg !8538
  %2 = load i64, i64* %__edx, align 8, !dbg !8538
  store i64 %2, i64* %__edx, align 8, !dbg !8538
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8541, metadata !DIExpression()), !dbg !8538
  %3 = load i64, i64* %__ecx, align 8, !dbg !8538
  store i64 %3, i64* %__ecx, align 8, !dbg !8538
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8542, metadata !DIExpression()), !dbg !8538
  %4 = load i64, i64* %__eax, align 8, !dbg !8538
  store i64 %4, i64* %__eax, align 8, !dbg !8538
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !8538
  %6 = call i64 @llvm.read_register.i64(metadata !4619), !dbg !8538
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #8, !dbg !8538, !srcloc !8543
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8538
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8538
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8538
  call void @llvm.write_register.i64(metadata !4619, i64 %asmresult1), !dbg !8538
  ret void, !dbg !8544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_free_chan_resources(%struct.virt_dma_chan* %vc) #0 !dbg !8545 {
entry:
  %lock.addr.i33 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i33, metadata !5490, metadata !DIExpression()), !dbg !8548
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5496, metadata !DIExpression()), !dbg !8550
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !8551
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %vd = alloca %struct.virt_dma_desc*, align 8
  %flags = alloca i64, align 8
  %head = alloca %struct.list_head, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp22 = alloca %struct.virt_dma_desc*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.virt_dma_desc*, align 8
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !8558, metadata !DIExpression()), !dbg !8559
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd, metadata !8560, metadata !DIExpression()), !dbg !8561
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8562, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.declare(metadata %struct.list_head* %head, metadata !8564, metadata !DIExpression()), !dbg !8565
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0, !dbg !8565
  store %struct.list_head* %head, %struct.list_head** %next, align 8, !dbg !8565
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1, !dbg !8565
  store %struct.list_head* %head, %struct.list_head** %prev, align 8, !dbg !8565
  br label %do.body, !dbg !8566

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8567

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8568, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8571, metadata !DIExpression()), !dbg !8570
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8570
  %conv = zext i1 %cmp to i32, !dbg !8570
  store i32 1, i32* %tmp, align 4, !dbg !8570
  %0 = load i32, i32* %tmp, align 4, !dbg !8570
  br label %do.body2, !dbg !8572

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8573

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8574

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8576, metadata !DIExpression()), !dbg !8579
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8580, metadata !DIExpression()), !dbg !8579
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8579
  %conv8 = zext i1 %cmp7 to i32, !dbg !8579
  store i32 1, i32* %tmp9, align 4, !dbg !8579
  %1 = load i32, i32* %tmp9, align 4, !dbg !8579
  %call = call i64 @arch_local_irq_save() #11, !dbg !8581
  store i64 %call, i64* %flags, align 8, !dbg !8581
  br label %do.end, !dbg !8581

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8574

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8573

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8582, !srcloc !8583
  br label %do.body12, !dbg !8582

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !8584
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %2, i32 0, i32 3, !dbg !8584
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8585
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8586
  %rlock.i = bitcast %union.anon.3* %4 to %struct.raw_spinlock*, !dbg !8586
  br label %do.end14, !dbg !8584

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8582

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8573

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8572

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8567

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !8587
  call void @vchan_get_all_descriptors(%struct.virt_dma_chan* %5, %struct.list_head* %head) #11, !dbg !8588
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8589, metadata !DIExpression()), !dbg !8592
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0, !dbg !8592
  %6 = load %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !8592
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !8592
  store i8* %7, i8** %__mptr, align 8, !dbg !8592
  br label %do.body20, !dbg !8592

do.body20:                                        ; preds = %do.end18
  br label %do.end21, !dbg !8593

do.end21:                                         ; preds = %do.body20
  %8 = load i8*, i8** %__mptr, align 8, !dbg !8592
  %add.ptr = getelementptr i8, i8* %8, i64 -96, !dbg !8592
  %9 = bitcast i8* %add.ptr to %struct.virt_dma_desc*, !dbg !8592
  store %struct.virt_dma_desc* %9, %struct.virt_dma_desc** %tmp22, align 8, !dbg !8593
  %10 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %tmp22, align 8, !dbg !8592
  store %struct.virt_dma_desc* %10, %struct.virt_dma_desc** %vd, align 8, !dbg !8595
  br label %for.cond, !dbg !8595

for.cond:                                         ; preds = %do.end29, %do.end21
  %11 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !8596
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %11, i32 0, i32 2, !dbg !8596
  %cmp23 = icmp eq %struct.list_head* %node, %head, !dbg !8596
  %lnot = xor i1 %cmp23, true, !dbg !8596
  br i1 %lnot, label %for.body, label %for.end, !dbg !8595

for.body:                                         ; preds = %for.cond
  %12 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !8598
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %12, i32 0, i32 0, !dbg !8599
  call void @dmaengine_desc_clear_reuse(%struct.dma_async_tx_descriptor* %tx) #11, !dbg !8600
  br label %for.inc, !dbg !8600

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !8601, metadata !DIExpression()), !dbg !8603
  %13 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd, align 8, !dbg !8603
  %node26 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %13, i32 0, i32 2, !dbg !8603
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %node26, i32 0, i32 0, !dbg !8603
  %14 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !8603
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !8603
  store i8* %15, i8** %__mptr25, align 8, !dbg !8603
  br label %do.body28, !dbg !8603

do.body28:                                        ; preds = %for.inc
  br label %do.end29, !dbg !8604

do.end29:                                         ; preds = %do.body28
  %16 = load i8*, i8** %__mptr25, align 8, !dbg !8603
  %add.ptr31 = getelementptr i8, i8* %16, i64 -96, !dbg !8603
  %17 = bitcast i8* %add.ptr31 to %struct.virt_dma_desc*, !dbg !8603
  store %struct.virt_dma_desc* %17, %struct.virt_dma_desc** %tmp30, align 8, !dbg !8604
  %18 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %tmp30, align 8, !dbg !8603
  store %struct.virt_dma_desc* %18, %struct.virt_dma_desc** %vd, align 8, !dbg !8596
  br label %for.cond, !dbg !8596, !llvm.loop !8606

for.end:                                          ; preds = %for.cond
  %19 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !8608
  %lock32 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %19, i32 0, i32 3, !dbg !8609
  %20 = load i64, i64* %flags, align 8, !dbg !8610
  store %struct.spinlock* %lock32, %struct.spinlock** %lock.addr.i33, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !437, metadata !5672, metadata !DIExpression()) #8, !dbg !8611
  call void @llvm.dbg.declare(metadata !437, metadata !5676, metadata !DIExpression()) #8, !dbg !8611
  store i32 1, i32* %tmp.i, align 4, !dbg !8611
  %21 = load i32, i32* %tmp.i, align 4, !dbg !8611
  call void @llvm.dbg.declare(metadata !437, metadata !5677, metadata !DIExpression()) #8, !dbg !8612
  call void @llvm.dbg.declare(metadata !437, metadata !5683, metadata !DIExpression()) #8, !dbg !8612
  store i32 1, i32* %tmp8.i, align 4, !dbg !8612
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !8612
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !8613
  call void @arch_local_irq_restore(i64 %23) #13, !dbg !8613
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8614, !srcloc !5687
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i33, align 8, !dbg !8615
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !8615
  %rlock.i34 = bitcast %union.anon.3* %25 to %struct.raw_spinlock*, !dbg !8615
  %26 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !8616
  call void @vchan_dma_desc_free_list(%struct.virt_dma_chan* %26, %struct.list_head* %head) #11, !dbg !8617
  ret void, !dbg !8618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_free_dma(i32 %ch) #0 !dbg !8619 {
entry:
  %ch.addr = alloca i32, align 4
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !8620, metadata !DIExpression()), !dbg !8621
  ret void, !dbg !8622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_put_lch(%struct.omap_dmadev* %od, i32 %lch) #0 !dbg !8623 {
entry:
  %od.addr = alloca %struct.omap_dmadev*, align 8
  %lch.addr = alloca i32, align 4
  store %struct.omap_dmadev* %od, %struct.omap_dmadev** %od.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od.addr, metadata !8624, metadata !DIExpression()), !dbg !8625
  store i32 %lch, i32* %lch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lch.addr, metadata !8626, metadata !DIExpression()), !dbg !8627
  %0 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !8628
  %1 = load i32, i32* %lch.addr, align 4, !dbg !8629
  call void @omap_dma_clear_lch(%struct.omap_dmadev* %0, i32 %1) #11, !dbg !8630
  %2 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !8631
  %lch_lock = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %2, i32 0, i32 10, !dbg !8632
  call void @mutex_lock(%struct.mutex* %lch_lock) #11, !dbg !8633
  %3 = load i32, i32* %lch.addr, align 4, !dbg !8634
  %conv = sext i32 %3 to i64, !dbg !8634
  %4 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !8635
  %lch_bitmap = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %4, i32 0, i32 9, !dbg !8636
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %lch_bitmap, i64 0, i64 0, !dbg !8635
  call void @clear_bit(i64 %conv, i64* %arraydecay) #11, !dbg !8637
  %5 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !8638
  %lch_lock1 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %5, i32 0, i32 10, !dbg !8639
  call void @mutex_unlock(%struct.mutex* %lch_lock1) #11, !dbg !8640
  ret void, !dbg !8641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_get_all_descriptors(%struct.virt_dma_chan* %vc, %struct.list_head* %head) #0 !dbg !8642 {
entry:
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !8645, metadata !DIExpression()), !dbg !8646
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8647, metadata !DIExpression()), !dbg !8648
  %0 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !8649
  %desc_allocated = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %0, i32 0, i32 4, !dbg !8650
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8651
  call void @list_splice_tail_init(%struct.list_head* %desc_allocated, %struct.list_head* %1) #11, !dbg !8652
  %2 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !8653
  %desc_submitted = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %2, i32 0, i32 5, !dbg !8654
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8655
  call void @list_splice_tail_init(%struct.list_head* %desc_submitted, %struct.list_head* %3) #11, !dbg !8656
  %4 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !8657
  %desc_issued = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %4, i32 0, i32 6, !dbg !8658
  %5 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8659
  call void @list_splice_tail_init(%struct.list_head* %desc_issued, %struct.list_head* %5) #11, !dbg !8660
  %6 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !8661
  %desc_completed = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %6, i32 0, i32 7, !dbg !8662
  %7 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8663
  call void @list_splice_tail_init(%struct.list_head* %desc_completed, %struct.list_head* %7) #11, !dbg !8664
  %8 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !8665
  %desc_terminated = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %8, i32 0, i32 8, !dbg !8666
  %9 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8667
  call void @list_splice_tail_init(%struct.list_head* %desc_terminated, %struct.list_head* %9) #11, !dbg !8668
  ret void, !dbg !8669
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dmaengine_desc_clear_reuse(%struct.dma_async_tx_descriptor* %tx) #0 !dbg !8670 {
entry:
  %tx.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  store %struct.dma_async_tx_descriptor* %tx, %struct.dma_async_tx_descriptor** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %tx.addr, metadata !8671, metadata !DIExpression()), !dbg !8672
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %tx.addr, align 8, !dbg !8673
  %flags = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %0, i32 0, i32 1, !dbg !8674
  %1 = load i32, i32* %flags, align 4, !dbg !8675
  %and = and i32 %1, -65, !dbg !8675
  store i32 %and, i32* %flags, align 4, !dbg !8675
  ret void, !dbg !8676
}

; Function Attrs: noredzone
declare dso_local void @vchan_dma_desc_free_list(%struct.virt_dma_chan*, %struct.list_head*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice_tail_init(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !8677 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8678, metadata !DIExpression()), !dbg !8679
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8680, metadata !DIExpression()), !dbg !8681
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8682
  %call = call i32 @list_empty(%struct.list_head* %0) #11, !dbg !8684
  %tobool = icmp ne i32 %call, 0, !dbg !8684
  br i1 %tobool, label %if.end, label %if.then, !dbg !8685

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8686
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8688
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !8689
  %3 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8689
  %4 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8690
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %3, %struct.list_head* %4) #11, !dbg !8691
  %5 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8692
  call void @INIT_LIST_HEAD(%struct.list_head* %5) #11, !dbg !8693
  br label %if.end, !dbg !8694

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !8696 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8701, metadata !DIExpression()), !dbg !8702
  br label %do.body, !dbg !8703

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8705

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8703
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !8703
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8703
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !8705
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !8703
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8707
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !8708
  %conv = zext i1 %cmp to i32, !dbg !8708
  ret i32 %conv, !dbg !8709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_splice(%struct.list_head* %list, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8710 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %first = alloca %struct.list_head*, align 8
  %last = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8713, metadata !DIExpression()), !dbg !8714
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8715, metadata !DIExpression()), !dbg !8716
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8717, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.declare(metadata %struct.list_head** %first, metadata !8719, metadata !DIExpression()), !dbg !8720
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8721
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !8722
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !8722
  store %struct.list_head* %1, %struct.list_head** %first, align 8, !dbg !8720
  call void @llvm.dbg.declare(metadata %struct.list_head** %last, metadata !8723, metadata !DIExpression()), !dbg !8724
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8725
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !8726
  %3 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !8726
  store %struct.list_head* %3, %struct.list_head** %last, align 8, !dbg !8724
  %4 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8727
  %5 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !8728
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 1, !dbg !8729
  store %struct.list_head* %4, %struct.list_head** %prev3, align 8, !dbg !8730
  %6 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !8731
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8732
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !8733
  store %struct.list_head* %6, %struct.list_head** %next4, align 8, !dbg !8734
  %8 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8735
  %9 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !8736
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !8737
  store %struct.list_head* %8, %struct.list_head** %next5, align 8, !dbg !8738
  %10 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !8739
  %11 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8740
  %prev6 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 1, !dbg !8741
  store %struct.list_head* %10, %struct.list_head** %prev6, align 8, !dbg !8742
  ret void, !dbg !8743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !8744 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8745, metadata !DIExpression()), !dbg !8747
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8749, metadata !DIExpression()), !dbg !8750
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7503, metadata !DIExpression()), !dbg !8751
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7513, metadata !DIExpression()), !dbg !8753
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8754, metadata !DIExpression()), !dbg !8755
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8756, metadata !DIExpression()), !dbg !8757
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8758
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8759
  %div = sdiv i64 %1, 64, !dbg !8759
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8760
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8758
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8761
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8762
  %conv.i = trunc i64 %4 to i32, !dbg !8762
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !8763
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8764
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8764
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !8764
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8765
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8766
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !8767
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !8769
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !8770

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !8771
  %12 = bitcast i64* %11 to i8*, !dbg !8771
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8771
  %shr.i = ashr i64 %13, 3, !dbg !8771
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !8771
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !8773
  %and.i = and i64 %14, 7, !dbg !8773
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !8773
  %shl.i = shl i32 1, %sh_prom.i, !dbg !8773
  %neg.i = xor i32 %shl.i, -1, !dbg !8774
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #8, !dbg !8775, !srcloc !8776
  br label %arch_clear_bit.exit, !dbg !8777

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !8778
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !8780
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #8, !dbg !8781, !srcloc !8782
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !8783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_cookie_status(%struct.dma_chan* %chan, i32 %cookie, %struct.dma_tx_state* %state) #0 !dbg !8784 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  %cookie.addr = alloca i32, align 4
  %state.addr = alloca %struct.dma_tx_state*, align 8
  %used = alloca i32, align 4
  %complete = alloca i32, align 4
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !8785, metadata !DIExpression()), !dbg !8786
  store i32 %cookie, i32* %cookie.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cookie.addr, metadata !8787, metadata !DIExpression()), !dbg !8788
  store %struct.dma_tx_state* %state, %struct.dma_tx_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_tx_state** %state.addr, metadata !8789, metadata !DIExpression()), !dbg !8790
  call void @llvm.dbg.declare(metadata i32* %used, metadata !8791, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.declare(metadata i32* %complete, metadata !8793, metadata !DIExpression()), !dbg !8794
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !8795
  %cookie1 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 2, !dbg !8796
  %1 = load i32, i32* %cookie1, align 8, !dbg !8796
  store i32 %1, i32* %used, align 4, !dbg !8797
  %2 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !8798
  %completed_cookie = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %2, i32 0, i32 3, !dbg !8799
  %3 = load i32, i32* %completed_cookie, align 4, !dbg !8799
  store i32 %3, i32* %complete, align 4, !dbg !8800
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8801, !srcloc !8802
  %4 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !8803
  %tobool = icmp ne %struct.dma_tx_state* %4, null, !dbg !8803
  br i1 %tobool, label %if.then, label %if.end, !dbg !8805

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %complete, align 4, !dbg !8806
  %6 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !8808
  %last = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %6, i32 0, i32 0, !dbg !8809
  store i32 %5, i32* %last, align 4, !dbg !8810
  %7 = load i32, i32* %used, align 4, !dbg !8811
  %8 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !8812
  %used2 = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %8, i32 0, i32 1, !dbg !8813
  store i32 %7, i32* %used2, align 4, !dbg !8814
  %9 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !8815
  %residue = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %9, i32 0, i32 2, !dbg !8816
  store i32 0, i32* %residue, align 4, !dbg !8817
  %10 = load %struct.dma_tx_state*, %struct.dma_tx_state** %state.addr, align 8, !dbg !8818
  %in_flight_bytes = getelementptr inbounds %struct.dma_tx_state, %struct.dma_tx_state* %10, i32 0, i32 3, !dbg !8819
  store i32 0, i32* %in_flight_bytes, align 4, !dbg !8820
  br label %if.end, !dbg !8821

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %cookie.addr, align 4, !dbg !8822
  %12 = load i32, i32* %complete, align 4, !dbg !8823
  %13 = load i32, i32* %used, align 4, !dbg !8824
  %call = call i32 @dma_async_is_complete(i32 %11, i32 %12, i32 %13) #11, !dbg !8825
  ret i32 %call, !dbg !8826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @omap_dma_get_src_pos(%struct.omap_chan* %c) #0 !dbg !8827 {
entry:
  %c.addr = alloca %struct.omap_chan*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %addr = alloca i64, align 8
  %cdac = alloca i64, align 8
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !8830, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !8832, metadata !DIExpression()), !dbg !8833
  %0 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8834
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %0, i32 0, i32 0, !dbg !8835
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 0, !dbg !8836
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan, i32 0, i32 0, !dbg !8837
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !8837
  %call = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %1) #11, !dbg !8838
  store %struct.omap_dmadev* %call, %struct.omap_dmadev** %od, align 8, !dbg !8833
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !8839, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.declare(metadata i64* %cdac, metadata !8841, metadata !DIExpression()), !dbg !8842
  %2 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !8843
  %plat = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %2, i32 0, i32 4, !dbg !8843
  %3 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat, align 8, !dbg !8843
  %dma_attr = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %3, i32 0, i32 2, !dbg !8843
  %4 = load %struct.omap_dma_dev_attr*, %struct.omap_dma_dev_attr** %dma_attr, align 8, !dbg !8843
  %dev_caps = getelementptr inbounds %struct.omap_dma_dev_attr, %struct.omap_dma_dev_attr* %4, i32 0, i32 0, !dbg !8843
  %5 = load i32, i32* %dev_caps, align 4, !dbg !8843
  %conv = zext i32 %5 to i64, !dbg !8843
  %and = and i64 %conv, 64, !dbg !8843
  %tobool = icmp ne i64 %and, 0, !dbg !8843
  br i1 %tobool, label %if.then, label %if.else, !dbg !8845

if.then:                                          ; preds = %entry
  %6 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8846
  %call1 = call i32 @omap_dma_chan_read(%struct.omap_chan* %6, i32 29) #11, !dbg !8848
  %conv2 = zext i32 %call1 to i64, !dbg !8848
  store i64 %conv2, i64* %addr, align 8, !dbg !8849
  br label %if.end11, !dbg !8850

if.else:                                          ; preds = %entry
  %7 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8851
  %call3 = call i32 @omap_dma_chan_read_3_3(%struct.omap_chan* %7, i32 40) #11, !dbg !8853
  %conv4 = zext i32 %call3 to i64, !dbg !8853
  store i64 %conv4, i64* %addr, align 8, !dbg !8854
  %8 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8855
  %call5 = call i32 @omap_dma_chan_read_3_3(%struct.omap_chan* %8, i32 41) #11, !dbg !8856
  %conv6 = zext i32 %call5 to i64, !dbg !8856
  store i64 %conv6, i64* %cdac, align 8, !dbg !8857
  %9 = load i64, i64* %cdac, align 8, !dbg !8858
  %cmp = icmp eq i64 %9, 0, !dbg !8860
  br i1 %cmp, label %if.then8, label %if.end, !dbg !8861

if.then8:                                         ; preds = %if.else
  %10 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8862
  %call9 = call i32 @omap_dma_chan_read(%struct.omap_chan* %10, i32 45) #11, !dbg !8863
  %conv10 = zext i32 %call9 to i64, !dbg !8863
  store i64 %conv10, i64* %addr, align 8, !dbg !8864
  br label %if.end, !dbg !8865

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %11 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8866
  %call12 = call i32 @omap_dma_chan_read(%struct.omap_chan* %11, i32 45) #11, !dbg !8868
  %and13 = and i32 %call12, -65536, !dbg !8869
  %conv14 = zext i32 %and13 to i64, !dbg !8868
  %12 = load i64, i64* %addr, align 8, !dbg !8870
  %or = or i64 %12, %conv14, !dbg !8870
  store i64 %or, i64* %addr, align 8, !dbg !8870
  %13 = load i64, i64* %addr, align 8, !dbg !8871
  ret i64 %13, !dbg !8872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @omap_dma_get_dst_pos(%struct.omap_chan* %c) #0 !dbg !8873 {
entry:
  %c.addr = alloca %struct.omap_chan*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %addr = alloca i64, align 8
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !8874, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !8876, metadata !DIExpression()), !dbg !8877
  %0 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8878
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %0, i32 0, i32 0, !dbg !8879
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 0, !dbg !8880
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan, i32 0, i32 0, !dbg !8881
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !8881
  %call = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %1) #11, !dbg !8882
  store %struct.omap_dmadev* %call, %struct.omap_dmadev** %od, align 8, !dbg !8877
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !8883, metadata !DIExpression()), !dbg !8884
  %2 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !8885
  %plat = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %2, i32 0, i32 4, !dbg !8885
  %3 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat, align 8, !dbg !8885
  %dma_attr = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %3, i32 0, i32 2, !dbg !8885
  %4 = load %struct.omap_dma_dev_attr*, %struct.omap_dma_dev_attr** %dma_attr, align 8, !dbg !8885
  %dev_caps = getelementptr inbounds %struct.omap_dma_dev_attr, %struct.omap_dma_dev_attr* %4, i32 0, i32 0, !dbg !8885
  %5 = load i32, i32* %dev_caps, align 4, !dbg !8885
  %conv = zext i32 %5 to i64, !dbg !8885
  %and = and i64 %conv, 64, !dbg !8885
  %tobool = icmp ne i64 %and, 0, !dbg !8885
  br i1 %tobool, label %if.then, label %if.else, !dbg !8887

if.then:                                          ; preds = %entry
  %6 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8888
  %call1 = call i32 @omap_dma_chan_read(%struct.omap_chan* %6, i32 29) #11, !dbg !8890
  %conv2 = zext i32 %call1 to i64, !dbg !8890
  store i64 %conv2, i64* %addr, align 8, !dbg !8891
  br label %if.end9, !dbg !8892

if.else:                                          ; preds = %entry
  %7 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8893
  %call3 = call i32 @omap_dma_chan_read_3_3(%struct.omap_chan* %7, i32 41) #11, !dbg !8895
  %conv4 = zext i32 %call3 to i64, !dbg !8895
  store i64 %conv4, i64* %addr, align 8, !dbg !8896
  %8 = load i64, i64* %addr, align 8, !dbg !8897
  %cmp = icmp eq i64 %8, 0, !dbg !8899
  br i1 %cmp, label %if.then6, label %if.end, !dbg !8900

if.then6:                                         ; preds = %if.else
  %9 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8901
  %call7 = call i32 @omap_dma_chan_read(%struct.omap_chan* %9, i32 46) #11, !dbg !8902
  %conv8 = zext i32 %call7 to i64, !dbg !8902
  store i64 %conv8, i64* %addr, align 8, !dbg !8903
  br label %if.end, !dbg !8904

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %10 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !8905
  %call10 = call i32 @omap_dma_chan_read(%struct.omap_chan* %10, i32 46) #11, !dbg !8907
  %and11 = and i32 %call10, -65536, !dbg !8908
  %conv12 = zext i32 %and11 to i64, !dbg !8907
  %11 = load i64, i64* %addr, align 8, !dbg !8909
  %or = or i64 %11, %conv12, !dbg !8909
  store i64 %or, i64* %addr, align 8, !dbg !8909
  %12 = load i64, i64* %addr, align 8, !dbg !8910
  ret i64 %12, !dbg !8911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @omap_dma_desc_size_pos(%struct.omap_desc* %d, i64 %addr) #0 !dbg !8912 {
entry:
  %d.addr = alloca %struct.omap_desc*, align 8
  %addr.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %size = alloca i64, align 8
  %es_size = alloca i64, align 8
  %this_size = alloca i64, align 8
  store %struct.omap_desc* %d, %struct.omap_desc** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d.addr, metadata !8915, metadata !DIExpression()), !dbg !8916
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !8917, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8919, metadata !DIExpression()), !dbg !8920
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8921, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.declare(metadata i64* %es_size, metadata !8923, metadata !DIExpression()), !dbg !8924
  %0 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !8925
  %es = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %0, i32 0, i32 7, !dbg !8926
  %1 = load i8, i8* %es, align 2, !dbg !8926
  %idxprom = zext i8 %1 to i64, !dbg !8927
  %arrayidx = getelementptr [3 x i32], [3 x i32]* @es_bytes, i64 0, i64 %idxprom, !dbg !8927
  %2 = load i32, i32* %arrayidx, align 4, !dbg !8927
  %conv = zext i32 %2 to i64, !dbg !8927
  store i64 %conv, i64* %es_size, align 8, !dbg !8924
  store i32 0, i32* %i, align 4, !dbg !8928
  store i64 0, i64* %size, align 8, !dbg !8930
  br label %for.cond, !dbg !8931

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !8932
  %4 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !8934
  %sglen = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %4, i32 0, i32 12, !dbg !8935
  %5 = load i32, i32* %sglen, align 8, !dbg !8935
  %cmp = icmp ult i32 %3, %5, !dbg !8936
  br i1 %cmp, label %for.body, label %for.end, !dbg !8937

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %this_size, metadata !8938, metadata !DIExpression()), !dbg !8940
  %6 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !8941
  %sg = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %6, i32 0, i32 13, !dbg !8942
  %7 = load i32, i32* %i, align 4, !dbg !8943
  %idxprom2 = zext i32 %7 to i64, !dbg !8941
  %arrayidx3 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg, i64 0, i64 %idxprom2, !dbg !8941
  %call = call i64 @omap_dma_sg_size(%struct.omap_sg* %arrayidx3) #11, !dbg !8944
  %8 = load i64, i64* %es_size, align 8, !dbg !8945
  %mul = mul i64 %call, %8, !dbg !8946
  store i64 %mul, i64* %this_size, align 8, !dbg !8940
  %9 = load i64, i64* %size, align 8, !dbg !8947
  %tobool = icmp ne i64 %9, 0, !dbg !8947
  br i1 %tobool, label %if.then, label %if.else, !dbg !8949

if.then:                                          ; preds = %for.body
  %10 = load i64, i64* %this_size, align 8, !dbg !8950
  %11 = load i64, i64* %size, align 8, !dbg !8951
  %add = add i64 %11, %10, !dbg !8951
  store i64 %add, i64* %size, align 8, !dbg !8951
  br label %if.end24, !dbg !8952

if.else:                                          ; preds = %for.body
  %12 = load i64, i64* %addr.addr, align 8, !dbg !8953
  %13 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !8955
  %sg4 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %13, i32 0, i32 13, !dbg !8956
  %14 = load i32, i32* %i, align 4, !dbg !8957
  %idxprom5 = zext i32 %14 to i64, !dbg !8955
  %arrayidx6 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg4, i64 0, i64 %idxprom5, !dbg !8955
  %addr7 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx6, i32 0, i32 0, !dbg !8958
  %15 = load i64, i64* %addr7, align 8, !dbg !8958
  %cmp8 = icmp uge i64 %12, %15, !dbg !8959
  br i1 %cmp8, label %land.lhs.true, label %if.end, !dbg !8960

land.lhs.true:                                    ; preds = %if.else
  %16 = load i64, i64* %addr.addr, align 8, !dbg !8961
  %17 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !8962
  %sg10 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %17, i32 0, i32 13, !dbg !8963
  %18 = load i32, i32* %i, align 4, !dbg !8964
  %idxprom11 = zext i32 %18 to i64, !dbg !8962
  %arrayidx12 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg10, i64 0, i64 %idxprom11, !dbg !8962
  %addr13 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx12, i32 0, i32 0, !dbg !8965
  %19 = load i64, i64* %addr13, align 8, !dbg !8965
  %20 = load i64, i64* %this_size, align 8, !dbg !8966
  %add14 = add i64 %19, %20, !dbg !8967
  %cmp15 = icmp ult i64 %16, %add14, !dbg !8968
  br i1 %cmp15, label %if.then17, label %if.end, !dbg !8969

if.then17:                                        ; preds = %land.lhs.true
  %21 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !8970
  %sg18 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %21, i32 0, i32 13, !dbg !8971
  %22 = load i32, i32* %i, align 4, !dbg !8972
  %idxprom19 = zext i32 %22 to i64, !dbg !8970
  %arrayidx20 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg18, i64 0, i64 %idxprom19, !dbg !8970
  %addr21 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx20, i32 0, i32 0, !dbg !8973
  %23 = load i64, i64* %addr21, align 8, !dbg !8973
  %24 = load i64, i64* %this_size, align 8, !dbg !8974
  %add22 = add i64 %23, %24, !dbg !8975
  %25 = load i64, i64* %addr.addr, align 8, !dbg !8976
  %sub = sub i64 %add22, %25, !dbg !8977
  %26 = load i64, i64* %size, align 8, !dbg !8978
  %add23 = add i64 %26, %sub, !dbg !8978
  store i64 %add23, i64* %size, align 8, !dbg !8978
  br label %if.end, !dbg !8979

if.end:                                           ; preds = %if.then17, %land.lhs.true, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !8980

for.inc:                                          ; preds = %if.end24
  %27 = load i32, i32* %i, align 4, !dbg !8981
  %inc = add i32 %27, 1, !dbg !8981
  store i32 %inc, i32* %i, align 4, !dbg !8981
  br label %for.cond, !dbg !8982, !llvm.loop !8983

for.end:                                          ; preds = %for.cond
  %28 = load i64, i64* %size, align 8, !dbg !8985
  ret i64 %28, !dbg !8986
}

; Function Attrs: noredzone
declare dso_local %struct.virt_dma_desc* @vchan_find_desc(%struct.virt_dma_chan*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @omap_dma_desc_size(%struct.omap_desc* %d) #0 !dbg !8987 {
entry:
  %d.addr = alloca %struct.omap_desc*, align 8
  %i = alloca i32, align 4
  %size = alloca i64, align 8
  store %struct.omap_desc* %d, %struct.omap_desc** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d.addr, metadata !8990, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8992, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8994, metadata !DIExpression()), !dbg !8995
  store i32 0, i32* %i, align 4, !dbg !8996
  store i64 0, i64* %size, align 8, !dbg !8998
  br label %for.cond, !dbg !8999

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9000
  %1 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !9002
  %sglen = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %1, i32 0, i32 12, !dbg !9003
  %2 = load i32, i32* %sglen, align 8, !dbg !9003
  %cmp = icmp ult i32 %0, %2, !dbg !9004
  br i1 %cmp, label %for.body, label %for.end, !dbg !9005

for.body:                                         ; preds = %for.cond
  %3 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !9006
  %sg = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %3, i32 0, i32 13, !dbg !9007
  %4 = load i32, i32* %i, align 4, !dbg !9008
  %idxprom = zext i32 %4 to i64, !dbg !9006
  %arrayidx = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg, i64 0, i64 %idxprom, !dbg !9006
  %call = call i64 @omap_dma_sg_size(%struct.omap_sg* %arrayidx) #11, !dbg !9009
  %5 = load i64, i64* %size, align 8, !dbg !9010
  %add = add i64 %5, %call, !dbg !9010
  store i64 %add, i64* %size, align 8, !dbg !9010
  br label %for.inc, !dbg !9011

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !9012
  %inc = add i32 %6, 1, !dbg !9012
  store i32 %inc, i32* %i, align 4, !dbg !9012
  br label %for.cond, !dbg !9013, !llvm.loop !9014

for.end:                                          ; preds = %for.cond
  %7 = load i64, i64* %size, align 8, !dbg !9016
  %8 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !9017
  %es = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %8, i32 0, i32 7, !dbg !9018
  %9 = load i8, i8* %es, align 2, !dbg !9018
  %idxprom1 = zext i8 %9 to i64, !dbg !9019
  %arrayidx2 = getelementptr [3 x i32], [3 x i32]* @es_bytes, i64 0, i64 %idxprom1, !dbg !9019
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !9019
  %conv = zext i32 %10 to i64, !dbg !9019
  %mul = mul i64 %7, %conv, !dbg !9020
  ret i64 %mul, !dbg !9021
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_async_is_complete(i32 %cookie, i32 %last_complete, i32 %last_used) #0 !dbg !9022 {
entry:
  %retval = alloca i32, align 4
  %cookie.addr = alloca i32, align 4
  %last_complete.addr = alloca i32, align 4
  %last_used.addr = alloca i32, align 4
  store i32 %cookie, i32* %cookie.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cookie.addr, metadata !9025, metadata !DIExpression()), !dbg !9026
  store i32 %last_complete, i32* %last_complete.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last_complete.addr, metadata !9027, metadata !DIExpression()), !dbg !9028
  store i32 %last_used, i32* %last_used.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last_used.addr, metadata !9029, metadata !DIExpression()), !dbg !9030
  %0 = load i32, i32* %last_complete.addr, align 4, !dbg !9031
  %1 = load i32, i32* %last_used.addr, align 4, !dbg !9033
  %cmp = icmp sle i32 %0, %1, !dbg !9034
  br i1 %cmp, label %if.then, label %if.else, !dbg !9035

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %cookie.addr, align 4, !dbg !9036
  %3 = load i32, i32* %last_complete.addr, align 4, !dbg !9039
  %cmp1 = icmp sle i32 %2, %3, !dbg !9040
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !9041

lor.lhs.false:                                    ; preds = %if.then
  %4 = load i32, i32* %cookie.addr, align 4, !dbg !9042
  %5 = load i32, i32* %last_used.addr, align 4, !dbg !9043
  %cmp2 = icmp sgt i32 %4, %5, !dbg !9044
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !9045

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  store i32 0, i32* %retval, align 4, !dbg !9046
  br label %return, !dbg !9046

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end8, !dbg !9047

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %cookie.addr, align 4, !dbg !9048
  %7 = load i32, i32* %last_complete.addr, align 4, !dbg !9051
  %cmp4 = icmp sle i32 %6, %7, !dbg !9052
  br i1 %cmp4, label %land.lhs.true, label %if.end7, !dbg !9053

land.lhs.true:                                    ; preds = %if.else
  %8 = load i32, i32* %cookie.addr, align 4, !dbg !9054
  %9 = load i32, i32* %last_used.addr, align 4, !dbg !9055
  %cmp5 = icmp sgt i32 %8, %9, !dbg !9056
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !9057

if.then6:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !9058
  br label %return, !dbg !9058

if.end7:                                          ; preds = %land.lhs.true, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end
  store i32 1, i32* %retval, align 4, !dbg !9059
  br label %return, !dbg !9059

return:                                           ; preds = %if.end8, %if.then6, %if.then3
  %10 = load i32, i32* %retval, align 4, !dbg !9060
  ret i32 %10, !dbg !9060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_chan_read_3_3(%struct.omap_chan* %c, i32 %reg) #0 !dbg !9061 {
entry:
  %c.addr = alloca %struct.omap_chan*, align 8
  %reg.addr = alloca i32, align 4
  %od = alloca %struct.omap_dmadev*, align 8
  %val = alloca i32, align 4
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !9064, metadata !DIExpression()), !dbg !9065
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !9066, metadata !DIExpression()), !dbg !9067
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !9068, metadata !DIExpression()), !dbg !9069
  %0 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9070
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %0, i32 0, i32 0, !dbg !9071
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 0, !dbg !9072
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan, i32 0, i32 0, !dbg !9073
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !9073
  %call = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %1) #11, !dbg !9074
  store %struct.omap_dmadev* %call, %struct.omap_dmadev** %od, align 8, !dbg !9069
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9075, metadata !DIExpression()), !dbg !9076
  %2 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9077
  %3 = load i32, i32* %reg.addr, align 4, !dbg !9078
  %call1 = call i32 @omap_dma_chan_read(%struct.omap_chan* %2, i32 %3) #11, !dbg !9079
  store i32 %call1, i32* %val, align 4, !dbg !9080
  %4 = load i32, i32* %val, align 4, !dbg !9081
  %cmp = icmp eq i32 %4, 0, !dbg !9083
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9084

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !9085
  %plat = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %5, i32 0, i32 4, !dbg !9086
  %6 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat, align 8, !dbg !9086
  %errata = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %6, i32 0, i32 3, !dbg !9087
  %7 = load i32, i32* %errata, align 8, !dbg !9087
  %conv = zext i32 %7 to i64, !dbg !9085
  %and = and i64 %conv, 32, !dbg !9088
  %tobool = icmp ne i64 %and, 0, !dbg !9088
  br i1 %tobool, label %if.then, label %if.end, !dbg !9089

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9090
  %9 = load i32, i32* %reg.addr, align 4, !dbg !9091
  %call2 = call i32 @omap_dma_chan_read(%struct.omap_chan* %8, i32 %9) #11, !dbg !9092
  store i32 %call2, i32* %val, align 4, !dbg !9093
  br label %if.end, !dbg !9094

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load i32, i32* %val, align 4, !dbg !9095
  ret i32 %10, !dbg !9096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @omap_dma_sg_size(%struct.omap_sg* %sg) #0 !dbg !9097 {
entry:
  %sg.addr = alloca %struct.omap_sg*, align 8
  store %struct.omap_sg* %sg, %struct.omap_sg** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_sg** %sg.addr, metadata !9100, metadata !DIExpression()), !dbg !9101
  %0 = load %struct.omap_sg*, %struct.omap_sg** %sg.addr, align 8, !dbg !9102
  %en = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %0, i32 0, i32 1, !dbg !9103
  %1 = load i32, i32* %en, align 8, !dbg !9103
  %2 = load %struct.omap_sg*, %struct.omap_sg** %sg.addr, align 8, !dbg !9104
  %fn = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %2, i32 0, i32 2, !dbg !9105
  %3 = load i32, i32* %fn, align 4, !dbg !9105
  %mul = mul i32 %1, %3, !dbg !9106
  %conv = zext i32 %mul to i64, !dbg !9102
  ret i64 %conv, !dbg !9107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @vchan_issue_pending(%struct.virt_dma_chan* %vc) #0 !dbg !9108 {
entry:
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !9111, metadata !DIExpression()), !dbg !9112
  %0 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !9113
  %desc_submitted = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %0, i32 0, i32 5, !dbg !9114
  %1 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !9115
  %desc_issued = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %1, i32 0, i32 6, !dbg !9116
  call void @list_splice_tail_init(%struct.list_head* %desc_submitted, %struct.list_head* %desc_issued) #11, !dbg !9117
  %2 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !9118
  %desc_issued1 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %2, i32 0, i32 6, !dbg !9119
  %call = call i32 @list_empty(%struct.list_head* %desc_issued1) #11, !dbg !9120
  %tobool = icmp ne i32 %call, 0, !dbg !9121
  %lnot = xor i1 %tobool, true, !dbg !9121
  ret i1 %lnot, !dbg !9122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !9123 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9126, metadata !DIExpression()), !dbg !9130
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9136, metadata !DIExpression()), !dbg !9137
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9138, metadata !DIExpression()), !dbg !9139
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9140, metadata !DIExpression()), !dbg !9141
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !9142, metadata !DIExpression()), !dbg !9146
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !9148, metadata !DIExpression()), !dbg !9152
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9154, metadata !DIExpression()), !dbg !9158
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9163, metadata !DIExpression()), !dbg !9164
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9165, metadata !DIExpression()), !dbg !9166
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9167, metadata !DIExpression()), !dbg !9168
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9169, metadata !DIExpression()), !dbg !9170
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9171, metadata !DIExpression()), !dbg !9172
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9173, metadata !DIExpression()), !dbg !9174
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9175, metadata !DIExpression()), !dbg !9176
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9177, metadata !DIExpression()), !dbg !9178
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9179, metadata !DIExpression()), !dbg !9180
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9181, metadata !DIExpression()), !dbg !9182
  %0 = load i64, i64* %size.addr, align 8, !dbg !9183
  %1 = load i32, i32* %flags.addr, align 4, !dbg !9184
  %or = or i32 %1, 256, !dbg !9185
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !9186
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #8, !dbg !9187
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !9188

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9189
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !9190
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9191

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !9192
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !9193
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9194
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !9195
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9172
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !9196
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9197
  %10 = load i32, i32* %order.i.i, align 4, !dbg !9198
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9199
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9200
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9201
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !9202
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9202
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9202
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9202
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !9202
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9203
  br label %kmalloc.exit, !dbg !9203

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !9204
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9205
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !9205
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9207

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9208
  br label %kmalloc_index.exit.i, !dbg !9208

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9209
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !9211
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9212

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9213
  br label %kmalloc_index.exit.i, !dbg !9213

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9214
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !9216
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9217

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9218
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !9219
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9220

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9221
  br label %kmalloc_index.exit.i, !dbg !9221

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9222
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !9224
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9225

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9226
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !9227
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9228

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9229
  br label %kmalloc_index.exit.i, !dbg !9229

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9230
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !9232
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9233

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9234
  br label %kmalloc_index.exit.i, !dbg !9234

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9235
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !9237
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9238

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9239
  br label %kmalloc_index.exit.i, !dbg !9239

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9240
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !9242
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9243

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9244
  br label %kmalloc_index.exit.i, !dbg !9244

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9245
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !9247
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9248

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9249
  br label %kmalloc_index.exit.i, !dbg !9249

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9250
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !9252
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9253

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9254
  br label %kmalloc_index.exit.i, !dbg !9254

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9255
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !9257
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9258

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9259
  br label %kmalloc_index.exit.i, !dbg !9259

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9260
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !9262
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9263

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9264
  br label %kmalloc_index.exit.i, !dbg !9264

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9265
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !9267
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9268

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9269
  br label %kmalloc_index.exit.i, !dbg !9269

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9270
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !9272
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9273

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9274
  br label %kmalloc_index.exit.i, !dbg !9274

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9275
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !9277
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9278

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9279
  br label %kmalloc_index.exit.i, !dbg !9279

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9280
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !9282
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9283

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9284
  br label %kmalloc_index.exit.i, !dbg !9284

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9285
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !9287
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9288

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9289
  br label %kmalloc_index.exit.i, !dbg !9289

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9290
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !9292
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9293

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9294
  br label %kmalloc_index.exit.i, !dbg !9294

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9295
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !9297
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9298

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9299
  br label %kmalloc_index.exit.i, !dbg !9299

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9300
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !9302
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9303

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9304
  br label %kmalloc_index.exit.i, !dbg !9304

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9305
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !9307
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9308

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9309
  br label %kmalloc_index.exit.i, !dbg !9309

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9310
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !9312
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9313

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9314
  br label %kmalloc_index.exit.i, !dbg !9314

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9315
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !9317
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9318

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9319
  br label %kmalloc_index.exit.i, !dbg !9319

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9320
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !9322
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9323

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9324
  br label %kmalloc_index.exit.i, !dbg !9324

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9325
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !9327
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9328

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9329
  br label %kmalloc_index.exit.i, !dbg !9329

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9330
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !9332
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9333

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9334
  br label %kmalloc_index.exit.i, !dbg !9334

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9335
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !9337
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9338

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9339
  br label %kmalloc_index.exit.i, !dbg !9339

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9340
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !9342
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9343

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9344
  br label %kmalloc_index.exit.i, !dbg !9344

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9345
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !9347
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9348

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9349
  br label %kmalloc_index.exit.i, !dbg !9349

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !9350, !srcloc !9353
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 234) #8, !dbg !9354, !srcloc !9357
  unreachable, !dbg !9358

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !9359
  store i32 %45, i32* %index.i, align 4, !dbg !9360
  %46 = load i32, i32* %index.i, align 4, !dbg !9361
  %tobool.i = icmp ne i32 %46, 0, !dbg !9361
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9363

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9364
  br label %kmalloc.exit, !dbg !9364

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !9365
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9366
  %and.i.i = and i32 %48, 17, !dbg !9366
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9366
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9366
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9366
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9366
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9368

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9369
  br label %kmalloc_type.exit.i, !dbg !9369

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9370
  %and2.i.i = and i32 %49, 1, !dbg !9371
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9370
  %50 = zext i1 %tobool3.i.i to i64, !dbg !9370
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9370
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9372
  br label %kmalloc_type.exit.i, !dbg !9372

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !9373
  %idxprom.i = zext i32 %51 to i64, !dbg !9374
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9374
  %52 = load i32, i32* %index.i, align 4, !dbg !9375
  %idxprom6.i = zext i32 %52 to i64, !dbg !9374
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9374
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9374
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !9376
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !9377
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9378
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9379
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !9380
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9380
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9380
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9380
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !9380
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9141
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9381
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !9382
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9383
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9384
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !9385
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9386
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !9387
  store i8* %62, i8** %retval.i, align 8, !dbg !9388
  br label %kmalloc.exit, !dbg !9388

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !9389
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !9390
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !9391
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9391
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9391
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9391
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !9391
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9392
  br label %kmalloc.exit, !dbg !9392

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !9393
  ret i8* %65, !dbg !9394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__ab_c_size(i64 %a, i64 %b, i64 %c) #0 !dbg !9395 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %c.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  %__a3 = alloca i64, align 8
  %__b4 = alloca i64, align 8
  %__d5 = alloca i64*, align 8
  %tmp10 = alloca i8, align 1
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !9399, metadata !DIExpression()), !dbg !9400
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !9401, metadata !DIExpression()), !dbg !9402
  store i64 %c, i64* %c.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %c.addr, metadata !9403, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !9405, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !9407, metadata !DIExpression()), !dbg !9410
  %0 = load i64, i64* %a.addr, align 8, !dbg !9410
  store i64 %0, i64* %__a, align 8, !dbg !9410
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !9411, metadata !DIExpression()), !dbg !9410
  %1 = load i64, i64* %b.addr, align 8, !dbg !9410
  store i64 %1, i64* %__b, align 8, !dbg !9410
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !9412, metadata !DIExpression()), !dbg !9410
  store i64* %bytes, i64** %__d, align 8, !dbg !9410
  %cmp = icmp eq i64* %__a, %__b, !dbg !9410
  %conv = zext i1 %cmp to i32, !dbg !9410
  %2 = load i64*, i64** %__d, align 8, !dbg !9410
  %cmp1 = icmp eq i64* %__a, %2, !dbg !9410
  %conv2 = zext i1 %cmp1 to i32, !dbg !9410
  %3 = load i64, i64* %__a, align 8, !dbg !9410
  %4 = load i64, i64* %__b, align 8, !dbg !9410
  %5 = load i64*, i64** %__d, align 8, !dbg !9410
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !9410
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !9410
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !9410
  store i64 %8, i64* %5, align 8, !dbg !9410
  %frombool = zext i1 %7 to i8, !dbg !9410
  store i8 %frombool, i8* %tmp, align 1, !dbg !9410
  %9 = load i8, i8* %tmp, align 1, !dbg !9410
  %tobool = trunc i8 %9 to i1, !dbg !9410
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !9413
  br i1 %call, label %if.then, label %if.end, !dbg !9414

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !9415
  br label %return, !dbg !9415

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__a3, metadata !9416, metadata !DIExpression()), !dbg !9419
  %10 = load i64, i64* %bytes, align 8, !dbg !9419
  store i64 %10, i64* %__a3, align 8, !dbg !9419
  call void @llvm.dbg.declare(metadata i64* %__b4, metadata !9420, metadata !DIExpression()), !dbg !9419
  %11 = load i64, i64* %c.addr, align 8, !dbg !9419
  store i64 %11, i64* %__b4, align 8, !dbg !9419
  call void @llvm.dbg.declare(metadata i64** %__d5, metadata !9421, metadata !DIExpression()), !dbg !9419
  store i64* %bytes, i64** %__d5, align 8, !dbg !9419
  %cmp6 = icmp eq i64* %__a3, %__b4, !dbg !9419
  %conv7 = zext i1 %cmp6 to i32, !dbg !9419
  %12 = load i64*, i64** %__d5, align 8, !dbg !9419
  %cmp8 = icmp eq i64* %__a3, %12, !dbg !9419
  %conv9 = zext i1 %cmp8 to i32, !dbg !9419
  %13 = load i64, i64* %__a3, align 8, !dbg !9419
  %14 = load i64, i64* %__b4, align 8, !dbg !9419
  %15 = load i64*, i64** %__d5, align 8, !dbg !9419
  %16 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 %14), !dbg !9419
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !9419
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !9419
  store i64 %18, i64* %15, align 8, !dbg !9419
  %frombool11 = zext i1 %17 to i8, !dbg !9419
  store i8 %frombool11, i8* %tmp10, align 1, !dbg !9419
  %19 = load i8, i8* %tmp10, align 1, !dbg !9419
  %tobool12 = trunc i8 %19 to i1, !dbg !9419
  %call13 = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool12) #11, !dbg !9422
  br i1 %call13, label %if.then14, label %if.end15, !dbg !9423

if.then14:                                        ; preds = %if.end
  store i64 -1, i64* %retval, align 8, !dbg !9424
  br label %return, !dbg !9424

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %bytes, align 8, !dbg !9425
  store i64 %20, i64* %retval, align 8, !dbg !9426
  br label %return, !dbg !9426

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !9427
  ret i64 %21, !dbg !9427
}

; Function Attrs: noredzone
declare dso_local i8* @dma_pool_alloc(%struct.dma_pool*, i32, i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_fill_type2_desc(%struct.omap_desc* %d, i32 %idx, i32 %dir, i1 zeroext %last) #0 !dbg !9428 {
entry:
  %d.addr = alloca %struct.omap_desc*, align 8
  %idx.addr = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %last.addr = alloca i8, align 1
  %sg = alloca %struct.omap_sg*, align 8
  %t2_desc = alloca %struct.omap_type2_desc*, align 8
  store %struct.omap_desc* %d, %struct.omap_desc** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d.addr, metadata !9431, metadata !DIExpression()), !dbg !9432
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !9433, metadata !DIExpression()), !dbg !9434
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !9435, metadata !DIExpression()), !dbg !9436
  %frombool = zext i1 %last to i8
  store i8 %frombool, i8* %last.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %last.addr, metadata !9437, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.declare(metadata %struct.omap_sg** %sg, metadata !9439, metadata !DIExpression()), !dbg !9440
  %0 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !9441
  %sg1 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %0, i32 0, i32 13, !dbg !9442
  %1 = load i32, i32* %idx.addr, align 4, !dbg !9443
  %idxprom = sext i32 %1 to i64, !dbg !9441
  %arrayidx = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg1, i64 0, i64 %idxprom, !dbg !9441
  store %struct.omap_sg* %arrayidx, %struct.omap_sg** %sg, align 8, !dbg !9440
  call void @llvm.dbg.declare(metadata %struct.omap_type2_desc** %t2_desc, metadata !9444, metadata !DIExpression()), !dbg !9445
  %2 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !9446
  %t2_desc2 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %2, i32 0, i32 5, !dbg !9447
  %3 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc2, align 8, !dbg !9447
  store %struct.omap_type2_desc* %3, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9445
  %4 = load i32, i32* %idx.addr, align 4, !dbg !9448
  %tobool = icmp ne i32 %4, 0, !dbg !9448
  br i1 %tobool, label %if.then, label %if.end, !dbg !9450

if.then:                                          ; preds = %entry
  %5 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !9451
  %t2_desc_paddr = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %5, i32 0, i32 6, !dbg !9452
  %6 = load i64, i64* %t2_desc_paddr, align 8, !dbg !9452
  %conv = trunc i64 %6 to i32, !dbg !9451
  %7 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !9453
  %sg3 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %7, i32 0, i32 13, !dbg !9454
  %8 = load i32, i32* %idx.addr, align 4, !dbg !9455
  %sub = sub i32 %8, 1, !dbg !9456
  %idxprom4 = sext i32 %sub to i64, !dbg !9453
  %arrayidx5 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg3, i64 0, i64 %idxprom4, !dbg !9453
  %t2_desc6 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx5, i32 0, i32 5, !dbg !9457
  %9 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc6, align 8, !dbg !9457
  %next_desc = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %9, i32 0, i32 0, !dbg !9458
  store i32 %conv, i32* %next_desc, align 1, !dbg !9459
  br label %if.end, !dbg !9453

if.end:                                           ; preds = %if.then, %entry
  %10 = load i8, i8* %last.addr, align 1, !dbg !9460
  %tobool7 = trunc i8 %10 to i1, !dbg !9460
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !9462

if.then8:                                         ; preds = %if.end
  %11 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9463
  %next_desc9 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %11, i32 0, i32 0, !dbg !9464
  store i32 -4, i32* %next_desc9, align 1, !dbg !9465
  br label %if.end10, !dbg !9463

if.end10:                                         ; preds = %if.then8, %if.end
  %12 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !9466
  %en = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %12, i32 0, i32 1, !dbg !9467
  %13 = load i32, i32* %en, align 8, !dbg !9467
  %14 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9468
  %en11 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %14, i32 0, i32 1, !dbg !9469
  store i32 %13, i32* %en11, align 1, !dbg !9470
  %15 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !9471
  %addr = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %15, i32 0, i32 0, !dbg !9472
  %16 = load i64, i64* %addr, align 8, !dbg !9472
  %conv12 = trunc i64 %16 to i32, !dbg !9471
  %17 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9473
  %addr13 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %17, i32 0, i32 2, !dbg !9474
  store i32 %conv12, i32* %addr13, align 1, !dbg !9475
  %18 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !9476
  %fn = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %18, i32 0, i32 2, !dbg !9477
  %19 = load i32, i32* %fn, align 4, !dbg !9477
  %and = and i32 %19, 65535, !dbg !9478
  %conv14 = trunc i32 %and to i16, !dbg !9476
  %20 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9479
  %fn15 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %20, i32 0, i32 3, !dbg !9480
  store i16 %conv14, i16* %fn15, align 1, !dbg !9481
  %21 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !9482
  %cicr = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %21, i32 0, i32 10, !dbg !9483
  %22 = load i16, i16* %cicr, align 2, !dbg !9483
  %23 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9484
  %cicr16 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %23, i32 0, i32 4, !dbg !9485
  store i16 %22, i16* %cicr16, align 1, !dbg !9486
  %24 = load i8, i8* %last.addr, align 1, !dbg !9487
  %tobool17 = trunc i8 %24 to i1, !dbg !9487
  br i1 %tobool17, label %if.end23, label %if.then18, !dbg !9489

if.then18:                                        ; preds = %if.end10
  %25 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9490
  %cicr19 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %25, i32 0, i32 4, !dbg !9491
  %26 = load i16, i16* %cicr19, align 1, !dbg !9492
  %conv20 = zext i16 %26 to i32, !dbg !9492
  %and21 = and i32 %conv20, -33, !dbg !9492
  %conv22 = trunc i32 %and21 to i16, !dbg !9492
  store i16 %conv22, i16* %cicr19, align 1, !dbg !9492
  br label %if.end23, !dbg !9490

if.end23:                                         ; preds = %if.then18, %if.end10
  %27 = load i32, i32* %dir.addr, align 4, !dbg !9493
  switch i32 %27, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb29
  ], !dbg !9494

sw.bb:                                            ; preds = %if.end23
  %28 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !9495
  %ei = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %28, i32 0, i32 4, !dbg !9497
  %29 = load i16, i16* %ei, align 4, !dbg !9497
  %30 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9498
  %cdei = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %30, i32 0, i32 5, !dbg !9499
  store i16 %29, i16* %cdei, align 1, !dbg !9500
  %31 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !9501
  %ei24 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %31, i32 0, i32 6, !dbg !9502
  %32 = load i16, i16* %ei24, align 8, !dbg !9502
  %33 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9503
  %csei = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %33, i32 0, i32 6, !dbg !9504
  store i16 %32, i16* %csei, align 1, !dbg !9505
  %34 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !9506
  %fi = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %34, i32 0, i32 3, !dbg !9507
  %35 = load i32, i32* %fi, align 8, !dbg !9507
  %36 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9508
  %cdfi = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %36, i32 0, i32 7, !dbg !9509
  store i32 %35, i32* %cdfi, align 1, !dbg !9510
  %37 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !9511
  %fi25 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %37, i32 0, i32 5, !dbg !9512
  %38 = load i32, i32* %fi25, align 4, !dbg !9512
  %39 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9513
  %csfi = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %39, i32 0, i32 8, !dbg !9514
  store i32 %38, i32* %csfi, align 1, !dbg !9515
  %40 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9516
  %en26 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %40, i32 0, i32 1, !dbg !9517
  %41 = load i32, i32* %en26, align 1, !dbg !9518
  %or = or i32 %41, 67108864, !dbg !9518
  store i32 %or, i32* %en26, align 1, !dbg !9518
  %42 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9519
  %en27 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %42, i32 0, i32 1, !dbg !9520
  %43 = load i32, i32* %en27, align 1, !dbg !9521
  %or28 = or i32 %43, 33554432, !dbg !9521
  store i32 %or28, i32* %en27, align 1, !dbg !9521
  br label %sw.epilog, !dbg !9522

sw.bb29:                                          ; preds = %if.end23
  %44 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !9523
  %ei30 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %44, i32 0, i32 6, !dbg !9524
  %45 = load i16, i16* %ei30, align 8, !dbg !9524
  %46 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9525
  %cdei31 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %46, i32 0, i32 5, !dbg !9526
  store i16 %45, i16* %cdei31, align 1, !dbg !9527
  %47 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !9528
  %ei32 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %47, i32 0, i32 4, !dbg !9529
  %48 = load i16, i16* %ei32, align 4, !dbg !9529
  %49 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9530
  %csei33 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %49, i32 0, i32 6, !dbg !9531
  store i16 %48, i16* %csei33, align 1, !dbg !9532
  %50 = load %struct.omap_desc*, %struct.omap_desc** %d.addr, align 8, !dbg !9533
  %fi34 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %50, i32 0, i32 5, !dbg !9534
  %51 = load i32, i32* %fi34, align 4, !dbg !9534
  %52 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9535
  %cdfi35 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %52, i32 0, i32 7, !dbg !9536
  store i32 %51, i32* %cdfi35, align 1, !dbg !9537
  %53 = load %struct.omap_sg*, %struct.omap_sg** %sg, align 8, !dbg !9538
  %fi36 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %53, i32 0, i32 3, !dbg !9539
  %54 = load i32, i32* %fi36, align 8, !dbg !9539
  %55 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9540
  %csfi37 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %55, i32 0, i32 8, !dbg !9541
  store i32 %54, i32* %csfi37, align 1, !dbg !9542
  %56 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9543
  %en38 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %56, i32 0, i32 1, !dbg !9544
  %57 = load i32, i32* %en38, align 1, !dbg !9545
  %or39 = or i32 %57, 16777216, !dbg !9545
  store i32 %or39, i32* %en38, align 1, !dbg !9545
  %58 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9546
  %en40 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %58, i32 0, i32 1, !dbg !9547
  %59 = load i32, i32* %en40, align 1, !dbg !9548
  %or41 = or i32 %59, 134217728, !dbg !9548
  store i32 %or41, i32* %en40, align 1, !dbg !9548
  br label %sw.epilog, !dbg !9549

sw.default:                                       ; preds = %if.end23
  br label %return, !dbg !9550

sw.epilog:                                        ; preds = %sw.bb29, %sw.bb
  %60 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !9551
  %en42 = getelementptr inbounds %struct.omap_type2_desc, %struct.omap_type2_desc* %60, i32 0, i32 1, !dbg !9552
  %61 = load i32, i32* %en42, align 1, !dbg !9553
  %or43 = or i32 %61, 1073741824, !dbg !9553
  store i32 %or43, i32* %en42, align 1, !dbg !9553
  br label %return, !dbg !9554

return:                                           ; preds = %sw.epilog, %sw.default
  ret void, !dbg !9554
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #2

; Function Attrs: noredzone
declare dso_local void @dma_pool_free(%struct.dma_pool*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @vchan_tx_prep(%struct.virt_dma_chan* %vc, %struct.virt_dma_desc* %vd, i64 %tx_flags) #0 !dbg !9555 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !5490, metadata !DIExpression()), !dbg !9558
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5496, metadata !DIExpression()), !dbg !9560
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !9561
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %vd.addr = alloca %struct.virt_dma_desc*, align 8
  %tx_flags.addr = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !9568, metadata !DIExpression()), !dbg !9569
  store %struct.virt_dma_desc* %vd, %struct.virt_dma_desc** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd.addr, metadata !9570, metadata !DIExpression()), !dbg !9571
  store i64 %tx_flags, i64* %tx_flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tx_flags.addr, metadata !9572, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9574, metadata !DIExpression()), !dbg !9575
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !9576
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %0, i32 0, i32 0, !dbg !9577
  %1 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !9578
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %1, i32 0, i32 0, !dbg !9579
  call void @dma_async_tx_descriptor_init(%struct.dma_async_tx_descriptor* %tx, %struct.dma_chan* %chan) #11, !dbg !9580
  %2 = load i64, i64* %tx_flags.addr, align 8, !dbg !9581
  %conv = trunc i64 %2 to i32, !dbg !9581
  %3 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !9582
  %tx1 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %3, i32 0, i32 0, !dbg !9583
  %flags2 = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx1, i32 0, i32 1, !dbg !9584
  store i32 %conv, i32* %flags2, align 4, !dbg !9585
  %4 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !9586
  %tx3 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %4, i32 0, i32 0, !dbg !9587
  %tx_submit = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx3, i32 0, i32 4, !dbg !9588
  store i32 (%struct.dma_async_tx_descriptor*)* @vchan_tx_submit, i32 (%struct.dma_async_tx_descriptor*)** %tx_submit, align 8, !dbg !9589
  %5 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !9590
  %tx4 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %5, i32 0, i32 0, !dbg !9591
  %desc_free = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx4, i32 0, i32 5, !dbg !9592
  store i32 (%struct.dma_async_tx_descriptor*)* @vchan_tx_desc_free, i32 (%struct.dma_async_tx_descriptor*)** %desc_free, align 8, !dbg !9593
  %6 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !9594
  %tx_result = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %6, i32 0, i32 1, !dbg !9595
  %result = getelementptr inbounds %struct.dmaengine_result, %struct.dmaengine_result* %tx_result, i32 0, i32 0, !dbg !9596
  store i32 0, i32* %result, align 8, !dbg !9597
  %7 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !9598
  %tx_result5 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %7, i32 0, i32 1, !dbg !9599
  %residue = getelementptr inbounds %struct.dmaengine_result, %struct.dmaengine_result* %tx_result5, i32 0, i32 1, !dbg !9600
  store i32 0, i32* %residue, align 4, !dbg !9601
  br label %do.body, !dbg !9602

do.body:                                          ; preds = %entry
  br label %do.body6, !dbg !9603

do.body6:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9604, metadata !DIExpression()), !dbg !9606
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9607, metadata !DIExpression()), !dbg !9606
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9606
  %conv7 = zext i1 %cmp to i32, !dbg !9606
  store i32 1, i32* %tmp, align 4, !dbg !9606
  %8 = load i32, i32* %tmp, align 4, !dbg !9606
  br label %do.body8, !dbg !9608

do.body8:                                         ; preds = %do.body6
  br label %do.body9, !dbg !9609

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !9610

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !9612, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !9616, metadata !DIExpression()), !dbg !9615
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !9615
  %conv14 = zext i1 %cmp13 to i32, !dbg !9615
  store i32 1, i32* %tmp15, align 4, !dbg !9615
  %9 = load i32, i32* %tmp15, align 4, !dbg !9615
  %call = call i64 @arch_local_irq_save() #11, !dbg !9617
  store i64 %call, i64* %flags, align 8, !dbg !9617
  br label %do.end, !dbg !9617

do.end:                                           ; preds = %do.body10
  br label %do.end16, !dbg !9610

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !9609

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9618, !srcloc !9619
  br label %do.body18, !dbg !9618

do.body18:                                        ; preds = %do.body17
  %10 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !9620
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %10, i32 0, i32 3, !dbg !9620
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9621
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !9622
  %rlock.i = bitcast %union.anon.3* %12 to %struct.raw_spinlock*, !dbg !9622
  br label %do.end20, !dbg !9620

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !9618

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9609

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !9608

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !9603

do.end24:                                         ; preds = %do.end23
  %13 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !9623
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %13, i32 0, i32 2, !dbg !9624
  %14 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !9625
  %desc_allocated = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %14, i32 0, i32 4, !dbg !9626
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* %desc_allocated) #11, !dbg !9627
  %15 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !9628
  %lock25 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %15, i32 0, i32 3, !dbg !9629
  %16 = load i64, i64* %flags, align 8, !dbg !9630
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !437, metadata !5672, metadata !DIExpression()) #8, !dbg !9631
  call void @llvm.dbg.declare(metadata !437, metadata !5676, metadata !DIExpression()) #8, !dbg !9631
  store i32 1, i32* %tmp.i, align 4, !dbg !9631
  %17 = load i32, i32* %tmp.i, align 4, !dbg !9631
  call void @llvm.dbg.declare(metadata !437, metadata !5677, metadata !DIExpression()) #8, !dbg !9632
  call void @llvm.dbg.declare(metadata !437, metadata !5683, metadata !DIExpression()) #8, !dbg !9632
  store i32 1, i32* %tmp8.i, align 4, !dbg !9632
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !9632
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !9633
  call void @arch_local_irq_restore(i64 %19) #13, !dbg !9633
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9634, !srcloc !5687
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !9635
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !9635
  %rlock.i28 = bitcast %union.anon.3* %21 to %struct.raw_spinlock*, !dbg !9635
  %22 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !9636
  %tx26 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %22, i32 0, i32 0, !dbg !9637
  ret %struct.dma_async_tx_descriptor* %tx26, !dbg !9638
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !9639 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9643, metadata !DIExpression()), !dbg !9647
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9649, metadata !DIExpression()), !dbg !9650
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9651, metadata !DIExpression()), !dbg !9652
  %0 = load i64, i64* %size.addr, align 8, !dbg !9653
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !9655
  br i1 %1, label %if.then, label %if.end447, !dbg !9656

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !9657
  %tobool = icmp ne i64 %2, 0, !dbg !9657
  br i1 %tobool, label %if.end, label %if.then1, !dbg !9660

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !9661
  br label %return, !dbg !9661

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !9662
  %cmp = icmp ult i64 %3, 4096, !dbg !9664
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9665

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9666
  br label %return, !dbg !9666

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub = sub i64 %4, 1, !dbg !9667
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !9667
  br i1 %5, label %cond.true, label %cond.false442, !dbg !9667

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub4 = sub i64 %6, 1, !dbg !9667
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !9667
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !9667

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub6 = sub i64 %8, 1, !dbg !9667
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !9667
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !9667

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !9667

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub9 = sub i64 %9, 1, !dbg !9667
  %and = and i64 %sub9, -9223372036854775808, !dbg !9667
  %tobool10 = icmp ne i64 %and, 0, !dbg !9667
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !9667

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !9667

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub13 = sub i64 %10, 1, !dbg !9667
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !9667
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9667
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !9667

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !9667

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub18 = sub i64 %11, 1, !dbg !9667
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !9667
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9667
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !9667

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !9667

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub23 = sub i64 %12, 1, !dbg !9667
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !9667
  %tobool25 = icmp ne i64 %and24, 0, !dbg !9667
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !9667

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !9667

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub28 = sub i64 %13, 1, !dbg !9667
  %and29 = and i64 %sub28, 576460752303423488, !dbg !9667
  %tobool30 = icmp ne i64 %and29, 0, !dbg !9667
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !9667

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !9667

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub33 = sub i64 %14, 1, !dbg !9667
  %and34 = and i64 %sub33, 288230376151711744, !dbg !9667
  %tobool35 = icmp ne i64 %and34, 0, !dbg !9667
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !9667

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !9667

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub38 = sub i64 %15, 1, !dbg !9667
  %and39 = and i64 %sub38, 144115188075855872, !dbg !9667
  %tobool40 = icmp ne i64 %and39, 0, !dbg !9667
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !9667

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !9667

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub43 = sub i64 %16, 1, !dbg !9667
  %and44 = and i64 %sub43, 72057594037927936, !dbg !9667
  %tobool45 = icmp ne i64 %and44, 0, !dbg !9667
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !9667

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !9667

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub48 = sub i64 %17, 1, !dbg !9667
  %and49 = and i64 %sub48, 36028797018963968, !dbg !9667
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9667
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !9667

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !9667

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub53 = sub i64 %18, 1, !dbg !9667
  %and54 = and i64 %sub53, 18014398509481984, !dbg !9667
  %tobool55 = icmp ne i64 %and54, 0, !dbg !9667
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !9667

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !9667

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub58 = sub i64 %19, 1, !dbg !9667
  %and59 = and i64 %sub58, 9007199254740992, !dbg !9667
  %tobool60 = icmp ne i64 %and59, 0, !dbg !9667
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !9667

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !9667

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub63 = sub i64 %20, 1, !dbg !9667
  %and64 = and i64 %sub63, 4503599627370496, !dbg !9667
  %tobool65 = icmp ne i64 %and64, 0, !dbg !9667
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !9667

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !9667

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub68 = sub i64 %21, 1, !dbg !9667
  %and69 = and i64 %sub68, 2251799813685248, !dbg !9667
  %tobool70 = icmp ne i64 %and69, 0, !dbg !9667
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !9667

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !9667

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub73 = sub i64 %22, 1, !dbg !9667
  %and74 = and i64 %sub73, 1125899906842624, !dbg !9667
  %tobool75 = icmp ne i64 %and74, 0, !dbg !9667
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !9667

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !9667

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub78 = sub i64 %23, 1, !dbg !9667
  %and79 = and i64 %sub78, 562949953421312, !dbg !9667
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9667
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9667

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !9667

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub83 = sub i64 %24, 1, !dbg !9667
  %and84 = and i64 %sub83, 281474976710656, !dbg !9667
  %tobool85 = icmp ne i64 %and84, 0, !dbg !9667
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !9667

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !9667

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub88 = sub i64 %25, 1, !dbg !9667
  %and89 = and i64 %sub88, 140737488355328, !dbg !9667
  %tobool90 = icmp ne i64 %and89, 0, !dbg !9667
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !9667

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !9667

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub93 = sub i64 %26, 1, !dbg !9667
  %and94 = and i64 %sub93, 70368744177664, !dbg !9667
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9667
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !9667

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !9667

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub98 = sub i64 %27, 1, !dbg !9667
  %and99 = and i64 %sub98, 35184372088832, !dbg !9667
  %tobool100 = icmp ne i64 %and99, 0, !dbg !9667
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !9667

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !9667

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub103 = sub i64 %28, 1, !dbg !9667
  %and104 = and i64 %sub103, 17592186044416, !dbg !9667
  %tobool105 = icmp ne i64 %and104, 0, !dbg !9667
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !9667

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !9667

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub108 = sub i64 %29, 1, !dbg !9667
  %and109 = and i64 %sub108, 8796093022208, !dbg !9667
  %tobool110 = icmp ne i64 %and109, 0, !dbg !9667
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !9667

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !9667

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub113 = sub i64 %30, 1, !dbg !9667
  %and114 = and i64 %sub113, 4398046511104, !dbg !9667
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9667
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9667

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !9667

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub118 = sub i64 %31, 1, !dbg !9667
  %and119 = and i64 %sub118, 2199023255552, !dbg !9667
  %tobool120 = icmp ne i64 %and119, 0, !dbg !9667
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !9667

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !9667

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub123 = sub i64 %32, 1, !dbg !9667
  %and124 = and i64 %sub123, 1099511627776, !dbg !9667
  %tobool125 = icmp ne i64 %and124, 0, !dbg !9667
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !9667

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !9667

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub128 = sub i64 %33, 1, !dbg !9667
  %and129 = and i64 %sub128, 549755813888, !dbg !9667
  %tobool130 = icmp ne i64 %and129, 0, !dbg !9667
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !9667

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !9667

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub133 = sub i64 %34, 1, !dbg !9667
  %and134 = and i64 %sub133, 274877906944, !dbg !9667
  %tobool135 = icmp ne i64 %and134, 0, !dbg !9667
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !9667

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !9667

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub138 = sub i64 %35, 1, !dbg !9667
  %and139 = and i64 %sub138, 137438953472, !dbg !9667
  %tobool140 = icmp ne i64 %and139, 0, !dbg !9667
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !9667

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !9667

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub143 = sub i64 %36, 1, !dbg !9667
  %and144 = and i64 %sub143, 68719476736, !dbg !9667
  %tobool145 = icmp ne i64 %and144, 0, !dbg !9667
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !9667

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !9667

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub148 = sub i64 %37, 1, !dbg !9667
  %and149 = and i64 %sub148, 34359738368, !dbg !9667
  %tobool150 = icmp ne i64 %and149, 0, !dbg !9667
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !9667

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !9667

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub153 = sub i64 %38, 1, !dbg !9667
  %and154 = and i64 %sub153, 17179869184, !dbg !9667
  %tobool155 = icmp ne i64 %and154, 0, !dbg !9667
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !9667

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !9667

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub158 = sub i64 %39, 1, !dbg !9667
  %and159 = and i64 %sub158, 8589934592, !dbg !9667
  %tobool160 = icmp ne i64 %and159, 0, !dbg !9667
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !9667

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !9667

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub163 = sub i64 %40, 1, !dbg !9667
  %and164 = and i64 %sub163, 4294967296, !dbg !9667
  %tobool165 = icmp ne i64 %and164, 0, !dbg !9667
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !9667

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !9667

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub168 = sub i64 %41, 1, !dbg !9667
  %and169 = and i64 %sub168, 2147483648, !dbg !9667
  %tobool170 = icmp ne i64 %and169, 0, !dbg !9667
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !9667

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !9667

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub173 = sub i64 %42, 1, !dbg !9667
  %and174 = and i64 %sub173, 1073741824, !dbg !9667
  %tobool175 = icmp ne i64 %and174, 0, !dbg !9667
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !9667

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !9667

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub178 = sub i64 %43, 1, !dbg !9667
  %and179 = and i64 %sub178, 536870912, !dbg !9667
  %tobool180 = icmp ne i64 %and179, 0, !dbg !9667
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !9667

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !9667

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub183 = sub i64 %44, 1, !dbg !9667
  %and184 = and i64 %sub183, 268435456, !dbg !9667
  %tobool185 = icmp ne i64 %and184, 0, !dbg !9667
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !9667

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !9667

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub188 = sub i64 %45, 1, !dbg !9667
  %and189 = and i64 %sub188, 134217728, !dbg !9667
  %tobool190 = icmp ne i64 %and189, 0, !dbg !9667
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !9667

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !9667

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub193 = sub i64 %46, 1, !dbg !9667
  %and194 = and i64 %sub193, 67108864, !dbg !9667
  %tobool195 = icmp ne i64 %and194, 0, !dbg !9667
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !9667

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !9667

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub198 = sub i64 %47, 1, !dbg !9667
  %and199 = and i64 %sub198, 33554432, !dbg !9667
  %tobool200 = icmp ne i64 %and199, 0, !dbg !9667
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !9667

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !9667

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub203 = sub i64 %48, 1, !dbg !9667
  %and204 = and i64 %sub203, 16777216, !dbg !9667
  %tobool205 = icmp ne i64 %and204, 0, !dbg !9667
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !9667

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !9667

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub208 = sub i64 %49, 1, !dbg !9667
  %and209 = and i64 %sub208, 8388608, !dbg !9667
  %tobool210 = icmp ne i64 %and209, 0, !dbg !9667
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !9667

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !9667

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub213 = sub i64 %50, 1, !dbg !9667
  %and214 = and i64 %sub213, 4194304, !dbg !9667
  %tobool215 = icmp ne i64 %and214, 0, !dbg !9667
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !9667

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !9667

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub218 = sub i64 %51, 1, !dbg !9667
  %and219 = and i64 %sub218, 2097152, !dbg !9667
  %tobool220 = icmp ne i64 %and219, 0, !dbg !9667
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !9667

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !9667

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub223 = sub i64 %52, 1, !dbg !9667
  %and224 = and i64 %sub223, 1048576, !dbg !9667
  %tobool225 = icmp ne i64 %and224, 0, !dbg !9667
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !9667

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !9667

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub228 = sub i64 %53, 1, !dbg !9667
  %and229 = and i64 %sub228, 524288, !dbg !9667
  %tobool230 = icmp ne i64 %and229, 0, !dbg !9667
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !9667

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !9667

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub233 = sub i64 %54, 1, !dbg !9667
  %and234 = and i64 %sub233, 262144, !dbg !9667
  %tobool235 = icmp ne i64 %and234, 0, !dbg !9667
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !9667

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !9667

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub238 = sub i64 %55, 1, !dbg !9667
  %and239 = and i64 %sub238, 131072, !dbg !9667
  %tobool240 = icmp ne i64 %and239, 0, !dbg !9667
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !9667

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !9667

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub243 = sub i64 %56, 1, !dbg !9667
  %and244 = and i64 %sub243, 65536, !dbg !9667
  %tobool245 = icmp ne i64 %and244, 0, !dbg !9667
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !9667

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !9667

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub248 = sub i64 %57, 1, !dbg !9667
  %and249 = and i64 %sub248, 32768, !dbg !9667
  %tobool250 = icmp ne i64 %and249, 0, !dbg !9667
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !9667

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !9667

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub253 = sub i64 %58, 1, !dbg !9667
  %and254 = and i64 %sub253, 16384, !dbg !9667
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9667
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9667

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !9667

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub258 = sub i64 %59, 1, !dbg !9667
  %and259 = and i64 %sub258, 8192, !dbg !9667
  %tobool260 = icmp ne i64 %and259, 0, !dbg !9667
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !9667

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !9667

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub263 = sub i64 %60, 1, !dbg !9667
  %and264 = and i64 %sub263, 4096, !dbg !9667
  %tobool265 = icmp ne i64 %and264, 0, !dbg !9667
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !9667

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !9667

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub268 = sub i64 %61, 1, !dbg !9667
  %and269 = and i64 %sub268, 2048, !dbg !9667
  %tobool270 = icmp ne i64 %and269, 0, !dbg !9667
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !9667

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !9667

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub273 = sub i64 %62, 1, !dbg !9667
  %and274 = and i64 %sub273, 1024, !dbg !9667
  %tobool275 = icmp ne i64 %and274, 0, !dbg !9667
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !9667

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !9667

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub278 = sub i64 %63, 1, !dbg !9667
  %and279 = and i64 %sub278, 512, !dbg !9667
  %tobool280 = icmp ne i64 %and279, 0, !dbg !9667
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !9667

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !9667

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub283 = sub i64 %64, 1, !dbg !9667
  %and284 = and i64 %sub283, 256, !dbg !9667
  %tobool285 = icmp ne i64 %and284, 0, !dbg !9667
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !9667

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !9667

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub288 = sub i64 %65, 1, !dbg !9667
  %and289 = and i64 %sub288, 128, !dbg !9667
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9667
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9667

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !9667

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub293 = sub i64 %66, 1, !dbg !9667
  %and294 = and i64 %sub293, 64, !dbg !9667
  %tobool295 = icmp ne i64 %and294, 0, !dbg !9667
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !9667

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !9667

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub298 = sub i64 %67, 1, !dbg !9667
  %and299 = and i64 %sub298, 32, !dbg !9667
  %tobool300 = icmp ne i64 %and299, 0, !dbg !9667
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !9667

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !9667

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub303 = sub i64 %68, 1, !dbg !9667
  %and304 = and i64 %sub303, 16, !dbg !9667
  %tobool305 = icmp ne i64 %and304, 0, !dbg !9667
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !9667

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !9667

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub308 = sub i64 %69, 1, !dbg !9667
  %and309 = and i64 %sub308, 8, !dbg !9667
  %tobool310 = icmp ne i64 %and309, 0, !dbg !9667
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !9667

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !9667

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub313 = sub i64 %70, 1, !dbg !9667
  %and314 = and i64 %sub313, 4, !dbg !9667
  %tobool315 = icmp ne i64 %and314, 0, !dbg !9667
  %71 = zext i1 %tobool315 to i64, !dbg !9667
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !9667
  br label %cond.end, !dbg !9667

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !9667
  br label %cond.end317, !dbg !9667

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !9667
  br label %cond.end319, !dbg !9667

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !9667
  br label %cond.end321, !dbg !9667

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !9667
  br label %cond.end323, !dbg !9667

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !9667
  br label %cond.end325, !dbg !9667

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !9667
  br label %cond.end327, !dbg !9667

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !9667
  br label %cond.end329, !dbg !9667

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !9667
  br label %cond.end331, !dbg !9667

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !9667
  br label %cond.end333, !dbg !9667

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !9667
  br label %cond.end335, !dbg !9667

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !9667
  br label %cond.end337, !dbg !9667

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !9667
  br label %cond.end339, !dbg !9667

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !9667
  br label %cond.end341, !dbg !9667

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !9667
  br label %cond.end343, !dbg !9667

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !9667
  br label %cond.end345, !dbg !9667

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !9667
  br label %cond.end347, !dbg !9667

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !9667
  br label %cond.end349, !dbg !9667

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !9667
  br label %cond.end351, !dbg !9667

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !9667
  br label %cond.end353, !dbg !9667

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !9667
  br label %cond.end355, !dbg !9667

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !9667
  br label %cond.end357, !dbg !9667

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !9667
  br label %cond.end359, !dbg !9667

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !9667
  br label %cond.end361, !dbg !9667

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !9667
  br label %cond.end363, !dbg !9667

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !9667
  br label %cond.end365, !dbg !9667

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !9667
  br label %cond.end367, !dbg !9667

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !9667
  br label %cond.end369, !dbg !9667

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !9667
  br label %cond.end371, !dbg !9667

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !9667
  br label %cond.end373, !dbg !9667

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !9667
  br label %cond.end375, !dbg !9667

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !9667
  br label %cond.end377, !dbg !9667

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !9667
  br label %cond.end379, !dbg !9667

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !9667
  br label %cond.end381, !dbg !9667

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !9667
  br label %cond.end383, !dbg !9667

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !9667
  br label %cond.end385, !dbg !9667

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !9667
  br label %cond.end387, !dbg !9667

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !9667
  br label %cond.end389, !dbg !9667

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !9667
  br label %cond.end391, !dbg !9667

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !9667
  br label %cond.end393, !dbg !9667

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !9667
  br label %cond.end395, !dbg !9667

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !9667
  br label %cond.end397, !dbg !9667

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !9667
  br label %cond.end399, !dbg !9667

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !9667
  br label %cond.end401, !dbg !9667

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !9667
  br label %cond.end403, !dbg !9667

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !9667
  br label %cond.end405, !dbg !9667

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !9667
  br label %cond.end407, !dbg !9667

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !9667
  br label %cond.end409, !dbg !9667

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !9667
  br label %cond.end411, !dbg !9667

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !9667
  br label %cond.end413, !dbg !9667

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !9667
  br label %cond.end415, !dbg !9667

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !9667
  br label %cond.end417, !dbg !9667

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !9667
  br label %cond.end419, !dbg !9667

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !9667
  br label %cond.end421, !dbg !9667

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !9667
  br label %cond.end423, !dbg !9667

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !9667
  br label %cond.end425, !dbg !9667

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !9667
  br label %cond.end427, !dbg !9667

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !9667
  br label %cond.end429, !dbg !9667

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !9667
  br label %cond.end431, !dbg !9667

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !9667
  br label %cond.end433, !dbg !9667

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !9667
  br label %cond.end435, !dbg !9667

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !9667
  br label %cond.end437, !dbg !9667

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !9667
  br label %cond.end440, !dbg !9667

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !9667

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !9667
  br label %cond.end444, !dbg !9667

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !9667
  %sub443 = sub i64 %72, 1, !dbg !9667
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !9667
  br label %cond.end444, !dbg !9667

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !9667
  %sub446 = sub i32 %cond445, 12, !dbg !9668
  %add = add i32 %sub446, 1, !dbg !9669
  store i32 %add, i32* %retval, align 4, !dbg !9670
  br label %return, !dbg !9670

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !9671
  %dec = add i64 %73, -1, !dbg !9671
  store i64 %dec, i64* %size.addr, align 8, !dbg !9671
  %74 = load i64, i64* %size.addr, align 8, !dbg !9672
  %shr = lshr i64 %74, 12, !dbg !9672
  store i64 %shr, i64* %size.addr, align 8, !dbg !9672
  %75 = load i64, i64* %size.addr, align 8, !dbg !9673
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9650
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !9674
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !9675
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #7, !dbg !9674, !srcloc !9676
  store i32 %78, i32* %bitpos.i, align 4, !dbg !9674
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !9677
  %add.i = add i32 %79, 1, !dbg !9678
  store i32 %add.i, i32* %retval, align 4, !dbg !9679
  br label %return, !dbg !9679

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !9680
  ret i32 %80, !dbg !9680
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !9681 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9643, metadata !DIExpression()), !dbg !9685
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9649, metadata !DIExpression()), !dbg !9687
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9688, metadata !DIExpression()), !dbg !9689
  %0 = load i64, i64* %n.addr, align 8, !dbg !9690
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9687
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9691
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9692
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #7, !dbg !9691, !srcloc !9676
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9691
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9693
  %add.i = add i32 %4, 1, !dbg !9694
  %sub = sub i32 %add.i, 1, !dbg !9695
  ret i32 %sub, !dbg !9696
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !9697 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !9701, metadata !DIExpression()), !dbg !9702
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !9703, metadata !DIExpression()), !dbg !9704
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9705, metadata !DIExpression()), !dbg !9706
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9707, metadata !DIExpression()), !dbg !9708
  %0 = load i8*, i8** %object.addr, align 8, !dbg !9709
  ret i8* %0, !dbg !9710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !9711 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !9714, metadata !DIExpression()), !dbg !9715
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !9716
  %tobool = trunc i8 %0 to i1, !dbg !9716
  %lnot = xor i1 %tobool, true, !dbg !9716
  %lnot1 = xor i1 %lnot, true, !dbg !9716
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9716
  %conv = sext i32 %lnot.ext to i64, !dbg !9716
  %tobool2 = icmp ne i64 %conv, 0, !dbg !9716
  ret i1 %tobool2, !dbg !9717
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #3

; Function Attrs: noredzone
declare dso_local void @dma_async_tx_descriptor_init(%struct.dma_async_tx_descriptor*, %struct.dma_chan*) #2

; Function Attrs: noredzone
declare dso_local i32 @vchan_tx_submit(%struct.dma_async_tx_descriptor*) #2

; Function Attrs: noredzone
declare dso_local i32 @vchan_tx_desc_free(%struct.dma_async_tx_descriptor*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_slave_direction(i32 %direction) #0 !dbg !9718 {
entry:
  %direction.addr = alloca i32, align 4
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !9721, metadata !DIExpression()), !dbg !9722
  %0 = load i32, i32* %direction.addr, align 4, !dbg !9723
  %cmp = icmp eq i32 %0, 1, !dbg !9724
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9725

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %direction.addr, align 4, !dbg !9726
  %cmp1 = icmp eq i32 %1, 2, !dbg !9727
  br label %lor.end, !dbg !9725

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !9728
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dmaengine_get_src_icg(%struct.dma_interleaved_template* %xt, %struct.data_chunk* %chunk) #0 !dbg !9729 {
entry:
  %xt.addr = alloca %struct.dma_interleaved_template*, align 8
  %chunk.addr = alloca %struct.data_chunk*, align 8
  store %struct.dma_interleaved_template* %xt, %struct.dma_interleaved_template** %xt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_interleaved_template** %xt.addr, metadata !9733, metadata !DIExpression()), !dbg !9734
  store %struct.data_chunk* %chunk, %struct.data_chunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.data_chunk** %chunk.addr, metadata !9735, metadata !DIExpression()), !dbg !9736
  %0 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9737
  %src_inc = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %0, i32 0, i32 3, !dbg !9738
  %1 = load i8, i8* %src_inc, align 4, !dbg !9738
  %tobool = trunc i8 %1 to i1, !dbg !9738
  %2 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9739
  %src_sgl = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %2, i32 0, i32 5, !dbg !9740
  %3 = load i8, i8* %src_sgl, align 2, !dbg !9740
  %tobool1 = trunc i8 %3 to i1, !dbg !9740
  %4 = load %struct.data_chunk*, %struct.data_chunk** %chunk.addr, align 8, !dbg !9741
  %icg = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %4, i32 0, i32 1, !dbg !9742
  %5 = load i64, i64* %icg, align 8, !dbg !9742
  %6 = load %struct.data_chunk*, %struct.data_chunk** %chunk.addr, align 8, !dbg !9743
  %src_icg = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %6, i32 0, i32 3, !dbg !9744
  %7 = load i64, i64* %src_icg, align 8, !dbg !9744
  %call = call i64 @dmaengine_get_icg(i1 zeroext %tobool, i1 zeroext %tobool1, i64 %5, i64 %7) #11, !dbg !9745
  ret i64 %call, !dbg !9746
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dmaengine_get_dst_icg(%struct.dma_interleaved_template* %xt, %struct.data_chunk* %chunk) #0 !dbg !9747 {
entry:
  %xt.addr = alloca %struct.dma_interleaved_template*, align 8
  %chunk.addr = alloca %struct.data_chunk*, align 8
  store %struct.dma_interleaved_template* %xt, %struct.dma_interleaved_template** %xt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_interleaved_template** %xt.addr, metadata !9748, metadata !DIExpression()), !dbg !9749
  store %struct.data_chunk* %chunk, %struct.data_chunk** %chunk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.data_chunk** %chunk.addr, metadata !9750, metadata !DIExpression()), !dbg !9751
  %0 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9752
  %dst_inc = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %0, i32 0, i32 4, !dbg !9753
  %1 = load i8, i8* %dst_inc, align 1, !dbg !9753
  %tobool = trunc i8 %1 to i1, !dbg !9753
  %2 = load %struct.dma_interleaved_template*, %struct.dma_interleaved_template** %xt.addr, align 8, !dbg !9754
  %dst_sgl = getelementptr inbounds %struct.dma_interleaved_template, %struct.dma_interleaved_template* %2, i32 0, i32 6, !dbg !9755
  %3 = load i8, i8* %dst_sgl, align 1, !dbg !9755
  %tobool1 = trunc i8 %3 to i1, !dbg !9755
  %4 = load %struct.data_chunk*, %struct.data_chunk** %chunk.addr, align 8, !dbg !9756
  %icg = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %4, i32 0, i32 1, !dbg !9757
  %5 = load i64, i64* %icg, align 8, !dbg !9757
  %6 = load %struct.data_chunk*, %struct.data_chunk** %chunk.addr, align 8, !dbg !9758
  %dst_icg = getelementptr inbounds %struct.data_chunk, %struct.data_chunk* %6, i32 0, i32 2, !dbg !9759
  %7 = load i64, i64* %dst_icg, align 8, !dbg !9759
  %call = call i64 @dmaengine_get_icg(i1 zeroext %tobool, i1 zeroext %tobool1, i64 %5, i64 %7) #11, !dbg !9760
  ret i64 %call, !dbg !9761
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dmaengine_get_icg(i1 zeroext %inc, i1 zeroext %sgl, i64 %icg, i64 %dir_icg) #0 !dbg !9762 {
entry:
  %retval = alloca i64, align 8
  %inc.addr = alloca i8, align 1
  %sgl.addr = alloca i8, align 1
  %icg.addr = alloca i64, align 8
  %dir_icg.addr = alloca i64, align 8
  %frombool = zext i1 %inc to i8
  store i8 %frombool, i8* %inc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %inc.addr, metadata !9765, metadata !DIExpression()), !dbg !9766
  %frombool1 = zext i1 %sgl to i8
  store i8 %frombool1, i8* %sgl.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sgl.addr, metadata !9767, metadata !DIExpression()), !dbg !9768
  store i64 %icg, i64* %icg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %icg.addr, metadata !9769, metadata !DIExpression()), !dbg !9770
  store i64 %dir_icg, i64* %dir_icg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dir_icg.addr, metadata !9771, metadata !DIExpression()), !dbg !9772
  %0 = load i8, i8* %inc.addr, align 1, !dbg !9773
  %tobool = trunc i8 %0 to i1, !dbg !9773
  br i1 %tobool, label %if.then, label %if.end7, !dbg !9775

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %dir_icg.addr, align 8, !dbg !9776
  %tobool2 = icmp ne i64 %1, 0, !dbg !9776
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !9779

if.then3:                                         ; preds = %if.then
  %2 = load i64, i64* %dir_icg.addr, align 8, !dbg !9780
  store i64 %2, i64* %retval, align 8, !dbg !9781
  br label %return, !dbg !9781

if.end:                                           ; preds = %if.then
  %3 = load i8, i8* %sgl.addr, align 1, !dbg !9782
  %tobool4 = trunc i8 %3 to i1, !dbg !9782
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9784

if.then5:                                         ; preds = %if.end
  %4 = load i64, i64* %icg.addr, align 8, !dbg !9785
  store i64 %4, i64* %retval, align 8, !dbg !9786
  br label %return, !dbg !9786

if.end6:                                          ; preds = %if.end
  br label %if.end7, !dbg !9787

if.end7:                                          ; preds = %if.end6, %entry
  store i64 0, i64* %retval, align 8, !dbg !9788
  br label %return, !dbg !9788

return:                                           ; preds = %if.end7, %if.then5, %if.then3
  %5 = load i64, i64* %retval, align 8, !dbg !9789
  ret i64 %5, !dbg !9789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_stop(%struct.omap_chan* %c) #0 !dbg !9790 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.omap_chan*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %val = alloca i32, align 4
  %sysconfig = alloca i32, align 4
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !9793, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !9795, metadata !DIExpression()), !dbg !9796
  %0 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9797
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %0, i32 0, i32 0, !dbg !9798
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 0, !dbg !9799
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan, i32 0, i32 0, !dbg !9800
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !9800
  %call = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %1) #11, !dbg !9801
  store %struct.omap_dmadev* %call, %struct.omap_dmadev** %od, align 8, !dbg !9796
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9802, metadata !DIExpression()), !dbg !9803
  %2 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9804
  call void @omap_dma_chan_write(%struct.omap_chan* %2, i32 34, i32 0) #11, !dbg !9805
  %3 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9806
  call void @omap_dma_clear_csr(%struct.omap_chan* %3) #11, !dbg !9807
  %4 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9808
  %call1 = call i32 @omap_dma_chan_read(%struct.omap_chan* %4, i32 33) #11, !dbg !9809
  store i32 %call1, i32* %val, align 4, !dbg !9810
  %5 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !9811
  %plat = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %5, i32 0, i32 4, !dbg !9813
  %6 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat, align 8, !dbg !9813
  %errata = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %6, i32 0, i32 3, !dbg !9814
  %7 = load i32, i32* %errata, align 8, !dbg !9814
  %conv = zext i32 %7 to i64, !dbg !9811
  %and = and i64 %conv, 8, !dbg !9815
  %tobool = icmp ne i64 %and, 0, !dbg !9815
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9816

land.lhs.true:                                    ; preds = %entry
  %8 = load i32, i32* %val, align 4, !dbg !9817
  %and2 = and i32 %8, 16777216, !dbg !9818
  %tobool3 = icmp ne i32 %and2, 0, !dbg !9818
  br i1 %tobool3, label %if.then, label %if.else, !dbg !9819

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %sysconfig, metadata !9820, metadata !DIExpression()), !dbg !9822
  %9 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !9823
  %call4 = call i32 @omap_dma_glbl_read(%struct.omap_dmadev* %9, i32 28) #11, !dbg !9824
  store i32 %call4, i32* %sysconfig, align 4, !dbg !9825
  %10 = load i32, i32* %sysconfig, align 4, !dbg !9826
  %and5 = and i32 %10, -12289, !dbg !9827
  store i32 %and5, i32* %val, align 4, !dbg !9828
  %11 = load i32, i32* %val, align 4, !dbg !9829
  %or = or i32 %11, 4096, !dbg !9829
  store i32 %or, i32* %val, align 4, !dbg !9829
  %12 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !9830
  %13 = load i32, i32* %val, align 4, !dbg !9831
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %12, i32 28, i32 %13) #11, !dbg !9832
  %14 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9833
  %call6 = call i32 @omap_dma_chan_read(%struct.omap_chan* %14, i32 33) #11, !dbg !9834
  store i32 %call6, i32* %val, align 4, !dbg !9835
  %15 = load i32, i32* %val, align 4, !dbg !9836
  %and7 = and i32 %15, -129, !dbg !9836
  store i32 %and7, i32* %val, align 4, !dbg !9836
  %16 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9837
  %17 = load i32, i32* %val, align 4, !dbg !9838
  call void @omap_dma_chan_write(%struct.omap_chan* %16, i32 33, i32 %17) #11, !dbg !9839
  %18 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9840
  %ccr = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %18, i32 0, i32 3, !dbg !9842
  %19 = load i32, i32* %ccr, align 8, !dbg !9842
  %and8 = and i32 %19, 33554432, !dbg !9843
  %tobool9 = icmp ne i32 %and8, 0, !dbg !9843
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !9844

if.then10:                                        ; preds = %if.then
  %20 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9845
  call void @omap_dma_drain_chan(%struct.omap_chan* %20) #11, !dbg !9846
  br label %if.end, !dbg !9846

if.end:                                           ; preds = %if.then10, %if.then
  %21 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !9847
  %22 = load i32, i32* %sysconfig, align 4, !dbg !9848
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %21, i32 28, i32 %22) #11, !dbg !9849
  br label %if.end21, !dbg !9850

if.else:                                          ; preds = %land.lhs.true, %entry
  %23 = load i32, i32* %val, align 4, !dbg !9851
  %and11 = and i32 %23, 128, !dbg !9854
  %tobool12 = icmp ne i32 %and11, 0, !dbg !9854
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !9855

if.then13:                                        ; preds = %if.else
  store i32 -22, i32* %retval, align 4, !dbg !9856
  br label %return, !dbg !9856

if.end14:                                         ; preds = %if.else
  %24 = load i32, i32* %val, align 4, !dbg !9857
  %and15 = and i32 %24, -129, !dbg !9857
  store i32 %and15, i32* %val, align 4, !dbg !9857
  %25 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9858
  %26 = load i32, i32* %val, align 4, !dbg !9859
  call void @omap_dma_chan_write(%struct.omap_chan* %25, i32 33, i32 %26) #11, !dbg !9860
  %27 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9861
  %ccr16 = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %27, i32 0, i32 3, !dbg !9863
  %28 = load i32, i32* %ccr16, align 8, !dbg !9863
  %and17 = and i32 %28, 33554432, !dbg !9864
  %tobool18 = icmp ne i32 %and17, 0, !dbg !9864
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !9865

if.then19:                                        ; preds = %if.end14
  %29 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9866
  call void @omap_dma_drain_chan(%struct.omap_chan* %29) #11, !dbg !9867
  br label %if.end20, !dbg !9867

if.end20:                                         ; preds = %if.then19, %if.end14
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9868, !srcloc !9869
  %30 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !9870
  %plat22 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %30, i32 0, i32 4, !dbg !9870
  %31 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat22, align 8, !dbg !9870
  %dma_attr = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %31, i32 0, i32 2, !dbg !9870
  %32 = load %struct.omap_dma_dev_attr*, %struct.omap_dma_dev_attr** %dma_attr, align 8, !dbg !9870
  %dev_caps = getelementptr inbounds %struct.omap_dma_dev_attr, %struct.omap_dma_dev_attr* %32, i32 0, i32 0, !dbg !9870
  %33 = load i32, i32* %dev_caps, align 4, !dbg !9870
  %conv23 = zext i32 %33 to i64, !dbg !9870
  %and24 = and i64 %conv23, 64, !dbg !9870
  %tobool25 = icmp ne i64 %and24, 0, !dbg !9870
  br i1 %tobool25, label %if.end32, label %land.lhs.true26, !dbg !9872

land.lhs.true26:                                  ; preds = %if.end21
  %34 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9873
  %cyclic = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %34, i32 0, i32 6, !dbg !9874
  %35 = load i8, i8* %cyclic, align 4, !dbg !9874
  %tobool27 = trunc i8 %35 to i1, !dbg !9874
  br i1 %tobool27, label %if.then29, label %if.end32, !dbg !9875

if.then29:                                        ; preds = %land.lhs.true26
  %36 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9876
  %call30 = call i32 @omap_dma_chan_read(%struct.omap_chan* %36, i32 44) #11, !dbg !9878
  store i32 %call30, i32* %val, align 4, !dbg !9879
  %37 = load i32, i32* %val, align 4, !dbg !9880
  %or31 = or i32 %37, 16384, !dbg !9880
  store i32 %or31, i32* %val, align 4, !dbg !9880
  %38 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9882
  %39 = load i32, i32* %val, align 4, !dbg !9883
  call void @omap_dma_chan_write(%struct.omap_chan* %38, i32 44, i32 %39) #11, !dbg !9884
  br label %if.end32, !dbg !9885

if.end32:                                         ; preds = %if.then29, %land.lhs.true26, %if.end21
  %40 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9886
  %running = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %40, i32 0, i32 8, !dbg !9887
  store i8 0, i8* %running, align 2, !dbg !9888
  store i32 0, i32* %retval, align 4, !dbg !9889
  br label %return, !dbg !9889

return:                                           ; preds = %if.end32, %if.then13
  %41 = load i32, i32* %retval, align 4, !dbg !9890
  ret i32 %41, !dbg !9890
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_drain_chan(%struct.omap_chan* %c) #0 !dbg !9891 {
entry:
  %c.addr = alloca %struct.omap_chan*, align 8
  %i = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !9892, metadata !DIExpression()), !dbg !9893
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9894, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9896, metadata !DIExpression()), !dbg !9897
  store i32 0, i32* %i, align 4, !dbg !9898
  br label %for.cond, !dbg !9900

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9901
  %call = call i32 @omap_dma_chan_read(%struct.omap_chan* %0, i32 33) #11, !dbg !9904
  store i32 %call, i32* %val, align 4, !dbg !9905
  %1 = load i32, i32* %val, align 4, !dbg !9906
  %and = and i32 %1, 1536, !dbg !9908
  %tobool = icmp ne i32 %and, 0, !dbg !9908
  br i1 %tobool, label %if.end, label %if.then, !dbg !9909

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !9910

if.end:                                           ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !9911
  %cmp = icmp sgt i32 %2, 100, !dbg !9913
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !9914

if.then1:                                         ; preds = %if.end
  br label %for.end, !dbg !9915

if.end2:                                          ; preds = %if.end
  call void @__const_udelay(i64 21475) #11, !dbg !9916
  br label %for.inc, !dbg !9921

for.inc:                                          ; preds = %if.end2
  %3 = load i32, i32* %i, align 4, !dbg !9922
  %inc = add i32 %3, 1, !dbg !9922
  store i32 %inc, i32* %i, align 4, !dbg !9922
  br label %for.cond, !dbg !9923, !llvm.loop !9924

for.end:                                          ; preds = %if.then1, %if.then
  %4 = load i32, i32* %val, align 4, !dbg !9927
  %and3 = and i32 %4, 1536, !dbg !9929
  %tobool4 = icmp ne i32 %and3, 0, !dbg !9929
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9930

if.then5:                                         ; preds = %for.end
  %5 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9931
  %vc = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %5, i32 0, i32 0, !dbg !9931
  %chan = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %vc, i32 0, i32 0, !dbg !9931
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %chan, i32 0, i32 0, !dbg !9931
  %6 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !9931
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %6, i32 0, i32 15, !dbg !9931
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9931
  %8 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !9931
  %dma_ch = getelementptr inbounds %struct.omap_chan, %struct.omap_chan* %8, i32 0, i32 9, !dbg !9931
  %9 = load i32, i32* %dma_ch, align 8, !dbg !9931
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.23, i64 0, i64 0), i32 %9) #12, !dbg !9931
  br label %if.end6, !dbg !9931

if.end6:                                          ; preds = %if.then5, %for.end
  ret void, !dbg !9932
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_terminate_vdesc(%struct.virt_dma_desc* %vd) #0 !dbg !9933 {
entry:
  %vd.addr = alloca %struct.virt_dma_desc*, align 8
  %vc = alloca %struct.virt_dma_chan*, align 8
  store %struct.virt_dma_desc* %vd, %struct.virt_dma_desc** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd.addr, metadata !9934, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc, metadata !9936, metadata !DIExpression()), !dbg !9937
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !9938
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %0, i32 0, i32 0, !dbg !9939
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx, i32 0, i32 3, !dbg !9940
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !9940
  %call = call %struct.virt_dma_chan* @to_virt_chan(%struct.dma_chan* %1) #11, !dbg !9941
  store %struct.virt_dma_chan* %call, %struct.virt_dma_chan** %vc, align 8, !dbg !9937
  %2 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !9942
  %node = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %2, i32 0, i32 2, !dbg !9943
  %3 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !9944
  %desc_terminated = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %3, i32 0, i32 8, !dbg !9945
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* %desc_terminated) #11, !dbg !9946
  %4 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !9947
  %cyclic = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %4, i32 0, i32 9, !dbg !9949
  %5 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %cyclic, align 8, !dbg !9949
  %6 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !9950
  %cmp = icmp eq %struct.virt_dma_desc* %5, %6, !dbg !9951
  br i1 %cmp, label %if.then, label %if.end, !dbg !9952

if.then:                                          ; preds = %entry
  %7 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc, align 8, !dbg !9953
  %cyclic1 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %7, i32 0, i32 9, !dbg !9954
  store %struct.virt_dma_desc* null, %struct.virt_dma_desc** %cyclic1, align 8, !dbg !9955
  br label %if.end, !dbg !9953

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vchan_synchronize(%struct.virt_dma_chan* %vc) #0 !dbg !9957 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !5490, metadata !DIExpression()), !dbg !9958
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5496, metadata !DIExpression()), !dbg !9960
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4646, metadata !DIExpression()), !dbg !9961
  %vc.addr = alloca %struct.virt_dma_chan*, align 8
  %head = alloca %struct.list_head, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.virt_dma_chan* %vc, %struct.virt_dma_chan** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_chan** %vc.addr, metadata !9968, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.declare(metadata %struct.list_head* %head, metadata !9970, metadata !DIExpression()), !dbg !9971
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0, !dbg !9971
  store %struct.list_head* %head, %struct.list_head** %next, align 8, !dbg !9971
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1, !dbg !9971
  store %struct.list_head* %head, %struct.list_head** %prev, align 8, !dbg !9971
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9972, metadata !DIExpression()), !dbg !9973
  %0 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !9974
  %task = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %0, i32 0, i32 1, !dbg !9975
  call void @tasklet_kill(%struct.tasklet_struct* %task) #11, !dbg !9976
  br label %do.body, !dbg !9977

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9978

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9979, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9982, metadata !DIExpression()), !dbg !9981
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9981
  %conv = zext i1 %cmp to i32, !dbg !9981
  store i32 1, i32* %tmp, align 4, !dbg !9981
  %1 = load i32, i32* %tmp, align 4, !dbg !9981
  br label %do.body2, !dbg !9983

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9984

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9985

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9987, metadata !DIExpression()), !dbg !9990
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9991, metadata !DIExpression()), !dbg !9990
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9990
  %conv8 = zext i1 %cmp7 to i32, !dbg !9990
  store i32 1, i32* %tmp9, align 4, !dbg !9990
  %2 = load i32, i32* %tmp9, align 4, !dbg !9990
  %call = call i64 @arch_local_irq_save() #11, !dbg !9992
  store i64 %call, i64* %flags, align 8, !dbg !9992
  br label %do.end, !dbg !9992

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9985

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9984

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9993, !srcloc !9994
  br label %do.body12, !dbg !9993

do.body12:                                        ; preds = %do.body11
  %3 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !9995
  %lock = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %3, i32 0, i32 3, !dbg !9995
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9996
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !9997
  %rlock.i = bitcast %union.anon.3* %5 to %struct.raw_spinlock*, !dbg !9997
  br label %do.end14, !dbg !9995

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9993

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9984

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9983

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9978

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !9998
  %desc_terminated = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %6, i32 0, i32 8, !dbg !9999
  call void @list_splice_tail_init(%struct.list_head* %desc_terminated, %struct.list_head* %head) #11, !dbg !10000
  %7 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !10001
  %lock19 = getelementptr inbounds %struct.virt_dma_chan, %struct.virt_dma_chan* %7, i32 0, i32 3, !dbg !10002
  %8 = load i64, i64* %flags, align 8, !dbg !10003
  store %struct.spinlock* %lock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !437, metadata !5672, metadata !DIExpression()) #8, !dbg !10004
  call void @llvm.dbg.declare(metadata !437, metadata !5676, metadata !DIExpression()) #8, !dbg !10004
  store i32 1, i32* %tmp.i, align 4, !dbg !10004
  %9 = load i32, i32* %tmp.i, align 4, !dbg !10004
  call void @llvm.dbg.declare(metadata !437, metadata !5677, metadata !DIExpression()) #8, !dbg !10005
  call void @llvm.dbg.declare(metadata !437, metadata !5683, metadata !DIExpression()) #8, !dbg !10005
  store i32 1, i32* %tmp8.i, align 4, !dbg !10005
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !10005
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !10006
  call void @arch_local_irq_restore(i64 %11) #13, !dbg !10006
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10007, !srcloc !5687
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !10008
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !10008
  %rlock.i21 = bitcast %union.anon.3* %13 to %struct.raw_spinlock*, !dbg !10008
  %14 = load %struct.virt_dma_chan*, %struct.virt_dma_chan** %vc.addr, align 8, !dbg !10009
  call void @vchan_dma_desc_free_list(%struct.virt_dma_chan* %14, %struct.list_head* %head) #11, !dbg !10010
  ret void, !dbg !10011
}

; Function Attrs: noredzone
declare dso_local void @tasklet_kill(%struct.tasklet_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32_array(%struct.device_node* %np, i8* %propname, i32* %out_values, i64 %sz) #0 !dbg !10012 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_values.addr = alloca i32*, align 8
  %sz.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !10015, metadata !DIExpression()), !dbg !10016
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !10017, metadata !DIExpression()), !dbg !10018
  store i32* %out_values, i32** %out_values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_values.addr, metadata !10019, metadata !DIExpression()), !dbg !10020
  store i64 %sz, i64* %sz.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sz.addr, metadata !10021, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10023, metadata !DIExpression()), !dbg !10024
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !10025
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !10026
  %2 = load i32*, i32** %out_values.addr, align 8, !dbg !10027
  %3 = load i64, i64* %sz.addr, align 8, !dbg !10028
  %call = call i32 @of_property_read_variable_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 %3, i64 0) #11, !dbg !10029
  store i32 %call, i32* %ret, align 4, !dbg !10024
  %4 = load i32, i32* %ret, align 4, !dbg !10030
  %cmp = icmp sge i32 %4, 0, !dbg !10032
  br i1 %cmp, label %if.then, label %if.else, !dbg !10033

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10034
  br label %return, !dbg !10034

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !10035
  store i32 %5, i32* %retval, align 4, !dbg !10036
  br label %return, !dbg !10036

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !10037
  ret i32 %6, !dbg !10037
}

; Function Attrs: noredzone
declare dso_local i32 @of_property_read_variable_u32_array(%struct.device_node*, i8*, i32*, i64, i64) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !10038 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !10040, metadata !DIExpression()), !dbg !10042
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !10044, metadata !DIExpression()), !dbg !10045
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !10046, metadata !DIExpression()), !dbg !10048
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10050, metadata !DIExpression()), !dbg !10051
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !10052, metadata !DIExpression()), !dbg !10053
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !10054, metadata !DIExpression()), !dbg !10055
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !10056
  %1 = load i64, i64* %nr.addr, align 8, !dbg !10057
  %div = sdiv i64 %1, 64, !dbg !10057
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !10058
  %2 = bitcast i64* %add.ptr to i8*, !dbg !10056
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !10059
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10060
  %conv.i = trunc i64 %4 to i32, !dbg !10060
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !10061
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !10062
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !10062
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #13, !dbg !10062
  %7 = load i64, i64* %nr.addr, align 8, !dbg !10063
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !10064
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !10065
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !10066
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #8, !dbg !10067, !srcloc !10068
  ret void, !dbg !10069
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local void @__bitmap_set(i64*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kmalloc_array(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !10070 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10071, metadata !DIExpression()), !dbg !10072
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10073, metadata !DIExpression()), !dbg !10074
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10075, metadata !DIExpression()), !dbg !10076
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10077, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !10079, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !10081, metadata !DIExpression()), !dbg !10084
  %0 = load i64, i64* %n.addr, align 8, !dbg !10084
  store i64 %0, i64* %__a, align 8, !dbg !10084
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !10085, metadata !DIExpression()), !dbg !10084
  %1 = load i64, i64* %size.addr, align 8, !dbg !10084
  store i64 %1, i64* %__b, align 8, !dbg !10084
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !10086, metadata !DIExpression()), !dbg !10084
  store i64* %bytes, i64** %__d, align 8, !dbg !10084
  %cmp = icmp eq i64* %__a, %__b, !dbg !10084
  %conv = zext i1 %cmp to i32, !dbg !10084
  %2 = load i64*, i64** %__d, align 8, !dbg !10084
  %cmp1 = icmp eq i64* %__a, %2, !dbg !10084
  %conv2 = zext i1 %cmp1 to i32, !dbg !10084
  %3 = load i64, i64* %__a, align 8, !dbg !10084
  %4 = load i64, i64* %__b, align 8, !dbg !10084
  %5 = load i64*, i64** %__d, align 8, !dbg !10084
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !10084
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !10084
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !10084
  store i64 %8, i64* %5, align 8, !dbg !10084
  %frombool = zext i1 %7 to i8, !dbg !10084
  store i8 %frombool, i8* %tmp, align 1, !dbg !10084
  %9 = load i8, i8* %tmp, align 1, !dbg !10084
  %tobool = trunc i8 %9 to i1, !dbg !10084
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !10087
  %lnot = xor i1 %call, true, !dbg !10087
  %lnot3 = xor i1 %lnot, true, !dbg !10087
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10087
  %conv4 = sext i32 %lnot.ext to i64, !dbg !10087
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !10087
  br i1 %tobool5, label %if.then, label %if.end, !dbg !10088

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !10089
  br label %return, !dbg !10089

if.end:                                           ; preds = %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10090
  %11 = load i64, i64* %bytes, align 8, !dbg !10091
  %12 = load i32, i32* %flags.addr, align 4, !dbg !10092
  %call6 = call noalias i8* @devm_kmalloc(%struct.device* %10, i64 %11, i32 %12) #11, !dbg !10093
  store i8* %call6, i8** %retval, align 8, !dbg !10094
  br label %return, !dbg !10094

return:                                           ; preds = %if.end, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !10095
  ret i8* %13, !dbg !10095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_desc_free(%struct.virt_dma_desc* %vd) #0 !dbg !10096 {
entry:
  %vd.addr = alloca %struct.virt_dma_desc*, align 8
  %d = alloca %struct.omap_desc*, align 8
  %od = alloca %struct.omap_dmadev*, align 8
  %i = alloca i32, align 4
  store %struct.virt_dma_desc* %vd, %struct.virt_dma_desc** %vd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.virt_dma_desc** %vd.addr, metadata !10097, metadata !DIExpression()), !dbg !10098
  call void @llvm.dbg.declare(metadata %struct.omap_desc** %d, metadata !10099, metadata !DIExpression()), !dbg !10100
  %0 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !10101
  %tx = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %0, i32 0, i32 0, !dbg !10102
  %call = call %struct.omap_desc* @to_omap_dma_desc(%struct.dma_async_tx_descriptor* %tx) #11, !dbg !10103
  store %struct.omap_desc* %call, %struct.omap_desc** %d, align 8, !dbg !10100
  %1 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !10104
  %using_ll = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %1, i32 0, i32 1, !dbg !10106
  %2 = load i8, i8* %using_ll, align 8, !dbg !10106
  %tobool = trunc i8 %2 to i1, !dbg !10106
  br i1 %tobool, label %if.then, label %if.end12, !dbg !10107

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od, metadata !10108, metadata !DIExpression()), !dbg !10110
  %3 = load %struct.virt_dma_desc*, %struct.virt_dma_desc** %vd.addr, align 8, !dbg !10111
  %tx1 = getelementptr inbounds %struct.virt_dma_desc, %struct.virt_dma_desc* %3, i32 0, i32 0, !dbg !10112
  %chan = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %tx1, i32 0, i32 3, !dbg !10113
  %4 = load %struct.dma_chan*, %struct.dma_chan** %chan, align 8, !dbg !10113
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %4, i32 0, i32 0, !dbg !10114
  %5 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !10114
  %call2 = call %struct.omap_dmadev* @to_omap_dma_dev(%struct.dma_device* %5) #11, !dbg !10115
  store %struct.omap_dmadev* %call2, %struct.omap_dmadev** %od, align 8, !dbg !10110
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10116, metadata !DIExpression()), !dbg !10117
  store i32 0, i32* %i, align 4, !dbg !10118
  br label %for.cond, !dbg !10120

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !10121
  %7 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !10123
  %sglen = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %7, i32 0, i32 12, !dbg !10124
  %8 = load i32, i32* %sglen, align 8, !dbg !10124
  %cmp = icmp ult i32 %6, %8, !dbg !10125
  br i1 %cmp, label %for.body, label %for.end, !dbg !10126

for.body:                                         ; preds = %for.cond
  %9 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !10127
  %sg = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %9, i32 0, i32 13, !dbg !10130
  %10 = load i32, i32* %i, align 4, !dbg !10131
  %idxprom = sext i32 %10 to i64, !dbg !10127
  %arrayidx = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg, i64 0, i64 %idxprom, !dbg !10127
  %t2_desc = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx, i32 0, i32 5, !dbg !10132
  %11 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc, align 8, !dbg !10132
  %tobool3 = icmp ne %struct.omap_type2_desc* %11, null, !dbg !10127
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10133

if.then4:                                         ; preds = %for.body
  %12 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od, align 8, !dbg !10134
  %desc_pool = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %12, i32 0, i32 13, !dbg !10135
  %13 = load %struct.dma_pool*, %struct.dma_pool** %desc_pool, align 8, !dbg !10135
  %14 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !10136
  %sg5 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %14, i32 0, i32 13, !dbg !10137
  %15 = load i32, i32* %i, align 4, !dbg !10138
  %idxprom6 = sext i32 %15 to i64, !dbg !10136
  %arrayidx7 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg5, i64 0, i64 %idxprom6, !dbg !10136
  %t2_desc8 = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx7, i32 0, i32 5, !dbg !10139
  %16 = load %struct.omap_type2_desc*, %struct.omap_type2_desc** %t2_desc8, align 8, !dbg !10139
  %17 = bitcast %struct.omap_type2_desc* %16 to i8*, !dbg !10136
  %18 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !10140
  %sg9 = getelementptr inbounds %struct.omap_desc, %struct.omap_desc* %18, i32 0, i32 13, !dbg !10141
  %19 = load i32, i32* %i, align 4, !dbg !10142
  %idxprom10 = sext i32 %19 to i64, !dbg !10140
  %arrayidx11 = getelementptr [0 x %struct.omap_sg], [0 x %struct.omap_sg]* %sg9, i64 0, i64 %idxprom10, !dbg !10140
  %t2_desc_paddr = getelementptr inbounds %struct.omap_sg, %struct.omap_sg* %arrayidx11, i32 0, i32 6, !dbg !10143
  %20 = load i64, i64* %t2_desc_paddr, align 8, !dbg !10143
  call void @dma_pool_free(%struct.dma_pool* %13, i8* %17, i64 %20) #11, !dbg !10144
  br label %if.end, !dbg !10144

if.end:                                           ; preds = %if.then4, %for.body
  br label %for.inc, !dbg !10145

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %i, align 4, !dbg !10146
  %inc = add i32 %21, 1, !dbg !10146
  store i32 %inc, i32* %i, align 4, !dbg !10146
  br label %for.cond, !dbg !10147, !llvm.loop !10148

for.end:                                          ; preds = %for.cond
  br label %if.end12, !dbg !10150

if.end12:                                         ; preds = %for.end, %entry
  %22 = load %struct.omap_desc*, %struct.omap_desc** %d, align 8, !dbg !10151
  %23 = bitcast %struct.omap_desc* %22 to i8*, !dbg !10151
  call void @kfree(i8* %23) #11, !dbg !10152
  ret void, !dbg !10153
}

; Function Attrs: noredzone
declare dso_local void @vchan_init(%struct.virt_dma_chan*, %struct.dma_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @devm_request_threaded_irq(%struct.device*, i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @omap_dma_get_csr(%struct.omap_chan* %c) #0 !dbg !10154 {
entry:
  %c.addr = alloca %struct.omap_chan*, align 8
  %val = alloca i32, align 4
  store %struct.omap_chan* %c, %struct.omap_chan** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c.addr, metadata !10157, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.declare(metadata i32* %val, metadata !10159, metadata !DIExpression()), !dbg !10160
  %0 = load %struct.omap_chan*, %struct.omap_chan** %c.addr, align 8, !dbg !10161
  %call = call i32 @omap_dma_chan_read(%struct.omap_chan* %0, i32 35) #11, !dbg !10162
  store i32 %call, i32* %val, align 4, !dbg !10160
  %1 = load i32, i32* %val, align 4, !dbg !10163
  ret i32 %1, !dbg !10164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !10165 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10170, metadata !DIExpression()), !dbg !10171
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10172
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !10173
  %1 = load i8*, i8** %name, align 8, !dbg !10173
  ret i8* %1, !dbg !10174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !10175 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10176, metadata !DIExpression()), !dbg !10177
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10178, metadata !DIExpression()), !dbg !10179
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10180
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10181
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !10182
  store i8* %0, i8** %driver_data, align 8, !dbg !10183
  ret void, !dbg !10184
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @omap_dma_busy(%struct.omap_dmadev* %od) #0 !dbg !10185 {
entry:
  %retval = alloca i1, align 1
  %od.addr = alloca %struct.omap_dmadev*, align 8
  %c = alloca %struct.omap_chan*, align 8
  %lch = alloca i32, align 4
  store %struct.omap_dmadev* %od, %struct.omap_dmadev** %od.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od.addr, metadata !10188, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.declare(metadata %struct.omap_chan** %c, metadata !10190, metadata !DIExpression()), !dbg !10191
  call void @llvm.dbg.declare(metadata i32* %lch, metadata !10192, metadata !DIExpression()), !dbg !10193
  store i32 -1, i32* %lch, align 4, !dbg !10193
  br label %while.body, !dbg !10194

while.body:                                       ; preds = %entry, %if.then5, %if.end10
  %0 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10195
  %lch_bitmap = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %0, i32 0, i32 9, !dbg !10197
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %lch_bitmap, i64 0, i64 0, !dbg !10195
  %1 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10198
  %lch_count = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %1, i32 0, i32 8, !dbg !10199
  %2 = load i32, i32* %lch_count, align 8, !dbg !10199
  %conv = sext i32 %2 to i64, !dbg !10198
  %3 = load i32, i32* %lch, align 4, !dbg !10200
  %add = add i32 %3, 1, !dbg !10201
  %conv1 = sext i32 %add to i64, !dbg !10200
  %call = call i64 @find_next_bit(i64* %arraydecay, i64 %conv, i64 %conv1) #11, !dbg !10202
  %conv2 = trunc i64 %call to i32, !dbg !10202
  store i32 %conv2, i32* %lch, align 4, !dbg !10203
  %4 = load i32, i32* %lch, align 4, !dbg !10204
  %5 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10206
  %lch_count3 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %5, i32 0, i32 8, !dbg !10207
  %6 = load i32, i32* %lch_count3, align 8, !dbg !10207
  %cmp = icmp sge i32 %4, %6, !dbg !10208
  br i1 %cmp, label %if.then, label %if.end, !dbg !10209

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !10210

if.end:                                           ; preds = %while.body
  %7 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10211
  %lch_map = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %7, i32 0, i32 17, !dbg !10212
  %8 = load %struct.omap_chan**, %struct.omap_chan*** %lch_map, align 8, !dbg !10212
  %9 = load i32, i32* %lch, align 4, !dbg !10213
  %idxprom = sext i32 %9 to i64, !dbg !10211
  %arrayidx = getelementptr %struct.omap_chan*, %struct.omap_chan** %8, i64 %idxprom, !dbg !10211
  %10 = load %struct.omap_chan*, %struct.omap_chan** %arrayidx, align 8, !dbg !10211
  store %struct.omap_chan* %10, %struct.omap_chan** %c, align 8, !dbg !10214
  %11 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !10215
  %tobool = icmp ne %struct.omap_chan* %11, null, !dbg !10215
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !10217

if.then5:                                         ; preds = %if.end
  br label %while.body, !dbg !10218, !llvm.loop !10219

if.end6:                                          ; preds = %if.end
  %12 = load %struct.omap_chan*, %struct.omap_chan** %c, align 8, !dbg !10221
  %call7 = call i32 @omap_dma_chan_read(%struct.omap_chan* %12, i32 33) #11, !dbg !10223
  %and = and i32 %call7, 128, !dbg !10224
  %tobool8 = icmp ne i32 %and, 0, !dbg !10224
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !10225

if.then9:                                         ; preds = %if.end6
  store i1 true, i1* %retval, align 1, !dbg !10226
  br label %return, !dbg !10226

if.end10:                                         ; preds = %if.end6
  br label %while.body, !dbg !10194, !llvm.loop !10219

while.end:                                        ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !10227
  br label %return, !dbg !10227

return:                                           ; preds = %while.end, %if.then9
  %13 = load i1, i1* %retval, align 1, !dbg !10228
  ret i1 %13, !dbg !10228
}

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_context_save(%struct.omap_dmadev* %od) #0 !dbg !10229 {
entry:
  %od.addr = alloca %struct.omap_dmadev*, align 8
  store %struct.omap_dmadev* %od, %struct.omap_dmadev** %od.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od.addr, metadata !10230, metadata !DIExpression()), !dbg !10231
  %0 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10232
  %call = call i32 @omap_dma_glbl_read(%struct.omap_dmadev* %0, i32 23) #11, !dbg !10233
  %1 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10234
  %context = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %1, i32 0, i32 7, !dbg !10235
  %irqenable_l0 = getelementptr inbounds %struct.omap_dma_context, %struct.omap_dma_context* %context, i32 0, i32 0, !dbg !10236
  store i32 %call, i32* %irqenable_l0, align 8, !dbg !10237
  %2 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10238
  %call1 = call i32 @omap_dma_glbl_read(%struct.omap_dmadev* %2, i32 24) #11, !dbg !10239
  %3 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10240
  %context2 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %3, i32 0, i32 7, !dbg !10241
  %irqenable_l1 = getelementptr inbounds %struct.omap_dma_context, %struct.omap_dma_context* %context2, i32 0, i32 1, !dbg !10242
  store i32 %call1, i32* %irqenable_l1, align 4, !dbg !10243
  %4 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10244
  %call3 = call i32 @omap_dma_glbl_read(%struct.omap_dmadev* %4, i32 28) #11, !dbg !10245
  %5 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10246
  %context4 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %5, i32 0, i32 7, !dbg !10247
  %ocp_sysconfig = getelementptr inbounds %struct.omap_dma_context, %struct.omap_dma_context* %context4, i32 0, i32 2, !dbg !10248
  store i32 %call3, i32* %ocp_sysconfig, align 8, !dbg !10249
  %6 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10250
  %call5 = call i32 @omap_dma_glbl_read(%struct.omap_dmadev* %6, i32 0) #11, !dbg !10251
  %7 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10252
  %context6 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %7, i32 0, i32 7, !dbg !10253
  %gcr = getelementptr inbounds %struct.omap_dma_context, %struct.omap_dma_context* %context6, i32 0, i32 3, !dbg !10254
  store i32 %call5, i32* %gcr, align 4, !dbg !10255
  ret void, !dbg !10256
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @omap_dma_context_restore(%struct.omap_dmadev* %od) #0 !dbg !10257 {
entry:
  %od.addr = alloca %struct.omap_dmadev*, align 8
  %i = alloca i32, align 4
  store %struct.omap_dmadev* %od, %struct.omap_dmadev** %od.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.omap_dmadev** %od.addr, metadata !10258, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10260, metadata !DIExpression()), !dbg !10261
  %0 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10262
  %1 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10263
  %context = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %1, i32 0, i32 7, !dbg !10264
  %gcr = getelementptr inbounds %struct.omap_dma_context, %struct.omap_dma_context* %context, i32 0, i32 3, !dbg !10265
  %2 = load i32, i32* %gcr, align 4, !dbg !10265
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %0, i32 0, i32 %2) #11, !dbg !10266
  %3 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10267
  %4 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10268
  %context1 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %4, i32 0, i32 7, !dbg !10269
  %ocp_sysconfig = getelementptr inbounds %struct.omap_dma_context, %struct.omap_dma_context* %context1, i32 0, i32 2, !dbg !10270
  %5 = load i32, i32* %ocp_sysconfig, align 8, !dbg !10270
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %3, i32 28, i32 %5) #11, !dbg !10271
  %6 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10272
  %7 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10273
  %context2 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %7, i32 0, i32 7, !dbg !10274
  %irqenable_l0 = getelementptr inbounds %struct.omap_dma_context, %struct.omap_dma_context* %context2, i32 0, i32 0, !dbg !10275
  %8 = load i32, i32* %irqenable_l0, align 8, !dbg !10275
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %6, i32 23, i32 %8) #11, !dbg !10276
  %9 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10277
  %10 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10278
  %context3 = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %10, i32 0, i32 7, !dbg !10279
  %irqenable_l1 = getelementptr inbounds %struct.omap_dma_context, %struct.omap_dma_context* %context3, i32 0, i32 1, !dbg !10280
  %11 = load i32, i32* %irqenable_l1, align 4, !dbg !10280
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %9, i32 24, i32 %11) #11, !dbg !10281
  %12 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10282
  %plat = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %12, i32 0, i32 4, !dbg !10284
  %13 = load %struct.omap_system_dma_plat_info*, %struct.omap_system_dma_plat_info** %plat, align 8, !dbg !10284
  %errata = getelementptr inbounds %struct.omap_system_dma_plat_info, %struct.omap_system_dma_plat_info* %13, i32 0, i32 3, !dbg !10285
  %14 = load i32, i32* %errata, align 8, !dbg !10285
  %conv = zext i32 %14 to i64, !dbg !10282
  %and = and i64 %conv, 64, !dbg !10286
  %tobool = icmp ne i64 %and, 0, !dbg !10286
  br i1 %tobool, label %if.then, label %if.end, !dbg !10287

if.then:                                          ; preds = %entry
  %15 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10288
  call void @omap_dma_glbl_write(%struct.omap_dmadev* %15, i32 19, i32 0) #11, !dbg !10289
  br label %if.end, !dbg !10289

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !10290
  br label %for.cond, !dbg !10292

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load i32, i32* %i, align 4, !dbg !10293
  %17 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10295
  %lch_count = getelementptr inbounds %struct.omap_dmadev, %struct.omap_dmadev* %17, i32 0, i32 8, !dbg !10296
  %18 = load i32, i32* %lch_count, align 8, !dbg !10296
  %cmp = icmp slt i32 %16, %18, !dbg !10297
  br i1 %cmp, label %for.body, label %for.end, !dbg !10298

for.body:                                         ; preds = %for.cond
  %19 = load %struct.omap_dmadev*, %struct.omap_dmadev** %od.addr, align 8, !dbg !10299
  %20 = load i32, i32* %i, align 4, !dbg !10300
  call void @omap_dma_clear_lch(%struct.omap_dmadev* %19, i32 %20) #11, !dbg !10301
  br label %for.inc, !dbg !10301

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !10302
  %inc = add i32 %21, 1, !dbg !10302
  store i32 %inc, i32* %i, align 4, !dbg !10302
  br label %for.cond, !dbg !10303, !llvm.loop !10304

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10306
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @platform_get_drvdata(%struct.platform_device* %pdev) #0 !dbg !10307 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !10312, metadata !DIExpression()), !dbg !10313
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !10314
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !10315
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !10316
  ret i8* %call, !dbg !10317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cpu_pm_unregister_notifier(%struct.notifier_block* %nb) #0 !dbg !10318 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !10319, metadata !DIExpression()), !dbg !10320
  ret i32 0, !dbg !10321
}

; Function Attrs: noredzone
declare dso_local void @of_dma_controller_free(%struct.device_node*) #2

; Function Attrs: noredzone
declare dso_local void @devm_free_irq(%struct.device*, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @dma_pool_destroy(%struct.dma_pool*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !10322 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10323, metadata !DIExpression()), !dbg !10324
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10325
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !10326
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10326
  ret i8* %1, !dbg !10327
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4619}
!llvm.module.flags = !{!4620, !4621, !4622, !4623}
!llvm.ident = !{!4624}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_omap_dma_init251", scope: !2, file: !3, line: 1941, type: !351, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !344, globals: !4511, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/dma/ti/omap-dma.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !99, !108, !113, !125, !131, !135, !142, !153, !160, !179, !184, !240, !326, !331, !338}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_desc_metadata_mode", file: !94, line: 288, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/dmaengine.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98}
!96 = !DIEnumerator(name: "DESC_METADATA_NONE", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DESC_METADATA_CLIENT", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DESC_METADATA_ENGINE", value: 2, isUnsigned: true)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_alignment", file: !94, line: 732, baseType: !7, size: 32, elements: !100)
!100 = !{!101, !102, !103, !104, !105, !106, !107}
!101 = !DIEnumerator(name: "DMAENGINE_ALIGN_1_BYTE", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "DMAENGINE_ALIGN_2_BYTES", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "DMAENGINE_ALIGN_4_BYTES", value: 2, isUnsigned: true)
!104 = !DIEnumerator(name: "DMAENGINE_ALIGN_8_BYTES", value: 3, isUnsigned: true)
!105 = !DIEnumerator(name: "DMAENGINE_ALIGN_16_BYTES", value: 4, isUnsigned: true)
!106 = !DIEnumerator(name: "DMAENGINE_ALIGN_32_BYTES", value: 5, isUnsigned: true)
!107 = !DIEnumerator(name: "DMAENGINE_ALIGN_64_BYTES", value: 6, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_residue_granularity", file: !94, line: 468, baseType: !7, size: 32, elements: !109)
!109 = !{!110, !111, !112}
!110 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_DESCRIPTOR", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_SEGMENT", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_BURST", value: 2, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_ctrl_flags", file: !94, line: 194, baseType: !7, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118, !119, !120, !121, !122, !123, !124}
!115 = !DIEnumerator(name: "DMA_PREP_INTERRUPT", value: 1, isUnsigned: true)
!116 = !DIEnumerator(name: "DMA_CTRL_ACK", value: 2, isUnsigned: true)
!117 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_P", value: 4, isUnsigned: true)
!118 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_Q", value: 8, isUnsigned: true)
!119 = !DIEnumerator(name: "DMA_PREP_CONTINUE", value: 16, isUnsigned: true)
!120 = !DIEnumerator(name: "DMA_PREP_FENCE", value: 32, isUnsigned: true)
!121 = !DIEnumerator(name: "DMA_CTRL_REUSE", value: 64, isUnsigned: true)
!122 = !DIEnumerator(name: "DMA_PREP_CMD", value: 128, isUnsigned: true)
!123 = !DIEnumerator(name: "DMA_PREP_REPEAT", value: 256, isUnsigned: true)
!124 = !DIEnumerator(name: "DMA_PREP_LOAD_EOT", value: 512, isUnsigned: true)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_tx_result", file: !94, line: 533, baseType: !7, size: 32, elements: !126)
!126 = !{!127, !128, !129, !130}
!127 = !DIEnumerator(name: "DMA_TRANS_NOERROR", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "DMA_TRANS_READ_FAILED", value: 1, isUnsigned: true)
!129 = !DIEnumerator(name: "DMA_TRANS_WRITE_FAILED", value: 2, isUnsigned: true)
!130 = !DIEnumerator(name: "DMA_TRANS_ABORTED", value: 3, isUnsigned: true)
!131 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sum_check_flags", file: !94, line: 220, baseType: !7, size: 32, elements: !132)
!132 = !{!133, !134}
!133 = !DIEnumerator(name: "SUM_CHECK_P_RESULT", value: 1, isUnsigned: true)
!134 = !DIEnumerator(name: "SUM_CHECK_Q_RESULT", value: 2, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_transfer_direction", file: !94, line: 79, baseType: !7, size: 32, elements: !136)
!136 = !{!137, !138, !139, !140, !141}
!137 = !DIEnumerator(name: "DMA_MEM_TO_MEM", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "DMA_MEM_TO_DEV", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "DMA_DEV_TO_MEM", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "DMA_DEV_TO_DEV", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "DMA_TRANS_NONE", value: 4, isUnsigned: true)
!142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_slave_buswidth", file: !94, line: 371, baseType: !7, size: 32, elements: !143)
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152}
!144 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_UNDEFINED", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_1_BYTE", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_2_BYTES", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_3_BYTES", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_4_BYTES", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_8_BYTES", value: 8, isUnsigned: true)
!150 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_16_BYTES", value: 16, isUnsigned: true)
!151 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_32_BYTES", value: 32, isUnsigned: true)
!152 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_64_BYTES", value: 64, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_status", file: !94, line: 37, baseType: !7, size: 32, elements: !154)
!154 = !{!155, !156, !157, !158, !159}
!155 = !DIEnumerator(name: "DMA_COMPLETE", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "DMA_IN_PROGRESS", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "DMA_PAUSED", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "DMA_ERROR", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "DMA_OUT_OF_ORDER", value: 4, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_transaction_type", file: !94, line: 51, baseType: !7, size: 32, elements: !161)
!161 = !{!162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178}
!162 = !DIEnumerator(name: "DMA_MEMCPY", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "DMA_XOR", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "DMA_PQ", value: 2, isUnsigned: true)
!165 = !DIEnumerator(name: "DMA_XOR_VAL", value: 3, isUnsigned: true)
!166 = !DIEnumerator(name: "DMA_PQ_VAL", value: 4, isUnsigned: true)
!167 = !DIEnumerator(name: "DMA_MEMSET", value: 5, isUnsigned: true)
!168 = !DIEnumerator(name: "DMA_MEMSET_SG", value: 6, isUnsigned: true)
!169 = !DIEnumerator(name: "DMA_INTERRUPT", value: 7, isUnsigned: true)
!170 = !DIEnumerator(name: "DMA_PRIVATE", value: 8, isUnsigned: true)
!171 = !DIEnumerator(name: "DMA_ASYNC_TX", value: 9, isUnsigned: true)
!172 = !DIEnumerator(name: "DMA_SLAVE", value: 10, isUnsigned: true)
!173 = !DIEnumerator(name: "DMA_CYCLIC", value: 11, isUnsigned: true)
!174 = !DIEnumerator(name: "DMA_INTERLEAVE", value: 12, isUnsigned: true)
!175 = !DIEnumerator(name: "DMA_COMPLETION_NO_ORDER", value: 13, isUnsigned: true)
!176 = !DIEnumerator(name: "DMA_REPEAT", value: 14, isUnsigned: true)
!177 = !DIEnumerator(name: "DMA_LOAD_EOT", value: 15, isUnsigned: true)
!178 = !DIEnumerator(name: "DMA_TX_TYPE_END", value: 16, isUnsigned: true)
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !180, line: 10, baseType: !7, size: 32, elements: !181)
!180 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!181 = !{!182, !183}
!182 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!183 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!184 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omap_reg_offsets", file: !185, line: 138, baseType: !7, size: 32, elements: !186)
!185 = !DIFile(filename: "./include/linux/omap-dma.h", directory: "/home/lizy2001/genbc/linux")
!186 = !{!187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239}
!187 = !DIEnumerator(name: "GCR", value: 0, isUnsigned: true)
!188 = !DIEnumerator(name: "GSCR", value: 1, isUnsigned: true)
!189 = !DIEnumerator(name: "GRST1", value: 2, isUnsigned: true)
!190 = !DIEnumerator(name: "HW_ID", value: 3, isUnsigned: true)
!191 = !DIEnumerator(name: "PCH2_ID", value: 4, isUnsigned: true)
!192 = !DIEnumerator(name: "PCH0_ID", value: 5, isUnsigned: true)
!193 = !DIEnumerator(name: "PCH1_ID", value: 6, isUnsigned: true)
!194 = !DIEnumerator(name: "PCHG_ID", value: 7, isUnsigned: true)
!195 = !DIEnumerator(name: "PCHD_ID", value: 8, isUnsigned: true)
!196 = !DIEnumerator(name: "CAPS_0", value: 9, isUnsigned: true)
!197 = !DIEnumerator(name: "CAPS_1", value: 10, isUnsigned: true)
!198 = !DIEnumerator(name: "CAPS_2", value: 11, isUnsigned: true)
!199 = !DIEnumerator(name: "CAPS_3", value: 12, isUnsigned: true)
!200 = !DIEnumerator(name: "CAPS_4", value: 13, isUnsigned: true)
!201 = !DIEnumerator(name: "PCH2_SR", value: 14, isUnsigned: true)
!202 = !DIEnumerator(name: "PCH0_SR", value: 15, isUnsigned: true)
!203 = !DIEnumerator(name: "PCH1_SR", value: 16, isUnsigned: true)
!204 = !DIEnumerator(name: "PCHD_SR", value: 17, isUnsigned: true)
!205 = !DIEnumerator(name: "REVISION", value: 18, isUnsigned: true)
!206 = !DIEnumerator(name: "IRQSTATUS_L0", value: 19, isUnsigned: true)
!207 = !DIEnumerator(name: "IRQSTATUS_L1", value: 20, isUnsigned: true)
!208 = !DIEnumerator(name: "IRQSTATUS_L2", value: 21, isUnsigned: true)
!209 = !DIEnumerator(name: "IRQSTATUS_L3", value: 22, isUnsigned: true)
!210 = !DIEnumerator(name: "IRQENABLE_L0", value: 23, isUnsigned: true)
!211 = !DIEnumerator(name: "IRQENABLE_L1", value: 24, isUnsigned: true)
!212 = !DIEnumerator(name: "IRQENABLE_L2", value: 25, isUnsigned: true)
!213 = !DIEnumerator(name: "IRQENABLE_L3", value: 26, isUnsigned: true)
!214 = !DIEnumerator(name: "SYSSTATUS", value: 27, isUnsigned: true)
!215 = !DIEnumerator(name: "OCP_SYSCONFIG", value: 28, isUnsigned: true)
!216 = !DIEnumerator(name: "CPC", value: 29, isUnsigned: true)
!217 = !DIEnumerator(name: "CCR2", value: 30, isUnsigned: true)
!218 = !DIEnumerator(name: "LCH_CTRL", value: 31, isUnsigned: true)
!219 = !DIEnumerator(name: "CSDP", value: 32, isUnsigned: true)
!220 = !DIEnumerator(name: "CCR", value: 33, isUnsigned: true)
!221 = !DIEnumerator(name: "CICR", value: 34, isUnsigned: true)
!222 = !DIEnumerator(name: "CSR", value: 35, isUnsigned: true)
!223 = !DIEnumerator(name: "CEN", value: 36, isUnsigned: true)
!224 = !DIEnumerator(name: "CFN", value: 37, isUnsigned: true)
!225 = !DIEnumerator(name: "CSFI", value: 38, isUnsigned: true)
!226 = !DIEnumerator(name: "CSEI", value: 39, isUnsigned: true)
!227 = !DIEnumerator(name: "CSAC", value: 40, isUnsigned: true)
!228 = !DIEnumerator(name: "CDAC", value: 41, isUnsigned: true)
!229 = !DIEnumerator(name: "CDEI", value: 42, isUnsigned: true)
!230 = !DIEnumerator(name: "CDFI", value: 43, isUnsigned: true)
!231 = !DIEnumerator(name: "CLNK_CTRL", value: 44, isUnsigned: true)
!232 = !DIEnumerator(name: "CSSA", value: 45, isUnsigned: true)
!233 = !DIEnumerator(name: "CDSA", value: 46, isUnsigned: true)
!234 = !DIEnumerator(name: "COLOR", value: 47, isUnsigned: true)
!235 = !DIEnumerator(name: "CCEN", value: 48, isUnsigned: true)
!236 = !DIEnumerator(name: "CCFN", value: 49, isUnsigned: true)
!237 = !DIEnumerator(name: "CDP", value: 50, isUnsigned: true)
!238 = !DIEnumerator(name: "CNDP", value: 51, isUnsigned: true)
!239 = !DIEnumerator(name: "CCDN", value: 52, isUnsigned: true)
!240 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 130, baseType: !7, size: 32, elements: !241)
!241 = !{!242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325}
!242 = !DIEnumerator(name: "CAPS_0_SUPPORT_LL123", value: 1048576, isUnsigned: true)
!243 = !DIEnumerator(name: "CAPS_0_SUPPORT_LL4", value: 2097152, isUnsigned: true)
!244 = !DIEnumerator(name: "CCR_FS", value: 32, isUnsigned: true)
!245 = !DIEnumerator(name: "CCR_READ_PRIORITY", value: 64, isUnsigned: true)
!246 = !DIEnumerator(name: "CCR_ENABLE", value: 128, isUnsigned: true)
!247 = !DIEnumerator(name: "CCR_AUTO_INIT", value: 256, isUnsigned: true)
!248 = !DIEnumerator(name: "CCR_REPEAT", value: 512, isUnsigned: true)
!249 = !DIEnumerator(name: "CCR_OMAP31_DISABLE", value: 1024, isUnsigned: true)
!250 = !DIEnumerator(name: "CCR_SUSPEND_SENSITIVE", value: 256, isUnsigned: true)
!251 = !DIEnumerator(name: "CCR_RD_ACTIVE", value: 512, isUnsigned: true)
!252 = !DIEnumerator(name: "CCR_WR_ACTIVE", value: 1024, isUnsigned: true)
!253 = !DIEnumerator(name: "CCR_SRC_AMODE_CONSTANT", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "CCR_SRC_AMODE_POSTINC", value: 4096, isUnsigned: true)
!255 = !DIEnumerator(name: "CCR_SRC_AMODE_SGLIDX", value: 8192, isUnsigned: true)
!256 = !DIEnumerator(name: "CCR_SRC_AMODE_DBLIDX", value: 12288, isUnsigned: true)
!257 = !DIEnumerator(name: "CCR_DST_AMODE_CONSTANT", value: 0, isUnsigned: true)
!258 = !DIEnumerator(name: "CCR_DST_AMODE_POSTINC", value: 16384, isUnsigned: true)
!259 = !DIEnumerator(name: "CCR_DST_AMODE_SGLIDX", value: 32768, isUnsigned: true)
!260 = !DIEnumerator(name: "CCR_DST_AMODE_DBLIDX", value: 49152, isUnsigned: true)
!261 = !DIEnumerator(name: "CCR_CONSTANT_FILL", value: 65536, isUnsigned: true)
!262 = !DIEnumerator(name: "CCR_TRANSPARENT_COPY", value: 131072, isUnsigned: true)
!263 = !DIEnumerator(name: "CCR_BS", value: 262144, isUnsigned: true)
!264 = !DIEnumerator(name: "CCR_SUPERVISOR", value: 4194304, isUnsigned: true)
!265 = !DIEnumerator(name: "CCR_PREFETCH", value: 8388608, isUnsigned: true)
!266 = !DIEnumerator(name: "CCR_TRIGGER_SRC", value: 16777216, isUnsigned: true)
!267 = !DIEnumerator(name: "CCR_BUFFERING_DISABLE", value: 33554432, isUnsigned: true)
!268 = !DIEnumerator(name: "CCR_WRITE_PRIORITY", value: 67108864, isUnsigned: true)
!269 = !DIEnumerator(name: "CCR_SYNC_ELEMENT", value: 0, isUnsigned: true)
!270 = !DIEnumerator(name: "CCR_SYNC_FRAME", value: 32, isUnsigned: true)
!271 = !DIEnumerator(name: "CCR_SYNC_BLOCK", value: 262144, isUnsigned: true)
!272 = !DIEnumerator(name: "CCR_SYNC_PACKET", value: 262176, isUnsigned: true)
!273 = !DIEnumerator(name: "CSDP_DATA_TYPE_8", value: 0, isUnsigned: true)
!274 = !DIEnumerator(name: "CSDP_DATA_TYPE_16", value: 1, isUnsigned: true)
!275 = !DIEnumerator(name: "CSDP_DATA_TYPE_32", value: 2, isUnsigned: true)
!276 = !DIEnumerator(name: "CSDP_SRC_PORT_EMIFF", value: 0, isUnsigned: true)
!277 = !DIEnumerator(name: "CSDP_SRC_PORT_EMIFS", value: 4, isUnsigned: true)
!278 = !DIEnumerator(name: "CSDP_SRC_PORT_OCP_T1", value: 8, isUnsigned: true)
!279 = !DIEnumerator(name: "CSDP_SRC_PORT_TIPB", value: 12, isUnsigned: true)
!280 = !DIEnumerator(name: "CSDP_SRC_PORT_OCP_T2", value: 16, isUnsigned: true)
!281 = !DIEnumerator(name: "CSDP_SRC_PORT_MPUI", value: 20, isUnsigned: true)
!282 = !DIEnumerator(name: "CSDP_SRC_PACKED", value: 64, isUnsigned: true)
!283 = !DIEnumerator(name: "CSDP_SRC_BURST_1", value: 0, isUnsigned: true)
!284 = !DIEnumerator(name: "CSDP_SRC_BURST_16", value: 128, isUnsigned: true)
!285 = !DIEnumerator(name: "CSDP_SRC_BURST_32", value: 256, isUnsigned: true)
!286 = !DIEnumerator(name: "CSDP_SRC_BURST_64", value: 384, isUnsigned: true)
!287 = !DIEnumerator(name: "CSDP_DST_PORT_EMIFF", value: 0, isUnsigned: true)
!288 = !DIEnumerator(name: "CSDP_DST_PORT_EMIFS", value: 512, isUnsigned: true)
!289 = !DIEnumerator(name: "CSDP_DST_PORT_OCP_T1", value: 1024, isUnsigned: true)
!290 = !DIEnumerator(name: "CSDP_DST_PORT_TIPB", value: 1536, isUnsigned: true)
!291 = !DIEnumerator(name: "CSDP_DST_PORT_OCP_T2", value: 2048, isUnsigned: true)
!292 = !DIEnumerator(name: "CSDP_DST_PORT_MPUI", value: 2560, isUnsigned: true)
!293 = !DIEnumerator(name: "CSDP_DST_PACKED", value: 8192, isUnsigned: true)
!294 = !DIEnumerator(name: "CSDP_DST_BURST_1", value: 0, isUnsigned: true)
!295 = !DIEnumerator(name: "CSDP_DST_BURST_16", value: 16384, isUnsigned: true)
!296 = !DIEnumerator(name: "CSDP_DST_BURST_32", value: 32768, isUnsigned: true)
!297 = !DIEnumerator(name: "CSDP_DST_BURST_64", value: 49152, isUnsigned: true)
!298 = !DIEnumerator(name: "CSDP_WRITE_NON_POSTED", value: 0, isUnsigned: true)
!299 = !DIEnumerator(name: "CSDP_WRITE_POSTED", value: 65536, isUnsigned: true)
!300 = !DIEnumerator(name: "CSDP_WRITE_LAST_NON_POSTED", value: 131072, isUnsigned: true)
!301 = !DIEnumerator(name: "CICR_TOUT_IE", value: 1, isUnsigned: true)
!302 = !DIEnumerator(name: "CICR_DROP_IE", value: 2, isUnsigned: true)
!303 = !DIEnumerator(name: "CICR_HALF_IE", value: 4, isUnsigned: true)
!304 = !DIEnumerator(name: "CICR_FRAME_IE", value: 8, isUnsigned: true)
!305 = !DIEnumerator(name: "CICR_LAST_IE", value: 16, isUnsigned: true)
!306 = !DIEnumerator(name: "CICR_BLOCK_IE", value: 32, isUnsigned: true)
!307 = !DIEnumerator(name: "CICR_PKT_IE", value: 128, isUnsigned: true)
!308 = !DIEnumerator(name: "CICR_TRANS_ERR_IE", value: 256, isUnsigned: true)
!309 = !DIEnumerator(name: "CICR_SUPERVISOR_ERR_IE", value: 1024, isUnsigned: true)
!310 = !DIEnumerator(name: "CICR_MISALIGNED_ERR_IE", value: 2048, isUnsigned: true)
!311 = !DIEnumerator(name: "CICR_DRAIN_IE", value: 4096, isUnsigned: true)
!312 = !DIEnumerator(name: "CICR_SUPER_BLOCK_IE", value: 16384, isUnsigned: true)
!313 = !DIEnumerator(name: "CLNK_CTRL_ENABLE_LNK", value: 32768, isUnsigned: true)
!314 = !DIEnumerator(name: "CDP_DST_VALID_INC", value: 0, isUnsigned: true)
!315 = !DIEnumerator(name: "CDP_DST_VALID_RELOAD", value: 1, isUnsigned: true)
!316 = !DIEnumerator(name: "CDP_DST_VALID_REUSE", value: 2, isUnsigned: true)
!317 = !DIEnumerator(name: "CDP_SRC_VALID_INC", value: 0, isUnsigned: true)
!318 = !DIEnumerator(name: "CDP_SRC_VALID_RELOAD", value: 4, isUnsigned: true)
!319 = !DIEnumerator(name: "CDP_SRC_VALID_REUSE", value: 8, isUnsigned: true)
!320 = !DIEnumerator(name: "CDP_NTYPE_TYPE1", value: 16, isUnsigned: true)
!321 = !DIEnumerator(name: "CDP_NTYPE_TYPE2", value: 32, isUnsigned: true)
!322 = !DIEnumerator(name: "CDP_NTYPE_TYPE3", value: 48, isUnsigned: true)
!323 = !DIEnumerator(name: "CDP_TMODE_NORMAL", value: 0, isUnsigned: true)
!324 = !DIEnumerator(name: "CDP_TMODE_LLIST", value: 256, isUnsigned: true)
!325 = !DIEnumerator(name: "CDP_FAST", value: 1024, isUnsigned: true)
!326 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !327, line: 651, baseType: !7, size: 32, elements: !328)
!327 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!328 = !{!329, !330}
!329 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!330 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!331 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !332, line: 305, baseType: !7, size: 32, elements: !333)
!332 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!333 = !{!334, !335, !336, !337}
!334 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!335 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!336 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!337 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!338 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !339, line: 11, baseType: !7, size: 32, elements: !340)
!339 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!340 = !{!341, !342, !343}
!341 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!342 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!343 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!344 = !{!345, !348, !350, !351, !352, !353, !356, !358, !4404, !4502, !4503, !4436, !4506, !4459, !4507, !4509, !378, !510, !7, !464, !2897}
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !347, line: 76, flags: DIFlagFwdDecl)
!347 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!348 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !349, line: 148, baseType: !7)
!349 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!350 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!352 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !355)
!355 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !352)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "omap_dmadev", file: !3, line: 42, size: 4224, elements: !360)
!360 = !{!361, !4322, !4323, !4324, !4332, !4361, !4371, !4383, !4390, !4391, !4392, !4393, !4394, !4395, !4399, !4400, !4401, !4402}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "ddev", scope: !359, file: !3, line: 43, baseType: !362, size: 3072)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_device", file: !94, line: 844, size: 3072, elements: !363)
!363 = !{!364, !379, !380, !381, !387, !388, !4091, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4118, !4119, !4123, !4127, !4191, !4196, !4201, !4205, !4209, !4213, !4226, !4230, !4234, !4238, !4262, !4266, !4284, !4302, !4303, !4304, !4305, !4306, !4317, !4318}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !362, file: !94, line: 845, baseType: !365, size: 32)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !366, line: 19, size: 32, elements: !367)
!366 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!367 = !{!368}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !365, file: !366, line: 20, baseType: !369, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !370, line: 113, baseType: !371)
!370 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !370, line: 111, size: 32, elements: !372)
!372 = !{!373}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !371, file: !370, line: 112, baseType: !374, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !349, line: 168, baseType: !375)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !349, line: 166, size: 32, elements: !376)
!376 = !{!377}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !375, file: !349, line: 167, baseType: !378, size: 32)
!378 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "chancnt", scope: !362, file: !94, line: 846, baseType: !7, size: 32, offset: 32)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "privatecnt", scope: !362, file: !94, line: 847, baseType: !7, size: 32, offset: 64)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !362, file: !94, line: 848, baseType: !382, size: 128, offset: 128)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !349, line: 178, size: 128, elements: !383)
!383 = !{!384, !386}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !382, file: !349, line: 179, baseType: !385, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !382, file: !349, line: 179, baseType: !385, size: 64, offset: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "global_node", scope: !362, file: !94, line: 849, baseType: !382, size: 128, offset: 256)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !362, file: !94, line: 850, baseType: !389, size: 192, offset: 384)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_filter", file: !94, line: 762, size: 192, elements: !390)
!390 = !{!391, !4082, !4083}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !389, file: !94, line: 763, baseType: !392, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_filter_fn", file: !94, line: 529, baseType: !393)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DISubroutineType(types: !395)
!395 = !{!396, !398, !351}
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !349, line: 30, baseType: !397)
!397 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan", file: !94, line: 329, size: 832, elements: !400)
!400 = !{!401, !403, !4050, !4052, !4053, !4054, !4061, !4062, !4063, !4069, !4070, !4071, !4080, !4081}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !399, file: !94, line: 330, baseType: !402, size: 64)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !399, file: !94, line: 331, baseType: !404, size: 64, offset: 64)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !406)
!406 = !{!407, !3582, !3583, !3586, !3587, !3638, !3729, !3730, !3731, !3732, !3733, !3742, !3847, !3860, !3863, !3864, !3868, !3870, !3871, !3872, !3876, !3882, !3883, !3886, !4001, !4002, !4003, !4004, !4005, !4006, !4038, !4039, !4040, !4043, !4046, !4047, !4048, !4049}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !405, file: !73, line: 462, baseType: !408, size: 512)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !409, line: 64, size: 512, elements: !410)
!409 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!410 = !{!411, !414, !415, !417, !477, !3437, !3576, !3577, !3578, !3579, !3580, !3581}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !408, file: !409, line: 65, baseType: !412, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !355)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !408, file: !409, line: 66, baseType: !382, size: 128, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !408, file: !409, line: 67, baseType: !416, size: 64, offset: 192)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !408, file: !409, line: 68, baseType: !418, size: 64, offset: 256)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !409, line: 192, size: 704, elements: !420)
!420 = !{!421, !422, !438, !439}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !419, file: !409, line: 193, baseType: !382, size: 128)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !419, file: !409, line: 194, baseType: !423, offset: 128)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !424, line: 83, baseType: !425)
!424 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !424, line: 71, elements: !426)
!426 = !{!427}
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !425, file: !424, line: 72, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !425, file: !424, line: 72, elements: !429)
!429 = !{!430}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !428, file: !424, line: 73, baseType: !431)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !424, line: 20, elements: !432)
!432 = !{!433}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !431, file: !424, line: 21, baseType: !434)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !435, line: 25, baseType: !436)
!435 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !435, line: 25, elements: !437)
!437 = !{}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !419, file: !409, line: 195, baseType: !408, size: 512, offset: 128)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !419, file: !409, line: 196, baseType: !440, size: 64, offset: 640)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !442)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !409, line: 156, size: 192, elements: !443)
!443 = !{!444, !449, !454}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !442, file: !409, line: 157, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !446)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DISubroutineType(types: !448)
!448 = !{!378, !418, !416}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !442, file: !409, line: 158, baseType: !450, size: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !451)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DISubroutineType(types: !453)
!453 = !{!412, !418, !416}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !442, file: !409, line: 159, baseType: !455, size: 64, offset: 128)
!455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !456)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = !DISubroutineType(types: !458)
!458 = !{!378, !418, !416, !459}
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !409, line: 148, size: 20736, elements: !461)
!461 = !{!462, !467, !471, !472, !476}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !460, file: !409, line: 149, baseType: !463, size: 192)
!463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !464, size: 192, elements: !465)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!465 = !{!466}
!466 = !DISubrange(count: 3)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !460, file: !409, line: 150, baseType: !468, size: 4096, offset: 192)
!468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !464, size: 4096, elements: !469)
!469 = !{!470}
!470 = !DISubrange(count: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !460, file: !409, line: 151, baseType: !378, size: 32, offset: 4288)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !460, file: !409, line: 152, baseType: !473, size: 16384, offset: 4320)
!473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 16384, elements: !474)
!474 = !{!475}
!475 = !DISubrange(count: 2048)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !460, file: !409, line: 153, baseType: !378, size: 32, offset: 20704)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !408, file: !409, line: 69, baseType: !478, size: 64, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !409, line: 138, size: 448, elements: !480)
!480 = !{!481, !485, !513, !515, !3399, !3427, !3431}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !479, file: !409, line: 139, baseType: !482, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DISubroutineType(types: !484)
!484 = !{null, !416}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !479, file: !409, line: 140, baseType: !486, size: 64, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !488)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !489, line: 230, size: 128, elements: !490)
!489 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!490 = !{!491, !506}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !488, file: !489, line: 231, baseType: !492, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{!495, !416, !499, !464}
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !349, line: 60, baseType: !496)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !497, line: 73, baseType: !498)
!497 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !497, line: 15, baseType: !352)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !489, line: 30, size: 128, elements: !501)
!501 = !{!502, !503}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !500, file: !489, line: 31, baseType: !412, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !500, file: !489, line: 32, baseType: !504, size: 16, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !349, line: 19, baseType: !505)
!505 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !488, file: !489, line: 232, baseType: !507, size: 64, offset: 64)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = !DISubroutineType(types: !509)
!509 = !{!495, !416, !499, !412, !510}
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !349, line: 55, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !497, line: 72, baseType: !512)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !497, line: 16, baseType: !350)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !479, file: !409, line: 141, baseType: !514, size: 64, offset: 128)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !479, file: !409, line: 142, baseType: !516, size: 64, offset: 192)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !489, line: 84, size: 320, elements: !520)
!520 = !{!521, !522, !526, !3396, !3397}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !519, file: !489, line: 85, baseType: !412, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !519, file: !489, line: 86, baseType: !523, size: 64, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DISubroutineType(types: !525)
!525 = !{!504, !416, !499, !378}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !519, file: !489, line: 88, baseType: !527, size: 64, offset: 128)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DISubroutineType(types: !529)
!529 = !{!504, !416, !530, !378}
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !489, line: 168, size: 448, elements: !532)
!532 = !{!533, !534, !535, !536, !3391, !3392}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !531, file: !489, line: 169, baseType: !500, size: 128)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !531, file: !489, line: 170, baseType: !510, size: 64, offset: 128)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !531, file: !489, line: 171, baseType: !351, size: 64, offset: 192)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !531, file: !489, line: 172, baseType: !537, size: 64, offset: 256)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = !DISubroutineType(types: !539)
!539 = !{!495, !540, !416, !530, !464, !717, !510}
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !542)
!542 = !{!543, !561, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3374, !3375, !3384, !3385, !3386, !3387, !3388, !3389, !3390}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !541, file: !44, line: 920, baseType: !544, size: 128)
!544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !541, file: !44, line: 917, size: 128, elements: !545)
!545 = !{!546, !552}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !544, file: !44, line: 918, baseType: !547, size: 64)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !548, line: 58, size: 64, elements: !549)
!548 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!549 = !{!550}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !547, file: !548, line: 59, baseType: !551, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !544, file: !44, line: 919, baseType: !553, size: 128, align: 64)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !349, line: 216, size: 128, align: 64, elements: !554)
!554 = !{!555, !557}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !553, file: !349, line: 217, baseType: !556, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !553, file: !349, line: 218, baseType: !558, size: 64, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = !DISubroutineType(types: !560)
!560 = !{null, !556}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !541, file: !44, line: 921, baseType: !562, size: 128, offset: 128)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !563, line: 8, size: 128, elements: !564)
!563 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!564 = !{!565, !569}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !562, file: !563, line: 9, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !568, line: 18, flags: DIFlagFwdDecl)
!568 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!569 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !562, file: !563, line: 10, baseType: !570, size: 64, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !568, line: 89, size: 1536, elements: !572)
!572 = !{!573, !574, !584, !592, !593, !616, !3324, !3326, !3338, !3339, !3340, !3341, !3342, !3348, !3349, !3350}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !571, file: !568, line: 91, baseType: !7, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !571, file: !568, line: 92, baseType: !575, size: 32, offset: 32)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !576, line: 277, baseType: !577)
!576 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !576, line: 277, size: 32, elements: !578)
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !577, file: !576, line: 277, baseType: !580, size: 32)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !576, line: 70, baseType: !581)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !576, line: 65, size: 32, elements: !582)
!582 = !{!583}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !581, file: !576, line: 66, baseType: !7, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !571, file: !568, line: 93, baseType: !585, size: 128, offset: 64)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !586, line: 38, size: 128, elements: !587)
!586 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!587 = !{!588, !590}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !585, file: !586, line: 39, baseType: !589, size: 64)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !585, file: !586, line: 39, baseType: !591, size: 64, offset: 64)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !571, file: !568, line: 94, baseType: !570, size: 64, offset: 192)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !571, file: !568, line: 95, baseType: !594, size: 128, offset: 256)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !568, line: 47, size: 128, elements: !595)
!595 = !{!596, !612}
!596 = !DIDerivedType(tag: DW_TAG_member, scope: !594, file: !568, line: 48, baseType: !597, size: 64)
!597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !594, file: !568, line: 48, size: 64, elements: !598)
!598 = !{!599, !608}
!599 = !DIDerivedType(tag: DW_TAG_member, scope: !597, file: !568, line: 49, baseType: !600, size: 64)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !597, file: !568, line: 49, size: 64, elements: !601)
!601 = !{!602, !607}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !600, file: !568, line: 50, baseType: !603, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !604, line: 21, baseType: !605)
!604 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !606, line: 27, baseType: !7)
!606 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!607 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !600, file: !568, line: 50, baseType: !603, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !597, file: !568, line: 52, baseType: !609, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !604, line: 23, baseType: !610)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !606, line: 31, baseType: !611)
!611 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !594, file: !568, line: 54, baseType: !613, size: 64, offset: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !615)
!615 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !571, file: !568, line: 96, baseType: !617, size: 64, offset: 384)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !619)
!619 = !{!620, !621, !622, !630, !637, !638, !784, !3035, !3036, !3037, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3300, !3308, !3309, !3310, !3320, !3321, !3322, !3323}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !618, file: !44, line: 611, baseType: !504, size: 16)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !618, file: !44, line: 612, baseType: !505, size: 16, offset: 16)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !618, file: !44, line: 613, baseType: !623, size: 32, offset: 32)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !624, line: 23, baseType: !625)
!624 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 21, size: 32, elements: !626)
!626 = !{!627}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !625, file: !624, line: 22, baseType: !628, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !349, line: 32, baseType: !629)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !497, line: 49, baseType: !7)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !618, file: !44, line: 614, baseType: !631, size: 32, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !624, line: 28, baseType: !632)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 26, size: 32, elements: !633)
!633 = !{!634}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !632, file: !624, line: 27, baseType: !635, size: 32)
!635 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !349, line: 33, baseType: !636)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !497, line: 50, baseType: !7)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !618, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !618, file: !44, line: 622, baseType: !639, size: 64, offset: 128)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !642)
!642 = !{!643, !647, !660, !664, !670, !674, !678, !682, !686, !690, !694, !695, !701, !705, !731, !760, !764, !770, !775, !779, !780}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !641, file: !44, line: 1865, baseType: !644, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DISubroutineType(types: !646)
!646 = !{!570, !617, !570, !7}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !641, file: !44, line: 1866, baseType: !648, size: 64, offset: 64)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DISubroutineType(types: !650)
!650 = !{!412, !570, !617, !651}
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !653, line: 10, size: 128, elements: !654)
!653 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!654 = !{!655, !659}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !652, file: !653, line: 11, baseType: !656, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DISubroutineType(types: !658)
!658 = !{null, !351}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !652, file: !653, line: 12, baseType: !351, size: 64, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !641, file: !44, line: 1867, baseType: !661, size: 64, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DISubroutineType(types: !663)
!663 = !{!378, !617, !378}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !641, file: !44, line: 1868, baseType: !665, size: 64, offset: 192)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DISubroutineType(types: !667)
!667 = !{!668, !617, !378}
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !641, file: !44, line: 1870, baseType: !671, size: 64, offset: 256)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DISubroutineType(types: !673)
!673 = !{!378, !570, !464, !378}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !641, file: !44, line: 1872, baseType: !675, size: 64, offset: 320)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DISubroutineType(types: !677)
!677 = !{!378, !617, !570, !504, !396}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !641, file: !44, line: 1873, baseType: !679, size: 64, offset: 384)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DISubroutineType(types: !681)
!681 = !{!378, !570, !617, !570}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !641, file: !44, line: 1874, baseType: !683, size: 64, offset: 448)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DISubroutineType(types: !685)
!685 = !{!378, !617, !570}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !641, file: !44, line: 1875, baseType: !687, size: 64, offset: 512)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DISubroutineType(types: !689)
!689 = !{!378, !617, !570, !412}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !641, file: !44, line: 1876, baseType: !691, size: 64, offset: 576)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!378, !617, !570, !504}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !641, file: !44, line: 1877, baseType: !683, size: 64, offset: 640)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !641, file: !44, line: 1878, baseType: !696, size: 64, offset: 704)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DISubroutineType(types: !698)
!698 = !{!378, !617, !570, !504, !699}
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !349, line: 16, baseType: !700)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !349, line: 13, baseType: !603)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !641, file: !44, line: 1879, baseType: !702, size: 64, offset: 768)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = !DISubroutineType(types: !704)
!704 = !{!378, !617, !570, !617, !570, !7}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !641, file: !44, line: 1881, baseType: !706, size: 64, offset: 832)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DISubroutineType(types: !708)
!708 = !{!378, !570, !709}
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !711)
!711 = !{!712, !713, !714, !715, !716, !720, !728, !729, !730}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !710, file: !44, line: 220, baseType: !7, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !710, file: !44, line: 221, baseType: !504, size: 16, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !710, file: !44, line: 222, baseType: !623, size: 32, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !710, file: !44, line: 223, baseType: !631, size: 32, offset: 96)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !710, file: !44, line: 224, baseType: !717, size: 64, offset: 128)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !349, line: 46, baseType: !718)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !497, line: 88, baseType: !719)
!719 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !710, file: !44, line: 225, baseType: !721, size: 128, offset: 192)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !722, line: 13, size: 128, elements: !723)
!722 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!723 = !{!724, !727}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !721, file: !722, line: 14, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !722, line: 8, baseType: !726)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !606, line: 30, baseType: !719)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !721, file: !722, line: 15, baseType: !352, size: 64, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !710, file: !44, line: 226, baseType: !721, size: 128, offset: 320)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !710, file: !44, line: 227, baseType: !721, size: 128, offset: 448)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !710, file: !44, line: 234, baseType: !540, size: 64, offset: 576)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !641, file: !44, line: 1882, baseType: !732, size: 64, offset: 896)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{!378, !735, !737, !603, !7}
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !562)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !739, line: 22, size: 1152, elements: !740)
!739 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!740 = !{!741, !742, !743, !744, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !738, file: !739, line: 23, baseType: !603, size: 32)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !738, file: !739, line: 24, baseType: !504, size: 16, offset: 32)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !738, file: !739, line: 25, baseType: !7, size: 32, offset: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !738, file: !739, line: 26, baseType: !745, size: 32, offset: 96)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !349, line: 104, baseType: !603)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !738, file: !739, line: 27, baseType: !609, size: 64, offset: 128)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !738, file: !739, line: 28, baseType: !609, size: 64, offset: 192)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !738, file: !739, line: 37, baseType: !609, size: 64, offset: 256)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !738, file: !739, line: 38, baseType: !699, size: 32, offset: 320)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !738, file: !739, line: 39, baseType: !699, size: 32, offset: 352)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !738, file: !739, line: 40, baseType: !623, size: 32, offset: 384)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !738, file: !739, line: 41, baseType: !631, size: 32, offset: 416)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !738, file: !739, line: 42, baseType: !717, size: 64, offset: 448)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !738, file: !739, line: 43, baseType: !721, size: 128, offset: 512)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !738, file: !739, line: 44, baseType: !721, size: 128, offset: 640)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !738, file: !739, line: 45, baseType: !721, size: 128, offset: 768)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !738, file: !739, line: 46, baseType: !721, size: 128, offset: 896)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !738, file: !739, line: 47, baseType: !609, size: 64, offset: 1024)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !738, file: !739, line: 48, baseType: !609, size: 64, offset: 1088)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !641, file: !44, line: 1883, baseType: !761, size: 64, offset: 960)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DISubroutineType(types: !763)
!763 = !{!495, !570, !464, !510}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !641, file: !44, line: 1884, baseType: !765, size: 64, offset: 1024)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DISubroutineType(types: !767)
!767 = !{!378, !617, !768, !609, !609}
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !641, file: !44, line: 1886, baseType: !771, size: 64, offset: 1088)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DISubroutineType(types: !773)
!773 = !{!378, !617, !774, !378}
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !641, file: !44, line: 1887, baseType: !776, size: 64, offset: 1152)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!378, !617, !570, !540, !7, !504}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !641, file: !44, line: 1890, baseType: !691, size: 64, offset: 1216)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !641, file: !44, line: 1891, baseType: !781, size: 64, offset: 1280)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DISubroutineType(types: !783)
!783 = !{!378, !617, !668, !378}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !618, file: !44, line: 623, baseType: !785, size: 64, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !787)
!787 = !{!788, !789, !790, !791, !792, !793, !840, !2642, !2724, !2807, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2823, !2827, !2828, !2831, !2832, !2835, !2836, !2837, !2878, !2905, !2906, !2907, !2908, !2909, !2910, !2913, !2915, !2922, !2923, !2925, !2926, !2927, !2986, !2987, !3002, !3003, !3004, !3005, !3006, !3009, !3010, !3011, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !786, file: !44, line: 1417, baseType: !382, size: 128)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !786, file: !44, line: 1418, baseType: !699, size: 32, offset: 128)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !786, file: !44, line: 1419, baseType: !615, size: 8, offset: 160)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !786, file: !44, line: 1420, baseType: !350, size: 64, offset: 192)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !786, file: !44, line: 1421, baseType: !717, size: 64, offset: 256)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !786, file: !44, line: 1422, baseType: !794, size: 64, offset: 320)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !796)
!796 = !{!797, !798, !799, !806, !810, !814, !818, !819, !820, !830, !833, !834, !835, !837, !838, !839}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !795, file: !44, line: 2229, baseType: !412, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !795, file: !44, line: 2230, baseType: !378, size: 32, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !795, file: !44, line: 2238, baseType: !800, size: 64, offset: 128)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!378, !803}
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !805, line: 28, flags: DIFlagFwdDecl)
!805 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!806 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !795, file: !44, line: 2239, baseType: !807, size: 64, offset: 192)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !795, file: !44, line: 2240, baseType: !811, size: 64, offset: 256)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DISubroutineType(types: !813)
!813 = !{!570, !794, !378, !412, !351}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !795, file: !44, line: 2242, baseType: !815, size: 64, offset: 320)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{null, !785}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !795, file: !44, line: 2243, baseType: !345, size: 64, offset: 384)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !795, file: !44, line: 2244, baseType: !794, size: 64, offset: 448)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !795, file: !44, line: 2245, baseType: !821, size: 64, offset: 512)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !349, line: 182, size: 64, elements: !822)
!822 = !{!823}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !821, file: !349, line: 183, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !349, line: 186, size: 128, elements: !826)
!826 = !{!827, !828}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !825, file: !349, line: 187, baseType: !824, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !825, file: !349, line: 187, baseType: !829, size: 64, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !795, file: !44, line: 2247, baseType: !831, offset: 576)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !832, line: 187, elements: !437)
!832 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!833 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !795, file: !44, line: 2248, baseType: !831, offset: 576)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !795, file: !44, line: 2249, baseType: !831, offset: 576)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !795, file: !44, line: 2250, baseType: !836, offset: 576)
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !831, elements: !465)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !795, file: !44, line: 2252, baseType: !831, offset: 576)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !795, file: !44, line: 2253, baseType: !831, offset: 576)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !795, file: !44, line: 2254, baseType: !831, offset: 576)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !786, file: !44, line: 1423, baseType: !841, size: 64, offset: 384)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !844)
!844 = !{!845, !849, !853, !854, !858, !864, !868, !869, !870, !874, !878, !879, !880, !881, !887, !892, !893, !900, !901, !902, !903, !2626, !2641}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !843, file: !44, line: 1936, baseType: !846, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{!617, !785}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !843, file: !44, line: 1937, baseType: !850, size: 64, offset: 64)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{null, !617}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !843, file: !44, line: 1938, baseType: !850, size: 64, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !843, file: !44, line: 1940, baseType: !855, size: 64, offset: 192)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{null, !617, !378}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !843, file: !44, line: 1941, baseType: !859, size: 64, offset: 256)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{!378, !617, !862}
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !843, file: !44, line: 1942, baseType: !865, size: 64, offset: 320)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!378, !617}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !843, file: !44, line: 1943, baseType: !850, size: 64, offset: 384)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !843, file: !44, line: 1944, baseType: !815, size: 64, offset: 448)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !843, file: !44, line: 1945, baseType: !871, size: 64, offset: 512)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = !DISubroutineType(types: !873)
!873 = !{!378, !785, !378}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !843, file: !44, line: 1946, baseType: !875, size: 64, offset: 576)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DISubroutineType(types: !877)
!877 = !{!378, !785}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !843, file: !44, line: 1947, baseType: !875, size: 64, offset: 640)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !843, file: !44, line: 1948, baseType: !875, size: 64, offset: 704)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !843, file: !44, line: 1949, baseType: !875, size: 64, offset: 768)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !843, file: !44, line: 1950, baseType: !882, size: 64, offset: 832)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DISubroutineType(types: !884)
!884 = !{!378, !570, !885}
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !843, file: !44, line: 1951, baseType: !888, size: 64, offset: 896)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DISubroutineType(types: !890)
!890 = !{!378, !785, !891, !464}
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !843, file: !44, line: 1952, baseType: !815, size: 64, offset: 960)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !843, file: !44, line: 1954, baseType: !894, size: 64, offset: 1024)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DISubroutineType(types: !896)
!896 = !{!378, !897, !570}
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !899, line: 539, flags: DIFlagFwdDecl)
!899 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!900 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !843, file: !44, line: 1955, baseType: !894, size: 64, offset: 1088)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !843, file: !44, line: 1956, baseType: !894, size: 64, offset: 1152)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !843, file: !44, line: 1957, baseType: !894, size: 64, offset: 1216)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !843, file: !44, line: 1963, baseType: !904, size: 64, offset: 1280)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!378, !785, !907, !348}
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !909, line: 68, size: 512, align: 128, elements: !910)
!909 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!910 = !{!911, !912, !2618, !2625}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !908, file: !909, line: 69, baseType: !350, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, scope: !908, file: !909, line: 77, baseType: !913, size: 320, offset: 64)
!913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !908, file: !909, line: 77, size: 320, elements: !914)
!914 = !{!915, !1138, !1143, !1171, !1179, !1185, !2549, !2617}
!915 = !DIDerivedType(tag: DW_TAG_member, scope: !913, file: !909, line: 78, baseType: !916, size: 320)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !913, file: !909, line: 78, size: 320, elements: !917)
!917 = !{!918, !919, !1136, !1137}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !916, file: !909, line: 84, baseType: !382, size: 128)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !916, file: !909, line: 86, baseType: !920, size: 64, offset: 128)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !922)
!922 = !{!923, !924, !931, !932, !933, !948, !964, !965, !966, !967, !1129, !1130, !1133, !1134, !1135}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !921, file: !44, line: 452, baseType: !617, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !921, file: !44, line: 453, baseType: !925, size: 128, offset: 64)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !926, line: 292, size: 128, elements: !927)
!926 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!927 = !{!928, !929, !930}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !925, file: !926, line: 293, baseType: !423)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !925, file: !926, line: 295, baseType: !348, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !925, file: !926, line: 296, baseType: !351, size: 64, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !921, file: !44, line: 454, baseType: !348, size: 32, offset: 192)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !921, file: !44, line: 455, baseType: !374, size: 32, offset: 224)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !921, file: !44, line: 460, baseType: !934, size: 128, offset: 256)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !935, line: 125, size: 128, elements: !936)
!935 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!936 = !{!937, !947}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !934, file: !935, line: 126, baseType: !938, size: 64)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !935, line: 31, size: 64, elements: !939)
!939 = !{!940}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !938, file: !935, line: 32, baseType: !941, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !935, line: 24, size: 192, align: 64, elements: !943)
!943 = !{!944, !945, !946}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !942, file: !935, line: 25, baseType: !350, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !942, file: !935, line: 26, baseType: !941, size: 64, offset: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !942, file: !935, line: 27, baseType: !941, size: 64, offset: 128)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !934, file: !935, line: 127, baseType: !941, size: 64, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !921, file: !44, line: 461, baseType: !949, size: 256, offset: 384)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !950, line: 35, size: 256, elements: !951)
!950 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!951 = !{!952, !960, !961, !963}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !949, file: !950, line: 36, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !954, line: 13, baseType: !955)
!954 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !349, line: 175, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !349, line: 173, size: 64, elements: !957)
!957 = !{!958}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !956, file: !349, line: 174, baseType: !959, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !604, line: 22, baseType: !726)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !949, file: !950, line: 42, baseType: !953, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !949, file: !950, line: 46, baseType: !962, offset: 128)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !424, line: 29, baseType: !431)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !949, file: !950, line: 47, baseType: !382, size: 128, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !921, file: !44, line: 462, baseType: !350, size: 64, offset: 640)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !921, file: !44, line: 463, baseType: !350, size: 64, offset: 704)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !921, file: !44, line: 464, baseType: !350, size: 64, offset: 768)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !921, file: !44, line: 465, baseType: !968, size: 64, offset: 832)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !971)
!971 = !{!972, !976, !980, !984, !988, !992, !998, !1004, !1008, !1013, !1017, !1021, !1025, !1093, !1097, !1103, !1104, !1105, !1109, !1114, !1118, !1125}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !970, file: !44, line: 368, baseType: !973, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{!378, !907, !862}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !970, file: !44, line: 369, baseType: !977, size: 64, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DISubroutineType(types: !979)
!979 = !{!378, !540, !907}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !970, file: !44, line: 372, baseType: !981, size: 64, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DISubroutineType(types: !983)
!983 = !{!378, !920, !862}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !970, file: !44, line: 375, baseType: !985, size: 64, offset: 192)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{!378, !907}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !970, file: !44, line: 381, baseType: !989, size: 64, offset: 256)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DISubroutineType(types: !991)
!991 = !{!378, !540, !920, !385, !7}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !970, file: !44, line: 383, baseType: !993, size: 64, offset: 320)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{null, !996}
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !970, file: !44, line: 385, baseType: !999, size: 64, offset: 384)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!378, !540, !920, !717, !7, !7, !1002, !1003}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !970, file: !44, line: 388, baseType: !1005, size: 64, offset: 448)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!378, !540, !920, !717, !7, !7, !907, !351}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !970, file: !44, line: 393, baseType: !1009, size: 64, offset: 512)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!1012, !920, !1012}
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !349, line: 125, baseType: !609)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !970, file: !44, line: 394, baseType: !1014, size: 64, offset: 576)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{null, !907, !7, !7}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !970, file: !44, line: 395, baseType: !1018, size: 64, offset: 640)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!378, !907, !348}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !970, file: !44, line: 396, baseType: !1022, size: 64, offset: 704)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{null, !907}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !970, file: !44, line: 397, baseType: !1026, size: 64, offset: 768)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!495, !1029, !1051}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !1031)
!1031 = !{!1032, !1033, !1034, !1038, !1039, !1040, !1043, !1044}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1030, file: !44, line: 321, baseType: !540, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1030, file: !44, line: 326, baseType: !717, size: 64, offset: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1030, file: !44, line: 327, baseType: !1035, size: 64, offset: 128)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{null, !1029, !352, !352}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1030, file: !44, line: 328, baseType: !351, size: 64, offset: 192)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1030, file: !44, line: 329, baseType: !378, size: 32, offset: 256)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1030, file: !44, line: 330, baseType: !1041, size: 16, offset: 288)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !604, line: 19, baseType: !1042)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !606, line: 24, baseType: !505)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1030, file: !44, line: 331, baseType: !1041, size: 16, offset: 304)
!1044 = !DIDerivedType(tag: DW_TAG_member, scope: !1030, file: !44, line: 332, baseType: !1045, size: 64, offset: 320)
!1045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1030, file: !44, line: 332, size: 64, elements: !1046)
!1046 = !{!1047, !1048}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1045, file: !44, line: 333, baseType: !7, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1045, file: !44, line: 334, baseType: !1049, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1053, line: 29, size: 320, elements: !1054)
!1053 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1054 = !{!1055, !1056, !1057, !1058, !1084}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1052, file: !1053, line: 35, baseType: !7, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1052, file: !1053, line: 36, baseType: !510, size: 64, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1052, file: !1053, line: 37, baseType: !510, size: 64, offset: 128)
!1058 = !DIDerivedType(tag: DW_TAG_member, scope: !1052, file: !1053, line: 38, baseType: !1059, size: 64, offset: 192)
!1059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1052, file: !1053, line: 38, size: 64, elements: !1060)
!1060 = !{!1061, !1069, !1076, !1080}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1059, file: !1053, line: 39, baseType: !1062, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1065, line: 17, size: 128, elements: !1066)
!1065 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1066 = !{!1067, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1064, file: !1065, line: 19, baseType: !351, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1064, file: !1065, line: 20, baseType: !511, size: 64, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1059, file: !1053, line: 40, baseType: !1070, size: 64)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1072)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1053, line: 15, size: 128, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1072, file: !1053, line: 16, baseType: !351, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1072, file: !1053, line: 17, baseType: !510, size: 64, offset: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1059, file: !1053, line: 41, baseType: !1077, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1079)
!1079 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1053, line: 41, flags: DIFlagFwdDecl)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1059, file: !1053, line: 42, baseType: !1081, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1083, line: 53, flags: DIFlagFwdDecl)
!1083 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1084 = !DIDerivedType(tag: DW_TAG_member, scope: !1052, file: !1053, line: 44, baseType: !1085, size: 64, offset: 256)
!1085 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1052, file: !1053, line: 44, size: 64, elements: !1086)
!1086 = !{!1087, !1088}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1085, file: !1053, line: 45, baseType: !350, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, scope: !1085, file: !1053, line: 46, baseType: !1089, size: 64)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1085, file: !1053, line: 46, size: 64, elements: !1090)
!1090 = !{!1091, !1092}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1089, file: !1053, line: 47, baseType: !7, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1089, file: !1053, line: 48, baseType: !7, size: 32, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !970, file: !44, line: 402, baseType: !1094, size: 64, offset: 832)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!378, !920, !907, !907, !5}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !970, file: !44, line: 404, baseType: !1098, size: 64, offset: 896)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!396, !907, !1101}
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1102, line: 305, baseType: !7)
!1102 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !970, file: !44, line: 405, baseType: !1022, size: 64, offset: 960)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !970, file: !44, line: 406, baseType: !985, size: 64, offset: 1024)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !970, file: !44, line: 407, baseType: !1106, size: 64, offset: 1088)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!378, !907, !350, !350}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !970, file: !44, line: 409, baseType: !1110, size: 64, offset: 1152)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{null, !907, !1113, !1113}
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !970, file: !44, line: 410, baseType: !1115, size: 64, offset: 1216)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!378, !920, !907}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !970, file: !44, line: 413, baseType: !1119, size: 64, offset: 1280)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!378, !1122, !540, !1124}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !970, file: !44, line: 415, baseType: !1126, size: 64, offset: 1344)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{null, !540}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !921, file: !44, line: 466, baseType: !350, size: 64, offset: 896)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !921, file: !44, line: 467, baseType: !1131, size: 32, offset: 960)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1132, line: 8, baseType: !603)
!1132 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !921, file: !44, line: 468, baseType: !423, offset: 992)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !921, file: !44, line: 469, baseType: !382, size: 128, offset: 1024)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !921, file: !44, line: 470, baseType: !351, size: 64, offset: 1152)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !916, file: !909, line: 87, baseType: !350, size: 64, offset: 192)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !916, file: !909, line: 94, baseType: !350, size: 64, offset: 256)
!1138 = !DIDerivedType(tag: DW_TAG_member, scope: !913, file: !909, line: 96, baseType: !1139, size: 64)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !913, file: !909, line: 96, size: 64, elements: !1140)
!1140 = !{!1141}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1139, file: !909, line: 101, baseType: !1142, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !349, line: 143, baseType: !609)
!1143 = !DIDerivedType(tag: DW_TAG_member, scope: !913, file: !909, line: 103, baseType: !1144, size: 320)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !913, file: !909, line: 103, size: 320, elements: !1145)
!1145 = !{!1146, !1156, !1159, !1160}
!1146 = !DIDerivedType(tag: DW_TAG_member, scope: !1144, file: !909, line: 104, baseType: !1147, size: 128)
!1147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1144, file: !909, line: 104, size: 128, elements: !1148)
!1148 = !{!1149, !1150}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1147, file: !909, line: 105, baseType: !382, size: 128)
!1150 = !DIDerivedType(tag: DW_TAG_member, scope: !1147, file: !909, line: 106, baseType: !1151, size: 128)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1147, file: !909, line: 106, size: 128, elements: !1152)
!1152 = !{!1153, !1154, !1155}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1151, file: !909, line: 107, baseType: !907, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1151, file: !909, line: 109, baseType: !378, size: 32, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1151, file: !909, line: 110, baseType: !378, size: 32, offset: 96)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1144, file: !909, line: 117, baseType: !1157, size: 64, offset: 128)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !909, line: 117, flags: DIFlagFwdDecl)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1144, file: !909, line: 119, baseType: !351, size: 64, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_member, scope: !1144, file: !909, line: 120, baseType: !1161, size: 64, offset: 256)
!1161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1144, file: !909, line: 120, size: 64, elements: !1162)
!1162 = !{!1163, !1164, !1165}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1161, file: !909, line: 121, baseType: !351, size: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1161, file: !909, line: 122, baseType: !350, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, scope: !1161, file: !909, line: 123, baseType: !1166, size: 32)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1161, file: !909, line: 123, size: 32, elements: !1167)
!1167 = !{!1168, !1169, !1170}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1166, file: !909, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1166, file: !909, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1166, file: !909, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1171 = !DIDerivedType(tag: DW_TAG_member, scope: !913, file: !909, line: 130, baseType: !1172, size: 192)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !913, file: !909, line: 130, size: 192, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177, !1178}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1172, file: !909, line: 131, baseType: !350, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1172, file: !909, line: 134, baseType: !615, size: 8, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1172, file: !909, line: 135, baseType: !615, size: 8, offset: 72)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1172, file: !909, line: 136, baseType: !374, size: 32, offset: 96)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1172, file: !909, line: 137, baseType: !7, size: 32, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, scope: !913, file: !909, line: 139, baseType: !1180, size: 256)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !913, file: !909, line: 139, size: 256, elements: !1181)
!1181 = !{!1182, !1183, !1184}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1180, file: !909, line: 140, baseType: !350, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1180, file: !909, line: 141, baseType: !374, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1180, file: !909, line: 143, baseType: !382, size: 128, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, scope: !913, file: !909, line: 145, baseType: !1186, size: 256)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !913, file: !909, line: 145, size: 256, elements: !1187)
!1187 = !{!1188, !1189, !1191, !1192, !2548}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1186, file: !909, line: 146, baseType: !350, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1186, file: !909, line: 147, baseType: !1190, size: 64, offset: 64)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !899, line: 509, baseType: !907)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1186, file: !909, line: 148, baseType: !350, size: 64, offset: 128)
!1192 = !DIDerivedType(tag: DW_TAG_member, scope: !1186, file: !909, line: 149, baseType: !1193, size: 64, offset: 192)
!1193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1186, file: !909, line: 149, size: 64, elements: !1194)
!1194 = !{!1195, !2547}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1193, file: !909, line: 150, baseType: !1196, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !909, line: 388, size: 7296, elements: !1198)
!1198 = !{!1199, !2543}
!1199 = !DIDerivedType(tag: DW_TAG_member, scope: !1197, file: !909, line: 389, baseType: !1200, size: 7296)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1197, file: !909, line: 389, size: 7296, elements: !1201)
!1201 = !{!1202, !1320, !1321, !1322, !1326, !1327, !1328, !1329, !1330, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1371, !1379, !1382, !1428, !1429, !2527, !2528, !2531, !2532, !2533, !2536, !2537, !2538, !2541, !2542}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1200, file: !909, line: 390, baseType: !1203, size: 64)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !909, line: 305, size: 1472, elements: !1205)
!1205 = !{!1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1220, !1221, !1226, !1227, !1230, !1314, !1315, !1316, !1317, !1318}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1204, file: !909, line: 308, baseType: !350, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1204, file: !909, line: 309, baseType: !350, size: 64, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1204, file: !909, line: 313, baseType: !1203, size: 64, offset: 128)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1204, file: !909, line: 313, baseType: !1203, size: 64, offset: 192)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1204, file: !909, line: 315, baseType: !942, size: 192, align: 64, offset: 256)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1204, file: !909, line: 323, baseType: !350, size: 64, offset: 448)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1204, file: !909, line: 327, baseType: !1196, size: 64, offset: 512)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1204, file: !909, line: 333, baseType: !1214, size: 64, offset: 576)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !899, line: 284, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !899, line: 284, size: 64, elements: !1216)
!1216 = !{!1217}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1215, file: !899, line: 284, baseType: !1218, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1219, line: 19, baseType: !350)
!1219 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1204, file: !909, line: 334, baseType: !350, size: 64, offset: 640)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1204, file: !909, line: 343, baseType: !1222, size: 256, offset: 704)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1204, file: !909, line: 340, size: 256, elements: !1223)
!1223 = !{!1224, !1225}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1222, file: !909, line: 341, baseType: !942, size: 192, align: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1222, file: !909, line: 342, baseType: !350, size: 64, offset: 192)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1204, file: !909, line: 351, baseType: !382, size: 128, offset: 960)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1204, file: !909, line: 353, baseType: !1228, size: 64, offset: 1088)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !909, line: 353, flags: DIFlagFwdDecl)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1204, file: !909, line: 356, baseType: !1231, size: 64, offset: 1152)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1234)
!1234 = !{!1235, !1239, !1240, !1244, !1248, !1288, !1292, !1296, !1300, !1301, !1302, !1306, !1310}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1233, file: !14, line: 558, baseType: !1236, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{null, !1203}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1233, file: !14, line: 559, baseType: !1236, size: 64, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1233, file: !14, line: 560, baseType: !1241, size: 64, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!378, !1203, !350}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1233, file: !14, line: 561, baseType: !1245, size: 64, offset: 192)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = !DISubroutineType(types: !1247)
!1247 = !{!378, !1203}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1233, file: !14, line: 562, baseType: !1249, size: 64, offset: 256)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!1252, !1253}
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !909, line: 682, baseType: !7)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1255)
!1255 = !{!1256, !1257, !1258, !1259, !1260, !1261, !1268, !1275, !1281, !1282, !1283, !1285, !1287}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1254, file: !14, line: 509, baseType: !1203, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1254, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1254, file: !14, line: 511, baseType: !348, size: 32, offset: 96)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1254, file: !14, line: 512, baseType: !350, size: 64, offset: 128)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1254, file: !14, line: 513, baseType: !350, size: 64, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1254, file: !14, line: 514, baseType: !1262, size: 64, offset: 256)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !899, line: 385, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !899, line: 385, size: 64, elements: !1265)
!1265 = !{!1266}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1264, file: !899, line: 385, baseType: !1267, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1219, line: 15, baseType: !350)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1254, file: !14, line: 516, baseType: !1269, size: 64, offset: 320)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !899, line: 359, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !899, line: 359, size: 64, elements: !1272)
!1272 = !{!1273}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1271, file: !899, line: 359, baseType: !1274, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1219, line: 16, baseType: !350)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1254, file: !14, line: 519, baseType: !1276, size: 64, offset: 384)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1219, line: 21, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1219, line: 21, size: 64, elements: !1278)
!1278 = !{!1279}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1277, file: !1219, line: 21, baseType: !1280, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1219, line: 14, baseType: !350)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1254, file: !14, line: 521, baseType: !907, size: 64, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1254, file: !14, line: 522, baseType: !907, size: 64, offset: 512)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1254, file: !14, line: 528, baseType: !1284, size: 64, offset: 576)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1254, file: !14, line: 532, baseType: !1286, size: 64, offset: 640)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1254, file: !14, line: 536, baseType: !1190, size: 64, offset: 704)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1233, file: !14, line: 563, baseType: !1289, size: 64, offset: 320)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!1252, !1253, !13}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1233, file: !14, line: 565, baseType: !1293, size: 64, offset: 384)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{null, !1253, !350, !350}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1233, file: !14, line: 567, baseType: !1297, size: 64, offset: 448)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!350, !1203}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1233, file: !14, line: 571, baseType: !1249, size: 64, offset: 512)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1233, file: !14, line: 574, baseType: !1249, size: 64, offset: 576)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1233, file: !14, line: 579, baseType: !1303, size: 64, offset: 640)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!378, !1203, !350, !351, !378, !378}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1233, file: !14, line: 585, baseType: !1307, size: 64, offset: 704)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!412, !1203}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1233, file: !14, line: 615, baseType: !1311, size: 64, offset: 768)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!907, !1203, !350}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1204, file: !909, line: 359, baseType: !350, size: 64, offset: 1216)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1204, file: !909, line: 361, baseType: !540, size: 64, offset: 1280)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1204, file: !909, line: 362, baseType: !351, size: 64, offset: 1344)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1204, file: !909, line: 365, baseType: !953, size: 64, offset: 1408)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1204, file: !909, line: 373, baseType: !1319, offset: 1472)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !909, line: 296, elements: !437)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1200, file: !909, line: 391, baseType: !938, size: 64, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1200, file: !909, line: 392, baseType: !609, size: 64, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1200, file: !909, line: 394, baseType: !1323, size: 64, offset: 192)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!350, !540, !350, !350, !350, !350}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1200, file: !909, line: 398, baseType: !350, size: 64, offset: 256)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1200, file: !909, line: 399, baseType: !350, size: 64, offset: 320)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1200, file: !909, line: 405, baseType: !350, size: 64, offset: 384)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1200, file: !909, line: 406, baseType: !350, size: 64, offset: 448)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1200, file: !909, line: 407, baseType: !1331, size: 64, offset: 512)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !899, line: 286, baseType: !1333)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !899, line: 286, size: 64, elements: !1334)
!1334 = !{!1335}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1333, file: !899, line: 286, baseType: !1336, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1219, line: 18, baseType: !350)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1200, file: !909, line: 416, baseType: !374, size: 32, offset: 576)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1200, file: !909, line: 428, baseType: !374, size: 32, offset: 608)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1200, file: !909, line: 437, baseType: !374, size: 32, offset: 640)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1200, file: !909, line: 447, baseType: !374, size: 32, offset: 672)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1200, file: !909, line: 450, baseType: !953, size: 64, offset: 704)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1200, file: !909, line: 452, baseType: !378, size: 32, offset: 768)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1200, file: !909, line: 454, baseType: !423, offset: 800)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1200, file: !909, line: 457, baseType: !949, size: 256, offset: 832)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1200, file: !909, line: 459, baseType: !382, size: 128, offset: 1088)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1200, file: !909, line: 466, baseType: !350, size: 64, offset: 1216)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1200, file: !909, line: 467, baseType: !350, size: 64, offset: 1280)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1200, file: !909, line: 469, baseType: !350, size: 64, offset: 1344)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1200, file: !909, line: 470, baseType: !350, size: 64, offset: 1408)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1200, file: !909, line: 471, baseType: !955, size: 64, offset: 1472)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1200, file: !909, line: 472, baseType: !350, size: 64, offset: 1536)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1200, file: !909, line: 473, baseType: !350, size: 64, offset: 1600)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1200, file: !909, line: 474, baseType: !350, size: 64, offset: 1664)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1200, file: !909, line: 475, baseType: !350, size: 64, offset: 1728)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1200, file: !909, line: 477, baseType: !423, offset: 1792)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1200, file: !909, line: 478, baseType: !350, size: 64, offset: 1792)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1200, file: !909, line: 478, baseType: !350, size: 64, offset: 1856)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1200, file: !909, line: 478, baseType: !350, size: 64, offset: 1920)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1200, file: !909, line: 478, baseType: !350, size: 64, offset: 1984)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1200, file: !909, line: 479, baseType: !350, size: 64, offset: 2048)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1200, file: !909, line: 479, baseType: !350, size: 64, offset: 2112)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1200, file: !909, line: 479, baseType: !350, size: 64, offset: 2176)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1200, file: !909, line: 480, baseType: !350, size: 64, offset: 2240)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1200, file: !909, line: 480, baseType: !350, size: 64, offset: 2304)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1200, file: !909, line: 480, baseType: !350, size: 64, offset: 2368)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1200, file: !909, line: 480, baseType: !350, size: 64, offset: 2432)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1200, file: !909, line: 482, baseType: !1368, size: 2816, offset: 2496)
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 2816, elements: !1369)
!1369 = !{!1370}
!1370 = !DISubrange(count: 44)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1200, file: !909, line: 488, baseType: !1372, size: 256, offset: 5312)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1373, line: 60, size: 256, elements: !1374)
!1373 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1374 = !{!1375}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1372, file: !1373, line: 61, baseType: !1376, size: 256)
!1376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !953, size: 256, elements: !1377)
!1377 = !{!1378}
!1378 = !DISubrange(count: 4)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1200, file: !909, line: 490, baseType: !1380, size: 64, offset: 5568)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !909, line: 490, flags: DIFlagFwdDecl)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1200, file: !909, line: 493, baseType: !1383, size: 896, offset: 5632)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1384, line: 53, baseType: !1385)
!1384 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1384, line: 13, size: 896, elements: !1386)
!1386 = !{!1387, !1388, !1389, !1390, !1393, !1394, !1401, !1402, !1422, !1423, !1424}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1385, file: !1384, line: 18, baseType: !609, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1385, file: !1384, line: 28, baseType: !955, size: 64, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1385, file: !1384, line: 31, baseType: !949, size: 256, offset: 128)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1385, file: !1384, line: 32, baseType: !1391, size: 64, offset: 384)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1384, line: 32, flags: DIFlagFwdDecl)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1385, file: !1384, line: 37, baseType: !505, size: 16, offset: 448)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1385, file: !1384, line: 40, baseType: !1395, size: 192, offset: 512)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1396, line: 53, size: 192, elements: !1397)
!1396 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1397 = !{!1398, !1399, !1400}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1395, file: !1396, line: 54, baseType: !953, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1395, file: !1396, line: 55, baseType: !423, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1395, file: !1396, line: 59, baseType: !382, size: 128, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1385, file: !1384, line: 41, baseType: !351, size: 64, offset: 704)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1385, file: !1384, line: 42, baseType: !1403, size: 64, offset: 768)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1406, line: 13, size: 896, elements: !1407)
!1406 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1407 = !{!1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1405, file: !1406, line: 14, baseType: !351, size: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1405, file: !1406, line: 15, baseType: !350, size: 64, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1405, file: !1406, line: 17, baseType: !350, size: 64, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1405, file: !1406, line: 17, baseType: !350, size: 64, offset: 192)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1405, file: !1406, line: 19, baseType: !352, size: 64, offset: 256)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1405, file: !1406, line: 21, baseType: !352, size: 64, offset: 320)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1405, file: !1406, line: 22, baseType: !352, size: 64, offset: 384)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1405, file: !1406, line: 23, baseType: !352, size: 64, offset: 448)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1405, file: !1406, line: 24, baseType: !352, size: 64, offset: 512)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1405, file: !1406, line: 25, baseType: !352, size: 64, offset: 576)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1405, file: !1406, line: 26, baseType: !352, size: 64, offset: 640)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1405, file: !1406, line: 27, baseType: !352, size: 64, offset: 704)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1405, file: !1406, line: 28, baseType: !352, size: 64, offset: 768)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1405, file: !1406, line: 29, baseType: !352, size: 64, offset: 832)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1385, file: !1384, line: 44, baseType: !374, size: 32, offset: 832)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1385, file: !1384, line: 50, baseType: !1041, size: 16, offset: 864)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1385, file: !1384, line: 51, baseType: !1425, size: 16, offset: 880)
!1425 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !604, line: 18, baseType: !1426)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !606, line: 23, baseType: !1427)
!1427 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1200, file: !909, line: 495, baseType: !350, size: 64, offset: 6528)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1200, file: !909, line: 497, baseType: !1430, size: 64, offset: 6592)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !909, line: 381, size: 384, elements: !1432)
!1432 = !{!1433, !1434, !2526}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1431, file: !909, line: 382, baseType: !374, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1431, file: !909, line: 383, baseType: !1435, size: 128, offset: 64)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !909, line: 376, size: 128, elements: !1436)
!1436 = !{!1437, !2524}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1435, file: !909, line: 377, baseType: !1438, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1083, line: 640, size: 48640, elements: !1440)
!1440 = !{!1441, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1461, !1479, !1490, !1575, !1576, !1577, !1588, !1589, !1591, !1592, !1593, !1594, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1673, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1711, !1713, !1714, !1715, !1727, !1728, !1729, !1730, !1731, !1732, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1756, !1761, !1945, !1946, !1947, !1948, !1952, !1955, !1958, !1961, !1964, !1967, !2068, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2114, !2115, !2116, !2117, !2118, !2123, !2124, !2125, !2128, !2129, !2132, !2135, !2138, !2141, !2184, !2187, !2188, !2267, !2268, !2271, !2272, !2275, !2276, !2277, !2281, !2282, !2283, !2296, !2297, !2298, !2308, !2313, !2314, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1439, file: !1083, line: 646, baseType: !1442, size: 128)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1443, line: 56, size: 128, elements: !1444)
!1443 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1444 = !{!1445, !1446}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1442, file: !1443, line: 57, baseType: !350, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1442, file: !1443, line: 58, baseType: !603, size: 32, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1439, file: !1083, line: 649, baseType: !357, size: 64, offset: 128)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1439, file: !1083, line: 657, baseType: !351, size: 64, offset: 192)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1439, file: !1083, line: 658, baseType: !369, size: 32, offset: 256)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1439, file: !1083, line: 660, baseType: !7, size: 32, offset: 288)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1439, file: !1083, line: 661, baseType: !7, size: 32, offset: 320)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1439, file: !1083, line: 684, baseType: !378, size: 32, offset: 352)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1439, file: !1083, line: 686, baseType: !378, size: 32, offset: 384)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1439, file: !1083, line: 687, baseType: !378, size: 32, offset: 416)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1439, file: !1083, line: 688, baseType: !378, size: 32, offset: 448)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1439, file: !1083, line: 689, baseType: !7, size: 32, offset: 480)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1439, file: !1083, line: 691, baseType: !1458, size: 64, offset: 512)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1460)
!1460 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1083, line: 691, flags: DIFlagFwdDecl)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1439, file: !1083, line: 692, baseType: !1462, size: 832, offset: 576)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1083, line: 451, size: 832, elements: !1463)
!1463 = !{!1464, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1462, file: !1083, line: 453, baseType: !1465, size: 128)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1083, line: 325, size: 128, elements: !1466)
!1466 = !{!1467, !1468}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1465, file: !1083, line: 326, baseType: !350, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1465, file: !1083, line: 327, baseType: !603, size: 32, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1462, file: !1083, line: 454, baseType: !942, size: 192, align: 64, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1462, file: !1083, line: 455, baseType: !382, size: 128, offset: 320)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1462, file: !1083, line: 456, baseType: !7, size: 32, offset: 448)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1462, file: !1083, line: 458, baseType: !609, size: 64, offset: 512)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1462, file: !1083, line: 459, baseType: !609, size: 64, offset: 576)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1462, file: !1083, line: 460, baseType: !609, size: 64, offset: 640)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1462, file: !1083, line: 461, baseType: !609, size: 64, offset: 704)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1462, file: !1083, line: 463, baseType: !609, size: 64, offset: 768)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1462, file: !1083, line: 465, baseType: !1478, offset: 832)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1083, line: 415, elements: !437)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1439, file: !1083, line: 693, baseType: !1480, size: 384, offset: 1408)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1083, line: 489, size: 384, elements: !1481)
!1481 = !{!1482, !1483, !1484, !1485, !1486, !1487, !1488}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1480, file: !1083, line: 490, baseType: !382, size: 128)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1480, file: !1083, line: 491, baseType: !350, size: 64, offset: 128)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1480, file: !1083, line: 492, baseType: !350, size: 64, offset: 192)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1480, file: !1083, line: 493, baseType: !7, size: 32, offset: 256)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1480, file: !1083, line: 494, baseType: !505, size: 16, offset: 288)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1480, file: !1083, line: 495, baseType: !505, size: 16, offset: 304)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1480, file: !1083, line: 497, baseType: !1489, size: 64, offset: 320)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1439, file: !1083, line: 697, baseType: !1491, size: 1792, offset: 1792)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1083, line: 507, size: 1792, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1572, !1573}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1491, file: !1083, line: 508, baseType: !942, size: 192, align: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1491, file: !1083, line: 515, baseType: !609, size: 64, offset: 192)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1491, file: !1083, line: 516, baseType: !609, size: 64, offset: 256)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1491, file: !1083, line: 517, baseType: !609, size: 64, offset: 320)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1491, file: !1083, line: 518, baseType: !609, size: 64, offset: 384)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1491, file: !1083, line: 519, baseType: !609, size: 64, offset: 448)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1491, file: !1083, line: 526, baseType: !959, size: 64, offset: 512)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1491, file: !1083, line: 527, baseType: !609, size: 64, offset: 576)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1491, file: !1083, line: 528, baseType: !7, size: 32, offset: 640)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1491, file: !1083, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1491, file: !1083, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1491, file: !1083, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1491, file: !1083, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1491, file: !1083, line: 563, baseType: !1507, size: 512, offset: 704)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1508)
!1508 = !{!1509, !1517, !1518, !1523, !1566, !1569, !1570, !1571}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1507, file: !20, line: 119, baseType: !1510, size: 256)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1511, line: 9, size: 256, elements: !1512)
!1511 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1512 = !{!1513, !1514}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1510, file: !1511, line: 10, baseType: !942, size: 192, align: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1510, file: !1511, line: 11, baseType: !1515, size: 64, offset: 192)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1516, line: 29, baseType: !959)
!1516 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1507, file: !20, line: 120, baseType: !1515, size: 64, offset: 256)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1507, file: !20, line: 121, baseType: !1519, size: 64, offset: 320)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!19, !1522}
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1507, file: !20, line: 122, baseType: !1524, size: 64, offset: 384)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1526)
!1526 = !{!1527, !1547, !1548, !1551, !1556, !1557, !1561, !1565}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1525, file: !20, line: 160, baseType: !1528, size: 64)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1530)
!1530 = !{!1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1529, file: !20, line: 215, baseType: !962)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1529, file: !20, line: 216, baseType: !7, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1529, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1529, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1529, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1529, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1529, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1529, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1529, file: !20, line: 233, baseType: !1515, size: 64, offset: 128)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1529, file: !20, line: 234, baseType: !1522, size: 64, offset: 192)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1529, file: !20, line: 235, baseType: !1515, size: 64, offset: 256)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1529, file: !20, line: 236, baseType: !1522, size: 64, offset: 320)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1529, file: !20, line: 237, baseType: !1544, size: 4096, offset: 512)
!1544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1525, size: 4096, elements: !1545)
!1545 = !{!1546}
!1546 = !DISubrange(count: 8)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1525, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1525, file: !20, line: 162, baseType: !1549, size: 32, offset: 96)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !349, line: 27, baseType: !1550)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !497, line: 96, baseType: !378)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1525, file: !20, line: 163, baseType: !1552, size: 32, offset: 128)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !576, line: 276, baseType: !1553)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !576, line: 276, size: 32, elements: !1554)
!1554 = !{!1555}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1553, file: !576, line: 276, baseType: !580, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1525, file: !20, line: 164, baseType: !1522, size: 64, offset: 192)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1525, file: !20, line: 165, baseType: !1558, size: 128, offset: 256)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1511, line: 14, size: 128, elements: !1559)
!1559 = !{!1560}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1558, file: !1511, line: 15, baseType: !934, size: 128)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1525, file: !20, line: 166, baseType: !1562, size: 64, offset: 384)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!1515}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1525, file: !20, line: 167, baseType: !1515, size: 64, offset: 448)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1507, file: !20, line: 123, baseType: !1567, size: 8, offset: 448)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !604, line: 17, baseType: !1568)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !606, line: 21, baseType: !615)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1507, file: !20, line: 124, baseType: !1567, size: 8, offset: 456)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1507, file: !20, line: 125, baseType: !1567, size: 8, offset: 464)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1507, file: !20, line: 126, baseType: !1567, size: 8, offset: 472)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1491, file: !1083, line: 572, baseType: !1507, size: 512, offset: 1216)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1491, file: !1083, line: 580, baseType: !1574, size: 64, offset: 1728)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1439, file: !1083, line: 721, baseType: !7, size: 32, offset: 3584)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1439, file: !1083, line: 722, baseType: !378, size: 32, offset: 3616)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1439, file: !1083, line: 723, baseType: !1578, size: 64, offset: 3648)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1580)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1581, line: 17, baseType: !1582)
!1581 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1581, line: 17, size: 64, elements: !1583)
!1583 = !{!1584}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1582, file: !1581, line: 17, baseType: !1585, size: 64)
!1585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 64, elements: !1586)
!1586 = !{!1587}
!1587 = !DISubrange(count: 1)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1439, file: !1083, line: 724, baseType: !1580, size: 64, offset: 3712)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1439, file: !1083, line: 749, baseType: !1590, offset: 3776)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1083, line: 290, elements: !437)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1439, file: !1083, line: 751, baseType: !382, size: 128, offset: 3776)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1439, file: !1083, line: 757, baseType: !1196, size: 64, offset: 3904)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1439, file: !1083, line: 758, baseType: !1196, size: 64, offset: 3968)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1439, file: !1083, line: 761, baseType: !1595, size: 320, offset: 4032)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1373, line: 34, size: 320, elements: !1596)
!1596 = !{!1597, !1598}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1595, file: !1373, line: 35, baseType: !609, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1595, file: !1373, line: 36, baseType: !1599, size: 256, offset: 64)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 256, elements: !1377)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1439, file: !1083, line: 766, baseType: !378, size: 32, offset: 4352)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1439, file: !1083, line: 767, baseType: !378, size: 32, offset: 4384)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1439, file: !1083, line: 768, baseType: !378, size: 32, offset: 4416)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1439, file: !1083, line: 770, baseType: !378, size: 32, offset: 4448)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1439, file: !1083, line: 772, baseType: !350, size: 64, offset: 4480)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1439, file: !1083, line: 775, baseType: !7, size: 32, offset: 4544)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1439, file: !1083, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1439, file: !1083, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1439, file: !1083, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1439, file: !1083, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1439, file: !1083, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1439, file: !1083, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1439, file: !1083, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1439, file: !1083, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1439, file: !1083, line: 831, baseType: !350, size: 64, offset: 4672)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1439, file: !1083, line: 833, baseType: !1616, size: 384, offset: 4736)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1617)
!1617 = !{!1618, !1623}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1616, file: !25, line: 26, baseType: !1619, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!352, !1622}
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, scope: !1616, file: !25, line: 27, baseType: !1624, size: 320, offset: 64)
!1624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1616, file: !25, line: 27, size: 320, elements: !1625)
!1625 = !{!1626, !1636, !1663}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1624, file: !25, line: 36, baseType: !1627, size: 320)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1624, file: !25, line: 29, size: 320, elements: !1628)
!1628 = !{!1629, !1631, !1632, !1633, !1634, !1635}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1627, file: !25, line: 30, baseType: !1630, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1627, file: !25, line: 31, baseType: !603, size: 32, offset: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1627, file: !25, line: 32, baseType: !603, size: 32, offset: 96)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1627, file: !25, line: 33, baseType: !603, size: 32, offset: 128)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1627, file: !25, line: 34, baseType: !609, size: 64, offset: 192)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1627, file: !25, line: 35, baseType: !1630, size: 64, offset: 256)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1624, file: !25, line: 46, baseType: !1637, size: 192)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1624, file: !25, line: 38, size: 192, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1662}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1637, file: !25, line: 39, baseType: !1549, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1637, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, scope: !1637, file: !25, line: 41, baseType: !1642, size: 64, offset: 64)
!1642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1637, file: !25, line: 41, size: 64, elements: !1643)
!1643 = !{!1644, !1652}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1642, file: !25, line: 42, baseType: !1645, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1647, line: 7, size: 128, elements: !1648)
!1647 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1648 = !{!1649, !1651}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1646, file: !1647, line: 8, baseType: !1650, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !497, line: 93, baseType: !719)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1646, file: !1647, line: 9, baseType: !719, size: 64, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1642, file: !25, line: 43, baseType: !1653, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1655, line: 7, size: 64, elements: !1656)
!1655 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1656 = !{!1657, !1661}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1654, file: !1655, line: 8, baseType: !1658, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1655, line: 5, baseType: !1659)
!1659 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !604, line: 20, baseType: !1660)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !606, line: 26, baseType: !378)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1654, file: !1655, line: 9, baseType: !1659, size: 32, offset: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1637, file: !25, line: 45, baseType: !609, size: 64, offset: 128)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1624, file: !25, line: 54, baseType: !1664, size: 256)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1624, file: !25, line: 48, size: 256, elements: !1665)
!1665 = !{!1666, !1669, !1670, !1671, !1672}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1664, file: !25, line: 49, baseType: !1667, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1664, file: !25, line: 50, baseType: !378, size: 32, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1664, file: !25, line: 51, baseType: !378, size: 32, offset: 96)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1664, file: !25, line: 52, baseType: !350, size: 64, offset: 128)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1664, file: !25, line: 53, baseType: !350, size: 64, offset: 192)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1439, file: !1083, line: 835, baseType: !1674, size: 32, offset: 5120)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !349, line: 22, baseType: !1675)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !497, line: 28, baseType: !378)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1439, file: !1083, line: 836, baseType: !1674, size: 32, offset: 5152)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1439, file: !1083, line: 840, baseType: !350, size: 64, offset: 5184)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1439, file: !1083, line: 849, baseType: !1438, size: 64, offset: 5248)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1439, file: !1083, line: 852, baseType: !1438, size: 64, offset: 5312)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1439, file: !1083, line: 857, baseType: !382, size: 128, offset: 5376)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1439, file: !1083, line: 858, baseType: !382, size: 128, offset: 5504)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1439, file: !1083, line: 859, baseType: !1438, size: 64, offset: 5632)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1439, file: !1083, line: 867, baseType: !382, size: 128, offset: 5696)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1439, file: !1083, line: 868, baseType: !382, size: 128, offset: 5824)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1439, file: !1083, line: 871, baseType: !1686, size: 64, offset: 5952)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1688)
!1688 = !{!1689, !1690, !1691, !1692, !1694, !1695, !1702, !1703}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1687, file: !53, line: 61, baseType: !369, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1687, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1687, file: !53, line: 63, baseType: !423, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1687, file: !53, line: 65, baseType: !1693, size: 256, offset: 64)
!1693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !821, size: 256, elements: !1377)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1687, file: !53, line: 66, baseType: !821, size: 64, offset: 320)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1687, file: !53, line: 68, baseType: !1696, size: 128, offset: 384)
!1696 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1697, line: 40, baseType: !1698)
!1697 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1697, line: 36, size: 128, elements: !1699)
!1699 = !{!1700, !1701}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1698, file: !1697, line: 37, baseType: !423)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1698, file: !1697, line: 38, baseType: !382, size: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1687, file: !53, line: 69, baseType: !553, size: 128, align: 64, offset: 512)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1687, file: !53, line: 70, baseType: !1704, size: 128, offset: 640)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1705, size: 128, elements: !1586)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1706)
!1706 = !{!1707, !1708}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1705, file: !53, line: 55, baseType: !378, size: 32)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1705, file: !53, line: 56, baseType: !1709, size: 64, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1439, file: !1083, line: 872, baseType: !1712, size: 512, offset: 6016)
!1712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !825, size: 512, elements: !1377)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1439, file: !1083, line: 873, baseType: !382, size: 128, offset: 6528)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1439, file: !1083, line: 874, baseType: !382, size: 128, offset: 6656)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1439, file: !1083, line: 876, baseType: !1716, size: 64, offset: 6784)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1718, line: 26, size: 192, elements: !1719)
!1718 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1719 = !{!1720, !1721}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1717, file: !1718, line: 27, baseType: !7, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1717, file: !1718, line: 28, baseType: !1722, size: 128, offset: 64)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1723, line: 43, size: 128, elements: !1724)
!1723 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1724 = !{!1725, !1726}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1722, file: !1723, line: 44, baseType: !962)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1722, file: !1723, line: 45, baseType: !382, size: 128)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1439, file: !1083, line: 879, baseType: !891, size: 64, offset: 6848)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1439, file: !1083, line: 882, baseType: !891, size: 64, offset: 6912)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1439, file: !1083, line: 884, baseType: !609, size: 64, offset: 6976)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1439, file: !1083, line: 885, baseType: !609, size: 64, offset: 7040)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1439, file: !1083, line: 890, baseType: !609, size: 64, offset: 7104)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1439, file: !1083, line: 891, baseType: !1733, size: 128, offset: 7168)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1083, line: 242, size: 128, elements: !1734)
!1734 = !{!1735, !1736, !1737}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1733, file: !1083, line: 244, baseType: !609, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1733, file: !1083, line: 245, baseType: !609, size: 64, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1733, file: !1083, line: 246, baseType: !962, offset: 128)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1439, file: !1083, line: 900, baseType: !350, size: 64, offset: 7296)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1439, file: !1083, line: 901, baseType: !350, size: 64, offset: 7360)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1439, file: !1083, line: 904, baseType: !609, size: 64, offset: 7424)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1439, file: !1083, line: 907, baseType: !609, size: 64, offset: 7488)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1439, file: !1083, line: 910, baseType: !350, size: 64, offset: 7552)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1439, file: !1083, line: 911, baseType: !350, size: 64, offset: 7616)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1439, file: !1083, line: 914, baseType: !1745, size: 640, offset: 7680)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1746, line: 123, size: 640, elements: !1747)
!1746 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1747 = !{!1748, !1754, !1755}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1745, file: !1746, line: 124, baseType: !1749, size: 576)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1750, size: 576, elements: !465)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1746, line: 108, size: 192, elements: !1751)
!1751 = !{!1752, !1753}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1750, file: !1746, line: 109, baseType: !609, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1750, file: !1746, line: 110, baseType: !1558, size: 128, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1745, file: !1746, line: 125, baseType: !7, size: 32, offset: 576)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1745, file: !1746, line: 126, baseType: !7, size: 32, offset: 608)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1439, file: !1083, line: 917, baseType: !1757, size: 192, offset: 8320)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1746, line: 134, size: 192, elements: !1758)
!1758 = !{!1759, !1760}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1757, file: !1746, line: 135, baseType: !553, size: 128, align: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1757, file: !1746, line: 136, baseType: !7, size: 32, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1439, file: !1083, line: 923, baseType: !1762, size: 64, offset: 8512)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1765, line: 111, size: 1280, elements: !1766)
!1765 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1766 = !{!1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1786, !1787, !1788, !1789, !1790, !1791, !1898, !1899, !1900, !1901, !1927, !1930, !1940}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1764, file: !1765, line: 112, baseType: !374, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1764, file: !1765, line: 120, baseType: !623, size: 32, offset: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1764, file: !1765, line: 121, baseType: !631, size: 32, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1764, file: !1765, line: 122, baseType: !623, size: 32, offset: 96)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1764, file: !1765, line: 123, baseType: !631, size: 32, offset: 128)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1764, file: !1765, line: 124, baseType: !623, size: 32, offset: 160)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1764, file: !1765, line: 125, baseType: !631, size: 32, offset: 192)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1764, file: !1765, line: 126, baseType: !623, size: 32, offset: 224)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1764, file: !1765, line: 127, baseType: !631, size: 32, offset: 256)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1764, file: !1765, line: 128, baseType: !7, size: 32, offset: 288)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1764, file: !1765, line: 129, baseType: !1778, size: 64, offset: 320)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1779, line: 26, baseType: !1780)
!1779 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1779, line: 24, size: 64, elements: !1781)
!1781 = !{!1782}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1780, file: !1779, line: 25, baseType: !1783, size: 64)
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !605, size: 64, elements: !1784)
!1784 = !{!1785}
!1785 = !DISubrange(count: 2)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1764, file: !1765, line: 130, baseType: !1778, size: 64, offset: 384)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1764, file: !1765, line: 131, baseType: !1778, size: 64, offset: 448)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1764, file: !1765, line: 132, baseType: !1778, size: 64, offset: 512)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1764, file: !1765, line: 133, baseType: !1778, size: 64, offset: 576)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1764, file: !1765, line: 135, baseType: !615, size: 8, offset: 640)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1764, file: !1765, line: 137, baseType: !1792, size: 64, offset: 704)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1794, line: 189, size: 1664, elements: !1795)
!1794 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1795 = !{!1796, !1797, !1800, !1805, !1806, !1809, !1810, !1815, !1816, !1817, !1818, !1820, !1821, !1822, !1823, !1824, !1862, !1883}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1793, file: !1794, line: 190, baseType: !369, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1793, file: !1794, line: 191, baseType: !1798, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1794, line: 28, baseType: !1799)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !349, line: 98, baseType: !1659)
!1800 = !DIDerivedType(tag: DW_TAG_member, scope: !1793, file: !1794, line: 192, baseType: !1801, size: 192, offset: 64)
!1801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1793, file: !1794, line: 192, size: 192, elements: !1802)
!1802 = !{!1803, !1804}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1801, file: !1794, line: 193, baseType: !382, size: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1801, file: !1794, line: 194, baseType: !942, size: 192, align: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1793, file: !1794, line: 199, baseType: !949, size: 256, offset: 256)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1793, file: !1794, line: 200, baseType: !1807, size: 64, offset: 512)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1794, line: 200, flags: DIFlagFwdDecl)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1793, file: !1794, line: 201, baseType: !351, size: 64, offset: 576)
!1810 = !DIDerivedType(tag: DW_TAG_member, scope: !1793, file: !1794, line: 202, baseType: !1811, size: 64, offset: 640)
!1811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1793, file: !1794, line: 202, size: 64, elements: !1812)
!1812 = !{!1813, !1814}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1811, file: !1794, line: 203, baseType: !725, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1811, file: !1794, line: 204, baseType: !725, size: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1793, file: !1794, line: 206, baseType: !725, size: 64, offset: 704)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1793, file: !1794, line: 207, baseType: !623, size: 32, offset: 768)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1793, file: !1794, line: 208, baseType: !631, size: 32, offset: 800)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1793, file: !1794, line: 209, baseType: !1819, size: 32, offset: 832)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1794, line: 31, baseType: !745)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1793, file: !1794, line: 210, baseType: !505, size: 16, offset: 864)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1793, file: !1794, line: 211, baseType: !505, size: 16, offset: 880)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1793, file: !1794, line: 215, baseType: !1427, size: 16, offset: 896)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1793, file: !1794, line: 222, baseType: !350, size: 64, offset: 960)
!1824 = !DIDerivedType(tag: DW_TAG_member, scope: !1793, file: !1794, line: 239, baseType: !1825, size: 320, offset: 1024)
!1825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1793, file: !1794, line: 239, size: 320, elements: !1826)
!1826 = !{!1827, !1854}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1825, file: !1794, line: 240, baseType: !1828, size: 320)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1794, line: 108, size: 320, elements: !1829)
!1829 = !{!1830, !1831, !1843, !1846, !1853}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1828, file: !1794, line: 110, baseType: !350, size: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, scope: !1828, file: !1794, line: 111, baseType: !1832, size: 64, offset: 64)
!1832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1828, file: !1794, line: 111, size: 64, elements: !1833)
!1833 = !{!1834, !1842}
!1834 = !DIDerivedType(tag: DW_TAG_member, scope: !1832, file: !1794, line: 112, baseType: !1835, size: 64)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1832, file: !1794, line: 112, size: 64, elements: !1836)
!1836 = !{!1837, !1838}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1835, file: !1794, line: 114, baseType: !1041, size: 16)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1835, file: !1794, line: 115, baseType: !1839, size: 48, offset: 16)
!1839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 48, elements: !1840)
!1840 = !{!1841}
!1841 = !DISubrange(count: 6)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1832, file: !1794, line: 121, baseType: !350, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1828, file: !1794, line: 123, baseType: !1844, size: 64, offset: 128)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1794, line: 96, flags: DIFlagFwdDecl)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1828, file: !1794, line: 124, baseType: !1847, size: 64, offset: 192)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1794, line: 102, size: 192, elements: !1849)
!1849 = !{!1850, !1851, !1852}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1848, file: !1794, line: 103, baseType: !553, size: 128, align: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1848, file: !1794, line: 104, baseType: !369, size: 32, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1848, file: !1794, line: 105, baseType: !396, size: 8, offset: 160)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1828, file: !1794, line: 125, baseType: !412, size: 64, offset: 256)
!1854 = !DIDerivedType(tag: DW_TAG_member, scope: !1825, file: !1794, line: 241, baseType: !1855, size: 320)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1825, file: !1794, line: 241, size: 320, elements: !1856)
!1856 = !{!1857, !1858, !1859, !1860, !1861}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1855, file: !1794, line: 242, baseType: !350, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1855, file: !1794, line: 243, baseType: !350, size: 64, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1855, file: !1794, line: 244, baseType: !1844, size: 64, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1855, file: !1794, line: 245, baseType: !1847, size: 64, offset: 192)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1855, file: !1794, line: 246, baseType: !464, size: 64, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_member, scope: !1793, file: !1794, line: 254, baseType: !1863, size: 256, offset: 1344)
!1863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1793, file: !1794, line: 254, size: 256, elements: !1864)
!1864 = !{!1865, !1871}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1863, file: !1794, line: 255, baseType: !1866, size: 256)
!1866 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1794, line: 128, size: 256, elements: !1867)
!1867 = !{!1868, !1869}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1866, file: !1794, line: 129, baseType: !351, size: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1866, file: !1794, line: 130, baseType: !1870, size: 256)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 256, elements: !1377)
!1871 = !DIDerivedType(tag: DW_TAG_member, scope: !1863, file: !1794, line: 256, baseType: !1872, size: 256)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1863, file: !1794, line: 256, size: 256, elements: !1873)
!1873 = !{!1874, !1875}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1872, file: !1794, line: 258, baseType: !382, size: 128)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1872, file: !1794, line: 259, baseType: !1876, size: 128, offset: 128)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1877, line: 22, size: 128, elements: !1878)
!1877 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1878 = !{!1879, !1882}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1876, file: !1877, line: 23, baseType: !1880, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1877, line: 23, flags: DIFlagFwdDecl)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1876, file: !1877, line: 24, baseType: !350, size: 64, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1793, file: !1794, line: 274, baseType: !1884, size: 64, offset: 1600)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1794, line: 170, size: 192, elements: !1886)
!1886 = !{!1887, !1896, !1897}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1885, file: !1794, line: 171, baseType: !1888, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1794, line: 165, baseType: !1889)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{!378, !1792, !1892, !1894, !1792}
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1866)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1885, file: !1794, line: 172, baseType: !1792, size: 64, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1885, file: !1794, line: 173, baseType: !1844, size: 64, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1764, file: !1765, line: 138, baseType: !1792, size: 64, offset: 768)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1764, file: !1765, line: 139, baseType: !1792, size: 64, offset: 832)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1764, file: !1765, line: 140, baseType: !1792, size: 64, offset: 896)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1764, file: !1765, line: 145, baseType: !1902, size: 64, offset: 960)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1904, line: 13, size: 896, elements: !1905)
!1904 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1905 = !{!1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1903, file: !1904, line: 14, baseType: !369, size: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1903, file: !1904, line: 15, baseType: !374, size: 32, offset: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1903, file: !1904, line: 16, baseType: !374, size: 32, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1903, file: !1904, line: 21, baseType: !953, size: 64, offset: 128)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1903, file: !1904, line: 27, baseType: !350, size: 64, offset: 192)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1903, file: !1904, line: 28, baseType: !350, size: 64, offset: 256)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1903, file: !1904, line: 29, baseType: !953, size: 64, offset: 320)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1903, file: !1904, line: 32, baseType: !825, size: 128, offset: 384)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1903, file: !1904, line: 33, baseType: !623, size: 32, offset: 512)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1903, file: !1904, line: 37, baseType: !953, size: 64, offset: 576)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1903, file: !1904, line: 44, baseType: !1917, size: 256, offset: 640)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1918, line: 15, size: 256, elements: !1919)
!1918 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1917, file: !1918, line: 16, baseType: !962)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1917, file: !1918, line: 18, baseType: !378, size: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1917, file: !1918, line: 19, baseType: !378, size: 32, offset: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1917, file: !1918, line: 20, baseType: !378, size: 32, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1917, file: !1918, line: 21, baseType: !378, size: 32, offset: 96)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1917, file: !1918, line: 22, baseType: !350, size: 64, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1917, file: !1918, line: 23, baseType: !350, size: 64, offset: 192)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1764, file: !1765, line: 146, baseType: !1928, size: 64, offset: 1024)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !624, line: 18, flags: DIFlagFwdDecl)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1764, file: !1765, line: 147, baseType: !1931, size: 64, offset: 1088)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1765, line: 25, size: 64, elements: !1933)
!1933 = !{!1934, !1935, !1936}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1932, file: !1765, line: 26, baseType: !374, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1932, file: !1765, line: 27, baseType: !378, size: 32, offset: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1932, file: !1765, line: 28, baseType: !1937, offset: 64)
!1937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, elements: !1938)
!1938 = !{!1939}
!1939 = !DISubrange(count: 0)
!1940 = !DIDerivedType(tag: DW_TAG_member, scope: !1764, file: !1765, line: 149, baseType: !1941, size: 128, offset: 1152)
!1941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1764, file: !1765, line: 149, size: 128, elements: !1942)
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1941, file: !1765, line: 150, baseType: !378, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1941, file: !1765, line: 151, baseType: !553, size: 128, align: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1439, file: !1083, line: 926, baseType: !1762, size: 64, offset: 8576)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1439, file: !1083, line: 929, baseType: !1762, size: 64, offset: 8640)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1439, file: !1083, line: 933, baseType: !1792, size: 64, offset: 8704)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1439, file: !1083, line: 943, baseType: !1949, size: 128, offset: 8768)
!1949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 128, elements: !1950)
!1950 = !{!1951}
!1951 = !DISubrange(count: 16)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1439, file: !1083, line: 945, baseType: !1953, size: 64, offset: 8896)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1083, line: 49, flags: DIFlagFwdDecl)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1439, file: !1083, line: 956, baseType: !1956, size: 64, offset: 8960)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1083, line: 45, flags: DIFlagFwdDecl)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1439, file: !1083, line: 959, baseType: !1959, size: 64, offset: 9024)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1083, line: 959, flags: DIFlagFwdDecl)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1439, file: !1083, line: 962, baseType: !1962, size: 64, offset: 9088)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1083, line: 66, flags: DIFlagFwdDecl)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1439, file: !1083, line: 966, baseType: !1965, size: 64, offset: 9152)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1966 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1083, line: 50, flags: DIFlagFwdDecl)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1439, file: !1083, line: 969, baseType: !1968, size: 64, offset: 9216)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1970, line: 82, size: 7296, elements: !1971)
!1970 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1971 = !{!1972, !1973, !1974, !1975, !1976, !1977, !1978, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2007, !2016, !2017, !2019, !2020, !2021, !2024, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2054, !2055, !2062, !2063, !2064, !2065, !2066, !2067}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1969, file: !1970, line: 83, baseType: !369, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1969, file: !1970, line: 84, baseType: !374, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1969, file: !1970, line: 85, baseType: !378, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1969, file: !1970, line: 86, baseType: !382, size: 128, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1969, file: !1970, line: 88, baseType: !1696, size: 128, offset: 256)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1969, file: !1970, line: 91, baseType: !1438, size: 64, offset: 384)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1969, file: !1970, line: 94, baseType: !1979, size: 192, offset: 448)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1980, line: 30, size: 192, elements: !1981)
!1980 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1981 = !{!1982, !1983}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1979, file: !1980, line: 31, baseType: !382, size: 128)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1979, file: !1980, line: 32, baseType: !1984, size: 64, offset: 128)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1985, line: 25, baseType: !1986)
!1985 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1985, line: 23, size: 64, elements: !1987)
!1987 = !{!1988}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1986, file: !1985, line: 24, baseType: !1585, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1969, file: !1970, line: 97, baseType: !821, size: 64, offset: 640)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1969, file: !1970, line: 100, baseType: !378, size: 32, offset: 704)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1969, file: !1970, line: 106, baseType: !378, size: 32, offset: 736)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1969, file: !1970, line: 107, baseType: !1438, size: 64, offset: 768)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1969, file: !1970, line: 110, baseType: !378, size: 32, offset: 832)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1969, file: !1970, line: 111, baseType: !7, size: 32, offset: 864)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1969, file: !1970, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1969, file: !1970, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1969, file: !1970, line: 128, baseType: !378, size: 32, offset: 928)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1969, file: !1970, line: 129, baseType: !382, size: 128, offset: 960)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1969, file: !1970, line: 132, baseType: !1507, size: 512, offset: 1088)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1969, file: !1970, line: 133, baseType: !1515, size: 64, offset: 1600)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1969, file: !1970, line: 140, baseType: !2002, size: 256, offset: 1664)
!2002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2003, size: 256, elements: !1784)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1970, line: 38, size: 128, elements: !2004)
!2004 = !{!2005, !2006}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2003, file: !1970, line: 39, baseType: !609, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2003, file: !1970, line: 40, baseType: !609, size: 64, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1969, file: !1970, line: 146, baseType: !2008, size: 192, offset: 1920)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1970, line: 66, size: 192, elements: !2009)
!2009 = !{!2010}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2008, file: !1970, line: 67, baseType: !2011, size: 192)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1970, line: 47, size: 192, elements: !2012)
!2012 = !{!2013, !2014, !2015}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2011, file: !1970, line: 48, baseType: !955, size: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2011, file: !1970, line: 49, baseType: !955, size: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2011, file: !1970, line: 50, baseType: !955, size: 64, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1969, file: !1970, line: 150, baseType: !1745, size: 640, offset: 2112)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1969, file: !1970, line: 153, baseType: !2018, size: 256, offset: 2752)
!2018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1686, size: 256, elements: !1377)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1969, file: !1970, line: 159, baseType: !1686, size: 64, offset: 3008)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1969, file: !1970, line: 162, baseType: !378, size: 32, offset: 3072)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1969, file: !1970, line: 164, baseType: !2022, size: 64, offset: 3136)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1970, line: 164, flags: DIFlagFwdDecl)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1969, file: !1970, line: 175, baseType: !2025, size: 32, offset: 3200)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !576, line: 805, baseType: !2026)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !576, line: 798, size: 32, elements: !2027)
!2027 = !{!2028, !2029}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2026, file: !576, line: 803, baseType: !575, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2026, file: !576, line: 804, baseType: !423, offset: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1969, file: !1970, line: 176, baseType: !609, size: 64, offset: 3264)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1969, file: !1970, line: 176, baseType: !609, size: 64, offset: 3328)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1969, file: !1970, line: 176, baseType: !609, size: 64, offset: 3392)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1969, file: !1970, line: 176, baseType: !609, size: 64, offset: 3456)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1969, file: !1970, line: 177, baseType: !609, size: 64, offset: 3520)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1969, file: !1970, line: 178, baseType: !609, size: 64, offset: 3584)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1969, file: !1970, line: 179, baseType: !1733, size: 128, offset: 3648)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1969, file: !1970, line: 180, baseType: !350, size: 64, offset: 3776)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1969, file: !1970, line: 180, baseType: !350, size: 64, offset: 3840)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1969, file: !1970, line: 180, baseType: !350, size: 64, offset: 3904)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1969, file: !1970, line: 180, baseType: !350, size: 64, offset: 3968)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1969, file: !1970, line: 181, baseType: !350, size: 64, offset: 4032)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1969, file: !1970, line: 181, baseType: !350, size: 64, offset: 4096)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1969, file: !1970, line: 181, baseType: !350, size: 64, offset: 4160)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1969, file: !1970, line: 181, baseType: !350, size: 64, offset: 4224)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1969, file: !1970, line: 182, baseType: !350, size: 64, offset: 4288)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1969, file: !1970, line: 182, baseType: !350, size: 64, offset: 4352)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1969, file: !1970, line: 182, baseType: !350, size: 64, offset: 4416)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1969, file: !1970, line: 182, baseType: !350, size: 64, offset: 4480)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1969, file: !1970, line: 183, baseType: !350, size: 64, offset: 4544)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1969, file: !1970, line: 183, baseType: !350, size: 64, offset: 4608)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1969, file: !1970, line: 184, baseType: !2052, offset: 4672)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2053, line: 12, elements: !437)
!2053 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1969, file: !1970, line: 192, baseType: !611, size: 64, offset: 4672)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1969, file: !1970, line: 203, baseType: !2056, size: 2048, offset: 4736)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2057, size: 2048, elements: !1950)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2058, line: 43, size: 128, elements: !2059)
!2058 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2059 = !{!2060, !2061}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2057, file: !2058, line: 44, baseType: !512, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2057, file: !2058, line: 45, baseType: !512, size: 64, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1969, file: !1970, line: 220, baseType: !396, size: 8, offset: 6784)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1969, file: !1970, line: 221, baseType: !1427, size: 16, offset: 6800)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1969, file: !1970, line: 222, baseType: !1427, size: 16, offset: 6816)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1969, file: !1970, line: 224, baseType: !1196, size: 64, offset: 6848)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1969, file: !1970, line: 227, baseType: !1395, size: 192, offset: 6912)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1969, file: !1970, line: 233, baseType: !1395, size: 192, offset: 7104)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1439, file: !1083, line: 970, baseType: !2069, size: 64, offset: 9280)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1970, line: 20, size: 16576, elements: !2071)
!2071 = !{!2072, !2073, !2074, !2075}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2070, file: !1970, line: 21, baseType: !423)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2070, file: !1970, line: 22, baseType: !369, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2070, file: !1970, line: 23, baseType: !1696, size: 128, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2070, file: !1970, line: 24, baseType: !2076, size: 16384, offset: 192)
!2076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2077, size: 16384, elements: !469)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1980, line: 49, size: 256, elements: !2078)
!2078 = !{!2079}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2077, file: !1980, line: 50, baseType: !2080, size: 256)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1980, line: 35, size: 256, elements: !2081)
!2081 = !{!2082, !2089, !2090, !2096}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2080, file: !1980, line: 37, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2084, line: 19, baseType: !2085)
!2084 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2084, line: 18, baseType: !2087)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{null, !378}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2080, file: !1980, line: 38, baseType: !350, size: 64, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2080, file: !1980, line: 44, baseType: !2091, size: 64, offset: 128)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2084, line: 22, baseType: !2092)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2084, line: 21, baseType: !2094)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{null}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2080, file: !1980, line: 46, baseType: !1984, size: 64, offset: 192)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1439, file: !1083, line: 971, baseType: !1984, size: 64, offset: 9344)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1439, file: !1083, line: 972, baseType: !1984, size: 64, offset: 9408)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1439, file: !1083, line: 974, baseType: !1984, size: 64, offset: 9472)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1439, file: !1083, line: 975, baseType: !1979, size: 192, offset: 9536)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1439, file: !1083, line: 976, baseType: !350, size: 64, offset: 9728)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1439, file: !1083, line: 977, baseType: !510, size: 64, offset: 9792)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1439, file: !1083, line: 978, baseType: !7, size: 32, offset: 9856)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1439, file: !1083, line: 980, baseType: !556, size: 64, offset: 9920)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1439, file: !1083, line: 989, baseType: !2106, size: 128, offset: 9984)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2107, line: 35, size: 128, elements: !2108)
!2107 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2108 = !{!2109, !2110, !2111}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2106, file: !2107, line: 36, baseType: !378, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2106, file: !2107, line: 37, baseType: !374, size: 32, offset: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2106, file: !2107, line: 38, baseType: !2112, size: 64, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2107, line: 23, flags: DIFlagFwdDecl)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1439, file: !1083, line: 992, baseType: !609, size: 64, offset: 10112)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1439, file: !1083, line: 993, baseType: !609, size: 64, offset: 10176)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1439, file: !1083, line: 996, baseType: !423, offset: 10240)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1439, file: !1083, line: 999, baseType: !962, offset: 10240)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1439, file: !1083, line: 1001, baseType: !2119, size: 64, offset: 10240)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1083, line: 636, size: 64, elements: !2120)
!2120 = !{!2121}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2119, file: !1083, line: 637, baseType: !2122, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1439, file: !1083, line: 1005, baseType: !934, size: 128, offset: 10304)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1439, file: !1083, line: 1007, baseType: !1438, size: 64, offset: 10432)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1439, file: !1083, line: 1009, baseType: !2126, size: 64, offset: 10496)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1083, line: 1009, flags: DIFlagFwdDecl)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1439, file: !1083, line: 1043, baseType: !351, size: 64, offset: 10560)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1439, file: !1083, line: 1046, baseType: !2130, size: 64, offset: 10624)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1083, line: 41, flags: DIFlagFwdDecl)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1439, file: !1083, line: 1050, baseType: !2133, size: 64, offset: 10688)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1083, line: 42, flags: DIFlagFwdDecl)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1439, file: !1083, line: 1054, baseType: !2136, size: 64, offset: 10752)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1083, line: 55, flags: DIFlagFwdDecl)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1439, file: !1083, line: 1056, baseType: !2139, size: 64, offset: 10816)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1083, line: 40, flags: DIFlagFwdDecl)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1439, file: !1083, line: 1058, baseType: !2142, size: 64, offset: 10880)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2144, line: 99, size: 704, elements: !2145)
!2144 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2145 = !{!2146, !2147, !2148, !2149, !2150, !2151, !2152, !2171, !2172}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2143, file: !2144, line: 100, baseType: !953, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2143, file: !2144, line: 101, baseType: !374, size: 32, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2143, file: !2144, line: 102, baseType: !374, size: 32, offset: 96)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2143, file: !2144, line: 105, baseType: !423, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2143, file: !2144, line: 107, baseType: !505, size: 16, offset: 128)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2143, file: !2144, line: 109, baseType: !925, size: 128, offset: 192)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2143, file: !2144, line: 110, baseType: !2153, size: 64, offset: 320)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2144, line: 73, size: 448, elements: !2155)
!2155 = !{!2156, !2159, !2160, !2165, !2170}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2154, file: !2144, line: 74, baseType: !2157, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2144, line: 74, flags: DIFlagFwdDecl)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2154, file: !2144, line: 75, baseType: !2142, size: 64, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !2144, line: 83, baseType: !2161, size: 128, offset: 128)
!2161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !2144, line: 83, size: 128, elements: !2162)
!2162 = !{!2163, !2164}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2161, file: !2144, line: 84, baseType: !382, size: 128)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2161, file: !2144, line: 85, baseType: !1157, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !2144, line: 87, baseType: !2166, size: 128, offset: 256)
!2166 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !2144, line: 87, size: 128, elements: !2167)
!2167 = !{!2168, !2169}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2166, file: !2144, line: 88, baseType: !825, size: 128)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2166, file: !2144, line: 89, baseType: !553, size: 128, align: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2154, file: !2144, line: 92, baseType: !7, size: 32, offset: 384)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2143, file: !2144, line: 111, baseType: !821, size: 64, offset: 384)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2143, file: !2144, line: 113, baseType: !2173, size: 256, offset: 448)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2174, line: 102, size: 256, elements: !2175)
!2174 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2175 = !{!2176, !2177, !2178}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2173, file: !2174, line: 103, baseType: !953, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2173, file: !2174, line: 104, baseType: !382, size: 128, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2173, file: !2174, line: 105, baseType: !2179, size: 64, offset: 192)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2174, line: 21, baseType: !2180)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = !DISubroutineType(types: !2182)
!2182 = !{null, !2183}
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1439, file: !1083, line: 1061, baseType: !2185, size: 64, offset: 10944)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1083, line: 43, flags: DIFlagFwdDecl)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1439, file: !1083, line: 1064, baseType: !350, size: 64, offset: 11008)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1439, file: !1083, line: 1065, baseType: !2189, size: 64, offset: 11072)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1980, line: 14, baseType: !2191)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1980, line: 12, size: 384, elements: !2192)
!2192 = !{!2193}
!2193 = !DIDerivedType(tag: DW_TAG_member, scope: !2191, file: !1980, line: 13, baseType: !2194, size: 384)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2191, file: !1980, line: 13, size: 384, elements: !2195)
!2195 = !{!2196, !2197, !2198, !2199}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2194, file: !1980, line: 13, baseType: !378, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2194, file: !1980, line: 13, baseType: !378, size: 32, offset: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2194, file: !1980, line: 13, baseType: !378, size: 32, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2194, file: !1980, line: 13, baseType: !2200, size: 256, offset: 128)
!2200 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2201, line: 32, size: 256, elements: !2202)
!2201 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2202 = !{!2203, !2208, !2221, !2227, !2236, !2256, !2261}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2200, file: !2201, line: 37, baseType: !2204, size: 64)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2200, file: !2201, line: 34, size: 64, elements: !2205)
!2205 = !{!2206, !2207}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2204, file: !2201, line: 35, baseType: !1675, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2204, file: !2201, line: 36, baseType: !629, size: 32, offset: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2200, file: !2201, line: 45, baseType: !2209, size: 192)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2200, file: !2201, line: 40, size: 192, elements: !2210)
!2210 = !{!2211, !2213, !2214, !2220}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2209, file: !2201, line: 41, baseType: !2212, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !497, line: 95, baseType: !378)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2209, file: !2201, line: 42, baseType: !378, size: 32, offset: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2209, file: !2201, line: 43, baseType: !2215, size: 64, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2201, line: 11, baseType: !2216)
!2216 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2201, line: 8, size: 64, elements: !2217)
!2217 = !{!2218, !2219}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2216, file: !2201, line: 9, baseType: !378, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2216, file: !2201, line: 10, baseType: !351, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2209, file: !2201, line: 44, baseType: !378, size: 32, offset: 128)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2200, file: !2201, line: 52, baseType: !2222, size: 128)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2200, file: !2201, line: 48, size: 128, elements: !2223)
!2223 = !{!2224, !2225, !2226}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2222, file: !2201, line: 49, baseType: !1675, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2222, file: !2201, line: 50, baseType: !629, size: 32, offset: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2222, file: !2201, line: 51, baseType: !2215, size: 64, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2200, file: !2201, line: 61, baseType: !2228, size: 256)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2200, file: !2201, line: 55, size: 256, elements: !2229)
!2229 = !{!2230, !2231, !2232, !2233, !2235}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2228, file: !2201, line: 56, baseType: !1675, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2228, file: !2201, line: 57, baseType: !629, size: 32, offset: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2228, file: !2201, line: 58, baseType: !378, size: 32, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2228, file: !2201, line: 59, baseType: !2234, size: 64, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !497, line: 94, baseType: !498)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2228, file: !2201, line: 60, baseType: !2234, size: 64, offset: 192)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2200, file: !2201, line: 95, baseType: !2237, size: 256)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2200, file: !2201, line: 64, size: 256, elements: !2238)
!2238 = !{!2239, !2240}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2237, file: !2201, line: 65, baseType: !351, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, scope: !2237, file: !2201, line: 77, baseType: !2241, size: 192, offset: 64)
!2241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2237, file: !2201, line: 77, size: 192, elements: !2242)
!2242 = !{!2243, !2244, !2251}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2241, file: !2201, line: 82, baseType: !1427, size: 16)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2241, file: !2201, line: 88, baseType: !2245, size: 192)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2241, file: !2201, line: 84, size: 192, elements: !2246)
!2246 = !{!2247, !2249, !2250}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2245, file: !2201, line: 85, baseType: !2248, size: 64)
!2248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 64, elements: !1545)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2245, file: !2201, line: 86, baseType: !351, size: 64, offset: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2245, file: !2201, line: 87, baseType: !351, size: 64, offset: 128)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2241, file: !2201, line: 93, baseType: !2252, size: 96)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2241, file: !2201, line: 90, size: 96, elements: !2253)
!2253 = !{!2254, !2255}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2252, file: !2201, line: 91, baseType: !2248, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2252, file: !2201, line: 92, baseType: !605, size: 32, offset: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2200, file: !2201, line: 101, baseType: !2257, size: 128)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2200, file: !2201, line: 98, size: 128, elements: !2258)
!2258 = !{!2259, !2260}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2257, file: !2201, line: 99, baseType: !352, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2257, file: !2201, line: 100, baseType: !378, size: 32, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2200, file: !2201, line: 108, baseType: !2262, size: 128)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2200, file: !2201, line: 104, size: 128, elements: !2263)
!2263 = !{!2264, !2265, !2266}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2262, file: !2201, line: 105, baseType: !351, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2262, file: !2201, line: 106, baseType: !378, size: 32, offset: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2262, file: !2201, line: 107, baseType: !7, size: 32, offset: 96)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1439, file: !1083, line: 1067, baseType: !2052, offset: 11136)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1439, file: !1083, line: 1099, baseType: !2269, size: 64, offset: 11136)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1083, line: 56, flags: DIFlagFwdDecl)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1439, file: !1083, line: 1103, baseType: !382, size: 128, offset: 11200)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1439, file: !1083, line: 1104, baseType: !2273, size: 64, offset: 11328)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1083, line: 46, flags: DIFlagFwdDecl)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1439, file: !1083, line: 1105, baseType: !1395, size: 192, offset: 11392)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1439, file: !1083, line: 1106, baseType: !7, size: 32, offset: 11584)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1439, file: !1083, line: 1109, baseType: !2278, size: 128, offset: 11648)
!2278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2279, size: 128, elements: !1784)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1083, line: 51, flags: DIFlagFwdDecl)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1439, file: !1083, line: 1110, baseType: !1395, size: 192, offset: 11776)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1439, file: !1083, line: 1111, baseType: !382, size: 128, offset: 11968)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1439, file: !1083, line: 1173, baseType: !2284, size: 64, offset: 12096)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2286, line: 62, size: 256, align: 256, elements: !2287)
!2286 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2287 = !{!2288, !2289, !2290, !2295}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2285, file: !2286, line: 75, baseType: !605, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2285, file: !2286, line: 90, baseType: !605, size: 32, offset: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2285, file: !2286, line: 124, baseType: !2291, size: 64, offset: 64)
!2291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2285, file: !2286, line: 109, size: 64, elements: !2292)
!2292 = !{!2293, !2294}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2291, file: !2286, line: 110, baseType: !610, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2291, file: !2286, line: 112, baseType: !610, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2285, file: !2286, line: 144, baseType: !605, size: 32, offset: 128)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1439, file: !1083, line: 1174, baseType: !603, size: 32, offset: 12160)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1439, file: !1083, line: 1179, baseType: !350, size: 64, offset: 12224)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1439, file: !1083, line: 1182, baseType: !2299, size: 128, offset: 12288)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1373, line: 76, size: 128, elements: !2300)
!2300 = !{!2301, !2306, !2307}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2299, file: !1373, line: 85, baseType: !2302, size: 64)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2303, line: 7, size: 64, elements: !2304)
!2303 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2304 = !{!2305}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2302, file: !2303, line: 12, baseType: !1582, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2299, file: !1373, line: 88, baseType: !396, size: 8, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2299, file: !1373, line: 95, baseType: !396, size: 8, offset: 72)
!2308 = !DIDerivedType(tag: DW_TAG_member, scope: !1439, file: !1083, line: 1184, baseType: !2309, size: 128, offset: 12416)
!2309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1439, file: !1083, line: 1184, size: 128, elements: !2310)
!2310 = !{!2311, !2312}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2309, file: !1083, line: 1185, baseType: !369, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2309, file: !1083, line: 1186, baseType: !553, size: 128, align: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1439, file: !1083, line: 1190, baseType: !1081, size: 64, offset: 12544)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1439, file: !1083, line: 1192, baseType: !2315, size: 128, offset: 12608)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1373, line: 64, size: 128, elements: !2316)
!2316 = !{!2317, !2318, !2319}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2315, file: !1373, line: 65, baseType: !907, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2315, file: !1373, line: 67, baseType: !605, size: 32, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2315, file: !1373, line: 68, baseType: !605, size: 32, offset: 96)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1439, file: !1083, line: 1206, baseType: !378, size: 32, offset: 12736)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1439, file: !1083, line: 1207, baseType: !378, size: 32, offset: 12768)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1439, file: !1083, line: 1209, baseType: !350, size: 64, offset: 12800)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1439, file: !1083, line: 1219, baseType: !609, size: 64, offset: 12864)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1439, file: !1083, line: 1220, baseType: !609, size: 64, offset: 12928)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1439, file: !1083, line: 1317, baseType: !378, size: 32, offset: 12992)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1439, file: !1083, line: 1319, baseType: !1438, size: 64, offset: 13056)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1439, file: !1083, line: 1322, baseType: !2328, size: 64, offset: 13120)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2330, line: 56, size: 512, elements: !2331)
!2330 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2331 = !{!2332, !2333, !2334, !2335, !2336, !2337, !2338, !2340}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2329, file: !2330, line: 57, baseType: !2328, size: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2329, file: !2330, line: 58, baseType: !351, size: 64, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2329, file: !2330, line: 59, baseType: !350, size: 64, offset: 128)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2329, file: !2330, line: 60, baseType: !350, size: 64, offset: 192)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2329, file: !2330, line: 61, baseType: !1002, size: 64, offset: 256)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2329, file: !2330, line: 62, baseType: !7, size: 32, offset: 320)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2329, file: !2330, line: 63, baseType: !2339, size: 64, offset: 384)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !349, line: 153, baseType: !609)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2329, file: !2330, line: 64, baseType: !2341, size: 64, offset: 448)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1439, file: !1083, line: 1326, baseType: !369, size: 32, offset: 13184)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1439, file: !1083, line: 1342, baseType: !351, size: 64, offset: 13248)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1439, file: !1083, line: 1343, baseType: !610, size: 64, offset: 13312)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1439, file: !1083, line: 1344, baseType: !609, size: 64, offset: 13376)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1439, file: !1083, line: 1345, baseType: !610, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1439, file: !1083, line: 1346, baseType: !610, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1439, file: !1083, line: 1347, baseType: !610, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1439, file: !1083, line: 1348, baseType: !553, size: 128, align: 64, offset: 13504)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1439, file: !1083, line: 1358, baseType: !2352, size: 34816, offset: 13824)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2353, line: 485, size: 34816, elements: !2354)
!2353 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2354 = !{!2355, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2384, !2385, !2386, !2387, !2388, !2389, !2392, !2393, !2394}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2352, file: !2353, line: 487, baseType: !2356, size: 192)
!2356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2357, size: 192, elements: !465)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2358, line: 16, size: 64, elements: !2359)
!2358 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2359 = !{!2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2357, file: !2358, line: 17, baseType: !1041, size: 16)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2357, file: !2358, line: 18, baseType: !1041, size: 16, offset: 16)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2357, file: !2358, line: 19, baseType: !1041, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2357, file: !2358, line: 19, baseType: !1041, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2357, file: !2358, line: 19, baseType: !1041, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2357, file: !2358, line: 19, baseType: !1041, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2357, file: !2358, line: 19, baseType: !1041, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2357, file: !2358, line: 20, baseType: !1041, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2357, file: !2358, line: 20, baseType: !1041, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2357, file: !2358, line: 20, baseType: !1041, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2357, file: !2358, line: 20, baseType: !1041, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2357, file: !2358, line: 20, baseType: !1041, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2357, file: !2358, line: 20, baseType: !1041, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2352, file: !2353, line: 491, baseType: !350, size: 64, offset: 192)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2352, file: !2353, line: 495, baseType: !505, size: 16, offset: 256)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2352, file: !2353, line: 496, baseType: !505, size: 16, offset: 272)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2352, file: !2353, line: 497, baseType: !505, size: 16, offset: 288)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2352, file: !2353, line: 498, baseType: !505, size: 16, offset: 304)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2352, file: !2353, line: 502, baseType: !350, size: 64, offset: 320)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2352, file: !2353, line: 503, baseType: !350, size: 64, offset: 384)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2352, file: !2353, line: 514, baseType: !2381, size: 256, offset: 448)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2382, size: 256, elements: !1377)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2353, line: 483, flags: DIFlagFwdDecl)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2352, file: !2353, line: 516, baseType: !350, size: 64, offset: 704)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2352, file: !2353, line: 518, baseType: !350, size: 64, offset: 768)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2352, file: !2353, line: 520, baseType: !350, size: 64, offset: 832)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2352, file: !2353, line: 521, baseType: !350, size: 64, offset: 896)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2352, file: !2353, line: 522, baseType: !350, size: 64, offset: 960)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2352, file: !2353, line: 528, baseType: !2390, size: 64, offset: 1024)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 64)
!2391 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2353, line: 10, flags: DIFlagFwdDecl)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2352, file: !2353, line: 535, baseType: !350, size: 64, offset: 1088)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2352, file: !2353, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2352, file: !2353, line: 540, baseType: !2395, size: 33280, offset: 1536)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2396, line: 317, size: 33280, elements: !2397)
!2396 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2397 = !{!2398, !2399, !2400}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2395, file: !2396, line: 330, baseType: !7, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2395, file: !2396, line: 337, baseType: !350, size: 64, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2395, file: !2396, line: 348, baseType: !2401, size: 32768, offset: 512)
!2401 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2396, line: 304, size: 32768, elements: !2402)
!2402 = !{!2403, !2418, !2457, !2507, !2520}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2401, file: !2396, line: 305, baseType: !2404, size: 896)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2396, line: 12, size: 896, elements: !2405)
!2405 = !{!2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2417}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2404, file: !2396, line: 13, baseType: !603, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2404, file: !2396, line: 14, baseType: !603, size: 32, offset: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2404, file: !2396, line: 15, baseType: !603, size: 32, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2404, file: !2396, line: 16, baseType: !603, size: 32, offset: 96)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2404, file: !2396, line: 17, baseType: !603, size: 32, offset: 128)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2404, file: !2396, line: 18, baseType: !603, size: 32, offset: 160)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2404, file: !2396, line: 19, baseType: !603, size: 32, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2404, file: !2396, line: 22, baseType: !2414, size: 640, offset: 224)
!2414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !603, size: 640, elements: !2415)
!2415 = !{!2416}
!2416 = !DISubrange(count: 20)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2404, file: !2396, line: 25, baseType: !603, size: 32, offset: 864)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2401, file: !2396, line: 306, baseType: !2419, size: 4096, align: 128)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2396, line: 34, size: 4096, align: 128, elements: !2420)
!2420 = !{!2421, !2422, !2423, !2424, !2425, !2440, !2441, !2442, !2446, !2448, !2452}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2419, file: !2396, line: 35, baseType: !1041, size: 16)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2419, file: !2396, line: 36, baseType: !1041, size: 16, offset: 16)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2419, file: !2396, line: 37, baseType: !1041, size: 16, offset: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2419, file: !2396, line: 38, baseType: !1041, size: 16, offset: 48)
!2425 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2396, line: 39, baseType: !2426, size: 128, offset: 64)
!2426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2396, line: 39, size: 128, elements: !2427)
!2427 = !{!2428, !2433}
!2428 = !DIDerivedType(tag: DW_TAG_member, scope: !2426, file: !2396, line: 40, baseType: !2429, size: 128)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2426, file: !2396, line: 40, size: 128, elements: !2430)
!2430 = !{!2431, !2432}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2429, file: !2396, line: 41, baseType: !609, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2429, file: !2396, line: 42, baseType: !609, size: 64, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, scope: !2426, file: !2396, line: 44, baseType: !2434, size: 128)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2426, file: !2396, line: 44, size: 128, elements: !2435)
!2435 = !{!2436, !2437, !2438, !2439}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2434, file: !2396, line: 45, baseType: !603, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2434, file: !2396, line: 46, baseType: !603, size: 32, offset: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2434, file: !2396, line: 47, baseType: !603, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2434, file: !2396, line: 48, baseType: !603, size: 32, offset: 96)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2419, file: !2396, line: 51, baseType: !603, size: 32, offset: 192)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2419, file: !2396, line: 52, baseType: !603, size: 32, offset: 224)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2419, file: !2396, line: 55, baseType: !2443, size: 1024, offset: 256)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !603, size: 1024, elements: !2444)
!2444 = !{!2445}
!2445 = !DISubrange(count: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2419, file: !2396, line: 58, baseType: !2447, size: 2048, offset: 1280)
!2447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !603, size: 2048, elements: !469)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2419, file: !2396, line: 60, baseType: !2449, size: 384, offset: 3328)
!2449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !603, size: 384, elements: !2450)
!2450 = !{!2451}
!2451 = !DISubrange(count: 12)
!2452 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2396, line: 62, baseType: !2453, size: 384, offset: 3712)
!2453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2396, line: 62, size: 384, elements: !2454)
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2453, file: !2396, line: 63, baseType: !2449, size: 384)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2453, file: !2396, line: 64, baseType: !2449, size: 384)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2401, file: !2396, line: 307, baseType: !2458, size: 1088)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2396, line: 79, size: 1088, elements: !2459)
!2459 = !{!2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2506}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2458, file: !2396, line: 80, baseType: !603, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2458, file: !2396, line: 81, baseType: !603, size: 32, offset: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2458, file: !2396, line: 82, baseType: !603, size: 32, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2458, file: !2396, line: 83, baseType: !603, size: 32, offset: 96)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2458, file: !2396, line: 84, baseType: !603, size: 32, offset: 128)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2458, file: !2396, line: 85, baseType: !603, size: 32, offset: 160)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2458, file: !2396, line: 86, baseType: !603, size: 32, offset: 192)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2458, file: !2396, line: 88, baseType: !2414, size: 640, offset: 224)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2458, file: !2396, line: 89, baseType: !1567, size: 8, offset: 864)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2458, file: !2396, line: 90, baseType: !1567, size: 8, offset: 872)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2458, file: !2396, line: 91, baseType: !1567, size: 8, offset: 880)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2458, file: !2396, line: 92, baseType: !1567, size: 8, offset: 888)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2458, file: !2396, line: 93, baseType: !1567, size: 8, offset: 896)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2458, file: !2396, line: 94, baseType: !1567, size: 8, offset: 904)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2458, file: !2396, line: 95, baseType: !2475, size: 64, offset: 960)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2477, line: 11, size: 128, elements: !2478)
!2477 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2478 = !{!2479, !2480}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2476, file: !2477, line: 12, baseType: !352, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2476, file: !2477, line: 13, baseType: !2481, size: 64, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2483, line: 56, size: 1344, elements: !2484)
!2483 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2484 = !{!2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2482, file: !2483, line: 61, baseType: !350, size: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2482, file: !2483, line: 62, baseType: !350, size: 64, offset: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2482, file: !2483, line: 63, baseType: !350, size: 64, offset: 128)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2482, file: !2483, line: 64, baseType: !350, size: 64, offset: 192)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2482, file: !2483, line: 65, baseType: !350, size: 64, offset: 256)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2482, file: !2483, line: 66, baseType: !350, size: 64, offset: 320)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2482, file: !2483, line: 68, baseType: !350, size: 64, offset: 384)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2482, file: !2483, line: 69, baseType: !350, size: 64, offset: 448)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2482, file: !2483, line: 70, baseType: !350, size: 64, offset: 512)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2482, file: !2483, line: 71, baseType: !350, size: 64, offset: 576)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2482, file: !2483, line: 72, baseType: !350, size: 64, offset: 640)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2482, file: !2483, line: 73, baseType: !350, size: 64, offset: 704)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2482, file: !2483, line: 74, baseType: !350, size: 64, offset: 768)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2482, file: !2483, line: 75, baseType: !350, size: 64, offset: 832)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2482, file: !2483, line: 76, baseType: !350, size: 64, offset: 896)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2482, file: !2483, line: 81, baseType: !350, size: 64, offset: 960)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2482, file: !2483, line: 83, baseType: !350, size: 64, offset: 1024)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2482, file: !2483, line: 84, baseType: !350, size: 64, offset: 1088)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2482, file: !2483, line: 85, baseType: !350, size: 64, offset: 1152)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2482, file: !2483, line: 86, baseType: !350, size: 64, offset: 1216)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2482, file: !2483, line: 87, baseType: !350, size: 64, offset: 1280)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2458, file: !2396, line: 96, baseType: !603, size: 32, offset: 1024)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2401, file: !2396, line: 308, baseType: !2508, size: 4608, align: 512)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2396, line: 289, size: 4608, align: 512, elements: !2509)
!2509 = !{!2510, !2511, !2518}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2508, file: !2396, line: 290, baseType: !2419, size: 4096, align: 128)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2508, file: !2396, line: 291, baseType: !2512, size: 512, offset: 4096)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2396, line: 268, size: 512, elements: !2513)
!2513 = !{!2514, !2515, !2516}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2512, file: !2396, line: 269, baseType: !609, size: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2512, file: !2396, line: 270, baseType: !609, size: 64, offset: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2512, file: !2396, line: 271, baseType: !2517, size: 384, offset: 128)
!2517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !609, size: 384, elements: !1840)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2508, file: !2396, line: 292, baseType: !2519, offset: 4608)
!2519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1567, elements: !1938)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2401, file: !2396, line: 309, baseType: !2521, size: 32768)
!2521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1567, size: 32768, elements: !2522)
!2522 = !{!2523}
!2523 = !DISubrange(count: 4096)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1435, file: !909, line: 378, baseType: !2525, size: 64, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1431, file: !909, line: 384, baseType: !1717, size: 192, offset: 192)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1200, file: !909, line: 500, baseType: !423, offset: 6656)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1200, file: !909, line: 501, baseType: !2529, size: 64, offset: 6656)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2530 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !909, line: 387, flags: DIFlagFwdDecl)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1200, file: !909, line: 516, baseType: !1928, size: 64, offset: 6720)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1200, file: !909, line: 519, baseType: !540, size: 64, offset: 6784)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1200, file: !909, line: 521, baseType: !2534, size: 64, offset: 6848)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!2535 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !909, line: 521, flags: DIFlagFwdDecl)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1200, file: !909, line: 545, baseType: !374, size: 32, offset: 6912)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1200, file: !909, line: 548, baseType: !396, size: 8, offset: 6944)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1200, file: !909, line: 550, baseType: !2539, offset: 6952)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2540, line: 142, elements: !437)
!2540 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1200, file: !909, line: 554, baseType: !2173, size: 256, offset: 6976)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1200, file: !909, line: 557, baseType: !603, size: 32, offset: 7232)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1197, file: !909, line: 565, baseType: !2544, offset: 7296)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, elements: !2545)
!2545 = !{!2546}
!2546 = !DISubrange(count: -1)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1193, file: !909, line: 151, baseType: !374, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1186, file: !909, line: 156, baseType: !423, offset: 256)
!2549 = !DIDerivedType(tag: DW_TAG_member, scope: !913, file: !909, line: 159, baseType: !2550, size: 128)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !913, file: !909, line: 159, size: 128, elements: !2551)
!2551 = !{!2552, !2616}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2550, file: !909, line: 161, baseType: !2553, size: 64)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2555)
!2555 = !{!2556, !2566, !2587, !2588, !2589, !2590, !2591, !2603, !2604, !2605}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2554, file: !31, line: 111, baseType: !2557, size: 384)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2558)
!2558 = !{!2559, !2561, !2562, !2563, !2564, !2565}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2557, file: !31, line: 20, baseType: !2560, size: 64)
!2560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2557, file: !31, line: 21, baseType: !2560, size: 64, offset: 64)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2557, file: !31, line: 22, baseType: !2560, size: 64, offset: 128)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2557, file: !31, line: 23, baseType: !350, size: 64, offset: 192)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2557, file: !31, line: 24, baseType: !350, size: 64, offset: 256)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2557, file: !31, line: 25, baseType: !350, size: 64, offset: 320)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2554, file: !31, line: 112, baseType: !2567, size: 64, offset: 384)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2569, line: 105, size: 128, elements: !2570)
!2569 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2570 = !{!2571, !2572}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2568, file: !2569, line: 110, baseType: !350, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2568, file: !2569, line: 118, baseType: !2573, size: 64, offset: 64)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2569, line: 95, size: 448, elements: !2575)
!2575 = !{!2576, !2577, !2582, !2583, !2584, !2585, !2586}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2574, file: !2569, line: 96, baseType: !953, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2574, file: !2569, line: 97, baseType: !2578, size: 64, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2569, line: 60, baseType: !2580)
!2580 = !DISubroutineType(types: !2581)
!2581 = !{null, !2567}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2574, file: !2569, line: 98, baseType: !2578, size: 64, offset: 128)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2574, file: !2569, line: 99, baseType: !396, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2574, file: !2569, line: 100, baseType: !396, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2574, file: !2569, line: 101, baseType: !553, size: 128, align: 64, offset: 256)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2574, file: !2569, line: 102, baseType: !2567, size: 64, offset: 384)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2554, file: !31, line: 113, baseType: !2568, size: 128, offset: 448)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2554, file: !31, line: 114, baseType: !1717, size: 192, offset: 576)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2554, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2554, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2554, file: !31, line: 117, baseType: !2592, size: 64, offset: 832)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2594)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2595)
!2595 = !{!2596, !2597, !2601, !2602}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2594, file: !31, line: 73, baseType: !1022, size: 64)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2594, file: !31, line: 78, baseType: !2598, size: 64, offset: 64)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DISubroutineType(types: !2600)
!2600 = !{null, !2553}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2594, file: !31, line: 83, baseType: !2598, size: 64, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2594, file: !31, line: 89, baseType: !1249, size: 64, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2554, file: !31, line: 118, baseType: !351, size: 64, offset: 896)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2554, file: !31, line: 119, baseType: !378, size: 32, offset: 960)
!2605 = !DIDerivedType(tag: DW_TAG_member, scope: !2554, file: !31, line: 120, baseType: !2606, size: 128, offset: 1024)
!2606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2554, file: !31, line: 120, size: 128, elements: !2607)
!2607 = !{!2608, !2614}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2606, file: !31, line: 121, baseType: !2609, size: 128)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2610, line: 6, size: 128, elements: !2611)
!2610 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2611 = !{!2612, !2613}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2609, file: !2610, line: 7, baseType: !609, size: 64)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2609, file: !2610, line: 8, baseType: !609, size: 64, offset: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2606, file: !31, line: 122, baseType: !2615)
!2615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2609, elements: !1938)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2550, file: !909, line: 162, baseType: !351, size: 64, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !913, file: !909, line: 176, baseType: !553, size: 128, align: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, scope: !908, file: !909, line: 179, baseType: !2619, size: 32, offset: 384)
!2619 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !908, file: !909, line: 179, size: 32, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2619, file: !909, line: 184, baseType: !374, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2619, file: !909, line: 192, baseType: !7, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2619, file: !909, line: 194, baseType: !7, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2619, file: !909, line: 195, baseType: !378, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !908, file: !909, line: 199, baseType: !374, size: 32, offset: 416)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !843, file: !44, line: 1964, baseType: !2627, size: 64, offset: 1344)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!352, !785, !2630}
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2632, line: 12, size: 256, elements: !2633)
!2632 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2633 = !{!2634, !2635, !2636, !2637, !2638}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2631, file: !2632, line: 13, baseType: !348, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2631, file: !2632, line: 16, baseType: !378, size: 32, offset: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2631, file: !2632, line: 23, baseType: !350, size: 64, offset: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2631, file: !2632, line: 30, baseType: !350, size: 64, offset: 128)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2631, file: !2632, line: 33, baseType: !2639, size: 64, offset: 192)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !909, line: 27, flags: DIFlagFwdDecl)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !843, file: !44, line: 1966, baseType: !2627, size: 64, offset: 1408)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !786, file: !44, line: 1424, baseType: !2643, size: 64, offset: 448)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2645)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2646)
!2646 = !{!2647, !2693, !2697, !2701, !2702, !2703, !2704, !2705, !2710, !2715, !2719}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2645, file: !38, line: 323, baseType: !2648, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = !DISubroutineType(types: !2650)
!2650 = !{!378, !2651}
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2653)
!2653 = !{!2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2678, !2679, !2680}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2652, file: !38, line: 295, baseType: !825, size: 128)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2652, file: !38, line: 296, baseType: !382, size: 128, offset: 128)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2652, file: !38, line: 297, baseType: !382, size: 128, offset: 256)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2652, file: !38, line: 298, baseType: !382, size: 128, offset: 384)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2652, file: !38, line: 299, baseType: !1395, size: 192, offset: 512)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2652, file: !38, line: 300, baseType: !423, offset: 704)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2652, file: !38, line: 301, baseType: !374, size: 32, offset: 704)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2652, file: !38, line: 302, baseType: !785, size: 64, offset: 768)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2652, file: !38, line: 303, baseType: !2663, size: 64, offset: 832)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2664)
!2664 = !{!2665, !2677}
!2665 = !DIDerivedType(tag: DW_TAG_member, scope: !2663, file: !38, line: 69, baseType: !2666, size: 32)
!2666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2663, file: !38, line: 69, size: 32, elements: !2667)
!2667 = !{!2668, !2669, !2670}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2666, file: !38, line: 70, baseType: !623, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2666, file: !38, line: 71, baseType: !631, size: 32)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2666, file: !38, line: 72, baseType: !2671, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2672, line: 24, baseType: !2673)
!2672 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2672, line: 22, size: 32, elements: !2674)
!2674 = !{!2675}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2673, file: !2672, line: 23, baseType: !2676, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2672, line: 20, baseType: !629)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2663, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2652, file: !38, line: 304, baseType: !717, size: 64, offset: 896)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2652, file: !38, line: 305, baseType: !350, size: 64, offset: 960)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2652, file: !38, line: 306, baseType: !2681, size: 576, offset: 1024)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2682)
!2682 = !{!2683, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2681, file: !38, line: 206, baseType: !2684, size: 64)
!2684 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !719)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2681, file: !38, line: 207, baseType: !2684, size: 64, offset: 64)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2681, file: !38, line: 208, baseType: !2684, size: 64, offset: 128)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2681, file: !38, line: 209, baseType: !2684, size: 64, offset: 192)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2681, file: !38, line: 210, baseType: !2684, size: 64, offset: 256)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2681, file: !38, line: 211, baseType: !2684, size: 64, offset: 320)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2681, file: !38, line: 212, baseType: !2684, size: 64, offset: 384)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2681, file: !38, line: 213, baseType: !725, size: 64, offset: 448)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2681, file: !38, line: 214, baseType: !725, size: 64, offset: 512)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2645, file: !38, line: 324, baseType: !2694, size: 64, offset: 64)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = !DISubroutineType(types: !2696)
!2696 = !{!2651, !785, !378}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2645, file: !38, line: 325, baseType: !2698, size: 64, offset: 128)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{null, !2651}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2645, file: !38, line: 326, baseType: !2648, size: 64, offset: 192)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2645, file: !38, line: 327, baseType: !2648, size: 64, offset: 256)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2645, file: !38, line: 328, baseType: !2648, size: 64, offset: 320)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2645, file: !38, line: 329, baseType: !871, size: 64, offset: 384)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2645, file: !38, line: 332, baseType: !2706, size: 64, offset: 448)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{!2709, !617}
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 64)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2645, file: !38, line: 333, baseType: !2711, size: 64, offset: 512)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{!378, !617, !2714}
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2645, file: !38, line: 335, baseType: !2716, size: 64, offset: 576)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64)
!2717 = !DISubroutineType(types: !2718)
!2718 = !{!378, !617, !2709}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2645, file: !38, line: 337, baseType: !2720, size: 64, offset: 640)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{!378, !785, !2723}
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !786, file: !44, line: 1425, baseType: !2725, size: 64, offset: 512)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2727)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2728)
!2728 = !{!2729, !2733, !2734, !2738, !2739, !2740, !2755, !2778, !2782, !2783, !2806}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2727, file: !38, line: 429, baseType: !2730, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!378, !785, !378, !378, !735}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2727, file: !38, line: 430, baseType: !871, size: 64, offset: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2727, file: !38, line: 431, baseType: !2735, size: 64, offset: 128)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 64)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!378, !785, !7}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2727, file: !38, line: 432, baseType: !2735, size: 64, offset: 192)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2727, file: !38, line: 433, baseType: !871, size: 64, offset: 256)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2727, file: !38, line: 434, baseType: !2741, size: 64, offset: 320)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{!378, !785, !378, !2744}
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2746)
!2746 = !{!2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2745, file: !38, line: 416, baseType: !378, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2745, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2745, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2745, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2745, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2745, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2745, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2745, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2727, file: !38, line: 435, baseType: !2756, size: 64, offset: 384)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DISubroutineType(types: !2758)
!2758 = !{!378, !785, !2663, !2759}
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2761)
!2761 = !{!2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2760, file: !38, line: 344, baseType: !378, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2760, file: !38, line: 345, baseType: !609, size: 64, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2760, file: !38, line: 346, baseType: !609, size: 64, offset: 128)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2760, file: !38, line: 347, baseType: !609, size: 64, offset: 192)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2760, file: !38, line: 348, baseType: !609, size: 64, offset: 256)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2760, file: !38, line: 349, baseType: !609, size: 64, offset: 320)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2760, file: !38, line: 350, baseType: !609, size: 64, offset: 384)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2760, file: !38, line: 351, baseType: !959, size: 64, offset: 448)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2760, file: !38, line: 353, baseType: !959, size: 64, offset: 512)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2760, file: !38, line: 354, baseType: !378, size: 32, offset: 576)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2760, file: !38, line: 355, baseType: !378, size: 32, offset: 608)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2760, file: !38, line: 356, baseType: !609, size: 64, offset: 640)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2760, file: !38, line: 357, baseType: !609, size: 64, offset: 704)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2760, file: !38, line: 358, baseType: !609, size: 64, offset: 768)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2760, file: !38, line: 359, baseType: !959, size: 64, offset: 832)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2760, file: !38, line: 360, baseType: !378, size: 32, offset: 896)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2727, file: !38, line: 436, baseType: !2779, size: 64, offset: 448)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DISubroutineType(types: !2781)
!2781 = !{!378, !785, !2723, !2759}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2727, file: !38, line: 438, baseType: !2756, size: 64, offset: 512)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2727, file: !38, line: 439, baseType: !2784, size: 64, offset: 576)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = !DISubroutineType(types: !2786)
!2786 = !{!378, !785, !2787}
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 64)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2789)
!2789 = !{!2790, !2791}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2788, file: !38, line: 410, baseType: !7, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2788, file: !38, line: 411, baseType: !2792, size: 1344, offset: 64)
!2792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2793, size: 1344, elements: !465)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2794)
!2794 = !{!2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2805}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2793, file: !38, line: 396, baseType: !7, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2793, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2793, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2793, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2793, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2793, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2793, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2793, file: !38, line: 404, baseType: !611, size: 64, offset: 256)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2793, file: !38, line: 405, baseType: !2804, size: 64, offset: 320)
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !349, line: 126, baseType: !609)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2793, file: !38, line: 406, baseType: !2804, size: 64, offset: 384)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2727, file: !38, line: 440, baseType: !2735, size: 64, offset: 640)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !786, file: !44, line: 1426, baseType: !2808, size: 64, offset: 576)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2810)
!2810 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !786, file: !44, line: 1427, baseType: !350, size: 64, offset: 640)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !786, file: !44, line: 1428, baseType: !350, size: 64, offset: 704)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !786, file: !44, line: 1429, baseType: !350, size: 64, offset: 768)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !786, file: !44, line: 1430, baseType: !570, size: 64, offset: 832)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !786, file: !44, line: 1431, baseType: !949, size: 256, offset: 896)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !786, file: !44, line: 1432, baseType: !378, size: 32, offset: 1152)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !786, file: !44, line: 1433, baseType: !374, size: 32, offset: 1184)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !786, file: !44, line: 1437, baseType: !2819, size: 64, offset: 1216)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2822)
!2822 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !786, file: !44, line: 1449, baseType: !2824, size: 64, offset: 1280)
!2824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !586, line: 34, size: 64, elements: !2825)
!2825 = !{!2826}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2824, file: !586, line: 35, baseType: !589, size: 64)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !786, file: !44, line: 1450, baseType: !382, size: 128, offset: 1344)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !786, file: !44, line: 1451, baseType: !2829, size: 64, offset: 1472)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !786, file: !44, line: 1452, baseType: !2139, size: 64, offset: 1536)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !786, file: !44, line: 1453, baseType: !2833, size: 64, offset: 1600)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !786, file: !44, line: 1454, baseType: !825, size: 128, offset: 1664)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !786, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !786, file: !44, line: 1456, baseType: !2838, size: 2432, offset: 1856)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2839)
!2839 = !{!2840, !2841, !2842, !2844, !2876}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2838, file: !38, line: 519, baseType: !7, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2838, file: !38, line: 520, baseType: !949, size: 256, offset: 64)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2838, file: !38, line: 521, baseType: !2843, size: 192, offset: 320)
!2843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !617, size: 192, elements: !465)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2838, file: !38, line: 522, baseType: !2845, size: 1728, offset: 512)
!2845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2846, size: 1728, elements: !465)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2847)
!2847 = !{!2848, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2846, file: !38, line: 223, baseType: !2849, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2851)
!2851 = !{!2852, !2853, !2866, !2867}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2850, file: !38, line: 444, baseType: !378, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2850, file: !38, line: 445, baseType: !2854, size: 64, offset: 64)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 64)
!2855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2856)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2857)
!2857 = !{!2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2856, file: !38, line: 311, baseType: !871, size: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2856, file: !38, line: 312, baseType: !871, size: 64, offset: 64)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2856, file: !38, line: 313, baseType: !871, size: 64, offset: 128)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2856, file: !38, line: 314, baseType: !871, size: 64, offset: 192)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2856, file: !38, line: 315, baseType: !2648, size: 64, offset: 256)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2856, file: !38, line: 316, baseType: !2648, size: 64, offset: 320)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2856, file: !38, line: 317, baseType: !2648, size: 64, offset: 384)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2856, file: !38, line: 318, baseType: !2720, size: 64, offset: 448)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2850, file: !38, line: 446, baseType: !345, size: 64, offset: 128)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2850, file: !38, line: 447, baseType: !2849, size: 64, offset: 192)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2846, file: !38, line: 224, baseType: !378, size: 32, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2846, file: !38, line: 226, baseType: !382, size: 128, offset: 128)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2846, file: !38, line: 227, baseType: !350, size: 64, offset: 256)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2846, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2846, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2846, file: !38, line: 230, baseType: !2684, size: 64, offset: 384)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2846, file: !38, line: 231, baseType: !2684, size: 64, offset: 448)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2846, file: !38, line: 232, baseType: !351, size: 64, offset: 512)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2838, file: !38, line: 523, baseType: !2877, size: 192, offset: 2240)
!2877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2854, size: 192, elements: !465)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !786, file: !44, line: 1458, baseType: !2879, size: 2112, offset: 4288)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2880)
!2880 = !{!2881, !2882, !2883}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2879, file: !44, line: 1411, baseType: !378, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2879, file: !44, line: 1412, baseType: !1696, size: 128, offset: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2879, file: !44, line: 1413, baseType: !2884, size: 1920, offset: 192)
!2884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2885, size: 1920, elements: !465)
!2885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2886, line: 12, size: 640, elements: !2887)
!2886 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2887 = !{!2888, !2896, !2898, !2903, !2904}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2885, file: !2886, line: 13, baseType: !2889, size: 320)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2890, line: 17, size: 320, elements: !2891)
!2890 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2891 = !{!2892, !2893, !2894, !2895}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2889, file: !2890, line: 18, baseType: !378, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2889, file: !2890, line: 19, baseType: !378, size: 32, offset: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2889, file: !2890, line: 20, baseType: !1696, size: 128, offset: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2889, file: !2890, line: 22, baseType: !553, size: 128, align: 64, offset: 192)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2885, file: !2886, line: 14, baseType: !2897, size: 64, offset: 320)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2885, file: !2886, line: 15, baseType: !2899, size: 64, offset: 384)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2900, line: 16, size: 64, elements: !2901)
!2900 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2901 = !{!2902}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2899, file: !2900, line: 17, baseType: !1438, size: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2885, file: !2886, line: 16, baseType: !1696, size: 128, offset: 448)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2885, file: !2886, line: 17, baseType: !374, size: 32, offset: 576)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !786, file: !44, line: 1465, baseType: !351, size: 64, offset: 6400)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !786, file: !44, line: 1468, baseType: !603, size: 32, offset: 6464)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !786, file: !44, line: 1470, baseType: !725, size: 64, offset: 6528)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !786, file: !44, line: 1471, baseType: !725, size: 64, offset: 6592)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !786, file: !44, line: 1473, baseType: !605, size: 32, offset: 6656)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !786, file: !44, line: 1474, baseType: !2911, size: 64, offset: 6720)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2912 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !786, file: !44, line: 1477, baseType: !2914, size: 256, offset: 6784)
!2914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 256, elements: !2444)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !786, file: !44, line: 1478, baseType: !2916, size: 128, offset: 7040)
!2916 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2917, line: 18, baseType: !2918)
!2917 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2917, line: 16, size: 128, elements: !2919)
!2919 = !{!2920}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2918, file: !2917, line: 17, baseType: !2921, size: 128)
!2921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1568, size: 128, elements: !1950)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !786, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !786, file: !44, line: 1481, baseType: !2924, size: 32, offset: 7200)
!2924 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !349, line: 150, baseType: !7)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !786, file: !44, line: 1487, baseType: !1395, size: 192, offset: 7232)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !786, file: !44, line: 1493, baseType: !412, size: 64, offset: 7424)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !786, file: !44, line: 1495, baseType: !2928, size: 64, offset: 7488)
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 64)
!2929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2930)
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !568, line: 135, size: 1024, align: 512, elements: !2931)
!2931 = !{!2932, !2936, !2937, !2944, !2950, !2954, !2958, !2962, !2963, !2967, !2971, !2976, !2980}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2930, file: !568, line: 136, baseType: !2933, size: 64)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = !DISubroutineType(types: !2935)
!2935 = !{!378, !570, !7}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2930, file: !568, line: 137, baseType: !2933, size: 64, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2930, file: !568, line: 138, baseType: !2938, size: 64, offset: 128)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2939 = !DISubroutineType(types: !2940)
!2940 = !{!378, !2941, !2943}
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !571)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2930, file: !568, line: 139, baseType: !2945, size: 64, offset: 192)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 64)
!2946 = !DISubroutineType(types: !2947)
!2947 = !{!378, !2941, !7, !412, !2948}
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !594)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2930, file: !568, line: 141, baseType: !2951, size: 64, offset: 256)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!2952 = !DISubroutineType(types: !2953)
!2953 = !{!378, !2941}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2930, file: !568, line: 142, baseType: !2955, size: 64, offset: 320)
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 64)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{!378, !570}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2930, file: !568, line: 143, baseType: !2959, size: 64, offset: 384)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DISubroutineType(types: !2961)
!2961 = !{null, !570}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2930, file: !568, line: 144, baseType: !2959, size: 64, offset: 448)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2930, file: !568, line: 145, baseType: !2964, size: 64, offset: 512)
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 64)
!2965 = !DISubroutineType(types: !2966)
!2966 = !{null, !570, !617}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2930, file: !568, line: 146, baseType: !2968, size: 64, offset: 576)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{!464, !570, !464, !378}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2930, file: !568, line: 147, baseType: !2972, size: 64, offset: 640)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{!566, !2975}
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2930, file: !568, line: 148, baseType: !2977, size: 64, offset: 704)
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 64)
!2978 = !DISubroutineType(types: !2979)
!2979 = !{!378, !735, !396}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2930, file: !568, line: 149, baseType: !2981, size: 64, offset: 768)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DISubroutineType(types: !2983)
!2983 = !{!570, !570, !2984}
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !618)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !786, file: !44, line: 1500, baseType: !378, size: 32, offset: 7552)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !786, file: !44, line: 1502, baseType: !2988, size: 448, offset: 7616)
!2988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2632, line: 60, size: 448, elements: !2989)
!2989 = !{!2990, !2995, !2996, !2997, !2998, !2999, !3000}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2988, file: !2632, line: 61, baseType: !2991, size: 64)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{!350, !2994, !2630}
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2988, file: !2632, line: 63, baseType: !2991, size: 64, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2988, file: !2632, line: 66, baseType: !352, size: 64, offset: 128)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2988, file: !2632, line: 67, baseType: !378, size: 32, offset: 192)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2988, file: !2632, line: 68, baseType: !7, size: 32, offset: 224)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2988, file: !2632, line: 71, baseType: !382, size: 128, offset: 256)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2988, file: !2632, line: 77, baseType: !3001, size: 64, offset: 384)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !786, file: !44, line: 1505, baseType: !953, size: 64, offset: 8064)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !786, file: !44, line: 1508, baseType: !953, size: 64, offset: 8128)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !786, file: !44, line: 1511, baseType: !378, size: 32, offset: 8192)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !786, file: !44, line: 1514, baseType: !1131, size: 32, offset: 8224)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !786, file: !44, line: 1517, baseType: !3007, size: 64, offset: 8256)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3008 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2174, line: 18, flags: DIFlagFwdDecl)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !786, file: !44, line: 1518, baseType: !821, size: 64, offset: 8320)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !786, file: !44, line: 1525, baseType: !1928, size: 64, offset: 8384)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !786, file: !44, line: 1532, baseType: !3012, size: 64, offset: 8448)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3013, line: 52, size: 64, elements: !3014)
!3013 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3014 = !{!3015}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3012, file: !3013, line: 53, baseType: !3016, size: 64)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3013, line: 40, size: 256, elements: !3018)
!3018 = !{!3019, !3020, !3025}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3017, file: !3013, line: 42, baseType: !423)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3017, file: !3013, line: 44, baseType: !3021, size: 192)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3013, line: 28, size: 192, elements: !3022)
!3022 = !{!3023, !3024}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3021, file: !3013, line: 29, baseType: !382, size: 128)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3021, file: !3013, line: 31, baseType: !352, size: 64, offset: 128)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3017, file: !3013, line: 49, baseType: !352, size: 64, offset: 192)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !786, file: !44, line: 1533, baseType: !3012, size: 64, offset: 8512)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !786, file: !44, line: 1534, baseType: !553, size: 128, align: 64, offset: 8576)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !786, file: !44, line: 1535, baseType: !2173, size: 256, offset: 8704)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !786, file: !44, line: 1537, baseType: !1395, size: 192, offset: 8960)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !786, file: !44, line: 1542, baseType: !378, size: 32, offset: 9152)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !786, file: !44, line: 1545, baseType: !423, offset: 9184)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !786, file: !44, line: 1546, baseType: !382, size: 128, offset: 9216)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !786, file: !44, line: 1548, baseType: !423, offset: 9344)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !786, file: !44, line: 1549, baseType: !382, size: 128, offset: 9344)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !618, file: !44, line: 624, baseType: !920, size: 64, offset: 256)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !618, file: !44, line: 631, baseType: !350, size: 64, offset: 320)
!3037 = !DIDerivedType(tag: DW_TAG_member, scope: !618, file: !44, line: 639, baseType: !3038, size: 32, offset: 384)
!3038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !618, file: !44, line: 639, size: 32, elements: !3039)
!3039 = !{!3040, !3042}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3038, file: !44, line: 640, baseType: !3041, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3038, file: !44, line: 641, baseType: !7, size: 32)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !618, file: !44, line: 643, baseType: !699, size: 32, offset: 416)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !618, file: !44, line: 644, baseType: !717, size: 64, offset: 448)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !618, file: !44, line: 645, baseType: !721, size: 128, offset: 512)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !618, file: !44, line: 646, baseType: !721, size: 128, offset: 640)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !618, file: !44, line: 647, baseType: !721, size: 128, offset: 768)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !618, file: !44, line: 648, baseType: !423, offset: 896)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !618, file: !44, line: 649, baseType: !505, size: 16, offset: 896)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !618, file: !44, line: 650, baseType: !1567, size: 8, offset: 912)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !618, file: !44, line: 651, baseType: !1567, size: 8, offset: 920)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !618, file: !44, line: 652, baseType: !2804, size: 64, offset: 960)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !618, file: !44, line: 659, baseType: !350, size: 64, offset: 1024)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !618, file: !44, line: 660, baseType: !949, size: 256, offset: 1088)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !618, file: !44, line: 662, baseType: !350, size: 64, offset: 1344)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !618, file: !44, line: 663, baseType: !350, size: 64, offset: 1408)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !618, file: !44, line: 665, baseType: !825, size: 128, offset: 1472)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !618, file: !44, line: 666, baseType: !382, size: 128, offset: 1600)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !618, file: !44, line: 675, baseType: !382, size: 128, offset: 1728)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !618, file: !44, line: 676, baseType: !382, size: 128, offset: 1856)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !618, file: !44, line: 677, baseType: !382, size: 128, offset: 1984)
!3062 = !DIDerivedType(tag: DW_TAG_member, scope: !618, file: !44, line: 678, baseType: !3063, size: 128, offset: 2112)
!3063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !618, file: !44, line: 678, size: 128, elements: !3064)
!3064 = !{!3065, !3066}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3063, file: !44, line: 679, baseType: !821, size: 64)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3063, file: !44, line: 680, baseType: !553, size: 128, align: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !618, file: !44, line: 682, baseType: !955, size: 64, offset: 2240)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !618, file: !44, line: 683, baseType: !955, size: 64, offset: 2304)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !618, file: !44, line: 684, baseType: !374, size: 32, offset: 2368)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !618, file: !44, line: 685, baseType: !374, size: 32, offset: 2400)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !618, file: !44, line: 686, baseType: !374, size: 32, offset: 2432)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !618, file: !44, line: 688, baseType: !374, size: 32, offset: 2464)
!3073 = !DIDerivedType(tag: DW_TAG_member, scope: !618, file: !44, line: 690, baseType: !3074, size: 64, offset: 2496)
!3074 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !618, file: !44, line: 690, size: 64, elements: !3075)
!3075 = !{!3076, !3299}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3074, file: !44, line: 691, baseType: !3077, size: 64)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3079)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !3080)
!3080 = !{!3081, !3082, !3086, !3091, !3095, !3096, !3097, !3101, !3114, !3115, !3123, !3127, !3128, !3132, !3133, !3137, !3142, !3143, !3147, !3151, !3259, !3263, !3264, !3268, !3269, !3273, !3277, !3282, !3286, !3290, !3294, !3298}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3079, file: !44, line: 1823, baseType: !345, size: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3079, file: !44, line: 1824, baseType: !3083, size: 64, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 64)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{!717, !540, !717, !378}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3079, file: !44, line: 1825, baseType: !3087, size: 64, offset: 128)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 64)
!3088 = !DISubroutineType(types: !3089)
!3089 = !{!495, !540, !464, !510, !3090}
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3079, file: !44, line: 1826, baseType: !3092, size: 64, offset: 192)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 64)
!3093 = !DISubroutineType(types: !3094)
!3094 = !{!495, !540, !412, !510, !3090}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3079, file: !44, line: 1827, baseType: !1026, size: 64, offset: 256)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3079, file: !44, line: 1828, baseType: !1026, size: 64, offset: 320)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3079, file: !44, line: 1829, baseType: !3098, size: 64, offset: 384)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DISubroutineType(types: !3100)
!3100 = !{!378, !1029, !396}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3079, file: !44, line: 1830, baseType: !3102, size: 64, offset: 448)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!378, !540, !3105}
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 64)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !3107)
!3107 = !{!3108, !3113}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3106, file: !44, line: 1777, baseType: !3109, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !3110)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{!378, !3105, !412, !378, !717, !609, !7}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3106, file: !44, line: 1778, baseType: !717, size: 64, offset: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3079, file: !44, line: 1831, baseType: !3102, size: 64, offset: 512)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3079, file: !44, line: 1832, baseType: !3116, size: 64, offset: 576)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!3119, !540, !3121}
!3119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3120, line: 52, baseType: !7)
!3120 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !805, line: 27, flags: DIFlagFwdDecl)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3079, file: !44, line: 1833, baseType: !3124, size: 64, offset: 640)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{!352, !540, !7, !350}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3079, file: !44, line: 1834, baseType: !3124, size: 64, offset: 704)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3079, file: !44, line: 1835, baseType: !3129, size: 64, offset: 768)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!378, !540, !1203}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3079, file: !44, line: 1836, baseType: !350, size: 64, offset: 832)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3079, file: !44, line: 1837, baseType: !3134, size: 64, offset: 896)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DISubroutineType(types: !3136)
!3136 = !{!378, !617, !540}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3079, file: !44, line: 1838, baseType: !3138, size: 64, offset: 960)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3139 = !DISubroutineType(types: !3140)
!3140 = !{!378, !540, !3141}
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !351)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3079, file: !44, line: 1839, baseType: !3134, size: 64, offset: 1024)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3079, file: !44, line: 1840, baseType: !3144, size: 64, offset: 1088)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 64)
!3145 = !DISubroutineType(types: !3146)
!3146 = !{!378, !540, !717, !717, !378}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3079, file: !44, line: 1841, baseType: !3148, size: 64, offset: 1152)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!378, !378, !540, !378}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3079, file: !44, line: 1842, baseType: !3152, size: 64, offset: 1216)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{!378, !540, !378, !3155}
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3157)
!3157 = !{!3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3189, !3190, !3191, !3204, !3235}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3156, file: !44, line: 1063, baseType: !3155, size: 64)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3156, file: !44, line: 1064, baseType: !382, size: 128, offset: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3156, file: !44, line: 1065, baseType: !825, size: 128, offset: 192)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3156, file: !44, line: 1066, baseType: !382, size: 128, offset: 320)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3156, file: !44, line: 1069, baseType: !382, size: 128, offset: 448)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3156, file: !44, line: 1072, baseType: !3141, size: 64, offset: 576)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3156, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3156, file: !44, line: 1074, baseType: !615, size: 8, offset: 672)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3156, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3156, file: !44, line: 1076, baseType: !378, size: 32, offset: 736)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3156, file: !44, line: 1077, baseType: !1696, size: 128, offset: 768)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3156, file: !44, line: 1078, baseType: !540, size: 64, offset: 896)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3156, file: !44, line: 1079, baseType: !717, size: 64, offset: 960)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3156, file: !44, line: 1080, baseType: !717, size: 64, offset: 1024)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3156, file: !44, line: 1082, baseType: !3173, size: 64, offset: 1088)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3175)
!3175 = !{!3176, !3184, !3185, !3186, !3187, !3188}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3174, file: !44, line: 1315, baseType: !3177)
!3177 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3178, line: 20, baseType: !3179)
!3178 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3178, line: 11, elements: !3180)
!3180 = !{!3181}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3179, file: !3178, line: 12, baseType: !3182)
!3182 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !435, line: 33, baseType: !3183)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !435, line: 31, elements: !437)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3174, file: !44, line: 1316, baseType: !378, size: 32)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3174, file: !44, line: 1317, baseType: !378, size: 32, offset: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3174, file: !44, line: 1318, baseType: !3173, size: 64, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3174, file: !44, line: 1319, baseType: !540, size: 64, offset: 128)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3174, file: !44, line: 1320, baseType: !553, size: 128, align: 64, offset: 192)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3156, file: !44, line: 1084, baseType: !350, size: 64, offset: 1152)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3156, file: !44, line: 1085, baseType: !350, size: 64, offset: 1216)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3156, file: !44, line: 1087, baseType: !3192, size: 64, offset: 1280)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3194)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3195)
!3195 = !{!3196, !3200}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3194, file: !44, line: 1012, baseType: !3197, size: 64)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 64)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{null, !3155, !3155}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3194, file: !44, line: 1013, baseType: !3201, size: 64, offset: 64)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DISubroutineType(types: !3203)
!3203 = !{null, !3155}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3156, file: !44, line: 1088, baseType: !3205, size: 64, offset: 1344)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3207)
!3207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3208)
!3208 = !{!3209, !3213, !3217, !3218, !3222, !3226, !3230, !3234}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3207, file: !44, line: 1017, baseType: !3210, size: 64)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{!3141, !3141}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3207, file: !44, line: 1018, baseType: !3214, size: 64, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = !DISubroutineType(types: !3216)
!3216 = !{null, !3141}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3207, file: !44, line: 1019, baseType: !3201, size: 64, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3207, file: !44, line: 1020, baseType: !3219, size: 64, offset: 192)
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!3220 = !DISubroutineType(types: !3221)
!3221 = !{!378, !3155, !378}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3207, file: !44, line: 1021, baseType: !3223, size: 64, offset: 256)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 64)
!3224 = !DISubroutineType(types: !3225)
!3225 = !{!396, !3155}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3207, file: !44, line: 1022, baseType: !3227, size: 64, offset: 320)
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3228, size: 64)
!3228 = !DISubroutineType(types: !3229)
!3229 = !{!378, !3155, !378, !385}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3207, file: !44, line: 1023, baseType: !3231, size: 64, offset: 384)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{null, !3155, !1003}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3207, file: !44, line: 1024, baseType: !3223, size: 64, offset: 448)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3156, file: !44, line: 1097, baseType: !3236, size: 256, offset: 1408)
!3236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3156, file: !44, line: 1089, size: 256, elements: !3237)
!3237 = !{!3238, !3247, !3253}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3236, file: !44, line: 1090, baseType: !3239, size: 256)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3240, line: 10, size: 256, elements: !3241)
!3240 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3241 = !{!3242, !3243, !3246}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3239, file: !3240, line: 11, baseType: !603, size: 32)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3239, file: !3240, line: 12, baseType: !3244, size: 64, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3245, size: 64)
!3245 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3240, line: 5, flags: DIFlagFwdDecl)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3239, file: !3240, line: 13, baseType: !382, size: 128, offset: 128)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3236, file: !44, line: 1091, baseType: !3248, size: 64)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3240, line: 17, size: 64, elements: !3249)
!3249 = !{!3250}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3248, file: !3240, line: 18, baseType: !3251, size: 64)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3240, line: 16, flags: DIFlagFwdDecl)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3236, file: !44, line: 1096, baseType: !3254, size: 192)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3236, file: !44, line: 1092, size: 192, elements: !3255)
!3255 = !{!3256, !3257, !3258}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3254, file: !44, line: 1093, baseType: !382, size: 128)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3254, file: !44, line: 1094, baseType: !378, size: 32, offset: 128)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3254, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3079, file: !44, line: 1843, baseType: !3260, size: 64, offset: 1280)
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3261 = !DISubroutineType(types: !3262)
!3262 = !{!495, !540, !907, !378, !510, !3090, !378}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3079, file: !44, line: 1844, baseType: !1323, size: 64, offset: 1344)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3079, file: !44, line: 1845, baseType: !3265, size: 64, offset: 1408)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!378, !378}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3079, file: !44, line: 1846, baseType: !3152, size: 64, offset: 1472)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3079, file: !44, line: 1847, baseType: !3270, size: 64, offset: 1536)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{!495, !1081, !540, !3090, !510, !7}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3079, file: !44, line: 1848, baseType: !3274, size: 64, offset: 1600)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{!495, !540, !3090, !1081, !510, !7}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3079, file: !44, line: 1849, baseType: !3278, size: 64, offset: 1664)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{!378, !540, !352, !3281, !1003}
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3079, file: !44, line: 1850, baseType: !3283, size: 64, offset: 1728)
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 64)
!3284 = !DISubroutineType(types: !3285)
!3285 = !{!352, !540, !378, !717, !717}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3079, file: !44, line: 1852, baseType: !3287, size: 64, offset: 1792)
!3287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3288, size: 64)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{null, !897, !540}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3079, file: !44, line: 1856, baseType: !3291, size: 64, offset: 1856)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{!495, !540, !717, !540, !717, !510, !7}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3079, file: !44, line: 1858, baseType: !3295, size: 64, offset: 1920)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!717, !540, !717, !540, !717, !717, !7}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3079, file: !44, line: 1861, baseType: !3144, size: 64, offset: 1984)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3074, file: !44, line: 692, baseType: !850, size: 64)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !618, file: !44, line: 694, baseType: !3301, size: 64, offset: 2560)
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3302, size: 64)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3303)
!3303 = !{!3304, !3305, !3306, !3307}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3302, file: !44, line: 1101, baseType: !423)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3302, file: !44, line: 1102, baseType: !382, size: 128)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3302, file: !44, line: 1103, baseType: !382, size: 128, offset: 128)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3302, file: !44, line: 1104, baseType: !382, size: 128, offset: 256)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !618, file: !44, line: 695, baseType: !921, size: 1216, align: 64, offset: 2624)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !618, file: !44, line: 696, baseType: !382, size: 128, offset: 3840)
!3310 = !DIDerivedType(tag: DW_TAG_member, scope: !618, file: !44, line: 697, baseType: !3311, size: 64, offset: 3968)
!3311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !618, file: !44, line: 697, size: 64, elements: !3312)
!3312 = !{!3313, !3314, !3315, !3318, !3319}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3311, file: !44, line: 698, baseType: !1081, size: 64)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3311, file: !44, line: 699, baseType: !2829, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3311, file: !44, line: 700, baseType: !3316, size: 64)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3311, file: !44, line: 701, baseType: !464, size: 64)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3311, file: !44, line: 702, baseType: !7, size: 32)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !618, file: !44, line: 705, baseType: !605, size: 32, offset: 4032)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !618, file: !44, line: 708, baseType: !605, size: 32, offset: 4064)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !618, file: !44, line: 709, baseType: !2911, size: 64, offset: 4096)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !618, file: !44, line: 720, baseType: !351, size: 64, offset: 4160)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !571, file: !568, line: 98, baseType: !3325, size: 256, offset: 448)
!3325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !615, size: 256, elements: !2444)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !571, file: !568, line: 101, baseType: !3327, size: 32, offset: 704)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3328, line: 25, size: 32, elements: !3329)
!3328 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3329 = !{!3330}
!3330 = !DIDerivedType(tag: DW_TAG_member, scope: !3327, file: !3328, line: 26, baseType: !3331, size: 32)
!3331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3327, file: !3328, line: 26, size: 32, elements: !3332)
!3332 = !{!3333}
!3333 = !DIDerivedType(tag: DW_TAG_member, scope: !3331, file: !3328, line: 30, baseType: !3334, size: 32)
!3334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3331, file: !3328, line: 30, size: 32, elements: !3335)
!3335 = !{!3336, !3337}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3334, file: !3328, line: 31, baseType: !423)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3334, file: !3328, line: 32, baseType: !378, size: 32)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !571, file: !568, line: 102, baseType: !2928, size: 64, offset: 768)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !571, file: !568, line: 103, baseType: !785, size: 64, offset: 832)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !571, file: !568, line: 104, baseType: !350, size: 64, offset: 896)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !571, file: !568, line: 105, baseType: !351, size: 64, offset: 960)
!3342 = !DIDerivedType(tag: DW_TAG_member, scope: !571, file: !568, line: 107, baseType: !3343, size: 128, offset: 1024)
!3343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !571, file: !568, line: 107, size: 128, elements: !3344)
!3344 = !{!3345, !3346}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3343, file: !568, line: 108, baseType: !382, size: 128)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3343, file: !568, line: 109, baseType: !3347, size: 64)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !571, file: !568, line: 111, baseType: !382, size: 128, offset: 1152)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !571, file: !568, line: 112, baseType: !382, size: 128, offset: 1280)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !571, file: !568, line: 120, baseType: !3351, size: 128, offset: 1408)
!3351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !571, file: !568, line: 116, size: 128, elements: !3352)
!3352 = !{!3353, !3354, !3355}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3351, file: !568, line: 117, baseType: !825, size: 128)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3351, file: !568, line: 118, baseType: !585, size: 128)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3351, file: !568, line: 119, baseType: !553, size: 128, align: 64)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !541, file: !44, line: 922, baseType: !617, size: 64, offset: 256)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !541, file: !44, line: 923, baseType: !3077, size: 64, offset: 320)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !541, file: !44, line: 929, baseType: !423, offset: 384)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !541, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !541, file: !44, line: 931, baseType: !953, size: 64, offset: 448)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !541, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !541, file: !44, line: 933, baseType: !2924, size: 32, offset: 544)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !541, file: !44, line: 934, baseType: !1395, size: 192, offset: 576)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !541, file: !44, line: 935, baseType: !717, size: 64, offset: 768)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !541, file: !44, line: 936, baseType: !3366, size: 192, offset: 832)
!3366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3367)
!3367 = !{!3368, !3369, !3370, !3371, !3372, !3373}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3366, file: !44, line: 886, baseType: !3177)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3366, file: !44, line: 887, baseType: !1686, size: 64)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3366, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3366, file: !44, line: 889, baseType: !623, size: 32, offset: 96)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3366, file: !44, line: 889, baseType: !623, size: 32, offset: 128)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3366, file: !44, line: 890, baseType: !378, size: 32, offset: 160)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !541, file: !44, line: 937, baseType: !1762, size: 64, offset: 1024)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !541, file: !44, line: 938, baseType: !3376, size: 256, offset: 1088)
!3376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3377)
!3377 = !{!3378, !3379, !3380, !3381, !3382, !3383}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3376, file: !44, line: 897, baseType: !350, size: 64)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3376, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3376, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3376, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3376, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3376, file: !44, line: 904, baseType: !717, size: 64, offset: 192)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !541, file: !44, line: 940, baseType: !609, size: 64, offset: 1344)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !541, file: !44, line: 945, baseType: !351, size: 64, offset: 1408)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !541, file: !44, line: 949, baseType: !382, size: 128, offset: 1472)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !541, file: !44, line: 950, baseType: !382, size: 128, offset: 1600)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !541, file: !44, line: 952, baseType: !920, size: 64, offset: 1728)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !541, file: !44, line: 953, baseType: !1131, size: 32, offset: 1792)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !541, file: !44, line: 954, baseType: !1131, size: 32, offset: 1824)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !531, file: !489, line: 174, baseType: !537, size: 64, offset: 320)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !531, file: !489, line: 176, baseType: !3393, size: 64, offset: 384)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 64)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!378, !540, !416, !530, !1203}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !519, file: !489, line: 90, baseType: !514, size: 64, offset: 192)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !519, file: !489, line: 91, baseType: !3398, size: 64, offset: 256)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !479, file: !409, line: 143, baseType: !3400, size: 64, offset: 256)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{!3403, !416}
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 64)
!3404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3405)
!3405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3406)
!3406 = !{!3407, !3408, !3412, !3416, !3422, !3426}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3405, file: !61, line: 40, baseType: !60, size: 32)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3405, file: !61, line: 41, baseType: !3409, size: 64, offset: 64)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!396}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3405, file: !61, line: 42, baseType: !3413, size: 64, offset: 128)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!351}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3405, file: !61, line: 43, baseType: !3417, size: 64, offset: 192)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!2341, !3420}
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3405, file: !61, line: 44, baseType: !3423, size: 64, offset: 256)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{!2341}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3405, file: !61, line: 45, baseType: !656, size: 64, offset: 320)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !479, file: !409, line: 144, baseType: !3428, size: 64, offset: 320)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{!2341, !416}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !479, file: !409, line: 145, baseType: !3432, size: 64, offset: 384)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{null, !416, !3435, !3436}
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !408, file: !409, line: 70, baseType: !3438, size: 64, offset: 384)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !805, line: 123, size: 1024, elements: !3440)
!3440 = !{!3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3569, !3570, !3571, !3572, !3573}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3439, file: !805, line: 124, baseType: !374, size: 32)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3439, file: !805, line: 125, baseType: !374, size: 32, offset: 32)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3439, file: !805, line: 135, baseType: !3438, size: 64, offset: 64)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3439, file: !805, line: 136, baseType: !412, size: 64, offset: 128)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3439, file: !805, line: 138, baseType: !942, size: 192, align: 64, offset: 192)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3439, file: !805, line: 140, baseType: !2341, size: 64, offset: 384)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3439, file: !805, line: 141, baseType: !7, size: 32, offset: 448)
!3448 = !DIDerivedType(tag: DW_TAG_member, scope: !3439, file: !805, line: 142, baseType: !3449, size: 256, offset: 512)
!3449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3439, file: !805, line: 142, size: 256, elements: !3450)
!3450 = !{!3451, !3497, !3501}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3449, file: !805, line: 143, baseType: !3452, size: 192)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !805, line: 91, size: 192, elements: !3453)
!3453 = !{!3454, !3455, !3456}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3452, file: !805, line: 92, baseType: !350, size: 64)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3452, file: !805, line: 94, baseType: !938, size: 64, offset: 64)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3452, file: !805, line: 100, baseType: !3457, size: 64, offset: 128)
!3457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3458, size: 64)
!3458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !805, line: 180, size: 704, elements: !3459)
!3459 = !{!3460, !3461, !3462, !3469, !3470, !3471, !3495, !3496}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3458, file: !805, line: 182, baseType: !3438, size: 64)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3458, file: !805, line: 183, baseType: !7, size: 32, offset: 64)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3458, file: !805, line: 186, baseType: !3463, size: 192, offset: 128)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3464, line: 19, size: 192, elements: !3465)
!3464 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3465 = !{!3466, !3467, !3468}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3463, file: !3464, line: 20, baseType: !925, size: 128)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3463, file: !3464, line: 21, baseType: !7, size: 32, offset: 128)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3463, file: !3464, line: 22, baseType: !7, size: 32, offset: 160)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3458, file: !805, line: 187, baseType: !603, size: 32, offset: 320)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3458, file: !805, line: 188, baseType: !603, size: 32, offset: 352)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3458, file: !805, line: 189, baseType: !3472, size: 64, offset: 384)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !805, line: 168, size: 320, elements: !3474)
!3474 = !{!3475, !3479, !3483, !3487, !3491}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3473, file: !805, line: 169, baseType: !3476, size: 64)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = !DISubroutineType(types: !3478)
!3478 = !{!378, !897, !3457}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3473, file: !805, line: 171, baseType: !3480, size: 64, offset: 64)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!378, !3438, !412, !504}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3473, file: !805, line: 173, baseType: !3484, size: 64, offset: 128)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!378, !3438}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3473, file: !805, line: 174, baseType: !3488, size: 64, offset: 192)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!378, !3438, !3438, !412}
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3473, file: !805, line: 176, baseType: !3492, size: 64, offset: 256)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 64)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{!378, !897, !3438, !3457}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3458, file: !805, line: 192, baseType: !382, size: 128, offset: 448)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3458, file: !805, line: 194, baseType: !1696, size: 128, offset: 576)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3449, file: !805, line: 144, baseType: !3498, size: 64)
!3498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !805, line: 103, size: 64, elements: !3499)
!3499 = !{!3500}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3498, file: !805, line: 104, baseType: !3438, size: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3449, file: !805, line: 145, baseType: !3502, size: 256)
!3502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !805, line: 107, size: 256, elements: !3503)
!3503 = !{!3504, !3564, !3567, !3568}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3502, file: !805, line: 108, baseType: !3505, size: 64)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3507)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !805, line: 217, size: 768, elements: !3508)
!3508 = !{!3509, !3529, !3533, !3537, !3541, !3545, !3549, !3553, !3554, !3555, !3556, !3560}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3507, file: !805, line: 222, baseType: !3510, size: 64)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!378, !3513}
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !805, line: 197, size: 1088, elements: !3515)
!3515 = !{!3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3514, file: !805, line: 199, baseType: !3438, size: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3514, file: !805, line: 200, baseType: !540, size: 64, offset: 64)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3514, file: !805, line: 201, baseType: !897, size: 64, offset: 128)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3514, file: !805, line: 202, baseType: !351, size: 64, offset: 192)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3514, file: !805, line: 205, baseType: !1395, size: 192, offset: 256)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3514, file: !805, line: 206, baseType: !1395, size: 192, offset: 448)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3514, file: !805, line: 207, baseType: !378, size: 32, offset: 640)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3514, file: !805, line: 208, baseType: !382, size: 128, offset: 704)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3514, file: !805, line: 209, baseType: !464, size: 64, offset: 832)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3514, file: !805, line: 211, baseType: !510, size: 64, offset: 896)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3514, file: !805, line: 212, baseType: !396, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3514, file: !805, line: 213, baseType: !396, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3514, file: !805, line: 214, baseType: !1231, size: 64, offset: 1024)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3507, file: !805, line: 223, baseType: !3530, size: 64, offset: 64)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DISubroutineType(types: !3532)
!3532 = !{null, !3513}
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3507, file: !805, line: 236, baseType: !3534, size: 64, offset: 128)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!378, !897, !351}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3507, file: !805, line: 238, baseType: !3538, size: 64, offset: 192)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = !DISubroutineType(types: !3540)
!3540 = !{!351, !897, !3090}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3507, file: !805, line: 239, baseType: !3542, size: 64, offset: 256)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!351, !897, !351, !3090}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3507, file: !805, line: 240, baseType: !3546, size: 64, offset: 320)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3547 = !DISubroutineType(types: !3548)
!3548 = !{null, !897, !351}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3507, file: !805, line: 242, baseType: !3550, size: 64, offset: 384)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{!495, !3513, !464, !510, !717}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3507, file: !805, line: 252, baseType: !510, size: 64, offset: 448)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3507, file: !805, line: 259, baseType: !396, size: 8, offset: 512)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3507, file: !805, line: 260, baseType: !3550, size: 64, offset: 576)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3507, file: !805, line: 263, baseType: !3557, size: 64, offset: 640)
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 64)
!3558 = !DISubroutineType(types: !3559)
!3559 = !{!3119, !3513, !3121}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3507, file: !805, line: 266, baseType: !3561, size: 64, offset: 704)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{!378, !3513, !1203}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3502, file: !805, line: 109, baseType: !3565, size: 64, offset: 64)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !805, line: 31, flags: DIFlagFwdDecl)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3502, file: !805, line: 110, baseType: !717, size: 64, offset: 128)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3502, file: !805, line: 111, baseType: !3438, size: 64, offset: 192)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3439, file: !805, line: 148, baseType: !351, size: 64, offset: 768)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3439, file: !805, line: 154, baseType: !609, size: 64, offset: 832)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3439, file: !805, line: 156, baseType: !505, size: 16, offset: 896)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3439, file: !805, line: 157, baseType: !504, size: 16, offset: 912)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3439, file: !805, line: 158, baseType: !3574, size: 64, offset: 960)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !805, line: 32, flags: DIFlagFwdDecl)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !408, file: !409, line: 71, baseType: !365, size: 32, offset: 448)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !408, file: !409, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !408, file: !409, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !408, file: !409, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !408, file: !409, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !408, file: !409, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !405, file: !73, line: 463, baseType: !404, size: 64, offset: 512)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !405, file: !73, line: 465, baseType: !3584, size: 64, offset: 576)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !405, file: !73, line: 467, baseType: !412, size: 64, offset: 640)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !405, file: !73, line: 468, baseType: !3588, size: 64, offset: 704)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3590)
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3591)
!3591 = !{!3592, !3593, !3594, !3598, !3603, !3607}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3590, file: !73, line: 88, baseType: !412, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3590, file: !73, line: 89, baseType: !516, size: 64, offset: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3590, file: !73, line: 90, baseType: !3595, size: 64, offset: 128)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 64)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{!378, !404, !459}
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3590, file: !73, line: 91, baseType: !3599, size: 64, offset: 192)
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{!464, !404, !3602, !3435, !3436}
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3590, file: !73, line: 93, baseType: !3604, size: 64, offset: 256)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{null, !404}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3590, file: !73, line: 95, baseType: !3608, size: 64, offset: 320)
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3610)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3611)
!3611 = !{!3612, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3610, file: !80, line: 279, baseType: !3613, size: 64)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!378, !404}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3610, file: !80, line: 280, baseType: !3604, size: 64, offset: 64)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3610, file: !80, line: 281, baseType: !3613, size: 64, offset: 128)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3610, file: !80, line: 282, baseType: !3613, size: 64, offset: 192)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3610, file: !80, line: 283, baseType: !3613, size: 64, offset: 256)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3610, file: !80, line: 284, baseType: !3613, size: 64, offset: 320)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3610, file: !80, line: 285, baseType: !3613, size: 64, offset: 384)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3610, file: !80, line: 286, baseType: !3613, size: 64, offset: 448)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3610, file: !80, line: 287, baseType: !3613, size: 64, offset: 512)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3610, file: !80, line: 288, baseType: !3613, size: 64, offset: 576)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3610, file: !80, line: 289, baseType: !3613, size: 64, offset: 640)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3610, file: !80, line: 290, baseType: !3613, size: 64, offset: 704)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3610, file: !80, line: 291, baseType: !3613, size: 64, offset: 768)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3610, file: !80, line: 292, baseType: !3613, size: 64, offset: 832)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3610, file: !80, line: 293, baseType: !3613, size: 64, offset: 896)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3610, file: !80, line: 294, baseType: !3613, size: 64, offset: 960)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3610, file: !80, line: 295, baseType: !3613, size: 64, offset: 1024)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3610, file: !80, line: 296, baseType: !3613, size: 64, offset: 1088)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3610, file: !80, line: 297, baseType: !3613, size: 64, offset: 1152)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3610, file: !80, line: 298, baseType: !3613, size: 64, offset: 1216)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3610, file: !80, line: 299, baseType: !3613, size: 64, offset: 1280)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3610, file: !80, line: 300, baseType: !3613, size: 64, offset: 1344)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3610, file: !80, line: 301, baseType: !3613, size: 64, offset: 1408)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !405, file: !73, line: 470, baseType: !3639, size: 64, offset: 768)
!3639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3640, size: 64)
!3640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3641, line: 82, size: 1408, elements: !3642)
!3641 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3642 = !{!3643, !3644, !3645, !3646, !3647, !3648, !3649, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3724, !3727, !3728}
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3640, file: !3641, line: 83, baseType: !412, size: 64)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3640, file: !3641, line: 84, baseType: !412, size: 64, offset: 64)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3640, file: !3641, line: 85, baseType: !404, size: 64, offset: 128)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3640, file: !3641, line: 86, baseType: !516, size: 64, offset: 192)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3640, file: !3641, line: 87, baseType: !516, size: 64, offset: 256)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3640, file: !3641, line: 88, baseType: !516, size: 64, offset: 320)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3640, file: !3641, line: 90, baseType: !3650, size: 64, offset: 384)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{!378, !404, !3653}
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3655)
!3655 = !{!3656, !3657, !3658, !3659, !3660, !3661, !3662, !3675, !3688, !3689, !3690, !3691, !3692, !3700, !3701, !3702, !3703, !3704, !3705}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3654, file: !67, line: 96, baseType: !412, size: 64)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3654, file: !67, line: 97, baseType: !3639, size: 64, offset: 64)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3654, file: !67, line: 99, baseType: !345, size: 64, offset: 128)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3654, file: !67, line: 100, baseType: !412, size: 64, offset: 192)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3654, file: !67, line: 102, baseType: !396, size: 8, offset: 256)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3654, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3654, file: !67, line: 105, baseType: !3663, size: 64, offset: 320)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3665)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3666, line: 262, size: 1600, elements: !3667)
!3666 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3667 = !{!3668, !3669, !3670, !3674}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3665, file: !3666, line: 263, baseType: !2914, size: 256)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3665, file: !3666, line: 264, baseType: !2914, size: 256, offset: 256)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3665, file: !3666, line: 265, baseType: !3671, size: 1024, offset: 512)
!3671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 1024, elements: !3672)
!3672 = !{!3673}
!3673 = !DISubrange(count: 128)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3665, file: !3666, line: 266, baseType: !2341, size: 64, offset: 1536)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3654, file: !67, line: 106, baseType: !3676, size: 64, offset: 384)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3678)
!3678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3666, line: 210, size: 256, elements: !3679)
!3679 = !{!3680, !3684, !3686, !3687}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3678, file: !3666, line: 211, baseType: !3681, size: 72)
!3681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1568, size: 72, elements: !3682)
!3682 = !{!3683}
!3683 = !DISubrange(count: 9)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3678, file: !3666, line: 212, baseType: !3685, size: 64, offset: 128)
!3685 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3666, line: 14, baseType: !350)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3678, file: !3666, line: 213, baseType: !605, size: 32, offset: 192)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3678, file: !3666, line: 214, baseType: !605, size: 32, offset: 224)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3654, file: !67, line: 108, baseType: !3613, size: 64, offset: 448)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3654, file: !67, line: 109, baseType: !3604, size: 64, offset: 512)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3654, file: !67, line: 110, baseType: !3613, size: 64, offset: 576)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3654, file: !67, line: 111, baseType: !3604, size: 64, offset: 640)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3654, file: !67, line: 112, baseType: !3693, size: 64, offset: 704)
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 64)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{!378, !404, !3696}
!3696 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3697)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3698)
!3698 = !{!3699}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3697, file: !80, line: 51, baseType: !378, size: 32)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3654, file: !67, line: 113, baseType: !3613, size: 64, offset: 768)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3654, file: !67, line: 114, baseType: !516, size: 64, offset: 832)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3654, file: !67, line: 115, baseType: !516, size: 64, offset: 896)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3654, file: !67, line: 117, baseType: !3608, size: 64, offset: 960)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3654, file: !67, line: 118, baseType: !3604, size: 64, offset: 1024)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3654, file: !67, line: 120, baseType: !3706, size: 64, offset: 1088)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3640, file: !3641, line: 91, baseType: !3595, size: 64, offset: 448)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3640, file: !3641, line: 92, baseType: !3613, size: 64, offset: 512)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3640, file: !3641, line: 93, baseType: !3604, size: 64, offset: 576)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3640, file: !3641, line: 94, baseType: !3613, size: 64, offset: 640)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3640, file: !3641, line: 95, baseType: !3604, size: 64, offset: 704)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3640, file: !3641, line: 97, baseType: !3613, size: 64, offset: 768)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3640, file: !3641, line: 98, baseType: !3613, size: 64, offset: 832)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3640, file: !3641, line: 100, baseType: !3693, size: 64, offset: 896)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3640, file: !3641, line: 101, baseType: !3613, size: 64, offset: 960)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3640, file: !3641, line: 103, baseType: !3613, size: 64, offset: 1024)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3640, file: !3641, line: 105, baseType: !3613, size: 64, offset: 1088)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3640, file: !3641, line: 107, baseType: !3608, size: 64, offset: 1152)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3640, file: !3641, line: 109, baseType: !3721, size: 64, offset: 1216)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3723)
!3723 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3641, line: 109, flags: DIFlagFwdDecl)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3640, file: !3641, line: 111, baseType: !3725, size: 64, offset: 1280)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3641, line: 111, flags: DIFlagFwdDecl)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3640, file: !3641, line: 112, baseType: !831, offset: 1344)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3640, file: !3641, line: 114, baseType: !396, size: 8, offset: 1344)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !405, file: !73, line: 471, baseType: !3653, size: 64, offset: 832)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !405, file: !73, line: 473, baseType: !351, size: 64, offset: 896)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !405, file: !73, line: 475, baseType: !351, size: 64, offset: 960)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !405, file: !73, line: 480, baseType: !1395, size: 192, offset: 1024)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !405, file: !73, line: 484, baseType: !3734, size: 576, offset: 1216)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3735)
!3735 = !{!3736, !3737, !3738, !3739, !3740, !3741}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3734, file: !73, line: 362, baseType: !382, size: 128)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3734, file: !73, line: 363, baseType: !382, size: 128, offset: 128)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3734, file: !73, line: 364, baseType: !382, size: 128, offset: 256)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3734, file: !73, line: 365, baseType: !382, size: 128, offset: 384)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3734, file: !73, line: 366, baseType: !396, size: 8, offset: 512)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3734, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !405, file: !73, line: 485, baseType: !3743, size: 2304, offset: 1792)
!3743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3744)
!3744 = !{!3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3840, !3844}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3743, file: !80, line: 566, baseType: !3696, size: 32)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3743, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3743, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3743, file: !80, line: 569, baseType: !396, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3743, file: !80, line: 570, baseType: !396, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3743, file: !80, line: 571, baseType: !396, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3743, file: !80, line: 572, baseType: !396, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3743, file: !80, line: 573, baseType: !396, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3743, file: !80, line: 574, baseType: !396, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3743, file: !80, line: 575, baseType: !396, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3743, file: !80, line: 576, baseType: !396, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3743, file: !80, line: 577, baseType: !603, size: 32, offset: 64)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3743, file: !80, line: 578, baseType: !423, offset: 96)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3743, file: !80, line: 580, baseType: !382, size: 128, offset: 128)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3743, file: !80, line: 581, baseType: !1717, size: 192, offset: 256)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3743, file: !80, line: 582, baseType: !3761, size: 64, offset: 448)
!3761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3762, size: 64)
!3762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3763, line: 43, size: 1472, elements: !3764)
!3763 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3764 = !{!3765, !3766, !3767, !3768, !3769, !3772, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797}
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3762, file: !3763, line: 44, baseType: !412, size: 64)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3762, file: !3763, line: 45, baseType: !378, size: 32, offset: 64)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3762, file: !3763, line: 46, baseType: !382, size: 128, offset: 128)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3762, file: !3763, line: 47, baseType: !423, offset: 256)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3762, file: !3763, line: 48, baseType: !3770, size: 64, offset: 256)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3762, file: !3763, line: 49, baseType: !3773, size: 320, offset: 320)
!3773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3774, line: 11, size: 320, elements: !3775)
!3774 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3775 = !{!3776, !3777, !3778, !3783}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3773, file: !3774, line: 16, baseType: !825, size: 128)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3773, file: !3774, line: 17, baseType: !350, size: 64, offset: 128)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3773, file: !3774, line: 18, baseType: !3779, size: 64, offset: 192)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{null, !3782}
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3773, file: !3774, line: 19, baseType: !603, size: 32, offset: 256)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3762, file: !3763, line: 50, baseType: !350, size: 64, offset: 640)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3762, file: !3763, line: 51, baseType: !1515, size: 64, offset: 704)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3762, file: !3763, line: 52, baseType: !1515, size: 64, offset: 768)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3762, file: !3763, line: 53, baseType: !1515, size: 64, offset: 832)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3762, file: !3763, line: 54, baseType: !1515, size: 64, offset: 896)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3762, file: !3763, line: 55, baseType: !1515, size: 64, offset: 960)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3762, file: !3763, line: 56, baseType: !350, size: 64, offset: 1024)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3762, file: !3763, line: 57, baseType: !350, size: 64, offset: 1088)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3762, file: !3763, line: 58, baseType: !350, size: 64, offset: 1152)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3762, file: !3763, line: 59, baseType: !350, size: 64, offset: 1216)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3762, file: !3763, line: 60, baseType: !350, size: 64, offset: 1280)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3762, file: !3763, line: 61, baseType: !404, size: 64, offset: 1344)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3762, file: !3763, line: 62, baseType: !396, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3762, file: !3763, line: 63, baseType: !396, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3743, file: !80, line: 583, baseType: !396, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3743, file: !80, line: 584, baseType: !396, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3743, file: !80, line: 585, baseType: !396, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3743, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3743, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3743, file: !80, line: 592, baseType: !1507, size: 512, offset: 576)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3743, file: !80, line: 593, baseType: !609, size: 64, offset: 1088)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3743, file: !80, line: 594, baseType: !2173, size: 256, offset: 1152)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3743, file: !80, line: 595, baseType: !1696, size: 128, offset: 1408)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3743, file: !80, line: 596, baseType: !3770, size: 64, offset: 1536)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3743, file: !80, line: 597, baseType: !374, size: 32, offset: 1600)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3743, file: !80, line: 598, baseType: !374, size: 32, offset: 1632)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3743, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3743, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3743, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3743, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3743, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3743, file: !80, line: 604, baseType: !396, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3743, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3743, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3743, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3743, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3743, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3743, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3743, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3743, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3743, file: !80, line: 613, baseType: !378, size: 32, offset: 1792)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3743, file: !80, line: 614, baseType: !378, size: 32, offset: 1824)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3743, file: !80, line: 615, baseType: !609, size: 64, offset: 1856)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3743, file: !80, line: 616, baseType: !609, size: 64, offset: 1920)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3743, file: !80, line: 617, baseType: !609, size: 64, offset: 1984)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3743, file: !80, line: 618, baseType: !609, size: 64, offset: 2048)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3743, file: !80, line: 620, baseType: !3831, size: 64, offset: 2112)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3833)
!3833 = !{!3834, !3835, !3836, !3837}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3832, file: !80, line: 537, baseType: !423)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3832, file: !80, line: 538, baseType: !7, size: 32)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3832, file: !80, line: 540, baseType: !382, size: 128, offset: 64)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3832, file: !80, line: 543, baseType: !3838, size: 64, offset: 192)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3743, file: !80, line: 621, baseType: !3841, size: 64, offset: 2176)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{null, !404, !1659}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3743, file: !80, line: 622, baseType: !3845, size: 64, offset: 2240)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !405, file: !73, line: 486, baseType: !3848, size: 64, offset: 4096)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3850)
!3850 = !{!3851, !3852, !3853, !3857, !3858, !3859}
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3849, file: !80, line: 643, baseType: !3610, size: 1472)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3849, file: !80, line: 644, baseType: !3613, size: 64, offset: 1472)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3849, file: !80, line: 645, baseType: !3854, size: 64, offset: 1536)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{null, !404, !396}
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3849, file: !80, line: 646, baseType: !3613, size: 64, offset: 1600)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3849, file: !80, line: 647, baseType: !3604, size: 64, offset: 1664)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3849, file: !80, line: 648, baseType: !3604, size: 64, offset: 1728)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !405, file: !73, line: 493, baseType: !3861, size: 64, offset: 4160)
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3862, size: 64)
!3862 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 493, flags: DIFlagFwdDecl)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !405, file: !73, line: 499, baseType: !382, size: 128, offset: 4224)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !405, file: !73, line: 502, baseType: !3865, size: 64, offset: 4352)
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3867)
!3867 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !405, file: !73, line: 504, baseType: !3869, size: 64, offset: 4416)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !405, file: !73, line: 505, baseType: !609, size: 64, offset: 4480)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !405, file: !73, line: 510, baseType: !609, size: 64, offset: 4544)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !405, file: !73, line: 511, baseType: !3873, size: 64, offset: 4608)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3875)
!3875 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !405, file: !73, line: 513, baseType: !3877, size: 64, offset: 4672)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3879)
!3879 = !{!3880, !3881}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3878, file: !73, line: 293, baseType: !7, size: 32)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3878, file: !73, line: 294, baseType: !350, size: 64, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !405, file: !73, line: 515, baseType: !382, size: 128, offset: 4736)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !405, file: !73, line: 526, baseType: !3884, offset: 4864)
!3884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3885, line: 5, elements: !437)
!3885 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !405, file: !73, line: 528, baseType: !3887, size: 64, offset: 4864)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3889, line: 51, size: 1344, elements: !3890)
!3889 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3890 = !{!3891, !3892, !3894, !3895, !3985, !3994, !3995, !3996, !3997, !3998, !3999, !4000}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3888, file: !3889, line: 52, baseType: !412, size: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3888, file: !3889, line: 53, baseType: !3893, size: 32, offset: 64)
!3893 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3889, line: 28, baseType: !603)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3888, file: !3889, line: 54, baseType: !412, size: 64, offset: 128)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3888, file: !3889, line: 55, baseType: !3896, size: 192, offset: 192)
!3896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3897, line: 17, size: 192, elements: !3898)
!3897 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3898 = !{!3899, !3901, !3984}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3896, file: !3897, line: 18, baseType: !3900, size: 64)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3896, file: !3897, line: 19, baseType: !3902, size: 64, offset: 64)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3904)
!3904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3897, line: 110, size: 1152, elements: !3905)
!3905 = !{!3906, !3910, !3914, !3920, !3926, !3930, !3934, !3939, !3943, !3944, !3948, !3952, !3956, !3967, !3968, !3969, !3970, !3980}
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3904, file: !3897, line: 111, baseType: !3907, size: 64)
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{!3900, !3900}
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3904, file: !3897, line: 112, baseType: !3911, size: 64, offset: 64)
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3912, size: 64)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{null, !3900}
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3904, file: !3897, line: 113, baseType: !3915, size: 64, offset: 128)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{!396, !3918}
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3896)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3904, file: !3897, line: 114, baseType: !3921, size: 64, offset: 192)
!3921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3922, size: 64)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{!2341, !3918, !3924}
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3904, file: !3897, line: 116, baseType: !3927, size: 64, offset: 256)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 64)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{!396, !3918, !412}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3904, file: !3897, line: 118, baseType: !3931, size: 64, offset: 320)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3932, size: 64)
!3932 = !DISubroutineType(types: !3933)
!3933 = !{!378, !3918, !412, !7, !351, !510}
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3904, file: !3897, line: 123, baseType: !3935, size: 64, offset: 384)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!378, !3918, !412, !3938, !510}
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3904, file: !3897, line: 126, baseType: !3940, size: 64, offset: 448)
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 64)
!3941 = !DISubroutineType(types: !3942)
!3942 = !{!412, !3918}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3904, file: !3897, line: 127, baseType: !3940, size: 64, offset: 512)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3904, file: !3897, line: 128, baseType: !3945, size: 64, offset: 576)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = !DISubroutineType(types: !3947)
!3947 = !{!3900, !3918}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3904, file: !3897, line: 130, baseType: !3949, size: 64, offset: 640)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!3900, !3918, !3900}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3904, file: !3897, line: 133, baseType: !3953, size: 64, offset: 704)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = !DISubroutineType(types: !3955)
!3955 = !{!3900, !3918, !412}
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3904, file: !3897, line: 135, baseType: !3957, size: 64, offset: 768)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{!378, !3918, !412, !412, !7, !7, !3960}
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3897, line: 43, size: 640, elements: !3962)
!3962 = !{!3963, !3964, !3965}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3961, file: !3897, line: 44, baseType: !3900, size: 64)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3961, file: !3897, line: 45, baseType: !7, size: 32, offset: 64)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3961, file: !3897, line: 46, baseType: !3966, size: 512, offset: 128)
!3966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !609, size: 512, elements: !1545)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3904, file: !3897, line: 140, baseType: !3949, size: 64, offset: 832)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3904, file: !3897, line: 143, baseType: !3945, size: 64, offset: 896)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3904, file: !3897, line: 145, baseType: !3907, size: 64, offset: 960)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3904, file: !3897, line: 146, baseType: !3971, size: 64, offset: 1024)
!3971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3972, size: 64)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{!378, !3918, !3974}
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3897, line: 29, size: 128, elements: !3976)
!3976 = !{!3977, !3978, !3979}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3975, file: !3897, line: 30, baseType: !7, size: 32)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3975, file: !3897, line: 31, baseType: !7, size: 32, offset: 32)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3975, file: !3897, line: 32, baseType: !3918, size: 64, offset: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3904, file: !3897, line: 148, baseType: !3981, size: 64, offset: 1088)
!3981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3982, size: 64)
!3982 = !DISubroutineType(types: !3983)
!3983 = !{!378, !3918, !404}
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3896, file: !3897, line: 20, baseType: !404, size: 64, offset: 128)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3888, file: !3889, line: 57, baseType: !3986, size: 64, offset: 384)
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!3987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3889, line: 31, size: 704, elements: !3988)
!3988 = !{!3989, !3990, !3991, !3992, !3993}
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3987, file: !3889, line: 32, baseType: !464, size: 64)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3987, file: !3889, line: 33, baseType: !378, size: 32, offset: 64)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3987, file: !3889, line: 34, baseType: !351, size: 64, offset: 128)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3987, file: !3889, line: 35, baseType: !3986, size: 64, offset: 192)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3987, file: !3889, line: 43, baseType: !531, size: 448, offset: 256)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3888, file: !3889, line: 58, baseType: !3986, size: 64, offset: 448)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3888, file: !3889, line: 59, baseType: !3887, size: 64, offset: 512)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3888, file: !3889, line: 60, baseType: !3887, size: 64, offset: 576)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3888, file: !3889, line: 61, baseType: !3887, size: 64, offset: 640)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3888, file: !3889, line: 63, baseType: !408, size: 512, offset: 704)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3888, file: !3889, line: 65, baseType: !350, size: 64, offset: 1216)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3888, file: !3889, line: 66, baseType: !351, size: 64, offset: 1280)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !405, file: !73, line: 529, baseType: !3900, size: 64, offset: 4928)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !405, file: !73, line: 534, baseType: !699, size: 32, offset: 4992)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !405, file: !73, line: 535, baseType: !603, size: 32, offset: 5024)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !405, file: !73, line: 537, baseType: !423, offset: 5056)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !405, file: !73, line: 538, baseType: !382, size: 128, offset: 5056)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !405, file: !73, line: 540, baseType: !4007, size: 64, offset: 5184)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4009, line: 54, size: 960, elements: !4010)
!4009 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4010 = !{!4011, !4012, !4013, !4014, !4015, !4016, !4017, !4021, !4025, !4026, !4027, !4028, !4032, !4036, !4037}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4008, file: !4009, line: 55, baseType: !412, size: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4008, file: !4009, line: 56, baseType: !345, size: 64, offset: 64)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4008, file: !4009, line: 58, baseType: !516, size: 64, offset: 128)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4008, file: !4009, line: 59, baseType: !516, size: 64, offset: 192)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4008, file: !4009, line: 60, baseType: !416, size: 64, offset: 256)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4008, file: !4009, line: 62, baseType: !3595, size: 64, offset: 320)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4008, file: !4009, line: 63, baseType: !4018, size: 64, offset: 384)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{!464, !404, !3602}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4008, file: !4009, line: 65, baseType: !4022, size: 64, offset: 448)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{null, !4007}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4008, file: !4009, line: 66, baseType: !3604, size: 64, offset: 512)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4008, file: !4009, line: 68, baseType: !3613, size: 64, offset: 576)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4008, file: !4009, line: 70, baseType: !3403, size: 64, offset: 640)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4008, file: !4009, line: 71, baseType: !4029, size: 64, offset: 704)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{!2341, !404}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4008, file: !4009, line: 73, baseType: !4033, size: 64, offset: 768)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{null, !404, !3435, !3436}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4008, file: !4009, line: 75, baseType: !3608, size: 64, offset: 832)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4008, file: !4009, line: 77, baseType: !3725, size: 64, offset: 896)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !405, file: !73, line: 541, baseType: !516, size: 64, offset: 5248)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !405, file: !73, line: 543, baseType: !3604, size: 64, offset: 5312)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !405, file: !73, line: 544, baseType: !4041, size: 64, offset: 5376)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !405, file: !73, line: 545, baseType: !4044, size: 64, offset: 5440)
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !405, file: !73, line: 547, baseType: !396, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !405, file: !73, line: 548, baseType: !396, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !405, file: !73, line: 549, baseType: !396, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !405, file: !73, line: 550, baseType: !396, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !399, file: !94, line: 332, baseType: !4051, size: 32, offset: 128)
!4051 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cookie_t", file: !94, line: 22, baseType: !1659)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "completed_cookie", scope: !399, file: !94, line: 333, baseType: !4051, size: 32, offset: 160)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "chan_id", scope: !399, file: !94, line: 336, baseType: !378, size: 32, offset: 192)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !399, file: !94, line: 337, baseType: !4055, size: 64, offset: 256)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_dev", file: !94, line: 361, size: 5696, elements: !4057)
!4057 = !{!4058, !4059, !4060}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4056, file: !94, line: 362, baseType: !398, size: 64)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4056, file: !94, line: 363, baseType: !405, size: 5568, offset: 64)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4056, file: !94, line: 364, baseType: !378, size: 32, offset: 5632)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !399, file: !94, line: 338, baseType: !412, size: 64, offset: 320)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "device_node", scope: !399, file: !94, line: 343, baseType: !382, size: 128, offset: 384)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !399, file: !94, line: 344, baseType: !4064, size: 64, offset: 512)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_percpu", file: !94, line: 294, size: 128, elements: !4066)
!4066 = !{!4067, !4068}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "memcpy_count", scope: !4065, file: !94, line: 296, baseType: !350, size: 64)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_transferred", scope: !4065, file: !94, line: 297, baseType: !350, size: 64, offset: 64)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "client_count", scope: !399, file: !94, line: 345, baseType: !378, size: 32, offset: 576)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "table_count", scope: !399, file: !94, line: 346, baseType: !378, size: 32, offset: 608)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "router", scope: !399, file: !94, line: 349, baseType: !4072, size: 64, offset: 640)
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4073, size: 64)
!4073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_router", file: !94, line: 305, size: 128, elements: !4074)
!4074 = !{!4075, !4076}
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4073, file: !94, line: 306, baseType: !404, size: 64)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "route_free", scope: !4073, file: !94, line: 307, baseType: !4077, size: 64, offset: 64)
!4077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4078, size: 64)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{null, !404, !351}
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "route_data", scope: !399, file: !94, line: 350, baseType: !351, size: 64, offset: 704)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !399, file: !94, line: 352, baseType: !351, size: 64, offset: 768)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "mapcnt", scope: !389, file: !94, line: 764, baseType: !378, size: 32, offset: 64)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !389, file: !94, line: 765, baseType: !4084, size: 64, offset: 128)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4086)
!4086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_map", file: !94, line: 749, size: 192, elements: !4087)
!4087 = !{!4088, !4089, !4090}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "devname", scope: !4086, file: !94, line: 750, baseType: !412, size: 64)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !4086, file: !94, line: 751, baseType: !412, size: 64, offset: 64)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4086, file: !94, line: 752, baseType: !351, size: 64, offset: 128)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "cap_mask", scope: !362, file: !94, line: 851, baseType: !4092, size: 64, offset: 576)
!4092 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cap_mask_t", file: !94, line: 230, baseType: !4093)
!4093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !94, line: 230, size: 64, elements: !4094)
!4094 = !{!4095}
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !4093, file: !94, line: 230, baseType: !1585, size: 64)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_modes", scope: !362, file: !94, line: 852, baseType: !93, size: 32, offset: 640)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "max_xor", scope: !362, file: !94, line: 853, baseType: !505, size: 16, offset: 672)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "max_pq", scope: !362, file: !94, line: 854, baseType: !505, size: 16, offset: 688)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "copy_align", scope: !362, file: !94, line: 855, baseType: !99, size: 32, offset: 704)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "xor_align", scope: !362, file: !94, line: 856, baseType: !99, size: 32, offset: 736)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "pq_align", scope: !362, file: !94, line: 857, baseType: !99, size: 32, offset: 768)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "fill_align", scope: !362, file: !94, line: 858, baseType: !99, size: 32, offset: 800)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !362, file: !94, line: 861, baseType: !378, size: 32, offset: 832)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !362, file: !94, line: 862, baseType: !404, size: 64, offset: 896)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !362, file: !94, line: 863, baseType: !345, size: 64, offset: 960)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "chan_ida", scope: !362, file: !94, line: 864, baseType: !4107, size: 128, offset: 1024)
!4107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3464, line: 244, size: 128, elements: !4108)
!4108 = !{!4109}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4107, file: !3464, line: 245, baseType: !925, size: 128)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mutex", scope: !362, file: !94, line: 865, baseType: !1395, size: 192, offset: 1152)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !362, file: !94, line: 867, baseType: !603, size: 32, offset: 1344)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !362, file: !94, line: 868, baseType: !603, size: 32, offset: 1376)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !362, file: !94, line: 869, baseType: !603, size: 32, offset: 1408)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !362, file: !94, line: 870, baseType: !603, size: 32, offset: 1440)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !362, file: !94, line: 871, baseType: !603, size: 32, offset: 1472)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !362, file: !94, line: 872, baseType: !603, size: 32, offset: 1504)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !362, file: !94, line: 873, baseType: !396, size: 8, offset: 1536)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !362, file: !94, line: 874, baseType: !108, size: 32, offset: 1568)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "device_alloc_chan_resources", scope: !362, file: !94, line: 876, baseType: !4120, size: 64, offset: 1600)
!4120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4121, size: 64)
!4121 = !DISubroutineType(types: !4122)
!4122 = !{!378, !398}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "device_free_chan_resources", scope: !362, file: !94, line: 877, baseType: !4124, size: 64, offset: 1664)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{null, !398}
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memcpy", scope: !362, file: !94, line: 879, baseType: !4128, size: 64, offset: 1728)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{!4131, !398, !1142, !1142, !510, !350}
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 64)
!4132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_async_tx_descriptor", file: !94, line: 598, size: 704, elements: !4133)
!4133 = !{!4134, !4135, !4136, !4137, !4138, !4142, !4146, !4148, !4159, !4160, !4173, !4174}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !4132, file: !94, line: 599, baseType: !4051, size: 32)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4132, file: !94, line: 600, baseType: !113, size: 32, offset: 32)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !4132, file: !94, line: 601, baseType: !1142, size: 64, offset: 64)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4132, file: !94, line: 602, baseType: !398, size: 64, offset: 128)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "tx_submit", scope: !4132, file: !94, line: 603, baseType: !4139, size: 64, offset: 192)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 64)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!4051, !4131}
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "desc_free", scope: !4132, file: !94, line: 604, baseType: !4143, size: 64, offset: 256)
!4143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4144, size: 64)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{!378, !4131}
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4132, file: !94, line: 605, baseType: !4147, size: 64, offset: 320)
!4147 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback", file: !94, line: 531, baseType: !656)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "callback_result", scope: !4132, file: !94, line: 606, baseType: !4149, size: 64, offset: 384)
!4149 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback_result", file: !94, line: 545, baseType: !4150)
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4151, size: 64)
!4151 = !DISubroutineType(types: !4152)
!4152 = !{null, !351, !4153}
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4154, size: 64)
!4154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4155)
!4155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_result", file: !94, line: 540, size: 64, elements: !4156)
!4156 = !{!4157, !4158}
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4155, file: !94, line: 541, baseType: !125, size: 32)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !4155, file: !94, line: 542, baseType: !603, size: 32, offset: 32)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "callback_param", scope: !4132, file: !94, line: 607, baseType: !351, size: 64, offset: 448)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4132, file: !94, line: 608, baseType: !4161, size: 64, offset: 512)
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_unmap_data", file: !94, line: 548, size: 256, elements: !4163)
!4163 = !{!4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "map_cnt", scope: !4162, file: !94, line: 552, baseType: !1567, size: 8)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "to_cnt", scope: !4162, file: !94, line: 554, baseType: !1567, size: 8, offset: 8)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "from_cnt", scope: !4162, file: !94, line: 555, baseType: !1567, size: 8, offset: 16)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "bidi_cnt", scope: !4162, file: !94, line: 556, baseType: !1567, size: 8, offset: 24)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4162, file: !94, line: 557, baseType: !404, size: 64, offset: 64)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4162, file: !94, line: 558, baseType: !365, size: 32, offset: 128)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4162, file: !94, line: 559, baseType: !510, size: 64, offset: 192)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4162, file: !94, line: 560, baseType: !4172, offset: 256)
!4172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1142, elements: !2545)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_mode", scope: !4132, file: !94, line: 609, baseType: !93, size: 32, offset: 576)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_ops", scope: !4132, file: !94, line: 610, baseType: !4175, size: 64, offset: 640)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_descriptor_metadata_ops", file: !94, line: 565, size: 192, elements: !4177)
!4177 = !{!4178, !4182, !4187}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4176, file: !94, line: 566, baseType: !4179, size: 64)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!378, !4131, !351, !510}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "get_ptr", scope: !4176, file: !94, line: 569, baseType: !4183, size: 64, offset: 64)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{!351, !4131, !4186, !4186}
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "set_len", scope: !4176, file: !94, line: 571, baseType: !4188, size: 64, offset: 128)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!378, !4131, !510}
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor", scope: !362, file: !94, line: 882, baseType: !4192, size: 64, offset: 1792)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!4131, !398, !1142, !4195, !7, !510, !350}
!4195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor_val", scope: !362, file: !94, line: 885, baseType: !4197, size: 64, offset: 1856)
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!4131, !398, !4195, !7, !510, !4200, !350}
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq", scope: !362, file: !94, line: 888, baseType: !4202, size: 64, offset: 1920)
!4202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 64)
!4203 = !DISubroutineType(types: !4204)
!4204 = !{!4131, !398, !4195, !4195, !7, !613, !510, !350}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq_val", scope: !362, file: !94, line: 892, baseType: !4206, size: 64, offset: 1984)
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4207, size: 64)
!4207 = !DISubroutineType(types: !4208)
!4208 = !{!4131, !398, !4195, !4195, !7, !613, !510, !4200, !350}
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset", scope: !362, file: !94, line: 896, baseType: !4210, size: 64, offset: 2048)
!4210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4211, size: 64)
!4211 = !DISubroutineType(types: !4212)
!4212 = !{!4131, !398, !1142, !378, !510, !350}
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset_sg", scope: !362, file: !94, line: 899, baseType: !4214, size: 64, offset: 2112)
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4215, size: 64)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{!4131, !398, !4217, !7, !378, !350}
!4217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4218, size: 64)
!4218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4219, line: 11, size: 256, elements: !4220)
!4219 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4220 = !{!4221, !4222, !4223, !4224, !4225}
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4218, file: !4219, line: 12, baseType: !350, size: 64)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4218, file: !4219, line: 13, baseType: !7, size: 32, offset: 64)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4218, file: !4219, line: 14, baseType: !7, size: 32, offset: 96)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4218, file: !4219, line: 15, baseType: !1142, size: 64, offset: 128)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4218, file: !4219, line: 17, baseType: !7, size: 32, offset: 192)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_interrupt", scope: !362, file: !94, line: 902, baseType: !4227, size: 64, offset: 2176)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 64)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{!4131, !398, !350}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_slave_sg", scope: !362, file: !94, line: 905, baseType: !4231, size: 64, offset: 2240)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 64)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{!4131, !398, !4217, !7, !135, !350, !351}
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_cyclic", scope: !362, file: !94, line: 909, baseType: !4235, size: 64, offset: 2304)
!4235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4236, size: 64)
!4236 = !DISubroutineType(types: !4237)
!4237 = !{!4131, !398, !1142, !510, !510, !135, !350}
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_interleaved_dma", scope: !362, file: !94, line: 913, baseType: !4239, size: 64, offset: 2368)
!4239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 64)
!4240 = !DISubroutineType(types: !4241)
!4241 = !{!4131, !398, !4242, !350}
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4243, size: 64)
!4243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_interleaved_template", file: !94, line: 150, size: 320, elements: !4244)
!4244 = !{!4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254}
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "src_start", scope: !4243, file: !94, line: 151, baseType: !1142, size: 64)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "dst_start", scope: !4243, file: !94, line: 152, baseType: !1142, size: 64, offset: 64)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4243, file: !94, line: 153, baseType: !135, size: 32, offset: 128)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "src_inc", scope: !4243, file: !94, line: 154, baseType: !396, size: 8, offset: 160)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "dst_inc", scope: !4243, file: !94, line: 155, baseType: !396, size: 8, offset: 168)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "src_sgl", scope: !4243, file: !94, line: 156, baseType: !396, size: 8, offset: 176)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "dst_sgl", scope: !4243, file: !94, line: 157, baseType: !396, size: 8, offset: 184)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "numf", scope: !4243, file: !94, line: 158, baseType: !510, size: 64, offset: 192)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !4243, file: !94, line: 159, baseType: !510, size: 64, offset: 256)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !4243, file: !94, line: 160, baseType: !4255, offset: 320)
!4255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4256, elements: !2545)
!4256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_chunk", file: !94, line: 125, size: 256, elements: !4257)
!4257 = !{!4258, !4259, !4260, !4261}
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4256, file: !94, line: 126, baseType: !510, size: 64)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "icg", scope: !4256, file: !94, line: 127, baseType: !510, size: 64, offset: 64)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "dst_icg", scope: !4256, file: !94, line: 128, baseType: !510, size: 64, offset: 128)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "src_icg", scope: !4256, file: !94, line: 129, baseType: !510, size: 64, offset: 192)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_imm_data", scope: !362, file: !94, line: 916, baseType: !4263, size: 64, offset: 2432)
!4263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4264, size: 64)
!4264 = !DISubroutineType(types: !4265)
!4265 = !{!4131, !398, !1142, !609, !350}
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "device_caps", scope: !362, file: !94, line: 920, baseType: !4267, size: 64, offset: 2496)
!4267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4268, size: 64)
!4268 = !DISubroutineType(types: !4269)
!4269 = !{null, !398, !4270}
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4271, size: 64)
!4271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_caps", file: !94, line: 497, size: 288, elements: !4272)
!4272 = !{!4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283}
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !4271, file: !94, line: 498, baseType: !603, size: 32)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !4271, file: !94, line: 499, baseType: !603, size: 32, offset: 32)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !4271, file: !94, line: 500, baseType: !603, size: 32, offset: 64)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !4271, file: !94, line: 501, baseType: !603, size: 32, offset: 96)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !4271, file: !94, line: 502, baseType: !603, size: 32, offset: 128)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !4271, file: !94, line: 503, baseType: !603, size: 32, offset: 160)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pause", scope: !4271, file: !94, line: 504, baseType: !396, size: 8, offset: 192)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_resume", scope: !4271, file: !94, line: 505, baseType: !396, size: 8, offset: 200)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_terminate", scope: !4271, file: !94, line: 506, baseType: !396, size: 8, offset: 208)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !4271, file: !94, line: 507, baseType: !108, size: 32, offset: 224)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !4271, file: !94, line: 508, baseType: !396, size: 8, offset: 256)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "device_config", scope: !362, file: !94, line: 922, baseType: !4285, size: 64, offset: 2560)
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4286, size: 64)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!378, !398, !4288}
!4288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4289, size: 64)
!4289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_config", file: !94, line: 434, size: 448, elements: !4290)
!4290 = !{!4291, !4292, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4300, !4301}
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !4289, file: !94, line: 435, baseType: !135, size: 32)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr", scope: !4289, file: !94, line: 436, baseType: !2339, size: 64, offset: 64)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr", scope: !4289, file: !94, line: 437, baseType: !2339, size: 64, offset: 128)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_width", scope: !4289, file: !94, line: 438, baseType: !142, size: 32, offset: 192)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_width", scope: !4289, file: !94, line: 439, baseType: !142, size: 32, offset: 224)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "src_maxburst", scope: !4289, file: !94, line: 440, baseType: !603, size: 32, offset: 256)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "dst_maxburst", scope: !4289, file: !94, line: 441, baseType: !603, size: 32, offset: 288)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "src_port_window_size", scope: !4289, file: !94, line: 442, baseType: !603, size: 32, offset: 320)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "dst_port_window_size", scope: !4289, file: !94, line: 443, baseType: !603, size: 32, offset: 352)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "device_fc", scope: !4289, file: !94, line: 444, baseType: !396, size: 8, offset: 384)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "slave_id", scope: !4289, file: !94, line: 445, baseType: !7, size: 32, offset: 416)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "device_pause", scope: !362, file: !94, line: 924, baseType: !4120, size: 64, offset: 2624)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "device_resume", scope: !362, file: !94, line: 925, baseType: !4120, size: 64, offset: 2688)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "device_terminate_all", scope: !362, file: !94, line: 926, baseType: !4120, size: 64, offset: 2752)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "device_synchronize", scope: !362, file: !94, line: 927, baseType: !4124, size: 64, offset: 2816)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "device_tx_status", scope: !362, file: !94, line: 929, baseType: !4307, size: 64, offset: 2880)
!4307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4308, size: 64)
!4308 = !DISubroutineType(types: !4309)
!4309 = !{!153, !398, !4051, !4310}
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_tx_state", file: !94, line: 721, size: 128, elements: !4312)
!4312 = !{!4313, !4314, !4315, !4316}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4311, file: !94, line: 722, baseType: !4051, size: 32)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4311, file: !94, line: 723, baseType: !4051, size: 32, offset: 32)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !4311, file: !94, line: 724, baseType: !603, size: 32, offset: 64)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "in_flight_bytes", scope: !4311, file: !94, line: 725, baseType: !603, size: 32, offset: 96)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "device_issue_pending", scope: !362, file: !94, line: 932, baseType: !4124, size: 64, offset: 2944)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "device_release", scope: !362, file: !94, line: 933, baseType: !4319, size: 64, offset: 3008)
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4320, size: 64)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{null, !402}
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !359, file: !3, line: 44, baseType: !423, offset: 3072)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !359, file: !3, line: 45, baseType: !351, size: 64, offset: 3072)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "reg_map", scope: !359, file: !3, line: 46, baseType: !4325, size: 64, offset: 3136)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4327)
!4327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "omap_dma_reg", file: !185, line: 259, size: 32, elements: !4328)
!4328 = !{!4329, !4330, !4331}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4327, file: !185, line: 260, baseType: !1041, size: 16)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !4327, file: !185, line: 261, baseType: !1567, size: 8, offset: 16)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4327, file: !185, line: 262, baseType: !1567, size: 8, offset: 24)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "plat", scope: !359, file: !3, line: 47, baseType: !4333, size: 64, offset: 3200)
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4334, size: 64)
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "omap_system_dma_plat_info", file: !185, line: 269, size: 704, elements: !4335)
!4335 = !{!4336, !4337, !4338, !4345, !4346, !4348, !4350, !4351, !4355, !4359, !4360}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "reg_map", scope: !4334, file: !185, line: 270, baseType: !4325, size: 64)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "channel_stride", scope: !4334, file: !185, line: 271, baseType: !7, size: 32, offset: 64)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "dma_attr", scope: !4334, file: !185, line: 272, baseType: !4339, size: 64, offset: 128)
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 64)
!4340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "omap_dma_dev_attr", file: !185, line: 246, size: 64, elements: !4341)
!4341 = !{!4342, !4343, !4344}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "dev_caps", scope: !4340, file: !185, line: 247, baseType: !603, size: 32)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "lch_count", scope: !4340, file: !185, line: 248, baseType: !1041, size: 16, offset: 32)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "chan_count", scope: !4340, file: !185, line: 249, baseType: !1041, size: 16, offset: 48)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "errata", scope: !4334, file: !185, line: 273, baseType: !603, size: 32, offset: 192)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "show_dma_caps", scope: !4334, file: !185, line: 274, baseType: !4347, size: 64, offset: 256)
!4347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "clear_lch_regs", scope: !4334, file: !185, line: 275, baseType: !4349, size: 64, offset: 320)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "clear_dma", scope: !4334, file: !185, line: 276, baseType: !4349, size: 64, offset: 384)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "dma_write", scope: !4334, file: !185, line: 277, baseType: !4352, size: 64, offset: 448)
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4353, size: 64)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{null, !603, !378, !378}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "dma_read", scope: !4334, file: !185, line: 278, baseType: !4356, size: 64, offset: 512)
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4357, size: 64)
!4357 = !DISubroutineType(types: !4358)
!4358 = !{!603, !378, !378}
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "slave_map", scope: !4334, file: !185, line: 280, baseType: !4084, size: 64, offset: 576)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "slavecnt", scope: !4334, file: !185, line: 281, baseType: !378, size: 32, offset: 640)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !359, file: !3, line: 48, baseType: !4362, size: 64, offset: 3264)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4363, size: 64)
!4363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4364)
!4364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "omap_dma_config", file: !3, line: 27, size: 64, elements: !4365)
!4365 = !{!4366, !4367, !4368, !4369, !4370}
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "lch_end", scope: !4364, file: !3, line: 28, baseType: !378, size: 32)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "rw_priority", scope: !4364, file: !3, line: 29, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "needs_busy_check", scope: !4364, file: !3, line: 30, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "may_lose_context", scope: !4364, file: !3, line: 31, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "needs_lch_clear", scope: !4364, file: !3, line: 32, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !359, file: !3, line: 49, baseType: !4372, size: 192, offset: 3328)
!4372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !4373, line: 54, size: 192, elements: !4374)
!4373 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!4374 = !{!4375, !4381, !4382}
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !4372, file: !4373, line: 55, baseType: !4376, size: 64)
!4376 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !4373, line: 51, baseType: !4377)
!4377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4378, size: 64)
!4378 = !DISubroutineType(types: !4379)
!4379 = !{!378, !4380, !350, !351}
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4372, file: !4373, line: 56, baseType: !4380, size: 64, offset: 64)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !4372, file: !4373, line: 57, baseType: !378, size: 32, offset: 128)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !359, file: !3, line: 50, baseType: !4384, size: 128, offset: 3520)
!4384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "omap_dma_context", file: !3, line: 35, size: 128, elements: !4385)
!4385 = !{!4386, !4387, !4388, !4389}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "irqenable_l0", scope: !4384, file: !3, line: 36, baseType: !603, size: 32)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "irqenable_l1", scope: !4384, file: !3, line: 37, baseType: !603, size: 32, offset: 32)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "ocp_sysconfig", scope: !4384, file: !3, line: 38, baseType: !603, size: 32, offset: 64)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "gcr", scope: !4384, file: !3, line: 39, baseType: !603, size: 32, offset: 96)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "lch_count", scope: !359, file: !3, line: 51, baseType: !378, size: 32, offset: 3648)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "lch_bitmap", scope: !359, file: !3, line: 52, baseType: !1585, size: 64, offset: 3712)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "lch_lock", scope: !359, file: !3, line: 53, baseType: !1395, size: 192, offset: 3776)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !359, file: !3, line: 54, baseType: !396, size: 8, offset: 3968)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "ll123_supported", scope: !359, file: !3, line: 55, baseType: !396, size: 8, offset: 3976)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "desc_pool", scope: !359, file: !3, line: 56, baseType: !4396, size: 64, offset: 4032)
!4396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4397, size: 64)
!4397 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pool", file: !4398, line: 21, flags: DIFlagFwdDecl)
!4398 = !DIFile(filename: "./include/linux/dmapool.h", directory: "/home/lizy2001/genbc/linux")
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "dma_requests", scope: !359, file: !3, line: 57, baseType: !7, size: 32, offset: 4096)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "irq_lock", scope: !359, file: !3, line: 58, baseType: !423, offset: 4128)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable_mask", scope: !359, file: !3, line: 59, baseType: !745, size: 32, offset: 4128)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "lch_map", scope: !359, file: !3, line: 60, baseType: !4403, size: 64, offset: 4160)
!4403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4404, size: 64)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "omap_chan", file: !3, line: 63, size: 2816, elements: !4406)
!4406 = !{!4407, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458, !4501}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "vc", scope: !4405, file: !3, line: 64, baseType: !4408, size: 1920)
!4408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "virt_dma_chan", file: !4409, line: 22, size: 1920, elements: !4410)
!4409 = !DIFile(filename: "drivers/dma/ti/../virt-dma.h", directory: "/home/lizy2001/genbc/linux")
!4410 = !{!4411, !4412, !4432, !4442, !4443, !4444, !4445, !4446, !4447, !4448}
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4408, file: !4409, line: 23, baseType: !399, size: 832)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4408, file: !4409, line: 24, baseType: !4413, size: 320, offset: 832)
!4413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !327, line: 609, size: 320, elements: !4414)
!4414 = !{!4415, !4417, !4418, !4419, !4420, !4431}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4413, file: !327, line: 611, baseType: !4416, size: 64)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4413, size: 64)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4413, file: !327, line: 612, baseType: !350, size: 64, offset: 64)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4413, file: !327, line: 613, baseType: !374, size: 32, offset: 128)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !4413, file: !327, line: 614, baseType: !396, size: 8, offset: 160)
!4420 = !DIDerivedType(tag: DW_TAG_member, scope: !4413, file: !327, line: 615, baseType: !4421, size: 64, offset: 192)
!4421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4413, file: !327, line: 615, size: 64, elements: !4422)
!4422 = !{!4423, !4427}
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4421, file: !327, line: 616, baseType: !4424, size: 64)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 64)
!4425 = !DISubroutineType(types: !4426)
!4426 = !{null, !350}
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4421, file: !327, line: 617, baseType: !4428, size: 64)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = !DISubroutineType(types: !4430)
!4430 = !{null, !4416}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4413, file: !327, line: 619, baseType: !350, size: 64, offset: 256)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "desc_free", scope: !4408, file: !4409, line: 25, baseType: !4433, size: 64, offset: 1152)
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4434, size: 64)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{null, !4436}
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "virt_dma_desc", file: !4409, line: 15, size: 896, elements: !4438)
!4438 = !{!4439, !4440, !4441}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4437, file: !4409, line: 16, baseType: !4132, size: 704)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "tx_result", scope: !4437, file: !4409, line: 17, baseType: !4155, size: 64, offset: 704)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4437, file: !4409, line: 19, baseType: !382, size: 128, offset: 768)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4408, file: !4409, line: 27, baseType: !423, offset: 1216)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "desc_allocated", scope: !4408, file: !4409, line: 30, baseType: !382, size: 128, offset: 1216)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "desc_submitted", scope: !4408, file: !4409, line: 31, baseType: !382, size: 128, offset: 1344)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "desc_issued", scope: !4408, file: !4409, line: 32, baseType: !382, size: 128, offset: 1472)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "desc_completed", scope: !4408, file: !4409, line: 33, baseType: !382, size: 128, offset: 1600)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "desc_terminated", scope: !4408, file: !4409, line: 34, baseType: !382, size: 128, offset: 1728)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic", scope: !4408, file: !4409, line: 36, baseType: !4436, size: 64, offset: 1856)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "channel_base", scope: !4405, file: !3, line: 65, baseType: !351, size: 64, offset: 1920)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "reg_map", scope: !4405, file: !3, line: 66, baseType: !4325, size: 64, offset: 1984)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "ccr", scope: !4405, file: !3, line: 67, baseType: !745, size: 32, offset: 2048)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !4405, file: !3, line: 69, baseType: !4289, size: 448, offset: 2112)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "dma_sig", scope: !4405, file: !3, line: 70, baseType: !7, size: 32, offset: 2560)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic", scope: !4405, file: !3, line: 71, baseType: !396, size: 8, offset: 2592)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "paused", scope: !4405, file: !3, line: 72, baseType: !396, size: 8, offset: 2600)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !4405, file: !3, line: 73, baseType: !396, size: 8, offset: 2608)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ch", scope: !4405, file: !3, line: 75, baseType: !378, size: 32, offset: 2624)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4405, file: !3, line: 76, baseType: !4459, size: 64, offset: 2688)
!4459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4460, size: 64)
!4460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "omap_desc", file: !3, line: 111, size: 1280, elements: !4461)
!4461 = !{!4462, !4463, !4464, !4465, !4466, !4467, !4468, !4470, !4472, !4473, !4475, !4476, !4477, !4478}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !4460, file: !3, line: 112, baseType: !4437, size: 896)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "using_ll", scope: !4460, file: !3, line: 113, baseType: !396, size: 8, offset: 896)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4460, file: !3, line: 114, baseType: !135, size: 32, offset: 928)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !4460, file: !3, line: 115, baseType: !1142, size: 64, offset: 960)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "polled", scope: !4460, file: !3, line: 116, baseType: !396, size: 8, offset: 1024)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "fi", scope: !4460, file: !3, line: 118, baseType: !1799, size: 32, offset: 1056)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "ei", scope: !4460, file: !3, line: 119, baseType: !4469, size: 16, offset: 1088)
!4469 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !349, line: 96, baseType: !1425)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4460, file: !3, line: 120, baseType: !4471, size: 8, offset: 1104)
!4471 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !349, line: 102, baseType: !1567)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "ccr", scope: !4460, file: !3, line: 121, baseType: !745, size: 32, offset: 1120)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "clnk_ctrl", scope: !4460, file: !3, line: 122, baseType: !4474, size: 16, offset: 1152)
!4474 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !349, line: 103, baseType: !1041)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "cicr", scope: !4460, file: !3, line: 123, baseType: !4474, size: 16, offset: 1168)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "csdp", scope: !4460, file: !3, line: 124, baseType: !745, size: 32, offset: 1184)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "sglen", scope: !4460, file: !3, line: 126, baseType: !7, size: 32, offset: 1216)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !4460, file: !3, line: 127, baseType: !4479, offset: 1280)
!4479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4480, elements: !2545)
!4480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "omap_sg", file: !3, line: 99, size: 320, elements: !4481)
!4481 = !{!4482, !4483, !4484, !4485, !4486, !4487, !4500}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4480, file: !3, line: 100, baseType: !1142, size: 64)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "en", scope: !4480, file: !3, line: 101, baseType: !745, size: 32, offset: 64)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4480, file: !3, line: 102, baseType: !745, size: 32, offset: 96)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "fi", scope: !4480, file: !3, line: 103, baseType: !1799, size: 32, offset: 128)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "ei", scope: !4480, file: !3, line: 104, baseType: !4469, size: 16, offset: 160)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "t2_desc", scope: !4480, file: !3, line: 107, baseType: !4488, size: 64, offset: 192)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "omap_type2_desc", file: !3, line: 87, size: 224, elements: !4490)
!4490 = !{!4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "next_desc", scope: !4489, file: !3, line: 88, baseType: !745, size: 32)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "en", scope: !4489, file: !3, line: 89, baseType: !745, size: 32, offset: 32)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4489, file: !3, line: 90, baseType: !745, size: 32, offset: 64)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4489, file: !3, line: 91, baseType: !4474, size: 16, offset: 96)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "cicr", scope: !4489, file: !3, line: 92, baseType: !4474, size: 16, offset: 112)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "cdei", scope: !4489, file: !3, line: 93, baseType: !4469, size: 16, offset: 128)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "csei", scope: !4489, file: !3, line: 94, baseType: !4469, size: 16, offset: 144)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "cdfi", scope: !4489, file: !3, line: 95, baseType: !1799, size: 32, offset: 160)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "csfi", scope: !4489, file: !3, line: 96, baseType: !1799, size: 32, offset: 192)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "t2_desc_paddr", scope: !4480, file: !3, line: 108, baseType: !1142, size: 64, offset: 256)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "sgidx", scope: !4405, file: !3, line: 77, baseType: !7, size: 32, offset: 2752)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4408, size: 64)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 64)
!4504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4505)
!4505 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !385)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!4508 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !505)
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4510, size: 64)
!4510 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!4511 = !{!0, !4512, !4516, !4521, !4526, !4531, !4591, !4594, !4596, !4599, !4606, !4609, !4611, !4613, !4615, !4617}
!4512 = !DIGlobalVariableExpression(var: !4513, expr: !DIExpression())
!4513 = distinct !DIGlobalVariable(name: "__exitcall_omap_dma_exit", scope: !2, file: !3, line: 1947, type: !4514, isLocal: true, isDefinition: true)
!4514 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4515, line: 117, baseType: !4347)
!4515 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4516 = !DIGlobalVariableExpression(var: !4517, expr: !DIExpression())
!4517 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author252", scope: !2, file: !3, line: 1949, type: !4518, isLocal: true, isDefinition: true, align: 8)
!4518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 232, elements: !4519)
!4519 = !{!4520}
!4520 = !DISubrange(count: 29)
!4521 = !DIGlobalVariableExpression(var: !4522, expr: !DIExpression())
!4522 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file253", scope: !2, file: !3, line: 1950, type: !4523, isLocal: true, isDefinition: true, align: 8)
!4523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 304, elements: !4524)
!4524 = !{!4525}
!4525 = !DISubrange(count: 38)
!4526 = !DIGlobalVariableExpression(var: !4527, expr: !DIExpression())
!4527 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license254", scope: !2, file: !3, line: 1950, type: !4528, isLocal: true, isDefinition: true, align: 8)
!4528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 168, elements: !4529)
!4529 = !{!4530}
!4530 = !DISubrange(count: 21)
!4531 = !DIGlobalVariableExpression(var: !4532, expr: !DIExpression())
!4532 = distinct !DIGlobalVariable(name: "omap_dma_driver", scope: !2, file: !3, line: 1913, type: !4533, isLocal: true, isDefinition: true)
!4533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_driver", file: !4534, line: 200, size: 1600, elements: !4535)
!4534 = !DIFile(filename: "./include/linux/platform_device.h", directory: "/home/lizy2001/genbc/linux")
!4535 = !{!4536, !4578, !4579, !4583, !4587, !4588, !4589, !4590}
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4533, file: !4534, line: 201, baseType: !4537, size: 64)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 64)
!4538 = !DISubroutineType(types: !4539)
!4539 = !{!378, !4540}
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device", file: !4534, line: 22, size: 6208, elements: !4542)
!4542 = !{!4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !4564, !4572, !4573, !4576}
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4541, file: !4534, line: 23, baseType: !412, size: 64)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4541, file: !4534, line: 24, baseType: !378, size: 32, offset: 64)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "id_auto", scope: !4541, file: !4534, line: 25, baseType: !396, size: 8, offset: 96)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4541, file: !4534, line: 26, baseType: !405, size: 5568, offset: 128)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "platform_dma_mask", scope: !4541, file: !4534, line: 27, baseType: !609, size: 64, offset: 5696)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4541, file: !4534, line: 28, baseType: !3878, size: 128, offset: 5760)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "num_resources", scope: !4541, file: !4534, line: 29, baseType: !603, size: 32, offset: 5888)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4541, file: !4534, line: 30, baseType: !4551, size: 64, offset: 5952)
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4552, size: 64)
!4552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4553, line: 20, size: 512, elements: !4554)
!4553 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4554 = !{!4555, !4557, !4558, !4559, !4560, !4561, !4562, !4563}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4552, file: !4553, line: 21, baseType: !4556, size: 64)
!4556 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !349, line: 158, baseType: !2339)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4552, file: !4553, line: 22, baseType: !4556, size: 64, offset: 64)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4552, file: !4553, line: 23, baseType: !412, size: 64, offset: 128)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4552, file: !4553, line: 24, baseType: !350, size: 64, offset: 192)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4552, file: !4553, line: 25, baseType: !350, size: 64, offset: 256)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4552, file: !4553, line: 26, baseType: !4551, size: 64, offset: 320)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4552, file: !4553, line: 26, baseType: !4551, size: 64, offset: 384)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4552, file: !4553, line: 26, baseType: !4551, size: 64, offset: 448)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "id_entry", scope: !4541, file: !4534, line: 32, baseType: !4565, size: 64, offset: 6016)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 64)
!4566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4567)
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device_id", file: !3666, line: 586, size: 256, elements: !4568)
!4568 = !{!4569, !4571}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4567, file: !3666, line: 587, baseType: !4570, size: 160)
!4570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 160, elements: !2415)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4567, file: !3666, line: 588, baseType: !3685, size: 64, offset: 192)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4541, file: !4534, line: 33, baseType: !464, size: 64, offset: 6080)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "mfd_cell", scope: !4541, file: !4534, line: 36, baseType: !4574, size: 64, offset: 6144)
!4574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4575, size: 64)
!4575 = !DICompositeType(tag: DW_TAG_structure_type, name: "mfd_cell", file: !4534, line: 18, flags: DIFlagFwdDecl)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !4541, file: !4534, line: 39, baseType: !4577, offset: 6208)
!4577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pdev_archdata", file: !3885, line: 8, elements: !437)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4533, file: !4534, line: 202, baseType: !4537, size: 64, offset: 64)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4533, file: !4534, line: 203, baseType: !4580, size: 64, offset: 128)
!4580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4581, size: 64)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{null, !4540}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4533, file: !4534, line: 204, baseType: !4584, size: 64, offset: 192)
!4584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4585, size: 64)
!4585 = !DISubroutineType(types: !4586)
!4586 = !{!378, !4540, !3696}
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4533, file: !4534, line: 205, baseType: !4537, size: 64, offset: 256)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4533, file: !4534, line: 206, baseType: !3654, size: 1152, offset: 320)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4533, file: !4534, line: 207, baseType: !4565, size: 64, offset: 1472)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_deferred_probe", scope: !4533, file: !4534, line: 208, baseType: !396, size: 8, offset: 1536)
!4591 = !DIGlobalVariableExpression(var: !4592, expr: !DIExpression())
!4592 = distinct !DIGlobalVariable(name: "__key", scope: !4593, file: !3, line: 1714, type: !831, isLocal: true, isDefinition: true)
!4593 = distinct !DISubprogram(name: "omap_dma_probe", scope: !3, file: !3, line: 1651, type: !4538, scopeLine: 1652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!4594 = !DIGlobalVariableExpression(var: !4595, expr: !DIExpression())
!4595 = distinct !DIGlobalVariable(name: "default_cfg", scope: !2, file: !3, line: 1649, type: !4363, isLocal: true, isDefinition: true)
!4596 = !DIGlobalVariableExpression(var: !4597, expr: !DIExpression())
!4597 = distinct !DIGlobalVariable(name: "es_bytes", scope: !2, file: !3, line: 222, type: !4598, isLocal: true, isDefinition: true)
!4598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3041, size: 96, elements: !465)
!4599 = !DIGlobalVariableExpression(var: !4600, expr: !DIExpression())
!4600 = distinct !DIGlobalVariable(name: "omap_dma_info", scope: !2, file: !3, line: 229, type: !4601, isLocal: true, isDefinition: true)
!4601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_dma_filter_info", file: !4602, line: 29, size: 128, elements: !4603)
!4602 = !DIFile(filename: "./include/linux/of_dma.h", directory: "/home/lizy2001/genbc/linux")
!4603 = !{!4604, !4605}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "dma_cap", scope: !4601, file: !4602, line: 30, baseType: !4092, size: 64)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "filter_fn", scope: !4601, file: !4602, line: 31, baseType: !392, size: 64, offset: 64)
!4606 = !DIGlobalVariableExpression(var: !4607, expr: !DIExpression())
!4607 = distinct !DIGlobalVariable(name: "omap_dma_match", scope: !2, file: !3, line: 1903, type: !4608, isLocal: true, isDefinition: true)
!4608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3664, size: 9600, elements: !1840)
!4609 = !DIGlobalVariableExpression(var: !4610, expr: !DIExpression())
!4610 = distinct !DIGlobalVariable(name: "omap2420_data", scope: !2, file: !3, line: 1870, type: !4363, isLocal: true, isDefinition: true)
!4611 = !DIGlobalVariableExpression(var: !4612, expr: !DIExpression())
!4612 = distinct !DIGlobalVariable(name: "omap2430_data", scope: !2, file: !3, line: 1877, type: !4363, isLocal: true, isDefinition: true)
!4613 = !DIGlobalVariableExpression(var: !4614, expr: !DIExpression())
!4614 = distinct !DIGlobalVariable(name: "omap3430_data", scope: !2, file: !3, line: 1883, type: !4363, isLocal: true, isDefinition: true)
!4615 = !DIGlobalVariableExpression(var: !4616, expr: !DIExpression())
!4616 = distinct !DIGlobalVariable(name: "omap3630_data", scope: !2, file: !3, line: 1890, type: !4363, isLocal: true, isDefinition: true)
!4617 = !DIGlobalVariableExpression(var: !4618, expr: !DIExpression())
!4618 = distinct !DIGlobalVariable(name: "omap4_data", scope: !2, file: !3, line: 1897, type: !4363, isLocal: true, isDefinition: true)
!4619 = !{!"rsp"}
!4620 = !{i32 7, !"Dwarf Version", i32 4}
!4621 = !{i32 2, !"Debug Info Version", i32 3}
!4622 = !{i32 1, !"wchar_size", i32 2}
!4623 = !{i32 1, !"Code Model", i32 2}
!4624 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4625 = distinct !DISubprogram(name: "omap_dma_init", scope: !3, file: !3, line: 1937, type: !4626, scopeLine: 1938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{!378}
!4628 = !DILocation(line: 1939, column: 9, scope: !4625)
!4629 = !DILocation(line: 1939, column: 2, scope: !4625)
!4630 = distinct !DISubprogram(name: "omap_dma_exit", scope: !3, file: !3, line: 1943, type: !2094, scopeLine: 1944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!4631 = !DILocation(line: 1945, column: 2, scope: !4630)
!4632 = !DILocation(line: 1946, column: 1, scope: !4630)
!4633 = !DILocalVariable(name: "map", arg: 1, scope: !4634, file: !4635, line: 405, type: !4638)
!4634 = distinct !DISubprogram(name: "bitmap_set", scope: !4635, file: !4635, line: 405, type: !4636, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!4635 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!4636 = !DISubroutineType(types: !4637)
!4637 = !{null, !4638, !7, !7}
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!4639 = !DILocation(line: 405, column: 55, scope: !4634, inlinedAt: !4640)
!4640 = distinct !DILocation(line: 1750, column: 3, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1749, column: 6)
!4642 = !DILocalVariable(name: "start", arg: 2, scope: !4634, file: !4635, line: 405, type: !7)
!4643 = !DILocation(line: 405, column: 73, scope: !4634, inlinedAt: !4640)
!4644 = !DILocalVariable(name: "nbits", arg: 3, scope: !4634, file: !4635, line: 406, type: !7)
!4645 = !DILocation(line: 406, column: 16, scope: !4634, inlinedAt: !4640)
!4646 = !DILocalVariable(name: "lock", arg: 1, scope: !4647, file: !4648, line: 327, type: !1286)
!4647 = distinct !DISubprogram(name: "spinlock_check", scope: !4648, file: !4648, line: 327, type: !4649, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!4648 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4649 = !DISubroutineType(types: !4650)
!4650 = !{!4651, !1286}
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!4652 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !4653)
!4653 = distinct !DILocation(line: 1716, column: 2, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1716, column: 2)
!4655 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !4656)
!4656 = distinct !DILocation(line: 1715, column: 2, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1715, column: 2)
!4658 = !DILocalVariable(name: "pdev", arg: 1, scope: !4593, file: !3, line: 1651, type: !4540)
!4659 = !DILocation(line: 1651, column: 51, scope: !4593)
!4660 = !DILocalVariable(name: "conf", scope: !4593, file: !3, line: 1653, type: !4362)
!4661 = !DILocation(line: 1653, column: 32, scope: !4593)
!4662 = !DILocalVariable(name: "od", scope: !4593, file: !3, line: 1654, type: !358)
!4663 = !DILocation(line: 1654, column: 22, scope: !4593)
!4664 = !DILocalVariable(name: "res", scope: !4593, file: !3, line: 1655, type: !4551)
!4665 = !DILocation(line: 1655, column: 19, scope: !4593)
!4666 = !DILocalVariable(name: "rc", scope: !4593, file: !3, line: 1656, type: !378)
!4667 = !DILocation(line: 1656, column: 6, scope: !4593)
!4668 = !DILocalVariable(name: "i", scope: !4593, file: !3, line: 1656, type: !378)
!4669 = !DILocation(line: 1656, column: 10, scope: !4593)
!4670 = !DILocalVariable(name: "irq", scope: !4593, file: !3, line: 1656, type: !378)
!4671 = !DILocation(line: 1656, column: 13, scope: !4593)
!4672 = !DILocalVariable(name: "val", scope: !4593, file: !3, line: 1657, type: !603)
!4673 = !DILocation(line: 1657, column: 6, scope: !4593)
!4674 = !DILocation(line: 1659, column: 21, scope: !4593)
!4675 = !DILocation(line: 1659, column: 27, scope: !4593)
!4676 = !DILocation(line: 1659, column: 7, scope: !4593)
!4677 = !DILocation(line: 1659, column: 5, scope: !4593)
!4678 = !DILocation(line: 1660, column: 7, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1660, column: 6)
!4680 = !DILocation(line: 1660, column: 6, scope: !4593)
!4681 = !DILocation(line: 1661, column: 3, scope: !4679)
!4682 = !DILocation(line: 1663, column: 30, scope: !4593)
!4683 = !DILocation(line: 1663, column: 8, scope: !4593)
!4684 = !DILocation(line: 1663, column: 6, scope: !4593)
!4685 = !DILocation(line: 1664, column: 36, scope: !4593)
!4686 = !DILocation(line: 1664, column: 42, scope: !4593)
!4687 = !DILocation(line: 1664, column: 47, scope: !4593)
!4688 = !DILocation(line: 1664, column: 13, scope: !4593)
!4689 = !DILocation(line: 1664, column: 2, scope: !4593)
!4690 = !DILocation(line: 1664, column: 6, scope: !4593)
!4691 = !DILocation(line: 1664, column: 11, scope: !4593)
!4692 = !DILocation(line: 1665, column: 13, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1665, column: 6)
!4694 = !DILocation(line: 1665, column: 17, scope: !4693)
!4695 = !DILocation(line: 1665, column: 6, scope: !4693)
!4696 = !DILocation(line: 1665, column: 6, scope: !4593)
!4697 = !DILocation(line: 1666, column: 18, scope: !4693)
!4698 = !DILocation(line: 1666, column: 22, scope: !4693)
!4699 = !DILocation(line: 1666, column: 10, scope: !4693)
!4700 = !DILocation(line: 1666, column: 3, scope: !4693)
!4701 = !DILocation(line: 1668, column: 35, scope: !4593)
!4702 = !DILocation(line: 1668, column: 41, scope: !4593)
!4703 = !DILocation(line: 1668, column: 9, scope: !4593)
!4704 = !DILocation(line: 1668, column: 7, scope: !4593)
!4705 = !DILocation(line: 1669, column: 6, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1669, column: 6)
!4707 = !DILocation(line: 1669, column: 6, scope: !4593)
!4708 = !DILocation(line: 1670, column: 13, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 1669, column: 12)
!4710 = !DILocation(line: 1670, column: 3, scope: !4709)
!4711 = !DILocation(line: 1670, column: 7, scope: !4709)
!4712 = !DILocation(line: 1670, column: 11, scope: !4709)
!4713 = !DILocation(line: 1671, column: 32, scope: !4709)
!4714 = !DILocation(line: 1671, column: 38, scope: !4709)
!4715 = !DILocation(line: 1671, column: 14, scope: !4709)
!4716 = !DILocation(line: 1671, column: 3, scope: !4709)
!4717 = !DILocation(line: 1671, column: 7, scope: !4709)
!4718 = !DILocation(line: 1671, column: 12, scope: !4709)
!4719 = !DILocation(line: 1672, column: 8, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4709, file: !3, line: 1672, column: 7)
!4721 = !DILocation(line: 1672, column: 12, scope: !4720)
!4722 = !DILocation(line: 1672, column: 7, scope: !4709)
!4723 = !DILocation(line: 1673, column: 4, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 1672, column: 18)
!4725 = !DILocation(line: 1674, column: 4, scope: !4724)
!4726 = !DILocation(line: 1676, column: 2, scope: !4709)
!4727 = !DILocation(line: 1677, column: 3, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 1676, column: 9)
!4729 = !DILocation(line: 1677, column: 7, scope: !4728)
!4730 = !DILocation(line: 1677, column: 11, scope: !4728)
!4731 = !DILocation(line: 1679, column: 14, scope: !4728)
!4732 = !DILocation(line: 1679, column: 3, scope: !4728)
!4733 = !DILocation(line: 1679, column: 7, scope: !4728)
!4734 = !DILocation(line: 1679, column: 12, scope: !4728)
!4735 = !DILocation(line: 1680, column: 8, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 1680, column: 7)
!4737 = !DILocation(line: 1680, column: 12, scope: !4736)
!4738 = !DILocation(line: 1680, column: 7, scope: !4728)
!4739 = !DILocation(line: 1681, column: 4, scope: !4736)
!4740 = !DILocation(line: 1684, column: 16, scope: !4593)
!4741 = !DILocation(line: 1684, column: 20, scope: !4593)
!4742 = !DILocation(line: 1684, column: 26, scope: !4593)
!4743 = !DILocation(line: 1684, column: 2, scope: !4593)
!4744 = !DILocation(line: 1684, column: 6, scope: !4593)
!4745 = !DILocation(line: 1684, column: 14, scope: !4593)
!4746 = !DILocation(line: 1686, column: 2, scope: !4593)
!4747 = !DILocation(line: 1687, column: 2, scope: !4593)
!4748 = !DILocation(line: 1688, column: 2, scope: !4593)
!4749 = !DILocation(line: 1689, column: 2, scope: !4593)
!4750 = !DILocation(line: 1690, column: 2, scope: !4593)
!4751 = !DILocation(line: 1690, column: 6, scope: !4593)
!4752 = !DILocation(line: 1690, column: 11, scope: !4593)
!4753 = !DILocation(line: 1690, column: 39, scope: !4593)
!4754 = !DILocation(line: 1691, column: 2, scope: !4593)
!4755 = !DILocation(line: 1691, column: 6, scope: !4593)
!4756 = !DILocation(line: 1691, column: 11, scope: !4593)
!4757 = !DILocation(line: 1691, column: 38, scope: !4593)
!4758 = !DILocation(line: 1692, column: 2, scope: !4593)
!4759 = !DILocation(line: 1692, column: 6, scope: !4593)
!4760 = !DILocation(line: 1692, column: 11, scope: !4593)
!4761 = !DILocation(line: 1692, column: 28, scope: !4593)
!4762 = !DILocation(line: 1693, column: 2, scope: !4593)
!4763 = !DILocation(line: 1693, column: 6, scope: !4593)
!4764 = !DILocation(line: 1693, column: 11, scope: !4593)
!4765 = !DILocation(line: 1693, column: 32, scope: !4593)
!4766 = !DILocation(line: 1694, column: 2, scope: !4593)
!4767 = !DILocation(line: 1694, column: 6, scope: !4593)
!4768 = !DILocation(line: 1694, column: 11, scope: !4593)
!4769 = !DILocation(line: 1694, column: 32, scope: !4593)
!4770 = !DILocation(line: 1695, column: 2, scope: !4593)
!4771 = !DILocation(line: 1695, column: 6, scope: !4593)
!4772 = !DILocation(line: 1695, column: 11, scope: !4593)
!4773 = !DILocation(line: 1695, column: 34, scope: !4593)
!4774 = !DILocation(line: 1696, column: 2, scope: !4593)
!4775 = !DILocation(line: 1696, column: 6, scope: !4593)
!4776 = !DILocation(line: 1696, column: 11, scope: !4593)
!4777 = !DILocation(line: 1696, column: 34, scope: !4593)
!4778 = !DILocation(line: 1697, column: 2, scope: !4593)
!4779 = !DILocation(line: 1697, column: 6, scope: !4593)
!4780 = !DILocation(line: 1697, column: 11, scope: !4593)
!4781 = !DILocation(line: 1697, column: 39, scope: !4593)
!4782 = !DILocation(line: 1698, column: 2, scope: !4593)
!4783 = !DILocation(line: 1698, column: 6, scope: !4593)
!4784 = !DILocation(line: 1698, column: 11, scope: !4593)
!4785 = !DILocation(line: 1698, column: 25, scope: !4593)
!4786 = !DILocation(line: 1699, column: 2, scope: !4593)
!4787 = !DILocation(line: 1699, column: 6, scope: !4593)
!4788 = !DILocation(line: 1699, column: 11, scope: !4593)
!4789 = !DILocation(line: 1699, column: 24, scope: !4593)
!4790 = !DILocation(line: 1700, column: 2, scope: !4593)
!4791 = !DILocation(line: 1700, column: 6, scope: !4593)
!4792 = !DILocation(line: 1700, column: 11, scope: !4593)
!4793 = !DILocation(line: 1700, column: 25, scope: !4593)
!4794 = !DILocation(line: 1701, column: 2, scope: !4593)
!4795 = !DILocation(line: 1701, column: 6, scope: !4593)
!4796 = !DILocation(line: 1701, column: 11, scope: !4593)
!4797 = !DILocation(line: 1701, column: 32, scope: !4593)
!4798 = !DILocation(line: 1702, column: 2, scope: !4593)
!4799 = !DILocation(line: 1702, column: 6, scope: !4593)
!4800 = !DILocation(line: 1702, column: 11, scope: !4593)
!4801 = !DILocation(line: 1702, column: 30, scope: !4593)
!4802 = !DILocation(line: 1703, column: 2, scope: !4593)
!4803 = !DILocation(line: 1703, column: 6, scope: !4593)
!4804 = !DILocation(line: 1703, column: 11, scope: !4593)
!4805 = !DILocation(line: 1703, column: 27, scope: !4593)
!4806 = !DILocation(line: 1704, column: 2, scope: !4593)
!4807 = !DILocation(line: 1704, column: 6, scope: !4593)
!4808 = !DILocation(line: 1704, column: 11, scope: !4593)
!4809 = !DILocation(line: 1704, column: 27, scope: !4593)
!4810 = !DILocation(line: 1705, column: 2, scope: !4593)
!4811 = !DILocation(line: 1705, column: 6, scope: !4593)
!4812 = !DILocation(line: 1705, column: 11, scope: !4593)
!4813 = !DILocation(line: 1705, column: 22, scope: !4593)
!4814 = !DILocation(line: 1706, column: 6, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1706, column: 6)
!4816 = !DILocation(line: 1706, column: 6, scope: !4593)
!4817 = !DILocation(line: 1707, column: 3, scope: !4815)
!4818 = !DILocation(line: 1707, column: 7, scope: !4815)
!4819 = !DILocation(line: 1707, column: 12, scope: !4815)
!4820 = !DILocation(line: 1707, column: 32, scope: !4815)
!4821 = !DILocation(line: 1710, column: 3, scope: !4815)
!4822 = !DILocation(line: 1710, column: 7, scope: !4815)
!4823 = !DILocation(line: 1710, column: 12, scope: !4815)
!4824 = !DILocation(line: 1710, column: 32, scope: !4815)
!4825 = !DILocation(line: 1711, column: 2, scope: !4593)
!4826 = !DILocation(line: 1711, column: 6, scope: !4593)
!4827 = !DILocation(line: 1711, column: 11, scope: !4593)
!4828 = !DILocation(line: 1711, column: 21, scope: !4593)
!4829 = !DILocation(line: 1712, column: 18, scope: !4593)
!4830 = !DILocation(line: 1712, column: 24, scope: !4593)
!4831 = !DILocation(line: 1712, column: 2, scope: !4593)
!4832 = !DILocation(line: 1712, column: 6, scope: !4593)
!4833 = !DILocation(line: 1712, column: 11, scope: !4593)
!4834 = !DILocation(line: 1712, column: 15, scope: !4593)
!4835 = !DILocation(line: 1713, column: 18, scope: !4593)
!4836 = !DILocation(line: 1713, column: 22, scope: !4593)
!4837 = !DILocation(line: 1713, column: 27, scope: !4593)
!4838 = !DILocation(line: 1713, column: 2, scope: !4593)
!4839 = !DILocation(line: 1714, column: 2, scope: !4593)
!4840 = !DILocation(line: 1714, column: 2, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1714, column: 2)
!4842 = !DILocation(line: 1715, column: 2, scope: !4593)
!4843 = !DILocation(line: 1715, column: 2, scope: !4657)
!4844 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !4656)
!4845 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !4656)
!4846 = !DILocation(line: 1716, column: 2, scope: !4593)
!4847 = !DILocation(line: 1716, column: 2, scope: !4654)
!4848 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !4653)
!4849 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !4653)
!4850 = !DILocation(line: 1719, column: 2, scope: !4593)
!4851 = !DILocation(line: 1719, column: 6, scope: !4593)
!4852 = !DILocation(line: 1719, column: 19, scope: !4593)
!4853 = !DILocation(line: 1720, column: 6, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1720, column: 6)
!4855 = !DILocation(line: 1720, column: 12, scope: !4854)
!4856 = !DILocation(line: 1720, column: 16, scope: !4854)
!4857 = !DILocation(line: 1720, column: 24, scope: !4854)
!4858 = !DILocation(line: 1720, column: 48, scope: !4854)
!4859 = !DILocation(line: 1720, column: 54, scope: !4854)
!4860 = !DILocation(line: 1720, column: 58, scope: !4854)
!4861 = !DILocation(line: 1722, column: 14, scope: !4854)
!4862 = !DILocation(line: 1722, column: 18, scope: !4854)
!4863 = !DILocation(line: 1720, column: 27, scope: !4854)
!4864 = !DILocation(line: 1720, column: 6, scope: !4593)
!4865 = !DILocation(line: 1723, column: 3, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1722, column: 33)
!4867 = !DILocation(line: 1726, column: 2, scope: !4866)
!4868 = !DILocation(line: 1729, column: 7, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1729, column: 6)
!4870 = !DILocation(line: 1729, column: 13, scope: !4869)
!4871 = !DILocation(line: 1729, column: 17, scope: !4869)
!4872 = !DILocation(line: 1729, column: 6, scope: !4593)
!4873 = !DILocation(line: 1730, column: 19, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 1729, column: 26)
!4875 = !DILocation(line: 1730, column: 23, scope: !4874)
!4876 = !DILocation(line: 1730, column: 29, scope: !4874)
!4877 = !DILocation(line: 1730, column: 39, scope: !4874)
!4878 = !DILocation(line: 1730, column: 3, scope: !4874)
!4879 = !DILocation(line: 1730, column: 7, scope: !4874)
!4880 = !DILocation(line: 1730, column: 17, scope: !4874)
!4881 = !DILocation(line: 1731, column: 7, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1731, column: 7)
!4883 = !DILocation(line: 1731, column: 7, scope: !4874)
!4884 = !DILocation(line: 1732, column: 4, scope: !4882)
!4885 = !DILocation(line: 1732, column: 8, scope: !4882)
!4886 = !DILocation(line: 1732, column: 18, scope: !4882)
!4887 = !DILocation(line: 1733, column: 2, scope: !4874)
!4888 = !DILocation(line: 1733, column: 34, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 1733, column: 13)
!4890 = !DILocation(line: 1733, column: 40, scope: !4889)
!4891 = !DILocation(line: 1733, column: 44, scope: !4889)
!4892 = !DILocation(line: 1734, column: 7, scope: !4889)
!4893 = !DILocation(line: 1734, column: 11, scope: !4889)
!4894 = !DILocation(line: 1733, column: 13, scope: !4889)
!4895 = !DILocation(line: 1733, column: 13, scope: !4869)
!4896 = !DILocation(line: 1735, column: 3, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 1734, column: 23)
!4898 = !DILocation(line: 1738, column: 3, scope: !4897)
!4899 = !DILocation(line: 1738, column: 7, scope: !4897)
!4900 = !DILocation(line: 1738, column: 17, scope: !4897)
!4901 = !DILocation(line: 1739, column: 2, scope: !4897)
!4902 = !DILocation(line: 1742, column: 6, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1742, column: 6)
!4904 = !DILocation(line: 1742, column: 12, scope: !4903)
!4905 = !DILocation(line: 1742, column: 16, scope: !4903)
!4906 = !DILocation(line: 1742, column: 24, scope: !4903)
!4907 = !DILocation(line: 1742, column: 49, scope: !4903)
!4908 = !DILocation(line: 1742, column: 55, scope: !4903)
!4909 = !DILocation(line: 1742, column: 59, scope: !4903)
!4910 = !DILocation(line: 1742, column: 28, scope: !4903)
!4911 = !DILocation(line: 1742, column: 6, scope: !4593)
!4912 = !DILocation(line: 1746, column: 10, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 1744, column: 21)
!4914 = !DILocation(line: 1746, column: 9, scope: !4913)
!4915 = !DILocation(line: 1746, column: 7, scope: !4913)
!4916 = !DILocation(line: 1747, column: 21, scope: !4913)
!4917 = !DILocation(line: 1747, column: 25, scope: !4913)
!4918 = !DILocation(line: 1747, column: 43, scope: !4913)
!4919 = !DILocation(line: 1747, column: 47, scope: !4913)
!4920 = !DILocation(line: 1747, column: 3, scope: !4913)
!4921 = !DILocation(line: 1748, column: 2, scope: !4913)
!4922 = !DILocation(line: 1749, column: 6, scope: !4641)
!4923 = !DILocation(line: 1749, column: 10, scope: !4641)
!4924 = !DILocation(line: 1749, column: 16, scope: !4641)
!4925 = !DILocation(line: 1749, column: 26, scope: !4641)
!4926 = !DILocation(line: 1749, column: 35, scope: !4641)
!4927 = !DILocation(line: 1749, column: 6, scope: !4593)
!4928 = !DILocation(line: 1750, column: 14, scope: !4641)
!4929 = !DILocation(line: 1750, column: 18, scope: !4641)
!4930 = !DILocation(line: 408, column: 27, scope: !4931, inlinedAt: !4640)
!4931 = distinct !DILexicalBlock(scope: !4634, file: !4635, line: 408, column: 6)
!4932 = !DILocation(line: 408, column: 6, scope: !4931, inlinedAt: !4640)
!4933 = !DILocation(line: 408, column: 34, scope: !4931, inlinedAt: !4640)
!4934 = !DILocation(line: 408, column: 37, scope: !4931, inlinedAt: !4640)
!4935 = !DILocation(line: 408, column: 43, scope: !4931, inlinedAt: !4640)
!4936 = !DILocation(line: 408, column: 6, scope: !4634, inlinedAt: !4640)
!4937 = !DILocation(line: 409, column: 13, scope: !4931, inlinedAt: !4640)
!4938 = !DILocation(line: 409, column: 20, scope: !4931, inlinedAt: !4640)
!4939 = !DILocation(line: 409, column: 3, scope: !4931, inlinedAt: !4640)
!4940 = !DILocation(line: 410, column: 32, scope: !4941, inlinedAt: !4640)
!4941 = distinct !DILexicalBlock(scope: !4931, file: !4635, line: 410, column: 11)
!4942 = !DILocation(line: 410, column: 38, scope: !4941, inlinedAt: !4640)
!4943 = !DILocation(line: 410, column: 11, scope: !4941, inlinedAt: !4640)
!4944 = !DILocation(line: 410, column: 57, scope: !4941, inlinedAt: !4640)
!4945 = !DILocation(line: 411, column: 4, scope: !4941, inlinedAt: !4640)
!4946 = !DILocation(line: 411, column: 44, scope: !4941, inlinedAt: !4640)
!4947 = !DILocation(line: 412, column: 25, scope: !4941, inlinedAt: !4640)
!4948 = !DILocation(line: 412, column: 31, scope: !4941, inlinedAt: !4640)
!4949 = !DILocation(line: 412, column: 4, scope: !4941, inlinedAt: !4640)
!4950 = !DILocation(line: 412, column: 50, scope: !4941, inlinedAt: !4640)
!4951 = !DILocation(line: 413, column: 4, scope: !4941, inlinedAt: !4640)
!4952 = !DILocation(line: 410, column: 11, scope: !4931, inlinedAt: !4640)
!4953 = !DILocation(line: 414, column: 18, scope: !4941, inlinedAt: !4640)
!4954 = !DILocation(line: 414, column: 10, scope: !4941, inlinedAt: !4640)
!4955 = !DILocation(line: 414, column: 24, scope: !4941, inlinedAt: !4640)
!4956 = !DILocation(line: 414, column: 30, scope: !4941, inlinedAt: !4640)
!4957 = !DILocation(line: 414, column: 22, scope: !4941, inlinedAt: !4640)
!4958 = !DILocation(line: 414, column: 41, scope: !4941, inlinedAt: !4640)
!4959 = !DILocation(line: 414, column: 47, scope: !4941, inlinedAt: !4640)
!4960 = !DILocation(line: 414, column: 3, scope: !4941, inlinedAt: !4640)
!4961 = !DILocation(line: 416, column: 16, scope: !4941, inlinedAt: !4640)
!4962 = !DILocation(line: 416, column: 21, scope: !4941, inlinedAt: !4640)
!4963 = !DILocation(line: 416, column: 28, scope: !4941, inlinedAt: !4640)
!4964 = !DILocation(line: 416, column: 3, scope: !4941, inlinedAt: !4640)
!4965 = !DILocation(line: 1750, column: 3, scope: !4641)
!4966 = !DILocation(line: 1752, column: 30, scope: !4593)
!4967 = !DILocation(line: 1752, column: 36, scope: !4593)
!4968 = !DILocation(line: 1752, column: 41, scope: !4593)
!4969 = !DILocation(line: 1752, column: 45, scope: !4593)
!4970 = !DILocation(line: 1752, column: 16, scope: !4593)
!4971 = !DILocation(line: 1752, column: 2, scope: !4593)
!4972 = !DILocation(line: 1752, column: 6, scope: !4593)
!4973 = !DILocation(line: 1752, column: 14, scope: !4593)
!4974 = !DILocation(line: 1755, column: 7, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1755, column: 6)
!4976 = !DILocation(line: 1755, column: 11, scope: !4975)
!4977 = !DILocation(line: 1755, column: 6, scope: !4593)
!4978 = !DILocation(line: 1756, column: 3, scope: !4975)
!4979 = !DILocation(line: 1758, column: 9, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1758, column: 2)
!4981 = !DILocation(line: 1758, column: 7, scope: !4980)
!4982 = !DILocation(line: 1758, column: 14, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4980, file: !3, line: 1758, column: 2)
!4984 = !DILocation(line: 1758, column: 18, scope: !4983)
!4985 = !DILocation(line: 1758, column: 22, scope: !4983)
!4986 = !DILocation(line: 1758, column: 16, scope: !4983)
!4987 = !DILocation(line: 1758, column: 2, scope: !4980)
!4988 = !DILocation(line: 1759, column: 27, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 1758, column: 41)
!4990 = !DILocation(line: 1759, column: 8, scope: !4989)
!4991 = !DILocation(line: 1759, column: 6, scope: !4989)
!4992 = !DILocation(line: 1760, column: 7, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 1760, column: 7)
!4994 = !DILocation(line: 1760, column: 7, scope: !4989)
!4995 = !DILocation(line: 1761, column: 18, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 1760, column: 11)
!4997 = !DILocation(line: 1761, column: 4, scope: !4996)
!4998 = !DILocation(line: 1762, column: 11, scope: !4996)
!4999 = !DILocation(line: 1762, column: 4, scope: !4996)
!5000 = !DILocation(line: 1764, column: 2, scope: !4989)
!5001 = !DILocation(line: 1758, column: 37, scope: !4983)
!5002 = !DILocation(line: 1758, column: 2, scope: !4983)
!5003 = distinct !{!5003, !4987, !5004}
!5004 = !DILocation(line: 1764, column: 2, scope: !4980)
!5005 = !DILocation(line: 1766, column: 25, scope: !4593)
!5006 = !DILocation(line: 1766, column: 8, scope: !4593)
!5007 = !DILocation(line: 1766, column: 6, scope: !4593)
!5008 = !DILocation(line: 1767, column: 6, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1767, column: 6)
!5010 = !DILocation(line: 1767, column: 10, scope: !5009)
!5011 = !DILocation(line: 1767, column: 6, scope: !4593)
!5012 = !DILocation(line: 1768, column: 3, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 1767, column: 16)
!5014 = !DILocation(line: 1769, column: 3, scope: !5013)
!5015 = !DILocation(line: 1769, column: 7, scope: !5013)
!5016 = !DILocation(line: 1769, column: 14, scope: !5013)
!5017 = !DILocation(line: 1770, column: 2, scope: !5013)
!5018 = !DILocation(line: 1772, column: 3, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 1770, column: 9)
!5020 = !DILocation(line: 1772, column: 7, scope: !5019)
!5021 = !DILocation(line: 1772, column: 23, scope: !5019)
!5022 = !DILocation(line: 1773, column: 23, scope: !5019)
!5023 = !DILocation(line: 1773, column: 3, scope: !5019)
!5024 = !DILocation(line: 1775, column: 26, scope: !5019)
!5025 = !DILocation(line: 1775, column: 32, scope: !5019)
!5026 = !DILocation(line: 1775, column: 37, scope: !5019)
!5027 = !DILocation(line: 1776, column: 43, scope: !5019)
!5028 = !DILocation(line: 1775, column: 8, scope: !5019)
!5029 = !DILocation(line: 1775, column: 6, scope: !5019)
!5030 = !DILocation(line: 1777, column: 7, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 1777, column: 7)
!5032 = !DILocation(line: 1777, column: 7, scope: !5019)
!5033 = !DILocation(line: 1778, column: 18, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 1777, column: 11)
!5035 = !DILocation(line: 1778, column: 4, scope: !5034)
!5036 = !DILocation(line: 1779, column: 11, scope: !5034)
!5037 = !DILocation(line: 1779, column: 4, scope: !5034)
!5038 = !DILocation(line: 1783, column: 25, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1783, column: 6)
!5040 = !DILocation(line: 1783, column: 6, scope: !5039)
!5041 = !DILocation(line: 1783, column: 37, scope: !5039)
!5042 = !DILocation(line: 1783, column: 6, scope: !4593)
!5043 = !DILocation(line: 1784, column: 3, scope: !5039)
!5044 = !DILocation(line: 1784, column: 7, scope: !5039)
!5045 = !DILocation(line: 1784, column: 23, scope: !5039)
!5046 = !DILocation(line: 1786, column: 24, scope: !4593)
!5047 = !DILocation(line: 1786, column: 28, scope: !4593)
!5048 = !DILocation(line: 1786, column: 34, scope: !4593)
!5049 = !DILocation(line: 1786, column: 2, scope: !4593)
!5050 = !DILocation(line: 1786, column: 6, scope: !4593)
!5051 = !DILocation(line: 1786, column: 11, scope: !4593)
!5052 = !DILocation(line: 1786, column: 18, scope: !4593)
!5053 = !DILocation(line: 1786, column: 22, scope: !4593)
!5054 = !DILocation(line: 1787, column: 27, scope: !4593)
!5055 = !DILocation(line: 1787, column: 31, scope: !4593)
!5056 = !DILocation(line: 1787, column: 37, scope: !4593)
!5057 = !DILocation(line: 1787, column: 2, scope: !4593)
!5058 = !DILocation(line: 1787, column: 6, scope: !4593)
!5059 = !DILocation(line: 1787, column: 11, scope: !4593)
!5060 = !DILocation(line: 1787, column: 18, scope: !4593)
!5061 = !DILocation(line: 1787, column: 25, scope: !4593)
!5062 = !DILocation(line: 1788, column: 2, scope: !4593)
!5063 = !DILocation(line: 1788, column: 6, scope: !4593)
!5064 = !DILocation(line: 1788, column: 11, scope: !4593)
!5065 = !DILocation(line: 1788, column: 18, scope: !4593)
!5066 = !DILocation(line: 1788, column: 21, scope: !4593)
!5067 = !DILocation(line: 1790, column: 6, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1790, column: 6)
!5069 = !DILocation(line: 1790, column: 10, scope: !5068)
!5070 = !DILocation(line: 1790, column: 6, scope: !4593)
!5071 = !DILocation(line: 1791, column: 45, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 1790, column: 27)
!5073 = !DILocation(line: 1791, column: 51, scope: !5072)
!5074 = !DILocation(line: 1791, column: 35, scope: !5072)
!5075 = !DILocation(line: 1792, column: 8, scope: !5072)
!5076 = !DILocation(line: 1792, column: 14, scope: !5072)
!5077 = !DILocation(line: 1791, column: 19, scope: !5072)
!5078 = !DILocation(line: 1791, column: 3, scope: !5072)
!5079 = !DILocation(line: 1791, column: 7, scope: !5072)
!5080 = !DILocation(line: 1791, column: 17, scope: !5072)
!5081 = !DILocation(line: 1795, column: 8, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5072, file: !3, line: 1795, column: 7)
!5083 = !DILocation(line: 1795, column: 12, scope: !5082)
!5084 = !DILocation(line: 1795, column: 7, scope: !5072)
!5085 = !DILocation(line: 1796, column: 4, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 1795, column: 23)
!5087 = !DILocation(line: 1798, column: 4, scope: !5086)
!5088 = !DILocation(line: 1798, column: 8, scope: !5086)
!5089 = !DILocation(line: 1798, column: 24, scope: !5086)
!5090 = !DILocation(line: 1799, column: 3, scope: !5086)
!5091 = !DILocation(line: 1800, column: 2, scope: !5072)
!5092 = !DILocation(line: 1802, column: 34, scope: !4593)
!5093 = !DILocation(line: 1802, column: 38, scope: !4593)
!5094 = !DILocation(line: 1802, column: 7, scope: !4593)
!5095 = !DILocation(line: 1802, column: 5, scope: !4593)
!5096 = !DILocation(line: 1803, column: 6, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1803, column: 6)
!5098 = !DILocation(line: 1803, column: 6, scope: !4593)
!5099 = !DILocation(line: 1804, column: 3, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 1803, column: 10)
!5101 = !DILocation(line: 1806, column: 17, scope: !5100)
!5102 = !DILocation(line: 1806, column: 3, scope: !5100)
!5103 = !DILocation(line: 1807, column: 10, scope: !5100)
!5104 = !DILocation(line: 1807, column: 3, scope: !5100)
!5105 = !DILocation(line: 1810, column: 23, scope: !4593)
!5106 = !DILocation(line: 1810, column: 29, scope: !4593)
!5107 = !DILocation(line: 1810, column: 2, scope: !4593)
!5108 = !DILocation(line: 1812, column: 6, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1812, column: 6)
!5110 = !DILocation(line: 1812, column: 12, scope: !5109)
!5111 = !DILocation(line: 1812, column: 16, scope: !5109)
!5112 = !DILocation(line: 1812, column: 6, scope: !4593)
!5113 = !DILocation(line: 1813, column: 27, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 1812, column: 25)
!5115 = !DILocation(line: 1813, column: 31, scope: !5114)
!5116 = !DILocation(line: 1813, column: 36, scope: !5114)
!5117 = !DILocation(line: 1816, column: 35, scope: !5114)
!5118 = !DILocation(line: 1816, column: 41, scope: !5114)
!5119 = !DILocation(line: 1816, column: 45, scope: !5114)
!5120 = !DILocation(line: 1816, column: 8, scope: !5114)
!5121 = !DILocation(line: 1816, column: 6, scope: !5114)
!5122 = !DILocation(line: 1818, column: 7, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 1818, column: 7)
!5124 = !DILocation(line: 1818, column: 7, scope: !5114)
!5125 = !DILocation(line: 1819, column: 4, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 1818, column: 11)
!5127 = !DILocation(line: 1820, column: 33, scope: !5126)
!5128 = !DILocation(line: 1820, column: 37, scope: !5126)
!5129 = !DILocation(line: 1820, column: 4, scope: !5126)
!5130 = !DILocation(line: 1821, column: 18, scope: !5126)
!5131 = !DILocation(line: 1821, column: 4, scope: !5126)
!5132 = !DILocation(line: 1822, column: 3, scope: !5126)
!5133 = !DILocation(line: 1823, column: 2, scope: !5114)
!5134 = !DILocation(line: 1825, column: 20, scope: !4593)
!5135 = !DILocation(line: 1825, column: 2, scope: !4593)
!5136 = !DILocation(line: 1827, column: 6, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 1827, column: 6)
!5138 = !DILocation(line: 1827, column: 10, scope: !5137)
!5139 = !DILocation(line: 1827, column: 15, scope: !5137)
!5140 = !DILocation(line: 1827, column: 6, scope: !4593)
!5141 = !DILocation(line: 1828, column: 3, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1827, column: 33)
!5143 = !DILocation(line: 1828, column: 7, scope: !5142)
!5144 = !DILocation(line: 1828, column: 10, scope: !5142)
!5145 = !DILocation(line: 1828, column: 24, scope: !5142)
!5146 = !DILocation(line: 1829, column: 29, scope: !5142)
!5147 = !DILocation(line: 1829, column: 33, scope: !5142)
!5148 = !DILocation(line: 1829, column: 3, scope: !5142)
!5149 = !DILocation(line: 1830, column: 2, scope: !5142)
!5150 = !DILocation(line: 1830, column: 13, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1830, column: 13)
!5152 = !DILocation(line: 1830, column: 17, scope: !5151)
!5153 = !DILocation(line: 1830, column: 22, scope: !5151)
!5154 = !DILocation(line: 1830, column: 13, scope: !5137)
!5155 = !DILocation(line: 1831, column: 3, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5151, file: !3, line: 1830, column: 40)
!5157 = !DILocation(line: 1831, column: 7, scope: !5156)
!5158 = !DILocation(line: 1831, column: 10, scope: !5156)
!5159 = !DILocation(line: 1831, column: 24, scope: !5156)
!5160 = !DILocation(line: 1832, column: 29, scope: !5156)
!5161 = !DILocation(line: 1832, column: 33, scope: !5156)
!5162 = !DILocation(line: 1832, column: 3, scope: !5156)
!5163 = !DILocation(line: 1833, column: 2, scope: !5156)
!5164 = !DILocation(line: 1835, column: 2, scope: !4593)
!5165 = !DILocation(line: 1838, column: 9, scope: !4593)
!5166 = !DILocation(line: 1838, column: 2, scope: !4593)
!5167 = !DILocation(line: 1839, column: 1, scope: !4593)
!5168 = distinct !DISubprogram(name: "omap_dma_remove", scope: !3, file: !3, line: 1841, type: !4538, scopeLine: 1842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5169 = !DILocalVariable(name: "pdev", arg: 1, scope: !5168, file: !3, line: 1841, type: !4540)
!5170 = !DILocation(line: 1841, column: 52, scope: !5168)
!5171 = !DILocalVariable(name: "od", scope: !5168, file: !3, line: 1843, type: !358)
!5172 = !DILocation(line: 1843, column: 22, scope: !5168)
!5173 = !DILocation(line: 1843, column: 48, scope: !5168)
!5174 = !DILocation(line: 1843, column: 27, scope: !5168)
!5175 = !DILocalVariable(name: "irq", scope: !5168, file: !3, line: 1844, type: !378)
!5176 = !DILocation(line: 1844, column: 6, scope: !5168)
!5177 = !DILocation(line: 1846, column: 6, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 1846, column: 6)
!5179 = !DILocation(line: 1846, column: 10, scope: !5178)
!5180 = !DILocation(line: 1846, column: 15, scope: !5178)
!5181 = !DILocation(line: 1846, column: 6, scope: !5168)
!5182 = !DILocation(line: 1847, column: 31, scope: !5178)
!5183 = !DILocation(line: 1847, column: 35, scope: !5178)
!5184 = !DILocation(line: 1847, column: 3, scope: !5178)
!5185 = !DILocation(line: 1849, column: 6, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 1849, column: 6)
!5187 = !DILocation(line: 1849, column: 12, scope: !5186)
!5188 = !DILocation(line: 1849, column: 16, scope: !5186)
!5189 = !DILocation(line: 1849, column: 6, scope: !5168)
!5190 = !DILocation(line: 1850, column: 26, scope: !5186)
!5191 = !DILocation(line: 1850, column: 32, scope: !5186)
!5192 = !DILocation(line: 1850, column: 36, scope: !5186)
!5193 = !DILocation(line: 1850, column: 3, scope: !5186)
!5194 = !DILocation(line: 1852, column: 25, scope: !5168)
!5195 = !DILocation(line: 1852, column: 8, scope: !5168)
!5196 = !DILocation(line: 1852, column: 6, scope: !5168)
!5197 = !DILocation(line: 1853, column: 17, scope: !5168)
!5198 = !DILocation(line: 1853, column: 23, scope: !5168)
!5199 = !DILocation(line: 1853, column: 28, scope: !5168)
!5200 = !DILocation(line: 1853, column: 33, scope: !5168)
!5201 = !DILocation(line: 1853, column: 2, scope: !5168)
!5202 = !DILocation(line: 1855, column: 31, scope: !5168)
!5203 = !DILocation(line: 1855, column: 35, scope: !5168)
!5204 = !DILocation(line: 1855, column: 2, scope: !5168)
!5205 = !DILocation(line: 1857, column: 7, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 1857, column: 6)
!5207 = !DILocation(line: 1857, column: 11, scope: !5206)
!5208 = !DILocation(line: 1857, column: 6, scope: !5168)
!5209 = !DILocation(line: 1859, column: 23, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 1857, column: 19)
!5211 = !DILocation(line: 1859, column: 3, scope: !5210)
!5212 = !DILocation(line: 1860, column: 2, scope: !5210)
!5213 = !DILocation(line: 1862, column: 6, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 1862, column: 6)
!5215 = !DILocation(line: 1862, column: 10, scope: !5214)
!5216 = !DILocation(line: 1862, column: 6, scope: !5168)
!5217 = !DILocation(line: 1863, column: 20, scope: !5214)
!5218 = !DILocation(line: 1863, column: 24, scope: !5214)
!5219 = !DILocation(line: 1863, column: 3, scope: !5214)
!5220 = !DILocation(line: 1865, column: 16, scope: !5168)
!5221 = !DILocation(line: 1865, column: 2, scope: !5168)
!5222 = !DILocation(line: 1867, column: 2, scope: !5168)
!5223 = distinct !DISubprogram(name: "devm_kzalloc", scope: !73, file: !73, line: 215, type: !5224, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5224 = !DISubroutineType(types: !5225)
!5225 = !{!351, !404, !510, !348}
!5226 = !DILocalVariable(name: "dev", arg: 1, scope: !5223, file: !73, line: 215, type: !404)
!5227 = !DILocation(line: 215, column: 49, scope: !5223)
!5228 = !DILocalVariable(name: "size", arg: 2, scope: !5223, file: !73, line: 215, type: !510)
!5229 = !DILocation(line: 215, column: 61, scope: !5223)
!5230 = !DILocalVariable(name: "gfp", arg: 3, scope: !5223, file: !73, line: 215, type: !348)
!5231 = !DILocation(line: 215, column: 73, scope: !5223)
!5232 = !DILocation(line: 217, column: 22, scope: !5223)
!5233 = !DILocation(line: 217, column: 27, scope: !5223)
!5234 = !DILocation(line: 217, column: 33, scope: !5223)
!5235 = !DILocation(line: 217, column: 37, scope: !5223)
!5236 = !DILocation(line: 217, column: 9, scope: !5223)
!5237 = !DILocation(line: 217, column: 2, scope: !5223)
!5238 = distinct !DISubprogram(name: "IS_ERR", scope: !5239, file: !5239, line: 34, type: !5240, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5239 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5240 = !DISubroutineType(types: !5241)
!5241 = !{!396, !2341}
!5242 = !DILocalVariable(name: "ptr", arg: 1, scope: !5238, file: !5239, line: 34, type: !2341)
!5243 = !DILocation(line: 34, column: 60, scope: !5238)
!5244 = !DILocation(line: 36, column: 9, scope: !5238)
!5245 = !DILocation(line: 36, column: 2, scope: !5238)
!5246 = distinct !DISubprogram(name: "PTR_ERR", scope: !5239, file: !5239, line: 29, type: !5247, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5247 = !DISubroutineType(types: !5248)
!5248 = !{!352, !2341}
!5249 = !DILocalVariable(name: "ptr", arg: 1, scope: !5246, file: !5239, line: 29, type: !2341)
!5250 = !DILocation(line: 29, column: 61, scope: !5246)
!5251 = !DILocation(line: 31, column: 16, scope: !5246)
!5252 = !DILocation(line: 31, column: 9, scope: !5246)
!5253 = !DILocation(line: 31, column: 2, scope: !5246)
!5254 = distinct !DISubprogram(name: "dev_get_platdata", scope: !73, file: !73, line: 828, type: !5255, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5255 = !DISubroutineType(types: !5256)
!5256 = !{!351, !3924}
!5257 = !DILocalVariable(name: "dev", arg: 1, scope: !5254, file: !73, line: 828, type: !3924)
!5258 = !DILocation(line: 828, column: 59, scope: !5254)
!5259 = !DILocation(line: 830, column: 9, scope: !5254)
!5260 = !DILocation(line: 830, column: 14, scope: !5254)
!5261 = !DILocation(line: 830, column: 2, scope: !5254)
!5262 = distinct !DISubprogram(name: "omap_get_plat_info", scope: !185, file: !185, line: 342, type: !5263, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5263 = !DISubroutineType(types: !5264)
!5264 = !{!4333}
!5265 = !DILocation(line: 344, column: 2, scope: !5262)
!5266 = distinct !DISubprogram(name: "__dma_cap_set", scope: !94, file: !94, line: 1369, type: !5267, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5267 = !DISubroutineType(types: !5268)
!5268 = !{null, !160, !5269}
!5269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4092, size: 64)
!5270 = !DILocalVariable(name: "tx_type", arg: 1, scope: !5266, file: !94, line: 1369, type: !160)
!5271 = !DILocation(line: 1369, column: 41, scope: !5266)
!5272 = !DILocalVariable(name: "dstp", arg: 2, scope: !5266, file: !94, line: 1369, type: !5269)
!5273 = !DILocation(line: 1369, column: 66, scope: !5266)
!5274 = !DILocation(line: 1371, column: 10, scope: !5266)
!5275 = !DILocation(line: 1371, column: 19, scope: !5266)
!5276 = !DILocation(line: 1371, column: 25, scope: !5266)
!5277 = !DILocation(line: 1371, column: 2, scope: !5266)
!5278 = !DILocation(line: 1372, column: 1, scope: !5266)
!5279 = distinct !DISubprogram(name: "omap_dma_alloc_chan_resources", scope: !3, file: !3, line: 702, type: !4121, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5280 = !DILocalVariable(name: "lock", arg: 1, scope: !5281, file: !4648, line: 402, type: !1286)
!5281 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !4648, file: !4648, line: 402, type: !5282, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{null, !1286}
!5284 = !DILocation(line: 402, column: 57, scope: !5281, inlinedAt: !5285)
!5285 = distinct !DILocation(line: 733, column: 4, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 721, column: 20)
!5287 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 721, column: 7)
!5288 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 718, column: 16)
!5289 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 718, column: 6)
!5290 = !DILocalVariable(name: "lock", arg: 1, scope: !5291, file: !4648, line: 377, type: !1286)
!5291 = distinct !DISubprogram(name: "spin_lock_irq", scope: !4648, file: !4648, line: 377, type: !5282, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5292 = !DILocation(line: 377, column: 55, scope: !5291, inlinedAt: !5293)
!5293 = distinct !DILocation(line: 724, column: 4, scope: !5286)
!5294 = !DILocalVariable(name: "chan", arg: 1, scope: !5279, file: !3, line: 702, type: !398)
!5295 = !DILocation(line: 702, column: 59, scope: !5279)
!5296 = !DILocalVariable(name: "od", scope: !5279, file: !3, line: 704, type: !358)
!5297 = !DILocation(line: 704, column: 22, scope: !5279)
!5298 = !DILocation(line: 704, column: 43, scope: !5279)
!5299 = !DILocation(line: 704, column: 49, scope: !5279)
!5300 = !DILocation(line: 704, column: 27, scope: !5279)
!5301 = !DILocalVariable(name: "c", scope: !5279, file: !3, line: 705, type: !4404)
!5302 = !DILocation(line: 705, column: 20, scope: !5279)
!5303 = !DILocation(line: 705, column: 41, scope: !5279)
!5304 = !DILocation(line: 705, column: 24, scope: !5279)
!5305 = !DILocalVariable(name: "dev", scope: !5279, file: !3, line: 706, type: !404)
!5306 = !DILocation(line: 706, column: 17, scope: !5279)
!5307 = !DILocation(line: 706, column: 23, scope: !5279)
!5308 = !DILocation(line: 706, column: 27, scope: !5279)
!5309 = !DILocation(line: 706, column: 32, scope: !5279)
!5310 = !DILocalVariable(name: "ret", scope: !5279, file: !3, line: 707, type: !378)
!5311 = !DILocation(line: 707, column: 6, scope: !5279)
!5312 = !DILocation(line: 709, column: 6, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 709, column: 6)
!5314 = !DILocation(line: 709, column: 10, scope: !5313)
!5315 = !DILocation(line: 709, column: 6, scope: !5279)
!5316 = !DILocation(line: 710, column: 26, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 709, column: 18)
!5318 = !DILocation(line: 710, column: 29, scope: !5317)
!5319 = !DILocation(line: 711, column: 31, scope: !5317)
!5320 = !DILocation(line: 711, column: 35, scope: !5317)
!5321 = !DILocation(line: 711, column: 38, scope: !5317)
!5322 = !DILocation(line: 710, column: 9, scope: !5317)
!5323 = !DILocation(line: 710, column: 7, scope: !5317)
!5324 = !DILocation(line: 712, column: 2, scope: !5317)
!5325 = !DILocation(line: 713, column: 26, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 712, column: 9)
!5327 = !DILocation(line: 713, column: 31, scope: !5326)
!5328 = !DILocation(line: 713, column: 34, scope: !5326)
!5329 = !DILocation(line: 713, column: 9, scope: !5326)
!5330 = !DILocation(line: 713, column: 7, scope: !5326)
!5331 = !DILocation(line: 718, column: 6, scope: !5289)
!5332 = !DILocation(line: 718, column: 10, scope: !5289)
!5333 = !DILocation(line: 718, column: 6, scope: !5279)
!5334 = !DILocation(line: 719, column: 19, scope: !5288)
!5335 = !DILocation(line: 719, column: 23, scope: !5288)
!5336 = !DILocation(line: 719, column: 26, scope: !5288)
!5337 = !DILocation(line: 719, column: 29, scope: !5288)
!5338 = !DILocation(line: 719, column: 3, scope: !5288)
!5339 = !DILocation(line: 721, column: 8, scope: !5287)
!5340 = !DILocation(line: 721, column: 12, scope: !5287)
!5341 = !DILocation(line: 721, column: 7, scope: !5288)
!5342 = !DILocalVariable(name: "val", scope: !5286, file: !3, line: 722, type: !7)
!5343 = !DILocation(line: 722, column: 13, scope: !5286)
!5344 = !DILocation(line: 724, column: 19, scope: !5286)
!5345 = !DILocation(line: 724, column: 23, scope: !5286)
!5346 = !DILocation(line: 379, column: 2, scope: !5347, inlinedAt: !5293)
!5347 = distinct !DILexicalBlock(scope: !5348, file: !4648, line: 379, column: 2)
!5348 = distinct !DILexicalBlock(scope: !5291, file: !4648, line: 379, column: 2)
!5349 = !DILocation(line: 379, column: 2, scope: !5350, inlinedAt: !5293)
!5350 = distinct !DILexicalBlock(scope: !5348, file: !4648, line: 379, column: 2)
!5351 = !{i32 -2145553284}
!5352 = !DILocation(line: 379, column: 2, scope: !5353, inlinedAt: !5293)
!5353 = distinct !DILexicalBlock(scope: !5350, file: !4648, line: 379, column: 2)
!5354 = !DILocation(line: 725, column: 10, scope: !5286)
!5355 = !DILocation(line: 725, column: 8, scope: !5286)
!5356 = !DILocation(line: 726, column: 24, scope: !5286)
!5357 = !DILocation(line: 726, column: 42, scope: !5286)
!5358 = !DILocation(line: 726, column: 4, scope: !5286)
!5359 = !DILocation(line: 727, column: 27, scope: !5286)
!5360 = !DILocation(line: 727, column: 4, scope: !5286)
!5361 = !DILocation(line: 727, column: 8, scope: !5286)
!5362 = !DILocation(line: 727, column: 24, scope: !5286)
!5363 = !DILocation(line: 728, column: 24, scope: !5286)
!5364 = !DILocation(line: 728, column: 42, scope: !5286)
!5365 = !DILocation(line: 728, column: 46, scope: !5286)
!5366 = !DILocation(line: 728, column: 4, scope: !5286)
!5367 = !DILocation(line: 730, column: 29, scope: !5286)
!5368 = !DILocation(line: 730, column: 10, scope: !5286)
!5369 = !DILocation(line: 730, column: 8, scope: !5286)
!5370 = !DILocation(line: 731, column: 12, scope: !5286)
!5371 = !DILocation(line: 731, column: 11, scope: !5286)
!5372 = !DILocation(line: 731, column: 8, scope: !5286)
!5373 = !DILocation(line: 732, column: 24, scope: !5286)
!5374 = !DILocation(line: 732, column: 42, scope: !5286)
!5375 = !DILocation(line: 732, column: 4, scope: !5286)
!5376 = !DILocation(line: 733, column: 21, scope: !5286)
!5377 = !DILocation(line: 733, column: 25, scope: !5286)
!5378 = !DILocation(line: 404, column: 2, scope: !5379, inlinedAt: !5285)
!5379 = distinct !DILexicalBlock(scope: !5380, file: !4648, line: 404, column: 2)
!5380 = distinct !DILexicalBlock(scope: !5281, file: !4648, line: 404, column: 2)
!5381 = !DILocation(line: 404, column: 2, scope: !5382, inlinedAt: !5285)
!5382 = distinct !DILexicalBlock(scope: !5380, file: !4648, line: 404, column: 2)
!5383 = !{i32 -2145551536}
!5384 = !DILocation(line: 404, column: 2, scope: !5385, inlinedAt: !5285)
!5385 = distinct !DILexicalBlock(scope: !5382, file: !4648, line: 404, column: 2)
!5386 = !DILocation(line: 734, column: 3, scope: !5286)
!5387 = !DILocation(line: 735, column: 2, scope: !5288)
!5388 = !DILocation(line: 738, column: 7, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 738, column: 7)
!5390 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 737, column: 19)
!5391 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 737, column: 6)
!5392 = !DILocation(line: 738, column: 7, scope: !5390)
!5393 = !DILocation(line: 739, column: 4, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 738, column: 43)
!5395 = !DILocation(line: 739, column: 7, scope: !5394)
!5396 = !DILocation(line: 739, column: 11, scope: !5394)
!5397 = !DILocation(line: 741, column: 14, scope: !5394)
!5398 = !DILocation(line: 741, column: 17, scope: !5394)
!5399 = !DILocation(line: 741, column: 24, scope: !5394)
!5400 = !DILocation(line: 741, column: 4, scope: !5394)
!5401 = !DILocation(line: 741, column: 7, scope: !5394)
!5402 = !DILocation(line: 741, column: 11, scope: !5394)
!5403 = !DILocation(line: 742, column: 3, scope: !5394)
!5404 = !DILocation(line: 743, column: 13, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 742, column: 10)
!5406 = !DILocation(line: 743, column: 16, scope: !5405)
!5407 = !DILocation(line: 743, column: 24, scope: !5405)
!5408 = !DILocation(line: 743, column: 4, scope: !5405)
!5409 = !DILocation(line: 743, column: 7, scope: !5405)
!5410 = !DILocation(line: 743, column: 11, scope: !5405)
!5411 = !DILocation(line: 749, column: 6, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 749, column: 6)
!5413 = !DILocation(line: 749, column: 10, scope: !5412)
!5414 = !DILocation(line: 749, column: 16, scope: !5412)
!5415 = !DILocation(line: 749, column: 23, scope: !5412)
!5416 = !DILocation(line: 749, column: 6, scope: !5279)
!5417 = !DILocation(line: 750, column: 3, scope: !5412)
!5418 = !DILocation(line: 750, column: 6, scope: !5412)
!5419 = !DILocation(line: 750, column: 10, scope: !5412)
!5420 = !DILocation(line: 752, column: 9, scope: !5279)
!5421 = !DILocation(line: 752, column: 2, scope: !5279)
!5422 = distinct !DISubprogram(name: "omap_dma_free_chan_resources", scope: !3, file: !3, line: 755, type: !4125, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5423 = !DILocation(line: 402, column: 57, scope: !5281, inlinedAt: !5424)
!5424 = distinct !DILocation(line: 764, column: 3, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 760, column: 19)
!5426 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 760, column: 6)
!5427 = !DILocation(line: 377, column: 55, scope: !5291, inlinedAt: !5428)
!5428 = distinct !DILocation(line: 761, column: 3, scope: !5425)
!5429 = !DILocalVariable(name: "chan", arg: 1, scope: !5422, file: !3, line: 755, type: !398)
!5430 = !DILocation(line: 755, column: 59, scope: !5422)
!5431 = !DILocalVariable(name: "od", scope: !5422, file: !3, line: 757, type: !358)
!5432 = !DILocation(line: 757, column: 22, scope: !5422)
!5433 = !DILocation(line: 757, column: 43, scope: !5422)
!5434 = !DILocation(line: 757, column: 49, scope: !5422)
!5435 = !DILocation(line: 757, column: 27, scope: !5422)
!5436 = !DILocalVariable(name: "c", scope: !5422, file: !3, line: 758, type: !4404)
!5437 = !DILocation(line: 758, column: 20, scope: !5422)
!5438 = !DILocation(line: 758, column: 41, scope: !5422)
!5439 = !DILocation(line: 758, column: 24, scope: !5422)
!5440 = !DILocation(line: 760, column: 7, scope: !5426)
!5441 = !DILocation(line: 760, column: 11, scope: !5426)
!5442 = !DILocation(line: 760, column: 6, scope: !5422)
!5443 = !DILocation(line: 761, column: 18, scope: !5425)
!5444 = !DILocation(line: 761, column: 22, scope: !5425)
!5445 = !DILocation(line: 379, column: 2, scope: !5347, inlinedAt: !5428)
!5446 = !DILocation(line: 379, column: 2, scope: !5350, inlinedAt: !5428)
!5447 = !DILocation(line: 379, column: 2, scope: !5353, inlinedAt: !5428)
!5448 = !DILocation(line: 762, column: 27, scope: !5425)
!5449 = !DILocation(line: 762, column: 26, scope: !5425)
!5450 = !DILocation(line: 762, column: 3, scope: !5425)
!5451 = !DILocation(line: 762, column: 7, scope: !5425)
!5452 = !DILocation(line: 762, column: 23, scope: !5425)
!5453 = !DILocation(line: 763, column: 23, scope: !5425)
!5454 = !DILocation(line: 763, column: 41, scope: !5425)
!5455 = !DILocation(line: 763, column: 45, scope: !5425)
!5456 = !DILocation(line: 763, column: 3, scope: !5425)
!5457 = !DILocation(line: 764, column: 20, scope: !5425)
!5458 = !DILocation(line: 764, column: 24, scope: !5425)
!5459 = !DILocation(line: 404, column: 2, scope: !5379, inlinedAt: !5424)
!5460 = !DILocation(line: 404, column: 2, scope: !5382, inlinedAt: !5424)
!5461 = !DILocation(line: 404, column: 2, scope: !5385, inlinedAt: !5424)
!5462 = !DILocation(line: 765, column: 2, scope: !5425)
!5463 = !DILocation(line: 767, column: 2, scope: !5422)
!5464 = !DILocation(line: 767, column: 5, scope: !5422)
!5465 = !DILocation(line: 767, column: 18, scope: !5422)
!5466 = !DILocation(line: 768, column: 2, scope: !5422)
!5467 = !DILocation(line: 768, column: 6, scope: !5422)
!5468 = !DILocation(line: 768, column: 14, scope: !5422)
!5469 = !DILocation(line: 768, column: 17, scope: !5422)
!5470 = !DILocation(line: 768, column: 25, scope: !5422)
!5471 = !DILocation(line: 769, column: 29, scope: !5422)
!5472 = !DILocation(line: 769, column: 32, scope: !5422)
!5473 = !DILocation(line: 769, column: 2, scope: !5422)
!5474 = !DILocation(line: 771, column: 6, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 771, column: 6)
!5476 = !DILocation(line: 771, column: 10, scope: !5475)
!5477 = !DILocation(line: 771, column: 6, scope: !5422)
!5478 = !DILocation(line: 772, column: 17, scope: !5475)
!5479 = !DILocation(line: 772, column: 20, scope: !5475)
!5480 = !DILocation(line: 772, column: 3, scope: !5475)
!5481 = !DILocation(line: 774, column: 20, scope: !5475)
!5482 = !DILocation(line: 774, column: 24, scope: !5475)
!5483 = !DILocation(line: 774, column: 27, scope: !5475)
!5484 = !DILocation(line: 774, column: 3, scope: !5475)
!5485 = !DILocation(line: 778, column: 2, scope: !5422)
!5486 = !DILocation(line: 778, column: 5, scope: !5422)
!5487 = !DILocation(line: 778, column: 13, scope: !5422)
!5488 = !DILocation(line: 779, column: 1, scope: !5422)
!5489 = distinct !DISubprogram(name: "omap_dma_tx_status", scope: !3, file: !3, line: 882, type: !4308, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5490 = !DILocalVariable(name: "lock", arg: 1, scope: !5491, file: !4648, line: 407, type: !1286)
!5491 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !4648, file: !4648, line: 407, type: !5492, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5492 = !DISubroutineType(types: !5493)
!5493 = !{null, !1286, !350}
!5494 = !DILocation(line: 407, column: 64, scope: !5491, inlinedAt: !5495)
!5495 = distinct !DILocation(line: 938, column: 2, scope: !5489)
!5496 = !DILocalVariable(name: "flags", arg: 2, scope: !5491, file: !4648, line: 407, type: !350)
!5497 = !DILocation(line: 407, column: 84, scope: !5491, inlinedAt: !5495)
!5498 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !5499)
!5499 = distinct !DILocation(line: 894, column: 2, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5501, file: !3, line: 894, column: 2)
!5501 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 894, column: 2)
!5502 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 894, column: 2)
!5503 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 894, column: 2)
!5504 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 894, column: 2)
!5505 = !DILocalVariable(name: "chan", arg: 1, scope: !5489, file: !3, line: 882, type: !398)
!5506 = !DILocation(line: 882, column: 60, scope: !5489)
!5507 = !DILocalVariable(name: "cookie", arg: 2, scope: !5489, file: !3, line: 883, type: !4051)
!5508 = !DILocation(line: 883, column: 15, scope: !5489)
!5509 = !DILocalVariable(name: "txstate", arg: 3, scope: !5489, file: !3, line: 883, type: !4310)
!5510 = !DILocation(line: 883, column: 44, scope: !5489)
!5511 = !DILocalVariable(name: "c", scope: !5489, file: !3, line: 885, type: !4404)
!5512 = !DILocation(line: 885, column: 20, scope: !5489)
!5513 = !DILocation(line: 885, column: 41, scope: !5489)
!5514 = !DILocation(line: 885, column: 24, scope: !5489)
!5515 = !DILocalVariable(name: "ret", scope: !5489, file: !3, line: 886, type: !153)
!5516 = !DILocation(line: 886, column: 18, scope: !5489)
!5517 = !DILocalVariable(name: "flags", scope: !5489, file: !3, line: 887, type: !350)
!5518 = !DILocation(line: 887, column: 16, scope: !5489)
!5519 = !DILocalVariable(name: "d", scope: !5489, file: !3, line: 888, type: !4459)
!5520 = !DILocation(line: 888, column: 20, scope: !5489)
!5521 = !DILocation(line: 890, column: 26, scope: !5489)
!5522 = !DILocation(line: 890, column: 32, scope: !5489)
!5523 = !DILocation(line: 890, column: 40, scope: !5489)
!5524 = !DILocation(line: 890, column: 8, scope: !5489)
!5525 = !DILocation(line: 890, column: 6, scope: !5489)
!5526 = !DILocation(line: 891, column: 6, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 891, column: 6)
!5528 = !DILocation(line: 891, column: 10, scope: !5527)
!5529 = !DILocation(line: 891, column: 6, scope: !5489)
!5530 = !DILocation(line: 892, column: 10, scope: !5527)
!5531 = !DILocation(line: 892, column: 3, scope: !5527)
!5532 = !DILocation(line: 894, column: 2, scope: !5489)
!5533 = !DILocation(line: 894, column: 2, scope: !5504)
!5534 = !DILocalVariable(name: "__dummy", scope: !5535, file: !3, line: 894, type: !350)
!5535 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 894, column: 2)
!5536 = !DILocation(line: 894, column: 2, scope: !5535)
!5537 = !DILocalVariable(name: "__dummy2", scope: !5535, file: !3, line: 894, type: !350)
!5538 = !DILocation(line: 894, column: 2, scope: !5503)
!5539 = !DILocation(line: 894, column: 2, scope: !5502)
!5540 = !DILocation(line: 894, column: 2, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 894, column: 2)
!5542 = !DILocalVariable(name: "__dummy", scope: !5543, file: !3, line: 894, type: !350)
!5543 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 894, column: 2)
!5544 = distinct !DILexicalBlock(scope: !5541, file: !3, line: 894, column: 2)
!5545 = !DILocation(line: 894, column: 2, scope: !5543)
!5546 = !DILocalVariable(name: "__dummy2", scope: !5543, file: !3, line: 894, type: !350)
!5547 = !DILocation(line: 894, column: 2, scope: !5544)
!5548 = !DILocation(line: 894, column: 2, scope: !5501)
!5549 = !{i32 -2141734856}
!5550 = !DILocation(line: 894, column: 2, scope: !5500)
!5551 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !5499)
!5552 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !5499)
!5553 = !DILocation(line: 895, column: 6, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 895, column: 6)
!5555 = !DILocation(line: 895, column: 9, scope: !5554)
!5556 = !DILocation(line: 895, column: 14, scope: !5554)
!5557 = !DILocation(line: 895, column: 17, scope: !5554)
!5558 = !DILocation(line: 895, column: 20, scope: !5554)
!5559 = !DILocation(line: 895, column: 26, scope: !5554)
!5560 = !DILocation(line: 895, column: 29, scope: !5554)
!5561 = !DILocation(line: 895, column: 32, scope: !5554)
!5562 = !DILocation(line: 895, column: 42, scope: !5554)
!5563 = !DILocation(line: 895, column: 39, scope: !5554)
!5564 = !DILocation(line: 895, column: 6, scope: !5489)
!5565 = !DILocation(line: 896, column: 7, scope: !5554)
!5566 = !DILocation(line: 896, column: 10, scope: !5554)
!5567 = !DILocation(line: 896, column: 5, scope: !5554)
!5568 = !DILocation(line: 896, column: 3, scope: !5554)
!5569 = !DILocation(line: 898, column: 7, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 898, column: 6)
!5571 = !DILocation(line: 898, column: 6, scope: !5489)
!5572 = !DILocation(line: 899, column: 3, scope: !5570)
!5573 = !DILocation(line: 901, column: 6, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 901, column: 6)
!5575 = !DILocation(line: 901, column: 6, scope: !5489)
!5576 = !DILocalVariable(name: "pos", scope: !5577, file: !3, line: 902, type: !1142)
!5577 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 901, column: 9)
!5578 = !DILocation(line: 902, column: 14, scope: !5577)
!5579 = !DILocation(line: 904, column: 7, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 904, column: 7)
!5581 = !DILocation(line: 904, column: 10, scope: !5580)
!5582 = !DILocation(line: 904, column: 14, scope: !5580)
!5583 = !DILocation(line: 904, column: 7, scope: !5577)
!5584 = !DILocation(line: 905, column: 31, scope: !5580)
!5585 = !DILocation(line: 905, column: 10, scope: !5580)
!5586 = !DILocation(line: 905, column: 8, scope: !5580)
!5587 = !DILocation(line: 905, column: 4, scope: !5580)
!5588 = !DILocation(line: 906, column: 12, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 906, column: 12)
!5590 = !DILocation(line: 906, column: 15, scope: !5589)
!5591 = !DILocation(line: 906, column: 19, scope: !5589)
!5592 = !DILocation(line: 906, column: 38, scope: !5589)
!5593 = !DILocation(line: 906, column: 41, scope: !5589)
!5594 = !DILocation(line: 906, column: 44, scope: !5589)
!5595 = !DILocation(line: 906, column: 48, scope: !5589)
!5596 = !DILocation(line: 906, column: 12, scope: !5580)
!5597 = !DILocation(line: 907, column: 31, scope: !5589)
!5598 = !DILocation(line: 907, column: 10, scope: !5589)
!5599 = !DILocation(line: 907, column: 8, scope: !5589)
!5600 = !DILocation(line: 907, column: 4, scope: !5589)
!5601 = !DILocation(line: 909, column: 8, scope: !5589)
!5602 = !DILocation(line: 911, column: 45, scope: !5577)
!5603 = !DILocation(line: 911, column: 48, scope: !5577)
!5604 = !DILocation(line: 911, column: 22, scope: !5577)
!5605 = !DILocation(line: 911, column: 3, scope: !5577)
!5606 = !DILocation(line: 911, column: 12, scope: !5577)
!5607 = !DILocation(line: 911, column: 20, scope: !5577)
!5608 = !DILocation(line: 912, column: 2, scope: !5577)
!5609 = !DILocalVariable(name: "vd", scope: !5610, file: !3, line: 913, type: !4436)
!5610 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 912, column: 9)
!5611 = !DILocation(line: 913, column: 25, scope: !5610)
!5612 = !DILocation(line: 913, column: 47, scope: !5610)
!5613 = !DILocation(line: 913, column: 50, scope: !5610)
!5614 = !DILocation(line: 913, column: 54, scope: !5610)
!5615 = !DILocation(line: 913, column: 30, scope: !5610)
!5616 = !DILocation(line: 915, column: 7, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5610, file: !3, line: 915, column: 7)
!5618 = !DILocation(line: 915, column: 7, scope: !5610)
!5619 = !DILocation(line: 917, column: 25, scope: !5617)
!5620 = !DILocation(line: 917, column: 29, scope: !5617)
!5621 = !DILocation(line: 917, column: 7, scope: !5617)
!5622 = !DILocation(line: 916, column: 23, scope: !5617)
!5623 = !DILocation(line: 916, column: 4, scope: !5617)
!5624 = !DILocation(line: 916, column: 13, scope: !5617)
!5625 = !DILocation(line: 916, column: 21, scope: !5617)
!5626 = !DILocation(line: 919, column: 4, scope: !5617)
!5627 = !DILocation(line: 919, column: 13, scope: !5617)
!5628 = !DILocation(line: 919, column: 21, scope: !5617)
!5629 = !DILabel(scope: !5489, name: "out", file: !3, line: 922)
!5630 = !DILocation(line: 922, column: 1, scope: !5489)
!5631 = !DILocation(line: 923, column: 6, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 923, column: 6)
!5633 = !DILocation(line: 923, column: 10, scope: !5632)
!5634 = !DILocation(line: 923, column: 29, scope: !5632)
!5635 = !DILocation(line: 923, column: 32, scope: !5632)
!5636 = !DILocation(line: 923, column: 35, scope: !5632)
!5637 = !DILocation(line: 923, column: 6, scope: !5489)
!5638 = !DILocation(line: 924, column: 7, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 923, column: 43)
!5640 = !DILocation(line: 925, column: 2, scope: !5639)
!5641 = !DILocation(line: 925, column: 13, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 925, column: 13)
!5643 = !DILocation(line: 925, column: 15, scope: !5642)
!5644 = !DILocation(line: 925, column: 18, scope: !5642)
!5645 = !DILocation(line: 925, column: 21, scope: !5642)
!5646 = !DILocation(line: 925, column: 28, scope: !5642)
!5647 = !DILocation(line: 925, column: 31, scope: !5642)
!5648 = !DILocation(line: 925, column: 34, scope: !5642)
!5649 = !DILocation(line: 925, column: 13, scope: !5632)
!5650 = !DILocalVariable(name: "ccr", scope: !5651, file: !3, line: 926, type: !745)
!5651 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 925, column: 43)
!5652 = !DILocation(line: 926, column: 12, scope: !5651)
!5653 = !DILocation(line: 926, column: 37, scope: !5651)
!5654 = !DILocation(line: 926, column: 18, scope: !5651)
!5655 = !DILocation(line: 931, column: 9, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 931, column: 7)
!5657 = !DILocation(line: 931, column: 13, scope: !5656)
!5658 = !DILocation(line: 931, column: 7, scope: !5651)
!5659 = !DILocation(line: 932, column: 8, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5656, file: !3, line: 931, column: 28)
!5661 = !DILocation(line: 933, column: 24, scope: !5660)
!5662 = !DILocation(line: 933, column: 4, scope: !5660)
!5663 = !DILocation(line: 934, column: 27, scope: !5660)
!5664 = !DILocation(line: 934, column: 30, scope: !5660)
!5665 = !DILocation(line: 934, column: 4, scope: !5660)
!5666 = !DILocation(line: 935, column: 3, scope: !5660)
!5667 = !DILocation(line: 936, column: 2, scope: !5651)
!5668 = !DILocation(line: 938, column: 26, scope: !5489)
!5669 = !DILocation(line: 938, column: 29, scope: !5489)
!5670 = !DILocation(line: 938, column: 32, scope: !5489)
!5671 = !DILocation(line: 938, column: 38, scope: !5489)
!5672 = !DILocalVariable(name: "__dummy", scope: !5673, file: !4648, line: 409, type: !350)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !4648, line: 409, column: 2)
!5674 = distinct !DILexicalBlock(scope: !5491, file: !4648, line: 409, column: 2)
!5675 = !DILocation(line: 409, column: 2, scope: !5673, inlinedAt: !5495)
!5676 = !DILocalVariable(name: "__dummy2", scope: !5673, file: !4648, line: 409, type: !350)
!5677 = !DILocalVariable(name: "__dummy", scope: !5678, file: !4648, line: 409, type: !350)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !4648, line: 409, column: 2)
!5679 = distinct !DILexicalBlock(scope: !5680, file: !4648, line: 409, column: 2)
!5680 = distinct !DILexicalBlock(scope: !5681, file: !4648, line: 409, column: 2)
!5681 = distinct !DILexicalBlock(scope: !5674, file: !4648, line: 409, column: 2)
!5682 = !DILocation(line: 409, column: 2, scope: !5678, inlinedAt: !5495)
!5683 = !DILocalVariable(name: "__dummy2", scope: !5678, file: !4648, line: 409, type: !350)
!5684 = !DILocation(line: 409, column: 2, scope: !5679, inlinedAt: !5495)
!5685 = !DILocation(line: 409, column: 2, scope: !5686, inlinedAt: !5495)
!5686 = distinct !DILexicalBlock(scope: !5681, file: !4648, line: 409, column: 2)
!5687 = !{i32 -2145550492}
!5688 = !DILocation(line: 409, column: 2, scope: !5689, inlinedAt: !5495)
!5689 = distinct !DILexicalBlock(scope: !5686, file: !4648, line: 409, column: 2)
!5690 = !DILocation(line: 940, column: 9, scope: !5489)
!5691 = !DILocation(line: 940, column: 2, scope: !5489)
!5692 = !DILocation(line: 941, column: 1, scope: !5489)
!5693 = distinct !DISubprogram(name: "omap_dma_issue_pending", scope: !3, file: !3, line: 943, type: !4125, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5694 = !DILocation(line: 407, column: 64, scope: !5491, inlinedAt: !5695)
!5695 = distinct !DILocation(line: 951, column: 2, scope: !5693)
!5696 = !DILocation(line: 407, column: 84, scope: !5491, inlinedAt: !5695)
!5697 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !5698)
!5698 = distinct !DILocation(line: 948, column: 2, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 948, column: 2)
!5700 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 948, column: 2)
!5701 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 948, column: 2)
!5702 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 948, column: 2)
!5703 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 948, column: 2)
!5704 = !DILocalVariable(name: "chan", arg: 1, scope: !5693, file: !3, line: 943, type: !398)
!5705 = !DILocation(line: 943, column: 53, scope: !5693)
!5706 = !DILocalVariable(name: "c", scope: !5693, file: !3, line: 945, type: !4404)
!5707 = !DILocation(line: 945, column: 20, scope: !5693)
!5708 = !DILocation(line: 945, column: 41, scope: !5693)
!5709 = !DILocation(line: 945, column: 24, scope: !5693)
!5710 = !DILocalVariable(name: "flags", scope: !5693, file: !3, line: 946, type: !350)
!5711 = !DILocation(line: 946, column: 16, scope: !5693)
!5712 = !DILocation(line: 948, column: 2, scope: !5693)
!5713 = !DILocation(line: 948, column: 2, scope: !5703)
!5714 = !DILocalVariable(name: "__dummy", scope: !5715, file: !3, line: 948, type: !350)
!5715 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 948, column: 2)
!5716 = !DILocation(line: 948, column: 2, scope: !5715)
!5717 = !DILocalVariable(name: "__dummy2", scope: !5715, file: !3, line: 948, type: !350)
!5718 = !DILocation(line: 948, column: 2, scope: !5702)
!5719 = !DILocation(line: 948, column: 2, scope: !5701)
!5720 = !DILocation(line: 948, column: 2, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 948, column: 2)
!5722 = !DILocalVariable(name: "__dummy", scope: !5723, file: !3, line: 948, type: !350)
!5723 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 948, column: 2)
!5724 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 948, column: 2)
!5725 = !DILocation(line: 948, column: 2, scope: !5723)
!5726 = !DILocalVariable(name: "__dummy2", scope: !5723, file: !3, line: 948, type: !350)
!5727 = !DILocation(line: 948, column: 2, scope: !5724)
!5728 = !DILocation(line: 948, column: 2, scope: !5700)
!5729 = !{i32 -2141733837}
!5730 = !DILocation(line: 948, column: 2, scope: !5699)
!5731 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !5698)
!5732 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !5698)
!5733 = !DILocation(line: 949, column: 27, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 949, column: 6)
!5735 = !DILocation(line: 949, column: 30, scope: !5734)
!5736 = !DILocation(line: 949, column: 6, scope: !5734)
!5737 = !DILocation(line: 949, column: 34, scope: !5734)
!5738 = !DILocation(line: 949, column: 38, scope: !5734)
!5739 = !DILocation(line: 949, column: 41, scope: !5734)
!5740 = !DILocation(line: 949, column: 6, scope: !5693)
!5741 = !DILocation(line: 950, column: 23, scope: !5734)
!5742 = !DILocation(line: 950, column: 3, scope: !5734)
!5743 = !DILocation(line: 951, column: 26, scope: !5693)
!5744 = !DILocation(line: 951, column: 29, scope: !5693)
!5745 = !DILocation(line: 951, column: 32, scope: !5693)
!5746 = !DILocation(line: 951, column: 38, scope: !5693)
!5747 = !DILocation(line: 409, column: 2, scope: !5673, inlinedAt: !5695)
!5748 = !DILocation(line: 409, column: 2, scope: !5678, inlinedAt: !5695)
!5749 = !DILocation(line: 409, column: 2, scope: !5679, inlinedAt: !5695)
!5750 = !DILocation(line: 409, column: 2, scope: !5686, inlinedAt: !5695)
!5751 = !DILocation(line: 409, column: 2, scope: !5689, inlinedAt: !5695)
!5752 = !DILocation(line: 952, column: 1, scope: !5693)
!5753 = distinct !DISubprogram(name: "omap_dma_prep_slave_sg", scope: !3, file: !3, line: 954, type: !4232, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!5754 = !DILocalVariable(name: "chan", arg: 1, scope: !5753, file: !3, line: 955, type: !398)
!5755 = !DILocation(line: 955, column: 19, scope: !5753)
!5756 = !DILocalVariable(name: "sgl", arg: 2, scope: !5753, file: !3, line: 955, type: !4217)
!5757 = !DILocation(line: 955, column: 45, scope: !5753)
!5758 = !DILocalVariable(name: "sglen", arg: 3, scope: !5753, file: !3, line: 955, type: !7)
!5759 = !DILocation(line: 955, column: 59, scope: !5753)
!5760 = !DILocalVariable(name: "dir", arg: 4, scope: !5753, file: !3, line: 956, type: !135)
!5761 = !DILocation(line: 956, column: 30, scope: !5753)
!5762 = !DILocalVariable(name: "tx_flags", arg: 5, scope: !5753, file: !3, line: 956, type: !350)
!5763 = !DILocation(line: 956, column: 49, scope: !5753)
!5764 = !DILocalVariable(name: "context", arg: 6, scope: !5753, file: !3, line: 956, type: !351)
!5765 = !DILocation(line: 956, column: 65, scope: !5753)
!5766 = !DILocalVariable(name: "od", scope: !5753, file: !3, line: 958, type: !358)
!5767 = !DILocation(line: 958, column: 22, scope: !5753)
!5768 = !DILocation(line: 958, column: 43, scope: !5753)
!5769 = !DILocation(line: 958, column: 49, scope: !5753)
!5770 = !DILocation(line: 958, column: 27, scope: !5753)
!5771 = !DILocalVariable(name: "c", scope: !5753, file: !3, line: 959, type: !4404)
!5772 = !DILocation(line: 959, column: 20, scope: !5753)
!5773 = !DILocation(line: 959, column: 41, scope: !5753)
!5774 = !DILocation(line: 959, column: 24, scope: !5753)
!5775 = !DILocalVariable(name: "dev_width", scope: !5753, file: !3, line: 960, type: !142)
!5776 = !DILocation(line: 960, column: 26, scope: !5753)
!5777 = !DILocalVariable(name: "sgent", scope: !5753, file: !3, line: 961, type: !4217)
!5778 = !DILocation(line: 961, column: 22, scope: !5753)
!5779 = !DILocalVariable(name: "d", scope: !5753, file: !3, line: 962, type: !4459)
!5780 = !DILocation(line: 962, column: 20, scope: !5753)
!5781 = !DILocalVariable(name: "dev_addr", scope: !5753, file: !3, line: 963, type: !1142)
!5782 = !DILocation(line: 963, column: 13, scope: !5753)
!5783 = !DILocalVariable(name: "i", scope: !5753, file: !3, line: 964, type: !7)
!5784 = !DILocation(line: 964, column: 11, scope: !5753)
!5785 = !DILocalVariable(name: "es", scope: !5753, file: !3, line: 964, type: !7)
!5786 = !DILocation(line: 964, column: 14, scope: !5753)
!5787 = !DILocalVariable(name: "en", scope: !5753, file: !3, line: 964, type: !7)
!5788 = !DILocation(line: 964, column: 18, scope: !5753)
!5789 = !DILocalVariable(name: "frame_bytes", scope: !5753, file: !3, line: 964, type: !7)
!5790 = !DILocation(line: 964, column: 22, scope: !5753)
!5791 = !DILocalVariable(name: "ll_failed", scope: !5753, file: !3, line: 965, type: !396)
!5792 = !DILocation(line: 965, column: 7, scope: !5753)
!5793 = !DILocalVariable(name: "burst", scope: !5753, file: !3, line: 966, type: !603)
!5794 = !DILocation(line: 966, column: 6, scope: !5753)
!5795 = !DILocalVariable(name: "port_window", scope: !5753, file: !3, line: 967, type: !603)
!5796 = !DILocation(line: 967, column: 6, scope: !5753)
!5797 = !DILocalVariable(name: "port_window_bytes", scope: !5753, file: !3, line: 967, type: !603)
!5798 = !DILocation(line: 967, column: 19, scope: !5753)
!5799 = !DILocation(line: 969, column: 6, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 969, column: 6)
!5801 = !DILocation(line: 969, column: 10, scope: !5800)
!5802 = !DILocation(line: 969, column: 6, scope: !5753)
!5803 = !DILocation(line: 970, column: 14, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 969, column: 29)
!5805 = !DILocation(line: 970, column: 17, scope: !5804)
!5806 = !DILocation(line: 970, column: 21, scope: !5804)
!5807 = !DILocation(line: 970, column: 12, scope: !5804)
!5808 = !DILocation(line: 971, column: 15, scope: !5804)
!5809 = !DILocation(line: 971, column: 18, scope: !5804)
!5810 = !DILocation(line: 971, column: 22, scope: !5804)
!5811 = !DILocation(line: 971, column: 13, scope: !5804)
!5812 = !DILocation(line: 972, column: 11, scope: !5804)
!5813 = !DILocation(line: 972, column: 14, scope: !5804)
!5814 = !DILocation(line: 972, column: 18, scope: !5804)
!5815 = !DILocation(line: 972, column: 9, scope: !5804)
!5816 = !DILocation(line: 973, column: 17, scope: !5804)
!5817 = !DILocation(line: 973, column: 20, scope: !5804)
!5818 = !DILocation(line: 973, column: 24, scope: !5804)
!5819 = !DILocation(line: 973, column: 15, scope: !5804)
!5820 = !DILocation(line: 974, column: 2, scope: !5804)
!5821 = !DILocation(line: 974, column: 13, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 974, column: 13)
!5823 = !DILocation(line: 974, column: 17, scope: !5822)
!5824 = !DILocation(line: 974, column: 13, scope: !5800)
!5825 = !DILocation(line: 975, column: 14, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 974, column: 36)
!5827 = !DILocation(line: 975, column: 17, scope: !5826)
!5828 = !DILocation(line: 975, column: 21, scope: !5826)
!5829 = !DILocation(line: 975, column: 12, scope: !5826)
!5830 = !DILocation(line: 976, column: 15, scope: !5826)
!5831 = !DILocation(line: 976, column: 18, scope: !5826)
!5832 = !DILocation(line: 976, column: 22, scope: !5826)
!5833 = !DILocation(line: 976, column: 13, scope: !5826)
!5834 = !DILocation(line: 977, column: 11, scope: !5826)
!5835 = !DILocation(line: 977, column: 14, scope: !5826)
!5836 = !DILocation(line: 977, column: 18, scope: !5826)
!5837 = !DILocation(line: 977, column: 9, scope: !5826)
!5838 = !DILocation(line: 978, column: 17, scope: !5826)
!5839 = !DILocation(line: 978, column: 20, scope: !5826)
!5840 = !DILocation(line: 978, column: 24, scope: !5826)
!5841 = !DILocation(line: 978, column: 15, scope: !5826)
!5842 = !DILocation(line: 979, column: 2, scope: !5826)
!5843 = !DILocation(line: 980, column: 3, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 979, column: 9)
!5845 = !DILocation(line: 981, column: 3, scope: !5844)
!5846 = !DILocation(line: 985, column: 10, scope: !5753)
!5847 = !DILocation(line: 985, column: 2, scope: !5753)
!5848 = !DILocation(line: 987, column: 6, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 985, column: 21)
!5850 = !DILocation(line: 988, column: 3, scope: !5849)
!5851 = !DILocation(line: 990, column: 6, scope: !5849)
!5852 = !DILocation(line: 991, column: 3, scope: !5849)
!5853 = !DILocation(line: 993, column: 6, scope: !5849)
!5854 = !DILocation(line: 994, column: 3, scope: !5849)
!5855 = !DILocation(line: 996, column: 3, scope: !5849)
!5856 = !DILocation(line: 1000, column: 14, scope: !5753)
!5857 = !DILocation(line: 1000, column: 6, scope: !5753)
!5858 = !DILocation(line: 1000, column: 4, scope: !5753)
!5859 = !DILocation(line: 1001, column: 7, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1001, column: 6)
!5861 = !DILocation(line: 1001, column: 6, scope: !5753)
!5862 = !DILocation(line: 1002, column: 3, scope: !5860)
!5863 = !DILocation(line: 1004, column: 11, scope: !5753)
!5864 = !DILocation(line: 1004, column: 2, scope: !5753)
!5865 = !DILocation(line: 1004, column: 5, scope: !5753)
!5866 = !DILocation(line: 1004, column: 9, scope: !5753)
!5867 = !DILocation(line: 1005, column: 16, scope: !5753)
!5868 = !DILocation(line: 1005, column: 2, scope: !5753)
!5869 = !DILocation(line: 1005, column: 5, scope: !5753)
!5870 = !DILocation(line: 1005, column: 14, scope: !5753)
!5871 = !DILocation(line: 1006, column: 10, scope: !5753)
!5872 = !DILocation(line: 1006, column: 2, scope: !5753)
!5873 = !DILocation(line: 1006, column: 5, scope: !5753)
!5874 = !DILocation(line: 1006, column: 8, scope: !5753)
!5875 = !DILocation(line: 1009, column: 6, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1009, column: 6)
!5877 = !DILocation(line: 1009, column: 6, scope: !5753)
!5878 = !DILocation(line: 1010, column: 11, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 1009, column: 19)
!5880 = !DILocation(line: 1010, column: 9, scope: !5879)
!5881 = !DILocation(line: 1011, column: 23, scope: !5879)
!5882 = !DILocation(line: 1011, column: 46, scope: !5879)
!5883 = !DILocation(line: 1011, column: 37, scope: !5879)
!5884 = !DILocation(line: 1011, column: 35, scope: !5879)
!5885 = !DILocation(line: 1011, column: 21, scope: !5879)
!5886 = !DILocation(line: 1013, column: 3, scope: !5879)
!5887 = !DILocation(line: 1013, column: 6, scope: !5879)
!5888 = !DILocation(line: 1013, column: 9, scope: !5879)
!5889 = !DILocation(line: 1020, column: 13, scope: !5879)
!5890 = !DILocation(line: 1020, column: 31, scope: !5879)
!5891 = !DILocation(line: 1020, column: 11, scope: !5879)
!5892 = !DILocation(line: 1020, column: 3, scope: !5879)
!5893 = !DILocation(line: 1020, column: 6, scope: !5879)
!5894 = !DILocation(line: 1020, column: 9, scope: !5879)
!5895 = !DILocation(line: 1021, column: 2, scope: !5879)
!5896 = !DILocation(line: 1023, column: 11, scope: !5753)
!5897 = !DILocation(line: 1023, column: 14, scope: !5753)
!5898 = !DILocation(line: 1023, column: 18, scope: !5753)
!5899 = !DILocation(line: 1023, column: 2, scope: !5753)
!5900 = !DILocation(line: 1023, column: 5, scope: !5753)
!5901 = !DILocation(line: 1023, column: 9, scope: !5753)
!5902 = !DILocation(line: 1024, column: 6, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1024, column: 6)
!5904 = !DILocation(line: 1024, column: 10, scope: !5903)
!5905 = !DILocation(line: 1024, column: 6, scope: !5753)
!5906 = !DILocation(line: 1025, column: 3, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 1024, column: 29)
!5908 = !DILocation(line: 1025, column: 6, scope: !5907)
!5909 = !DILocation(line: 1025, column: 11, scope: !5907)
!5910 = !DILocation(line: 1027, column: 3, scope: !5907)
!5911 = !DILocation(line: 1027, column: 6, scope: !5907)
!5912 = !DILocation(line: 1027, column: 10, scope: !5907)
!5913 = !DILocation(line: 1028, column: 7, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 1028, column: 7)
!5915 = !DILocation(line: 1028, column: 7, scope: !5907)
!5916 = !DILocation(line: 1029, column: 4, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 1028, column: 20)
!5918 = !DILocation(line: 1029, column: 7, scope: !5917)
!5919 = !DILocation(line: 1029, column: 11, scope: !5917)
!5920 = !DILocation(line: 1031, column: 8, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5917, file: !3, line: 1031, column: 8)
!5922 = !DILocation(line: 1031, column: 26, scope: !5921)
!5923 = !DILocation(line: 1031, column: 8, scope: !5917)
!5924 = !DILocation(line: 1032, column: 5, scope: !5921)
!5925 = !DILocation(line: 1032, column: 8, scope: !5921)
!5926 = !DILocation(line: 1032, column: 13, scope: !5921)
!5927 = !DILocation(line: 1033, column: 13, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 1033, column: 13)
!5929 = !DILocation(line: 1033, column: 31, scope: !5928)
!5930 = !DILocation(line: 1033, column: 13, scope: !5921)
!5931 = !DILocation(line: 1034, column: 5, scope: !5928)
!5932 = !DILocation(line: 1034, column: 8, scope: !5928)
!5933 = !DILocation(line: 1034, column: 13, scope: !5928)
!5934 = !DILocation(line: 1035, column: 13, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 1035, column: 13)
!5936 = !DILocation(line: 1035, column: 31, scope: !5935)
!5937 = !DILocation(line: 1035, column: 13, scope: !5928)
!5938 = !DILocation(line: 1036, column: 5, scope: !5935)
!5939 = !DILocation(line: 1036, column: 8, scope: !5935)
!5940 = !DILocation(line: 1036, column: 13, scope: !5935)
!5941 = !DILocation(line: 1038, column: 3, scope: !5917)
!5942 = !DILocation(line: 1039, column: 4, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 1038, column: 10)
!5944 = !DILocation(line: 1039, column: 7, scope: !5943)
!5945 = !DILocation(line: 1039, column: 11, scope: !5943)
!5946 = !DILocation(line: 1041, column: 2, scope: !5907)
!5947 = !DILocation(line: 1042, column: 3, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 1041, column: 9)
!5949 = !DILocation(line: 1042, column: 6, scope: !5948)
!5950 = !DILocation(line: 1042, column: 11, scope: !5948)
!5951 = !DILocation(line: 1044, column: 3, scope: !5948)
!5952 = !DILocation(line: 1044, column: 6, scope: !5948)
!5953 = !DILocation(line: 1044, column: 10, scope: !5948)
!5954 = !DILocation(line: 1045, column: 7, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 1045, column: 7)
!5956 = !DILocation(line: 1045, column: 7, scope: !5948)
!5957 = !DILocation(line: 1046, column: 4, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 1045, column: 20)
!5959 = !DILocation(line: 1046, column: 7, scope: !5958)
!5960 = !DILocation(line: 1046, column: 11, scope: !5958)
!5961 = !DILocation(line: 1048, column: 8, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 1048, column: 8)
!5963 = !DILocation(line: 1048, column: 26, scope: !5962)
!5964 = !DILocation(line: 1048, column: 8, scope: !5958)
!5965 = !DILocation(line: 1049, column: 5, scope: !5962)
!5966 = !DILocation(line: 1049, column: 8, scope: !5962)
!5967 = !DILocation(line: 1049, column: 13, scope: !5962)
!5968 = !DILocation(line: 1050, column: 13, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 1050, column: 13)
!5970 = !DILocation(line: 1050, column: 31, scope: !5969)
!5971 = !DILocation(line: 1050, column: 13, scope: !5962)
!5972 = !DILocation(line: 1051, column: 5, scope: !5969)
!5973 = !DILocation(line: 1051, column: 8, scope: !5969)
!5974 = !DILocation(line: 1051, column: 13, scope: !5969)
!5975 = !DILocation(line: 1052, column: 13, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 1052, column: 13)
!5977 = !DILocation(line: 1052, column: 31, scope: !5976)
!5978 = !DILocation(line: 1052, column: 13, scope: !5969)
!5979 = !DILocation(line: 1053, column: 5, scope: !5976)
!5980 = !DILocation(line: 1053, column: 8, scope: !5976)
!5981 = !DILocation(line: 1053, column: 13, scope: !5976)
!5982 = !DILocation(line: 1054, column: 3, scope: !5958)
!5983 = !DILocation(line: 1055, column: 4, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 1054, column: 10)
!5985 = !DILocation(line: 1055, column: 7, scope: !5984)
!5986 = !DILocation(line: 1055, column: 11, scope: !5984)
!5987 = !DILocation(line: 1059, column: 2, scope: !5753)
!5988 = !DILocation(line: 1059, column: 5, scope: !5753)
!5989 = !DILocation(line: 1059, column: 10, scope: !5753)
!5990 = !DILocation(line: 1060, column: 13, scope: !5753)
!5991 = !DILocation(line: 1060, column: 2, scope: !5753)
!5992 = !DILocation(line: 1060, column: 5, scope: !5753)
!5993 = !DILocation(line: 1060, column: 10, scope: !5753)
!5994 = !DILocation(line: 1063, column: 3, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 1062, column: 19)
!5996 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1062, column: 6)
!5997 = !DILocation(line: 1063, column: 6, scope: !5995)
!5998 = !DILocation(line: 1063, column: 11, scope: !5995)
!5999 = !DILocation(line: 1065, column: 7, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 1065, column: 7)
!6001 = !DILocation(line: 1065, column: 11, scope: !6000)
!6002 = !DILocation(line: 1065, column: 7, scope: !5995)
!6003 = !DILocation(line: 1066, column: 4, scope: !6000)
!6004 = !DILocation(line: 1066, column: 7, scope: !6000)
!6005 = !DILocation(line: 1066, column: 12, scope: !6000)
!6006 = !DILocation(line: 1068, column: 4, scope: !6000)
!6007 = !DILocation(line: 1068, column: 7, scope: !6000)
!6008 = !DILocation(line: 1068, column: 12, scope: !6000)
!6009 = !DILocation(line: 1078, column: 6, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1078, column: 6)
!6011 = !DILocation(line: 1078, column: 10, scope: !6010)
!6012 = !DILocation(line: 1078, column: 16, scope: !6010)
!6013 = !DILocation(line: 1078, column: 23, scope: !6010)
!6014 = !DILocation(line: 1078, column: 6, scope: !5753)
!6015 = !DILocation(line: 1079, column: 18, scope: !6010)
!6016 = !DILocation(line: 1079, column: 21, scope: !6010)
!6017 = !DILocation(line: 1079, column: 3, scope: !6010)
!6018 = !DILocation(line: 1079, column: 6, scope: !6010)
!6019 = !DILocation(line: 1079, column: 16, scope: !6010)
!6020 = !DILocation(line: 1090, column: 7, scope: !5753)
!6021 = !DILocation(line: 1090, column: 5, scope: !5753)
!6022 = !DILocation(line: 1091, column: 25, scope: !5753)
!6023 = !DILocation(line: 1091, column: 16, scope: !5753)
!6024 = !DILocation(line: 1091, column: 31, scope: !5753)
!6025 = !DILocation(line: 1091, column: 29, scope: !5753)
!6026 = !DILocation(line: 1091, column: 14, scope: !5753)
!6027 = !DILocation(line: 1093, column: 6, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1093, column: 6)
!6029 = !DILocation(line: 1093, column: 12, scope: !6028)
!6030 = !DILocation(line: 1093, column: 6, scope: !5753)
!6031 = !DILocation(line: 1094, column: 17, scope: !6028)
!6032 = !DILocation(line: 1094, column: 21, scope: !6028)
!6033 = !DILocation(line: 1094, column: 3, scope: !6028)
!6034 = !DILocation(line: 1094, column: 6, scope: !6028)
!6035 = !DILocation(line: 1094, column: 15, scope: !6028)
!6036 = !DILocation(line: 1096, column: 2, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1096, column: 2)
!6038 = !DILocation(line: 1096, column: 2, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 1096, column: 2)
!6040 = !DILocalVariable(name: "osg", scope: !6041, file: !3, line: 1097, type: !6042)
!6041 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1096, column: 36)
!6042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 64)
!6043 = !DILocation(line: 1097, column: 19, scope: !6041)
!6044 = !DILocation(line: 1097, column: 26, scope: !6041)
!6045 = !DILocation(line: 1097, column: 29, scope: !6041)
!6046 = !DILocation(line: 1097, column: 32, scope: !6041)
!6047 = !DILocation(line: 1099, column: 15, scope: !6041)
!6048 = !DILocation(line: 1099, column: 3, scope: !6041)
!6049 = !DILocation(line: 1099, column: 8, scope: !6041)
!6050 = !DILocation(line: 1099, column: 13, scope: !6041)
!6051 = !DILocation(line: 1100, column: 13, scope: !6041)
!6052 = !DILocation(line: 1100, column: 3, scope: !6041)
!6053 = !DILocation(line: 1100, column: 8, scope: !6041)
!6054 = !DILocation(line: 1100, column: 11, scope: !6041)
!6055 = !DILocation(line: 1101, column: 13, scope: !6041)
!6056 = !DILocation(line: 1101, column: 33, scope: !6041)
!6057 = !DILocation(line: 1101, column: 31, scope: !6041)
!6058 = !DILocation(line: 1101, column: 3, scope: !6041)
!6059 = !DILocation(line: 1101, column: 8, scope: !6041)
!6060 = !DILocation(line: 1101, column: 11, scope: !6041)
!6061 = !DILocation(line: 1103, column: 7, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 1103, column: 7)
!6063 = !DILocation(line: 1103, column: 10, scope: !6062)
!6064 = !DILocation(line: 1103, column: 7, scope: !6041)
!6065 = !DILocation(line: 1104, column: 34, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 1103, column: 20)
!6067 = !DILocation(line: 1104, column: 38, scope: !6066)
!6068 = !DILocation(line: 1105, column: 14, scope: !6066)
!6069 = !DILocation(line: 1105, column: 19, scope: !6066)
!6070 = !DILocation(line: 1104, column: 19, scope: !6066)
!6071 = !DILocation(line: 1104, column: 4, scope: !6066)
!6072 = !DILocation(line: 1104, column: 9, scope: !6066)
!6073 = !DILocation(line: 1104, column: 17, scope: !6066)
!6074 = !DILocation(line: 1106, column: 9, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 1106, column: 8)
!6076 = !DILocation(line: 1106, column: 14, scope: !6075)
!6077 = !DILocation(line: 1106, column: 8, scope: !6066)
!6078 = !DILocation(line: 1107, column: 5, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6075, file: !3, line: 1106, column: 23)
!6080 = !DILocation(line: 1109, column: 15, scope: !6079)
!6081 = !DILocation(line: 1110, column: 5, scope: !6079)
!6082 = !DILocation(line: 1110, column: 8, scope: !6079)
!6083 = !DILocation(line: 1110, column: 17, scope: !6079)
!6084 = !DILocation(line: 1111, column: 5, scope: !6079)
!6085 = !DILocation(line: 1114, column: 29, scope: !6066)
!6086 = !DILocation(line: 1114, column: 32, scope: !6066)
!6087 = !DILocation(line: 1114, column: 35, scope: !6066)
!6088 = !DILocation(line: 1114, column: 41, scope: !6066)
!6089 = !DILocation(line: 1114, column: 46, scope: !6066)
!6090 = !DILocation(line: 1114, column: 52, scope: !6066)
!6091 = !DILocation(line: 1114, column: 43, scope: !6066)
!6092 = !DILocation(line: 1114, column: 4, scope: !6066)
!6093 = !DILocation(line: 1115, column: 3, scope: !6066)
!6094 = !DILocation(line: 1116, column: 2, scope: !6041)
!6095 = distinct !{!6095, !6036, !6096}
!6096 = !DILocation(line: 1116, column: 2, scope: !6037)
!6097 = !DILocation(line: 1118, column: 13, scope: !5753)
!6098 = !DILocation(line: 1118, column: 2, scope: !5753)
!6099 = !DILocation(line: 1118, column: 5, scope: !5753)
!6100 = !DILocation(line: 1118, column: 11, scope: !5753)
!6101 = !DILocation(line: 1121, column: 6, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1121, column: 6)
!6103 = !DILocation(line: 1121, column: 6, scope: !5753)
!6104 = !DILocation(line: 1122, column: 10, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 1122, column: 3)
!6106 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 1121, column: 17)
!6107 = !DILocation(line: 1122, column: 8, scope: !6105)
!6108 = !DILocation(line: 1122, column: 15, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 1122, column: 3)
!6110 = !DILocation(line: 1122, column: 19, scope: !6109)
!6111 = !DILocation(line: 1122, column: 22, scope: !6109)
!6112 = !DILocation(line: 1122, column: 17, scope: !6109)
!6113 = !DILocation(line: 1122, column: 3, scope: !6105)
!6114 = !DILocalVariable(name: "osg", scope: !6115, file: !3, line: 1123, type: !6042)
!6115 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 1122, column: 34)
!6116 = !DILocation(line: 1123, column: 20, scope: !6115)
!6117 = !DILocation(line: 1123, column: 27, scope: !6115)
!6118 = !DILocation(line: 1123, column: 30, scope: !6115)
!6119 = !DILocation(line: 1123, column: 33, scope: !6115)
!6120 = !DILocation(line: 1125, column: 8, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1125, column: 8)
!6122 = !DILocation(line: 1125, column: 13, scope: !6121)
!6123 = !DILocation(line: 1125, column: 8, scope: !6115)
!6124 = !DILocation(line: 1126, column: 19, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 1125, column: 22)
!6126 = !DILocation(line: 1126, column: 23, scope: !6125)
!6127 = !DILocation(line: 1126, column: 34, scope: !6125)
!6128 = !DILocation(line: 1126, column: 39, scope: !6125)
!6129 = !DILocation(line: 1127, column: 12, scope: !6125)
!6130 = !DILocation(line: 1127, column: 17, scope: !6125)
!6131 = !DILocation(line: 1126, column: 5, scope: !6125)
!6132 = !DILocation(line: 1128, column: 5, scope: !6125)
!6133 = !DILocation(line: 1128, column: 10, scope: !6125)
!6134 = !DILocation(line: 1128, column: 18, scope: !6125)
!6135 = !DILocation(line: 1129, column: 4, scope: !6125)
!6136 = !DILocation(line: 1130, column: 3, scope: !6115)
!6137 = !DILocation(line: 1122, column: 30, scope: !6109)
!6138 = !DILocation(line: 1122, column: 3, scope: !6109)
!6139 = distinct !{!6139, !6113, !6140}
!6140 = !DILocation(line: 1130, column: 3, scope: !6105)
!6141 = !DILocation(line: 1131, column: 2, scope: !6106)
!6142 = !DILocation(line: 1133, column: 24, scope: !5753)
!6143 = !DILocation(line: 1133, column: 27, scope: !5753)
!6144 = !DILocation(line: 1133, column: 32, scope: !5753)
!6145 = !DILocation(line: 1133, column: 35, scope: !5753)
!6146 = !DILocation(line: 1133, column: 39, scope: !5753)
!6147 = !DILocation(line: 1133, column: 9, scope: !5753)
!6148 = !DILocation(line: 1133, column: 2, scope: !5753)
!6149 = !DILocation(line: 1134, column: 1, scope: !5753)
!6150 = distinct !DISubprogram(name: "omap_dma_prep_dma_cyclic", scope: !3, file: !3, line: 1136, type: !4236, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!6151 = !DILocalVariable(name: "chan", arg: 1, scope: !6150, file: !3, line: 1137, type: !398)
!6152 = !DILocation(line: 1137, column: 19, scope: !6150)
!6153 = !DILocalVariable(name: "buf_addr", arg: 2, scope: !6150, file: !3, line: 1137, type: !1142)
!6154 = !DILocation(line: 1137, column: 36, scope: !6150)
!6155 = !DILocalVariable(name: "buf_len", arg: 3, scope: !6150, file: !3, line: 1137, type: !510)
!6156 = !DILocation(line: 1137, column: 53, scope: !6150)
!6157 = !DILocalVariable(name: "period_len", arg: 4, scope: !6150, file: !3, line: 1138, type: !510)
!6158 = !DILocation(line: 1138, column: 9, scope: !6150)
!6159 = !DILocalVariable(name: "dir", arg: 5, scope: !6150, file: !3, line: 1138, type: !135)
!6160 = !DILocation(line: 1138, column: 49, scope: !6150)
!6161 = !DILocalVariable(name: "flags", arg: 6, scope: !6150, file: !3, line: 1138, type: !350)
!6162 = !DILocation(line: 1138, column: 68, scope: !6150)
!6163 = !DILocalVariable(name: "od", scope: !6150, file: !3, line: 1140, type: !358)
!6164 = !DILocation(line: 1140, column: 22, scope: !6150)
!6165 = !DILocation(line: 1140, column: 43, scope: !6150)
!6166 = !DILocation(line: 1140, column: 49, scope: !6150)
!6167 = !DILocation(line: 1140, column: 27, scope: !6150)
!6168 = !DILocalVariable(name: "c", scope: !6150, file: !3, line: 1141, type: !4404)
!6169 = !DILocation(line: 1141, column: 20, scope: !6150)
!6170 = !DILocation(line: 1141, column: 41, scope: !6150)
!6171 = !DILocation(line: 1141, column: 24, scope: !6150)
!6172 = !DILocalVariable(name: "dev_width", scope: !6150, file: !3, line: 1142, type: !142)
!6173 = !DILocation(line: 1142, column: 26, scope: !6150)
!6174 = !DILocalVariable(name: "d", scope: !6150, file: !3, line: 1143, type: !4459)
!6175 = !DILocation(line: 1143, column: 20, scope: !6150)
!6176 = !DILocalVariable(name: "dev_addr", scope: !6150, file: !3, line: 1144, type: !1142)
!6177 = !DILocation(line: 1144, column: 13, scope: !6150)
!6178 = !DILocalVariable(name: "es", scope: !6150, file: !3, line: 1145, type: !7)
!6179 = !DILocation(line: 1145, column: 11, scope: !6150)
!6180 = !DILocalVariable(name: "burst", scope: !6150, file: !3, line: 1146, type: !603)
!6181 = !DILocation(line: 1146, column: 6, scope: !6150)
!6182 = !DILocation(line: 1148, column: 6, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 1148, column: 6)
!6184 = !DILocation(line: 1148, column: 10, scope: !6183)
!6185 = !DILocation(line: 1148, column: 6, scope: !6150)
!6186 = !DILocation(line: 1149, column: 14, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 1148, column: 29)
!6188 = !DILocation(line: 1149, column: 17, scope: !6187)
!6189 = !DILocation(line: 1149, column: 21, scope: !6187)
!6190 = !DILocation(line: 1149, column: 12, scope: !6187)
!6191 = !DILocation(line: 1150, column: 15, scope: !6187)
!6192 = !DILocation(line: 1150, column: 18, scope: !6187)
!6193 = !DILocation(line: 1150, column: 22, scope: !6187)
!6194 = !DILocation(line: 1150, column: 13, scope: !6187)
!6195 = !DILocation(line: 1151, column: 11, scope: !6187)
!6196 = !DILocation(line: 1151, column: 14, scope: !6187)
!6197 = !DILocation(line: 1151, column: 18, scope: !6187)
!6198 = !DILocation(line: 1151, column: 9, scope: !6187)
!6199 = !DILocation(line: 1152, column: 2, scope: !6187)
!6200 = !DILocation(line: 1152, column: 13, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 1152, column: 13)
!6202 = !DILocation(line: 1152, column: 17, scope: !6201)
!6203 = !DILocation(line: 1152, column: 13, scope: !6183)
!6204 = !DILocation(line: 1153, column: 14, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 1152, column: 36)
!6206 = !DILocation(line: 1153, column: 17, scope: !6205)
!6207 = !DILocation(line: 1153, column: 21, scope: !6205)
!6208 = !DILocation(line: 1153, column: 12, scope: !6205)
!6209 = !DILocation(line: 1154, column: 15, scope: !6205)
!6210 = !DILocation(line: 1154, column: 18, scope: !6205)
!6211 = !DILocation(line: 1154, column: 22, scope: !6205)
!6212 = !DILocation(line: 1154, column: 13, scope: !6205)
!6213 = !DILocation(line: 1155, column: 11, scope: !6205)
!6214 = !DILocation(line: 1155, column: 14, scope: !6205)
!6215 = !DILocation(line: 1155, column: 18, scope: !6205)
!6216 = !DILocation(line: 1155, column: 9, scope: !6205)
!6217 = !DILocation(line: 1156, column: 2, scope: !6205)
!6218 = !DILocation(line: 1157, column: 3, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 1156, column: 9)
!6220 = !DILocation(line: 1158, column: 3, scope: !6219)
!6221 = !DILocation(line: 1162, column: 10, scope: !6150)
!6222 = !DILocation(line: 1162, column: 2, scope: !6150)
!6223 = !DILocation(line: 1164, column: 6, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 1162, column: 21)
!6225 = !DILocation(line: 1165, column: 3, scope: !6224)
!6226 = !DILocation(line: 1167, column: 6, scope: !6224)
!6227 = !DILocation(line: 1168, column: 3, scope: !6224)
!6228 = !DILocation(line: 1170, column: 6, scope: !6224)
!6229 = !DILocation(line: 1171, column: 3, scope: !6224)
!6230 = !DILocation(line: 1173, column: 3, scope: !6224)
!6231 = !DILocation(line: 1177, column: 6, scope: !6150)
!6232 = !DILocation(line: 1177, column: 4, scope: !6150)
!6233 = !DILocation(line: 1178, column: 7, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 1178, column: 6)
!6235 = !DILocation(line: 1178, column: 6, scope: !6150)
!6236 = !DILocation(line: 1179, column: 3, scope: !6234)
!6237 = !DILocation(line: 1181, column: 11, scope: !6150)
!6238 = !DILocation(line: 1181, column: 2, scope: !6150)
!6239 = !DILocation(line: 1181, column: 5, scope: !6150)
!6240 = !DILocation(line: 1181, column: 9, scope: !6150)
!6241 = !DILocation(line: 1182, column: 16, scope: !6150)
!6242 = !DILocation(line: 1182, column: 2, scope: !6150)
!6243 = !DILocation(line: 1182, column: 5, scope: !6150)
!6244 = !DILocation(line: 1182, column: 14, scope: !6150)
!6245 = !DILocation(line: 1183, column: 10, scope: !6150)
!6246 = !DILocation(line: 1183, column: 2, scope: !6150)
!6247 = !DILocation(line: 1183, column: 5, scope: !6150)
!6248 = !DILocation(line: 1183, column: 8, scope: !6150)
!6249 = !DILocation(line: 1184, column: 10, scope: !6150)
!6250 = !DILocation(line: 1184, column: 2, scope: !6150)
!6251 = !DILocation(line: 1184, column: 5, scope: !6150)
!6252 = !DILocation(line: 1184, column: 8, scope: !6150)
!6253 = !DILocation(line: 1185, column: 18, scope: !6150)
!6254 = !DILocation(line: 1185, column: 2, scope: !6150)
!6255 = !DILocation(line: 1185, column: 5, scope: !6150)
!6256 = !DILocation(line: 1185, column: 11, scope: !6150)
!6257 = !DILocation(line: 1185, column: 16, scope: !6150)
!6258 = !DILocation(line: 1186, column: 16, scope: !6150)
!6259 = !DILocation(line: 1186, column: 38, scope: !6150)
!6260 = !DILocation(line: 1186, column: 29, scope: !6150)
!6261 = !DILocation(line: 1186, column: 27, scope: !6150)
!6262 = !DILocation(line: 1186, column: 2, scope: !6150)
!6263 = !DILocation(line: 1186, column: 5, scope: !6150)
!6264 = !DILocation(line: 1186, column: 11, scope: !6150)
!6265 = !DILocation(line: 1186, column: 14, scope: !6150)
!6266 = !DILocation(line: 1187, column: 16, scope: !6150)
!6267 = !DILocation(line: 1187, column: 26, scope: !6150)
!6268 = !DILocation(line: 1187, column: 24, scope: !6150)
!6269 = !DILocation(line: 1187, column: 2, scope: !6150)
!6270 = !DILocation(line: 1187, column: 5, scope: !6150)
!6271 = !DILocation(line: 1187, column: 11, scope: !6150)
!6272 = !DILocation(line: 1187, column: 14, scope: !6150)
!6273 = !DILocation(line: 1188, column: 2, scope: !6150)
!6274 = !DILocation(line: 1188, column: 5, scope: !6150)
!6275 = !DILocation(line: 1188, column: 11, scope: !6150)
!6276 = !DILocation(line: 1190, column: 11, scope: !6150)
!6277 = !DILocation(line: 1190, column: 14, scope: !6150)
!6278 = !DILocation(line: 1190, column: 2, scope: !6150)
!6279 = !DILocation(line: 1190, column: 5, scope: !6150)
!6280 = !DILocation(line: 1190, column: 9, scope: !6150)
!6281 = !DILocation(line: 1191, column: 6, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 1191, column: 6)
!6283 = !DILocation(line: 1191, column: 10, scope: !6282)
!6284 = !DILocation(line: 1191, column: 6, scope: !6150)
!6285 = !DILocation(line: 1192, column: 3, scope: !6282)
!6286 = !DILocation(line: 1192, column: 6, scope: !6282)
!6287 = !DILocation(line: 1192, column: 10, scope: !6282)
!6288 = !DILocation(line: 1194, column: 3, scope: !6282)
!6289 = !DILocation(line: 1194, column: 6, scope: !6282)
!6290 = !DILocation(line: 1194, column: 10, scope: !6282)
!6291 = !DILocation(line: 1196, column: 2, scope: !6150)
!6292 = !DILocation(line: 1196, column: 5, scope: !6150)
!6293 = !DILocation(line: 1196, column: 10, scope: !6150)
!6294 = !DILocation(line: 1197, column: 6, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 1197, column: 6)
!6296 = !DILocation(line: 1197, column: 12, scope: !6295)
!6297 = !DILocation(line: 1197, column: 6, scope: !6150)
!6298 = !DILocation(line: 1198, column: 3, scope: !6295)
!6299 = !DILocation(line: 1198, column: 6, scope: !6295)
!6300 = !DILocation(line: 1198, column: 11, scope: !6295)
!6301 = !DILocation(line: 1200, column: 12, scope: !6150)
!6302 = !DILocation(line: 1200, column: 2, scope: !6150)
!6303 = !DILocation(line: 1200, column: 5, scope: !6150)
!6304 = !DILocation(line: 1200, column: 10, scope: !6150)
!6305 = !DILocation(line: 1203, column: 3, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 1202, column: 19)
!6307 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 1202, column: 6)
!6308 = !DILocation(line: 1203, column: 6, scope: !6306)
!6309 = !DILocation(line: 1203, column: 11, scope: !6306)
!6310 = !DILocation(line: 1205, column: 7, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 1205, column: 7)
!6312 = !DILocation(line: 1205, column: 11, scope: !6311)
!6313 = !DILocation(line: 1205, column: 7, scope: !6306)
!6314 = !DILocation(line: 1206, column: 4, scope: !6311)
!6315 = !DILocation(line: 1206, column: 7, scope: !6311)
!6316 = !DILocation(line: 1206, column: 12, scope: !6311)
!6317 = !DILocation(line: 1208, column: 4, scope: !6311)
!6318 = !DILocation(line: 1208, column: 7, scope: !6311)
!6319 = !DILocation(line: 1208, column: 12, scope: !6311)
!6320 = !DILocation(line: 1227, column: 6, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 1227, column: 6)
!6322 = !DILocation(line: 1227, column: 6, scope: !6150)
!6323 = !DILocation(line: 1228, column: 3, scope: !6321)
!6324 = !DILocation(line: 1228, column: 6, scope: !6321)
!6325 = !DILocation(line: 1228, column: 10, scope: !6321)
!6326 = !DILocation(line: 1230, column: 18, scope: !6321)
!6327 = !DILocation(line: 1230, column: 21, scope: !6321)
!6328 = !DILocation(line: 1230, column: 28, scope: !6321)
!6329 = !DILocation(line: 1230, column: 3, scope: !6321)
!6330 = !DILocation(line: 1230, column: 6, scope: !6321)
!6331 = !DILocation(line: 1230, column: 16, scope: !6321)
!6332 = !DILocation(line: 1232, column: 2, scope: !6150)
!6333 = !DILocation(line: 1232, column: 5, scope: !6150)
!6334 = !DILocation(line: 1232, column: 12, scope: !6150)
!6335 = !DILocation(line: 1234, column: 24, scope: !6150)
!6336 = !DILocation(line: 1234, column: 27, scope: !6150)
!6337 = !DILocation(line: 1234, column: 32, scope: !6150)
!6338 = !DILocation(line: 1234, column: 35, scope: !6150)
!6339 = !DILocation(line: 1234, column: 39, scope: !6150)
!6340 = !DILocation(line: 1234, column: 9, scope: !6150)
!6341 = !DILocation(line: 1234, column: 2, scope: !6150)
!6342 = !DILocation(line: 1235, column: 1, scope: !6150)
!6343 = distinct !DISubprogram(name: "omap_dma_prep_dma_memcpy", scope: !3, file: !3, line: 1237, type: !4129, scopeLine: 1240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!6344 = !DILocalVariable(name: "word", arg: 1, scope: !6345, file: !6346, line: 233, type: !350)
!6345 = distinct !DISubprogram(name: "__ffs", scope: !6346, file: !6346, line: 233, type: !6347, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!6346 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6347 = !DISubroutineType(types: !6348)
!6348 = !{!350, !350}
!6349 = !DILocation(line: 233, column: 58, scope: !6345, inlinedAt: !6350)
!6350 = distinct !DILocation(line: 1249, column: 14, scope: !6343)
!6351 = !DILocalVariable(name: "chan", arg: 1, scope: !6343, file: !3, line: 1238, type: !398)
!6352 = !DILocation(line: 1238, column: 19, scope: !6343)
!6353 = !DILocalVariable(name: "dest", arg: 2, scope: !6343, file: !3, line: 1238, type: !1142)
!6354 = !DILocation(line: 1238, column: 36, scope: !6343)
!6355 = !DILocalVariable(name: "src", arg: 3, scope: !6343, file: !3, line: 1238, type: !1142)
!6356 = !DILocation(line: 1238, column: 53, scope: !6343)
!6357 = !DILocalVariable(name: "len", arg: 4, scope: !6343, file: !3, line: 1239, type: !510)
!6358 = !DILocation(line: 1239, column: 9, scope: !6343)
!6359 = !DILocalVariable(name: "tx_flags", arg: 5, scope: !6343, file: !3, line: 1239, type: !350)
!6360 = !DILocation(line: 1239, column: 28, scope: !6343)
!6361 = !DILocalVariable(name: "c", scope: !6343, file: !3, line: 1241, type: !4404)
!6362 = !DILocation(line: 1241, column: 20, scope: !6343)
!6363 = !DILocation(line: 1241, column: 41, scope: !6343)
!6364 = !DILocation(line: 1241, column: 24, scope: !6343)
!6365 = !DILocalVariable(name: "d", scope: !6343, file: !3, line: 1242, type: !4459)
!6366 = !DILocation(line: 1242, column: 20, scope: !6343)
!6367 = !DILocalVariable(name: "data_type", scope: !6343, file: !3, line: 1243, type: !4471)
!6368 = !DILocation(line: 1243, column: 10, scope: !6343)
!6369 = !DILocation(line: 1245, column: 6, scope: !6343)
!6370 = !DILocation(line: 1245, column: 4, scope: !6343)
!6371 = !DILocation(line: 1246, column: 7, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 1246, column: 6)
!6373 = !DILocation(line: 1246, column: 6, scope: !6343)
!6374 = !DILocation(line: 1247, column: 3, scope: !6372)
!6375 = !DILocation(line: 1249, column: 21, scope: !6343)
!6376 = !DILocation(line: 1249, column: 27, scope: !6343)
!6377 = !DILocation(line: 1249, column: 25, scope: !6343)
!6378 = !DILocation(line: 1249, column: 34, scope: !6343)
!6379 = !DILocation(line: 1249, column: 32, scope: !6343)
!6380 = !DILocation(line: 237, column: 11, scope: !6345, inlinedAt: !6350)
!6381 = !DILocation(line: 235, column: 2, scope: !6345, inlinedAt: !6350)
!6382 = !{i32 285870}
!6383 = !DILocation(line: 238, column: 9, scope: !6345, inlinedAt: !6350)
!6384 = !DILocation(line: 1249, column: 14, scope: !6343)
!6385 = !DILocation(line: 1249, column: 12, scope: !6343)
!6386 = !DILocation(line: 1250, column: 6, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 1250, column: 6)
!6388 = !DILocation(line: 1250, column: 16, scope: !6387)
!6389 = !DILocation(line: 1250, column: 6, scope: !6343)
!6390 = !DILocation(line: 1251, column: 13, scope: !6387)
!6391 = !DILocation(line: 1251, column: 3, scope: !6387)
!6392 = !DILocation(line: 1253, column: 2, scope: !6343)
!6393 = !DILocation(line: 1253, column: 5, scope: !6343)
!6394 = !DILocation(line: 1253, column: 9, scope: !6343)
!6395 = !DILocation(line: 1254, column: 16, scope: !6343)
!6396 = !DILocation(line: 1254, column: 2, scope: !6343)
!6397 = !DILocation(line: 1254, column: 5, scope: !6343)
!6398 = !DILocation(line: 1254, column: 14, scope: !6343)
!6399 = !DILocation(line: 1255, column: 2, scope: !6343)
!6400 = !DILocation(line: 1255, column: 5, scope: !6343)
!6401 = !DILocation(line: 1255, column: 8, scope: !6343)
!6402 = !DILocation(line: 1256, column: 10, scope: !6343)
!6403 = !DILocation(line: 1256, column: 2, scope: !6343)
!6404 = !DILocation(line: 1256, column: 5, scope: !6343)
!6405 = !DILocation(line: 1256, column: 8, scope: !6343)
!6406 = !DILocation(line: 1257, column: 16, scope: !6343)
!6407 = !DILocation(line: 1257, column: 22, scope: !6343)
!6408 = !DILocation(line: 1257, column: 20, scope: !6343)
!6409 = !DILocation(line: 1257, column: 2, scope: !6343)
!6410 = !DILocation(line: 1257, column: 5, scope: !6343)
!6411 = !DILocation(line: 1257, column: 11, scope: !6343)
!6412 = !DILocation(line: 1257, column: 14, scope: !6343)
!6413 = !DILocation(line: 1258, column: 2, scope: !6343)
!6414 = !DILocation(line: 1258, column: 5, scope: !6343)
!6415 = !DILocation(line: 1258, column: 11, scope: !6343)
!6416 = !DILocation(line: 1258, column: 14, scope: !6343)
!6417 = !DILocation(line: 1259, column: 18, scope: !6343)
!6418 = !DILocation(line: 1259, column: 2, scope: !6343)
!6419 = !DILocation(line: 1259, column: 5, scope: !6343)
!6420 = !DILocation(line: 1259, column: 11, scope: !6343)
!6421 = !DILocation(line: 1259, column: 16, scope: !6343)
!6422 = !DILocation(line: 1260, column: 2, scope: !6343)
!6423 = !DILocation(line: 1260, column: 5, scope: !6343)
!6424 = !DILocation(line: 1260, column: 11, scope: !6343)
!6425 = !DILocation(line: 1261, column: 11, scope: !6343)
!6426 = !DILocation(line: 1261, column: 14, scope: !6343)
!6427 = !DILocation(line: 1261, column: 2, scope: !6343)
!6428 = !DILocation(line: 1261, column: 5, scope: !6343)
!6429 = !DILocation(line: 1261, column: 9, scope: !6343)
!6430 = !DILocation(line: 1262, column: 2, scope: !6343)
!6431 = !DILocation(line: 1262, column: 5, scope: !6343)
!6432 = !DILocation(line: 1262, column: 9, scope: !6343)
!6433 = !DILocation(line: 1264, column: 6, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 1264, column: 6)
!6435 = !DILocation(line: 1264, column: 15, scope: !6434)
!6436 = !DILocation(line: 1264, column: 6, scope: !6343)
!6437 = !DILocation(line: 1265, column: 3, scope: !6434)
!6438 = !DILocation(line: 1265, column: 6, scope: !6434)
!6439 = !DILocation(line: 1265, column: 11, scope: !6434)
!6440 = !DILocation(line: 1267, column: 3, scope: !6434)
!6441 = !DILocation(line: 1267, column: 6, scope: !6434)
!6442 = !DILocation(line: 1267, column: 13, scope: !6434)
!6443 = !DILocation(line: 1269, column: 12, scope: !6343)
!6444 = !DILocation(line: 1269, column: 2, scope: !6343)
!6445 = !DILocation(line: 1269, column: 5, scope: !6343)
!6446 = !DILocation(line: 1269, column: 10, scope: !6343)
!6447 = !DILocation(line: 1272, column: 3, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 1271, column: 19)
!6449 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 1271, column: 6)
!6450 = !DILocation(line: 1272, column: 6, scope: !6448)
!6451 = !DILocation(line: 1272, column: 11, scope: !6448)
!6452 = !DILocation(line: 1273, column: 3, scope: !6448)
!6453 = !DILocation(line: 1273, column: 6, scope: !6448)
!6454 = !DILocation(line: 1273, column: 11, scope: !6448)
!6455 = !DILocation(line: 1280, column: 24, scope: !6343)
!6456 = !DILocation(line: 1280, column: 27, scope: !6343)
!6457 = !DILocation(line: 1280, column: 32, scope: !6343)
!6458 = !DILocation(line: 1280, column: 35, scope: !6343)
!6459 = !DILocation(line: 1280, column: 39, scope: !6343)
!6460 = !DILocation(line: 1280, column: 9, scope: !6343)
!6461 = !DILocation(line: 1280, column: 2, scope: !6343)
!6462 = !DILocation(line: 1281, column: 1, scope: !6343)
!6463 = distinct !DISubprogram(name: "omap_dma_prep_dma_interleaved", scope: !3, file: !3, line: 1283, type: !4240, scopeLine: 1286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!6464 = !DILocation(line: 233, column: 58, scope: !6345, inlinedAt: !6465)
!6465 = distinct !DILocation(line: 1304, column: 14, scope: !6463)
!6466 = !DILocalVariable(name: "chan", arg: 1, scope: !6463, file: !3, line: 1284, type: !398)
!6467 = !DILocation(line: 1284, column: 19, scope: !6463)
!6468 = !DILocalVariable(name: "xt", arg: 2, scope: !6463, file: !3, line: 1284, type: !4242)
!6469 = !DILocation(line: 1284, column: 58, scope: !6463)
!6470 = !DILocalVariable(name: "flags", arg: 3, scope: !6463, file: !3, line: 1285, type: !350)
!6471 = !DILocation(line: 1285, column: 16, scope: !6463)
!6472 = !DILocalVariable(name: "c", scope: !6463, file: !3, line: 1287, type: !4404)
!6473 = !DILocation(line: 1287, column: 20, scope: !6463)
!6474 = !DILocation(line: 1287, column: 41, scope: !6463)
!6475 = !DILocation(line: 1287, column: 24, scope: !6463)
!6476 = !DILocalVariable(name: "d", scope: !6463, file: !3, line: 1288, type: !4459)
!6477 = !DILocation(line: 1288, column: 20, scope: !6463)
!6478 = !DILocalVariable(name: "sg", scope: !6463, file: !3, line: 1289, type: !6042)
!6479 = !DILocation(line: 1289, column: 18, scope: !6463)
!6480 = !DILocalVariable(name: "data_type", scope: !6463, file: !3, line: 1290, type: !4471)
!6481 = !DILocation(line: 1290, column: 10, scope: !6463)
!6482 = !DILocalVariable(name: "src_icg", scope: !6463, file: !3, line: 1291, type: !510)
!6483 = !DILocation(line: 1291, column: 9, scope: !6463)
!6484 = !DILocalVariable(name: "dst_icg", scope: !6463, file: !3, line: 1291, type: !510)
!6485 = !DILocation(line: 1291, column: 18, scope: !6463)
!6486 = !DILocation(line: 1294, column: 25, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1294, column: 6)
!6488 = !DILocation(line: 1294, column: 29, scope: !6487)
!6489 = !DILocation(line: 1294, column: 6, scope: !6487)
!6490 = !DILocation(line: 1294, column: 6, scope: !6463)
!6491 = !DILocation(line: 1295, column: 3, scope: !6487)
!6492 = !DILocation(line: 1297, column: 6, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1297, column: 6)
!6494 = !DILocation(line: 1297, column: 10, scope: !6493)
!6495 = !DILocation(line: 1297, column: 21, scope: !6493)
!6496 = !DILocation(line: 1297, column: 26, scope: !6493)
!6497 = !DILocation(line: 1297, column: 29, scope: !6493)
!6498 = !DILocation(line: 1297, column: 33, scope: !6493)
!6499 = !DILocation(line: 1297, column: 38, scope: !6493)
!6500 = !DILocation(line: 1297, column: 6, scope: !6463)
!6501 = !DILocation(line: 1298, column: 3, scope: !6493)
!6502 = !DILocation(line: 1300, column: 6, scope: !6463)
!6503 = !DILocation(line: 1300, column: 4, scope: !6463)
!6504 = !DILocation(line: 1301, column: 7, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1301, column: 6)
!6506 = !DILocation(line: 1301, column: 6, scope: !6463)
!6507 = !DILocation(line: 1302, column: 3, scope: !6505)
!6508 = !DILocation(line: 1304, column: 21, scope: !6463)
!6509 = !DILocation(line: 1304, column: 25, scope: !6463)
!6510 = !DILocation(line: 1304, column: 37, scope: !6463)
!6511 = !DILocation(line: 1304, column: 41, scope: !6463)
!6512 = !DILocation(line: 1304, column: 35, scope: !6463)
!6513 = !DILocation(line: 1304, column: 53, scope: !6463)
!6514 = !DILocation(line: 1304, column: 57, scope: !6463)
!6515 = !DILocation(line: 1304, column: 64, scope: !6463)
!6516 = !DILocation(line: 1304, column: 51, scope: !6463)
!6517 = !DILocation(line: 237, column: 11, scope: !6345, inlinedAt: !6465)
!6518 = !DILocation(line: 235, column: 2, scope: !6345, inlinedAt: !6465)
!6519 = !DILocation(line: 238, column: 9, scope: !6345, inlinedAt: !6465)
!6520 = !DILocation(line: 1304, column: 14, scope: !6463)
!6521 = !DILocation(line: 1304, column: 12, scope: !6463)
!6522 = !DILocation(line: 1305, column: 6, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1305, column: 6)
!6524 = !DILocation(line: 1305, column: 16, scope: !6523)
!6525 = !DILocation(line: 1305, column: 6, scope: !6463)
!6526 = !DILocation(line: 1306, column: 13, scope: !6523)
!6527 = !DILocation(line: 1306, column: 3, scope: !6523)
!6528 = !DILocation(line: 1308, column: 8, scope: !6463)
!6529 = !DILocation(line: 1308, column: 11, scope: !6463)
!6530 = !DILocation(line: 1308, column: 5, scope: !6463)
!6531 = !DILocation(line: 1309, column: 2, scope: !6463)
!6532 = !DILocation(line: 1309, column: 5, scope: !6463)
!6533 = !DILocation(line: 1309, column: 9, scope: !6463)
!6534 = !DILocation(line: 1310, column: 16, scope: !6463)
!6535 = !DILocation(line: 1310, column: 20, scope: !6463)
!6536 = !DILocation(line: 1310, column: 2, scope: !6463)
!6537 = !DILocation(line: 1310, column: 5, scope: !6463)
!6538 = !DILocation(line: 1310, column: 14, scope: !6463)
!6539 = !DILocation(line: 1311, column: 10, scope: !6463)
!6540 = !DILocation(line: 1311, column: 2, scope: !6463)
!6541 = !DILocation(line: 1311, column: 5, scope: !6463)
!6542 = !DILocation(line: 1311, column: 8, scope: !6463)
!6543 = !DILocation(line: 1312, column: 11, scope: !6463)
!6544 = !DILocation(line: 1312, column: 15, scope: !6463)
!6545 = !DILocation(line: 1312, column: 22, scope: !6463)
!6546 = !DILocation(line: 1312, column: 29, scope: !6463)
!6547 = !DILocation(line: 1312, column: 27, scope: !6463)
!6548 = !DILocation(line: 1312, column: 2, scope: !6463)
!6549 = !DILocation(line: 1312, column: 6, scope: !6463)
!6550 = !DILocation(line: 1312, column: 9, scope: !6463)
!6551 = !DILocation(line: 1313, column: 11, scope: !6463)
!6552 = !DILocation(line: 1313, column: 15, scope: !6463)
!6553 = !DILocation(line: 1313, column: 2, scope: !6463)
!6554 = !DILocation(line: 1313, column: 6, scope: !6463)
!6555 = !DILocation(line: 1313, column: 9, scope: !6463)
!6556 = !DILocation(line: 1314, column: 13, scope: !6463)
!6557 = !DILocation(line: 1314, column: 17, scope: !6463)
!6558 = !DILocation(line: 1314, column: 2, scope: !6463)
!6559 = !DILocation(line: 1314, column: 6, scope: !6463)
!6560 = !DILocation(line: 1314, column: 11, scope: !6463)
!6561 = !DILocation(line: 1315, column: 2, scope: !6463)
!6562 = !DILocation(line: 1315, column: 5, scope: !6463)
!6563 = !DILocation(line: 1315, column: 11, scope: !6463)
!6564 = !DILocation(line: 1316, column: 11, scope: !6463)
!6565 = !DILocation(line: 1316, column: 14, scope: !6463)
!6566 = !DILocation(line: 1316, column: 2, scope: !6463)
!6567 = !DILocation(line: 1316, column: 5, scope: !6463)
!6568 = !DILocation(line: 1316, column: 9, scope: !6463)
!6569 = !DILocation(line: 1318, column: 34, scope: !6463)
!6570 = !DILocation(line: 1318, column: 39, scope: !6463)
!6571 = !DILocation(line: 1318, column: 43, scope: !6463)
!6572 = !DILocation(line: 1318, column: 12, scope: !6463)
!6573 = !DILocation(line: 1318, column: 10, scope: !6463)
!6574 = !DILocation(line: 1319, column: 34, scope: !6463)
!6575 = !DILocation(line: 1319, column: 39, scope: !6463)
!6576 = !DILocation(line: 1319, column: 43, scope: !6463)
!6577 = !DILocation(line: 1319, column: 12, scope: !6463)
!6578 = !DILocation(line: 1319, column: 10, scope: !6463)
!6579 = !DILocation(line: 1320, column: 6, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1320, column: 6)
!6581 = !DILocation(line: 1320, column: 6, scope: !6463)
!6582 = !DILocation(line: 1321, column: 3, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 1320, column: 15)
!6584 = !DILocation(line: 1321, column: 6, scope: !6583)
!6585 = !DILocation(line: 1321, column: 10, scope: !6583)
!6586 = !DILocation(line: 1322, column: 3, scope: !6583)
!6587 = !DILocation(line: 1322, column: 6, scope: !6583)
!6588 = !DILocation(line: 1322, column: 9, scope: !6583)
!6589 = !DILocation(line: 1323, column: 11, scope: !6583)
!6590 = !DILocation(line: 1323, column: 19, scope: !6583)
!6591 = !DILocation(line: 1323, column: 3, scope: !6583)
!6592 = !DILocation(line: 1323, column: 6, scope: !6583)
!6593 = !DILocation(line: 1323, column: 9, scope: !6583)
!6594 = !DILocation(line: 1324, column: 2, scope: !6583)
!6595 = !DILocation(line: 1324, column: 13, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 1324, column: 13)
!6597 = !DILocation(line: 1324, column: 17, scope: !6596)
!6598 = !DILocation(line: 1324, column: 13, scope: !6580)
!6599 = !DILocation(line: 1325, column: 3, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 1324, column: 26)
!6601 = !DILocation(line: 1325, column: 6, scope: !6600)
!6602 = !DILocation(line: 1325, column: 10, scope: !6600)
!6603 = !DILocation(line: 1326, column: 3, scope: !6600)
!6604 = !DILocation(line: 1326, column: 6, scope: !6600)
!6605 = !DILocation(line: 1326, column: 9, scope: !6600)
!6606 = !DILocation(line: 1327, column: 2, scope: !6600)
!6607 = !DILocation(line: 1328, column: 3, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 1327, column: 9)
!6609 = !DILocation(line: 1331, column: 9, scope: !6608)
!6610 = !DILocation(line: 1331, column: 3, scope: !6608)
!6611 = !DILocation(line: 1332, column: 3, scope: !6608)
!6612 = !DILocation(line: 1335, column: 6, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1335, column: 6)
!6614 = !DILocation(line: 1335, column: 6, scope: !6463)
!6615 = !DILocation(line: 1336, column: 3, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 1335, column: 15)
!6617 = !DILocation(line: 1336, column: 6, scope: !6616)
!6618 = !DILocation(line: 1336, column: 10, scope: !6616)
!6619 = !DILocation(line: 1337, column: 3, scope: !6616)
!6620 = !DILocation(line: 1337, column: 7, scope: !6616)
!6621 = !DILocation(line: 1337, column: 10, scope: !6616)
!6622 = !DILocation(line: 1338, column: 12, scope: !6616)
!6623 = !DILocation(line: 1338, column: 20, scope: !6616)
!6624 = !DILocation(line: 1338, column: 3, scope: !6616)
!6625 = !DILocation(line: 1338, column: 7, scope: !6616)
!6626 = !DILocation(line: 1338, column: 10, scope: !6616)
!6627 = !DILocation(line: 1339, column: 2, scope: !6616)
!6628 = !DILocation(line: 1339, column: 13, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 1339, column: 13)
!6630 = !DILocation(line: 1339, column: 17, scope: !6629)
!6631 = !DILocation(line: 1339, column: 13, scope: !6613)
!6632 = !DILocation(line: 1340, column: 3, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1339, column: 26)
!6634 = !DILocation(line: 1340, column: 6, scope: !6633)
!6635 = !DILocation(line: 1340, column: 10, scope: !6633)
!6636 = !DILocation(line: 1341, column: 3, scope: !6633)
!6637 = !DILocation(line: 1341, column: 7, scope: !6633)
!6638 = !DILocation(line: 1341, column: 10, scope: !6633)
!6639 = !DILocation(line: 1342, column: 2, scope: !6633)
!6640 = !DILocation(line: 1343, column: 3, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1342, column: 9)
!6642 = !DILocation(line: 1346, column: 9, scope: !6641)
!6643 = !DILocation(line: 1346, column: 3, scope: !6641)
!6644 = !DILocation(line: 1347, column: 3, scope: !6641)
!6645 = !DILocation(line: 1350, column: 2, scope: !6463)
!6646 = !DILocation(line: 1350, column: 5, scope: !6463)
!6647 = !DILocation(line: 1350, column: 10, scope: !6463)
!6648 = !DILocation(line: 1352, column: 12, scope: !6463)
!6649 = !DILocation(line: 1352, column: 2, scope: !6463)
!6650 = !DILocation(line: 1352, column: 5, scope: !6463)
!6651 = !DILocation(line: 1352, column: 10, scope: !6463)
!6652 = !DILocation(line: 1355, column: 3, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 1354, column: 19)
!6654 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1354, column: 6)
!6655 = !DILocation(line: 1355, column: 6, scope: !6653)
!6656 = !DILocation(line: 1355, column: 11, scope: !6653)
!6657 = !DILocation(line: 1356, column: 3, scope: !6653)
!6658 = !DILocation(line: 1356, column: 6, scope: !6653)
!6659 = !DILocation(line: 1356, column: 11, scope: !6653)
!6660 = !DILocation(line: 1363, column: 24, scope: !6463)
!6661 = !DILocation(line: 1363, column: 27, scope: !6463)
!6662 = !DILocation(line: 1363, column: 32, scope: !6463)
!6663 = !DILocation(line: 1363, column: 35, scope: !6463)
!6664 = !DILocation(line: 1363, column: 39, scope: !6463)
!6665 = !DILocation(line: 1363, column: 9, scope: !6463)
!6666 = !DILocation(line: 1363, column: 2, scope: !6463)
!6667 = !DILocation(line: 1364, column: 1, scope: !6463)
!6668 = distinct !DISubprogram(name: "omap_dma_slave_config", scope: !3, file: !3, line: 1366, type: !4286, scopeLine: 1367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!6669 = !DILocalVariable(name: "chan", arg: 1, scope: !6668, file: !3, line: 1366, type: !398)
!6670 = !DILocation(line: 1366, column: 51, scope: !6668)
!6671 = !DILocalVariable(name: "cfg", arg: 2, scope: !6668, file: !3, line: 1366, type: !4288)
!6672 = !DILocation(line: 1366, column: 82, scope: !6668)
!6673 = !DILocalVariable(name: "c", scope: !6668, file: !3, line: 1368, type: !4404)
!6674 = !DILocation(line: 1368, column: 20, scope: !6668)
!6675 = !DILocation(line: 1368, column: 41, scope: !6668)
!6676 = !DILocation(line: 1368, column: 24, scope: !6668)
!6677 = !DILocation(line: 1370, column: 6, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1370, column: 6)
!6679 = !DILocation(line: 1370, column: 11, scope: !6678)
!6680 = !DILocation(line: 1370, column: 26, scope: !6678)
!6681 = !DILocation(line: 1370, column: 56, scope: !6678)
!6682 = !DILocation(line: 1371, column: 6, scope: !6678)
!6683 = !DILocation(line: 1371, column: 11, scope: !6678)
!6684 = !DILocation(line: 1371, column: 26, scope: !6678)
!6685 = !DILocation(line: 1370, column: 6, scope: !6668)
!6686 = !DILocation(line: 1372, column: 3, scope: !6678)
!6687 = !DILocation(line: 1374, column: 6, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1374, column: 6)
!6689 = !DILocation(line: 1374, column: 11, scope: !6688)
!6690 = !DILocation(line: 1374, column: 26, scope: !6688)
!6691 = !DILocation(line: 1374, column: 32, scope: !6688)
!6692 = !DILocation(line: 1374, column: 40, scope: !6688)
!6693 = !DILocation(line: 1374, column: 24, scope: !6688)
!6694 = !DILocation(line: 1374, column: 50, scope: !6688)
!6695 = !DILocation(line: 1375, column: 6, scope: !6688)
!6696 = !DILocation(line: 1375, column: 11, scope: !6688)
!6697 = !DILocation(line: 1375, column: 26, scope: !6688)
!6698 = !DILocation(line: 1375, column: 32, scope: !6688)
!6699 = !DILocation(line: 1375, column: 40, scope: !6688)
!6700 = !DILocation(line: 1375, column: 24, scope: !6688)
!6701 = !DILocation(line: 1374, column: 6, scope: !6668)
!6702 = !DILocation(line: 1376, column: 3, scope: !6688)
!6703 = !DILocation(line: 1378, column: 10, scope: !6668)
!6704 = !DILocation(line: 1378, column: 13, scope: !6668)
!6705 = !DILocation(line: 1378, column: 2, scope: !6668)
!6706 = !DILocation(line: 1378, column: 18, scope: !6668)
!6707 = !DILocation(line: 1380, column: 2, scope: !6668)
!6708 = !DILocation(line: 1381, column: 1, scope: !6668)
!6709 = distinct !DISubprogram(name: "omap_dma_pause", scope: !3, file: !3, line: 1421, type: !4121, scopeLine: 1422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!6710 = !DILocation(line: 407, column: 64, scope: !5491, inlinedAt: !6711)
!6711 = distinct !DILocation(line: 1469, column: 2, scope: !6709)
!6712 = !DILocation(line: 407, column: 84, scope: !5491, inlinedAt: !6711)
!6713 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !6714)
!6714 = distinct !DILocation(line: 1429, column: 2, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 1429, column: 2)
!6716 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 1429, column: 2)
!6717 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 1429, column: 2)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 1429, column: 2)
!6719 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 1429, column: 2)
!6720 = !DILocalVariable(name: "chan", arg: 1, scope: !6709, file: !3, line: 1421, type: !398)
!6721 = !DILocation(line: 1421, column: 44, scope: !6709)
!6722 = !DILocalVariable(name: "c", scope: !6709, file: !3, line: 1423, type: !4404)
!6723 = !DILocation(line: 1423, column: 20, scope: !6709)
!6724 = !DILocation(line: 1423, column: 41, scope: !6709)
!6725 = !DILocation(line: 1423, column: 24, scope: !6709)
!6726 = !DILocalVariable(name: "od", scope: !6709, file: !3, line: 1424, type: !358)
!6727 = !DILocation(line: 1424, column: 22, scope: !6709)
!6728 = !DILocation(line: 1424, column: 43, scope: !6709)
!6729 = !DILocation(line: 1424, column: 49, scope: !6709)
!6730 = !DILocation(line: 1424, column: 27, scope: !6709)
!6731 = !DILocalVariable(name: "flags", scope: !6709, file: !3, line: 1425, type: !350)
!6732 = !DILocation(line: 1425, column: 16, scope: !6709)
!6733 = !DILocalVariable(name: "ret", scope: !6709, file: !3, line: 1426, type: !378)
!6734 = !DILocation(line: 1426, column: 6, scope: !6709)
!6735 = !DILocalVariable(name: "can_pause", scope: !6709, file: !3, line: 1427, type: !396)
!6736 = !DILocation(line: 1427, column: 7, scope: !6709)
!6737 = !DILocation(line: 1429, column: 2, scope: !6709)
!6738 = !DILocation(line: 1429, column: 2, scope: !6719)
!6739 = !DILocalVariable(name: "__dummy", scope: !6740, file: !3, line: 1429, type: !350)
!6740 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 1429, column: 2)
!6741 = !DILocation(line: 1429, column: 2, scope: !6740)
!6742 = !DILocalVariable(name: "__dummy2", scope: !6740, file: !3, line: 1429, type: !350)
!6743 = !DILocation(line: 1429, column: 2, scope: !6718)
!6744 = !DILocation(line: 1429, column: 2, scope: !6717)
!6745 = !DILocation(line: 1429, column: 2, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 1429, column: 2)
!6747 = !DILocalVariable(name: "__dummy", scope: !6748, file: !3, line: 1429, type: !350)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 1429, column: 2)
!6749 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1429, column: 2)
!6750 = !DILocation(line: 1429, column: 2, scope: !6748)
!6751 = !DILocalVariable(name: "__dummy2", scope: !6748, file: !3, line: 1429, type: !350)
!6752 = !DILocation(line: 1429, column: 2, scope: !6749)
!6753 = !DILocation(line: 1429, column: 2, scope: !6716)
!6754 = !{i32 -2141728911}
!6755 = !DILocation(line: 1429, column: 2, scope: !6715)
!6756 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !6714)
!6757 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !6714)
!6758 = !DILocation(line: 1431, column: 7, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 1431, column: 6)
!6760 = !DILocation(line: 1431, column: 10, scope: !6759)
!6761 = !DILocation(line: 1431, column: 6, scope: !6709)
!6762 = !DILocation(line: 1432, column: 3, scope: !6759)
!6763 = !DILocation(line: 1434, column: 6, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 1434, column: 6)
!6765 = !DILocation(line: 1434, column: 9, scope: !6764)
!6766 = !DILocation(line: 1434, column: 6, scope: !6709)
!6767 = !DILocation(line: 1435, column: 13, scope: !6764)
!6768 = !DILocation(line: 1435, column: 3, scope: !6764)
!6769 = !DILocation(line: 1460, column: 11, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 1460, column: 11)
!6771 = !DILocation(line: 1460, column: 14, scope: !6770)
!6772 = !DILocation(line: 1460, column: 20, scope: !6770)
!6773 = !DILocation(line: 1460, column: 24, scope: !6770)
!6774 = !DILocation(line: 1460, column: 11, scope: !6764)
!6775 = !DILocation(line: 1461, column: 13, scope: !6770)
!6776 = !DILocation(line: 1461, column: 3, scope: !6770)
!6777 = !DILocation(line: 1463, column: 6, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 1463, column: 6)
!6779 = !DILocation(line: 1463, column: 16, scope: !6778)
!6780 = !DILocation(line: 1463, column: 20, scope: !6778)
!6781 = !DILocation(line: 1463, column: 23, scope: !6778)
!6782 = !DILocation(line: 1463, column: 6, scope: !6709)
!6783 = !DILocation(line: 1464, column: 23, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 1463, column: 31)
!6785 = !DILocation(line: 1464, column: 9, scope: !6784)
!6786 = !DILocation(line: 1464, column: 7, scope: !6784)
!6787 = !DILocation(line: 1465, column: 8, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 1465, column: 7)
!6789 = !DILocation(line: 1465, column: 7, scope: !6784)
!6790 = !DILocation(line: 1466, column: 4, scope: !6788)
!6791 = !DILocation(line: 1466, column: 7, scope: !6788)
!6792 = !DILocation(line: 1466, column: 14, scope: !6788)
!6793 = !DILocation(line: 1467, column: 2, scope: !6784)
!6794 = !DILabel(scope: !6709, name: "out", file: !3, line: 1468)
!6795 = !DILocation(line: 1468, column: 1, scope: !6709)
!6796 = !DILocation(line: 1469, column: 26, scope: !6709)
!6797 = !DILocation(line: 1469, column: 30, scope: !6709)
!6798 = !DILocation(line: 1469, column: 40, scope: !6709)
!6799 = !DILocation(line: 409, column: 2, scope: !5673, inlinedAt: !6711)
!6800 = !DILocation(line: 409, column: 2, scope: !5678, inlinedAt: !6711)
!6801 = !DILocation(line: 409, column: 2, scope: !5679, inlinedAt: !6711)
!6802 = !DILocation(line: 409, column: 2, scope: !5686, inlinedAt: !6711)
!6803 = !DILocation(line: 409, column: 2, scope: !5689, inlinedAt: !6711)
!6804 = !DILocation(line: 1471, column: 9, scope: !6709)
!6805 = !DILocation(line: 1471, column: 2, scope: !6709)
!6806 = distinct !DISubprogram(name: "omap_dma_resume", scope: !3, file: !3, line: 1474, type: !4121, scopeLine: 1475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!6807 = !DILocation(line: 407, column: 64, scope: !5491, inlinedAt: !6808)
!6808 = distinct !DILocation(line: 1493, column: 2, scope: !6806)
!6809 = !DILocation(line: 407, column: 84, scope: !5491, inlinedAt: !6808)
!6810 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !6811)
!6811 = distinct !DILocation(line: 1481, column: 2, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 1481, column: 2)
!6813 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 1481, column: 2)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 1481, column: 2)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 1481, column: 2)
!6816 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 1481, column: 2)
!6817 = !DILocalVariable(name: "chan", arg: 1, scope: !6806, file: !3, line: 1474, type: !398)
!6818 = !DILocation(line: 1474, column: 45, scope: !6806)
!6819 = !DILocalVariable(name: "c", scope: !6806, file: !3, line: 1476, type: !4404)
!6820 = !DILocation(line: 1476, column: 20, scope: !6806)
!6821 = !DILocation(line: 1476, column: 41, scope: !6806)
!6822 = !DILocation(line: 1476, column: 24, scope: !6806)
!6823 = !DILocalVariable(name: "od", scope: !6806, file: !3, line: 1477, type: !358)
!6824 = !DILocation(line: 1477, column: 22, scope: !6806)
!6825 = !DILocation(line: 1477, column: 43, scope: !6806)
!6826 = !DILocation(line: 1477, column: 49, scope: !6806)
!6827 = !DILocation(line: 1477, column: 27, scope: !6806)
!6828 = !DILocalVariable(name: "flags", scope: !6806, file: !3, line: 1478, type: !350)
!6829 = !DILocation(line: 1478, column: 16, scope: !6806)
!6830 = !DILocalVariable(name: "ret", scope: !6806, file: !3, line: 1479, type: !378)
!6831 = !DILocation(line: 1479, column: 6, scope: !6806)
!6832 = !DILocation(line: 1481, column: 2, scope: !6806)
!6833 = !DILocation(line: 1481, column: 2, scope: !6816)
!6834 = !DILocalVariable(name: "__dummy", scope: !6835, file: !3, line: 1481, type: !350)
!6835 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 1481, column: 2)
!6836 = !DILocation(line: 1481, column: 2, scope: !6835)
!6837 = !DILocalVariable(name: "__dummy2", scope: !6835, file: !3, line: 1481, type: !350)
!6838 = !DILocation(line: 1481, column: 2, scope: !6815)
!6839 = !DILocation(line: 1481, column: 2, scope: !6814)
!6840 = !DILocation(line: 1481, column: 2, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 1481, column: 2)
!6842 = !DILocalVariable(name: "__dummy", scope: !6843, file: !3, line: 1481, type: !350)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !3, line: 1481, column: 2)
!6844 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 1481, column: 2)
!6845 = !DILocation(line: 1481, column: 2, scope: !6843)
!6846 = !DILocalVariable(name: "__dummy2", scope: !6843, file: !3, line: 1481, type: !350)
!6847 = !DILocation(line: 1481, column: 2, scope: !6844)
!6848 = !DILocation(line: 1481, column: 2, scope: !6813)
!6849 = !{i32 -2141727875}
!6850 = !DILocation(line: 1481, column: 2, scope: !6812)
!6851 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !6811)
!6852 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !6811)
!6853 = !DILocation(line: 1483, column: 6, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 1483, column: 6)
!6855 = !DILocation(line: 1483, column: 9, scope: !6854)
!6856 = !DILocation(line: 1483, column: 16, scope: !6854)
!6857 = !DILocation(line: 1483, column: 19, scope: !6854)
!6858 = !DILocation(line: 1483, column: 22, scope: !6854)
!6859 = !DILocation(line: 1483, column: 6, scope: !6806)
!6860 = !DILocation(line: 1484, column: 3, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 1483, column: 28)
!6862 = !{i32 -2141727725}
!6863 = !DILocation(line: 1487, column: 23, scope: !6861)
!6864 = !DILocation(line: 1487, column: 37, scope: !6861)
!6865 = !DILocation(line: 1487, column: 40, scope: !6861)
!6866 = !DILocation(line: 1487, column: 46, scope: !6861)
!6867 = !DILocation(line: 1487, column: 3, scope: !6861)
!6868 = !DILocation(line: 1489, column: 18, scope: !6861)
!6869 = !DILocation(line: 1489, column: 21, scope: !6861)
!6870 = !DILocation(line: 1489, column: 24, scope: !6861)
!6871 = !DILocation(line: 1489, column: 3, scope: !6861)
!6872 = !DILocation(line: 1490, column: 3, scope: !6861)
!6873 = !DILocation(line: 1490, column: 6, scope: !6861)
!6874 = !DILocation(line: 1490, column: 13, scope: !6861)
!6875 = !DILocation(line: 1491, column: 7, scope: !6861)
!6876 = !DILocation(line: 1492, column: 2, scope: !6861)
!6877 = !DILocation(line: 1493, column: 26, scope: !6806)
!6878 = !DILocation(line: 1493, column: 30, scope: !6806)
!6879 = !DILocation(line: 1493, column: 40, scope: !6806)
!6880 = !DILocation(line: 409, column: 2, scope: !5673, inlinedAt: !6808)
!6881 = !DILocation(line: 409, column: 2, scope: !5678, inlinedAt: !6808)
!6882 = !DILocation(line: 409, column: 2, scope: !5679, inlinedAt: !6808)
!6883 = !DILocation(line: 409, column: 2, scope: !5686, inlinedAt: !6808)
!6884 = !DILocation(line: 409, column: 2, scope: !5689, inlinedAt: !6808)
!6885 = !DILocation(line: 1495, column: 9, scope: !6806)
!6886 = !DILocation(line: 1495, column: 2, scope: !6806)
!6887 = distinct !DISubprogram(name: "omap_dma_terminate_all", scope: !3, file: !3, line: 1383, type: !4121, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!6888 = !DILocation(line: 407, column: 64, scope: !5491, inlinedAt: !6889)
!6889 = distinct !DILocation(line: 1408, column: 2, scope: !6887)
!6890 = !DILocation(line: 407, column: 84, scope: !5491, inlinedAt: !6889)
!6891 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !6892)
!6892 = distinct !DILocation(line: 1389, column: 2, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 1389, column: 2)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 1389, column: 2)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 1389, column: 2)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 1389, column: 2)
!6897 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 1389, column: 2)
!6898 = !DILocalVariable(name: "chan", arg: 1, scope: !6887, file: !3, line: 1383, type: !398)
!6899 = !DILocation(line: 1383, column: 52, scope: !6887)
!6900 = !DILocalVariable(name: "c", scope: !6887, file: !3, line: 1385, type: !4404)
!6901 = !DILocation(line: 1385, column: 20, scope: !6887)
!6902 = !DILocation(line: 1385, column: 41, scope: !6887)
!6903 = !DILocation(line: 1385, column: 24, scope: !6887)
!6904 = !DILocalVariable(name: "flags", scope: !6887, file: !3, line: 1386, type: !350)
!6905 = !DILocation(line: 1386, column: 16, scope: !6887)
!6906 = !DILocalVariable(name: "head", scope: !6887, file: !3, line: 1387, type: !382)
!6907 = !DILocation(line: 1387, column: 2, scope: !6887)
!6908 = !DILocation(line: 1389, column: 2, scope: !6887)
!6909 = !DILocation(line: 1389, column: 2, scope: !6897)
!6910 = !DILocalVariable(name: "__dummy", scope: !6911, file: !3, line: 1389, type: !350)
!6911 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 1389, column: 2)
!6912 = !DILocation(line: 1389, column: 2, scope: !6911)
!6913 = !DILocalVariable(name: "__dummy2", scope: !6911, file: !3, line: 1389, type: !350)
!6914 = !DILocation(line: 1389, column: 2, scope: !6896)
!6915 = !DILocation(line: 1389, column: 2, scope: !6895)
!6916 = !DILocation(line: 1389, column: 2, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 1389, column: 2)
!6918 = !DILocalVariable(name: "__dummy", scope: !6919, file: !3, line: 1389, type: !350)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !3, line: 1389, column: 2)
!6920 = distinct !DILexicalBlock(scope: !6917, file: !3, line: 1389, column: 2)
!6921 = !DILocation(line: 1389, column: 2, scope: !6919)
!6922 = !DILocalVariable(name: "__dummy2", scope: !6919, file: !3, line: 1389, type: !350)
!6923 = !DILocation(line: 1389, column: 2, scope: !6920)
!6924 = !DILocation(line: 1389, column: 2, scope: !6894)
!6925 = !{i32 -2141729955}
!6926 = !DILocation(line: 1389, column: 2, scope: !6893)
!6927 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !6892)
!6928 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !6892)
!6929 = !DILocation(line: 1396, column: 6, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 1396, column: 6)
!6931 = !DILocation(line: 1396, column: 9, scope: !6930)
!6932 = !DILocation(line: 1396, column: 6, scope: !6887)
!6933 = !DILocation(line: 1397, column: 26, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1396, column: 15)
!6935 = !DILocation(line: 1397, column: 29, scope: !6934)
!6936 = !DILocation(line: 1397, column: 35, scope: !6934)
!6937 = !DILocation(line: 1397, column: 3, scope: !6934)
!6938 = !DILocation(line: 1398, column: 3, scope: !6934)
!6939 = !DILocation(line: 1398, column: 6, scope: !6934)
!6940 = !DILocation(line: 1398, column: 11, scope: !6934)
!6941 = !DILocation(line: 1400, column: 8, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6934, file: !3, line: 1400, column: 7)
!6943 = !DILocation(line: 1400, column: 11, scope: !6942)
!6944 = !DILocation(line: 1400, column: 7, scope: !6934)
!6945 = !DILocation(line: 1401, column: 18, scope: !6942)
!6946 = !DILocation(line: 1401, column: 4, scope: !6942)
!6947 = !DILocation(line: 1402, column: 2, scope: !6934)
!6948 = !DILocation(line: 1404, column: 2, scope: !6887)
!6949 = !DILocation(line: 1404, column: 5, scope: !6887)
!6950 = !DILocation(line: 1404, column: 12, scope: !6887)
!6951 = !DILocation(line: 1405, column: 2, scope: !6887)
!6952 = !DILocation(line: 1405, column: 5, scope: !6887)
!6953 = !DILocation(line: 1405, column: 12, scope: !6887)
!6954 = !DILocation(line: 1407, column: 29, scope: !6887)
!6955 = !DILocation(line: 1407, column: 32, scope: !6887)
!6956 = !DILocation(line: 1407, column: 2, scope: !6887)
!6957 = !DILocation(line: 1408, column: 26, scope: !6887)
!6958 = !DILocation(line: 1408, column: 29, scope: !6887)
!6959 = !DILocation(line: 1408, column: 32, scope: !6887)
!6960 = !DILocation(line: 1408, column: 38, scope: !6887)
!6961 = !DILocation(line: 409, column: 2, scope: !5673, inlinedAt: !6889)
!6962 = !DILocation(line: 409, column: 2, scope: !5678, inlinedAt: !6889)
!6963 = !DILocation(line: 409, column: 2, scope: !5679, inlinedAt: !6889)
!6964 = !DILocation(line: 409, column: 2, scope: !5686, inlinedAt: !6889)
!6965 = !DILocation(line: 409, column: 2, scope: !5689, inlinedAt: !6889)
!6966 = !DILocation(line: 1409, column: 28, scope: !6887)
!6967 = !DILocation(line: 1409, column: 31, scope: !6887)
!6968 = !DILocation(line: 1409, column: 2, scope: !6887)
!6969 = !DILocation(line: 1411, column: 2, scope: !6887)
!6970 = distinct !DISubprogram(name: "omap_dma_synchronize", scope: !3, file: !3, line: 1414, type: !4125, scopeLine: 1415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!6971 = !DILocalVariable(name: "chan", arg: 1, scope: !6970, file: !3, line: 1414, type: !398)
!6972 = !DILocation(line: 1414, column: 51, scope: !6970)
!6973 = !DILocalVariable(name: "c", scope: !6970, file: !3, line: 1416, type: !4404)
!6974 = !DILocation(line: 1416, column: 20, scope: !6970)
!6975 = !DILocation(line: 1416, column: 41, scope: !6970)
!6976 = !DILocation(line: 1416, column: 24, scope: !6970)
!6977 = !DILocation(line: 1418, column: 21, scope: !6970)
!6978 = !DILocation(line: 1418, column: 24, scope: !6970)
!6979 = !DILocation(line: 1418, column: 2, scope: !6970)
!6980 = !DILocation(line: 1419, column: 1, scope: !6970)
!6981 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !6982, file: !6982, line: 33, type: !6983, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!6982 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6983 = !DISubroutineType(types: !6984)
!6984 = !{null, !385}
!6985 = !DILocalVariable(name: "list", arg: 1, scope: !6981, file: !6982, line: 33, type: !385)
!6986 = !DILocation(line: 33, column: 53, scope: !6981)
!6987 = !DILocation(line: 35, column: 2, scope: !6981)
!6988 = !DILocation(line: 35, column: 2, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6981, file: !6982, line: 35, column: 2)
!6990 = !DILocation(line: 35, column: 2, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6989, file: !6982, line: 35, column: 2)
!6992 = !DILocation(line: 35, column: 2, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6989, file: !6982, line: 35, column: 2)
!6994 = !DILocation(line: 36, column: 15, scope: !6981)
!6995 = !DILocation(line: 36, column: 2, scope: !6981)
!6996 = !DILocation(line: 36, column: 8, scope: !6981)
!6997 = !DILocation(line: 36, column: 13, scope: !6981)
!6998 = !DILocation(line: 37, column: 1, scope: !6981)
!6999 = distinct !DISubprogram(name: "of_property_read_u32", scope: !3889, file: !3889, line: 1214, type: !7000, scopeLine: 1217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7000 = !DISubroutineType(types: !7001)
!7001 = !{!378, !7002, !412, !1630}
!7002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7003, size: 64)
!7003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3888)
!7004 = !DILocalVariable(name: "np", arg: 1, scope: !6999, file: !3889, line: 1214, type: !7002)
!7005 = !DILocation(line: 1214, column: 66, scope: !6999)
!7006 = !DILocalVariable(name: "propname", arg: 2, scope: !6999, file: !3889, line: 1215, type: !412)
!7007 = !DILocation(line: 1215, column: 24, scope: !6999)
!7008 = !DILocalVariable(name: "out_value", arg: 3, scope: !6999, file: !3889, line: 1216, type: !1630)
!7009 = !DILocation(line: 1216, column: 17, scope: !6999)
!7010 = !DILocation(line: 1218, column: 36, scope: !6999)
!7011 = !DILocation(line: 1218, column: 40, scope: !6999)
!7012 = !DILocation(line: 1218, column: 50, scope: !6999)
!7013 = !DILocation(line: 1218, column: 9, scope: !6999)
!7014 = !DILocation(line: 1218, column: 2, scope: !6999)
!7015 = distinct !DISubprogram(name: "devm_kcalloc", scope: !73, file: !73, line: 229, type: !7016, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7016 = !DISubroutineType(types: !7017)
!7017 = !{!351, !404, !510, !510, !348}
!7018 = !DILocalVariable(name: "dev", arg: 1, scope: !7015, file: !73, line: 229, type: !404)
!7019 = !DILocation(line: 229, column: 49, scope: !7015)
!7020 = !DILocalVariable(name: "n", arg: 2, scope: !7015, file: !73, line: 230, type: !510)
!7021 = !DILocation(line: 230, column: 13, scope: !7015)
!7022 = !DILocalVariable(name: "size", arg: 3, scope: !7015, file: !73, line: 230, type: !510)
!7023 = !DILocation(line: 230, column: 23, scope: !7015)
!7024 = !DILocalVariable(name: "flags", arg: 4, scope: !7015, file: !73, line: 230, type: !348)
!7025 = !DILocation(line: 230, column: 35, scope: !7015)
!7026 = !DILocation(line: 232, column: 28, scope: !7015)
!7027 = !DILocation(line: 232, column: 33, scope: !7015)
!7028 = !DILocation(line: 232, column: 36, scope: !7015)
!7029 = !DILocation(line: 232, column: 42, scope: !7015)
!7030 = !DILocation(line: 232, column: 48, scope: !7015)
!7031 = !DILocation(line: 232, column: 9, scope: !7015)
!7032 = !DILocation(line: 232, column: 2, scope: !7015)
!7033 = distinct !DISubprogram(name: "omap_dma_chan_init", scope: !3, file: !3, line: 1498, type: !7034, scopeLine: 1499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7034 = !DISubroutineType(types: !7035)
!7035 = !{!378, !358}
!7036 = !DILocalVariable(name: "od", arg: 1, scope: !7033, file: !3, line: 1498, type: !358)
!7037 = !DILocation(line: 1498, column: 51, scope: !7033)
!7038 = !DILocalVariable(name: "c", scope: !7033, file: !3, line: 1500, type: !4404)
!7039 = !DILocation(line: 1500, column: 20, scope: !7033)
!7040 = !DILocation(line: 1502, column: 6, scope: !7033)
!7041 = !DILocation(line: 1502, column: 4, scope: !7033)
!7042 = !DILocation(line: 1503, column: 7, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1503, column: 6)
!7044 = !DILocation(line: 1503, column: 6, scope: !7033)
!7045 = !DILocation(line: 1504, column: 3, scope: !7043)
!7046 = !DILocation(line: 1506, column: 15, scope: !7033)
!7047 = !DILocation(line: 1506, column: 19, scope: !7033)
!7048 = !DILocation(line: 1506, column: 2, scope: !7033)
!7049 = !DILocation(line: 1506, column: 5, scope: !7033)
!7050 = !DILocation(line: 1506, column: 13, scope: !7033)
!7051 = !DILocation(line: 1507, column: 2, scope: !7033)
!7052 = !DILocation(line: 1507, column: 5, scope: !7033)
!7053 = !DILocation(line: 1507, column: 8, scope: !7033)
!7054 = !DILocation(line: 1507, column: 18, scope: !7033)
!7055 = !DILocation(line: 1508, column: 14, scope: !7033)
!7056 = !DILocation(line: 1508, column: 17, scope: !7033)
!7057 = !DILocation(line: 1508, column: 22, scope: !7033)
!7058 = !DILocation(line: 1508, column: 26, scope: !7033)
!7059 = !DILocation(line: 1508, column: 2, scope: !7033)
!7060 = !DILocation(line: 1510, column: 2, scope: !7033)
!7061 = !DILocation(line: 1511, column: 1, scope: !7033)
!7062 = distinct !DISubprogram(name: "omap_dma_free", scope: !3, file: !3, line: 1513, type: !7063, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7063 = !DISubroutineType(types: !7064)
!7064 = !{null, !358}
!7065 = !DILocalVariable(name: "od", arg: 1, scope: !7062, file: !3, line: 1513, type: !358)
!7066 = !DILocation(line: 1513, column: 47, scope: !7062)
!7067 = !DILocation(line: 1515, column: 2, scope: !7062)
!7068 = !DILocation(line: 1515, column: 22, scope: !7062)
!7069 = !DILocation(line: 1515, column: 26, scope: !7062)
!7070 = !DILocation(line: 1515, column: 31, scope: !7062)
!7071 = !DILocation(line: 1515, column: 10, scope: !7062)
!7072 = !DILocation(line: 1515, column: 9, scope: !7062)
!7073 = !DILocalVariable(name: "c", scope: !7074, file: !3, line: 1516, type: !4404)
!7074 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 1515, column: 42)
!7075 = !DILocation(line: 1516, column: 21, scope: !7074)
!7076 = !DILocalVariable(name: "__mptr", scope: !7077, file: !3, line: 1516, type: !351)
!7077 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 1516, column: 25)
!7078 = !DILocation(line: 1516, column: 25, scope: !7077)
!7079 = !DILocation(line: 1516, column: 25, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 1516, column: 25)
!7081 = !DILocation(line: 1519, column: 13, scope: !7074)
!7082 = !DILocation(line: 1519, column: 16, scope: !7074)
!7083 = !DILocation(line: 1519, column: 19, scope: !7074)
!7084 = !DILocation(line: 1519, column: 24, scope: !7074)
!7085 = !DILocation(line: 1519, column: 3, scope: !7074)
!7086 = !DILocation(line: 1520, column: 17, scope: !7074)
!7087 = !DILocation(line: 1520, column: 20, scope: !7074)
!7088 = !DILocation(line: 1520, column: 23, scope: !7074)
!7089 = !DILocation(line: 1520, column: 3, scope: !7074)
!7090 = !DILocation(line: 1521, column: 9, scope: !7074)
!7091 = !DILocation(line: 1521, column: 3, scope: !7074)
!7092 = distinct !{!7092, !7067, !7093}
!7093 = !DILocation(line: 1522, column: 2, scope: !7062)
!7094 = !DILocation(line: 1523, column: 1, scope: !7062)
!7095 = distinct !DISubprogram(name: "omap_dma_glbl_write", scope: !3, file: !3, line: 351, type: !7096, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7096 = !DISubroutineType(types: !7097)
!7097 = !{null, !358, !7, !7}
!7098 = !DILocalVariable(name: "od", arg: 1, scope: !7095, file: !3, line: 351, type: !358)
!7099 = !DILocation(line: 351, column: 53, scope: !7095)
!7100 = !DILocalVariable(name: "reg", arg: 2, scope: !7095, file: !3, line: 351, type: !7)
!7101 = !DILocation(line: 351, column: 66, scope: !7095)
!7102 = !DILocalVariable(name: "val", arg: 3, scope: !7095, file: !3, line: 351, type: !7)
!7103 = !DILocation(line: 351, column: 80, scope: !7095)
!7104 = !DILocalVariable(name: "r", scope: !7095, file: !3, line: 353, type: !4325)
!7105 = !DILocation(line: 353, column: 29, scope: !7095)
!7106 = !DILocation(line: 353, column: 33, scope: !7095)
!7107 = !DILocation(line: 353, column: 37, scope: !7095)
!7108 = !DILocation(line: 353, column: 47, scope: !7095)
!7109 = !DILocation(line: 353, column: 45, scope: !7095)
!7110 = !DILocalVariable(name: "__ret_warn_on", scope: !7111, file: !3, line: 355, type: !378)
!7111 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 355, column: 2)
!7112 = !DILocation(line: 355, column: 2, scope: !7111)
!7113 = !DILocation(line: 355, column: 2, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 355, column: 2)
!7115 = !DILocation(line: 355, column: 2, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 355, column: 2)
!7117 = !DILocation(line: 355, column: 2, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 355, column: 2)
!7119 = !DILocation(line: 355, column: 2, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 355, column: 2)
!7121 = !{i32 -2141741867, i32 -2141741838, i32 -2141741792, i32 -2141741734, i32 -2141741680, i32 -2141741626, i32 -2141741571, i32 -2141741540}
!7122 = !DILocation(line: 355, column: 2, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 355, column: 2)
!7124 = !{i32 -2141741133, i32 -2141741126, i32 -2141741074, i32 -2141741043, i32 -2141741013}
!7125 = !DILocation(line: 355, column: 2, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 355, column: 2)
!7127 = !DILocation(line: 357, column: 17, scope: !7095)
!7128 = !DILocation(line: 357, column: 22, scope: !7095)
!7129 = !DILocation(line: 357, column: 25, scope: !7095)
!7130 = !DILocation(line: 357, column: 31, scope: !7095)
!7131 = !DILocation(line: 357, column: 35, scope: !7095)
!7132 = !DILocation(line: 357, column: 42, scope: !7095)
!7133 = !DILocation(line: 357, column: 45, scope: !7095)
!7134 = !DILocation(line: 357, column: 40, scope: !7095)
!7135 = !DILocation(line: 357, column: 2, scope: !7095)
!7136 = !DILocation(line: 358, column: 1, scope: !7095)
!7137 = distinct !DISubprogram(name: "devm_request_irq", scope: !327, file: !327, line: 203, type: !7138, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7138 = !DISubroutineType(types: !7139)
!7139 = !{!378, !404, !7, !7140, !350, !412, !351}
!7140 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !327, line: 92, baseType: !7141)
!7141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7142, size: 64)
!7142 = !DISubroutineType(types: !7143)
!7143 = !{!7144, !378, !351}
!7144 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !339, line: 17, baseType: !338)
!7145 = !DILocalVariable(name: "dev", arg: 1, scope: !7137, file: !327, line: 203, type: !404)
!7146 = !DILocation(line: 203, column: 33, scope: !7137)
!7147 = !DILocalVariable(name: "irq", arg: 2, scope: !7137, file: !327, line: 203, type: !7)
!7148 = !DILocation(line: 203, column: 51, scope: !7137)
!7149 = !DILocalVariable(name: "handler", arg: 3, scope: !7137, file: !327, line: 203, type: !7140)
!7150 = !DILocation(line: 203, column: 70, scope: !7137)
!7151 = !DILocalVariable(name: "irqflags", arg: 4, scope: !7137, file: !327, line: 204, type: !350)
!7152 = !DILocation(line: 204, column: 18, scope: !7137)
!7153 = !DILocalVariable(name: "devname", arg: 5, scope: !7137, file: !327, line: 204, type: !412)
!7154 = !DILocation(line: 204, column: 40, scope: !7137)
!7155 = !DILocalVariable(name: "dev_id", arg: 6, scope: !7137, file: !327, line: 204, type: !351)
!7156 = !DILocation(line: 204, column: 55, scope: !7137)
!7157 = !DILocation(line: 206, column: 35, scope: !7137)
!7158 = !DILocation(line: 206, column: 40, scope: !7137)
!7159 = !DILocation(line: 206, column: 45, scope: !7137)
!7160 = !DILocation(line: 206, column: 60, scope: !7137)
!7161 = !DILocation(line: 207, column: 7, scope: !7137)
!7162 = !DILocation(line: 207, column: 16, scope: !7137)
!7163 = !DILocation(line: 206, column: 9, scope: !7137)
!7164 = !DILocation(line: 206, column: 2, scope: !7137)
!7165 = distinct !DISubprogram(name: "omap_dma_irq", scope: !3, file: !3, line: 631, type: !7142, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7166 = !DILocalVariable(name: "lock", arg: 1, scope: !7167, file: !4648, line: 392, type: !1286)
!7167 = distinct !DISubprogram(name: "spin_unlock", scope: !4648, file: !4648, line: 392, type: !5282, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7168 = !DILocation(line: 392, column: 53, scope: !7167, inlinedAt: !7169)
!7169 = distinct !DILocation(line: 666, column: 2, scope: !7165)
!7170 = !DILocalVariable(name: "x", arg: 1, scope: !7171, file: !6346, line: 283, type: !378)
!7171 = distinct !DISubprogram(name: "ffs", scope: !6346, file: !6346, line: 283, type: !3266, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7172 = !DILocation(line: 283, column: 36, scope: !7171, inlinedAt: !7173)
!7173 = distinct !DILocation(line: 645, column: 20, scope: !7165)
!7174 = !DILocalVariable(name: "r", scope: !7171, file: !6346, line: 285, type: !378)
!7175 = !DILocation(line: 285, column: 6, scope: !7171, inlinedAt: !7173)
!7176 = !DILocation(line: 392, column: 53, scope: !7167, inlinedAt: !7177)
!7177 = distinct !DILocation(line: 641, column: 3, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 640, column: 19)
!7179 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 640, column: 6)
!7180 = !DILocalVariable(name: "lock", arg: 1, scope: !7181, file: !4648, line: 352, type: !1286)
!7181 = distinct !DISubprogram(name: "spin_lock", scope: !4648, file: !4648, line: 352, type: !5282, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7182 = !DILocation(line: 352, column: 51, scope: !7181, inlinedAt: !7183)
!7183 = distinct !DILocation(line: 636, column: 2, scope: !7165)
!7184 = !DILocalVariable(name: "irq", arg: 1, scope: !7165, file: !3, line: 631, type: !378)
!7185 = !DILocation(line: 631, column: 37, scope: !7165)
!7186 = !DILocalVariable(name: "devid", arg: 2, scope: !7165, file: !3, line: 631, type: !351)
!7187 = !DILocation(line: 631, column: 48, scope: !7165)
!7188 = !DILocalVariable(name: "od", scope: !7165, file: !3, line: 633, type: !358)
!7189 = !DILocation(line: 633, column: 22, scope: !7165)
!7190 = !DILocation(line: 633, column: 27, scope: !7165)
!7191 = !DILocalVariable(name: "status", scope: !7165, file: !3, line: 634, type: !7)
!7192 = !DILocation(line: 634, column: 11, scope: !7165)
!7193 = !DILocalVariable(name: "channel", scope: !7165, file: !3, line: 634, type: !7)
!7194 = !DILocation(line: 634, column: 19, scope: !7165)
!7195 = !DILocation(line: 636, column: 13, scope: !7165)
!7196 = !DILocation(line: 636, column: 17, scope: !7165)
!7197 = !DILocation(line: 354, column: 2, scope: !7198, inlinedAt: !7183)
!7198 = distinct !DILexicalBlock(scope: !7181, file: !4648, line: 354, column: 2)
!7199 = !{i32 -2145555179}
!7200 = !DILocation(line: 354, column: 2, scope: !7201, inlinedAt: !7183)
!7201 = distinct !DILexicalBlock(scope: !7198, file: !4648, line: 354, column: 2)
!7202 = !DILocation(line: 638, column: 30, scope: !7165)
!7203 = !DILocation(line: 638, column: 11, scope: !7165)
!7204 = !DILocation(line: 638, column: 9, scope: !7165)
!7205 = !DILocation(line: 639, column: 12, scope: !7165)
!7206 = !DILocation(line: 639, column: 16, scope: !7165)
!7207 = !DILocation(line: 639, column: 9, scope: !7165)
!7208 = !DILocation(line: 640, column: 6, scope: !7179)
!7209 = !DILocation(line: 640, column: 13, scope: !7179)
!7210 = !DILocation(line: 640, column: 6, scope: !7165)
!7211 = !DILocation(line: 641, column: 16, scope: !7178)
!7212 = !DILocation(line: 641, column: 20, scope: !7178)
!7213 = !DILocation(line: 394, column: 2, scope: !7214, inlinedAt: !7177)
!7214 = distinct !DILexicalBlock(scope: !7167, file: !4648, line: 394, column: 2)
!7215 = !{i32 -2145552818}
!7216 = !DILocation(line: 394, column: 2, scope: !7217, inlinedAt: !7177)
!7217 = distinct !DILexicalBlock(scope: !7214, file: !4648, line: 394, column: 2)
!7218 = !DILocation(line: 642, column: 3, scope: !7178)
!7219 = !DILocation(line: 645, column: 2, scope: !7165)
!7220 = !DILocation(line: 645, column: 24, scope: !7165)
!7221 = !DILocation(line: 299, column: 14, scope: !7171, inlinedAt: !7173)
!7222 = !DILocation(line: 297, column: 2, scope: !7171, inlinedAt: !7173)
!7223 = !{i32 287339}
!7224 = !DILocation(line: 310, column: 9, scope: !7171, inlinedAt: !7173)
!7225 = !DILocation(line: 310, column: 11, scope: !7171, inlinedAt: !7173)
!7226 = !DILocation(line: 645, column: 18, scope: !7165)
!7227 = !DILocation(line: 645, column: 33, scope: !7165)
!7228 = !DILocalVariable(name: "mask", scope: !7229, file: !3, line: 646, type: !7)
!7229 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 645, column: 39)
!7230 = !DILocation(line: 646, column: 12, scope: !7229)
!7231 = !DILocalVariable(name: "csr", scope: !7229, file: !3, line: 646, type: !7)
!7232 = !DILocation(line: 646, column: 18, scope: !7229)
!7233 = !DILocalVariable(name: "c", scope: !7229, file: !3, line: 647, type: !4404)
!7234 = !DILocation(line: 647, column: 21, scope: !7229)
!7235 = !DILocation(line: 649, column: 11, scope: !7229)
!7236 = !DILocation(line: 650, column: 10, scope: !7229)
!7237 = !DILocation(line: 650, column: 8, scope: !7229)
!7238 = !DILocation(line: 651, column: 14, scope: !7229)
!7239 = !DILocation(line: 651, column: 13, scope: !7229)
!7240 = !DILocation(line: 651, column: 10, scope: !7229)
!7241 = !DILocation(line: 653, column: 7, scope: !7229)
!7242 = !DILocation(line: 653, column: 11, scope: !7229)
!7243 = !DILocation(line: 653, column: 19, scope: !7229)
!7244 = !DILocation(line: 653, column: 5, scope: !7229)
!7245 = !DILocation(line: 654, column: 7, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 654, column: 7)
!7247 = !DILocation(line: 654, column: 9, scope: !7246)
!7248 = !DILocation(line: 654, column: 7, scope: !7229)
!7249 = !DILocation(line: 656, column: 4, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 654, column: 18)
!7251 = !DILocation(line: 657, column: 4, scope: !7250)
!7252 = distinct !{!7252, !7219, !7253}
!7253 = !DILocation(line: 664, column: 2, scope: !7165)
!7254 = !DILocation(line: 660, column: 26, scope: !7229)
!7255 = !DILocation(line: 660, column: 9, scope: !7229)
!7256 = !DILocation(line: 660, column: 7, scope: !7229)
!7257 = !DILocation(line: 661, column: 23, scope: !7229)
!7258 = !DILocation(line: 661, column: 41, scope: !7229)
!7259 = !DILocation(line: 661, column: 3, scope: !7229)
!7260 = !DILocation(line: 663, column: 21, scope: !7229)
!7261 = !DILocation(line: 663, column: 30, scope: !7229)
!7262 = !DILocation(line: 663, column: 35, scope: !7229)
!7263 = !DILocation(line: 663, column: 3, scope: !7229)
!7264 = !DILocation(line: 666, column: 15, scope: !7165)
!7265 = !DILocation(line: 666, column: 19, scope: !7165)
!7266 = !DILocation(line: 394, column: 2, scope: !7214, inlinedAt: !7169)
!7267 = !DILocation(line: 394, column: 2, scope: !7217, inlinedAt: !7169)
!7268 = !DILocation(line: 668, column: 2, scope: !7165)
!7269 = !DILocation(line: 669, column: 1, scope: !7165)
!7270 = distinct !DISubprogram(name: "omap_dma_glbl_read", scope: !3, file: !3, line: 360, type: !7271, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7271 = !DISubroutineType(types: !7272)
!7272 = !{!7, !358, !7}
!7273 = !DILocalVariable(name: "od", arg: 1, scope: !7270, file: !3, line: 360, type: !358)
!7274 = !DILocation(line: 360, column: 56, scope: !7270)
!7275 = !DILocalVariable(name: "reg", arg: 2, scope: !7270, file: !3, line: 360, type: !7)
!7276 = !DILocation(line: 360, column: 69, scope: !7270)
!7277 = !DILocalVariable(name: "r", scope: !7270, file: !3, line: 362, type: !4325)
!7278 = !DILocation(line: 362, column: 29, scope: !7270)
!7279 = !DILocation(line: 362, column: 33, scope: !7270)
!7280 = !DILocation(line: 362, column: 37, scope: !7270)
!7281 = !DILocation(line: 362, column: 47, scope: !7270)
!7282 = !DILocation(line: 362, column: 45, scope: !7270)
!7283 = !DILocalVariable(name: "__ret_warn_on", scope: !7284, file: !3, line: 364, type: !378)
!7284 = distinct !DILexicalBlock(scope: !7270, file: !3, line: 364, column: 2)
!7285 = !DILocation(line: 364, column: 2, scope: !7284)
!7286 = !DILocation(line: 364, column: 2, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 364, column: 2)
!7288 = !DILocation(line: 364, column: 2, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 364, column: 2)
!7290 = !DILocation(line: 364, column: 2, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 364, column: 2)
!7292 = !DILocation(line: 364, column: 2, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 364, column: 2)
!7294 = !{i32 -2141740432, i32 -2141740403, i32 -2141740357, i32 -2141740299, i32 -2141740245, i32 -2141740191, i32 -2141740136, i32 -2141740105}
!7295 = !DILocation(line: 364, column: 2, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 364, column: 2)
!7297 = !{i32 -2141739698, i32 -2141739691, i32 -2141739639, i32 -2141739608, i32 -2141739578}
!7298 = !DILocation(line: 364, column: 2, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 364, column: 2)
!7300 = !DILocation(line: 366, column: 23, scope: !7270)
!7301 = !DILocation(line: 366, column: 26, scope: !7270)
!7302 = !DILocation(line: 366, column: 32, scope: !7270)
!7303 = !DILocation(line: 366, column: 36, scope: !7270)
!7304 = !DILocation(line: 366, column: 43, scope: !7270)
!7305 = !DILocation(line: 366, column: 46, scope: !7270)
!7306 = !DILocation(line: 366, column: 41, scope: !7270)
!7307 = !DILocation(line: 366, column: 9, scope: !7270)
!7308 = !DILocation(line: 366, column: 2, scope: !7270)
!7309 = distinct !DISubprogram(name: "omap_dma_filter_fn", scope: !3, file: !3, line: 1922, type: !394, scopeLine: 1923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7310 = !DILocalVariable(name: "chan", arg: 1, scope: !7309, file: !3, line: 1922, type: !398)
!7311 = !DILocation(line: 1922, column: 49, scope: !7309)
!7312 = !DILocalVariable(name: "param", arg: 2, scope: !7309, file: !3, line: 1922, type: !351)
!7313 = !DILocation(line: 1922, column: 61, scope: !7309)
!7314 = !DILocation(line: 1924, column: 6, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7309, file: !3, line: 1924, column: 6)
!7316 = !DILocation(line: 1924, column: 12, scope: !7315)
!7317 = !DILocation(line: 1924, column: 20, scope: !7315)
!7318 = !DILocation(line: 1924, column: 25, scope: !7315)
!7319 = !DILocation(line: 1924, column: 32, scope: !7315)
!7320 = !DILocation(line: 1924, column: 6, scope: !7309)
!7321 = !DILocalVariable(name: "od", scope: !7322, file: !3, line: 1925, type: !358)
!7322 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 1924, column: 60)
!7323 = !DILocation(line: 1925, column: 23, scope: !7322)
!7324 = !DILocation(line: 1925, column: 44, scope: !7322)
!7325 = !DILocation(line: 1925, column: 50, scope: !7322)
!7326 = !DILocation(line: 1925, column: 28, scope: !7322)
!7327 = !DILocalVariable(name: "c", scope: !7322, file: !3, line: 1926, type: !4404)
!7328 = !DILocation(line: 1926, column: 21, scope: !7322)
!7329 = !DILocation(line: 1926, column: 42, scope: !7322)
!7330 = !DILocation(line: 1926, column: 25, scope: !7322)
!7331 = !DILocalVariable(name: "req", scope: !7322, file: !3, line: 1927, type: !7)
!7332 = !DILocation(line: 1927, column: 12, scope: !7322)
!7333 = !DILocation(line: 1927, column: 31, scope: !7322)
!7334 = !DILocation(line: 1927, column: 19, scope: !7322)
!7335 = !DILocation(line: 1927, column: 18, scope: !7322)
!7336 = !DILocation(line: 1929, column: 7, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 1929, column: 7)
!7338 = !DILocation(line: 1929, column: 14, scope: !7337)
!7339 = !DILocation(line: 1929, column: 18, scope: !7337)
!7340 = !DILocation(line: 1929, column: 11, scope: !7337)
!7341 = !DILocation(line: 1929, column: 7, scope: !7322)
!7342 = !DILocation(line: 1930, column: 17, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 1929, column: 32)
!7344 = !DILocation(line: 1930, column: 4, scope: !7343)
!7345 = !DILocation(line: 1930, column: 7, scope: !7343)
!7346 = !DILocation(line: 1930, column: 15, scope: !7343)
!7347 = !DILocation(line: 1931, column: 4, scope: !7343)
!7348 = !DILocation(line: 1933, column: 2, scope: !7322)
!7349 = !DILocation(line: 1934, column: 2, scope: !7309)
!7350 = !DILocation(line: 1935, column: 1, scope: !7309)
!7351 = distinct !DISubprogram(name: "dev_name", scope: !73, file: !73, line: 609, type: !7352, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7352 = !DISubroutineType(types: !7353)
!7353 = !{!412, !3924}
!7354 = !DILocalVariable(name: "dev", arg: 1, scope: !7351, file: !73, line: 609, type: !3924)
!7355 = !DILocation(line: 609, column: 57, scope: !7351)
!7356 = !DILocation(line: 612, column: 6, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7351, file: !73, line: 612, column: 6)
!7358 = !DILocation(line: 612, column: 11, scope: !7357)
!7359 = !DILocation(line: 612, column: 6, scope: !7351)
!7360 = !DILocation(line: 613, column: 10, scope: !7357)
!7361 = !DILocation(line: 613, column: 15, scope: !7357)
!7362 = !DILocation(line: 613, column: 3, scope: !7357)
!7363 = !DILocation(line: 615, column: 23, scope: !7351)
!7364 = !DILocation(line: 615, column: 28, scope: !7351)
!7365 = !DILocation(line: 615, column: 9, scope: !7351)
!7366 = !DILocation(line: 615, column: 2, scope: !7351)
!7367 = !DILocation(line: 616, column: 1, scope: !7351)
!7368 = distinct !DISubprogram(name: "platform_set_drvdata", scope: !4534, file: !4534, line: 236, type: !7369, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7369 = !DISubroutineType(types: !7370)
!7370 = !{null, !4540, !351}
!7371 = !DILocalVariable(name: "pdev", arg: 1, scope: !7368, file: !4534, line: 236, type: !4540)
!7372 = !DILocation(line: 236, column: 65, scope: !7368)
!7373 = !DILocalVariable(name: "data", arg: 2, scope: !7368, file: !4534, line: 237, type: !351)
!7374 = !DILocation(line: 237, column: 12, scope: !7368)
!7375 = !DILocation(line: 239, column: 19, scope: !7368)
!7376 = !DILocation(line: 239, column: 25, scope: !7368)
!7377 = !DILocation(line: 239, column: 30, scope: !7368)
!7378 = !DILocation(line: 239, column: 2, scope: !7368)
!7379 = !DILocation(line: 240, column: 1, scope: !7368)
!7380 = distinct !DISubprogram(name: "omap_dma_init_gcr", scope: !3, file: !3, line: 1620, type: !7381, scopeLine: 1622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7381 = !DISubroutineType(types: !7382)
!7382 = !{null, !358, !378, !378, !378}
!7383 = !DILocalVariable(name: "od", arg: 1, scope: !7380, file: !3, line: 1620, type: !358)
!7384 = !DILocation(line: 1620, column: 51, scope: !7380)
!7385 = !DILocalVariable(name: "arb_rate", arg: 2, scope: !7380, file: !3, line: 1620, type: !378)
!7386 = !DILocation(line: 1620, column: 59, scope: !7380)
!7387 = !DILocalVariable(name: "max_fifo_depth", arg: 3, scope: !7380, file: !3, line: 1621, type: !378)
!7388 = !DILocation(line: 1621, column: 14, scope: !7380)
!7389 = !DILocalVariable(name: "tparams", arg: 4, scope: !7380, file: !3, line: 1621, type: !378)
!7390 = !DILocation(line: 1621, column: 34, scope: !7380)
!7391 = !DILocalVariable(name: "val", scope: !7380, file: !3, line: 1623, type: !603)
!7392 = !DILocation(line: 1623, column: 6, scope: !7380)
!7393 = !DILocation(line: 1626, column: 7, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 1626, column: 6)
!7395 = !DILocation(line: 1626, column: 11, scope: !7394)
!7396 = !DILocation(line: 1626, column: 16, scope: !7394)
!7397 = !DILocation(line: 1626, column: 6, scope: !7380)
!7398 = !DILocation(line: 1627, column: 3, scope: !7394)
!7399 = !DILocation(line: 1629, column: 6, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 1629, column: 6)
!7401 = !DILocation(line: 1629, column: 21, scope: !7400)
!7402 = !DILocation(line: 1629, column: 6, scope: !7380)
!7403 = !DILocation(line: 1630, column: 18, scope: !7400)
!7404 = !DILocation(line: 1630, column: 3, scope: !7400)
!7405 = !DILocation(line: 1631, column: 6, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 1631, column: 6)
!7407 = !DILocation(line: 1631, column: 15, scope: !7406)
!7408 = !DILocation(line: 1631, column: 6, scope: !7380)
!7409 = !DILocation(line: 1632, column: 12, scope: !7406)
!7410 = !DILocation(line: 1632, column: 3, scope: !7406)
!7411 = !DILocation(line: 1634, column: 15, scope: !7380)
!7412 = !DILocation(line: 1634, column: 13, scope: !7380)
!7413 = !DILocation(line: 1634, column: 6, scope: !7380)
!7414 = !DILocation(line: 1635, column: 16, scope: !7380)
!7415 = !DILocation(line: 1635, column: 14, scope: !7380)
!7416 = !DILocation(line: 1635, column: 25, scope: !7380)
!7417 = !DILocation(line: 1635, column: 6, scope: !7380)
!7418 = !DILocation(line: 1636, column: 10, scope: !7380)
!7419 = !DILocation(line: 1636, column: 19, scope: !7380)
!7420 = !DILocation(line: 1636, column: 27, scope: !7380)
!7421 = !DILocation(line: 1636, column: 6, scope: !7380)
!7422 = !DILocation(line: 1638, column: 22, scope: !7380)
!7423 = !DILocation(line: 1638, column: 31, scope: !7380)
!7424 = !DILocation(line: 1638, column: 2, scope: !7380)
!7425 = !DILocation(line: 1639, column: 1, scope: !7380)
!7426 = distinct !DISubprogram(name: "omap_dma_busy_notifier", scope: !3, file: !3, line: 1546, type: !4378, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7427 = !DILocalVariable(name: "nb", arg: 1, scope: !7426, file: !3, line: 1546, type: !4380)
!7428 = !DILocation(line: 1546, column: 58, scope: !7426)
!7429 = !DILocalVariable(name: "cmd", arg: 2, scope: !7426, file: !3, line: 1547, type: !350)
!7430 = !DILocation(line: 1547, column: 21, scope: !7426)
!7431 = !DILocalVariable(name: "v", arg: 3, scope: !7426, file: !3, line: 1547, type: !351)
!7432 = !DILocation(line: 1547, column: 32, scope: !7426)
!7433 = !DILocalVariable(name: "od", scope: !7426, file: !3, line: 1549, type: !358)
!7434 = !DILocation(line: 1549, column: 22, scope: !7426)
!7435 = !DILocalVariable(name: "__mptr", scope: !7436, file: !3, line: 1551, type: !351)
!7436 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 1551, column: 7)
!7437 = !DILocation(line: 1551, column: 7, scope: !7436)
!7438 = !DILocation(line: 1551, column: 7, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7436, file: !3, line: 1551, column: 7)
!7440 = !DILocation(line: 1551, column: 5, scope: !7426)
!7441 = !DILocation(line: 1553, column: 10, scope: !7426)
!7442 = !DILocation(line: 1553, column: 2, scope: !7426)
!7443 = !DILocation(line: 1555, column: 21, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 1555, column: 7)
!7445 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 1553, column: 15)
!7446 = !DILocation(line: 1555, column: 7, scope: !7444)
!7447 = !DILocation(line: 1555, column: 7, scope: !7445)
!7448 = !DILocation(line: 1556, column: 4, scope: !7444)
!7449 = !DILocation(line: 1557, column: 3, scope: !7445)
!7450 = !DILocation(line: 1560, column: 3, scope: !7445)
!7451 = !DILocation(line: 1563, column: 2, scope: !7426)
!7452 = !DILocation(line: 1564, column: 1, scope: !7426)
!7453 = distinct !DISubprogram(name: "cpu_pm_register_notifier", scope: !7454, file: !7454, line: 70, type: !7455, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7454 = !DIFile(filename: "./include/linux/cpu_pm.h", directory: "/home/lizy2001/genbc/linux")
!7455 = !DISubroutineType(types: !7456)
!7456 = !{!378, !4380}
!7457 = !DILocalVariable(name: "nb", arg: 1, scope: !7453, file: !7454, line: 70, type: !4380)
!7458 = !DILocation(line: 70, column: 67, scope: !7453)
!7459 = !DILocation(line: 72, column: 2, scope: !7453)
!7460 = distinct !DISubprogram(name: "omap_dma_context_notifier", scope: !3, file: !3, line: 1598, type: !4378, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7461 = !DILocalVariable(name: "nb", arg: 1, scope: !7460, file: !3, line: 1598, type: !4380)
!7462 = !DILocation(line: 1598, column: 61, scope: !7460)
!7463 = !DILocalVariable(name: "cmd", arg: 2, scope: !7460, file: !3, line: 1599, type: !350)
!7464 = !DILocation(line: 1599, column: 24, scope: !7460)
!7465 = !DILocalVariable(name: "v", arg: 3, scope: !7460, file: !3, line: 1599, type: !351)
!7466 = !DILocation(line: 1599, column: 35, scope: !7460)
!7467 = !DILocalVariable(name: "od", scope: !7460, file: !3, line: 1601, type: !358)
!7468 = !DILocation(line: 1601, column: 22, scope: !7460)
!7469 = !DILocalVariable(name: "__mptr", scope: !7470, file: !3, line: 1603, type: !351)
!7470 = distinct !DILexicalBlock(scope: !7460, file: !3, line: 1603, column: 7)
!7471 = !DILocation(line: 1603, column: 7, scope: !7470)
!7472 = !DILocation(line: 1603, column: 7, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7470, file: !3, line: 1603, column: 7)
!7474 = !DILocation(line: 1603, column: 5, scope: !7460)
!7475 = !DILocation(line: 1605, column: 10, scope: !7460)
!7476 = !DILocation(line: 1605, column: 2, scope: !7460)
!7477 = !DILocation(line: 1607, column: 21, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 1607, column: 7)
!7479 = distinct !DILexicalBlock(scope: !7460, file: !3, line: 1605, column: 15)
!7480 = !DILocation(line: 1607, column: 7, scope: !7478)
!7481 = !DILocation(line: 1607, column: 7, scope: !7479)
!7482 = !DILocation(line: 1608, column: 4, scope: !7478)
!7483 = !DILocation(line: 1609, column: 25, scope: !7479)
!7484 = !DILocation(line: 1609, column: 3, scope: !7479)
!7485 = !DILocation(line: 1610, column: 3, scope: !7479)
!7486 = !DILocation(line: 1613, column: 28, scope: !7479)
!7487 = !DILocation(line: 1613, column: 3, scope: !7479)
!7488 = !DILocation(line: 1614, column: 3, scope: !7479)
!7489 = !DILocation(line: 1617, column: 2, scope: !7460)
!7490 = !DILocation(line: 1618, column: 1, scope: !7460)
!7491 = distinct !DISubprogram(name: "set_bit", scope: !7492, file: !7492, line: 26, type: !7493, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7492 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7493 = !DISubroutineType(types: !7494)
!7494 = !{null, !352, !7495}
!7495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7496, size: 64)
!7496 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !350)
!7497 = !DILocalVariable(name: "nr", arg: 1, scope: !7498, file: !6346, line: 52, type: !352)
!7498 = distinct !DISubprogram(name: "arch_set_bit", scope: !6346, file: !6346, line: 52, type: !7493, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7499 = !DILocation(line: 52, column: 19, scope: !7498, inlinedAt: !7500)
!7500 = distinct !DILocation(line: 29, column: 2, scope: !7491)
!7501 = !DILocalVariable(name: "addr", arg: 2, scope: !7498, file: !6346, line: 52, type: !7495)
!7502 = !DILocation(line: 52, column: 47, scope: !7498, inlinedAt: !7500)
!7503 = !DILocalVariable(name: "v", arg: 1, scope: !7504, file: !7505, line: 84, type: !7508)
!7504 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !7505, file: !7505, line: 84, type: !7506, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7505 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!7506 = !DISubroutineType(types: !7507)
!7507 = !{null, !7508, !510}
!7508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7509, size: 64)
!7509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7510)
!7510 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!7511 = !DILocation(line: 84, column: 74, scope: !7504, inlinedAt: !7512)
!7512 = distinct !DILocation(line: 28, column: 2, scope: !7491)
!7513 = !DILocalVariable(name: "size", arg: 2, scope: !7504, file: !7505, line: 84, type: !510)
!7514 = !DILocation(line: 84, column: 84, scope: !7504, inlinedAt: !7512)
!7515 = !DILocalVariable(name: "nr", arg: 1, scope: !7491, file: !7492, line: 26, type: !352)
!7516 = !DILocation(line: 26, column: 33, scope: !7491)
!7517 = !DILocalVariable(name: "addr", arg: 2, scope: !7491, file: !7492, line: 26, type: !7495)
!7518 = !DILocation(line: 26, column: 61, scope: !7491)
!7519 = !DILocation(line: 28, column: 26, scope: !7491)
!7520 = !DILocation(line: 28, column: 33, scope: !7491)
!7521 = !DILocation(line: 28, column: 31, scope: !7491)
!7522 = !DILocation(line: 86, column: 20, scope: !7504, inlinedAt: !7512)
!7523 = !DILocation(line: 86, column: 23, scope: !7504, inlinedAt: !7512)
!7524 = !DILocation(line: 86, column: 2, scope: !7504, inlinedAt: !7512)
!7525 = !DILocation(line: 87, column: 2, scope: !7504, inlinedAt: !7512)
!7526 = !DILocation(line: 29, column: 15, scope: !7491)
!7527 = !DILocation(line: 29, column: 19, scope: !7491)
!7528 = !DILocation(line: 54, column: 27, scope: !7529, inlinedAt: !7500)
!7529 = distinct !DILexicalBlock(scope: !7498, file: !6346, line: 54, column: 6)
!7530 = !DILocation(line: 54, column: 6, scope: !7529, inlinedAt: !7500)
!7531 = !DILocation(line: 54, column: 6, scope: !7498, inlinedAt: !7500)
!7532 = !DILocation(line: 56, column: 6, scope: !7533, inlinedAt: !7500)
!7533 = distinct !DILexicalBlock(scope: !7529, file: !6346, line: 54, column: 32)
!7534 = !DILocation(line: 57, column: 12, scope: !7533, inlinedAt: !7500)
!7535 = !DILocation(line: 55, column: 3, scope: !7533, inlinedAt: !7500)
!7536 = !{i32 -2147162815}
!7537 = !DILocation(line: 59, column: 2, scope: !7533, inlinedAt: !7500)
!7538 = !DILocation(line: 61, column: 8, scope: !7539, inlinedAt: !7500)
!7539 = distinct !DILexicalBlock(scope: !7529, file: !6346, line: 59, column: 9)
!7540 = !DILocation(line: 61, column: 32, scope: !7539, inlinedAt: !7500)
!7541 = !DILocation(line: 60, column: 3, scope: !7539, inlinedAt: !7500)
!7542 = !{i32 -2147162683}
!7543 = !DILocation(line: 30, column: 1, scope: !7491)
!7544 = distinct !DISubprogram(name: "kasan_check_write", scope: !7545, file: !7545, line: 38, type: !7546, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7545 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7546 = !DISubroutineType(types: !7547)
!7547 = !{!396, !7508, !7}
!7548 = !DILocalVariable(name: "p", arg: 1, scope: !7544, file: !7545, line: 38, type: !7508)
!7549 = !DILocation(line: 38, column: 59, scope: !7544)
!7550 = !DILocalVariable(name: "size", arg: 2, scope: !7544, file: !7545, line: 38, type: !7)
!7551 = !DILocation(line: 38, column: 75, scope: !7544)
!7552 = !DILocation(line: 40, column: 2, scope: !7544)
!7553 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7554, file: !7554, line: 178, type: !7555, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7554 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7555 = !DISubroutineType(types: !7556)
!7556 = !{null, !7508, !510, !378}
!7557 = !DILocalVariable(name: "ptr", arg: 1, scope: !7553, file: !7554, line: 178, type: !7508)
!7558 = !DILocation(line: 178, column: 60, scope: !7553)
!7559 = !DILocalVariable(name: "size", arg: 2, scope: !7553, file: !7554, line: 178, type: !510)
!7560 = !DILocation(line: 178, column: 72, scope: !7553)
!7561 = !DILocalVariable(name: "type", arg: 3, scope: !7553, file: !7554, line: 179, type: !378)
!7562 = !DILocation(line: 179, column: 15, scope: !7553)
!7563 = !DILocation(line: 179, column: 23, scope: !7553)
!7564 = distinct !DISubprogram(name: "to_omap_dma_dev", scope: !3, file: !3, line: 233, type: !7565, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7565 = !DISubroutineType(types: !7566)
!7566 = !{!358, !402}
!7567 = !DILocalVariable(name: "d", arg: 1, scope: !7564, file: !3, line: 233, type: !402)
!7568 = !DILocation(line: 233, column: 70, scope: !7564)
!7569 = !DILocalVariable(name: "__mptr", scope: !7570, file: !3, line: 235, type: !351)
!7570 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 235, column: 9)
!7571 = !DILocation(line: 235, column: 9, scope: !7570)
!7572 = !DILocation(line: 235, column: 9, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 235, column: 9)
!7574 = !DILocation(line: 235, column: 2, scope: !7564)
!7575 = distinct !DISubprogram(name: "to_omap_dma_chan", scope: !3, file: !3, line: 238, type: !7576, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7576 = !DISubroutineType(types: !7577)
!7577 = !{!4404, !398}
!7578 = !DILocalVariable(name: "c", arg: 1, scope: !7575, file: !3, line: 238, type: !398)
!7579 = !DILocation(line: 238, column: 67, scope: !7575)
!7580 = !DILocalVariable(name: "__mptr", scope: !7581, file: !3, line: 240, type: !351)
!7581 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 240, column: 9)
!7582 = !DILocation(line: 240, column: 9, scope: !7581)
!7583 = !DILocation(line: 240, column: 9, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 240, column: 9)
!7585 = !DILocation(line: 240, column: 2, scope: !7575)
!7586 = distinct !DISubprogram(name: "omap_request_dma", scope: !185, file: !185, line: 347, type: !7587, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7587 = !DISubroutineType(types: !7588)
!7588 = !{!378, !378, !412, !7589, !351, !891}
!7589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7590, size: 64)
!7590 = !DISubroutineType(types: !7591)
!7591 = !{null, !378, !1041, !351}
!7592 = !DILocalVariable(name: "dev_id", arg: 1, scope: !7586, file: !185, line: 347, type: !378)
!7593 = !DILocation(line: 347, column: 40, scope: !7586)
!7594 = !DILocalVariable(name: "dev_name", arg: 2, scope: !7586, file: !185, line: 347, type: !412)
!7595 = !DILocation(line: 347, column: 60, scope: !7586)
!7596 = !DILocalVariable(name: "callback", arg: 3, scope: !7586, file: !185, line: 348, type: !7589)
!7597 = !DILocation(line: 348, column: 11, scope: !7586)
!7598 = !DILocalVariable(name: "data", arg: 4, scope: !7586, file: !185, line: 349, type: !351)
!7599 = !DILocation(line: 349, column: 10, scope: !7586)
!7600 = !DILocalVariable(name: "dma_ch", arg: 5, scope: !7586, file: !185, line: 349, type: !891)
!7601 = !DILocation(line: 349, column: 21, scope: !7586)
!7602 = !DILocation(line: 351, column: 2, scope: !7586)
!7603 = distinct !DISubprogram(name: "omap_dma_callback", scope: !3, file: !3, line: 610, type: !7590, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7604 = !DILocation(line: 407, column: 64, scope: !5491, inlinedAt: !7605)
!7605 = distinct !DILocation(line: 628, column: 2, scope: !7603)
!7606 = !DILocation(line: 407, column: 84, scope: !5491, inlinedAt: !7605)
!7607 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !7608)
!7608 = distinct !DILocation(line: 616, column: 2, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 616, column: 2)
!7610 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 616, column: 2)
!7611 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 616, column: 2)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 616, column: 2)
!7613 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 616, column: 2)
!7614 = !DILocalVariable(name: "ch", arg: 1, scope: !7603, file: !3, line: 610, type: !378)
!7615 = !DILocation(line: 610, column: 35, scope: !7603)
!7616 = !DILocalVariable(name: "status", arg: 2, scope: !7603, file: !3, line: 610, type: !1041)
!7617 = !DILocation(line: 610, column: 43, scope: !7603)
!7618 = !DILocalVariable(name: "data", arg: 3, scope: !7603, file: !3, line: 610, type: !351)
!7619 = !DILocation(line: 610, column: 57, scope: !7603)
!7620 = !DILocalVariable(name: "c", scope: !7603, file: !3, line: 612, type: !4404)
!7621 = !DILocation(line: 612, column: 20, scope: !7603)
!7622 = !DILocation(line: 612, column: 24, scope: !7603)
!7623 = !DILocalVariable(name: "d", scope: !7603, file: !3, line: 613, type: !4459)
!7624 = !DILocation(line: 613, column: 20, scope: !7603)
!7625 = !DILocalVariable(name: "flags", scope: !7603, file: !3, line: 614, type: !350)
!7626 = !DILocation(line: 614, column: 16, scope: !7603)
!7627 = !DILocation(line: 616, column: 2, scope: !7603)
!7628 = !DILocation(line: 616, column: 2, scope: !7613)
!7629 = !DILocalVariable(name: "__dummy", scope: !7630, file: !3, line: 616, type: !350)
!7630 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 616, column: 2)
!7631 = !DILocation(line: 616, column: 2, scope: !7630)
!7632 = !DILocalVariable(name: "__dummy2", scope: !7630, file: !3, line: 616, type: !350)
!7633 = !DILocation(line: 616, column: 2, scope: !7612)
!7634 = !DILocation(line: 616, column: 2, scope: !7611)
!7635 = !DILocation(line: 616, column: 2, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 616, column: 2)
!7637 = !DILocalVariable(name: "__dummy", scope: !7638, file: !3, line: 616, type: !350)
!7638 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 616, column: 2)
!7639 = distinct !DILexicalBlock(scope: !7636, file: !3, line: 616, column: 2)
!7640 = !DILocation(line: 616, column: 2, scope: !7638)
!7641 = !DILocalVariable(name: "__dummy2", scope: !7638, file: !3, line: 616, type: !350)
!7642 = !DILocation(line: 616, column: 2, scope: !7639)
!7643 = !DILocation(line: 616, column: 2, scope: !7610)
!7644 = !{i32 -2141737577}
!7645 = !DILocation(line: 616, column: 2, scope: !7609)
!7646 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !7608)
!7647 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !7608)
!7648 = !DILocation(line: 617, column: 6, scope: !7603)
!7649 = !DILocation(line: 617, column: 9, scope: !7603)
!7650 = !DILocation(line: 617, column: 4, scope: !7603)
!7651 = !DILocation(line: 618, column: 6, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 618, column: 6)
!7653 = !DILocation(line: 618, column: 6, scope: !7603)
!7654 = !DILocation(line: 619, column: 7, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 619, column: 7)
!7656 = distinct !DILexicalBlock(scope: !7652, file: !3, line: 618, column: 9)
!7657 = !DILocation(line: 619, column: 10, scope: !7655)
!7658 = !DILocation(line: 619, column: 7, scope: !7656)
!7659 = !DILocation(line: 620, column: 27, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 619, column: 18)
!7661 = !DILocation(line: 620, column: 30, scope: !7660)
!7662 = !DILocation(line: 620, column: 4, scope: !7660)
!7663 = !DILocation(line: 621, column: 3, scope: !7660)
!7664 = !DILocation(line: 621, column: 14, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 621, column: 14)
!7666 = !DILocation(line: 621, column: 17, scope: !7665)
!7667 = !DILocation(line: 621, column: 26, scope: !7665)
!7668 = !DILocation(line: 621, column: 29, scope: !7665)
!7669 = !DILocation(line: 621, column: 32, scope: !7665)
!7670 = !DILocation(line: 621, column: 41, scope: !7665)
!7671 = !DILocation(line: 621, column: 44, scope: !7665)
!7672 = !DILocation(line: 621, column: 38, scope: !7665)
!7673 = !DILocation(line: 621, column: 14, scope: !7655)
!7674 = !DILocation(line: 622, column: 24, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 621, column: 51)
!7676 = !DILocation(line: 622, column: 4, scope: !7675)
!7677 = !DILocation(line: 623, column: 27, scope: !7675)
!7678 = !DILocation(line: 623, column: 30, scope: !7675)
!7679 = !DILocation(line: 623, column: 4, scope: !7675)
!7680 = !DILocation(line: 624, column: 3, scope: !7675)
!7681 = !DILocation(line: 625, column: 22, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 624, column: 10)
!7683 = !DILocation(line: 625, column: 25, scope: !7682)
!7684 = !DILocation(line: 625, column: 4, scope: !7682)
!7685 = !DILocation(line: 627, column: 2, scope: !7656)
!7686 = !DILocation(line: 628, column: 26, scope: !7603)
!7687 = !DILocation(line: 628, column: 29, scope: !7603)
!7688 = !DILocation(line: 628, column: 32, scope: !7603)
!7689 = !DILocation(line: 628, column: 38, scope: !7603)
!7690 = !DILocation(line: 409, column: 2, scope: !5673, inlinedAt: !7605)
!7691 = !DILocation(line: 409, column: 2, scope: !5678, inlinedAt: !7605)
!7692 = !DILocation(line: 409, column: 2, scope: !5679, inlinedAt: !7605)
!7693 = !DILocation(line: 409, column: 2, scope: !5686, inlinedAt: !7605)
!7694 = !DILocation(line: 409, column: 2, scope: !5689, inlinedAt: !7605)
!7695 = !DILocation(line: 629, column: 1, scope: !7603)
!7696 = distinct !DISubprogram(name: "omap_dma_get_lch", scope: !3, file: !3, line: 671, type: !7697, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{!378, !358, !891}
!7699 = !DILocalVariable(name: "od", arg: 1, scope: !7696, file: !3, line: 671, type: !358)
!7700 = !DILocation(line: 671, column: 49, scope: !7696)
!7701 = !DILocalVariable(name: "lch", arg: 2, scope: !7696, file: !3, line: 671, type: !891)
!7702 = !DILocation(line: 671, column: 58, scope: !7696)
!7703 = !DILocalVariable(name: "channel", scope: !7696, file: !3, line: 673, type: !378)
!7704 = !DILocation(line: 673, column: 6, scope: !7696)
!7705 = !DILocation(line: 675, column: 14, scope: !7696)
!7706 = !DILocation(line: 675, column: 18, scope: !7696)
!7707 = !DILocation(line: 675, column: 2, scope: !7696)
!7708 = !DILocation(line: 676, column: 32, scope: !7696)
!7709 = !DILocation(line: 676, column: 36, scope: !7696)
!7710 = !DILocation(line: 676, column: 48, scope: !7696)
!7711 = !DILocation(line: 676, column: 52, scope: !7696)
!7712 = !DILocation(line: 676, column: 12, scope: !7696)
!7713 = !DILocation(line: 676, column: 10, scope: !7696)
!7714 = !DILocation(line: 677, column: 6, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 677, column: 6)
!7716 = !DILocation(line: 677, column: 17, scope: !7715)
!7717 = !DILocation(line: 677, column: 21, scope: !7715)
!7718 = !DILocation(line: 677, column: 14, scope: !7715)
!7719 = !DILocation(line: 677, column: 6, scope: !7696)
!7720 = !DILocation(line: 678, column: 3, scope: !7715)
!7721 = !DILocation(line: 679, column: 10, scope: !7696)
!7722 = !DILocation(line: 679, column: 19, scope: !7696)
!7723 = !DILocation(line: 679, column: 23, scope: !7696)
!7724 = !DILocation(line: 679, column: 2, scope: !7696)
!7725 = !DILocation(line: 680, column: 16, scope: !7696)
!7726 = !DILocation(line: 680, column: 20, scope: !7696)
!7727 = !DILocation(line: 680, column: 2, scope: !7696)
!7728 = !DILocation(line: 682, column: 21, scope: !7696)
!7729 = !DILocation(line: 682, column: 25, scope: !7696)
!7730 = !DILocation(line: 682, column: 2, scope: !7696)
!7731 = !DILocation(line: 683, column: 9, scope: !7696)
!7732 = !DILocation(line: 683, column: 3, scope: !7696)
!7733 = !DILocation(line: 683, column: 7, scope: !7696)
!7734 = !DILocation(line: 685, column: 2, scope: !7696)
!7735 = !DILabel(scope: !7696, name: "out_busy", file: !3, line: 687)
!7736 = !DILocation(line: 687, column: 1, scope: !7696)
!7737 = !DILocation(line: 688, column: 16, scope: !7696)
!7738 = !DILocation(line: 688, column: 20, scope: !7696)
!7739 = !DILocation(line: 688, column: 2, scope: !7696)
!7740 = !DILocation(line: 689, column: 3, scope: !7696)
!7741 = !DILocation(line: 689, column: 7, scope: !7696)
!7742 = !DILocation(line: 691, column: 2, scope: !7696)
!7743 = !DILocation(line: 692, column: 1, scope: !7696)
!7744 = distinct !DISubprogram(name: "omap_dma_assign", scope: !3, file: !3, line: 414, type: !7745, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7745 = !DISubroutineType(types: !7746)
!7746 = !{null, !358, !4404, !7}
!7747 = !DILocalVariable(name: "od", arg: 1, scope: !7744, file: !3, line: 414, type: !358)
!7748 = !DILocation(line: 414, column: 49, scope: !7744)
!7749 = !DILocalVariable(name: "c", arg: 2, scope: !7744, file: !3, line: 414, type: !4404)
!7750 = !DILocation(line: 414, column: 71, scope: !7744)
!7751 = !DILocalVariable(name: "lch", arg: 3, scope: !7744, file: !3, line: 415, type: !7)
!7752 = !DILocation(line: 415, column: 11, scope: !7744)
!7753 = !DILocation(line: 417, column: 20, scope: !7744)
!7754 = !DILocation(line: 417, column: 24, scope: !7744)
!7755 = !DILocation(line: 417, column: 31, scope: !7744)
!7756 = !DILocation(line: 417, column: 35, scope: !7744)
!7757 = !DILocation(line: 417, column: 41, scope: !7744)
!7758 = !DILocation(line: 417, column: 58, scope: !7744)
!7759 = !DILocation(line: 417, column: 56, scope: !7744)
!7760 = !DILocation(line: 417, column: 29, scope: !7744)
!7761 = !DILocation(line: 417, column: 2, scope: !7744)
!7762 = !DILocation(line: 417, column: 5, scope: !7744)
!7763 = !DILocation(line: 417, column: 18, scope: !7744)
!7764 = !DILocation(line: 419, column: 21, scope: !7744)
!7765 = !DILocation(line: 419, column: 2, scope: !7744)
!7766 = !DILocation(line: 419, column: 6, scope: !7744)
!7767 = !DILocation(line: 419, column: 14, scope: !7744)
!7768 = !DILocation(line: 419, column: 19, scope: !7744)
!7769 = !DILocation(line: 420, column: 1, scope: !7744)
!7770 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !7771, file: !7771, line: 666, type: !7772, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7771 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7772 = !DISubroutineType(types: !7773)
!7773 = !{!350}
!7774 = !DILocalVariable(name: "f", scope: !7770, file: !7771, line: 668, type: !350)
!7775 = !DILocation(line: 668, column: 16, scope: !7770)
!7776 = !DILocation(line: 670, column: 6, scope: !7770)
!7777 = !DILocation(line: 670, column: 4, scope: !7770)
!7778 = !DILocation(line: 671, column: 2, scope: !7770)
!7779 = !DILocation(line: 672, column: 9, scope: !7770)
!7780 = !DILocation(line: 672, column: 2, scope: !7770)
!7781 = distinct !DISubprogram(name: "vchan_cyclic_callback", scope: !4409, file: !4409, line: 131, type: !4434, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7782 = !DILocalVariable(name: "vd", arg: 1, scope: !7781, file: !4409, line: 131, type: !4436)
!7783 = !DILocation(line: 131, column: 64, scope: !7781)
!7784 = !DILocalVariable(name: "vc", scope: !7781, file: !4409, line: 133, type: !4502)
!7785 = !DILocation(line: 133, column: 24, scope: !7781)
!7786 = !DILocation(line: 133, column: 42, scope: !7781)
!7787 = !DILocation(line: 133, column: 46, scope: !7781)
!7788 = !DILocation(line: 133, column: 49, scope: !7781)
!7789 = !DILocation(line: 133, column: 29, scope: !7781)
!7790 = !DILocation(line: 135, column: 15, scope: !7781)
!7791 = !DILocation(line: 135, column: 2, scope: !7781)
!7792 = !DILocation(line: 135, column: 6, scope: !7781)
!7793 = !DILocation(line: 135, column: 13, scope: !7781)
!7794 = !DILocation(line: 136, column: 20, scope: !7781)
!7795 = !DILocation(line: 136, column: 24, scope: !7781)
!7796 = !DILocation(line: 136, column: 2, scope: !7781)
!7797 = !DILocation(line: 137, column: 1, scope: !7781)
!7798 = distinct !DISubprogram(name: "omap_dma_start_desc", scope: !3, file: !3, line: 564, type: !7799, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7799 = !DISubroutineType(types: !7800)
!7800 = !{null, !4404}
!7801 = !DILocalVariable(name: "c", arg: 1, scope: !7798, file: !3, line: 564, type: !4404)
!7802 = !DILocation(line: 564, column: 51, scope: !7798)
!7803 = !DILocalVariable(name: "vd", scope: !7798, file: !3, line: 566, type: !4436)
!7804 = !DILocation(line: 566, column: 24, scope: !7798)
!7805 = !DILocation(line: 566, column: 46, scope: !7798)
!7806 = !DILocation(line: 566, column: 49, scope: !7798)
!7807 = !DILocation(line: 566, column: 29, scope: !7798)
!7808 = !DILocalVariable(name: "d", scope: !7798, file: !3, line: 567, type: !4459)
!7809 = !DILocation(line: 567, column: 20, scope: !7798)
!7810 = !DILocalVariable(name: "cxsa", scope: !7798, file: !3, line: 568, type: !7)
!7811 = !DILocation(line: 568, column: 11, scope: !7798)
!7812 = !DILocalVariable(name: "cxei", scope: !7798, file: !3, line: 568, type: !7)
!7813 = !DILocation(line: 568, column: 17, scope: !7798)
!7814 = !DILocalVariable(name: "cxfi", scope: !7798, file: !3, line: 568, type: !7)
!7815 = !DILocation(line: 568, column: 23, scope: !7798)
!7816 = !DILocation(line: 570, column: 7, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 570, column: 6)
!7818 = !DILocation(line: 570, column: 6, scope: !7798)
!7819 = !DILocation(line: 571, column: 3, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7817, file: !3, line: 570, column: 11)
!7821 = !DILocation(line: 571, column: 6, scope: !7820)
!7822 = !DILocation(line: 571, column: 11, scope: !7820)
!7823 = !DILocation(line: 572, column: 3, scope: !7820)
!7824 = !DILocation(line: 575, column: 12, scope: !7798)
!7825 = !DILocation(line: 575, column: 16, scope: !7798)
!7826 = !DILocation(line: 575, column: 2, scope: !7798)
!7827 = !DILocation(line: 577, column: 34, scope: !7798)
!7828 = !DILocation(line: 577, column: 38, scope: !7798)
!7829 = !DILocation(line: 577, column: 16, scope: !7798)
!7830 = !DILocation(line: 577, column: 14, scope: !7798)
!7831 = !DILocation(line: 577, column: 2, scope: !7798)
!7832 = !DILocation(line: 577, column: 5, scope: !7798)
!7833 = !DILocation(line: 577, column: 10, scope: !7798)
!7834 = !DILocation(line: 578, column: 2, scope: !7798)
!7835 = !DILocation(line: 578, column: 5, scope: !7798)
!7836 = !DILocation(line: 578, column: 11, scope: !7798)
!7837 = !DILocation(line: 585, column: 2, scope: !7798)
!7838 = !{i32 -2141738505}
!7839 = !DILocation(line: 587, column: 22, scope: !7798)
!7840 = !DILocation(line: 587, column: 30, scope: !7798)
!7841 = !DILocation(line: 587, column: 33, scope: !7798)
!7842 = !DILocation(line: 587, column: 2, scope: !7798)
!7843 = !DILocation(line: 589, column: 23, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 588, column: 6)
!7845 = !DILocation(line: 589, column: 32, scope: !7844)
!7846 = !DILocation(line: 589, column: 35, scope: !7844)
!7847 = !DILocation(line: 589, column: 39, scope: !7844)
!7848 = !DILocation(line: 589, column: 3, scope: !7844)
!7849 = !DILocation(line: 591, column: 6, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 591, column: 6)
!7851 = !DILocation(line: 591, column: 9, scope: !7850)
!7852 = !DILocation(line: 591, column: 13, scope: !7850)
!7853 = !DILocation(line: 591, column: 31, scope: !7850)
!7854 = !DILocation(line: 591, column: 34, scope: !7850)
!7855 = !DILocation(line: 591, column: 37, scope: !7850)
!7856 = !DILocation(line: 591, column: 41, scope: !7850)
!7857 = !DILocation(line: 591, column: 6, scope: !7798)
!7858 = !DILocation(line: 592, column: 8, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 591, column: 60)
!7860 = !DILocation(line: 593, column: 8, scope: !7859)
!7861 = !DILocation(line: 594, column: 8, scope: !7859)
!7862 = !DILocation(line: 595, column: 2, scope: !7859)
!7863 = !DILocation(line: 596, column: 8, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 595, column: 9)
!7865 = !DILocation(line: 597, column: 8, scope: !7864)
!7866 = !DILocation(line: 598, column: 8, scope: !7864)
!7867 = !DILocation(line: 601, column: 22, scope: !7798)
!7868 = !DILocation(line: 601, column: 25, scope: !7798)
!7869 = !DILocation(line: 601, column: 31, scope: !7798)
!7870 = !DILocation(line: 601, column: 34, scope: !7798)
!7871 = !DILocation(line: 601, column: 2, scope: !7798)
!7872 = !DILocation(line: 602, column: 22, scope: !7798)
!7873 = !DILocation(line: 602, column: 25, scope: !7798)
!7874 = !DILocation(line: 602, column: 31, scope: !7798)
!7875 = !DILocation(line: 602, column: 34, scope: !7798)
!7876 = !DILocation(line: 602, column: 2, scope: !7798)
!7877 = !DILocation(line: 603, column: 22, scope: !7798)
!7878 = !DILocation(line: 603, column: 25, scope: !7798)
!7879 = !DILocation(line: 603, column: 31, scope: !7798)
!7880 = !DILocation(line: 603, column: 34, scope: !7798)
!7881 = !DILocation(line: 603, column: 2, scope: !7798)
!7882 = !DILocation(line: 604, column: 22, scope: !7798)
!7883 = !DILocation(line: 604, column: 31, scope: !7798)
!7884 = !DILocation(line: 604, column: 34, scope: !7798)
!7885 = !DILocation(line: 604, column: 2, scope: !7798)
!7886 = !DILocation(line: 605, column: 22, scope: !7798)
!7887 = !DILocation(line: 605, column: 36, scope: !7798)
!7888 = !DILocation(line: 605, column: 39, scope: !7798)
!7889 = !DILocation(line: 605, column: 2, scope: !7798)
!7890 = !DILocation(line: 607, column: 20, scope: !7798)
!7891 = !DILocation(line: 607, column: 23, scope: !7798)
!7892 = !DILocation(line: 607, column: 2, scope: !7798)
!7893 = !DILocation(line: 608, column: 1, scope: !7798)
!7894 = distinct !DISubprogram(name: "vchan_cookie_complete", scope: !4409, file: !4409, line: 94, type: !4434, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7895 = !DILocalVariable(name: "vd", arg: 1, scope: !7894, file: !4409, line: 94, type: !4436)
!7896 = !DILocation(line: 94, column: 64, scope: !7894)
!7897 = !DILocalVariable(name: "vc", scope: !7894, file: !4409, line: 96, type: !4502)
!7898 = !DILocation(line: 96, column: 24, scope: !7894)
!7899 = !DILocation(line: 96, column: 42, scope: !7894)
!7900 = !DILocation(line: 96, column: 46, scope: !7894)
!7901 = !DILocation(line: 96, column: 49, scope: !7894)
!7902 = !DILocation(line: 96, column: 29, scope: !7894)
!7903 = !DILocalVariable(name: "cookie", scope: !7894, file: !4409, line: 97, type: !4051)
!7904 = !DILocation(line: 97, column: 15, scope: !7894)
!7905 = !DILocation(line: 99, column: 11, scope: !7894)
!7906 = !DILocation(line: 99, column: 15, scope: !7894)
!7907 = !DILocation(line: 99, column: 18, scope: !7894)
!7908 = !DILocation(line: 99, column: 9, scope: !7894)
!7909 = !DILocation(line: 100, column: 23, scope: !7894)
!7910 = !DILocation(line: 100, column: 27, scope: !7894)
!7911 = !DILocation(line: 100, column: 2, scope: !7894)
!7912 = !DILocation(line: 103, column: 17, scope: !7894)
!7913 = !DILocation(line: 103, column: 21, scope: !7894)
!7914 = !DILocation(line: 103, column: 28, scope: !7894)
!7915 = !DILocation(line: 103, column: 32, scope: !7894)
!7916 = !DILocation(line: 103, column: 2, scope: !7894)
!7917 = !DILocation(line: 105, column: 20, scope: !7894)
!7918 = !DILocation(line: 105, column: 24, scope: !7894)
!7919 = !DILocation(line: 105, column: 2, scope: !7894)
!7920 = !DILocation(line: 106, column: 1, scope: !7894)
!7921 = distinct !DISubprogram(name: "omap_dma_start_sg", scope: !3, file: !3, line: 539, type: !7922, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7922 = !DISubroutineType(types: !7923)
!7923 = !{null, !4404, !4459}
!7924 = !DILocalVariable(name: "c", arg: 1, scope: !7921, file: !3, line: 539, type: !4404)
!7925 = !DILocation(line: 539, column: 49, scope: !7921)
!7926 = !DILocalVariable(name: "d", arg: 2, scope: !7921, file: !3, line: 539, type: !4459)
!7927 = !DILocation(line: 539, column: 70, scope: !7921)
!7928 = !DILocalVariable(name: "sg", scope: !7921, file: !3, line: 541, type: !6042)
!7929 = !DILocation(line: 541, column: 18, scope: !7921)
!7930 = !DILocation(line: 541, column: 23, scope: !7921)
!7931 = !DILocation(line: 541, column: 26, scope: !7921)
!7932 = !DILocation(line: 541, column: 31, scope: !7921)
!7933 = !DILocation(line: 541, column: 34, scope: !7921)
!7934 = !DILocation(line: 541, column: 29, scope: !7921)
!7935 = !DILocalVariable(name: "cxsa", scope: !7921, file: !3, line: 542, type: !7)
!7936 = !DILocation(line: 542, column: 11, scope: !7921)
!7937 = !DILocalVariable(name: "cxei", scope: !7921, file: !3, line: 542, type: !7)
!7938 = !DILocation(line: 542, column: 17, scope: !7921)
!7939 = !DILocalVariable(name: "cxfi", scope: !7921, file: !3, line: 542, type: !7)
!7940 = !DILocation(line: 542, column: 23, scope: !7921)
!7941 = !DILocation(line: 544, column: 6, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 544, column: 6)
!7943 = !DILocation(line: 544, column: 9, scope: !7942)
!7944 = !DILocation(line: 544, column: 13, scope: !7942)
!7945 = !DILocation(line: 544, column: 31, scope: !7942)
!7946 = !DILocation(line: 544, column: 34, scope: !7942)
!7947 = !DILocation(line: 544, column: 37, scope: !7942)
!7948 = !DILocation(line: 544, column: 41, scope: !7942)
!7949 = !DILocation(line: 544, column: 6, scope: !7921)
!7950 = !DILocation(line: 545, column: 8, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7942, file: !3, line: 544, column: 60)
!7952 = !DILocation(line: 546, column: 8, scope: !7951)
!7953 = !DILocation(line: 547, column: 8, scope: !7951)
!7954 = !DILocation(line: 548, column: 2, scope: !7951)
!7955 = !DILocation(line: 549, column: 8, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7942, file: !3, line: 548, column: 9)
!7957 = !DILocation(line: 550, column: 8, scope: !7956)
!7958 = !DILocation(line: 551, column: 8, scope: !7956)
!7959 = !DILocation(line: 554, column: 22, scope: !7921)
!7960 = !DILocation(line: 554, column: 25, scope: !7921)
!7961 = !DILocation(line: 554, column: 31, scope: !7921)
!7962 = !DILocation(line: 554, column: 35, scope: !7921)
!7963 = !DILocation(line: 554, column: 2, scope: !7921)
!7964 = !DILocation(line: 555, column: 22, scope: !7921)
!7965 = !DILocation(line: 555, column: 25, scope: !7921)
!7966 = !DILocation(line: 555, column: 31, scope: !7921)
!7967 = !DILocation(line: 555, column: 35, scope: !7921)
!7968 = !DILocation(line: 555, column: 2, scope: !7921)
!7969 = !DILocation(line: 556, column: 22, scope: !7921)
!7970 = !DILocation(line: 556, column: 25, scope: !7921)
!7971 = !DILocation(line: 556, column: 31, scope: !7921)
!7972 = !DILocation(line: 556, column: 35, scope: !7921)
!7973 = !DILocation(line: 556, column: 2, scope: !7921)
!7974 = !DILocation(line: 557, column: 22, scope: !7921)
!7975 = !DILocation(line: 557, column: 30, scope: !7921)
!7976 = !DILocation(line: 557, column: 34, scope: !7921)
!7977 = !DILocation(line: 557, column: 2, scope: !7921)
!7978 = !DILocation(line: 558, column: 22, scope: !7921)
!7979 = !DILocation(line: 558, column: 30, scope: !7921)
!7980 = !DILocation(line: 558, column: 34, scope: !7921)
!7981 = !DILocation(line: 558, column: 2, scope: !7921)
!7982 = !DILocation(line: 560, column: 17, scope: !7921)
!7983 = !DILocation(line: 560, column: 20, scope: !7921)
!7984 = !DILocation(line: 560, column: 2, scope: !7921)
!7985 = !DILocation(line: 561, column: 2, scope: !7921)
!7986 = !DILocation(line: 561, column: 5, scope: !7921)
!7987 = !DILocation(line: 561, column: 10, scope: !7921)
!7988 = !DILocation(line: 562, column: 1, scope: !7921)
!7989 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !7771, file: !7771, line: 646, type: !7772, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!7990 = !DILocalVariable(name: "__ret", scope: !7991, file: !7771, line: 648, type: !350)
!7991 = distinct !DILexicalBlock(scope: !7989, file: !7771, line: 648, column: 9)
!7992 = !DILocation(line: 648, column: 9, scope: !7991)
!7993 = !DILocalVariable(name: "__edi", scope: !7991, file: !7771, line: 648, type: !350)
!7994 = !DILocalVariable(name: "__esi", scope: !7991, file: !7771, line: 648, type: !350)
!7995 = !DILocalVariable(name: "__edx", scope: !7991, file: !7771, line: 648, type: !350)
!7996 = !DILocalVariable(name: "__ecx", scope: !7991, file: !7771, line: 648, type: !350)
!7997 = !DILocalVariable(name: "__eax", scope: !7991, file: !7771, line: 648, type: !350)
!7998 = !DILocation(line: 648, column: 9, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !8000, file: !7771, line: 648, column: 9)
!8000 = distinct !DILexicalBlock(scope: !7991, file: !7771, line: 648, column: 9)
!8001 = !{i32 -2145759474, i32 -2145757159, i32 -2145756925, i32 -2145756874, i32 -2145756846, i32 -2145756821, i32 -2145757137, i32 -2145757124, i32 -2145756686, i32 -2145756567, i32 -2145757032, i32 -2145757005, i32 -2145756977, i32 -2145756947}
!8002 = !DILocalVariable(name: "__mask", scope: !8003, file: !7771, line: 648, type: !350)
!8003 = distinct !DILexicalBlock(scope: !7999, file: !7771, line: 648, column: 9)
!8004 = !DILocation(line: 648, column: 9, scope: !8003)
!8005 = !DILocation(line: 648, column: 9, scope: !8000)
!8006 = !DILocation(line: 648, column: 2, scope: !7989)
!8007 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7771, file: !7771, line: 656, type: !2094, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8008 = !DILocalVariable(name: "__edi", scope: !8009, file: !7771, line: 658, type: !350)
!8009 = distinct !DILexicalBlock(scope: !8007, file: !7771, line: 658, column: 2)
!8010 = !DILocation(line: 658, column: 2, scope: !8009)
!8011 = !DILocalVariable(name: "__esi", scope: !8009, file: !7771, line: 658, type: !350)
!8012 = !DILocalVariable(name: "__edx", scope: !8009, file: !7771, line: 658, type: !350)
!8013 = !DILocalVariable(name: "__ecx", scope: !8009, file: !7771, line: 658, type: !350)
!8014 = !DILocalVariable(name: "__eax", scope: !8009, file: !7771, line: 658, type: !350)
!8015 = !{i32 -2145752380, i32 -2145751648, i32 -2145751414, i32 -2145751363, i32 -2145751335, i32 -2145751310, i32 -2145751626, i32 -2145751613, i32 -2145751175, i32 -2145751056, i32 -2145751521, i32 -2145751494, i32 -2145751466, i32 -2145751436}
!8016 = !DILocation(line: 659, column: 1, scope: !8007)
!8017 = distinct !DISubprogram(name: "to_virt_chan", scope: !4409, file: !4409, line: 39, type: !8018, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8018 = !DISubroutineType(types: !8019)
!8019 = !{!4502, !398}
!8020 = !DILocalVariable(name: "chan", arg: 1, scope: !8017, file: !4409, line: 39, type: !398)
!8021 = !DILocation(line: 39, column: 67, scope: !8017)
!8022 = !DILocalVariable(name: "__mptr", scope: !8023, file: !4409, line: 41, type: !351)
!8023 = distinct !DILexicalBlock(scope: !8017, file: !4409, line: 41, column: 9)
!8024 = !DILocation(line: 41, column: 9, scope: !8023)
!8025 = !DILocation(line: 41, column: 9, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8023, file: !4409, line: 41, column: 9)
!8027 = !DILocation(line: 41, column: 2, scope: !8017)
!8028 = distinct !DISubprogram(name: "tasklet_schedule", scope: !327, file: !327, line: 681, type: !4429, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8029 = !DILocalVariable(name: "t", arg: 1, scope: !8028, file: !327, line: 681, type: !4416)
!8030 = !DILocation(line: 681, column: 60, scope: !8028)
!8031 = !DILocation(line: 683, column: 46, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8028, file: !327, line: 683, column: 6)
!8033 = !DILocation(line: 683, column: 49, scope: !8032)
!8034 = !DILocation(line: 683, column: 7, scope: !8032)
!8035 = !DILocation(line: 683, column: 6, scope: !8028)
!8036 = !DILocation(line: 684, column: 22, scope: !8032)
!8037 = !DILocation(line: 684, column: 3, scope: !8032)
!8038 = !DILocation(line: 685, column: 1, scope: !8028)
!8039 = distinct !DISubprogram(name: "test_and_set_bit", scope: !7492, file: !7492, line: 68, type: !8040, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8040 = !DISubroutineType(types: !8041)
!8041 = !{!396, !352, !7495}
!8042 = !DILocalVariable(name: "nr", arg: 1, scope: !8043, file: !6346, line: 136, type: !352)
!8043 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !6346, file: !6346, line: 136, type: !8040, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8044 = !DILocation(line: 136, column: 28, scope: !8043, inlinedAt: !8045)
!8045 = distinct !DILocation(line: 71, column: 9, scope: !8039)
!8046 = !DILocalVariable(name: "addr", arg: 2, scope: !8043, file: !6346, line: 136, type: !7495)
!8047 = !DILocation(line: 136, column: 56, scope: !8043, inlinedAt: !8045)
!8048 = !DILocalVariable(name: "c", scope: !8049, file: !6346, line: 138, type: !396)
!8049 = distinct !DILexicalBlock(scope: !8043, file: !6346, line: 138, column: 9)
!8050 = !DILocation(line: 138, column: 9, scope: !8049, inlinedAt: !8045)
!8051 = !DILocalVariable(name: "v", arg: 1, scope: !8052, file: !7505, line: 99, type: !7508)
!8052 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !7505, file: !7505, line: 99, type: !7506, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8053 = !DILocation(line: 99, column: 79, scope: !8052, inlinedAt: !8054)
!8054 = distinct !DILocation(line: 70, column: 2, scope: !8039)
!8055 = !DILocalVariable(name: "size", arg: 2, scope: !8052, file: !7505, line: 99, type: !510)
!8056 = !DILocation(line: 99, column: 89, scope: !8052, inlinedAt: !8054)
!8057 = !DILocalVariable(name: "nr", arg: 1, scope: !8039, file: !7492, line: 68, type: !352)
!8058 = !DILocation(line: 68, column: 42, scope: !8039)
!8059 = !DILocalVariable(name: "addr", arg: 2, scope: !8039, file: !7492, line: 68, type: !7495)
!8060 = !DILocation(line: 68, column: 70, scope: !8039)
!8061 = !DILocation(line: 70, column: 31, scope: !8039)
!8062 = !DILocation(line: 70, column: 38, scope: !8039)
!8063 = !DILocation(line: 70, column: 36, scope: !8039)
!8064 = !DILocation(line: 101, column: 20, scope: !8052, inlinedAt: !8054)
!8065 = !DILocation(line: 101, column: 23, scope: !8052, inlinedAt: !8054)
!8066 = !DILocation(line: 101, column: 2, scope: !8052, inlinedAt: !8054)
!8067 = !DILocation(line: 102, column: 2, scope: !8052, inlinedAt: !8054)
!8068 = !DILocation(line: 71, column: 31, scope: !8039)
!8069 = !DILocation(line: 71, column: 35, scope: !8039)
!8070 = !{i32 -2147158329, i32 -2147158233}
!8071 = !DILocation(line: 71, column: 2, scope: !8039)
!8072 = distinct !DISubprogram(name: "vchan_next_desc", scope: !4409, file: !4409, line: 161, type: !8073, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8073 = !DISubroutineType(types: !8074)
!8074 = !{!4436, !4502}
!8075 = !DILocalVariable(name: "vc", arg: 1, scope: !8072, file: !4409, line: 161, type: !4502)
!8076 = !DILocation(line: 161, column: 75, scope: !8072)
!8077 = !DILocalVariable(name: "head__", scope: !8078, file: !4409, line: 163, type: !385)
!8078 = distinct !DILexicalBlock(scope: !8072, file: !4409, line: 163, column: 9)
!8079 = !DILocation(line: 163, column: 9, scope: !8078)
!8080 = !DILocalVariable(name: "pos__", scope: !8078, file: !4409, line: 163, type: !385)
!8081 = !DILocation(line: 163, column: 9, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8078, file: !4409, line: 163, column: 9)
!8083 = !DILocation(line: 163, column: 9, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8082, file: !4409, line: 163, column: 9)
!8085 = !DILocalVariable(name: "__mptr", scope: !8086, file: !4409, line: 163, type: !351)
!8086 = distinct !DILexicalBlock(scope: !8078, file: !4409, line: 163, column: 9)
!8087 = !DILocation(line: 163, column: 9, scope: !8086)
!8088 = !DILocation(line: 163, column: 9, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8086, file: !4409, line: 163, column: 9)
!8090 = !DILocation(line: 163, column: 2, scope: !8072)
!8091 = distinct !DISubprogram(name: "list_del", scope: !6982, file: !6982, line: 144, type: !6983, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8092 = !DILocalVariable(name: "entry", arg: 1, scope: !8091, file: !6982, line: 144, type: !385)
!8093 = !DILocation(line: 144, column: 47, scope: !8091)
!8094 = !DILocation(line: 146, column: 19, scope: !8091)
!8095 = !DILocation(line: 146, column: 2, scope: !8091)
!8096 = !DILocation(line: 147, column: 2, scope: !8091)
!8097 = !DILocation(line: 147, column: 9, scope: !8091)
!8098 = !DILocation(line: 147, column: 14, scope: !8091)
!8099 = !DILocation(line: 148, column: 2, scope: !8091)
!8100 = !DILocation(line: 148, column: 9, scope: !8091)
!8101 = !DILocation(line: 148, column: 14, scope: !8091)
!8102 = !DILocation(line: 149, column: 1, scope: !8091)
!8103 = distinct !DISubprogram(name: "to_omap_dma_desc", scope: !3, file: !3, line: 243, type: !8104, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!4459, !4131}
!8106 = !DILocalVariable(name: "t", arg: 1, scope: !8103, file: !3, line: 243, type: !4131)
!8107 = !DILocation(line: 243, column: 82, scope: !8103)
!8108 = !DILocalVariable(name: "__mptr", scope: !8109, file: !3, line: 245, type: !351)
!8109 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 245, column: 9)
!8110 = !DILocation(line: 245, column: 9, scope: !8109)
!8111 = !DILocation(line: 245, column: 9, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 245, column: 9)
!8113 = !DILocation(line: 245, column: 2, scope: !8103)
!8114 = distinct !DISubprogram(name: "omap_dma_chan_write", scope: !3, file: !3, line: 369, type: !8115, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8115 = !DISubroutineType(types: !8116)
!8116 = !{null, !4404, !7, !7}
!8117 = !DILocalVariable(name: "c", arg: 1, scope: !8114, file: !3, line: 369, type: !4404)
!8118 = !DILocation(line: 369, column: 51, scope: !8114)
!8119 = !DILocalVariable(name: "reg", arg: 2, scope: !8114, file: !3, line: 369, type: !7)
!8120 = !DILocation(line: 369, column: 63, scope: !8114)
!8121 = !DILocalVariable(name: "val", arg: 3, scope: !8114, file: !3, line: 369, type: !7)
!8122 = !DILocation(line: 369, column: 77, scope: !8114)
!8123 = !DILocalVariable(name: "r", scope: !8114, file: !3, line: 371, type: !4325)
!8124 = !DILocation(line: 371, column: 29, scope: !8114)
!8125 = !DILocation(line: 371, column: 33, scope: !8114)
!8126 = !DILocation(line: 371, column: 36, scope: !8114)
!8127 = !DILocation(line: 371, column: 46, scope: !8114)
!8128 = !DILocation(line: 371, column: 44, scope: !8114)
!8129 = !DILocation(line: 373, column: 17, scope: !8114)
!8130 = !DILocation(line: 373, column: 22, scope: !8114)
!8131 = !DILocation(line: 373, column: 25, scope: !8114)
!8132 = !DILocation(line: 373, column: 31, scope: !8114)
!8133 = !DILocation(line: 373, column: 34, scope: !8114)
!8134 = !DILocation(line: 373, column: 49, scope: !8114)
!8135 = !DILocation(line: 373, column: 52, scope: !8114)
!8136 = !DILocation(line: 373, column: 47, scope: !8114)
!8137 = !DILocation(line: 373, column: 2, scope: !8114)
!8138 = !DILocation(line: 374, column: 1, scope: !8114)
!8139 = distinct !DISubprogram(name: "__list_del_entry", scope: !6982, file: !6982, line: 130, type: !6983, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8140 = !DILocalVariable(name: "entry", arg: 1, scope: !8139, file: !6982, line: 130, type: !385)
!8141 = !DILocation(line: 130, column: 55, scope: !8139)
!8142 = !DILocation(line: 132, column: 30, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8139, file: !6982, line: 132, column: 6)
!8144 = !DILocation(line: 132, column: 7, scope: !8143)
!8145 = !DILocation(line: 132, column: 6, scope: !8139)
!8146 = !DILocation(line: 133, column: 3, scope: !8143)
!8147 = !DILocation(line: 135, column: 13, scope: !8139)
!8148 = !DILocation(line: 135, column: 20, scope: !8139)
!8149 = !DILocation(line: 135, column: 26, scope: !8139)
!8150 = !DILocation(line: 135, column: 33, scope: !8139)
!8151 = !DILocation(line: 135, column: 2, scope: !8139)
!8152 = !DILocation(line: 136, column: 1, scope: !8139)
!8153 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !6982, file: !6982, line: 51, type: !8154, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8154 = !DISubroutineType(types: !8155)
!8155 = !{!396, !385}
!8156 = !DILocalVariable(name: "entry", arg: 1, scope: !8153, file: !6982, line: 51, type: !385)
!8157 = !DILocation(line: 51, column: 61, scope: !8153)
!8158 = !DILocation(line: 53, column: 2, scope: !8153)
!8159 = distinct !DISubprogram(name: "__list_del", scope: !6982, file: !6982, line: 110, type: !8160, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8160 = !DISubroutineType(types: !8161)
!8161 = !{null, !385, !385}
!8162 = !DILocalVariable(name: "prev", arg: 1, scope: !8159, file: !6982, line: 110, type: !385)
!8163 = !DILocation(line: 110, column: 50, scope: !8159)
!8164 = !DILocalVariable(name: "next", arg: 2, scope: !8159, file: !6982, line: 110, type: !385)
!8165 = !DILocation(line: 110, column: 75, scope: !8159)
!8166 = !DILocation(line: 112, column: 15, scope: !8159)
!8167 = !DILocation(line: 112, column: 2, scope: !8159)
!8168 = !DILocation(line: 112, column: 8, scope: !8159)
!8169 = !DILocation(line: 112, column: 13, scope: !8159)
!8170 = !DILocation(line: 113, column: 2, scope: !8159)
!8171 = !DILocation(line: 113, column: 2, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8159, file: !6982, line: 113, column: 2)
!8173 = !DILocation(line: 113, column: 2, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8172, file: !6982, line: 113, column: 2)
!8175 = !DILocation(line: 113, column: 2, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8172, file: !6982, line: 113, column: 2)
!8177 = !DILocation(line: 114, column: 1, scope: !8159)
!8178 = distinct !DISubprogram(name: "omap_dma_write", scope: !3, file: !3, line: 310, type: !8179, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8179 = !DISubroutineType(types: !8180)
!8180 = !{null, !745, !7, !351}
!8181 = !DILocalVariable(name: "val", arg: 1, scope: !8178, file: !3, line: 310, type: !745)
!8182 = !DILocation(line: 310, column: 37, scope: !8178)
!8183 = !DILocalVariable(name: "type", arg: 2, scope: !8178, file: !3, line: 310, type: !7)
!8184 = !DILocation(line: 310, column: 51, scope: !8178)
!8185 = !DILocalVariable(name: "addr", arg: 3, scope: !8178, file: !3, line: 310, type: !351)
!8186 = !DILocation(line: 310, column: 71, scope: !8178)
!8187 = !DILocation(line: 312, column: 10, scope: !8178)
!8188 = !DILocation(line: 312, column: 2, scope: !8178)
!8189 = !DILocation(line: 314, column: 3, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 312, column: 16)
!8191 = !DILocation(line: 315, column: 3, scope: !8190)
!8192 = !DILocation(line: 317, column: 3, scope: !8190)
!8193 = !DILocation(line: 318, column: 3, scope: !8190)
!8194 = !DILocation(line: 319, column: 3, scope: !8190)
!8195 = !DILocation(line: 321, column: 3, scope: !8190)
!8196 = !DILocation(line: 322, column: 3, scope: !8190)
!8197 = !DILocalVariable(name: "__ret_warn_on", scope: !8198, file: !3, line: 324, type: !378)
!8198 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 324, column: 3)
!8199 = !DILocation(line: 324, column: 3, scope: !8198)
!8200 = !DILocation(line: 324, column: 3, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 324, column: 3)
!8202 = !DILocation(line: 324, column: 3, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 324, column: 3)
!8204 = !DILocation(line: 324, column: 3, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 324, column: 3)
!8206 = !DILocation(line: 324, column: 3, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 324, column: 3)
!8208 = !{i32 -2141744797, i32 -2141744768, i32 -2141744722, i32 -2141744664, i32 -2141744610, i32 -2141744556, i32 -2141744501, i32 -2141744470}
!8209 = !DILocation(line: 324, column: 3, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 324, column: 3)
!8211 = !{i32 -2141744063, i32 -2141744056, i32 -2141744004, i32 -2141743973, i32 -2141743943}
!8212 = !DILocation(line: 324, column: 3, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 324, column: 3)
!8214 = !DILocation(line: 325, column: 2, scope: !8190)
!8215 = !DILocation(line: 326, column: 1, scope: !8178)
!8216 = distinct !DISubprogram(name: "__writew", scope: !8217, file: !8217, line: 70, type: !8218, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8217 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!8218 = !DISubroutineType(types: !8219)
!8219 = !{null, !505, !8220}
!8220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7510, size: 64)
!8221 = !DILocalVariable(name: "val", arg: 1, scope: !8216, file: !8217, line: 70, type: !505)
!8222 = !DILocation(line: 70, column: 1, scope: !8216)
!8223 = !DILocalVariable(name: "addr", arg: 2, scope: !8216, file: !8217, line: 70, type: !8220)
!8224 = !{i32 -2142296776}
!8225 = distinct !DISubprogram(name: "__writel", scope: !8217, file: !8217, line: 71, type: !8226, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8226 = !DISubroutineType(types: !8227)
!8227 = !{null, !7, !8220}
!8228 = !DILocalVariable(name: "val", arg: 1, scope: !8225, file: !8217, line: 71, type: !7)
!8229 = !DILocation(line: 71, column: 1, scope: !8225)
!8230 = !DILocalVariable(name: "addr", arg: 2, scope: !8225, file: !8217, line: 71, type: !8220)
!8231 = !{i32 -2142296398}
!8232 = distinct !DISubprogram(name: "dma_cookie_complete", scope: !8233, file: !8233, line: 52, type: !8234, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8233 = !DIFile(filename: "drivers/dma/ti/../dmaengine.h", directory: "/home/lizy2001/genbc/linux")
!8234 = !DISubroutineType(types: !8235)
!8235 = !{null, !4131}
!8236 = !DILocalVariable(name: "tx", arg: 1, scope: !8232, file: !8233, line: 52, type: !4131)
!8237 = !DILocation(line: 52, column: 72, scope: !8232)
!8238 = !DILocation(line: 54, column: 2, scope: !8232)
!8239 = !DILocation(line: 54, column: 2, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8241, file: !8233, line: 54, column: 2)
!8241 = distinct !DILexicalBlock(scope: !8232, file: !8233, line: 54, column: 2)
!8242 = !DILocation(line: 54, column: 2, scope: !8241)
!8243 = !DILocation(line: 54, column: 2, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8240, file: !8233, line: 54, column: 2)
!8245 = !DILocation(line: 54, column: 2, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8244, file: !8233, line: 54, column: 2)
!8247 = !DILocation(line: 54, column: 2, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8244, file: !8233, line: 54, column: 2)
!8249 = !{i32 -2141770526, i32 -2141770497, i32 -2141770451, i32 -2141770393, i32 -2141770339, i32 -2141770285, i32 -2141770230, i32 -2141770199}
!8250 = !DILocation(line: 54, column: 2, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8252, file: !8233, line: 54, column: 2)
!8252 = distinct !DILexicalBlock(scope: !8244, file: !8233, line: 54, column: 2)
!8253 = !{i32 -2141769748, i32 -2141769741, i32 -2141769687, i32 -2141769656, i32 -2141769626}
!8254 = !DILocation(line: 54, column: 2, scope: !8252)
!8255 = !DILocation(line: 55, column: 31, scope: !8232)
!8256 = !DILocation(line: 55, column: 35, scope: !8232)
!8257 = !DILocation(line: 55, column: 2, scope: !8232)
!8258 = !DILocation(line: 55, column: 6, scope: !8232)
!8259 = !DILocation(line: 55, column: 12, scope: !8232)
!8260 = !DILocation(line: 55, column: 29, scope: !8232)
!8261 = !DILocation(line: 56, column: 2, scope: !8232)
!8262 = !DILocation(line: 56, column: 6, scope: !8232)
!8263 = !DILocation(line: 56, column: 13, scope: !8232)
!8264 = !DILocation(line: 57, column: 1, scope: !8232)
!8265 = distinct !DISubprogram(name: "list_add_tail", scope: !6982, file: !6982, line: 98, type: !8160, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8266 = !DILocalVariable(name: "new", arg: 1, scope: !8265, file: !6982, line: 98, type: !385)
!8267 = !DILocation(line: 98, column: 52, scope: !8265)
!8268 = !DILocalVariable(name: "head", arg: 2, scope: !8265, file: !6982, line: 98, type: !385)
!8269 = !DILocation(line: 98, column: 75, scope: !8265)
!8270 = !DILocation(line: 100, column: 13, scope: !8265)
!8271 = !DILocation(line: 100, column: 18, scope: !8265)
!8272 = !DILocation(line: 100, column: 24, scope: !8265)
!8273 = !DILocation(line: 100, column: 30, scope: !8265)
!8274 = !DILocation(line: 100, column: 2, scope: !8265)
!8275 = !DILocation(line: 101, column: 1, scope: !8265)
!8276 = distinct !DISubprogram(name: "__list_add", scope: !6982, file: !6982, line: 63, type: !8277, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8277 = !DISubroutineType(types: !8278)
!8278 = !{null, !385, !385, !385}
!8279 = !DILocalVariable(name: "new", arg: 1, scope: !8276, file: !6982, line: 63, type: !385)
!8280 = !DILocation(line: 63, column: 49, scope: !8276)
!8281 = !DILocalVariable(name: "prev", arg: 2, scope: !8276, file: !6982, line: 64, type: !385)
!8282 = !DILocation(line: 64, column: 28, scope: !8276)
!8283 = !DILocalVariable(name: "next", arg: 3, scope: !8276, file: !6982, line: 65, type: !385)
!8284 = !DILocation(line: 65, column: 28, scope: !8276)
!8285 = !DILocation(line: 67, column: 24, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8276, file: !6982, line: 67, column: 6)
!8287 = !DILocation(line: 67, column: 29, scope: !8286)
!8288 = !DILocation(line: 67, column: 35, scope: !8286)
!8289 = !DILocation(line: 67, column: 7, scope: !8286)
!8290 = !DILocation(line: 67, column: 6, scope: !8276)
!8291 = !DILocation(line: 68, column: 3, scope: !8286)
!8292 = !DILocation(line: 70, column: 15, scope: !8276)
!8293 = !DILocation(line: 70, column: 2, scope: !8276)
!8294 = !DILocation(line: 70, column: 8, scope: !8276)
!8295 = !DILocation(line: 70, column: 13, scope: !8276)
!8296 = !DILocation(line: 71, column: 14, scope: !8276)
!8297 = !DILocation(line: 71, column: 2, scope: !8276)
!8298 = !DILocation(line: 71, column: 7, scope: !8276)
!8299 = !DILocation(line: 71, column: 12, scope: !8276)
!8300 = !DILocation(line: 72, column: 14, scope: !8276)
!8301 = !DILocation(line: 72, column: 2, scope: !8276)
!8302 = !DILocation(line: 72, column: 7, scope: !8276)
!8303 = !DILocation(line: 72, column: 12, scope: !8276)
!8304 = !DILocation(line: 73, column: 2, scope: !8276)
!8305 = !DILocation(line: 73, column: 2, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8276, file: !6982, line: 73, column: 2)
!8307 = !DILocation(line: 73, column: 2, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8306, file: !6982, line: 73, column: 2)
!8309 = !DILocation(line: 73, column: 2, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8306, file: !6982, line: 73, column: 2)
!8311 = !DILocation(line: 74, column: 1, scope: !8276)
!8312 = distinct !DISubprogram(name: "__list_add_valid", scope: !6982, file: !6982, line: 45, type: !8313, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8313 = !DISubroutineType(types: !8314)
!8314 = !{!396, !385, !385, !385}
!8315 = !DILocalVariable(name: "new", arg: 1, scope: !8312, file: !6982, line: 45, type: !385)
!8316 = !DILocation(line: 45, column: 55, scope: !8312)
!8317 = !DILocalVariable(name: "prev", arg: 2, scope: !8312, file: !6982, line: 46, type: !385)
!8318 = !DILocation(line: 46, column: 23, scope: !8312)
!8319 = !DILocalVariable(name: "next", arg: 3, scope: !8312, file: !6982, line: 47, type: !385)
!8320 = !DILocation(line: 47, column: 23, scope: !8312)
!8321 = !DILocation(line: 49, column: 2, scope: !8312)
!8322 = distinct !DISubprogram(name: "omap_dma_start", scope: !3, file: !3, line: 422, type: !7922, scopeLine: 423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8323 = !DILocalVariable(name: "c", arg: 1, scope: !8322, file: !3, line: 422, type: !4404)
!8324 = !DILocation(line: 422, column: 46, scope: !8322)
!8325 = !DILocalVariable(name: "d", arg: 2, scope: !8322, file: !3, line: 422, type: !4459)
!8326 = !DILocation(line: 422, column: 67, scope: !8322)
!8327 = !DILocalVariable(name: "od", scope: !8322, file: !3, line: 424, type: !358)
!8328 = !DILocation(line: 424, column: 22, scope: !8322)
!8329 = !DILocation(line: 424, column: 43, scope: !8322)
!8330 = !DILocation(line: 424, column: 46, scope: !8322)
!8331 = !DILocation(line: 424, column: 49, scope: !8322)
!8332 = !DILocation(line: 424, column: 54, scope: !8322)
!8333 = !DILocation(line: 424, column: 27, scope: !8322)
!8334 = !DILocalVariable(name: "cicr", scope: !8322, file: !3, line: 425, type: !4474)
!8335 = !DILocation(line: 425, column: 11, scope: !8322)
!8336 = !DILocation(line: 425, column: 18, scope: !8322)
!8337 = !DILocation(line: 425, column: 21, scope: !8322)
!8338 = !DILocation(line: 427, column: 6, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8322, file: !3, line: 427, column: 6)
!8340 = !DILocation(line: 427, column: 6, scope: !8322)
!8341 = !DILocation(line: 428, column: 23, scope: !8339)
!8342 = !DILocation(line: 428, column: 3, scope: !8339)
!8343 = !DILocation(line: 430, column: 23, scope: !8339)
!8344 = !DILocation(line: 430, column: 3, scope: !8339)
!8345 = !DILocation(line: 432, column: 21, scope: !8322)
!8346 = !DILocation(line: 432, column: 2, scope: !8322)
!8347 = !DILocation(line: 434, column: 6, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8322, file: !3, line: 434, column: 6)
!8349 = !DILocation(line: 434, column: 9, scope: !8348)
!8350 = !DILocation(line: 434, column: 6, scope: !8322)
!8351 = !DILocalVariable(name: "cdp", scope: !8352, file: !3, line: 435, type: !745)
!8352 = distinct !DILexicalBlock(scope: !8348, file: !3, line: 434, column: 19)
!8353 = !DILocation(line: 435, column: 12, scope: !8352)
!8354 = !DILocation(line: 437, column: 7, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8352, file: !3, line: 437, column: 7)
!8356 = !DILocation(line: 437, column: 10, scope: !8355)
!8357 = !DILocation(line: 437, column: 14, scope: !8355)
!8358 = !DILocation(line: 437, column: 7, scope: !8352)
!8359 = !DILocation(line: 438, column: 8, scope: !8355)
!8360 = !DILocation(line: 438, column: 4, scope: !8355)
!8361 = !DILocation(line: 440, column: 8, scope: !8355)
!8362 = !DILocation(line: 441, column: 23, scope: !8352)
!8363 = !DILocation(line: 441, column: 31, scope: !8352)
!8364 = !DILocation(line: 441, column: 3, scope: !8352)
!8365 = !DILocation(line: 443, column: 23, scope: !8352)
!8366 = !DILocation(line: 443, column: 32, scope: !8352)
!8367 = !DILocation(line: 443, column: 35, scope: !8352)
!8368 = !DILocation(line: 443, column: 41, scope: !8352)
!8369 = !DILocation(line: 443, column: 3, scope: !8352)
!8370 = !DILocation(line: 444, column: 23, scope: !8352)
!8371 = !DILocation(line: 444, column: 3, scope: !8352)
!8372 = !DILocation(line: 445, column: 23, scope: !8352)
!8373 = !DILocation(line: 445, column: 3, scope: !8352)
!8374 = !DILocation(line: 446, column: 23, scope: !8352)
!8375 = !DILocation(line: 446, column: 3, scope: !8352)
!8376 = !DILocation(line: 448, column: 8, scope: !8352)
!8377 = !DILocation(line: 449, column: 2, scope: !8352)
!8378 = !DILocation(line: 449, column: 13, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8348, file: !3, line: 449, column: 13)
!8380 = !DILocation(line: 449, column: 17, scope: !8379)
!8381 = !DILocation(line: 449, column: 13, scope: !8348)
!8382 = !DILocation(line: 450, column: 23, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 449, column: 34)
!8384 = !DILocation(line: 450, column: 3, scope: !8383)
!8385 = !DILocation(line: 451, column: 2, scope: !8383)
!8386 = !DILocation(line: 454, column: 22, scope: !8322)
!8387 = !DILocation(line: 454, column: 31, scope: !8322)
!8388 = !DILocation(line: 454, column: 2, scope: !8322)
!8389 = !DILocation(line: 457, column: 22, scope: !8322)
!8390 = !DILocation(line: 457, column: 30, scope: !8322)
!8391 = !DILocation(line: 457, column: 33, scope: !8322)
!8392 = !DILocation(line: 457, column: 37, scope: !8322)
!8393 = !DILocation(line: 457, column: 2, scope: !8322)
!8394 = !DILocation(line: 459, column: 2, scope: !8322)
!8395 = !DILocation(line: 459, column: 5, scope: !8322)
!8396 = !DILocation(line: 459, column: 13, scope: !8322)
!8397 = !DILocation(line: 460, column: 1, scope: !8322)
!8398 = distinct !DISubprogram(name: "omap_dma_clear_csr", scope: !3, file: !3, line: 383, type: !7799, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8399 = !DILocalVariable(name: "c", arg: 1, scope: !8398, file: !3, line: 383, type: !4404)
!8400 = !DILocation(line: 383, column: 50, scope: !8398)
!8401 = !DILocation(line: 386, column: 22, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 385, column: 6)
!8403 = !DILocation(line: 386, column: 3, scope: !8402)
!8404 = !DILocation(line: 389, column: 1, scope: !8398)
!8405 = distinct !DISubprogram(name: "omap_dma_chan_read", scope: !3, file: !3, line: 376, type: !8406, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8406 = !DISubroutineType(types: !8407)
!8407 = !{!7, !4404, !7}
!8408 = !DILocalVariable(name: "c", arg: 1, scope: !8405, file: !3, line: 376, type: !4404)
!8409 = !DILocation(line: 376, column: 54, scope: !8405)
!8410 = !DILocalVariable(name: "reg", arg: 2, scope: !8405, file: !3, line: 376, type: !7)
!8411 = !DILocation(line: 376, column: 66, scope: !8405)
!8412 = !DILocalVariable(name: "r", scope: !8405, file: !3, line: 378, type: !4325)
!8413 = !DILocation(line: 378, column: 29, scope: !8405)
!8414 = !DILocation(line: 378, column: 33, scope: !8405)
!8415 = !DILocation(line: 378, column: 36, scope: !8405)
!8416 = !DILocation(line: 378, column: 46, scope: !8405)
!8417 = !DILocation(line: 378, column: 44, scope: !8405)
!8418 = !DILocation(line: 380, column: 23, scope: !8405)
!8419 = !DILocation(line: 380, column: 26, scope: !8405)
!8420 = !DILocation(line: 380, column: 32, scope: !8405)
!8421 = !DILocation(line: 380, column: 35, scope: !8405)
!8422 = !DILocation(line: 380, column: 50, scope: !8405)
!8423 = !DILocation(line: 380, column: 53, scope: !8405)
!8424 = !DILocation(line: 380, column: 48, scope: !8405)
!8425 = !DILocation(line: 380, column: 9, scope: !8405)
!8426 = !DILocation(line: 380, column: 2, scope: !8405)
!8427 = distinct !DISubprogram(name: "omap_dma_read", scope: !3, file: !3, line: 328, type: !8428, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8428 = !DISubroutineType(types: !8429)
!8429 = !{!7, !7, !351}
!8430 = !DILocalVariable(name: "type", arg: 1, scope: !8427, file: !3, line: 328, type: !7)
!8431 = !DILocation(line: 328, column: 40, scope: !8427)
!8432 = !DILocalVariable(name: "addr", arg: 2, scope: !8427, file: !3, line: 328, type: !351)
!8433 = !DILocation(line: 328, column: 60, scope: !8427)
!8434 = !DILocalVariable(name: "val", scope: !8427, file: !3, line: 330, type: !7)
!8435 = !DILocation(line: 330, column: 11, scope: !8427)
!8436 = !DILocation(line: 332, column: 10, scope: !8427)
!8437 = !DILocation(line: 332, column: 2, scope: !8427)
!8438 = !DILocation(line: 334, column: 9, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 332, column: 16)
!8440 = !DILocation(line: 334, column: 7, scope: !8439)
!8441 = !DILocation(line: 335, column: 3, scope: !8439)
!8442 = !DILocation(line: 337, column: 9, scope: !8439)
!8443 = !DILocation(line: 337, column: 7, scope: !8439)
!8444 = !DILocation(line: 338, column: 10, scope: !8439)
!8445 = !DILocation(line: 338, column: 34, scope: !8439)
!8446 = !DILocation(line: 338, column: 7, scope: !8439)
!8447 = !DILocation(line: 339, column: 3, scope: !8439)
!8448 = !DILocation(line: 341, column: 9, scope: !8439)
!8449 = !DILocation(line: 341, column: 7, scope: !8439)
!8450 = !DILocation(line: 342, column: 3, scope: !8439)
!8451 = !DILocalVariable(name: "__ret_warn_on", scope: !8452, file: !3, line: 344, type: !378)
!8452 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 344, column: 3)
!8453 = !DILocation(line: 344, column: 3, scope: !8452)
!8454 = !DILocation(line: 344, column: 3, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 344, column: 3)
!8456 = !DILocation(line: 344, column: 3, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 344, column: 3)
!8458 = !DILocation(line: 344, column: 3, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 344, column: 3)
!8460 = !DILocation(line: 344, column: 3, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 344, column: 3)
!8462 = !{i32 -2141743302, i32 -2141743273, i32 -2141743227, i32 -2141743169, i32 -2141743115, i32 -2141743061, i32 -2141743006, i32 -2141742975}
!8463 = !DILocation(line: 344, column: 3, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 344, column: 3)
!8465 = !{i32 -2141742568, i32 -2141742561, i32 -2141742509, i32 -2141742478, i32 -2141742448}
!8466 = !DILocation(line: 344, column: 3, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 344, column: 3)
!8468 = !DILocation(line: 345, column: 7, scope: !8439)
!8469 = !DILocation(line: 346, column: 2, scope: !8439)
!8470 = !DILocation(line: 348, column: 9, scope: !8427)
!8471 = !DILocation(line: 348, column: 2, scope: !8427)
!8472 = distinct !DISubprogram(name: "__readw", scope: !8217, file: !8217, line: 62, type: !8473, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8473 = !DISubroutineType(types: !8474)
!8474 = !{!505, !7508}
!8475 = !DILocalVariable(name: "addr", arg: 1, scope: !8472, file: !8217, line: 62, type: !7508)
!8476 = !DILocation(line: 62, column: 1, scope: !8472)
!8477 = !DILocalVariable(name: "ret", scope: !8472, file: !8217, line: 62, type: !505)
!8478 = !{i32 -2142299110}
!8479 = distinct !DISubprogram(name: "__readl", scope: !8217, file: !8217, line: 63, type: !8480, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8480 = !DISubroutineType(types: !8481)
!8481 = !{!7, !7508}
!8482 = !DILocalVariable(name: "addr", arg: 1, scope: !8479, file: !8217, line: 63, type: !7508)
!8483 = !DILocation(line: 63, column: 1, scope: !8479)
!8484 = !DILocalVariable(name: "ret", scope: !8479, file: !8217, line: 63, type: !7)
!8485 = !{i32 -2142298701}
!8486 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !7771, file: !7771, line: 651, type: !4425, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8487 = !DILocalVariable(name: "f", arg: 1, scope: !8486, file: !7771, line: 651, type: !350)
!8488 = !DILocation(line: 651, column: 65, scope: !8486)
!8489 = !DILocalVariable(name: "__edi", scope: !8490, file: !7771, line: 653, type: !350)
!8490 = distinct !DILexicalBlock(scope: !8486, file: !7771, line: 653, column: 2)
!8491 = !DILocation(line: 653, column: 2, scope: !8490)
!8492 = !DILocalVariable(name: "__esi", scope: !8490, file: !7771, line: 653, type: !350)
!8493 = !DILocalVariable(name: "__edx", scope: !8490, file: !7771, line: 653, type: !350)
!8494 = !DILocalVariable(name: "__ecx", scope: !8490, file: !7771, line: 653, type: !350)
!8495 = !DILocalVariable(name: "__eax", scope: !8490, file: !7771, line: 653, type: !350)
!8496 = !{i32 -2145755007, i32 -2145754257, i32 -2145754023, i32 -2145753972, i32 -2145753944, i32 -2145753919, i32 -2145754235, i32 -2145754222, i32 -2145753784, i32 -2145753665, i32 -2145754130, i32 -2145754103, i32 -2145754075, i32 -2145754045}
!8497 = !DILocation(line: 654, column: 1, scope: !8486)
!8498 = distinct !DISubprogram(name: "omap_dma_clear_lch", scope: !3, file: !3, line: 401, type: !8499, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8499 = !DISubroutineType(types: !8500)
!8500 = !{null, !358, !378}
!8501 = !DILocalVariable(name: "od", arg: 1, scope: !8498, file: !3, line: 401, type: !358)
!8502 = !DILocation(line: 401, column: 52, scope: !8498)
!8503 = !DILocalVariable(name: "lch", arg: 2, scope: !8498, file: !3, line: 401, type: !378)
!8504 = !DILocation(line: 401, column: 60, scope: !8498)
!8505 = !DILocalVariable(name: "c", scope: !8498, file: !3, line: 403, type: !4404)
!8506 = !DILocation(line: 403, column: 20, scope: !8498)
!8507 = !DILocalVariable(name: "i", scope: !8498, file: !3, line: 404, type: !378)
!8508 = !DILocation(line: 404, column: 6, scope: !8498)
!8509 = !DILocation(line: 406, column: 6, scope: !8498)
!8510 = !DILocation(line: 406, column: 10, scope: !8498)
!8511 = !DILocation(line: 406, column: 18, scope: !8498)
!8512 = !DILocation(line: 406, column: 4, scope: !8498)
!8513 = !DILocation(line: 407, column: 7, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 407, column: 6)
!8515 = !DILocation(line: 407, column: 6, scope: !8498)
!8516 = !DILocation(line: 408, column: 3, scope: !8514)
!8517 = !DILocation(line: 410, column: 9, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 410, column: 2)
!8519 = !DILocation(line: 410, column: 7, scope: !8518)
!8520 = !DILocation(line: 410, column: 17, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 410, column: 2)
!8522 = !DILocation(line: 410, column: 22, scope: !8521)
!8523 = !DILocation(line: 410, column: 26, scope: !8521)
!8524 = !DILocation(line: 410, column: 31, scope: !8521)
!8525 = !DILocation(line: 410, column: 19, scope: !8521)
!8526 = !DILocation(line: 410, column: 2, scope: !8518)
!8527 = !DILocation(line: 411, column: 23, scope: !8521)
!8528 = !DILocation(line: 411, column: 26, scope: !8521)
!8529 = !DILocation(line: 411, column: 3, scope: !8521)
!8530 = !DILocation(line: 410, column: 41, scope: !8521)
!8531 = !DILocation(line: 410, column: 2, scope: !8521)
!8532 = distinct !{!8532, !8526, !8533}
!8533 = !DILocation(line: 411, column: 30, scope: !8518)
!8534 = !DILocation(line: 412, column: 1, scope: !8498)
!8535 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !7771, file: !7771, line: 661, type: !2094, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8536 = !DILocalVariable(name: "__edi", scope: !8537, file: !7771, line: 663, type: !350)
!8537 = distinct !DILexicalBlock(scope: !8535, file: !7771, line: 663, column: 2)
!8538 = !DILocation(line: 663, column: 2, scope: !8537)
!8539 = !DILocalVariable(name: "__esi", scope: !8537, file: !7771, line: 663, type: !350)
!8540 = !DILocalVariable(name: "__edx", scope: !8537, file: !7771, line: 663, type: !350)
!8541 = !DILocalVariable(name: "__ecx", scope: !8537, file: !7771, line: 663, type: !350)
!8542 = !DILocalVariable(name: "__eax", scope: !8537, file: !7771, line: 663, type: !350)
!8543 = !{i32 -2145749796, i32 -2145749066, i32 -2145748832, i32 -2145748781, i32 -2145748753, i32 -2145748728, i32 -2145749044, i32 -2145749031, i32 -2145748593, i32 -2145748474, i32 -2145748939, i32 -2145748912, i32 -2145748884, i32 -2145748854}
!8544 = !DILocation(line: 664, column: 1, scope: !8535)
!8545 = distinct !DISubprogram(name: "vchan_free_chan_resources", scope: !4409, file: !4409, line: 187, type: !8546, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{null, !4502}
!8548 = !DILocation(line: 407, column: 64, scope: !5491, inlinedAt: !8549)
!8549 = distinct !DILocation(line: 197, column: 2, scope: !8545)
!8550 = !DILocation(line: 407, column: 84, scope: !5491, inlinedAt: !8549)
!8551 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !8552)
!8552 = distinct !DILocation(line: 193, column: 2, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !4409, line: 193, column: 2)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !4409, line: 193, column: 2)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !4409, line: 193, column: 2)
!8556 = distinct !DILexicalBlock(scope: !8557, file: !4409, line: 193, column: 2)
!8557 = distinct !DILexicalBlock(scope: !8545, file: !4409, line: 193, column: 2)
!8558 = !DILocalVariable(name: "vc", arg: 1, scope: !8545, file: !4409, line: 187, type: !4502)
!8559 = !DILocation(line: 187, column: 68, scope: !8545)
!8560 = !DILocalVariable(name: "vd", scope: !8545, file: !4409, line: 189, type: !4436)
!8561 = !DILocation(line: 189, column: 24, scope: !8545)
!8562 = !DILocalVariable(name: "flags", scope: !8545, file: !4409, line: 190, type: !350)
!8563 = !DILocation(line: 190, column: 16, scope: !8545)
!8564 = !DILocalVariable(name: "head", scope: !8545, file: !4409, line: 191, type: !382)
!8565 = !DILocation(line: 191, column: 2, scope: !8545)
!8566 = !DILocation(line: 193, column: 2, scope: !8545)
!8567 = !DILocation(line: 193, column: 2, scope: !8557)
!8568 = !DILocalVariable(name: "__dummy", scope: !8569, file: !4409, line: 193, type: !350)
!8569 = distinct !DILexicalBlock(scope: !8556, file: !4409, line: 193, column: 2)
!8570 = !DILocation(line: 193, column: 2, scope: !8569)
!8571 = !DILocalVariable(name: "__dummy2", scope: !8569, file: !4409, line: 193, type: !350)
!8572 = !DILocation(line: 193, column: 2, scope: !8556)
!8573 = !DILocation(line: 193, column: 2, scope: !8555)
!8574 = !DILocation(line: 193, column: 2, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8555, file: !4409, line: 193, column: 2)
!8576 = !DILocalVariable(name: "__dummy", scope: !8577, file: !4409, line: 193, type: !350)
!8577 = distinct !DILexicalBlock(scope: !8578, file: !4409, line: 193, column: 2)
!8578 = distinct !DILexicalBlock(scope: !8575, file: !4409, line: 193, column: 2)
!8579 = !DILocation(line: 193, column: 2, scope: !8577)
!8580 = !DILocalVariable(name: "__dummy2", scope: !8577, file: !4409, line: 193, type: !350)
!8581 = !DILocation(line: 193, column: 2, scope: !8578)
!8582 = !DILocation(line: 193, column: 2, scope: !8554)
!8583 = !{i32 -2141758129}
!8584 = !DILocation(line: 193, column: 2, scope: !8553)
!8585 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !8552)
!8586 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !8552)
!8587 = !DILocation(line: 194, column: 28, scope: !8545)
!8588 = !DILocation(line: 194, column: 2, scope: !8545)
!8589 = !DILocalVariable(name: "__mptr", scope: !8590, file: !4409, line: 195, type: !351)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !4409, line: 195, column: 2)
!8591 = distinct !DILexicalBlock(scope: !8545, file: !4409, line: 195, column: 2)
!8592 = !DILocation(line: 195, column: 2, scope: !8590)
!8593 = !DILocation(line: 195, column: 2, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8590, file: !4409, line: 195, column: 2)
!8595 = !DILocation(line: 195, column: 2, scope: !8591)
!8596 = !DILocation(line: 195, column: 2, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8591, file: !4409, line: 195, column: 2)
!8598 = !DILocation(line: 196, column: 31, scope: !8597)
!8599 = !DILocation(line: 196, column: 35, scope: !8597)
!8600 = !DILocation(line: 196, column: 3, scope: !8597)
!8601 = !DILocalVariable(name: "__mptr", scope: !8602, file: !4409, line: 195, type: !351)
!8602 = distinct !DILexicalBlock(scope: !8597, file: !4409, line: 195, column: 2)
!8603 = !DILocation(line: 195, column: 2, scope: !8602)
!8604 = !DILocation(line: 195, column: 2, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8602, file: !4409, line: 195, column: 2)
!8606 = distinct !{!8606, !8595, !8607}
!8607 = !DILocation(line: 196, column: 37, scope: !8591)
!8608 = !DILocation(line: 197, column: 26, scope: !8545)
!8609 = !DILocation(line: 197, column: 30, scope: !8545)
!8610 = !DILocation(line: 197, column: 36, scope: !8545)
!8611 = !DILocation(line: 409, column: 2, scope: !5673, inlinedAt: !8549)
!8612 = !DILocation(line: 409, column: 2, scope: !5678, inlinedAt: !8549)
!8613 = !DILocation(line: 409, column: 2, scope: !5679, inlinedAt: !8549)
!8614 = !DILocation(line: 409, column: 2, scope: !5686, inlinedAt: !8549)
!8615 = !DILocation(line: 409, column: 2, scope: !5689, inlinedAt: !8549)
!8616 = !DILocation(line: 199, column: 27, scope: !8545)
!8617 = !DILocation(line: 199, column: 2, scope: !8545)
!8618 = !DILocation(line: 200, column: 1, scope: !8545)
!8619 = distinct !DISubprogram(name: "omap_free_dma", scope: !185, file: !185, line: 354, type: !2087, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8620 = !DILocalVariable(name: "ch", arg: 1, scope: !8619, file: !185, line: 354, type: !378)
!8621 = !DILocation(line: 354, column: 38, scope: !8619)
!8622 = !DILocation(line: 354, column: 44, scope: !8619)
!8623 = distinct !DISubprogram(name: "omap_dma_put_lch", scope: !3, file: !3, line: 694, type: !8499, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8624 = !DILocalVariable(name: "od", arg: 1, scope: !8623, file: !3, line: 694, type: !358)
!8625 = !DILocation(line: 694, column: 50, scope: !8623)
!8626 = !DILocalVariable(name: "lch", arg: 2, scope: !8623, file: !3, line: 694, type: !378)
!8627 = !DILocation(line: 694, column: 58, scope: !8623)
!8628 = !DILocation(line: 696, column: 21, scope: !8623)
!8629 = !DILocation(line: 696, column: 25, scope: !8623)
!8630 = !DILocation(line: 696, column: 2, scope: !8623)
!8631 = !DILocation(line: 697, column: 14, scope: !8623)
!8632 = !DILocation(line: 697, column: 18, scope: !8623)
!8633 = !DILocation(line: 697, column: 2, scope: !8623)
!8634 = !DILocation(line: 698, column: 12, scope: !8623)
!8635 = !DILocation(line: 698, column: 17, scope: !8623)
!8636 = !DILocation(line: 698, column: 21, scope: !8623)
!8637 = !DILocation(line: 698, column: 2, scope: !8623)
!8638 = !DILocation(line: 699, column: 16, scope: !8623)
!8639 = !DILocation(line: 699, column: 20, scope: !8623)
!8640 = !DILocation(line: 699, column: 2, scope: !8623)
!8641 = !DILocation(line: 700, column: 1, scope: !8623)
!8642 = distinct !DISubprogram(name: "vchan_get_all_descriptors", scope: !4409, file: !4409, line: 177, type: !8643, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8643 = !DISubroutineType(types: !8644)
!8644 = !{null, !4502, !385}
!8645 = !DILocalVariable(name: "vc", arg: 1, scope: !8642, file: !4409, line: 177, type: !4502)
!8646 = !DILocation(line: 177, column: 68, scope: !8642)
!8647 = !DILocalVariable(name: "head", arg: 2, scope: !8642, file: !4409, line: 178, type: !385)
!8648 = !DILocation(line: 178, column: 20, scope: !8642)
!8649 = !DILocation(line: 180, column: 25, scope: !8642)
!8650 = !DILocation(line: 180, column: 29, scope: !8642)
!8651 = !DILocation(line: 180, column: 45, scope: !8642)
!8652 = !DILocation(line: 180, column: 2, scope: !8642)
!8653 = !DILocation(line: 181, column: 25, scope: !8642)
!8654 = !DILocation(line: 181, column: 29, scope: !8642)
!8655 = !DILocation(line: 181, column: 45, scope: !8642)
!8656 = !DILocation(line: 181, column: 2, scope: !8642)
!8657 = !DILocation(line: 182, column: 25, scope: !8642)
!8658 = !DILocation(line: 182, column: 29, scope: !8642)
!8659 = !DILocation(line: 182, column: 42, scope: !8642)
!8660 = !DILocation(line: 182, column: 2, scope: !8642)
!8661 = !DILocation(line: 183, column: 25, scope: !8642)
!8662 = !DILocation(line: 183, column: 29, scope: !8642)
!8663 = !DILocation(line: 183, column: 45, scope: !8642)
!8664 = !DILocation(line: 183, column: 2, scope: !8642)
!8665 = !DILocation(line: 184, column: 25, scope: !8642)
!8666 = !DILocation(line: 184, column: 29, scope: !8642)
!8667 = !DILocation(line: 184, column: 46, scope: !8642)
!8668 = !DILocation(line: 184, column: 2, scope: !8642)
!8669 = !DILocation(line: 185, column: 1, scope: !8642)
!8670 = distinct !DISubprogram(name: "dmaengine_desc_clear_reuse", scope: !94, file: !94, line: 1540, type: !8234, scopeLine: 1541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8671 = !DILocalVariable(name: "tx", arg: 1, scope: !8670, file: !94, line: 1540, type: !4131)
!8672 = !DILocation(line: 1540, column: 79, scope: !8670)
!8673 = !DILocation(line: 1542, column: 2, scope: !8670)
!8674 = !DILocation(line: 1542, column: 6, scope: !8670)
!8675 = !DILocation(line: 1542, column: 12, scope: !8670)
!8676 = !DILocation(line: 1543, column: 1, scope: !8670)
!8677 = distinct !DISubprogram(name: "list_splice_tail_init", scope: !6982, file: !6982, line: 495, type: !8160, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8678 = !DILocalVariable(name: "list", arg: 1, scope: !8677, file: !6982, line: 495, type: !385)
!8679 = !DILocation(line: 495, column: 60, scope: !8677)
!8680 = !DILocalVariable(name: "head", arg: 2, scope: !8677, file: !6982, line: 496, type: !385)
!8681 = !DILocation(line: 496, column: 25, scope: !8677)
!8682 = !DILocation(line: 498, column: 18, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8677, file: !6982, line: 498, column: 6)
!8684 = !DILocation(line: 498, column: 7, scope: !8683)
!8685 = !DILocation(line: 498, column: 6, scope: !8677)
!8686 = !DILocation(line: 499, column: 17, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8683, file: !6982, line: 498, column: 25)
!8688 = !DILocation(line: 499, column: 23, scope: !8687)
!8689 = !DILocation(line: 499, column: 29, scope: !8687)
!8690 = !DILocation(line: 499, column: 35, scope: !8687)
!8691 = !DILocation(line: 499, column: 3, scope: !8687)
!8692 = !DILocation(line: 500, column: 18, scope: !8687)
!8693 = !DILocation(line: 500, column: 3, scope: !8687)
!8694 = !DILocation(line: 501, column: 2, scope: !8687)
!8695 = !DILocation(line: 502, column: 1, scope: !8677)
!8696 = distinct !DISubprogram(name: "list_empty", scope: !6982, file: !6982, line: 280, type: !8697, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8697 = !DISubroutineType(types: !8698)
!8698 = !{!378, !8699}
!8699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8700, size: 64)
!8700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !382)
!8701 = !DILocalVariable(name: "head", arg: 1, scope: !8696, file: !6982, line: 280, type: !8699)
!8702 = !DILocation(line: 280, column: 54, scope: !8696)
!8703 = !DILocation(line: 282, column: 9, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8696, file: !6982, line: 282, column: 9)
!8705 = !DILocation(line: 282, column: 9, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8704, file: !6982, line: 282, column: 9)
!8707 = !DILocation(line: 282, column: 34, scope: !8696)
!8708 = !DILocation(line: 282, column: 31, scope: !8696)
!8709 = !DILocation(line: 282, column: 2, scope: !8696)
!8710 = distinct !DISubprogram(name: "__list_splice", scope: !6982, file: !6982, line: 433, type: !8711, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8711 = !DISubroutineType(types: !8712)
!8712 = !{null, !8699, !385, !385}
!8713 = !DILocalVariable(name: "list", arg: 1, scope: !8710, file: !6982, line: 433, type: !8699)
!8714 = !DILocation(line: 433, column: 58, scope: !8710)
!8715 = !DILocalVariable(name: "prev", arg: 2, scope: !8710, file: !6982, line: 434, type: !385)
!8716 = !DILocation(line: 434, column: 24, scope: !8710)
!8717 = !DILocalVariable(name: "next", arg: 3, scope: !8710, file: !6982, line: 435, type: !385)
!8718 = !DILocation(line: 435, column: 24, scope: !8710)
!8719 = !DILocalVariable(name: "first", scope: !8710, file: !6982, line: 437, type: !385)
!8720 = !DILocation(line: 437, column: 20, scope: !8710)
!8721 = !DILocation(line: 437, column: 28, scope: !8710)
!8722 = !DILocation(line: 437, column: 34, scope: !8710)
!8723 = !DILocalVariable(name: "last", scope: !8710, file: !6982, line: 438, type: !385)
!8724 = !DILocation(line: 438, column: 20, scope: !8710)
!8725 = !DILocation(line: 438, column: 27, scope: !8710)
!8726 = !DILocation(line: 438, column: 33, scope: !8710)
!8727 = !DILocation(line: 440, column: 16, scope: !8710)
!8728 = !DILocation(line: 440, column: 2, scope: !8710)
!8729 = !DILocation(line: 440, column: 9, scope: !8710)
!8730 = !DILocation(line: 440, column: 14, scope: !8710)
!8731 = !DILocation(line: 441, column: 15, scope: !8710)
!8732 = !DILocation(line: 441, column: 2, scope: !8710)
!8733 = !DILocation(line: 441, column: 8, scope: !8710)
!8734 = !DILocation(line: 441, column: 13, scope: !8710)
!8735 = !DILocation(line: 443, column: 15, scope: !8710)
!8736 = !DILocation(line: 443, column: 2, scope: !8710)
!8737 = !DILocation(line: 443, column: 8, scope: !8710)
!8738 = !DILocation(line: 443, column: 13, scope: !8710)
!8739 = !DILocation(line: 444, column: 15, scope: !8710)
!8740 = !DILocation(line: 444, column: 2, scope: !8710)
!8741 = !DILocation(line: 444, column: 8, scope: !8710)
!8742 = !DILocation(line: 444, column: 13, scope: !8710)
!8743 = !DILocation(line: 445, column: 1, scope: !8710)
!8744 = distinct !DISubprogram(name: "clear_bit", scope: !7492, file: !7492, line: 39, type: !7493, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8745 = !DILocalVariable(name: "nr", arg: 1, scope: !8746, file: !6346, line: 72, type: !352)
!8746 = distinct !DISubprogram(name: "arch_clear_bit", scope: !6346, file: !6346, line: 72, type: !7493, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8747 = !DILocation(line: 72, column: 21, scope: !8746, inlinedAt: !8748)
!8748 = distinct !DILocation(line: 42, column: 2, scope: !8744)
!8749 = !DILocalVariable(name: "addr", arg: 2, scope: !8746, file: !6346, line: 72, type: !7495)
!8750 = !DILocation(line: 72, column: 49, scope: !8746, inlinedAt: !8748)
!8751 = !DILocation(line: 84, column: 74, scope: !7504, inlinedAt: !8752)
!8752 = distinct !DILocation(line: 41, column: 2, scope: !8744)
!8753 = !DILocation(line: 84, column: 84, scope: !7504, inlinedAt: !8752)
!8754 = !DILocalVariable(name: "nr", arg: 1, scope: !8744, file: !7492, line: 39, type: !352)
!8755 = !DILocation(line: 39, column: 35, scope: !8744)
!8756 = !DILocalVariable(name: "addr", arg: 2, scope: !8744, file: !7492, line: 39, type: !7495)
!8757 = !DILocation(line: 39, column: 63, scope: !8744)
!8758 = !DILocation(line: 41, column: 26, scope: !8744)
!8759 = !DILocation(line: 41, column: 33, scope: !8744)
!8760 = !DILocation(line: 41, column: 31, scope: !8744)
!8761 = !DILocation(line: 86, column: 20, scope: !7504, inlinedAt: !8752)
!8762 = !DILocation(line: 86, column: 23, scope: !7504, inlinedAt: !8752)
!8763 = !DILocation(line: 86, column: 2, scope: !7504, inlinedAt: !8752)
!8764 = !DILocation(line: 87, column: 2, scope: !7504, inlinedAt: !8752)
!8765 = !DILocation(line: 42, column: 17, scope: !8744)
!8766 = !DILocation(line: 42, column: 21, scope: !8744)
!8767 = !DILocation(line: 74, column: 27, scope: !8768, inlinedAt: !8748)
!8768 = distinct !DILexicalBlock(scope: !8746, file: !6346, line: 74, column: 6)
!8769 = !DILocation(line: 74, column: 6, scope: !8768, inlinedAt: !8748)
!8770 = !DILocation(line: 74, column: 6, scope: !8746, inlinedAt: !8748)
!8771 = !DILocation(line: 76, column: 6, scope: !8772, inlinedAt: !8748)
!8772 = distinct !DILexicalBlock(scope: !8768, file: !6346, line: 74, column: 32)
!8773 = !DILocation(line: 77, column: 13, scope: !8772, inlinedAt: !8748)
!8774 = !DILocation(line: 77, column: 12, scope: !8772, inlinedAt: !8748)
!8775 = !DILocation(line: 75, column: 3, scope: !8772, inlinedAt: !8748)
!8776 = !{i32 -2147161861}
!8777 = !DILocation(line: 78, column: 2, scope: !8772, inlinedAt: !8748)
!8778 = !DILocation(line: 80, column: 8, scope: !8779, inlinedAt: !8748)
!8779 = distinct !DILexicalBlock(scope: !8768, file: !6346, line: 78, column: 9)
!8780 = !DILocation(line: 80, column: 32, scope: !8779, inlinedAt: !8748)
!8781 = !DILocation(line: 79, column: 3, scope: !8779, inlinedAt: !8748)
!8782 = !{i32 -2147161729}
!8783 = !DILocation(line: 43, column: 1, scope: !8744)
!8784 = distinct !DISubprogram(name: "dma_cookie_status", scope: !8233, file: !8233, line: 68, type: !4308, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8785 = !DILocalVariable(name: "chan", arg: 1, scope: !8784, file: !8233, line: 68, type: !398)
!8786 = !DILocation(line: 68, column: 66, scope: !8784)
!8787 = !DILocalVariable(name: "cookie", arg: 2, scope: !8784, file: !8233, line: 69, type: !4051)
!8788 = !DILocation(line: 69, column: 15, scope: !8784)
!8789 = !DILocalVariable(name: "state", arg: 3, scope: !8784, file: !8233, line: 69, type: !4310)
!8790 = !DILocation(line: 69, column: 44, scope: !8784)
!8791 = !DILocalVariable(name: "used", scope: !8784, file: !8233, line: 71, type: !4051)
!8792 = !DILocation(line: 71, column: 15, scope: !8784)
!8793 = !DILocalVariable(name: "complete", scope: !8784, file: !8233, line: 71, type: !4051)
!8794 = !DILocation(line: 71, column: 21, scope: !8784)
!8795 = !DILocation(line: 73, column: 9, scope: !8784)
!8796 = !DILocation(line: 73, column: 15, scope: !8784)
!8797 = !DILocation(line: 73, column: 7, scope: !8784)
!8798 = !DILocation(line: 74, column: 13, scope: !8784)
!8799 = !DILocation(line: 74, column: 19, scope: !8784)
!8800 = !DILocation(line: 74, column: 11, scope: !8784)
!8801 = !DILocation(line: 75, column: 2, scope: !8784)
!8802 = !{i32 -2141769402}
!8803 = !DILocation(line: 76, column: 6, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8784, file: !8233, line: 76, column: 6)
!8805 = !DILocation(line: 76, column: 6, scope: !8784)
!8806 = !DILocation(line: 77, column: 17, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8804, file: !8233, line: 76, column: 13)
!8808 = !DILocation(line: 77, column: 3, scope: !8807)
!8809 = !DILocation(line: 77, column: 10, scope: !8807)
!8810 = !DILocation(line: 77, column: 15, scope: !8807)
!8811 = !DILocation(line: 78, column: 17, scope: !8807)
!8812 = !DILocation(line: 78, column: 3, scope: !8807)
!8813 = !DILocation(line: 78, column: 10, scope: !8807)
!8814 = !DILocation(line: 78, column: 15, scope: !8807)
!8815 = !DILocation(line: 79, column: 3, scope: !8807)
!8816 = !DILocation(line: 79, column: 10, scope: !8807)
!8817 = !DILocation(line: 79, column: 18, scope: !8807)
!8818 = !DILocation(line: 80, column: 3, scope: !8807)
!8819 = !DILocation(line: 80, column: 10, scope: !8807)
!8820 = !DILocation(line: 80, column: 26, scope: !8807)
!8821 = !DILocation(line: 81, column: 2, scope: !8807)
!8822 = !DILocation(line: 82, column: 31, scope: !8784)
!8823 = !DILocation(line: 82, column: 39, scope: !8784)
!8824 = !DILocation(line: 82, column: 49, scope: !8784)
!8825 = !DILocation(line: 82, column: 9, scope: !8784)
!8826 = !DILocation(line: 82, column: 2, scope: !8784)
!8827 = distinct !DISubprogram(name: "omap_dma_get_src_pos", scope: !3, file: !3, line: 830, type: !8828, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8828 = !DISubroutineType(types: !8829)
!8829 = !{!1142, !4404}
!8830 = !DILocalVariable(name: "c", arg: 1, scope: !8827, file: !3, line: 830, type: !4404)
!8831 = !DILocation(line: 830, column: 58, scope: !8827)
!8832 = !DILocalVariable(name: "od", scope: !8827, file: !3, line: 832, type: !358)
!8833 = !DILocation(line: 832, column: 22, scope: !8827)
!8834 = !DILocation(line: 832, column: 43, scope: !8827)
!8835 = !DILocation(line: 832, column: 46, scope: !8827)
!8836 = !DILocation(line: 832, column: 49, scope: !8827)
!8837 = !DILocation(line: 832, column: 54, scope: !8827)
!8838 = !DILocation(line: 832, column: 27, scope: !8827)
!8839 = !DILocalVariable(name: "addr", scope: !8827, file: !3, line: 833, type: !1142)
!8840 = !DILocation(line: 833, column: 13, scope: !8827)
!8841 = !DILocalVariable(name: "cdac", scope: !8827, file: !3, line: 833, type: !1142)
!8842 = !DILocation(line: 833, column: 19, scope: !8827)
!8843 = !DILocation(line: 835, column: 6, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 835, column: 6)
!8845 = !DILocation(line: 835, column: 6, scope: !8827)
!8846 = !DILocation(line: 836, column: 29, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 835, column: 42)
!8848 = !DILocation(line: 836, column: 10, scope: !8847)
!8849 = !DILocation(line: 836, column: 8, scope: !8847)
!8850 = !DILocation(line: 837, column: 2, scope: !8847)
!8851 = !DILocation(line: 838, column: 33, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 837, column: 9)
!8853 = !DILocation(line: 838, column: 10, scope: !8852)
!8854 = !DILocation(line: 838, column: 8, scope: !8852)
!8855 = !DILocation(line: 839, column: 33, scope: !8852)
!8856 = !DILocation(line: 839, column: 10, scope: !8852)
!8857 = !DILocation(line: 839, column: 8, scope: !8852)
!8858 = !DILocation(line: 846, column: 7, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 846, column: 7)
!8860 = !DILocation(line: 846, column: 12, scope: !8859)
!8861 = !DILocation(line: 846, column: 7, scope: !8852)
!8862 = !DILocation(line: 847, column: 30, scope: !8859)
!8863 = !DILocation(line: 847, column: 11, scope: !8859)
!8864 = !DILocation(line: 847, column: 9, scope: !8859)
!8865 = !DILocation(line: 847, column: 4, scope: !8859)
!8866 = !DILocation(line: 851, column: 30, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 850, column: 6)
!8868 = !DILocation(line: 851, column: 11, scope: !8867)
!8869 = !DILocation(line: 851, column: 39, scope: !8867)
!8870 = !DILocation(line: 851, column: 8, scope: !8867)
!8871 = !DILocation(line: 853, column: 9, scope: !8827)
!8872 = !DILocation(line: 853, column: 2, scope: !8827)
!8873 = distinct !DISubprogram(name: "omap_dma_get_dst_pos", scope: !3, file: !3, line: 856, type: !8828, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8874 = !DILocalVariable(name: "c", arg: 1, scope: !8873, file: !3, line: 856, type: !4404)
!8875 = !DILocation(line: 856, column: 58, scope: !8873)
!8876 = !DILocalVariable(name: "od", scope: !8873, file: !3, line: 858, type: !358)
!8877 = !DILocation(line: 858, column: 22, scope: !8873)
!8878 = !DILocation(line: 858, column: 43, scope: !8873)
!8879 = !DILocation(line: 858, column: 46, scope: !8873)
!8880 = !DILocation(line: 858, column: 49, scope: !8873)
!8881 = !DILocation(line: 858, column: 54, scope: !8873)
!8882 = !DILocation(line: 858, column: 27, scope: !8873)
!8883 = !DILocalVariable(name: "addr", scope: !8873, file: !3, line: 859, type: !1142)
!8884 = !DILocation(line: 859, column: 13, scope: !8873)
!8885 = !DILocation(line: 861, column: 6, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 861, column: 6)
!8887 = !DILocation(line: 861, column: 6, scope: !8873)
!8888 = !DILocation(line: 862, column: 29, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 861, column: 42)
!8890 = !DILocation(line: 862, column: 10, scope: !8889)
!8891 = !DILocation(line: 862, column: 8, scope: !8889)
!8892 = !DILocation(line: 863, column: 2, scope: !8889)
!8893 = !DILocation(line: 864, column: 33, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 863, column: 9)
!8895 = !DILocation(line: 864, column: 10, scope: !8894)
!8896 = !DILocation(line: 864, column: 8, scope: !8894)
!8897 = !DILocation(line: 872, column: 7, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 872, column: 7)
!8899 = !DILocation(line: 872, column: 12, scope: !8898)
!8900 = !DILocation(line: 872, column: 7, scope: !8894)
!8901 = !DILocation(line: 873, column: 30, scope: !8898)
!8902 = !DILocation(line: 873, column: 11, scope: !8898)
!8903 = !DILocation(line: 873, column: 9, scope: !8898)
!8904 = !DILocation(line: 873, column: 4, scope: !8898)
!8905 = !DILocation(line: 877, column: 30, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 876, column: 6)
!8907 = !DILocation(line: 877, column: 11, scope: !8906)
!8908 = !DILocation(line: 877, column: 39, scope: !8906)
!8909 = !DILocation(line: 877, column: 8, scope: !8906)
!8910 = !DILocation(line: 879, column: 9, scope: !8873)
!8911 = !DILocation(line: 879, column: 2, scope: !8873)
!8912 = distinct !DISubprogram(name: "omap_dma_desc_size_pos", scope: !3, file: !3, line: 797, type: !8913, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8913 = !DISubroutineType(types: !8914)
!8914 = !{!510, !4459, !1142}
!8915 = !DILocalVariable(name: "d", arg: 1, scope: !8912, file: !3, line: 797, type: !4459)
!8916 = !DILocation(line: 797, column: 56, scope: !8912)
!8917 = !DILocalVariable(name: "addr", arg: 2, scope: !8912, file: !3, line: 797, type: !1142)
!8918 = !DILocation(line: 797, column: 70, scope: !8912)
!8919 = !DILocalVariable(name: "i", scope: !8912, file: !3, line: 799, type: !7)
!8920 = !DILocation(line: 799, column: 11, scope: !8912)
!8921 = !DILocalVariable(name: "size", scope: !8912, file: !3, line: 800, type: !510)
!8922 = !DILocation(line: 800, column: 9, scope: !8912)
!8923 = !DILocalVariable(name: "es_size", scope: !8912, file: !3, line: 800, type: !510)
!8924 = !DILocation(line: 800, column: 15, scope: !8912)
!8925 = !DILocation(line: 800, column: 34, scope: !8912)
!8926 = !DILocation(line: 800, column: 37, scope: !8912)
!8927 = !DILocation(line: 800, column: 25, scope: !8912)
!8928 = !DILocation(line: 802, column: 16, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 802, column: 2)
!8930 = !DILocation(line: 802, column: 12, scope: !8929)
!8931 = !DILocation(line: 802, column: 7, scope: !8929)
!8932 = !DILocation(line: 802, column: 21, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 802, column: 2)
!8934 = !DILocation(line: 802, column: 25, scope: !8933)
!8935 = !DILocation(line: 802, column: 28, scope: !8933)
!8936 = !DILocation(line: 802, column: 23, scope: !8933)
!8937 = !DILocation(line: 802, column: 2, scope: !8929)
!8938 = !DILocalVariable(name: "this_size", scope: !8939, file: !3, line: 803, type: !510)
!8939 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 802, column: 40)
!8940 = !DILocation(line: 803, column: 10, scope: !8939)
!8941 = !DILocation(line: 803, column: 40, scope: !8939)
!8942 = !DILocation(line: 803, column: 43, scope: !8939)
!8943 = !DILocation(line: 803, column: 46, scope: !8939)
!8944 = !DILocation(line: 803, column: 22, scope: !8939)
!8945 = !DILocation(line: 803, column: 52, scope: !8939)
!8946 = !DILocation(line: 803, column: 50, scope: !8939)
!8947 = !DILocation(line: 805, column: 7, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 805, column: 7)
!8949 = !DILocation(line: 805, column: 7, scope: !8939)
!8950 = !DILocation(line: 806, column: 12, scope: !8948)
!8951 = !DILocation(line: 806, column: 9, scope: !8948)
!8952 = !DILocation(line: 806, column: 4, scope: !8948)
!8953 = !DILocation(line: 807, column: 12, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 807, column: 12)
!8955 = !DILocation(line: 807, column: 20, scope: !8954)
!8956 = !DILocation(line: 807, column: 23, scope: !8954)
!8957 = !DILocation(line: 807, column: 26, scope: !8954)
!8958 = !DILocation(line: 807, column: 29, scope: !8954)
!8959 = !DILocation(line: 807, column: 17, scope: !8954)
!8960 = !DILocation(line: 807, column: 34, scope: !8954)
!8961 = !DILocation(line: 808, column: 5, scope: !8954)
!8962 = !DILocation(line: 808, column: 12, scope: !8954)
!8963 = !DILocation(line: 808, column: 15, scope: !8954)
!8964 = !DILocation(line: 808, column: 18, scope: !8954)
!8965 = !DILocation(line: 808, column: 21, scope: !8954)
!8966 = !DILocation(line: 808, column: 28, scope: !8954)
!8967 = !DILocation(line: 808, column: 26, scope: !8954)
!8968 = !DILocation(line: 808, column: 10, scope: !8954)
!8969 = !DILocation(line: 807, column: 12, scope: !8948)
!8970 = !DILocation(line: 809, column: 12, scope: !8954)
!8971 = !DILocation(line: 809, column: 15, scope: !8954)
!8972 = !DILocation(line: 809, column: 18, scope: !8954)
!8973 = !DILocation(line: 809, column: 21, scope: !8954)
!8974 = !DILocation(line: 809, column: 28, scope: !8954)
!8975 = !DILocation(line: 809, column: 26, scope: !8954)
!8976 = !DILocation(line: 809, column: 40, scope: !8954)
!8977 = !DILocation(line: 809, column: 38, scope: !8954)
!8978 = !DILocation(line: 809, column: 9, scope: !8954)
!8979 = !DILocation(line: 809, column: 4, scope: !8954)
!8980 = !DILocation(line: 810, column: 2, scope: !8939)
!8981 = !DILocation(line: 802, column: 36, scope: !8933)
!8982 = !DILocation(line: 802, column: 2, scope: !8933)
!8983 = distinct !{!8983, !8937, !8984}
!8984 = !DILocation(line: 810, column: 2, scope: !8929)
!8985 = !DILocation(line: 811, column: 9, scope: !8912)
!8986 = !DILocation(line: 811, column: 2, scope: !8912)
!8987 = distinct !DISubprogram(name: "omap_dma_desc_size", scope: !3, file: !3, line: 786, type: !8988, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!8988 = !DISubroutineType(types: !8989)
!8989 = !{!510, !4459}
!8990 = !DILocalVariable(name: "d", arg: 1, scope: !8987, file: !3, line: 786, type: !4459)
!8991 = !DILocation(line: 786, column: 52, scope: !8987)
!8992 = !DILocalVariable(name: "i", scope: !8987, file: !3, line: 788, type: !7)
!8993 = !DILocation(line: 788, column: 11, scope: !8987)
!8994 = !DILocalVariable(name: "size", scope: !8987, file: !3, line: 789, type: !510)
!8995 = !DILocation(line: 789, column: 9, scope: !8987)
!8996 = !DILocation(line: 791, column: 16, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 791, column: 2)
!8998 = !DILocation(line: 791, column: 12, scope: !8997)
!8999 = !DILocation(line: 791, column: 7, scope: !8997)
!9000 = !DILocation(line: 791, column: 21, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 791, column: 2)
!9002 = !DILocation(line: 791, column: 25, scope: !9001)
!9003 = !DILocation(line: 791, column: 28, scope: !9001)
!9004 = !DILocation(line: 791, column: 23, scope: !9001)
!9005 = !DILocation(line: 791, column: 2, scope: !8997)
!9006 = !DILocation(line: 792, column: 29, scope: !9001)
!9007 = !DILocation(line: 792, column: 32, scope: !9001)
!9008 = !DILocation(line: 792, column: 35, scope: !9001)
!9009 = !DILocation(line: 792, column: 11, scope: !9001)
!9010 = !DILocation(line: 792, column: 8, scope: !9001)
!9011 = !DILocation(line: 792, column: 3, scope: !9001)
!9012 = !DILocation(line: 791, column: 36, scope: !9001)
!9013 = !DILocation(line: 791, column: 2, scope: !9001)
!9014 = distinct !{!9014, !9005, !9015}
!9015 = !DILocation(line: 792, column: 37, scope: !8997)
!9016 = !DILocation(line: 794, column: 9, scope: !8987)
!9017 = !DILocation(line: 794, column: 25, scope: !8987)
!9018 = !DILocation(line: 794, column: 28, scope: !8987)
!9019 = !DILocation(line: 794, column: 16, scope: !8987)
!9020 = !DILocation(line: 794, column: 14, scope: !8987)
!9021 = !DILocation(line: 794, column: 2, scope: !8987)
!9022 = distinct !DISubprogram(name: "dma_async_is_complete", scope: !94, file: !94, line: 1443, type: !9023, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9023 = !DISubroutineType(types: !9024)
!9024 = !{!153, !4051, !4051, !4051}
!9025 = !DILocalVariable(name: "cookie", arg: 1, scope: !9022, file: !94, line: 1443, type: !4051)
!9026 = !DILocation(line: 1443, column: 66, scope: !9022)
!9027 = !DILocalVariable(name: "last_complete", arg: 2, scope: !9022, file: !94, line: 1444, type: !4051)
!9028 = !DILocation(line: 1444, column: 17, scope: !9022)
!9029 = !DILocalVariable(name: "last_used", arg: 3, scope: !9022, file: !94, line: 1444, type: !4051)
!9030 = !DILocation(line: 1444, column: 45, scope: !9022)
!9031 = !DILocation(line: 1446, column: 6, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9022, file: !94, line: 1446, column: 6)
!9033 = !DILocation(line: 1446, column: 23, scope: !9032)
!9034 = !DILocation(line: 1446, column: 20, scope: !9032)
!9035 = !DILocation(line: 1446, column: 6, scope: !9022)
!9036 = !DILocation(line: 1447, column: 8, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !94, line: 1447, column: 7)
!9038 = distinct !DILexicalBlock(scope: !9032, file: !94, line: 1446, column: 34)
!9039 = !DILocation(line: 1447, column: 18, scope: !9037)
!9040 = !DILocation(line: 1447, column: 15, scope: !9037)
!9041 = !DILocation(line: 1447, column: 33, scope: !9037)
!9042 = !DILocation(line: 1447, column: 37, scope: !9037)
!9043 = !DILocation(line: 1447, column: 46, scope: !9037)
!9044 = !DILocation(line: 1447, column: 44, scope: !9037)
!9045 = !DILocation(line: 1447, column: 7, scope: !9038)
!9046 = !DILocation(line: 1448, column: 4, scope: !9037)
!9047 = !DILocation(line: 1449, column: 2, scope: !9038)
!9048 = !DILocation(line: 1450, column: 8, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !94, line: 1450, column: 7)
!9050 = distinct !DILexicalBlock(scope: !9032, file: !94, line: 1449, column: 9)
!9051 = !DILocation(line: 1450, column: 18, scope: !9049)
!9052 = !DILocation(line: 1450, column: 15, scope: !9049)
!9053 = !DILocation(line: 1450, column: 33, scope: !9049)
!9054 = !DILocation(line: 1450, column: 37, scope: !9049)
!9055 = !DILocation(line: 1450, column: 46, scope: !9049)
!9056 = !DILocation(line: 1450, column: 44, scope: !9049)
!9057 = !DILocation(line: 1450, column: 7, scope: !9050)
!9058 = !DILocation(line: 1451, column: 4, scope: !9049)
!9059 = !DILocation(line: 1453, column: 2, scope: !9022)
!9060 = !DILocation(line: 1454, column: 1, scope: !9022)
!9061 = distinct !DISubprogram(name: "omap_dma_chan_read_3_3", scope: !3, file: !3, line: 818, type: !9062, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9062 = !DISubroutineType(types: !9063)
!9063 = !{!745, !4404, !7}
!9064 = !DILocalVariable(name: "c", arg: 1, scope: !9061, file: !3, line: 818, type: !4404)
!9065 = !DILocation(line: 818, column: 58, scope: !9061)
!9066 = !DILocalVariable(name: "reg", arg: 2, scope: !9061, file: !3, line: 818, type: !7)
!9067 = !DILocation(line: 818, column: 70, scope: !9061)
!9068 = !DILocalVariable(name: "od", scope: !9061, file: !3, line: 820, type: !358)
!9069 = !DILocation(line: 820, column: 22, scope: !9061)
!9070 = !DILocation(line: 820, column: 43, scope: !9061)
!9071 = !DILocation(line: 820, column: 46, scope: !9061)
!9072 = !DILocation(line: 820, column: 49, scope: !9061)
!9073 = !DILocation(line: 820, column: 54, scope: !9061)
!9074 = !DILocation(line: 820, column: 27, scope: !9061)
!9075 = !DILocalVariable(name: "val", scope: !9061, file: !3, line: 821, type: !745)
!9076 = !DILocation(line: 821, column: 11, scope: !9061)
!9077 = !DILocation(line: 823, column: 27, scope: !9061)
!9078 = !DILocation(line: 823, column: 30, scope: !9061)
!9079 = !DILocation(line: 823, column: 8, scope: !9061)
!9080 = !DILocation(line: 823, column: 6, scope: !9061)
!9081 = !DILocation(line: 824, column: 6, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9061, file: !3, line: 824, column: 6)
!9083 = !DILocation(line: 824, column: 10, scope: !9082)
!9084 = !DILocation(line: 824, column: 15, scope: !9082)
!9085 = !DILocation(line: 824, column: 18, scope: !9082)
!9086 = !DILocation(line: 824, column: 22, scope: !9082)
!9087 = !DILocation(line: 824, column: 28, scope: !9082)
!9088 = !DILocation(line: 824, column: 35, scope: !9082)
!9089 = !DILocation(line: 824, column: 6, scope: !9061)
!9090 = !DILocation(line: 825, column: 28, scope: !9082)
!9091 = !DILocation(line: 825, column: 31, scope: !9082)
!9092 = !DILocation(line: 825, column: 9, scope: !9082)
!9093 = !DILocation(line: 825, column: 7, scope: !9082)
!9094 = !DILocation(line: 825, column: 3, scope: !9082)
!9095 = !DILocation(line: 827, column: 9, scope: !9061)
!9096 = !DILocation(line: 827, column: 2, scope: !9061)
!9097 = distinct !DISubprogram(name: "omap_dma_sg_size", scope: !3, file: !3, line: 781, type: !9098, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9098 = !DISubroutineType(types: !9099)
!9099 = !{!510, !6042}
!9100 = !DILocalVariable(name: "sg", arg: 1, scope: !9097, file: !3, line: 781, type: !6042)
!9101 = !DILocation(line: 781, column: 48, scope: !9097)
!9102 = !DILocation(line: 783, column: 9, scope: !9097)
!9103 = !DILocation(line: 783, column: 13, scope: !9097)
!9104 = !DILocation(line: 783, column: 18, scope: !9097)
!9105 = !DILocation(line: 783, column: 22, scope: !9097)
!9106 = !DILocation(line: 783, column: 16, scope: !9097)
!9107 = !DILocation(line: 783, column: 2, scope: !9097)
!9108 = distinct !DISubprogram(name: "vchan_issue_pending", scope: !4409, file: !4409, line: 82, type: !9109, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9109 = !DISubroutineType(types: !9110)
!9110 = !{!396, !4502}
!9111 = !DILocalVariable(name: "vc", arg: 1, scope: !9108, file: !4409, line: 82, type: !4502)
!9112 = !DILocation(line: 82, column: 62, scope: !9108)
!9113 = !DILocation(line: 84, column: 25, scope: !9108)
!9114 = !DILocation(line: 84, column: 29, scope: !9108)
!9115 = !DILocation(line: 84, column: 46, scope: !9108)
!9116 = !DILocation(line: 84, column: 50, scope: !9108)
!9117 = !DILocation(line: 84, column: 2, scope: !9108)
!9118 = !DILocation(line: 85, column: 22, scope: !9108)
!9119 = !DILocation(line: 85, column: 26, scope: !9108)
!9120 = !DILocation(line: 85, column: 10, scope: !9108)
!9121 = !DILocation(line: 85, column: 9, scope: !9108)
!9122 = !DILocation(line: 85, column: 2, scope: !9108)
!9123 = distinct !DISubprogram(name: "kzalloc", scope: !332, file: !332, line: 662, type: !9124, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9124 = !DISubroutineType(types: !9125)
!9125 = !{!351, !510, !348}
!9126 = !DILocalVariable(name: "s", arg: 1, scope: !9127, file: !332, line: 445, type: !1157)
!9127 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !332, file: !332, line: 445, type: !9128, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9128 = !DISubroutineType(types: !9129)
!9129 = !{!351, !1157, !348, !510}
!9130 = !DILocation(line: 445, column: 72, scope: !9127, inlinedAt: !9131)
!9131 = distinct !DILocation(line: 552, column: 10, scope: !9132, inlinedAt: !9135)
!9132 = distinct !DILexicalBlock(scope: !9133, file: !332, line: 540, column: 34)
!9133 = distinct !DILexicalBlock(scope: !9134, file: !332, line: 540, column: 6)
!9134 = distinct !DISubprogram(name: "kmalloc", scope: !332, file: !332, line: 538, type: !9124, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9135 = distinct !DILocation(line: 664, column: 9, scope: !9123)
!9136 = !DILocalVariable(name: "flags", arg: 2, scope: !9127, file: !332, line: 446, type: !348)
!9137 = !DILocation(line: 446, column: 9, scope: !9127, inlinedAt: !9131)
!9138 = !DILocalVariable(name: "size", arg: 3, scope: !9127, file: !332, line: 446, type: !510)
!9139 = !DILocation(line: 446, column: 23, scope: !9127, inlinedAt: !9131)
!9140 = !DILocalVariable(name: "ret", scope: !9127, file: !332, line: 448, type: !351)
!9141 = !DILocation(line: 448, column: 8, scope: !9127, inlinedAt: !9131)
!9142 = !DILocalVariable(name: "flags", arg: 1, scope: !9143, file: !332, line: 318, type: !348)
!9143 = distinct !DISubprogram(name: "kmalloc_type", scope: !332, file: !332, line: 318, type: !9144, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9144 = !DISubroutineType(types: !9145)
!9145 = !{!331, !348}
!9146 = !DILocation(line: 318, column: 67, scope: !9143, inlinedAt: !9147)
!9147 = distinct !DILocation(line: 553, column: 20, scope: !9132, inlinedAt: !9135)
!9148 = !DILocalVariable(name: "size", arg: 1, scope: !9149, file: !332, line: 346, type: !510)
!9149 = distinct !DISubprogram(name: "kmalloc_index", scope: !332, file: !332, line: 346, type: !9150, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9150 = !DISubroutineType(types: !9151)
!9151 = !{!7, !510}
!9152 = !DILocation(line: 346, column: 58, scope: !9149, inlinedAt: !9153)
!9153 = distinct !DILocation(line: 547, column: 11, scope: !9132, inlinedAt: !9135)
!9154 = !DILocalVariable(name: "size", arg: 1, scope: !9155, file: !332, line: 472, type: !510)
!9155 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !332, file: !332, line: 472, type: !9156, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9156 = !DISubroutineType(types: !9157)
!9157 = !{!351, !510, !348, !7}
!9158 = !DILocation(line: 472, column: 28, scope: !9155, inlinedAt: !9159)
!9159 = distinct !DILocation(line: 481, column: 9, scope: !9160, inlinedAt: !9161)
!9160 = distinct !DISubprogram(name: "kmalloc_large", scope: !332, file: !332, line: 478, type: !9124, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9161 = distinct !DILocation(line: 545, column: 11, scope: !9162, inlinedAt: !9135)
!9162 = distinct !DILexicalBlock(scope: !9132, file: !332, line: 544, column: 7)
!9163 = !DILocalVariable(name: "flags", arg: 2, scope: !9155, file: !332, line: 472, type: !348)
!9164 = !DILocation(line: 472, column: 40, scope: !9155, inlinedAt: !9159)
!9165 = !DILocalVariable(name: "order", arg: 3, scope: !9155, file: !332, line: 472, type: !7)
!9166 = !DILocation(line: 472, column: 60, scope: !9155, inlinedAt: !9159)
!9167 = !DILocalVariable(name: "size", arg: 1, scope: !9160, file: !332, line: 478, type: !510)
!9168 = !DILocation(line: 478, column: 51, scope: !9160, inlinedAt: !9161)
!9169 = !DILocalVariable(name: "flags", arg: 2, scope: !9160, file: !332, line: 478, type: !348)
!9170 = !DILocation(line: 478, column: 63, scope: !9160, inlinedAt: !9161)
!9171 = !DILocalVariable(name: "order", scope: !9160, file: !332, line: 480, type: !7)
!9172 = !DILocation(line: 480, column: 15, scope: !9160, inlinedAt: !9161)
!9173 = !DILocalVariable(name: "size", arg: 1, scope: !9134, file: !332, line: 538, type: !510)
!9174 = !DILocation(line: 538, column: 45, scope: !9134, inlinedAt: !9135)
!9175 = !DILocalVariable(name: "flags", arg: 2, scope: !9134, file: !332, line: 538, type: !348)
!9176 = !DILocation(line: 538, column: 57, scope: !9134, inlinedAt: !9135)
!9177 = !DILocalVariable(name: "index", scope: !9132, file: !332, line: 542, type: !7)
!9178 = !DILocation(line: 542, column: 16, scope: !9132, inlinedAt: !9135)
!9179 = !DILocalVariable(name: "size", arg: 1, scope: !9123, file: !332, line: 662, type: !510)
!9180 = !DILocation(line: 662, column: 36, scope: !9123)
!9181 = !DILocalVariable(name: "flags", arg: 2, scope: !9123, file: !332, line: 662, type: !348)
!9182 = !DILocation(line: 662, column: 48, scope: !9123)
!9183 = !DILocation(line: 664, column: 17, scope: !9123)
!9184 = !DILocation(line: 664, column: 23, scope: !9123)
!9185 = !DILocation(line: 664, column: 29, scope: !9123)
!9186 = !DILocation(line: 540, column: 27, scope: !9133, inlinedAt: !9135)
!9187 = !DILocation(line: 540, column: 6, scope: !9133, inlinedAt: !9135)
!9188 = !DILocation(line: 540, column: 6, scope: !9134, inlinedAt: !9135)
!9189 = !DILocation(line: 544, column: 7, scope: !9162, inlinedAt: !9135)
!9190 = !DILocation(line: 544, column: 12, scope: !9162, inlinedAt: !9135)
!9191 = !DILocation(line: 544, column: 7, scope: !9132, inlinedAt: !9135)
!9192 = !DILocation(line: 545, column: 25, scope: !9162, inlinedAt: !9135)
!9193 = !DILocation(line: 545, column: 31, scope: !9162, inlinedAt: !9135)
!9194 = !DILocation(line: 480, column: 33, scope: !9160, inlinedAt: !9161)
!9195 = !DILocation(line: 480, column: 23, scope: !9160, inlinedAt: !9161)
!9196 = !DILocation(line: 481, column: 29, scope: !9160, inlinedAt: !9161)
!9197 = !DILocation(line: 481, column: 35, scope: !9160, inlinedAt: !9161)
!9198 = !DILocation(line: 481, column: 42, scope: !9160, inlinedAt: !9161)
!9199 = !DILocation(line: 474, column: 23, scope: !9155, inlinedAt: !9159)
!9200 = !DILocation(line: 474, column: 29, scope: !9155, inlinedAt: !9159)
!9201 = !DILocation(line: 474, column: 36, scope: !9155, inlinedAt: !9159)
!9202 = !DILocation(line: 474, column: 9, scope: !9155, inlinedAt: !9159)
!9203 = !DILocation(line: 545, column: 4, scope: !9162, inlinedAt: !9135)
!9204 = !DILocation(line: 547, column: 25, scope: !9132, inlinedAt: !9135)
!9205 = !DILocation(line: 348, column: 7, scope: !9206, inlinedAt: !9153)
!9206 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 348, column: 6)
!9207 = !DILocation(line: 348, column: 6, scope: !9149, inlinedAt: !9153)
!9208 = !DILocation(line: 349, column: 3, scope: !9206, inlinedAt: !9153)
!9209 = !DILocation(line: 351, column: 6, scope: !9210, inlinedAt: !9153)
!9210 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 351, column: 6)
!9211 = !DILocation(line: 351, column: 11, scope: !9210, inlinedAt: !9153)
!9212 = !DILocation(line: 351, column: 6, scope: !9149, inlinedAt: !9153)
!9213 = !DILocation(line: 352, column: 3, scope: !9210, inlinedAt: !9153)
!9214 = !DILocation(line: 354, column: 32, scope: !9215, inlinedAt: !9153)
!9215 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 354, column: 6)
!9216 = !DILocation(line: 354, column: 37, scope: !9215, inlinedAt: !9153)
!9217 = !DILocation(line: 354, column: 42, scope: !9215, inlinedAt: !9153)
!9218 = !DILocation(line: 354, column: 45, scope: !9215, inlinedAt: !9153)
!9219 = !DILocation(line: 354, column: 50, scope: !9215, inlinedAt: !9153)
!9220 = !DILocation(line: 354, column: 6, scope: !9149, inlinedAt: !9153)
!9221 = !DILocation(line: 355, column: 3, scope: !9215, inlinedAt: !9153)
!9222 = !DILocation(line: 356, column: 32, scope: !9223, inlinedAt: !9153)
!9223 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 356, column: 6)
!9224 = !DILocation(line: 356, column: 37, scope: !9223, inlinedAt: !9153)
!9225 = !DILocation(line: 356, column: 43, scope: !9223, inlinedAt: !9153)
!9226 = !DILocation(line: 356, column: 46, scope: !9223, inlinedAt: !9153)
!9227 = !DILocation(line: 356, column: 51, scope: !9223, inlinedAt: !9153)
!9228 = !DILocation(line: 356, column: 6, scope: !9149, inlinedAt: !9153)
!9229 = !DILocation(line: 357, column: 3, scope: !9223, inlinedAt: !9153)
!9230 = !DILocation(line: 358, column: 6, scope: !9231, inlinedAt: !9153)
!9231 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 358, column: 6)
!9232 = !DILocation(line: 358, column: 11, scope: !9231, inlinedAt: !9153)
!9233 = !DILocation(line: 358, column: 6, scope: !9149, inlinedAt: !9153)
!9234 = !DILocation(line: 358, column: 26, scope: !9231, inlinedAt: !9153)
!9235 = !DILocation(line: 359, column: 6, scope: !9236, inlinedAt: !9153)
!9236 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 359, column: 6)
!9237 = !DILocation(line: 359, column: 11, scope: !9236, inlinedAt: !9153)
!9238 = !DILocation(line: 359, column: 6, scope: !9149, inlinedAt: !9153)
!9239 = !DILocation(line: 359, column: 26, scope: !9236, inlinedAt: !9153)
!9240 = !DILocation(line: 360, column: 6, scope: !9241, inlinedAt: !9153)
!9241 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 360, column: 6)
!9242 = !DILocation(line: 360, column: 11, scope: !9241, inlinedAt: !9153)
!9243 = !DILocation(line: 360, column: 6, scope: !9149, inlinedAt: !9153)
!9244 = !DILocation(line: 360, column: 26, scope: !9241, inlinedAt: !9153)
!9245 = !DILocation(line: 361, column: 6, scope: !9246, inlinedAt: !9153)
!9246 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 361, column: 6)
!9247 = !DILocation(line: 361, column: 11, scope: !9246, inlinedAt: !9153)
!9248 = !DILocation(line: 361, column: 6, scope: !9149, inlinedAt: !9153)
!9249 = !DILocation(line: 361, column: 26, scope: !9246, inlinedAt: !9153)
!9250 = !DILocation(line: 362, column: 6, scope: !9251, inlinedAt: !9153)
!9251 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 362, column: 6)
!9252 = !DILocation(line: 362, column: 11, scope: !9251, inlinedAt: !9153)
!9253 = !DILocation(line: 362, column: 6, scope: !9149, inlinedAt: !9153)
!9254 = !DILocation(line: 362, column: 26, scope: !9251, inlinedAt: !9153)
!9255 = !DILocation(line: 363, column: 6, scope: !9256, inlinedAt: !9153)
!9256 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 363, column: 6)
!9257 = !DILocation(line: 363, column: 11, scope: !9256, inlinedAt: !9153)
!9258 = !DILocation(line: 363, column: 6, scope: !9149, inlinedAt: !9153)
!9259 = !DILocation(line: 363, column: 26, scope: !9256, inlinedAt: !9153)
!9260 = !DILocation(line: 364, column: 6, scope: !9261, inlinedAt: !9153)
!9261 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 364, column: 6)
!9262 = !DILocation(line: 364, column: 11, scope: !9261, inlinedAt: !9153)
!9263 = !DILocation(line: 364, column: 6, scope: !9149, inlinedAt: !9153)
!9264 = !DILocation(line: 364, column: 26, scope: !9261, inlinedAt: !9153)
!9265 = !DILocation(line: 365, column: 6, scope: !9266, inlinedAt: !9153)
!9266 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 365, column: 6)
!9267 = !DILocation(line: 365, column: 11, scope: !9266, inlinedAt: !9153)
!9268 = !DILocation(line: 365, column: 6, scope: !9149, inlinedAt: !9153)
!9269 = !DILocation(line: 365, column: 26, scope: !9266, inlinedAt: !9153)
!9270 = !DILocation(line: 366, column: 6, scope: !9271, inlinedAt: !9153)
!9271 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 366, column: 6)
!9272 = !DILocation(line: 366, column: 11, scope: !9271, inlinedAt: !9153)
!9273 = !DILocation(line: 366, column: 6, scope: !9149, inlinedAt: !9153)
!9274 = !DILocation(line: 366, column: 26, scope: !9271, inlinedAt: !9153)
!9275 = !DILocation(line: 367, column: 6, scope: !9276, inlinedAt: !9153)
!9276 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 367, column: 6)
!9277 = !DILocation(line: 367, column: 11, scope: !9276, inlinedAt: !9153)
!9278 = !DILocation(line: 367, column: 6, scope: !9149, inlinedAt: !9153)
!9279 = !DILocation(line: 367, column: 26, scope: !9276, inlinedAt: !9153)
!9280 = !DILocation(line: 368, column: 6, scope: !9281, inlinedAt: !9153)
!9281 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 368, column: 6)
!9282 = !DILocation(line: 368, column: 11, scope: !9281, inlinedAt: !9153)
!9283 = !DILocation(line: 368, column: 6, scope: !9149, inlinedAt: !9153)
!9284 = !DILocation(line: 368, column: 26, scope: !9281, inlinedAt: !9153)
!9285 = !DILocation(line: 369, column: 6, scope: !9286, inlinedAt: !9153)
!9286 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 369, column: 6)
!9287 = !DILocation(line: 369, column: 11, scope: !9286, inlinedAt: !9153)
!9288 = !DILocation(line: 369, column: 6, scope: !9149, inlinedAt: !9153)
!9289 = !DILocation(line: 369, column: 26, scope: !9286, inlinedAt: !9153)
!9290 = !DILocation(line: 370, column: 6, scope: !9291, inlinedAt: !9153)
!9291 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 370, column: 6)
!9292 = !DILocation(line: 370, column: 11, scope: !9291, inlinedAt: !9153)
!9293 = !DILocation(line: 370, column: 6, scope: !9149, inlinedAt: !9153)
!9294 = !DILocation(line: 370, column: 26, scope: !9291, inlinedAt: !9153)
!9295 = !DILocation(line: 371, column: 6, scope: !9296, inlinedAt: !9153)
!9296 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 371, column: 6)
!9297 = !DILocation(line: 371, column: 11, scope: !9296, inlinedAt: !9153)
!9298 = !DILocation(line: 371, column: 6, scope: !9149, inlinedAt: !9153)
!9299 = !DILocation(line: 371, column: 26, scope: !9296, inlinedAt: !9153)
!9300 = !DILocation(line: 372, column: 6, scope: !9301, inlinedAt: !9153)
!9301 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 372, column: 6)
!9302 = !DILocation(line: 372, column: 11, scope: !9301, inlinedAt: !9153)
!9303 = !DILocation(line: 372, column: 6, scope: !9149, inlinedAt: !9153)
!9304 = !DILocation(line: 372, column: 26, scope: !9301, inlinedAt: !9153)
!9305 = !DILocation(line: 373, column: 6, scope: !9306, inlinedAt: !9153)
!9306 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 373, column: 6)
!9307 = !DILocation(line: 373, column: 11, scope: !9306, inlinedAt: !9153)
!9308 = !DILocation(line: 373, column: 6, scope: !9149, inlinedAt: !9153)
!9309 = !DILocation(line: 373, column: 26, scope: !9306, inlinedAt: !9153)
!9310 = !DILocation(line: 374, column: 6, scope: !9311, inlinedAt: !9153)
!9311 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 374, column: 6)
!9312 = !DILocation(line: 374, column: 11, scope: !9311, inlinedAt: !9153)
!9313 = !DILocation(line: 374, column: 6, scope: !9149, inlinedAt: !9153)
!9314 = !DILocation(line: 374, column: 26, scope: !9311, inlinedAt: !9153)
!9315 = !DILocation(line: 375, column: 6, scope: !9316, inlinedAt: !9153)
!9316 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 375, column: 6)
!9317 = !DILocation(line: 375, column: 11, scope: !9316, inlinedAt: !9153)
!9318 = !DILocation(line: 375, column: 6, scope: !9149, inlinedAt: !9153)
!9319 = !DILocation(line: 375, column: 27, scope: !9316, inlinedAt: !9153)
!9320 = !DILocation(line: 376, column: 6, scope: !9321, inlinedAt: !9153)
!9321 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 376, column: 6)
!9322 = !DILocation(line: 376, column: 11, scope: !9321, inlinedAt: !9153)
!9323 = !DILocation(line: 376, column: 6, scope: !9149, inlinedAt: !9153)
!9324 = !DILocation(line: 376, column: 32, scope: !9321, inlinedAt: !9153)
!9325 = !DILocation(line: 377, column: 6, scope: !9326, inlinedAt: !9153)
!9326 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 377, column: 6)
!9327 = !DILocation(line: 377, column: 11, scope: !9326, inlinedAt: !9153)
!9328 = !DILocation(line: 377, column: 6, scope: !9149, inlinedAt: !9153)
!9329 = !DILocation(line: 377, column: 32, scope: !9326, inlinedAt: !9153)
!9330 = !DILocation(line: 378, column: 6, scope: !9331, inlinedAt: !9153)
!9331 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 378, column: 6)
!9332 = !DILocation(line: 378, column: 11, scope: !9331, inlinedAt: !9153)
!9333 = !DILocation(line: 378, column: 6, scope: !9149, inlinedAt: !9153)
!9334 = !DILocation(line: 378, column: 32, scope: !9331, inlinedAt: !9153)
!9335 = !DILocation(line: 379, column: 6, scope: !9336, inlinedAt: !9153)
!9336 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 379, column: 6)
!9337 = !DILocation(line: 379, column: 11, scope: !9336, inlinedAt: !9153)
!9338 = !DILocation(line: 379, column: 6, scope: !9149, inlinedAt: !9153)
!9339 = !DILocation(line: 379, column: 33, scope: !9336, inlinedAt: !9153)
!9340 = !DILocation(line: 380, column: 6, scope: !9341, inlinedAt: !9153)
!9341 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 380, column: 6)
!9342 = !DILocation(line: 380, column: 11, scope: !9341, inlinedAt: !9153)
!9343 = !DILocation(line: 380, column: 6, scope: !9149, inlinedAt: !9153)
!9344 = !DILocation(line: 380, column: 33, scope: !9341, inlinedAt: !9153)
!9345 = !DILocation(line: 381, column: 6, scope: !9346, inlinedAt: !9153)
!9346 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 381, column: 6)
!9347 = !DILocation(line: 381, column: 11, scope: !9346, inlinedAt: !9153)
!9348 = !DILocation(line: 381, column: 6, scope: !9149, inlinedAt: !9153)
!9349 = !DILocation(line: 381, column: 33, scope: !9346, inlinedAt: !9153)
!9350 = !DILocation(line: 382, column: 2, scope: !9351, inlinedAt: !9153)
!9351 = distinct !DILexicalBlock(scope: !9352, file: !332, line: 382, column: 2)
!9352 = distinct !DILexicalBlock(scope: !9149, file: !332, line: 382, column: 2)
!9353 = !{i32 -2141932346, i32 -2141932317, i32 -2141932271, i32 -2141932213, i32 -2141932159, i32 -2141932105, i32 -2141932050, i32 -2141932019}
!9354 = !DILocation(line: 382, column: 2, scope: !9355, inlinedAt: !9153)
!9355 = distinct !DILexicalBlock(scope: !9356, file: !332, line: 382, column: 2)
!9356 = distinct !DILexicalBlock(scope: !9352, file: !332, line: 382, column: 2)
!9357 = !{i32 -2141931576, i32 -2141931569, i32 -2141931515, i32 -2141931484, i32 -2141931454}
!9358 = !DILocation(line: 382, column: 2, scope: !9356, inlinedAt: !9153)
!9359 = !DILocation(line: 386, column: 1, scope: !9149, inlinedAt: !9153)
!9360 = !DILocation(line: 547, column: 9, scope: !9132, inlinedAt: !9135)
!9361 = !DILocation(line: 549, column: 8, scope: !9362, inlinedAt: !9135)
!9362 = distinct !DILexicalBlock(scope: !9132, file: !332, line: 549, column: 7)
!9363 = !DILocation(line: 549, column: 7, scope: !9132, inlinedAt: !9135)
!9364 = !DILocation(line: 550, column: 4, scope: !9362, inlinedAt: !9135)
!9365 = !DILocation(line: 553, column: 33, scope: !9132, inlinedAt: !9135)
!9366 = !DILocation(line: 325, column: 6, scope: !9367, inlinedAt: !9147)
!9367 = distinct !DILexicalBlock(scope: !9143, file: !332, line: 325, column: 6)
!9368 = !DILocation(line: 325, column: 6, scope: !9143, inlinedAt: !9147)
!9369 = !DILocation(line: 326, column: 3, scope: !9367, inlinedAt: !9147)
!9370 = !DILocation(line: 332, column: 9, scope: !9143, inlinedAt: !9147)
!9371 = !DILocation(line: 332, column: 15, scope: !9143, inlinedAt: !9147)
!9372 = !DILocation(line: 332, column: 2, scope: !9143, inlinedAt: !9147)
!9373 = !DILocation(line: 336, column: 1, scope: !9143, inlinedAt: !9147)
!9374 = !DILocation(line: 553, column: 5, scope: !9132, inlinedAt: !9135)
!9375 = !DILocation(line: 553, column: 41, scope: !9132, inlinedAt: !9135)
!9376 = !DILocation(line: 554, column: 5, scope: !9132, inlinedAt: !9135)
!9377 = !DILocation(line: 554, column: 12, scope: !9132, inlinedAt: !9135)
!9378 = !DILocation(line: 448, column: 31, scope: !9127, inlinedAt: !9131)
!9379 = !DILocation(line: 448, column: 34, scope: !9127, inlinedAt: !9131)
!9380 = !DILocation(line: 448, column: 14, scope: !9127, inlinedAt: !9131)
!9381 = !DILocation(line: 450, column: 22, scope: !9127, inlinedAt: !9131)
!9382 = !DILocation(line: 450, column: 25, scope: !9127, inlinedAt: !9131)
!9383 = !DILocation(line: 450, column: 30, scope: !9127, inlinedAt: !9131)
!9384 = !DILocation(line: 450, column: 36, scope: !9127, inlinedAt: !9131)
!9385 = !DILocation(line: 450, column: 8, scope: !9127, inlinedAt: !9131)
!9386 = !DILocation(line: 450, column: 6, scope: !9127, inlinedAt: !9131)
!9387 = !DILocation(line: 451, column: 9, scope: !9127, inlinedAt: !9131)
!9388 = !DILocation(line: 552, column: 3, scope: !9132, inlinedAt: !9135)
!9389 = !DILocation(line: 557, column: 19, scope: !9134, inlinedAt: !9135)
!9390 = !DILocation(line: 557, column: 25, scope: !9134, inlinedAt: !9135)
!9391 = !DILocation(line: 557, column: 9, scope: !9134, inlinedAt: !9135)
!9392 = !DILocation(line: 557, column: 2, scope: !9134, inlinedAt: !9135)
!9393 = !DILocation(line: 558, column: 1, scope: !9134, inlinedAt: !9135)
!9394 = !DILocation(line: 664, column: 2, scope: !9123)
!9395 = distinct !DISubprogram(name: "__ab_c_size", scope: !9396, file: !9396, line: 301, type: !9397, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9396 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!9397 = !DISubroutineType(types: !9398)
!9398 = !{!510, !510, !510, !510}
!9399 = !DILocalVariable(name: "a", arg: 1, scope: !9395, file: !9396, line: 301, type: !510)
!9400 = !DILocation(line: 301, column: 54, scope: !9395)
!9401 = !DILocalVariable(name: "b", arg: 2, scope: !9395, file: !9396, line: 301, type: !510)
!9402 = !DILocation(line: 301, column: 64, scope: !9395)
!9403 = !DILocalVariable(name: "c", arg: 3, scope: !9395, file: !9396, line: 301, type: !510)
!9404 = !DILocation(line: 301, column: 74, scope: !9395)
!9405 = !DILocalVariable(name: "bytes", scope: !9395, file: !9396, line: 303, type: !510)
!9406 = !DILocation(line: 303, column: 9, scope: !9395)
!9407 = !DILocalVariable(name: "__a", scope: !9408, file: !9396, line: 305, type: !510)
!9408 = distinct !DILexicalBlock(scope: !9409, file: !9396, line: 305, column: 6)
!9409 = distinct !DILexicalBlock(scope: !9395, file: !9396, line: 305, column: 6)
!9410 = !DILocation(line: 305, column: 6, scope: !9408)
!9411 = !DILocalVariable(name: "__b", scope: !9408, file: !9396, line: 305, type: !510)
!9412 = !DILocalVariable(name: "__d", scope: !9408, file: !9396, line: 305, type: !4186)
!9413 = !DILocation(line: 305, column: 6, scope: !9409)
!9414 = !DILocation(line: 305, column: 6, scope: !9395)
!9415 = !DILocation(line: 306, column: 3, scope: !9409)
!9416 = !DILocalVariable(name: "__a", scope: !9417, file: !9396, line: 307, type: !510)
!9417 = distinct !DILexicalBlock(scope: !9418, file: !9396, line: 307, column: 6)
!9418 = distinct !DILexicalBlock(scope: !9395, file: !9396, line: 307, column: 6)
!9419 = !DILocation(line: 307, column: 6, scope: !9417)
!9420 = !DILocalVariable(name: "__b", scope: !9417, file: !9396, line: 307, type: !510)
!9421 = !DILocalVariable(name: "__d", scope: !9417, file: !9396, line: 307, type: !4186)
!9422 = !DILocation(line: 307, column: 6, scope: !9418)
!9423 = !DILocation(line: 307, column: 6, scope: !9395)
!9424 = !DILocation(line: 308, column: 3, scope: !9418)
!9425 = !DILocation(line: 310, column: 9, scope: !9395)
!9426 = !DILocation(line: 310, column: 2, scope: !9395)
!9427 = !DILocation(line: 311, column: 1, scope: !9395)
!9428 = distinct !DISubprogram(name: "omap_dma_fill_type2_desc", scope: !3, file: !3, line: 266, type: !9429, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9429 = !DISubroutineType(types: !9430)
!9430 = !{null, !4459, !378, !135, !396}
!9431 = !DILocalVariable(name: "d", arg: 1, scope: !9428, file: !3, line: 266, type: !4459)
!9432 = !DILocation(line: 266, column: 56, scope: !9428)
!9433 = !DILocalVariable(name: "idx", arg: 2, scope: !9428, file: !3, line: 266, type: !378)
!9434 = !DILocation(line: 266, column: 63, scope: !9428)
!9435 = !DILocalVariable(name: "dir", arg: 3, scope: !9428, file: !3, line: 267, type: !135)
!9436 = !DILocation(line: 267, column: 38, scope: !9428)
!9437 = !DILocalVariable(name: "last", arg: 4, scope: !9428, file: !3, line: 267, type: !396)
!9438 = !DILocation(line: 267, column: 48, scope: !9428)
!9439 = !DILocalVariable(name: "sg", scope: !9428, file: !3, line: 269, type: !6042)
!9440 = !DILocation(line: 269, column: 18, scope: !9428)
!9441 = !DILocation(line: 269, column: 24, scope: !9428)
!9442 = !DILocation(line: 269, column: 27, scope: !9428)
!9443 = !DILocation(line: 269, column: 30, scope: !9428)
!9444 = !DILocalVariable(name: "t2_desc", scope: !9428, file: !3, line: 270, type: !4488)
!9445 = !DILocation(line: 270, column: 26, scope: !9428)
!9446 = !DILocation(line: 270, column: 36, scope: !9428)
!9447 = !DILocation(line: 270, column: 40, scope: !9428)
!9448 = !DILocation(line: 272, column: 6, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 272, column: 6)
!9450 = !DILocation(line: 272, column: 6, scope: !9428)
!9451 = !DILocation(line: 273, column: 39, scope: !9449)
!9452 = !DILocation(line: 273, column: 43, scope: !9449)
!9453 = !DILocation(line: 273, column: 3, scope: !9449)
!9454 = !DILocation(line: 273, column: 6, scope: !9449)
!9455 = !DILocation(line: 273, column: 9, scope: !9449)
!9456 = !DILocation(line: 273, column: 13, scope: !9449)
!9457 = !DILocation(line: 273, column: 18, scope: !9449)
!9458 = !DILocation(line: 273, column: 27, scope: !9449)
!9459 = !DILocation(line: 273, column: 37, scope: !9449)
!9460 = !DILocation(line: 274, column: 6, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 274, column: 6)
!9462 = !DILocation(line: 274, column: 6, scope: !9428)
!9463 = !DILocation(line: 275, column: 3, scope: !9461)
!9464 = !DILocation(line: 275, column: 12, scope: !9461)
!9465 = !DILocation(line: 275, column: 22, scope: !9461)
!9466 = !DILocation(line: 277, column: 16, scope: !9428)
!9467 = !DILocation(line: 277, column: 20, scope: !9428)
!9468 = !DILocation(line: 277, column: 2, scope: !9428)
!9469 = !DILocation(line: 277, column: 11, scope: !9428)
!9470 = !DILocation(line: 277, column: 14, scope: !9428)
!9471 = !DILocation(line: 278, column: 18, scope: !9428)
!9472 = !DILocation(line: 278, column: 22, scope: !9428)
!9473 = !DILocation(line: 278, column: 2, scope: !9428)
!9474 = !DILocation(line: 278, column: 11, scope: !9428)
!9475 = !DILocation(line: 278, column: 16, scope: !9428)
!9476 = !DILocation(line: 279, column: 16, scope: !9428)
!9477 = !DILocation(line: 279, column: 20, scope: !9428)
!9478 = !DILocation(line: 279, column: 23, scope: !9428)
!9479 = !DILocation(line: 279, column: 2, scope: !9428)
!9480 = !DILocation(line: 279, column: 11, scope: !9428)
!9481 = !DILocation(line: 279, column: 14, scope: !9428)
!9482 = !DILocation(line: 280, column: 18, scope: !9428)
!9483 = !DILocation(line: 280, column: 21, scope: !9428)
!9484 = !DILocation(line: 280, column: 2, scope: !9428)
!9485 = !DILocation(line: 280, column: 11, scope: !9428)
!9486 = !DILocation(line: 280, column: 16, scope: !9428)
!9487 = !DILocation(line: 281, column: 7, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 281, column: 6)
!9489 = !DILocation(line: 281, column: 6, scope: !9428)
!9490 = !DILocation(line: 282, column: 3, scope: !9488)
!9491 = !DILocation(line: 282, column: 12, scope: !9488)
!9492 = !DILocation(line: 282, column: 17, scope: !9488)
!9493 = !DILocation(line: 284, column: 10, scope: !9428)
!9494 = !DILocation(line: 284, column: 2, scope: !9428)
!9495 = !DILocation(line: 286, column: 19, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 284, column: 15)
!9497 = !DILocation(line: 286, column: 23, scope: !9496)
!9498 = !DILocation(line: 286, column: 3, scope: !9496)
!9499 = !DILocation(line: 286, column: 12, scope: !9496)
!9500 = !DILocation(line: 286, column: 17, scope: !9496)
!9501 = !DILocation(line: 287, column: 19, scope: !9496)
!9502 = !DILocation(line: 287, column: 22, scope: !9496)
!9503 = !DILocation(line: 287, column: 3, scope: !9496)
!9504 = !DILocation(line: 287, column: 12, scope: !9496)
!9505 = !DILocation(line: 287, column: 17, scope: !9496)
!9506 = !DILocation(line: 288, column: 19, scope: !9496)
!9507 = !DILocation(line: 288, column: 23, scope: !9496)
!9508 = !DILocation(line: 288, column: 3, scope: !9496)
!9509 = !DILocation(line: 288, column: 12, scope: !9496)
!9510 = !DILocation(line: 288, column: 17, scope: !9496)
!9511 = !DILocation(line: 289, column: 19, scope: !9496)
!9512 = !DILocation(line: 289, column: 22, scope: !9496)
!9513 = !DILocation(line: 289, column: 3, scope: !9496)
!9514 = !DILocation(line: 289, column: 12, scope: !9496)
!9515 = !DILocation(line: 289, column: 17, scope: !9496)
!9516 = !DILocation(line: 291, column: 3, scope: !9496)
!9517 = !DILocation(line: 291, column: 12, scope: !9496)
!9518 = !DILocation(line: 291, column: 15, scope: !9496)
!9519 = !DILocation(line: 292, column: 3, scope: !9496)
!9520 = !DILocation(line: 292, column: 12, scope: !9496)
!9521 = !DILocation(line: 292, column: 15, scope: !9496)
!9522 = !DILocation(line: 293, column: 3, scope: !9496)
!9523 = !DILocation(line: 295, column: 19, scope: !9496)
!9524 = !DILocation(line: 295, column: 22, scope: !9496)
!9525 = !DILocation(line: 295, column: 3, scope: !9496)
!9526 = !DILocation(line: 295, column: 12, scope: !9496)
!9527 = !DILocation(line: 295, column: 17, scope: !9496)
!9528 = !DILocation(line: 296, column: 19, scope: !9496)
!9529 = !DILocation(line: 296, column: 23, scope: !9496)
!9530 = !DILocation(line: 296, column: 3, scope: !9496)
!9531 = !DILocation(line: 296, column: 12, scope: !9496)
!9532 = !DILocation(line: 296, column: 17, scope: !9496)
!9533 = !DILocation(line: 297, column: 19, scope: !9496)
!9534 = !DILocation(line: 297, column: 22, scope: !9496)
!9535 = !DILocation(line: 297, column: 3, scope: !9496)
!9536 = !DILocation(line: 297, column: 12, scope: !9496)
!9537 = !DILocation(line: 297, column: 17, scope: !9496)
!9538 = !DILocation(line: 298, column: 19, scope: !9496)
!9539 = !DILocation(line: 298, column: 23, scope: !9496)
!9540 = !DILocation(line: 298, column: 3, scope: !9496)
!9541 = !DILocation(line: 298, column: 12, scope: !9496)
!9542 = !DILocation(line: 298, column: 17, scope: !9496)
!9543 = !DILocation(line: 300, column: 3, scope: !9496)
!9544 = !DILocation(line: 300, column: 12, scope: !9496)
!9545 = !DILocation(line: 300, column: 15, scope: !9496)
!9546 = !DILocation(line: 301, column: 3, scope: !9496)
!9547 = !DILocation(line: 301, column: 12, scope: !9496)
!9548 = !DILocation(line: 301, column: 15, scope: !9496)
!9549 = !DILocation(line: 302, column: 3, scope: !9496)
!9550 = !DILocation(line: 304, column: 3, scope: !9496)
!9551 = !DILocation(line: 307, column: 2, scope: !9428)
!9552 = !DILocation(line: 307, column: 11, scope: !9428)
!9553 = !DILocation(line: 307, column: 14, scope: !9428)
!9554 = !DILocation(line: 308, column: 1, scope: !9428)
!9555 = distinct !DISubprogram(name: "vchan_tx_prep", scope: !4409, file: !4409, line: 56, type: !9556, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9556 = !DISubroutineType(types: !9557)
!9557 = !{!4131, !4502, !4436, !350}
!9558 = !DILocation(line: 407, column: 64, scope: !5491, inlinedAt: !9559)
!9559 = distinct !DILocation(line: 71, column: 2, scope: !9555)
!9560 = !DILocation(line: 407, column: 84, scope: !5491, inlinedAt: !9559)
!9561 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !9562)
!9562 = distinct !DILocation(line: 69, column: 2, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9564, file: !4409, line: 69, column: 2)
!9564 = distinct !DILexicalBlock(scope: !9565, file: !4409, line: 69, column: 2)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !4409, line: 69, column: 2)
!9566 = distinct !DILexicalBlock(scope: !9567, file: !4409, line: 69, column: 2)
!9567 = distinct !DILexicalBlock(scope: !9555, file: !4409, line: 69, column: 2)
!9568 = !DILocalVariable(name: "vc", arg: 1, scope: !9555, file: !4409, line: 56, type: !4502)
!9569 = !DILocation(line: 56, column: 83, scope: !9555)
!9570 = !DILocalVariable(name: "vd", arg: 2, scope: !9555, file: !4409, line: 57, type: !4436)
!9571 = !DILocation(line: 57, column: 24, scope: !9555)
!9572 = !DILocalVariable(name: "tx_flags", arg: 3, scope: !9555, file: !4409, line: 57, type: !350)
!9573 = !DILocation(line: 57, column: 42, scope: !9555)
!9574 = !DILocalVariable(name: "flags", scope: !9555, file: !4409, line: 59, type: !350)
!9575 = !DILocation(line: 59, column: 16, scope: !9555)
!9576 = !DILocation(line: 61, column: 32, scope: !9555)
!9577 = !DILocation(line: 61, column: 36, scope: !9555)
!9578 = !DILocation(line: 61, column: 41, scope: !9555)
!9579 = !DILocation(line: 61, column: 45, scope: !9555)
!9580 = !DILocation(line: 61, column: 2, scope: !9555)
!9581 = !DILocation(line: 62, column: 17, scope: !9555)
!9582 = !DILocation(line: 62, column: 2, scope: !9555)
!9583 = !DILocation(line: 62, column: 6, scope: !9555)
!9584 = !DILocation(line: 62, column: 9, scope: !9555)
!9585 = !DILocation(line: 62, column: 15, scope: !9555)
!9586 = !DILocation(line: 63, column: 2, scope: !9555)
!9587 = !DILocation(line: 63, column: 6, scope: !9555)
!9588 = !DILocation(line: 63, column: 9, scope: !9555)
!9589 = !DILocation(line: 63, column: 19, scope: !9555)
!9590 = !DILocation(line: 64, column: 2, scope: !9555)
!9591 = !DILocation(line: 64, column: 6, scope: !9555)
!9592 = !DILocation(line: 64, column: 9, scope: !9555)
!9593 = !DILocation(line: 64, column: 19, scope: !9555)
!9594 = !DILocation(line: 66, column: 2, scope: !9555)
!9595 = !DILocation(line: 66, column: 6, scope: !9555)
!9596 = !DILocation(line: 66, column: 16, scope: !9555)
!9597 = !DILocation(line: 66, column: 23, scope: !9555)
!9598 = !DILocation(line: 67, column: 2, scope: !9555)
!9599 = !DILocation(line: 67, column: 6, scope: !9555)
!9600 = !DILocation(line: 67, column: 16, scope: !9555)
!9601 = !DILocation(line: 67, column: 24, scope: !9555)
!9602 = !DILocation(line: 69, column: 2, scope: !9555)
!9603 = !DILocation(line: 69, column: 2, scope: !9567)
!9604 = !DILocalVariable(name: "__dummy", scope: !9605, file: !4409, line: 69, type: !350)
!9605 = distinct !DILexicalBlock(scope: !9566, file: !4409, line: 69, column: 2)
!9606 = !DILocation(line: 69, column: 2, scope: !9605)
!9607 = !DILocalVariable(name: "__dummy2", scope: !9605, file: !4409, line: 69, type: !350)
!9608 = !DILocation(line: 69, column: 2, scope: !9566)
!9609 = !DILocation(line: 69, column: 2, scope: !9565)
!9610 = !DILocation(line: 69, column: 2, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9565, file: !4409, line: 69, column: 2)
!9612 = !DILocalVariable(name: "__dummy", scope: !9613, file: !4409, line: 69, type: !350)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !4409, line: 69, column: 2)
!9614 = distinct !DILexicalBlock(scope: !9611, file: !4409, line: 69, column: 2)
!9615 = !DILocation(line: 69, column: 2, scope: !9613)
!9616 = !DILocalVariable(name: "__dummy2", scope: !9613, file: !4409, line: 69, type: !350)
!9617 = !DILocation(line: 69, column: 2, scope: !9614)
!9618 = !DILocation(line: 69, column: 2, scope: !9564)
!9619 = !{i32 -2141765536}
!9620 = !DILocation(line: 69, column: 2, scope: !9563)
!9621 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !9562)
!9622 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !9562)
!9623 = !DILocation(line: 70, column: 17, scope: !9555)
!9624 = !DILocation(line: 70, column: 21, scope: !9555)
!9625 = !DILocation(line: 70, column: 28, scope: !9555)
!9626 = !DILocation(line: 70, column: 32, scope: !9555)
!9627 = !DILocation(line: 70, column: 2, scope: !9555)
!9628 = !DILocation(line: 71, column: 26, scope: !9555)
!9629 = !DILocation(line: 71, column: 30, scope: !9555)
!9630 = !DILocation(line: 71, column: 36, scope: !9555)
!9631 = !DILocation(line: 409, column: 2, scope: !5673, inlinedAt: !9559)
!9632 = !DILocation(line: 409, column: 2, scope: !5678, inlinedAt: !9559)
!9633 = !DILocation(line: 409, column: 2, scope: !5679, inlinedAt: !9559)
!9634 = !DILocation(line: 409, column: 2, scope: !5686, inlinedAt: !9559)
!9635 = !DILocation(line: 409, column: 2, scope: !5689, inlinedAt: !9559)
!9636 = !DILocation(line: 73, column: 10, scope: !9555)
!9637 = !DILocation(line: 73, column: 14, scope: !9555)
!9638 = !DILocation(line: 73, column: 2, scope: !9555)
!9639 = distinct !DISubprogram(name: "get_order", scope: !9640, file: !9640, line: 29, type: !9641, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9640 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!9641 = !DISubroutineType(types: !9642)
!9642 = !{!378, !350}
!9643 = !DILocalVariable(name: "x", arg: 1, scope: !9644, file: !6346, line: 366, type: !610)
!9644 = distinct !DISubprogram(name: "fls64", scope: !6346, file: !6346, line: 366, type: !9645, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9645 = !DISubroutineType(types: !9646)
!9646 = !{!378, !610}
!9647 = !DILocation(line: 366, column: 40, scope: !9644, inlinedAt: !9648)
!9648 = distinct !DILocation(line: 46, column: 9, scope: !9639)
!9649 = !DILocalVariable(name: "bitpos", scope: !9644, file: !6346, line: 368, type: !378)
!9650 = !DILocation(line: 368, column: 6, scope: !9644, inlinedAt: !9648)
!9651 = !DILocalVariable(name: "size", arg: 1, scope: !9639, file: !9640, line: 29, type: !350)
!9652 = !DILocation(line: 29, column: 63, scope: !9639)
!9653 = !DILocation(line: 31, column: 27, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9639, file: !9640, line: 31, column: 6)
!9655 = !DILocation(line: 31, column: 6, scope: !9654)
!9656 = !DILocation(line: 31, column: 6, scope: !9639)
!9657 = !DILocation(line: 32, column: 8, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !9640, line: 32, column: 7)
!9659 = distinct !DILexicalBlock(scope: !9654, file: !9640, line: 31, column: 34)
!9660 = !DILocation(line: 32, column: 7, scope: !9659)
!9661 = !DILocation(line: 33, column: 4, scope: !9658)
!9662 = !DILocation(line: 35, column: 7, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9659, file: !9640, line: 35, column: 7)
!9664 = !DILocation(line: 35, column: 12, scope: !9663)
!9665 = !DILocation(line: 35, column: 7, scope: !9659)
!9666 = !DILocation(line: 36, column: 4, scope: !9663)
!9667 = !DILocation(line: 38, column: 10, scope: !9659)
!9668 = !DILocation(line: 38, column: 28, scope: !9659)
!9669 = !DILocation(line: 38, column: 41, scope: !9659)
!9670 = !DILocation(line: 38, column: 3, scope: !9659)
!9671 = !DILocation(line: 41, column: 6, scope: !9639)
!9672 = !DILocation(line: 42, column: 7, scope: !9639)
!9673 = !DILocation(line: 46, column: 15, scope: !9639)
!9674 = !DILocation(line: 374, column: 2, scope: !9644, inlinedAt: !9648)
!9675 = !DILocation(line: 376, column: 14, scope: !9644, inlinedAt: !9648)
!9676 = !{i32 289406}
!9677 = !DILocation(line: 377, column: 9, scope: !9644, inlinedAt: !9648)
!9678 = !DILocation(line: 377, column: 16, scope: !9644, inlinedAt: !9648)
!9679 = !DILocation(line: 46, column: 2, scope: !9639)
!9680 = !DILocation(line: 48, column: 1, scope: !9639)
!9681 = distinct !DISubprogram(name: "__ilog2_u64", scope: !9682, file: !9682, line: 30, type: !9683, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9682 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!9683 = !DISubroutineType(types: !9684)
!9684 = !{!378, !609}
!9685 = !DILocation(line: 366, column: 40, scope: !9644, inlinedAt: !9686)
!9686 = distinct !DILocation(line: 32, column: 9, scope: !9681)
!9687 = !DILocation(line: 368, column: 6, scope: !9644, inlinedAt: !9686)
!9688 = !DILocalVariable(name: "n", arg: 1, scope: !9681, file: !9682, line: 30, type: !609)
!9689 = !DILocation(line: 30, column: 21, scope: !9681)
!9690 = !DILocation(line: 32, column: 15, scope: !9681)
!9691 = !DILocation(line: 374, column: 2, scope: !9644, inlinedAt: !9686)
!9692 = !DILocation(line: 376, column: 14, scope: !9644, inlinedAt: !9686)
!9693 = !DILocation(line: 377, column: 9, scope: !9644, inlinedAt: !9686)
!9694 = !DILocation(line: 377, column: 16, scope: !9644, inlinedAt: !9686)
!9695 = !DILocation(line: 32, column: 18, scope: !9681)
!9696 = !DILocation(line: 32, column: 2, scope: !9681)
!9697 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !9698, file: !9698, line: 137, type: !9699, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9698 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!9699 = !DISubroutineType(types: !9700)
!9700 = !{!351, !1157, !2341, !510, !348}
!9701 = !DILocalVariable(name: "s", arg: 1, scope: !9697, file: !9698, line: 137, type: !1157)
!9702 = !DILocation(line: 137, column: 54, scope: !9697)
!9703 = !DILocalVariable(name: "object", arg: 2, scope: !9697, file: !9698, line: 137, type: !2341)
!9704 = !DILocation(line: 137, column: 69, scope: !9697)
!9705 = !DILocalVariable(name: "size", arg: 3, scope: !9697, file: !9698, line: 138, type: !510)
!9706 = !DILocation(line: 138, column: 12, scope: !9697)
!9707 = !DILocalVariable(name: "flags", arg: 4, scope: !9697, file: !9698, line: 138, type: !348)
!9708 = !DILocation(line: 138, column: 24, scope: !9697)
!9709 = !DILocation(line: 140, column: 17, scope: !9697)
!9710 = !DILocation(line: 140, column: 2, scope: !9697)
!9711 = distinct !DISubprogram(name: "__must_check_overflow", scope: !9396, file: !9396, line: 52, type: !9712, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9712 = !DISubroutineType(types: !9713)
!9713 = !{!396, !396}
!9714 = !DILocalVariable(name: "overflow", arg: 1, scope: !9711, file: !9396, line: 52, type: !396)
!9715 = !DILocation(line: 52, column: 60, scope: !9711)
!9716 = !DILocation(line: 54, column: 9, scope: !9711)
!9717 = !DILocation(line: 54, column: 2, scope: !9711)
!9718 = distinct !DISubprogram(name: "is_slave_direction", scope: !94, file: !94, line: 950, type: !9719, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9719 = !DISubroutineType(types: !9720)
!9720 = !{!396, !135}
!9721 = !DILocalVariable(name: "direction", arg: 1, scope: !9718, file: !94, line: 950, type: !135)
!9722 = !DILocation(line: 950, column: 67, scope: !9718)
!9723 = !DILocation(line: 952, column: 10, scope: !9718)
!9724 = !DILocation(line: 952, column: 20, scope: !9718)
!9725 = !DILocation(line: 952, column: 39, scope: !9718)
!9726 = !DILocation(line: 952, column: 43, scope: !9718)
!9727 = !DILocation(line: 952, column: 53, scope: !9718)
!9728 = !DILocation(line: 952, column: 2, scope: !9718)
!9729 = distinct !DISubprogram(name: "dmaengine_get_src_icg", scope: !94, file: !94, line: 1307, type: !9730, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9730 = !DISubroutineType(types: !9731)
!9731 = !{!510, !4242, !9732}
!9732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64)
!9733 = !DILocalVariable(name: "xt", arg: 1, scope: !9729, file: !94, line: 1307, type: !4242)
!9734 = !DILocation(line: 1307, column: 77, scope: !9729)
!9735 = !DILocalVariable(name: "chunk", arg: 2, scope: !9729, file: !94, line: 1308, type: !9732)
!9736 = !DILocation(line: 1308, column: 28, scope: !9729)
!9737 = !DILocation(line: 1310, column: 27, scope: !9729)
!9738 = !DILocation(line: 1310, column: 31, scope: !9729)
!9739 = !DILocation(line: 1310, column: 40, scope: !9729)
!9740 = !DILocation(line: 1310, column: 44, scope: !9729)
!9741 = !DILocation(line: 1311, column: 6, scope: !9729)
!9742 = !DILocation(line: 1311, column: 13, scope: !9729)
!9743 = !DILocation(line: 1311, column: 18, scope: !9729)
!9744 = !DILocation(line: 1311, column: 25, scope: !9729)
!9745 = !DILocation(line: 1310, column: 9, scope: !9729)
!9746 = !DILocation(line: 1310, column: 2, scope: !9729)
!9747 = distinct !DISubprogram(name: "dmaengine_get_dst_icg", scope: !94, file: !94, line: 1300, type: !9730, scopeLine: 1302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9748 = !DILocalVariable(name: "xt", arg: 1, scope: !9747, file: !94, line: 1300, type: !4242)
!9749 = !DILocation(line: 1300, column: 77, scope: !9747)
!9750 = !DILocalVariable(name: "chunk", arg: 2, scope: !9747, file: !94, line: 1301, type: !9732)
!9751 = !DILocation(line: 1301, column: 28, scope: !9747)
!9752 = !DILocation(line: 1303, column: 27, scope: !9747)
!9753 = !DILocation(line: 1303, column: 31, scope: !9747)
!9754 = !DILocation(line: 1303, column: 40, scope: !9747)
!9755 = !DILocation(line: 1303, column: 44, scope: !9747)
!9756 = !DILocation(line: 1304, column: 6, scope: !9747)
!9757 = !DILocation(line: 1304, column: 13, scope: !9747)
!9758 = !DILocation(line: 1304, column: 18, scope: !9747)
!9759 = !DILocation(line: 1304, column: 25, scope: !9747)
!9760 = !DILocation(line: 1303, column: 9, scope: !9747)
!9761 = !DILocation(line: 1303, column: 2, scope: !9747)
!9762 = distinct !DISubprogram(name: "dmaengine_get_icg", scope: !94, file: !94, line: 1287, type: !9763, scopeLine: 1289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9763 = !DISubroutineType(types: !9764)
!9764 = !{!510, !396, !396, !510, !510}
!9765 = !DILocalVariable(name: "inc", arg: 1, scope: !9762, file: !94, line: 1287, type: !396)
!9766 = !DILocation(line: 1287, column: 45, scope: !9762)
!9767 = !DILocalVariable(name: "sgl", arg: 2, scope: !9762, file: !94, line: 1287, type: !396)
!9768 = !DILocation(line: 1287, column: 55, scope: !9762)
!9769 = !DILocalVariable(name: "icg", arg: 3, scope: !9762, file: !94, line: 1287, type: !510)
!9770 = !DILocation(line: 1287, column: 67, scope: !9762)
!9771 = !DILocalVariable(name: "dir_icg", arg: 4, scope: !9762, file: !94, line: 1288, type: !510)
!9772 = !DILocation(line: 1288, column: 18, scope: !9762)
!9773 = !DILocation(line: 1290, column: 6, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9762, file: !94, line: 1290, column: 6)
!9775 = !DILocation(line: 1290, column: 6, scope: !9762)
!9776 = !DILocation(line: 1291, column: 7, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9778, file: !94, line: 1291, column: 7)
!9778 = distinct !DILexicalBlock(scope: !9774, file: !94, line: 1290, column: 11)
!9779 = !DILocation(line: 1291, column: 7, scope: !9778)
!9780 = !DILocation(line: 1292, column: 11, scope: !9777)
!9781 = !DILocation(line: 1292, column: 4, scope: !9777)
!9782 = !DILocation(line: 1293, column: 7, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9778, file: !94, line: 1293, column: 7)
!9784 = !DILocation(line: 1293, column: 7, scope: !9778)
!9785 = !DILocation(line: 1294, column: 11, scope: !9783)
!9786 = !DILocation(line: 1294, column: 4, scope: !9783)
!9787 = !DILocation(line: 1295, column: 2, scope: !9778)
!9788 = !DILocation(line: 1297, column: 2, scope: !9762)
!9789 = !DILocation(line: 1298, column: 1, scope: !9762)
!9790 = distinct !DISubprogram(name: "omap_dma_stop", scope: !3, file: !3, line: 485, type: !9791, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9791 = !DISubroutineType(types: !9792)
!9792 = !{!378, !4404}
!9793 = !DILocalVariable(name: "c", arg: 1, scope: !9790, file: !3, line: 485, type: !4404)
!9794 = !DILocation(line: 485, column: 44, scope: !9790)
!9795 = !DILocalVariable(name: "od", scope: !9790, file: !3, line: 487, type: !358)
!9796 = !DILocation(line: 487, column: 22, scope: !9790)
!9797 = !DILocation(line: 487, column: 43, scope: !9790)
!9798 = !DILocation(line: 487, column: 46, scope: !9790)
!9799 = !DILocation(line: 487, column: 49, scope: !9790)
!9800 = !DILocation(line: 487, column: 54, scope: !9790)
!9801 = !DILocation(line: 487, column: 27, scope: !9790)
!9802 = !DILocalVariable(name: "val", scope: !9790, file: !3, line: 488, type: !745)
!9803 = !DILocation(line: 488, column: 11, scope: !9790)
!9804 = !DILocation(line: 491, column: 22, scope: !9790)
!9805 = !DILocation(line: 491, column: 2, scope: !9790)
!9806 = !DILocation(line: 493, column: 21, scope: !9790)
!9807 = !DILocation(line: 493, column: 2, scope: !9790)
!9808 = !DILocation(line: 495, column: 27, scope: !9790)
!9809 = !DILocation(line: 495, column: 8, scope: !9790)
!9810 = !DILocation(line: 495, column: 6, scope: !9790)
!9811 = !DILocation(line: 496, column: 6, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9790, file: !3, line: 496, column: 6)
!9813 = !DILocation(line: 496, column: 10, scope: !9812)
!9814 = !DILocation(line: 496, column: 16, scope: !9812)
!9815 = !DILocation(line: 496, column: 23, scope: !9812)
!9816 = !DILocation(line: 496, column: 41, scope: !9812)
!9817 = !DILocation(line: 496, column: 44, scope: !9812)
!9818 = !DILocation(line: 496, column: 48, scope: !9812)
!9819 = !DILocation(line: 496, column: 6, scope: !9790)
!9820 = !DILocalVariable(name: "sysconfig", scope: !9821, file: !3, line: 497, type: !745)
!9821 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 496, column: 67)
!9822 = !DILocation(line: 497, column: 12, scope: !9821)
!9823 = !DILocation(line: 499, column: 34, scope: !9821)
!9824 = !DILocation(line: 499, column: 15, scope: !9821)
!9825 = !DILocation(line: 499, column: 13, scope: !9821)
!9826 = !DILocation(line: 500, column: 9, scope: !9821)
!9827 = !DILocation(line: 500, column: 19, scope: !9821)
!9828 = !DILocation(line: 500, column: 7, scope: !9821)
!9829 = !DILocation(line: 501, column: 7, scope: !9821)
!9830 = !DILocation(line: 502, column: 23, scope: !9821)
!9831 = !DILocation(line: 502, column: 42, scope: !9821)
!9832 = !DILocation(line: 502, column: 3, scope: !9821)
!9833 = !DILocation(line: 504, column: 28, scope: !9821)
!9834 = !DILocation(line: 504, column: 9, scope: !9821)
!9835 = !DILocation(line: 504, column: 7, scope: !9821)
!9836 = !DILocation(line: 505, column: 7, scope: !9821)
!9837 = !DILocation(line: 506, column: 23, scope: !9821)
!9838 = !DILocation(line: 506, column: 31, scope: !9821)
!9839 = !DILocation(line: 506, column: 3, scope: !9821)
!9840 = !DILocation(line: 508, column: 9, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 508, column: 7)
!9842 = !DILocation(line: 508, column: 12, scope: !9841)
!9843 = !DILocation(line: 508, column: 16, scope: !9841)
!9844 = !DILocation(line: 508, column: 7, scope: !9821)
!9845 = !DILocation(line: 509, column: 24, scope: !9841)
!9846 = !DILocation(line: 509, column: 4, scope: !9841)
!9847 = !DILocation(line: 511, column: 23, scope: !9821)
!9848 = !DILocation(line: 511, column: 42, scope: !9821)
!9849 = !DILocation(line: 511, column: 3, scope: !9821)
!9850 = !DILocation(line: 512, column: 2, scope: !9821)
!9851 = !DILocation(line: 513, column: 9, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 513, column: 7)
!9853 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 512, column: 9)
!9854 = !DILocation(line: 513, column: 13, scope: !9852)
!9855 = !DILocation(line: 513, column: 7, scope: !9853)
!9856 = !DILocation(line: 514, column: 4, scope: !9852)
!9857 = !DILocation(line: 516, column: 7, scope: !9853)
!9858 = !DILocation(line: 517, column: 23, scope: !9853)
!9859 = !DILocation(line: 517, column: 31, scope: !9853)
!9860 = !DILocation(line: 517, column: 3, scope: !9853)
!9861 = !DILocation(line: 519, column: 9, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 519, column: 7)
!9863 = !DILocation(line: 519, column: 12, scope: !9862)
!9864 = !DILocation(line: 519, column: 16, scope: !9862)
!9865 = !DILocation(line: 519, column: 7, scope: !9853)
!9866 = !DILocation(line: 520, column: 24, scope: !9862)
!9867 = !DILocation(line: 520, column: 4, scope: !9862)
!9868 = !DILocation(line: 523, column: 2, scope: !9790)
!9869 = !{i32 -2141738748}
!9870 = !DILocation(line: 525, column: 7, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9790, file: !3, line: 525, column: 6)
!9872 = !DILocation(line: 525, column: 42, scope: !9871)
!9873 = !DILocation(line: 525, column: 45, scope: !9871)
!9874 = !DILocation(line: 525, column: 48, scope: !9871)
!9875 = !DILocation(line: 525, column: 6, scope: !9790)
!9876 = !DILocation(line: 526, column: 28, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 525, column: 56)
!9878 = !DILocation(line: 526, column: 9, scope: !9877)
!9879 = !DILocation(line: 526, column: 7, scope: !9877)
!9880 = !DILocation(line: 529, column: 8, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9877, file: !3, line: 528, column: 7)
!9882 = !DILocation(line: 533, column: 23, scope: !9877)
!9883 = !DILocation(line: 533, column: 37, scope: !9877)
!9884 = !DILocation(line: 533, column: 3, scope: !9877)
!9885 = !DILocation(line: 534, column: 2, scope: !9877)
!9886 = !DILocation(line: 535, column: 2, scope: !9790)
!9887 = !DILocation(line: 535, column: 5, scope: !9790)
!9888 = !DILocation(line: 535, column: 13, scope: !9790)
!9889 = !DILocation(line: 536, column: 2, scope: !9790)
!9890 = !DILocation(line: 537, column: 1, scope: !9790)
!9891 = distinct !DISubprogram(name: "omap_dma_drain_chan", scope: !3, file: !3, line: 462, type: !7799, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9892 = !DILocalVariable(name: "c", arg: 1, scope: !9891, file: !3, line: 462, type: !4404)
!9893 = !DILocation(line: 462, column: 51, scope: !9891)
!9894 = !DILocalVariable(name: "i", scope: !9891, file: !3, line: 464, type: !378)
!9895 = !DILocation(line: 464, column: 6, scope: !9891)
!9896 = !DILocalVariable(name: "val", scope: !9891, file: !3, line: 465, type: !603)
!9897 = !DILocation(line: 465, column: 6, scope: !9891)
!9898 = !DILocation(line: 468, column: 9, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9891, file: !3, line: 468, column: 2)
!9900 = !DILocation(line: 468, column: 7, scope: !9899)
!9901 = !DILocation(line: 469, column: 28, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9903, file: !3, line: 468, column: 21)
!9903 = distinct !DILexicalBlock(scope: !9899, file: !3, line: 468, column: 2)
!9904 = !DILocation(line: 469, column: 9, scope: !9902)
!9905 = !DILocation(line: 469, column: 7, scope: !9902)
!9906 = !DILocation(line: 470, column: 9, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 470, column: 7)
!9908 = !DILocation(line: 470, column: 13, scope: !9907)
!9909 = !DILocation(line: 470, column: 7, scope: !9902)
!9910 = !DILocation(line: 471, column: 4, scope: !9907)
!9911 = !DILocation(line: 473, column: 7, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 473, column: 7)
!9913 = !DILocation(line: 473, column: 9, scope: !9912)
!9914 = !DILocation(line: 473, column: 7, scope: !9902)
!9915 = !DILocation(line: 474, column: 4, scope: !9912)
!9916 = !DILocation(line: 476, column: 3, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 476, column: 3)
!9918 = distinct !DILexicalBlock(scope: !9919, file: !3, line: 476, column: 3)
!9919 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 476, column: 3)
!9920 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 476, column: 3)
!9921 = !DILocation(line: 477, column: 2, scope: !9902)
!9922 = !DILocation(line: 468, column: 17, scope: !9903)
!9923 = !DILocation(line: 468, column: 2, scope: !9903)
!9924 = distinct !{!9924, !9925, !9926}
!9925 = !DILocation(line: 468, column: 2, scope: !9899)
!9926 = !DILocation(line: 477, column: 2, scope: !9899)
!9927 = !DILocation(line: 479, column: 6, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9891, file: !3, line: 479, column: 6)
!9929 = !DILocation(line: 479, column: 10, scope: !9928)
!9930 = !DILocation(line: 479, column: 6, scope: !9891)
!9931 = !DILocation(line: 480, column: 3, scope: !9928)
!9932 = !DILocation(line: 483, column: 1, scope: !9891)
!9933 = distinct !DISubprogram(name: "vchan_terminate_vdesc", scope: !4409, file: !4409, line: 145, type: !4434, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9934 = !DILocalVariable(name: "vd", arg: 1, scope: !9933, file: !4409, line: 145, type: !4436)
!9935 = !DILocation(line: 145, column: 64, scope: !9933)
!9936 = !DILocalVariable(name: "vc", scope: !9933, file: !4409, line: 147, type: !4502)
!9937 = !DILocation(line: 147, column: 24, scope: !9933)
!9938 = !DILocation(line: 147, column: 42, scope: !9933)
!9939 = !DILocation(line: 147, column: 46, scope: !9933)
!9940 = !DILocation(line: 147, column: 49, scope: !9933)
!9941 = !DILocation(line: 147, column: 29, scope: !9933)
!9942 = !DILocation(line: 149, column: 17, scope: !9933)
!9943 = !DILocation(line: 149, column: 21, scope: !9933)
!9944 = !DILocation(line: 149, column: 28, scope: !9933)
!9945 = !DILocation(line: 149, column: 32, scope: !9933)
!9946 = !DILocation(line: 149, column: 2, scope: !9933)
!9947 = !DILocation(line: 151, column: 6, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9933, file: !4409, line: 151, column: 6)
!9949 = !DILocation(line: 151, column: 10, scope: !9948)
!9950 = !DILocation(line: 151, column: 20, scope: !9948)
!9951 = !DILocation(line: 151, column: 17, scope: !9948)
!9952 = !DILocation(line: 151, column: 6, scope: !9933)
!9953 = !DILocation(line: 152, column: 3, scope: !9948)
!9954 = !DILocation(line: 152, column: 7, scope: !9948)
!9955 = !DILocation(line: 152, column: 14, scope: !9948)
!9956 = !DILocation(line: 153, column: 1, scope: !9933)
!9957 = distinct !DISubprogram(name: "vchan_synchronize", scope: !4409, file: !4409, line: 211, type: !8546, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!9958 = !DILocation(line: 407, column: 64, scope: !5491, inlinedAt: !9959)
!9959 = distinct !DILocation(line: 222, column: 2, scope: !9957)
!9960 = !DILocation(line: 407, column: 84, scope: !5491, inlinedAt: !9959)
!9961 = !DILocation(line: 327, column: 67, scope: !4647, inlinedAt: !9962)
!9962 = distinct !DILocation(line: 218, column: 2, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9964, file: !4409, line: 218, column: 2)
!9964 = distinct !DILexicalBlock(scope: !9965, file: !4409, line: 218, column: 2)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !4409, line: 218, column: 2)
!9966 = distinct !DILexicalBlock(scope: !9967, file: !4409, line: 218, column: 2)
!9967 = distinct !DILexicalBlock(scope: !9957, file: !4409, line: 218, column: 2)
!9968 = !DILocalVariable(name: "vc", arg: 1, scope: !9957, file: !4409, line: 211, type: !4502)
!9969 = !DILocation(line: 211, column: 60, scope: !9957)
!9970 = !DILocalVariable(name: "head", scope: !9957, file: !4409, line: 213, type: !382)
!9971 = !DILocation(line: 213, column: 2, scope: !9957)
!9972 = !DILocalVariable(name: "flags", scope: !9957, file: !4409, line: 214, type: !350)
!9973 = !DILocation(line: 214, column: 16, scope: !9957)
!9974 = !DILocation(line: 216, column: 16, scope: !9957)
!9975 = !DILocation(line: 216, column: 20, scope: !9957)
!9976 = !DILocation(line: 216, column: 2, scope: !9957)
!9977 = !DILocation(line: 218, column: 2, scope: !9957)
!9978 = !DILocation(line: 218, column: 2, scope: !9967)
!9979 = !DILocalVariable(name: "__dummy", scope: !9980, file: !4409, line: 218, type: !350)
!9980 = distinct !DILexicalBlock(scope: !9966, file: !4409, line: 218, column: 2)
!9981 = !DILocation(line: 218, column: 2, scope: !9980)
!9982 = !DILocalVariable(name: "__dummy2", scope: !9980, file: !4409, line: 218, type: !350)
!9983 = !DILocation(line: 218, column: 2, scope: !9966)
!9984 = !DILocation(line: 218, column: 2, scope: !9965)
!9985 = !DILocation(line: 218, column: 2, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9965, file: !4409, line: 218, column: 2)
!9987 = !DILocalVariable(name: "__dummy", scope: !9988, file: !4409, line: 218, type: !350)
!9988 = distinct !DILexicalBlock(scope: !9989, file: !4409, line: 218, column: 2)
!9989 = distinct !DILexicalBlock(scope: !9986, file: !4409, line: 218, column: 2)
!9990 = !DILocation(line: 218, column: 2, scope: !9988)
!9991 = !DILocalVariable(name: "__dummy2", scope: !9988, file: !4409, line: 218, type: !350)
!9992 = !DILocation(line: 218, column: 2, scope: !9989)
!9993 = !DILocation(line: 218, column: 2, scope: !9964)
!9994 = !{i32 -2141753237}
!9995 = !DILocation(line: 218, column: 2, scope: !9963)
!9996 = !DILocation(line: 329, column: 10, scope: !4647, inlinedAt: !9962)
!9997 = !DILocation(line: 329, column: 16, scope: !4647, inlinedAt: !9962)
!9998 = !DILocation(line: 220, column: 25, scope: !9957)
!9999 = !DILocation(line: 220, column: 29, scope: !9957)
!10000 = !DILocation(line: 220, column: 2, scope: !9957)
!10001 = !DILocation(line: 222, column: 26, scope: !9957)
!10002 = !DILocation(line: 222, column: 30, scope: !9957)
!10003 = !DILocation(line: 222, column: 36, scope: !9957)
!10004 = !DILocation(line: 409, column: 2, scope: !5673, inlinedAt: !9959)
!10005 = !DILocation(line: 409, column: 2, scope: !5678, inlinedAt: !9959)
!10006 = !DILocation(line: 409, column: 2, scope: !5679, inlinedAt: !9959)
!10007 = !DILocation(line: 409, column: 2, scope: !5686, inlinedAt: !9959)
!10008 = !DILocation(line: 409, column: 2, scope: !5689, inlinedAt: !9959)
!10009 = !DILocation(line: 224, column: 27, scope: !9957)
!10010 = !DILocation(line: 224, column: 2, scope: !9957)
!10011 = !DILocation(line: 225, column: 1, scope: !9957)
!10012 = distinct !DISubprogram(name: "of_property_read_u32_array", scope: !3889, file: !3889, line: 494, type: !10013, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10013 = !DISubroutineType(types: !10014)
!10014 = !{!378, !7002, !412, !1630, !510}
!10015 = !DILocalVariable(name: "np", arg: 1, scope: !10012, file: !3889, line: 494, type: !7002)
!10016 = !DILocation(line: 494, column: 72, scope: !10012)
!10017 = !DILocalVariable(name: "propname", arg: 2, scope: !10012, file: !3889, line: 495, type: !412)
!10018 = !DILocation(line: 495, column: 23, scope: !10012)
!10019 = !DILocalVariable(name: "out_values", arg: 3, scope: !10012, file: !3889, line: 496, type: !1630)
!10020 = !DILocation(line: 496, column: 16, scope: !10012)
!10021 = !DILocalVariable(name: "sz", arg: 4, scope: !10012, file: !3889, line: 496, type: !510)
!10022 = !DILocation(line: 496, column: 35, scope: !10012)
!10023 = !DILocalVariable(name: "ret", scope: !10012, file: !3889, line: 498, type: !378)
!10024 = !DILocation(line: 498, column: 6, scope: !10012)
!10025 = !DILocation(line: 498, column: 48, scope: !10012)
!10026 = !DILocation(line: 498, column: 52, scope: !10012)
!10027 = !DILocation(line: 498, column: 62, scope: !10012)
!10028 = !DILocation(line: 499, column: 13, scope: !10012)
!10029 = !DILocation(line: 498, column: 12, scope: !10012)
!10030 = !DILocation(line: 500, column: 6, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10012, file: !3889, line: 500, column: 6)
!10032 = !DILocation(line: 500, column: 10, scope: !10031)
!10033 = !DILocation(line: 500, column: 6, scope: !10012)
!10034 = !DILocation(line: 501, column: 3, scope: !10031)
!10035 = !DILocation(line: 503, column: 10, scope: !10031)
!10036 = !DILocation(line: 503, column: 3, scope: !10031)
!10037 = !DILocation(line: 504, column: 1, scope: !10012)
!10038 = distinct !DISubprogram(name: "__set_bit", scope: !10039, file: !10039, line: 25, type: !7493, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10039 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!10040 = !DILocalVariable(name: "nr", arg: 1, scope: !10041, file: !6346, line: 66, type: !352)
!10041 = distinct !DISubprogram(name: "arch___set_bit", scope: !6346, file: !6346, line: 66, type: !7493, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10042 = !DILocation(line: 66, column: 21, scope: !10041, inlinedAt: !10043)
!10043 = distinct !DILocation(line: 28, column: 2, scope: !10038)
!10044 = !DILocalVariable(name: "addr", arg: 2, scope: !10041, file: !6346, line: 66, type: !7495)
!10045 = !DILocation(line: 66, column: 49, scope: !10041, inlinedAt: !10043)
!10046 = !DILocalVariable(name: "v", arg: 1, scope: !10047, file: !7505, line: 39, type: !7508)
!10047 = distinct !DISubprogram(name: "instrument_write", scope: !7505, file: !7505, line: 39, type: !7506, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10048 = !DILocation(line: 39, column: 67, scope: !10047, inlinedAt: !10049)
!10049 = distinct !DILocation(line: 27, column: 2, scope: !10038)
!10050 = !DILocalVariable(name: "size", arg: 2, scope: !10047, file: !7505, line: 39, type: !510)
!10051 = !DILocation(line: 39, column: 77, scope: !10047, inlinedAt: !10049)
!10052 = !DILocalVariable(name: "nr", arg: 1, scope: !10038, file: !10039, line: 25, type: !352)
!10053 = !DILocation(line: 25, column: 35, scope: !10038)
!10054 = !DILocalVariable(name: "addr", arg: 2, scope: !10038, file: !10039, line: 25, type: !7495)
!10055 = !DILocation(line: 25, column: 63, scope: !10038)
!10056 = !DILocation(line: 27, column: 19, scope: !10038)
!10057 = !DILocation(line: 27, column: 26, scope: !10038)
!10058 = !DILocation(line: 27, column: 24, scope: !10038)
!10059 = !DILocation(line: 41, column: 20, scope: !10047, inlinedAt: !10049)
!10060 = !DILocation(line: 41, column: 23, scope: !10047, inlinedAt: !10049)
!10061 = !DILocation(line: 41, column: 2, scope: !10047, inlinedAt: !10049)
!10062 = !DILocation(line: 42, column: 2, scope: !10047, inlinedAt: !10049)
!10063 = !DILocation(line: 28, column: 17, scope: !10038)
!10064 = !DILocation(line: 28, column: 21, scope: !10038)
!10065 = !DILocation(line: 68, column: 44, scope: !10041, inlinedAt: !10043)
!10066 = !DILocation(line: 68, column: 56, scope: !10041, inlinedAt: !10043)
!10067 = !DILocation(line: 68, column: 2, scope: !10041, inlinedAt: !10043)
!10068 = !{i32 -2147162179}
!10069 = !DILocation(line: 29, column: 1, scope: !10038)
!10070 = distinct !DISubprogram(name: "devm_kmalloc_array", scope: !73, file: !73, line: 219, type: !7016, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10071 = !DILocalVariable(name: "dev", arg: 1, scope: !10070, file: !73, line: 219, type: !404)
!10072 = !DILocation(line: 219, column: 55, scope: !10070)
!10073 = !DILocalVariable(name: "n", arg: 2, scope: !10070, file: !73, line: 220, type: !510)
!10074 = !DILocation(line: 220, column: 19, scope: !10070)
!10075 = !DILocalVariable(name: "size", arg: 3, scope: !10070, file: !73, line: 220, type: !510)
!10076 = !DILocation(line: 220, column: 29, scope: !10070)
!10077 = !DILocalVariable(name: "flags", arg: 4, scope: !10070, file: !73, line: 220, type: !348)
!10078 = !DILocation(line: 220, column: 41, scope: !10070)
!10079 = !DILocalVariable(name: "bytes", scope: !10070, file: !73, line: 222, type: !510)
!10080 = !DILocation(line: 222, column: 9, scope: !10070)
!10081 = !DILocalVariable(name: "__a", scope: !10082, file: !73, line: 224, type: !510)
!10082 = distinct !DILexicalBlock(scope: !10083, file: !73, line: 224, column: 6)
!10083 = distinct !DILexicalBlock(scope: !10070, file: !73, line: 224, column: 6)
!10084 = !DILocation(line: 224, column: 6, scope: !10082)
!10085 = !DILocalVariable(name: "__b", scope: !10082, file: !73, line: 224, type: !510)
!10086 = !DILocalVariable(name: "__d", scope: !10082, file: !73, line: 224, type: !4186)
!10087 = !DILocation(line: 224, column: 6, scope: !10083)
!10088 = !DILocation(line: 224, column: 6, scope: !10070)
!10089 = !DILocation(line: 225, column: 3, scope: !10083)
!10090 = !DILocation(line: 227, column: 22, scope: !10070)
!10091 = !DILocation(line: 227, column: 27, scope: !10070)
!10092 = !DILocation(line: 227, column: 34, scope: !10070)
!10093 = !DILocation(line: 227, column: 9, scope: !10070)
!10094 = !DILocation(line: 227, column: 2, scope: !10070)
!10095 = !DILocation(line: 228, column: 1, scope: !10070)
!10096 = distinct !DISubprogram(name: "omap_dma_desc_free", scope: !3, file: !3, line: 248, type: !4434, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10097 = !DILocalVariable(name: "vd", arg: 1, scope: !10096, file: !3, line: 248, type: !4436)
!10098 = !DILocation(line: 248, column: 54, scope: !10096)
!10099 = !DILocalVariable(name: "d", scope: !10096, file: !3, line: 250, type: !4459)
!10100 = !DILocation(line: 250, column: 20, scope: !10096)
!10101 = !DILocation(line: 250, column: 42, scope: !10096)
!10102 = !DILocation(line: 250, column: 46, scope: !10096)
!10103 = !DILocation(line: 250, column: 24, scope: !10096)
!10104 = !DILocation(line: 252, column: 6, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 252, column: 6)
!10106 = !DILocation(line: 252, column: 9, scope: !10105)
!10107 = !DILocation(line: 252, column: 6, scope: !10096)
!10108 = !DILocalVariable(name: "od", scope: !10109, file: !3, line: 253, type: !358)
!10109 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 252, column: 19)
!10110 = !DILocation(line: 253, column: 23, scope: !10109)
!10111 = !DILocation(line: 253, column: 44, scope: !10109)
!10112 = !DILocation(line: 253, column: 48, scope: !10109)
!10113 = !DILocation(line: 253, column: 51, scope: !10109)
!10114 = !DILocation(line: 253, column: 57, scope: !10109)
!10115 = !DILocation(line: 253, column: 28, scope: !10109)
!10116 = !DILocalVariable(name: "i", scope: !10109, file: !3, line: 254, type: !378)
!10117 = !DILocation(line: 254, column: 7, scope: !10109)
!10118 = !DILocation(line: 256, column: 10, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 256, column: 3)
!10120 = !DILocation(line: 256, column: 8, scope: !10119)
!10121 = !DILocation(line: 256, column: 15, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 256, column: 3)
!10123 = !DILocation(line: 256, column: 19, scope: !10122)
!10124 = !DILocation(line: 256, column: 22, scope: !10122)
!10125 = !DILocation(line: 256, column: 17, scope: !10122)
!10126 = !DILocation(line: 256, column: 3, scope: !10119)
!10127 = !DILocation(line: 257, column: 8, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 257, column: 8)
!10129 = distinct !DILexicalBlock(scope: !10122, file: !3, line: 256, column: 34)
!10130 = !DILocation(line: 257, column: 11, scope: !10128)
!10131 = !DILocation(line: 257, column: 14, scope: !10128)
!10132 = !DILocation(line: 257, column: 17, scope: !10128)
!10133 = !DILocation(line: 257, column: 8, scope: !10129)
!10134 = !DILocation(line: 258, column: 19, scope: !10128)
!10135 = !DILocation(line: 258, column: 23, scope: !10128)
!10136 = !DILocation(line: 258, column: 34, scope: !10128)
!10137 = !DILocation(line: 258, column: 37, scope: !10128)
!10138 = !DILocation(line: 258, column: 40, scope: !10128)
!10139 = !DILocation(line: 258, column: 43, scope: !10128)
!10140 = !DILocation(line: 259, column: 12, scope: !10128)
!10141 = !DILocation(line: 259, column: 15, scope: !10128)
!10142 = !DILocation(line: 259, column: 18, scope: !10128)
!10143 = !DILocation(line: 259, column: 21, scope: !10128)
!10144 = !DILocation(line: 258, column: 5, scope: !10128)
!10145 = !DILocation(line: 260, column: 3, scope: !10129)
!10146 = !DILocation(line: 256, column: 30, scope: !10122)
!10147 = !DILocation(line: 256, column: 3, scope: !10122)
!10148 = distinct !{!10148, !10126, !10149}
!10149 = !DILocation(line: 260, column: 3, scope: !10119)
!10150 = !DILocation(line: 261, column: 2, scope: !10109)
!10151 = !DILocation(line: 263, column: 8, scope: !10096)
!10152 = !DILocation(line: 263, column: 2, scope: !10096)
!10153 = !DILocation(line: 264, column: 1, scope: !10096)
!10154 = distinct !DISubprogram(name: "omap_dma_get_csr", scope: !3, file: !3, line: 391, type: !10155, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10155 = !DISubroutineType(types: !10156)
!10156 = !{!7, !4404}
!10157 = !DILocalVariable(name: "c", arg: 1, scope: !10154, file: !3, line: 391, type: !4404)
!10158 = !DILocation(line: 391, column: 52, scope: !10154)
!10159 = !DILocalVariable(name: "val", scope: !10154, file: !3, line: 393, type: !7)
!10160 = !DILocation(line: 393, column: 11, scope: !10154)
!10161 = !DILocation(line: 393, column: 36, scope: !10154)
!10162 = !DILocation(line: 393, column: 17, scope: !10154)
!10163 = !DILocation(line: 398, column: 9, scope: !10154)
!10164 = !DILocation(line: 398, column: 2, scope: !10154)
!10165 = distinct !DISubprogram(name: "kobject_name", scope: !409, file: !409, line: 88, type: !10166, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10166 = !DISubroutineType(types: !10167)
!10167 = !{!412, !10168}
!10168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10169, size: 64)
!10169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !408)
!10170 = !DILocalVariable(name: "kobj", arg: 1, scope: !10165, file: !409, line: 88, type: !10168)
!10171 = !DILocation(line: 88, column: 62, scope: !10165)
!10172 = !DILocation(line: 90, column: 9, scope: !10165)
!10173 = !DILocation(line: 90, column: 15, scope: !10165)
!10174 = !DILocation(line: 90, column: 2, scope: !10165)
!10175 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !73, file: !73, line: 660, type: !4078, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10176 = !DILocalVariable(name: "dev", arg: 1, scope: !10175, file: !73, line: 660, type: !404)
!10177 = !DILocation(line: 660, column: 51, scope: !10175)
!10178 = !DILocalVariable(name: "data", arg: 2, scope: !10175, file: !73, line: 660, type: !351)
!10179 = !DILocation(line: 660, column: 62, scope: !10175)
!10180 = !DILocation(line: 662, column: 21, scope: !10175)
!10181 = !DILocation(line: 662, column: 2, scope: !10175)
!10182 = !DILocation(line: 662, column: 7, scope: !10175)
!10183 = !DILocation(line: 662, column: 19, scope: !10175)
!10184 = !DILocation(line: 663, column: 1, scope: !10175)
!10185 = distinct !DISubprogram(name: "omap_dma_busy", scope: !3, file: !3, line: 1526, type: !10186, scopeLine: 1527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10186 = !DISubroutineType(types: !10187)
!10187 = !{!396, !358}
!10188 = !DILocalVariable(name: "od", arg: 1, scope: !10185, file: !3, line: 1526, type: !358)
!10189 = !DILocation(line: 1526, column: 47, scope: !10185)
!10190 = !DILocalVariable(name: "c", scope: !10185, file: !3, line: 1528, type: !4404)
!10191 = !DILocation(line: 1528, column: 20, scope: !10185)
!10192 = !DILocalVariable(name: "lch", scope: !10185, file: !3, line: 1529, type: !378)
!10193 = !DILocation(line: 1529, column: 6, scope: !10185)
!10194 = !DILocation(line: 1531, column: 2, scope: !10185)
!10195 = !DILocation(line: 1532, column: 23, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10185, file: !3, line: 1531, column: 12)
!10197 = !DILocation(line: 1532, column: 27, scope: !10196)
!10198 = !DILocation(line: 1532, column: 39, scope: !10196)
!10199 = !DILocation(line: 1532, column: 43, scope: !10196)
!10200 = !DILocation(line: 1532, column: 54, scope: !10196)
!10201 = !DILocation(line: 1532, column: 58, scope: !10196)
!10202 = !DILocation(line: 1532, column: 9, scope: !10196)
!10203 = !DILocation(line: 1532, column: 7, scope: !10196)
!10204 = !DILocation(line: 1533, column: 7, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 1533, column: 7)
!10206 = !DILocation(line: 1533, column: 14, scope: !10205)
!10207 = !DILocation(line: 1533, column: 18, scope: !10205)
!10208 = !DILocation(line: 1533, column: 11, scope: !10205)
!10209 = !DILocation(line: 1533, column: 7, scope: !10196)
!10210 = !DILocation(line: 1534, column: 4, scope: !10205)
!10211 = !DILocation(line: 1535, column: 7, scope: !10196)
!10212 = !DILocation(line: 1535, column: 11, scope: !10196)
!10213 = !DILocation(line: 1535, column: 19, scope: !10196)
!10214 = !DILocation(line: 1535, column: 5, scope: !10196)
!10215 = !DILocation(line: 1536, column: 8, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 1536, column: 7)
!10217 = !DILocation(line: 1536, column: 7, scope: !10196)
!10218 = !DILocation(line: 1537, column: 4, scope: !10216)
!10219 = distinct !{!10219, !10194, !10220}
!10220 = !DILocation(line: 1540, column: 2, scope: !10185)
!10221 = !DILocation(line: 1538, column: 26, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 1538, column: 7)
!10223 = !DILocation(line: 1538, column: 7, scope: !10222)
!10224 = !DILocation(line: 1538, column: 34, scope: !10222)
!10225 = !DILocation(line: 1538, column: 7, scope: !10196)
!10226 = !DILocation(line: 1539, column: 4, scope: !10222)
!10227 = !DILocation(line: 1542, column: 2, scope: !10185)
!10228 = !DILocation(line: 1543, column: 1, scope: !10185)
!10229 = distinct !DISubprogram(name: "omap_dma_context_save", scope: !3, file: !3, line: 1571, type: !7063, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10230 = !DILocalVariable(name: "od", arg: 1, scope: !10229, file: !3, line: 1571, type: !358)
!10231 = !DILocation(line: 1571, column: 55, scope: !10229)
!10232 = !DILocation(line: 1573, column: 48, scope: !10229)
!10233 = !DILocation(line: 1573, column: 29, scope: !10229)
!10234 = !DILocation(line: 1573, column: 2, scope: !10229)
!10235 = !DILocation(line: 1573, column: 6, scope: !10229)
!10236 = !DILocation(line: 1573, column: 14, scope: !10229)
!10237 = !DILocation(line: 1573, column: 27, scope: !10229)
!10238 = !DILocation(line: 1574, column: 48, scope: !10229)
!10239 = !DILocation(line: 1574, column: 29, scope: !10229)
!10240 = !DILocation(line: 1574, column: 2, scope: !10229)
!10241 = !DILocation(line: 1574, column: 6, scope: !10229)
!10242 = !DILocation(line: 1574, column: 14, scope: !10229)
!10243 = !DILocation(line: 1574, column: 27, scope: !10229)
!10244 = !DILocation(line: 1575, column: 49, scope: !10229)
!10245 = !DILocation(line: 1575, column: 30, scope: !10229)
!10246 = !DILocation(line: 1575, column: 2, scope: !10229)
!10247 = !DILocation(line: 1575, column: 6, scope: !10229)
!10248 = !DILocation(line: 1575, column: 14, scope: !10229)
!10249 = !DILocation(line: 1575, column: 28, scope: !10229)
!10250 = !DILocation(line: 1576, column: 39, scope: !10229)
!10251 = !DILocation(line: 1576, column: 20, scope: !10229)
!10252 = !DILocation(line: 1576, column: 2, scope: !10229)
!10253 = !DILocation(line: 1576, column: 6, scope: !10229)
!10254 = !DILocation(line: 1576, column: 14, scope: !10229)
!10255 = !DILocation(line: 1576, column: 18, scope: !10229)
!10256 = !DILocation(line: 1577, column: 1, scope: !10229)
!10257 = distinct !DISubprogram(name: "omap_dma_context_restore", scope: !3, file: !3, line: 1579, type: !7063, scopeLine: 1580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10258 = !DILocalVariable(name: "od", arg: 1, scope: !10257, file: !3, line: 1579, type: !358)
!10259 = !DILocation(line: 1579, column: 58, scope: !10257)
!10260 = !DILocalVariable(name: "i", scope: !10257, file: !3, line: 1581, type: !378)
!10261 = !DILocation(line: 1581, column: 6, scope: !10257)
!10262 = !DILocation(line: 1583, column: 22, scope: !10257)
!10263 = !DILocation(line: 1583, column: 31, scope: !10257)
!10264 = !DILocation(line: 1583, column: 35, scope: !10257)
!10265 = !DILocation(line: 1583, column: 43, scope: !10257)
!10266 = !DILocation(line: 1583, column: 2, scope: !10257)
!10267 = !DILocation(line: 1584, column: 22, scope: !10257)
!10268 = !DILocation(line: 1584, column: 41, scope: !10257)
!10269 = !DILocation(line: 1584, column: 45, scope: !10257)
!10270 = !DILocation(line: 1584, column: 53, scope: !10257)
!10271 = !DILocation(line: 1584, column: 2, scope: !10257)
!10272 = !DILocation(line: 1585, column: 22, scope: !10257)
!10273 = !DILocation(line: 1585, column: 40, scope: !10257)
!10274 = !DILocation(line: 1585, column: 44, scope: !10257)
!10275 = !DILocation(line: 1585, column: 52, scope: !10257)
!10276 = !DILocation(line: 1585, column: 2, scope: !10257)
!10277 = !DILocation(line: 1586, column: 22, scope: !10257)
!10278 = !DILocation(line: 1586, column: 40, scope: !10257)
!10279 = !DILocation(line: 1586, column: 44, scope: !10257)
!10280 = !DILocation(line: 1586, column: 52, scope: !10257)
!10281 = !DILocation(line: 1586, column: 2, scope: !10257)
!10282 = !DILocation(line: 1589, column: 6, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 1589, column: 6)
!10284 = !DILocation(line: 1589, column: 10, scope: !10283)
!10285 = !DILocation(line: 1589, column: 16, scope: !10283)
!10286 = !DILocation(line: 1589, column: 23, scope: !10283)
!10287 = !DILocation(line: 1589, column: 6, scope: !10257)
!10288 = !DILocation(line: 1590, column: 23, scope: !10283)
!10289 = !DILocation(line: 1590, column: 3, scope: !10283)
!10290 = !DILocation(line: 1593, column: 9, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 1593, column: 2)
!10292 = !DILocation(line: 1593, column: 7, scope: !10291)
!10293 = !DILocation(line: 1593, column: 14, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 1593, column: 2)
!10295 = !DILocation(line: 1593, column: 18, scope: !10294)
!10296 = !DILocation(line: 1593, column: 22, scope: !10294)
!10297 = !DILocation(line: 1593, column: 16, scope: !10294)
!10298 = !DILocation(line: 1593, column: 2, scope: !10291)
!10299 = !DILocation(line: 1594, column: 22, scope: !10294)
!10300 = !DILocation(line: 1594, column: 26, scope: !10294)
!10301 = !DILocation(line: 1594, column: 3, scope: !10294)
!10302 = !DILocation(line: 1593, column: 34, scope: !10294)
!10303 = !DILocation(line: 1593, column: 2, scope: !10294)
!10304 = distinct !{!10304, !10298, !10305}
!10305 = !DILocation(line: 1594, column: 27, scope: !10291)
!10306 = !DILocation(line: 1595, column: 1, scope: !10257)
!10307 = distinct !DISubprogram(name: "platform_get_drvdata", scope: !4534, file: !4534, line: 231, type: !10308, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10308 = !DISubroutineType(types: !10309)
!10309 = !{!351, !10310}
!10310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10311, size: 64)
!10311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4541)
!10312 = !DILocalVariable(name: "pdev", arg: 1, scope: !10307, file: !4534, line: 231, type: !10310)
!10313 = !DILocation(line: 231, column: 72, scope: !10307)
!10314 = !DILocation(line: 233, column: 26, scope: !10307)
!10315 = !DILocation(line: 233, column: 32, scope: !10307)
!10316 = !DILocation(line: 233, column: 9, scope: !10307)
!10317 = !DILocation(line: 233, column: 2, scope: !10307)
!10318 = distinct !DISubprogram(name: "cpu_pm_unregister_notifier", scope: !7454, file: !7454, line: 75, type: !7455, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10319 = !DILocalVariable(name: "nb", arg: 1, scope: !10318, file: !7454, line: 75, type: !4380)
!10320 = !DILocation(line: 75, column: 69, scope: !10318)
!10321 = !DILocation(line: 77, column: 2, scope: !10318)
!10322 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !73, file: !73, line: 655, type: !5255, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !437)
!10323 = !DILocalVariable(name: "dev", arg: 1, scope: !10322, file: !73, line: 655, type: !3924)
!10324 = !DILocation(line: 655, column: 58, scope: !10322)
!10325 = !DILocation(line: 657, column: 9, scope: !10322)
!10326 = !DILocation(line: 657, column: 14, scope: !10322)
!10327 = !DILocation(line: 657, column: 2, scope: !10322)
