; ModuleID = '../bcout/drivers/staging/comedi/drivers/cb_pcidas64.llvm.bc'
source_filename = "drivers/staging/comedi/drivers/cb_pcidas64.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_cb_pcidas64_driver_init6:\09\09\09"
module asm ".long\09cb_pcidas64_driver_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.comedi_driver = type { %struct.comedi_driver*, i8*, %struct.module*, i32 (%struct.comedi_device*, %struct.comedi_devconfig*)*, void (%struct.comedi_device*)*, i32 (%struct.comedi_device*, i64)*, i32, i8**, i32 }
%struct.module = type opaque
%struct.comedi_device = type { i32, %struct.comedi_driver*, %struct.comedi_8254*, i8*, %struct.device*, i32, i32, %struct.device*, i8*, i8*, i8, %struct.spinlock, %struct.mutex, %struct.rw_semaphore, %struct.kref, i32, %struct.comedi_subdevice*, i8*, i64, i64, i32, %struct.comedi_subdevice*, %struct.comedi_subdevice*, %struct.fasync_struct*, i32 (%struct.comedi_device*)*, void (%struct.comedi_device*)*, i32 (%struct.comedi_device*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, i32, i32*)* }
%struct.comedi_8254 = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.kref = type { %struct.refcount_struct }
%struct.comedi_subdevice = type { %struct.comedi_device*, i32, i32, i32, i32, i32, i8*, %struct.comedi_async*, i8*, i8*, i32, %struct.spinlock, i32, i32, i32*, %struct.comedi_lrange*, %struct.comedi_lrange**, i32*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, void (%struct.comedi_device*, %struct.comedi_subdevice*, i8*, i32, i32)*, i32, i32, %struct.device*, i32, i32* }
%struct.comedi_async = type { i8*, i32, %struct.comedi_buf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.comedi_cmd, %struct.wait_queue_head, i32, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* }
%struct.comedi_buf_map = type { %struct.device*, %struct.comedi_buf_page*, i32, i32, %struct.kref }
%struct.comedi_buf_page = type { i8*, i64 }
%struct.comedi_cmd = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32, i16*, i32 }
%struct.comedi_lrange = type { i32, [0 x %struct.comedi_krange] }
%struct.comedi_krange = type { i32, i32, i32 }
%struct.comedi_insn = type { i32, i32, i32*, i32, i32, [3 x i32] }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.comedi_devconfig = type { [20 x i8], [32 x i32] }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.65, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.65 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcidas64_board = type { i8*, i32, i32, i32, %struct.comedi_lrange*, i8*, i32, i32, i32, %struct.comedi_lrange*, i32*, %struct.hw_fifo_info*, i32, i8 }
%struct.hw_fifo_info = type { i32, i32, i32, i16 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.pcidas64_private = type { i64, i64, i8*, i8*, i32, i32, [128 x i16*], [128 x i64], %struct.plx_dma_desc*, i64, i32, [16 x i16*], [16 x i64], %struct.plx_dma_desc*, i64, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i8, i32, i16, i32, %struct.ext_clock_info, [8192 x i16] }
%struct.plx_dma_desc = type { i32, i32, i32, i32 }
%struct.ext_clock_info = type { i32, i32 }

@__UNIQUE_ID___addressable_cb_pcidas64_driver_init234 = internal global i8* bitcast (i32 ()* @cb_pcidas64_driver_init to i8*), section ".discard.addressable", align 8, !dbg !0
@cb_pcidas64_driver = internal global %struct.comedi_driver { %struct.comedi_driver* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), %struct.module* null, i32 (%struct.comedi_device*, %struct.comedi_devconfig*)* null, void (%struct.comedi_device*)* @detach, i32 (%struct.comedi_device*, i64)* @auto_attach, i32 0, i8** null, i32 0 }, align 8, !dbg !4190
@cb_pcidas64_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([22 x %struct.pci_device_id], [22 x %struct.pci_device_id]* @cb_pcidas64_pci_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @cb_pcidas64_pci_probe, void (%struct.pci_dev*)* @comedi_pci_auto_unconfig, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !4345
@__exitcall_cb_pcidas64_driver_exit = internal global void ()* @cb_pcidas64_driver_exit, section ".exitcall.exit", align 8, !dbg !4165
@__UNIQUE_ID_author235 = internal constant [49 x i8] c"cb_pcidas64.author=Comedi https://www.comedi.org\00", section ".modinfo", align 1, !dbg !4170
@__UNIQUE_ID_description236 = internal constant [48 x i8] c"cb_pcidas64.description=Comedi low-level driver\00", section ".modinfo", align 1, !dbg !4175
@__UNIQUE_ID_file237 = internal constant [60 x i8] c"cb_pcidas64.file=drivers/staging/comedi/drivers/cb_pcidas64\00", section ".modinfo", align 1, !dbg !4180
@__UNIQUE_ID_license238 = internal constant [24 x i8] c"cb_pcidas64.license=GPL\00", section ".modinfo", align 1, !dbg !4185
@.str = private unnamed_addr constant [12 x i8] c"cb_pcidas64\00", align 1
@pcidas64_boards = internal constant [21 x %struct.pcidas64_board] [%struct.pcidas64_board { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i32 0, i32 0), i32 64, i32 16, i32 5000, %struct.comedi_lrange* bitcast ({ i32, [8 x %struct.comedi_krange] }* @ai_ranges_64xx to %struct.comedi_lrange*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @ai_range_code_64xx, i32 0, i32 0), i32 2, i32 16, i32 10000, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @ao_ranges_64xx to %struct.comedi_lrange*), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @ao_range_code_64xx, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_64xx, i32 1, i8 1 }, %struct.pcidas64_board { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0), i32 64, i32 12, i32 5000, %struct.comedi_lrange* bitcast ({ i32, [8 x %struct.comedi_krange] }* @ai_ranges_64xx to %struct.comedi_lrange*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @ai_range_code_64xx, i32 0, i32 0), i32 2, i32 12, i32 10000, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @ao_ranges_64xx to %struct.comedi_lrange*), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @ao_range_code_64xx, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_64xx, i32 1, i8 1 }, %struct.pcidas64_board { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i32 0, i32 0), i32 64, i32 16, i32 1000, %struct.comedi_lrange* bitcast ({ i32, [7 x %struct.comedi_krange] }* @ai_ranges_64_mx to %struct.comedi_lrange*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @ai_range_code_64_mx, i32 0, i32 0), i32 2, i32 16, i32 10000, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @ao_ranges_64xx to %struct.comedi_lrange*), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @ao_range_code_64xx, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_64xx, i32 1, i8 1 }, %struct.pcidas64_board { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i32 64, i32 16, i32 500, %struct.comedi_lrange* bitcast ({ i32, [7 x %struct.comedi_krange] }* @ai_ranges_64_mx to %struct.comedi_lrange*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @ai_range_code_64_mx, i32 0, i32 0), i32 2, i32 16, i32 10000, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @ao_ranges_64xx to %struct.comedi_lrange*), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @ao_range_code_64xx, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_64xx, i32 1, i8 1 }, %struct.pcidas64_board { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0), i32 64, i32 16, i32 333, %struct.comedi_lrange* bitcast ({ i32, [7 x %struct.comedi_krange] }* @ai_ranges_64_mx to %struct.comedi_lrange*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @ai_range_code_64_mx, i32 0, i32 0), i32 2, i32 16, i32 10000, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @ao_ranges_64xx to %struct.comedi_lrange*), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @ao_range_code_64xx, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_64xx, i32 1, i8 1 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i32 0, i32 0), i32 16, i32 16, i32 5000, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @ai_ranges_60xx to %struct.comedi_lrange*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ai_range_code_60xx, i32 0, i32 0), i32 0, i32 16, i32 0, %struct.comedi_lrange* @range_bipolar10, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @ao_range_code_60xx, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0), i32 16, i32 16, i32 5000, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @ai_ranges_60xx to %struct.comedi_lrange*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ai_range_code_60xx, i32 0, i32 0), i32 2, i32 16, i32 100000, %struct.comedi_lrange* @range_bipolar10, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @ao_range_code_60xx, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0), i32 16, i32 12, i32 5000, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @ai_ranges_60xx to %struct.comedi_lrange*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ai_range_code_60xx, i32 0, i32 0), i32 0, i32 0, i32 100000, %struct.comedi_lrange* @range_bipolar10, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @ao_range_code_60xx, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 1 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), i32 16, i32 12, i32 5000, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @ai_ranges_60xx to %struct.comedi_lrange*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ai_range_code_60xx, i32 0, i32 0), i32 2, i32 12, i32 100000, %struct.comedi_lrange* @range_bipolar10, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @ao_range_code_60xx, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 1 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0), i32 16, i32 16, i32 10000, %struct.comedi_lrange* bitcast ({ i32, [14 x %struct.comedi_krange] }* @ai_ranges_6030 to %struct.comedi_lrange*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @ai_range_code_6030, i32 0, i32 0), i32 2, i32 16, i32 10000, %struct.comedi_lrange* bitcast ({ i32, [2 x %struct.comedi_krange] }* @ao_ranges_6030 to %struct.comedi_lrange*), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @ao_range_code_6030, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), i32 64, i32 16, i32 10000, %struct.comedi_lrange* bitcast ({ i32, [14 x %struct.comedi_krange] }* @ai_ranges_6030 to %struct.comedi_lrange*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @ai_range_code_6030, i32 0, i32 0), i32 2, i32 16, i32 10000, %struct.comedi_lrange* bitcast ({ i32, [2 x %struct.comedi_krange] }* @ao_ranges_6030 to %struct.comedi_lrange*), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @ao_range_code_6030, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i32 0, i32 0), i32 16, i32 16, i32 10000, %struct.comedi_lrange* bitcast ({ i32, [14 x %struct.comedi_krange] }* @ai_ranges_6030 to %struct.comedi_lrange*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @ai_range_code_6030, i32 0, i32 0), i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32* null, %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i32 0, i32 0), i32 64, i32 16, i32 10000, %struct.comedi_lrange* bitcast ({ i32, [14 x %struct.comedi_krange] }* @ai_ranges_6030 to %struct.comedi_lrange*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @ai_range_code_6030, i32 0, i32 0), i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32* null, %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), i32 16, i32 16, i32 5000, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @ai_ranges_60xx to %struct.comedi_lrange*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ai_range_code_60xx, i32 0, i32 0), i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32* null, %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i32 0, i32 0), i32 16, i32 16, i32 5000, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @ai_ranges_60xx to %struct.comedi_lrange*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ai_range_code_60xx, i32 0, i32 0), i32 2, i32 12, i32 100000, %struct.comedi_lrange* @range_bipolar10, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @ao_range_code_60xx, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0), i32 16, i32 16, i32 5000, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @ai_ranges_60xx to %struct.comedi_lrange*), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @ai_range_code_60xx, i32 0, i32 0), i32 2, i32 16, i32 100000, %struct.comedi_lrange* @range_bipolar10, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @ao_range_code_60xx, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0), i32 16, i32 12, i32 2000, %struct.comedi_lrange* bitcast ({ i32, [15 x %struct.comedi_krange] }* @ai_ranges_6052 to %struct.comedi_lrange*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @ai_range_code_6052, i32 0, i32 0), i32 2, i32 12, i32 1000, %struct.comedi_lrange* bitcast ({ i32, [2 x %struct.comedi_krange] }* @ao_ranges_6030 to %struct.comedi_lrange*), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @ao_range_code_6030, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i32 16, i32 16, i32 3333, %struct.comedi_lrange* bitcast ({ i32, [15 x %struct.comedi_krange] }* @ai_ranges_6052 to %struct.comedi_lrange*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @ai_range_code_6052, i32 0, i32 0), i32 2, i32 16, i32 3333, %struct.comedi_lrange* bitcast ({ i32, [2 x %struct.comedi_krange] }* @ao_ranges_6030 to %struct.comedi_lrange*), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @ao_range_code_6030, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), i32 16, i32 12, i32 800, %struct.comedi_lrange* bitcast ({ i32, [15 x %struct.comedi_krange] }* @ai_ranges_6052 to %struct.comedi_lrange*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @ai_range_code_6052, i32 0, i32 0), i32 2, i32 12, i32 1000, %struct.comedi_lrange* bitcast ({ i32, [2 x %struct.comedi_krange] }* @ao_ranges_6030 to %struct.comedi_lrange*), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @ao_range_code_6030, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i32 0, i32 0), i32 64, i32 12, i32 800, %struct.comedi_lrange* bitcast ({ i32, [15 x %struct.comedi_krange] }* @ai_ranges_6052 to %struct.comedi_lrange*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @ai_range_code_6052, i32 0, i32 0), i32 2, i32 12, i32 1000, %struct.comedi_lrange* bitcast ({ i32, [2 x %struct.comedi_krange] }* @ao_ranges_6030 to %struct.comedi_lrange*), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @ao_range_code_6030, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_60xx, i32 0, i8 0 }, %struct.pcidas64_board { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i32 4, i32 12, i32 50, %struct.comedi_lrange* bitcast ({ i32, [2 x %struct.comedi_krange] }* @ai_ranges_4020 to %struct.comedi_lrange*), i8* null, i32 2, i32 12, i32 0, %struct.comedi_lrange* bitcast ({ i32, [2 x %struct.comedi_krange] }* @ao_ranges_4020 to %struct.comedi_lrange*), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @ao_range_code_4020, i32 0, i32 0), %struct.hw_fifo_info* @ai_fifo_4020, i32 2, i8 1 }], align 16, !dbg !4192
@.str.1 = private unnamed_addr constant [27 x i8] c"failed to remap io memory\0A\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"pci-das6402/16\00", align 1
@ai_range_code_64xx = internal constant [8 x i8] c"\00\01\02\03\08\09\0A\0B", align 1, !dbg !4229
@ao_range_code_64xx = internal constant [4 x i32] [i32 0, i32 1, i32 2, i32 3], align 16, !dbg !4234
@ai_fifo_64xx = internal constant %struct.hw_fifo_info { i32 4, i32 2048, i32 1, i16 63 }, align 4, !dbg !4237
@.str.3 = private unnamed_addr constant [15 x i8] c"pci-das6402/12\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"pci-das64/m1/16\00", align 1
@ai_range_code_64_mx = internal constant [7 x i8] c"\00\01\02\03\09\0A\0B", align 1, !dbg !4241
@.str.5 = private unnamed_addr constant [16 x i8] c"pci-das64/m2/16\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"pci-das64/m3/16\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"pci-das6013\00", align 1
@ai_range_code_60xx = internal constant [4 x i8] c"\00\01\04\07", align 1, !dbg !4248
@range_bipolar10 = external dso_local constant %struct.comedi_lrange, align 4
@ao_range_code_60xx = internal constant [1 x i32] zeroinitializer, align 4, !dbg !4251
@ai_fifo_60xx = internal constant %struct.hw_fifo_info { i32 4, i32 2048, i32 1, i16 127 }, align 4, !dbg !4254
@.str.8 = private unnamed_addr constant [12 x i8] c"pci-das6014\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"pci-das6023\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"pci-das6025\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"pci-das6030\00", align 1
@ai_range_code_6030 = internal constant [14 x i8] c"\00\01\02\03\04\05\06\09\0A\0B\0C\0D\0E\0F", align 1, !dbg !4258
@ao_range_code_6030 = internal constant [2 x i32] [i32 0, i32 2], align 4, !dbg !4265
@.str.12 = private unnamed_addr constant [12 x i8] c"pci-das6031\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"pci-das6032\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"pci-das6033\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"pci-das6034\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"pci-das6035\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"pci-das6036\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"pci-das6040\00", align 1
@ai_range_code_6052 = internal constant [15 x i8] c"\00\01\02\03\04\05\06\07\09\0A\0B\0C\0D\0E\0F", align 1, !dbg !4270
@.str.19 = private unnamed_addr constant [12 x i8] c"pci-das6052\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"pci-das6070\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"pci-das6071\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"pci-das4020/12\00", align 1
@ao_range_code_4020 = internal constant [2 x i32] [i32 1, i32 0], align 4, !dbg !4279
@ai_fifo_4020 = internal constant %struct.hw_fifo_info { i32 2, i32 32768, i32 2, i16 127 }, align 4, !dbg !4281
@ai_ranges_64xx = internal constant { i32, [8 x %struct.comedi_krange] } { i32 8, [8 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -2500000, i32 2500000, i32 0 }, %struct.comedi_krange { i32 -1250000, i32 1250000, i32 0 }, %struct.comedi_krange { i32 0, i32 10000000, i32 0 }, %struct.comedi_krange { i32 0, i32 5000000, i32 0 }, %struct.comedi_krange { i32 0, i32 2500000, i32 0 }, %struct.comedi_krange { i32 0, i32 1250000, i32 0 }] }, align 4, !dbg !4227
@ao_ranges_64xx = internal constant { i32, [4 x %struct.comedi_krange] } { i32 4, [4 x %struct.comedi_krange] [%struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 0, i32 5000000, i32 0 }, %struct.comedi_krange { i32 0, i32 10000000, i32 0 }] }, align 4, !dbg !4232
@ai_ranges_64_mx = internal constant { i32, [7 x %struct.comedi_krange] } { i32 7, [7 x %struct.comedi_krange] [%struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -2500000, i32 2500000, i32 0 }, %struct.comedi_krange { i32 -1250000, i32 1250000, i32 0 }, %struct.comedi_krange { i32 -625000, i32 625000, i32 0 }, %struct.comedi_krange { i32 0, i32 5000000, i32 0 }, %struct.comedi_krange { i32 0, i32 2500000, i32 0 }, %struct.comedi_krange { i32 0, i32 1250000, i32 0 }] }, align 4, !dbg !4239
@ai_ranges_60xx = internal constant { i32, [4 x %struct.comedi_krange] } { i32 4, [4 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -500000, i32 500000, i32 0 }, %struct.comedi_krange { i32 -50000, i32 50000, i32 0 }] }, align 4, !dbg !4246
@ai_ranges_6030 = internal constant { i32, [14 x %struct.comedi_krange] } { i32 14, [14 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -2000000, i32 2000000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 0 }, %struct.comedi_krange { i32 -500000, i32 500000, i32 0 }, %struct.comedi_krange { i32 -200000, i32 200000, i32 0 }, %struct.comedi_krange { i32 -100000, i32 100000, i32 0 }, %struct.comedi_krange { i32 0, i32 10000000, i32 0 }, %struct.comedi_krange { i32 0, i32 5000000, i32 0 }, %struct.comedi_krange { i32 0, i32 2000000, i32 0 }, %struct.comedi_krange { i32 0, i32 1000000, i32 0 }, %struct.comedi_krange { i32 0, i32 500000, i32 0 }, %struct.comedi_krange { i32 0, i32 200000, i32 0 }, %struct.comedi_krange { i32 0, i32 100000, i32 0 }] }, align 4, !dbg !4256
@ao_ranges_6030 = internal constant { i32, [2 x %struct.comedi_krange] } { i32 2, [2 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 0, i32 10000000, i32 0 }] }, align 4, !dbg !4263
@ai_ranges_6052 = internal constant { i32, [15 x %struct.comedi_krange] } { i32 15, [15 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -2500000, i32 2500000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 0 }, %struct.comedi_krange { i32 -500000, i32 500000, i32 0 }, %struct.comedi_krange { i32 -250000, i32 250000, i32 0 }, %struct.comedi_krange { i32 -100000, i32 100000, i32 0 }, %struct.comedi_krange { i32 -50000, i32 50000, i32 0 }, %struct.comedi_krange { i32 0, i32 10000000, i32 0 }, %struct.comedi_krange { i32 0, i32 5000000, i32 0 }, %struct.comedi_krange { i32 0, i32 2000000, i32 0 }, %struct.comedi_krange { i32 0, i32 1000000, i32 0 }, %struct.comedi_krange { i32 0, i32 500000, i32 0 }, %struct.comedi_krange { i32 0, i32 200000, i32 0 }, %struct.comedi_krange { i32 0, i32 100000, i32 0 }] }, align 4, !dbg !4268
@ai_ranges_4020 = internal constant { i32, [2 x %struct.comedi_krange] } { i32 2, [2 x %struct.comedi_krange] [%struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 0 }] }, align 4, !dbg !4275
@ao_ranges_4020 = internal constant { i32, [2 x %struct.comedi_krange] } { i32 2, [2 x %struct.comedi_krange] [%struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }] }, align 4, !dbg !4277
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@set_ai_fifo_segment_length.increment_size = internal constant i32 256, align 4, !dbg !4283
@.str.32 = private unnamed_addr constant [14 x i8] c"fifo overrun\0A\00", align 1
@.str.33 = private unnamed_addr constant [35 x i8] c"cb_pcidas64: bug! num_samples < 0\0A\00", align 1
@range_unipolar5 = external dso_local constant %struct.comedi_lrange, align 4
@.str.34 = private unnamed_addr constant [72 x i8] c"AO command and AI external channel queue cannot be used simultaneously\0A\00", align 1
@.str.35 = private unnamed_addr constant [86 x i8] c"Use internal AI channel queue (channels must be consecutive and use same range/aref)\0A\00", align 1
@check_adc_timing.min_convert_divisor = internal constant i32 3, align 4, !dbg !4290
@check_adc_timing.max_convert_divisor = internal constant i32 16777218, align 4, !dbg !4295
@check_adc_timing.min_scan_divisor_4020 = internal constant i32 2, align 4, !dbg !4297
@.str.36 = private unnamed_addr constant [31 x i8] c"bug! failed to set ai pacing!\0A\00", align 1
@i2c_write.read_bit = internal constant i32 1, align 4, !dbg !4301
@.str.37 = private unnamed_addr constant [24 x i8] c"failed: no acknowledge\0A\00", align 1
@i2c_set_scl.clock_bit = internal constant i32 65536, align 4, !dbg !4306
@i2c_set_sda.data_bit = internal constant i32 67108864, align 4, !dbg !4315
@.str.38 = private unnamed_addr constant [19 x i8] c"bug! bad channel?\0A\00", align 1
@.str.39 = private unnamed_addr constant [22 x i8] c"bug! bad range code?\0A\00", align 1
@.str.40 = private unnamed_addr constant [41 x i8] c"bug! last ao channel < first ao channel\0A\00", align 1
@.str.41 = private unnamed_addr constant [25 x i8] c"bug! ao divisor too big\0A\00", align 1
@caldac_8800_write.num_caldac_channels = internal constant i32 8, align 4, !dbg !4318
@caldac_8800_write.bitstream_length = internal constant i32 11, align 4, !dbg !4323
@caldac_8800_write.caldac_8800_udelay = internal constant i32 1, align 4, !dbg !4325
@.str.42 = private unnamed_addr constant [24 x i8] c"illegal caldac channel\0A\00", align 1
@.str.43 = private unnamed_addr constant [24 x i8] c"invalid caldac channel\0A\00", align 1
@ad8402_write.bitstream_length = internal constant i32 10, align 4, !dbg !4327
@ad8402_write.ad8402_udelay = internal constant i32 1, align 4, !dbg !4332
@read_eeprom.bitstream_length = internal constant i32 11, align 4, !dbg !4334
@read_eeprom.read_command = internal constant i32 6, align 4, !dbg !4339
@read_eeprom.value_length = internal constant i32 16, align 4, !dbg !4341
@read_eeprom.eeprom_udelay = internal constant i32 1, align 4, !dbg !4343
@cb_pcidas64_pci_table = internal constant [22 x %struct.pci_device_id] [%struct.pci_device_id { i32 4871, i32 29, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4871, i32 30, i32 -1, i32 -1, i32 0, i32 0, i64 1 }, %struct.pci_device_id { i32 4871, i32 53, i32 -1, i32 -1, i32 0, i32 0, i64 2 }, %struct.pci_device_id { i32 4871, i32 54, i32 -1, i32 -1, i32 0, i32 0, i64 3 }, %struct.pci_device_id { i32 4871, i32 55, i32 -1, i32 -1, i32 0, i32 0, i64 4 }, %struct.pci_device_id { i32 4871, i32 82, i32 -1, i32 -1, i32 0, i32 0, i64 20 }, %struct.pci_device_id { i32 4871, i32 93, i32 -1, i32 -1, i32 0, i32 0, i64 7 }, %struct.pci_device_id { i32 4871, i32 94, i32 -1, i32 -1, i32 0, i32 0, i64 8 }, %struct.pci_device_id { i32 4871, i32 95, i32 -1, i32 -1, i32 0, i32 0, i64 9 }, %struct.pci_device_id { i32 4871, i32 96, i32 -1, i32 -1, i32 0, i32 0, i64 10 }, %struct.pci_device_id { i32 4871, i32 97, i32 -1, i32 -1, i32 0, i32 0, i64 11 }, %struct.pci_device_id { i32 4871, i32 98, i32 -1, i32 -1, i32 0, i32 0, i64 12 }, %struct.pci_device_id { i32 4871, i32 99, i32 -1, i32 -1, i32 0, i32 0, i64 13 }, %struct.pci_device_id { i32 4871, i32 100, i32 -1, i32 -1, i32 0, i32 0, i64 14 }, %struct.pci_device_id { i32 4871, i32 101, i32 -1, i32 -1, i32 0, i32 0, i64 16 }, %struct.pci_device_id { i32 4871, i32 102, i32 -1, i32 -1, i32 0, i32 0, i64 17 }, %struct.pci_device_id { i32 4871, i32 103, i32 -1, i32 -1, i32 0, i32 0, i64 18 }, %struct.pci_device_id { i32 4871, i32 104, i32 -1, i32 -1, i32 0, i32 0, i64 19 }, %struct.pci_device_id { i32 4871, i32 111, i32 -1, i32 -1, i32 0, i32 0, i64 15 }, %struct.pci_device_id { i32 4871, i32 120, i32 -1, i32 -1, i32 0, i32 0, i64 5 }, %struct.pci_device_id { i32 4871, i32 121, i32 -1, i32 -1, i32 0, i32 0, i64 6 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !4624
@llvm.used = appending global [7 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_cb_pcidas64_driver_init234 to i8*), i8* bitcast (void ()* @cb_pcidas64_driver_exit to i8*), i8* bitcast (void ()** @__exitcall_cb_pcidas64_driver_exit to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__UNIQUE_ID_author235, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_description236, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__UNIQUE_ID_file237, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__UNIQUE_ID_license238, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @cb_pcidas64_driver_init() #0 section ".init.text" !dbg !4635 {
entry:
  %call = call i32 @comedi_pci_driver_register(%struct.comedi_driver* @cb_pcidas64_driver, %struct.pci_driver* @cb_pcidas64_pci_driver) #7, !dbg !4638
  ret i32 %call, !dbg !4638
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @cb_pcidas64_driver_exit() #0 section ".exit.text" !dbg !4639 {
entry:
  call void @comedi_pci_driver_unregister(%struct.comedi_driver* @cb_pcidas64_driver, %struct.pci_driver* @cb_pcidas64_pci_driver) #7, !dbg !4640
  ret void, !dbg !4640
}

; Function Attrs: noredzone
declare dso_local void @comedi_pci_driver_unregister(%struct.comedi_driver*, %struct.pci_driver*) #1

; Function Attrs: noredzone
declare dso_local i32 @comedi_pci_driver_register(%struct.comedi_driver*, %struct.pci_driver*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @detach(%struct.comedi_device* %dev) #2 !dbg !4641 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !4642, metadata !DIExpression()), !dbg !4643
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !4644, metadata !DIExpression()), !dbg !4699
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4700
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !4701
  %1 = load i8*, i8** %private, align 8, !dbg !4701
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !4700
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !4699
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4702
  %irq = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 20, !dbg !4704
  %4 = load i32, i32* %irq, align 8, !dbg !4704
  %tobool = icmp ne i32 %4, 0, !dbg !4702
  br i1 %tobool, label %if.then, label %if.end, !dbg !4705

if.then:                                          ; preds = %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4706
  %irq1 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 20, !dbg !4707
  %6 = load i32, i32* %irq1, align 8, !dbg !4707
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4708
  %8 = bitcast %struct.comedi_device* %7 to i8*, !dbg !4708
  %call = call i8* @free_irq(i32 %6, i8* %8) #7, !dbg !4709
  br label %if.end, !dbg !4709

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4710
  %tobool2 = icmp ne %struct.pcidas64_private* %9, null, !dbg !4710
  br i1 %tobool2, label %if.then3, label %if.end16, !dbg !4712

if.then3:                                         ; preds = %if.end
  %10 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4713
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %10, i32 0, i32 2, !dbg !4716
  %11 = load i8*, i8** %plx9080_iobase, align 8, !dbg !4716
  %tobool4 = icmp ne i8* %11, null, !dbg !4713
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !4717

if.then5:                                         ; preds = %if.then3
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4718
  call void @disable_plx_interrupts(%struct.comedi_device* %12) #7, !dbg !4720
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4721
  %plx9080_iobase6 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 2, !dbg !4722
  %14 = load i8*, i8** %plx9080_iobase6, align 8, !dbg !4722
  call void @iounmap(i8* %14) #7, !dbg !4723
  br label %if.end7, !dbg !4724

if.end7:                                          ; preds = %if.then5, %if.then3
  %15 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4725
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %15, i32 0, i32 3, !dbg !4727
  %16 = load i8*, i8** %main_iobase, align 8, !dbg !4727
  %tobool8 = icmp ne i8* %16, null, !dbg !4725
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !4728

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4729
  %main_iobase10 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %17, i32 0, i32 3, !dbg !4730
  %18 = load i8*, i8** %main_iobase10, align 8, !dbg !4730
  call void @iounmap(i8* %18) #7, !dbg !4731
  br label %if.end11, !dbg !4731

if.end11:                                         ; preds = %if.then9, %if.end7
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4732
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %19, i32 0, i32 17, !dbg !4734
  %20 = load i8*, i8** %mmio, align 8, !dbg !4734
  %tobool12 = icmp ne i8* %20, null, !dbg !4732
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !4735

if.then13:                                        ; preds = %if.end11
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4736
  %mmio14 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %21, i32 0, i32 17, !dbg !4737
  %22 = load i8*, i8** %mmio14, align 8, !dbg !4737
  call void @iounmap(i8* %22) #7, !dbg !4738
  br label %if.end15, !dbg !4738

if.end15:                                         ; preds = %if.then13, %if.end11
  br label %if.end16, !dbg !4739

if.end16:                                         ; preds = %if.end15, %if.end
  %23 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4740
  call void @comedi_pci_disable(%struct.comedi_device* %23) #7, !dbg !4741
  %24 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4742
  call void @cb_pcidas64_free_dma(%struct.comedi_device* %24) #7, !dbg !4743
  ret void, !dbg !4744
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @auto_attach(%struct.comedi_device* %dev, i64 %context) #2 !dbg !4745 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %context.addr = alloca i64, align 8
  %pcidev = alloca %struct.pci_dev*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %local_range = alloca i32, align 4
  %local_decode = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !4746, metadata !DIExpression()), !dbg !4747
  store i64 %context, i64* %context.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %context.addr, metadata !4748, metadata !DIExpression()), !dbg !4749
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pcidev, metadata !4750, metadata !DIExpression()), !dbg !4751
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4752
  %call = call %struct.pci_dev* @comedi_to_pci_dev(%struct.comedi_device* %0) #7, !dbg !4753
  store %struct.pci_dev* %call, %struct.pci_dev** %pcidev, align 8, !dbg !4751
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !4754, metadata !DIExpression()), !dbg !4756
  store %struct.pcidas64_board* null, %struct.pcidas64_board** %board, align 8, !dbg !4756
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !4757, metadata !DIExpression()), !dbg !4758
  call void @llvm.dbg.declare(metadata i32* %local_range, metadata !4759, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.declare(metadata i32* %local_decode, metadata !4761, metadata !DIExpression()), !dbg !4762
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !4763, metadata !DIExpression()), !dbg !4764
  %1 = load i64, i64* %context.addr, align 8, !dbg !4765
  %cmp = icmp ult i64 %1, 21, !dbg !4767
  br i1 %cmp, label %if.then, label %if.end, !dbg !4768

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %context.addr, align 8, !dbg !4769
  %arrayidx = getelementptr [21 x %struct.pcidas64_board], [21 x %struct.pcidas64_board]* @pcidas64_boards, i64 0, i64 %2, !dbg !4770
  store %struct.pcidas64_board* %arrayidx, %struct.pcidas64_board** %board, align 8, !dbg !4771
  br label %if.end, !dbg !4772

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !4773
  %tobool = icmp ne %struct.pcidas64_board* %3, null, !dbg !4773
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !4775

if.then2:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !4776
  br label %return, !dbg !4776

if.end3:                                          ; preds = %if.end
  %4 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !4777
  %5 = bitcast %struct.pcidas64_board* %4 to i8*, !dbg !4777
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4778
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 9, !dbg !4779
  store i8* %5, i8** %board_ptr, align 8, !dbg !4780
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4781
  %call4 = call i8* @comedi_alloc_devpriv(%struct.comedi_device* %7, i64 18824) #7, !dbg !4782
  %8 = bitcast i8* %call4 to %struct.pcidas64_private*, !dbg !4782
  store %struct.pcidas64_private* %8, %struct.pcidas64_private** %devpriv, align 8, !dbg !4783
  %9 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4784
  %tobool5 = icmp ne %struct.pcidas64_private* %9, null, !dbg !4784
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !4786

if.then6:                                         ; preds = %if.end3
  store i32 -12, i32* %retval, align 4, !dbg !4787
  br label %return, !dbg !4787

if.end7:                                          ; preds = %if.end3
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4788
  %call8 = call i32 @comedi_pci_enable(%struct.comedi_device* %10) #7, !dbg !4789
  store i32 %call8, i32* %retval1, align 4, !dbg !4790
  %11 = load i32, i32* %retval1, align 4, !dbg !4791
  %tobool9 = icmp ne i32 %11, 0, !dbg !4791
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !4793

if.then10:                                        ; preds = %if.end7
  %12 = load i32, i32* %retval1, align 4, !dbg !4794
  store i32 %12, i32* %retval, align 4, !dbg !4795
  br label %return, !dbg !4795

if.end11:                                         ; preds = %if.end7
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !4796
  call void @pci_set_master(%struct.pci_dev* %13) #7, !dbg !4797
  %14 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !4798
  %name = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %14, i32 0, i32 0, !dbg !4799
  %15 = load i8*, i8** %name, align 8, !dbg !4799
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4800
  %board_name = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %16, i32 0, i32 8, !dbg !4801
  store i8* %15, i8** %board_name, align 8, !dbg !4802
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !4803
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 44, !dbg !4803
  %arrayidx12 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 2, !dbg !4803
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx12, i32 0, i32 0, !dbg !4803
  %18 = load i64, i64* %start, align 8, !dbg !4803
  %19 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4804
  %main_phys_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %19, i32 0, i32 0, !dbg !4805
  store i64 %18, i64* %main_phys_iobase, align 8, !dbg !4806
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !4807
  %resource13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 44, !dbg !4807
  %arrayidx14 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource13, i64 0, i64 3, !dbg !4807
  %start15 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx14, i32 0, i32 0, !dbg !4807
  %21 = load i64, i64* %start15, align 8, !dbg !4807
  %22 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4808
  %dio_counter_phys_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %22, i32 0, i32 1, !dbg !4809
  store i64 %21, i64* %dio_counter_phys_iobase, align 8, !dbg !4810
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !4811
  %call16 = call i8* @pci_ioremap_bar(%struct.pci_dev* %23, i32 0) #7, !dbg !4812
  %24 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4813
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %24, i32 0, i32 2, !dbg !4814
  store i8* %call16, i8** %plx9080_iobase, align 8, !dbg !4815
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !4816
  %call17 = call i8* @pci_ioremap_bar(%struct.pci_dev* %25, i32 2) #7, !dbg !4817
  %26 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4818
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %26, i32 0, i32 3, !dbg !4819
  store i8* %call17, i8** %main_iobase, align 8, !dbg !4820
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !4821
  %call18 = call i8* @pci_ioremap_bar(%struct.pci_dev* %27, i32 3) #7, !dbg !4822
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4823
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %28, i32 0, i32 17, !dbg !4824
  store i8* %call18, i8** %mmio, align 8, !dbg !4825
  %29 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4826
  %plx9080_iobase19 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %29, i32 0, i32 2, !dbg !4828
  %30 = load i8*, i8** %plx9080_iobase19, align 8, !dbg !4828
  %tobool20 = icmp ne i8* %30, null, !dbg !4826
  br i1 %tobool20, label %lor.lhs.false, label %if.then26, !dbg !4829

lor.lhs.false:                                    ; preds = %if.end11
  %31 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4830
  %main_iobase21 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %31, i32 0, i32 3, !dbg !4831
  %32 = load i8*, i8** %main_iobase21, align 8, !dbg !4831
  %tobool22 = icmp ne i8* %32, null, !dbg !4830
  br i1 %tobool22, label %lor.lhs.false23, label %if.then26, !dbg !4832

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %33 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4833
  %mmio24 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %33, i32 0, i32 17, !dbg !4834
  %34 = load i8*, i8** %mmio24, align 8, !dbg !4834
  %tobool25 = icmp ne i8* %34, null, !dbg !4833
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !4835

if.then26:                                        ; preds = %lor.lhs.false23, %lor.lhs.false, %if.end11
  %35 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4836
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %35, i32 0, i32 4, !dbg !4836
  %36 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !4836
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %36, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #8, !dbg !4836
  store i32 -12, i32* %retval, align 4, !dbg !4838
  br label %return, !dbg !4838

if.end27:                                         ; preds = %lor.lhs.false23
  %37 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4839
  %plx9080_iobase28 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %37, i32 0, i32 2, !dbg !4840
  %38 = load i8*, i8** %plx9080_iobase28, align 8, !dbg !4840
  %add.ptr = getelementptr i8, i8* %38, i64 0, !dbg !4841
  %call29 = call i32 @readl(i8* %add.ptr) #7, !dbg !4842
  %conv = zext i32 %call29 to i64, !dbg !4842
  %and = and i64 %conv, 4294967280, !dbg !4843
  %conv30 = trunc i64 %and to i32, !dbg !4842
  store i32 %conv30, i32* %local_range, align 4, !dbg !4844
  %39 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4845
  %plx9080_iobase31 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %39, i32 0, i32 2, !dbg !4846
  %40 = load i8*, i8** %plx9080_iobase31, align 8, !dbg !4846
  %add.ptr32 = getelementptr i8, i8* %40, i64 4, !dbg !4847
  %call33 = call i32 @readl(i8* %add.ptr32) #7, !dbg !4848
  %41 = load i32, i32* %local_range, align 4, !dbg !4849
  %and34 = and i32 %call33, %41, !dbg !4850
  %conv35 = zext i32 %and34 to i64, !dbg !4848
  %and36 = and i64 %conv35, 4294967280, !dbg !4851
  %conv37 = trunc i64 %and36 to i32, !dbg !4848
  store i32 %conv37, i32* %local_decode, align 4, !dbg !4852
  %42 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4853
  %main_phys_iobase38 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %42, i32 0, i32 0, !dbg !4854
  %43 = load i64, i64* %main_phys_iobase38, align 8, !dbg !4854
  %conv39 = trunc i64 %43 to i32, !dbg !4855
  %44 = load i32, i32* %local_range, align 4, !dbg !4856
  %neg = xor i32 %44, -1, !dbg !4857
  %and40 = and i32 %conv39, %neg, !dbg !4858
  %45 = load i32, i32* %local_decode, align 4, !dbg !4859
  %or = or i32 %and40, %45, !dbg !4860
  %46 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4861
  %local0_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %46, i32 0, i32 4, !dbg !4862
  store i32 %or, i32* %local0_iobase, align 8, !dbg !4863
  %47 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4864
  %plx9080_iobase41 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %47, i32 0, i32 2, !dbg !4865
  %48 = load i8*, i8** %plx9080_iobase41, align 8, !dbg !4865
  %add.ptr42 = getelementptr i8, i8* %48, i64 240, !dbg !4866
  %call43 = call i32 @readl(i8* %add.ptr42) #7, !dbg !4867
  %conv44 = zext i32 %call43 to i64, !dbg !4867
  %and45 = and i64 %conv44, 4294967280, !dbg !4868
  %conv46 = trunc i64 %and45 to i32, !dbg !4867
  store i32 %conv46, i32* %local_range, align 4, !dbg !4869
  %49 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4870
  %plx9080_iobase47 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %49, i32 0, i32 2, !dbg !4871
  %50 = load i8*, i8** %plx9080_iobase47, align 8, !dbg !4871
  %add.ptr48 = getelementptr i8, i8* %50, i64 244, !dbg !4872
  %call49 = call i32 @readl(i8* %add.ptr48) #7, !dbg !4873
  %51 = load i32, i32* %local_range, align 4, !dbg !4874
  %and50 = and i32 %call49, %51, !dbg !4875
  %conv51 = zext i32 %and50 to i64, !dbg !4873
  %and52 = and i64 %conv51, 4294967280, !dbg !4876
  %conv53 = trunc i64 %and52 to i32, !dbg !4873
  store i32 %conv53, i32* %local_decode, align 4, !dbg !4877
  %52 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4878
  %dio_counter_phys_iobase54 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %52, i32 0, i32 1, !dbg !4879
  %53 = load i64, i64* %dio_counter_phys_iobase54, align 8, !dbg !4879
  %conv55 = trunc i64 %53 to i32, !dbg !4880
  %54 = load i32, i32* %local_range, align 4, !dbg !4881
  %neg56 = xor i32 %54, -1, !dbg !4882
  %and57 = and i32 %conv55, %neg56, !dbg !4883
  %55 = load i32, i32* %local_decode, align 4, !dbg !4884
  %or58 = or i32 %and57, %55, !dbg !4885
  %56 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4886
  %local1_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %56, i32 0, i32 5, !dbg !4887
  store i32 %or58, i32* %local1_iobase, align 4, !dbg !4888
  %57 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4889
  %call59 = call i32 @alloc_and_init_dma_members(%struct.comedi_device* %57) #7, !dbg !4890
  store i32 %call59, i32* %retval1, align 4, !dbg !4891
  %58 = load i32, i32* %retval1, align 4, !dbg !4892
  %cmp60 = icmp slt i32 %58, 0, !dbg !4894
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !4895

if.then62:                                        ; preds = %if.end27
  %59 = load i32, i32* %retval1, align 4, !dbg !4896
  store i32 %59, i32* %retval, align 4, !dbg !4897
  br label %return, !dbg !4897

if.end63:                                         ; preds = %if.end27
  %60 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4898
  %61 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4899
  %main_iobase64 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %61, i32 0, i32 3, !dbg !4900
  %62 = load i8*, i8** %main_iobase64, align 8, !dbg !4900
  %add.ptr65 = getelementptr i8, i8* %62, i64 0, !dbg !4901
  %call66 = call zeroext i16 @readw(i8* %add.ptr65) #7, !dbg !4902
  %call67 = call i32 @hw_revision(%struct.comedi_device* %60, i16 zeroext %call66) #7, !dbg !4903
  %63 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4904
  %hw_revision = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %63, i32 0, i32 16, !dbg !4905
  store i32 %call67, i32* %hw_revision, align 4, !dbg !4906
  %64 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4907
  call void @init_plx9080(%struct.comedi_device* %64) #7, !dbg !4908
  %65 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4909
  call void @init_stc_registers(%struct.comedi_device* %65) #7, !dbg !4910
  %66 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !4911
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %66, i32 0, i32 43, !dbg !4912
  %67 = load i32, i32* %irq, align 4, !dbg !4912
  %68 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4913
  %board_name68 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %68, i32 0, i32 8, !dbg !4914
  %69 = load i8*, i8** %board_name68, align 8, !dbg !4914
  %70 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4915
  %71 = bitcast %struct.comedi_device* %70 to i8*, !dbg !4915
  %call69 = call i32 @request_irq(i32 %67, i32 (i32, i8*)* @handle_interrupt, i64 128, i8* %69, i8* %71) #7, !dbg !4916
  store i32 %call69, i32* %retval1, align 4, !dbg !4917
  %72 = load i32, i32* %retval1, align 4, !dbg !4918
  %tobool70 = icmp ne i32 %72, 0, !dbg !4918
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !4920

if.then71:                                        ; preds = %if.end63
  %73 = load i32, i32* %retval1, align 4, !dbg !4921
  store i32 %73, i32* %retval, align 4, !dbg !4923
  br label %return, !dbg !4923

if.end72:                                         ; preds = %if.end63
  %74 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !4924
  %irq73 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %74, i32 0, i32 43, !dbg !4925
  %75 = load i32, i32* %irq73, align 4, !dbg !4925
  %76 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4926
  %irq74 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %76, i32 0, i32 20, !dbg !4927
  store i32 %75, i32* %irq74, align 8, !dbg !4928
  %77 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4929
  %call75 = call i32 @setup_subdevices(%struct.comedi_device* %77) #7, !dbg !4930
  store i32 %call75, i32* %retval1, align 4, !dbg !4931
  %78 = load i32, i32* %retval1, align 4, !dbg !4932
  %cmp76 = icmp slt i32 %78, 0, !dbg !4934
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !4935

if.then78:                                        ; preds = %if.end72
  %79 = load i32, i32* %retval1, align 4, !dbg !4936
  store i32 %79, i32* %retval, align 4, !dbg !4937
  br label %return, !dbg !4937

if.end79:                                         ; preds = %if.end72
  store i32 0, i32* %retval, align 4, !dbg !4938
  br label %return, !dbg !4938

return:                                           ; preds = %if.end79, %if.then78, %if.then71, %if.then62, %if.then26, %if.then10, %if.then6, %if.then2
  %80 = load i32, i32* %retval, align 4, !dbg !4939
  ret i32 %80, !dbg !4939
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disable_plx_interrupts(%struct.comedi_device* %dev) #2 !dbg !4940 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !4941, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !4943, metadata !DIExpression()), !dbg !4944
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4945
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !4946
  %1 = load i8*, i8** %private, align 8, !dbg !4946
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !4945
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !4944
  %3 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4947
  %plx_intcsr_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %3, i32 0, i32 23, !dbg !4948
  store i32 0, i32* %plx_intcsr_bits, align 8, !dbg !4949
  %4 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4950
  %plx_intcsr_bits1 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %4, i32 0, i32 23, !dbg !4951
  %5 = load i32, i32* %plx_intcsr_bits1, align 8, !dbg !4951
  %6 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4952
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %6, i32 0, i32 2, !dbg !4953
  %7 = load i8*, i8** %plx9080_iobase, align 8, !dbg !4953
  %add.ptr = getelementptr i8, i8* %7, i64 104, !dbg !4954
  call void @writel(i32 %5, i8* %add.ptr) #7, !dbg !4955
  ret void, !dbg !4956
}

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #1

; Function Attrs: noredzone
declare dso_local void @comedi_pci_disable(%struct.comedi_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cb_pcidas64_free_dma(%struct.comedi_device* %dev) #2 !dbg !4957 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %pcidev = alloca %struct.pci_dev*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !4958, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !4960, metadata !DIExpression()), !dbg !4961
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4962
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !4963
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !4963
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !4962
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !4961
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pcidev, metadata !4964, metadata !DIExpression()), !dbg !4965
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4966
  %call = call %struct.pci_dev* @comedi_to_pci_dev(%struct.comedi_device* %3) #7, !dbg !4967
  store %struct.pci_dev* %call, %struct.pci_dev** %pcidev, align 8, !dbg !4965
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !4968, metadata !DIExpression()), !dbg !4969
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4970
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 3, !dbg !4971
  %5 = load i8*, i8** %private, align 8, !dbg !4971
  %6 = bitcast i8* %5 to %struct.pcidas64_private*, !dbg !4970
  store %struct.pcidas64_private* %6, %struct.pcidas64_private** %devpriv, align 8, !dbg !4969
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4972, metadata !DIExpression()), !dbg !4973
  %7 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4974
  %tobool = icmp ne %struct.pcidas64_private* %7, null, !dbg !4974
  br i1 %tobool, label %if.end, label %if.then, !dbg !4976

if.then:                                          ; preds = %entry
  br label %if.end38, !dbg !4977

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !4978
  br label %for.cond, !dbg !4980

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !4981
  %9 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !4983
  %call1 = call i32 @ai_dma_ring_count(%struct.pcidas64_board* %9) #7, !dbg !4984
  %cmp = icmp ult i32 %8, %call1, !dbg !4985
  br i1 %cmp, label %for.body, label %for.end, !dbg !4986

for.body:                                         ; preds = %for.cond
  %10 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4987
  %ai_buffer = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %10, i32 0, i32 6, !dbg !4990
  %11 = load i32, i32* %i, align 4, !dbg !4991
  %idxprom = sext i32 %11 to i64, !dbg !4987
  %arrayidx = getelementptr [128 x i16*], [128 x i16*]* %ai_buffer, i64 0, i64 %idxprom, !dbg !4987
  %12 = load i16*, i16** %arrayidx, align 8, !dbg !4987
  %tobool2 = icmp ne i16* %12, null, !dbg !4987
  br i1 %tobool2, label %if.then3, label %if.end10, !dbg !4992

if.then3:                                         ; preds = %for.body
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !4993
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !4994
  %14 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4995
  %ai_buffer5 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %14, i32 0, i32 6, !dbg !4996
  %15 = load i32, i32* %i, align 4, !dbg !4997
  %idxprom6 = sext i32 %15 to i64, !dbg !4995
  %arrayidx7 = getelementptr [128 x i16*], [128 x i16*]* %ai_buffer5, i64 0, i64 %idxprom6, !dbg !4995
  %16 = load i16*, i16** %arrayidx7, align 8, !dbg !4995
  %17 = bitcast i16* %16 to i8*, !dbg !4995
  %18 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !4998
  %ai_buffer_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %18, i32 0, i32 7, !dbg !4999
  %19 = load i32, i32* %i, align 4, !dbg !5000
  %idxprom8 = sext i32 %19 to i64, !dbg !4998
  %arrayidx9 = getelementptr [128 x i64], [128 x i64]* %ai_buffer_bus_addr, i64 0, i64 %idxprom8, !dbg !4998
  %20 = load i64, i64* %arrayidx9, align 8, !dbg !4998
  call void @dma_free_coherent(%struct.device* %dev4, i64 4096, i8* %17, i64 %20) #7, !dbg !5001
  br label %if.end10, !dbg !5001

if.end10:                                         ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !5002

for.inc:                                          ; preds = %if.end10
  %21 = load i32, i32* %i, align 4, !dbg !5003
  %inc = add i32 %21, 1, !dbg !5003
  store i32 %inc, i32* %i, align 4, !dbg !5003
  br label %for.cond, !dbg !5004, !llvm.loop !5005

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5007
  br label %for.cond11, !dbg !5009

for.cond11:                                       ; preds = %for.inc25, %for.end
  %22 = load i32, i32* %i, align 4, !dbg !5010
  %cmp12 = icmp slt i32 %22, 16, !dbg !5012
  br i1 %cmp12, label %for.body13, label %for.end27, !dbg !5013

for.body13:                                       ; preds = %for.cond11
  %23 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5014
  %ao_buffer = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %23, i32 0, i32 11, !dbg !5017
  %24 = load i32, i32* %i, align 4, !dbg !5018
  %idxprom14 = sext i32 %24 to i64, !dbg !5014
  %arrayidx15 = getelementptr [16 x i16*], [16 x i16*]* %ao_buffer, i64 0, i64 %idxprom14, !dbg !5014
  %25 = load i16*, i16** %arrayidx15, align 8, !dbg !5014
  %tobool16 = icmp ne i16* %25, null, !dbg !5014
  br i1 %tobool16, label %if.then17, label %if.end24, !dbg !5019

if.then17:                                        ; preds = %for.body13
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !5020
  %dev18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !5021
  %27 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5022
  %ao_buffer19 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %27, i32 0, i32 11, !dbg !5023
  %28 = load i32, i32* %i, align 4, !dbg !5024
  %idxprom20 = sext i32 %28 to i64, !dbg !5022
  %arrayidx21 = getelementptr [16 x i16*], [16 x i16*]* %ao_buffer19, i64 0, i64 %idxprom20, !dbg !5022
  %29 = load i16*, i16** %arrayidx21, align 8, !dbg !5022
  %30 = bitcast i16* %29 to i8*, !dbg !5022
  %31 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5025
  %ao_buffer_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %31, i32 0, i32 12, !dbg !5026
  %32 = load i32, i32* %i, align 4, !dbg !5027
  %idxprom22 = sext i32 %32 to i64, !dbg !5025
  %arrayidx23 = getelementptr [16 x i64], [16 x i64]* %ao_buffer_bus_addr, i64 0, i64 %idxprom22, !dbg !5025
  %33 = load i64, i64* %arrayidx23, align 8, !dbg !5025
  call void @dma_free_coherent(%struct.device* %dev18, i64 4096, i8* %30, i64 %33) #7, !dbg !5028
  br label %if.end24, !dbg !5028

if.end24:                                         ; preds = %if.then17, %for.body13
  br label %for.inc25, !dbg !5029

for.inc25:                                        ; preds = %if.end24
  %34 = load i32, i32* %i, align 4, !dbg !5030
  %inc26 = add i32 %34, 1, !dbg !5030
  store i32 %inc26, i32* %i, align 4, !dbg !5030
  br label %for.cond11, !dbg !5031, !llvm.loop !5032

for.end27:                                        ; preds = %for.cond11
  %35 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5034
  %ai_dma_desc = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %35, i32 0, i32 8, !dbg !5036
  %36 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ai_dma_desc, align 8, !dbg !5036
  %tobool28 = icmp ne %struct.plx_dma_desc* %36, null, !dbg !5034
  br i1 %tobool28, label %if.then29, label %if.end33, !dbg !5037

if.then29:                                        ; preds = %for.end27
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !5038
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 41, !dbg !5039
  %38 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5040
  %call31 = call i32 @ai_dma_ring_count(%struct.pcidas64_board* %38) #7, !dbg !5041
  %conv = zext i32 %call31 to i64, !dbg !5041
  %mul = mul i64 16, %conv, !dbg !5042
  %39 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5043
  %ai_dma_desc32 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %39, i32 0, i32 8, !dbg !5044
  %40 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ai_dma_desc32, align 8, !dbg !5044
  %41 = bitcast %struct.plx_dma_desc* %40 to i8*, !dbg !5043
  %42 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5045
  %ai_dma_desc_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %42, i32 0, i32 9, !dbg !5046
  %43 = load i64, i64* %ai_dma_desc_bus_addr, align 8, !dbg !5046
  call void @dma_free_coherent(%struct.device* %dev30, i64 %mul, i8* %41, i64 %43) #7, !dbg !5047
  br label %if.end33, !dbg !5047

if.end33:                                         ; preds = %if.then29, %for.end27
  %44 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5048
  %ao_dma_desc = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %44, i32 0, i32 13, !dbg !5050
  %45 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ao_dma_desc, align 8, !dbg !5050
  %tobool34 = icmp ne %struct.plx_dma_desc* %45, null, !dbg !5048
  br i1 %tobool34, label %if.then35, label %if.end38, !dbg !5051

if.then35:                                        ; preds = %if.end33
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !5052
  %dev36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 41, !dbg !5053
  %47 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5054
  %ao_dma_desc37 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %47, i32 0, i32 13, !dbg !5055
  %48 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ao_dma_desc37, align 8, !dbg !5055
  %49 = bitcast %struct.plx_dma_desc* %48 to i8*, !dbg !5054
  %50 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5056
  %ao_dma_desc_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %50, i32 0, i32 14, !dbg !5057
  %51 = load i64, i64* %ao_dma_desc_bus_addr, align 8, !dbg !5057
  call void @dma_free_coherent(%struct.device* %dev36, i64 256, i8* %49, i64 %51) #7, !dbg !5058
  br label %if.end38, !dbg !5058

if.end38:                                         ; preds = %if.then, %if.then35, %if.end33
  ret void, !dbg !5059
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #2 !dbg !5060 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !5066, metadata !DIExpression()), !dbg !5067
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5068, metadata !DIExpression()), !dbg !5067
  %0 = load i32, i32* %val.addr, align 4, !dbg !5067
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !5067
  %2 = bitcast i8* %1 to i32*, !dbg !5067
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #6, !dbg !5067, !srcloc !5069
  ret void, !dbg !5067
}

; Function Attrs: noredzone
declare dso_local %struct.pci_dev* @comedi_to_pci_dev(%struct.comedi_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_dma_ring_count(%struct.pcidas64_board* %board) #2 !dbg !5070 {
entry:
  %retval = alloca i32, align 4
  %board.addr = alloca %struct.pcidas64_board*, align 8
  store %struct.pcidas64_board* %board, %struct.pcidas64_board** %board.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board.addr, metadata !5073, metadata !DIExpression()), !dbg !5074
  %0 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board.addr, align 8, !dbg !5075
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %0, i32 0, i32 12, !dbg !5077
  %1 = load i32, i32* %layout, align 8, !dbg !5077
  %cmp = icmp eq i32 %1, 2, !dbg !5078
  br i1 %cmp, label %if.then, label %if.end, !dbg !5079

if.then:                                          ; preds = %entry
  store i32 128, i32* %retval, align 4, !dbg !5080
  br label %return, !dbg !5080

if.end:                                           ; preds = %entry
  store i32 16, i32* %retval, align 4, !dbg !5081
  br label %return, !dbg !5081

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !5082
  ret i32 %2, !dbg !5082
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #2 !dbg !5083 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5087, metadata !DIExpression()), !dbg !5088
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5089, metadata !DIExpression()), !dbg !5090
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !5091, metadata !DIExpression()), !dbg !5092
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !5093, metadata !DIExpression()), !dbg !5094
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5095
  %1 = load i64, i64* %size.addr, align 8, !dbg !5096
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !5097
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !5098
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #7, !dbg !5099
  ret void, !dbg !5100
}

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #1

; Function Attrs: noredzone
declare dso_local i8* @comedi_alloc_devpriv(%struct.comedi_device*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @comedi_pci_enable(%struct.comedi_device*) #1

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i8* @pci_ioremap_bar(%struct.pci_dev*, i32) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #2 !dbg !5101 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5106, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5108, metadata !DIExpression()), !dbg !5107
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !5107
  %1 = bitcast i8* %0 to i32*, !dbg !5107
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #6, !dbg !5107, !srcloc !5109
  store i32 %2, i32* %ret, align 4, !dbg !5107
  %3 = load i32, i32* %ret, align 4, !dbg !5107
  ret i32 %3, !dbg !5107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alloc_and_init_dma_members(%struct.comedi_device* %dev) #2 !dbg !5110 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %pcidev = alloca %struct.pci_dev*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5111, metadata !DIExpression()), !dbg !5112
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !5113, metadata !DIExpression()), !dbg !5114
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5115
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !5116
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !5116
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !5115
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !5114
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pcidev, metadata !5117, metadata !DIExpression()), !dbg !5118
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5119
  %call = call %struct.pci_dev* @comedi_to_pci_dev(%struct.comedi_device* %3) #7, !dbg !5120
  store %struct.pci_dev* %call, %struct.pci_dev** %pcidev, align 8, !dbg !5118
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !5121, metadata !DIExpression()), !dbg !5122
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5123
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 3, !dbg !5124
  %5 = load i8*, i8** %private, align 8, !dbg !5124
  %6 = bitcast i8* %5 to %struct.pcidas64_private*, !dbg !5123
  store %struct.pcidas64_private* %6, %struct.pcidas64_private** %devpriv, align 8, !dbg !5122
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5125, metadata !DIExpression()), !dbg !5126
  store i32 0, i32* %i, align 4, !dbg !5127
  br label %for.cond, !dbg !5129

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !5130
  %8 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5132
  %call1 = call i32 @ai_dma_ring_count(%struct.pcidas64_board* %8) #7, !dbg !5133
  %cmp = icmp ult i32 %7, %call1, !dbg !5134
  br i1 %cmp, label %for.body, label %for.end, !dbg !5135

for.body:                                         ; preds = %for.cond
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !5136
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !5138
  %10 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5139
  %ai_buffer_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %10, i32 0, i32 7, !dbg !5140
  %11 = load i32, i32* %i, align 4, !dbg !5141
  %idxprom = sext i32 %11 to i64, !dbg !5139
  %arrayidx = getelementptr [128 x i64], [128 x i64]* %ai_buffer_bus_addr, i64 0, i64 %idxprom, !dbg !5139
  %call3 = call i8* @dma_alloc_coherent(%struct.device* %dev2, i64 4096, i64* %arrayidx, i32 3264) #7, !dbg !5142
  %12 = bitcast i8* %call3 to i16*, !dbg !5142
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5143
  %ai_buffer = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 6, !dbg !5144
  %14 = load i32, i32* %i, align 4, !dbg !5145
  %idxprom4 = sext i32 %14 to i64, !dbg !5143
  %arrayidx5 = getelementptr [128 x i16*], [128 x i16*]* %ai_buffer, i64 0, i64 %idxprom4, !dbg !5143
  store i16* %12, i16** %arrayidx5, align 8, !dbg !5146
  %15 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5147
  %ai_buffer6 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %15, i32 0, i32 6, !dbg !5149
  %16 = load i32, i32* %i, align 4, !dbg !5150
  %idxprom7 = sext i32 %16 to i64, !dbg !5147
  %arrayidx8 = getelementptr [128 x i16*], [128 x i16*]* %ai_buffer6, i64 0, i64 %idxprom7, !dbg !5147
  %17 = load i16*, i16** %arrayidx8, align 8, !dbg !5147
  %tobool = icmp ne i16* %17, null, !dbg !5147
  br i1 %tobool, label %if.end, label %if.then, !dbg !5151

if.then:                                          ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !5152
  br label %return, !dbg !5152

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5153

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !5154
  %inc = add i32 %18, 1, !dbg !5154
  store i32 %inc, i32* %i, align 4, !dbg !5154
  br label %for.cond, !dbg !5155, !llvm.loop !5156

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5158
  br label %for.cond9, !dbg !5160

for.cond9:                                        ; preds = %for.inc28, %for.end
  %19 = load i32, i32* %i, align 4, !dbg !5161
  %cmp10 = icmp slt i32 %19, 16, !dbg !5163
  br i1 %cmp10, label %for.body11, label %for.end30, !dbg !5164

for.body11:                                       ; preds = %for.cond9
  %20 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5165
  %call12 = call i32 @ao_cmd_is_supported(%struct.pcidas64_board* %20) #7, !dbg !5168
  %tobool13 = icmp ne i32 %call12, 0, !dbg !5168
  br i1 %tobool13, label %if.then14, label %if.end27, !dbg !5169

if.then14:                                        ; preds = %for.body11
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !5170
  %dev15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 41, !dbg !5172
  %22 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5173
  %ao_buffer_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %22, i32 0, i32 12, !dbg !5174
  %23 = load i32, i32* %i, align 4, !dbg !5175
  %idxprom16 = sext i32 %23 to i64, !dbg !5173
  %arrayidx17 = getelementptr [16 x i64], [16 x i64]* %ao_buffer_bus_addr, i64 0, i64 %idxprom16, !dbg !5173
  %call18 = call i8* @dma_alloc_coherent(%struct.device* %dev15, i64 4096, i64* %arrayidx17, i32 3264) #7, !dbg !5176
  %24 = bitcast i8* %call18 to i16*, !dbg !5176
  %25 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5177
  %ao_buffer = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %25, i32 0, i32 11, !dbg !5178
  %26 = load i32, i32* %i, align 4, !dbg !5179
  %idxprom19 = sext i32 %26 to i64, !dbg !5177
  %arrayidx20 = getelementptr [16 x i16*], [16 x i16*]* %ao_buffer, i64 0, i64 %idxprom19, !dbg !5177
  store i16* %24, i16** %arrayidx20, align 8, !dbg !5180
  %27 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5181
  %ao_buffer21 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %27, i32 0, i32 11, !dbg !5183
  %28 = load i32, i32* %i, align 4, !dbg !5184
  %idxprom22 = sext i32 %28 to i64, !dbg !5181
  %arrayidx23 = getelementptr [16 x i16*], [16 x i16*]* %ao_buffer21, i64 0, i64 %idxprom22, !dbg !5181
  %29 = load i16*, i16** %arrayidx23, align 8, !dbg !5181
  %tobool24 = icmp ne i16* %29, null, !dbg !5181
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !5185

if.then25:                                        ; preds = %if.then14
  store i32 -12, i32* %retval, align 4, !dbg !5186
  br label %return, !dbg !5186

if.end26:                                         ; preds = %if.then14
  br label %if.end27, !dbg !5187

if.end27:                                         ; preds = %if.end26, %for.body11
  br label %for.inc28, !dbg !5188

for.inc28:                                        ; preds = %if.end27
  %30 = load i32, i32* %i, align 4, !dbg !5189
  %inc29 = add i32 %30, 1, !dbg !5189
  store i32 %inc29, i32* %i, align 4, !dbg !5189
  br label %for.cond9, !dbg !5190, !llvm.loop !5191

for.end30:                                        ; preds = %for.cond9
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !5193
  %dev31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 41, !dbg !5194
  %32 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5195
  %call32 = call i32 @ai_dma_ring_count(%struct.pcidas64_board* %32) #7, !dbg !5196
  %conv = zext i32 %call32 to i64, !dbg !5196
  %mul = mul i64 16, %conv, !dbg !5197
  %33 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5198
  %ai_dma_desc_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %33, i32 0, i32 9, !dbg !5199
  %call33 = call i8* @dma_alloc_coherent(%struct.device* %dev31, i64 %mul, i64* %ai_dma_desc_bus_addr, i32 3264) #7, !dbg !5200
  %34 = bitcast i8* %call33 to %struct.plx_dma_desc*, !dbg !5200
  %35 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5201
  %ai_dma_desc = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %35, i32 0, i32 8, !dbg !5202
  store %struct.plx_dma_desc* %34, %struct.plx_dma_desc** %ai_dma_desc, align 8, !dbg !5203
  %36 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5204
  %ai_dma_desc34 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %36, i32 0, i32 8, !dbg !5206
  %37 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ai_dma_desc34, align 8, !dbg !5206
  %tobool35 = icmp ne %struct.plx_dma_desc* %37, null, !dbg !5204
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !5207

if.then36:                                        ; preds = %for.end30
  store i32 -12, i32* %retval, align 4, !dbg !5208
  br label %return, !dbg !5208

if.end37:                                         ; preds = %for.end30
  %38 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5209
  %call38 = call i32 @ao_cmd_is_supported(%struct.pcidas64_board* %38) #7, !dbg !5211
  %tobool39 = icmp ne i32 %call38, 0, !dbg !5211
  br i1 %tobool39, label %if.then40, label %if.end47, !dbg !5212

if.then40:                                        ; preds = %if.end37
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !5213
  %dev41 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 41, !dbg !5215
  %40 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5216
  %ao_dma_desc_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %40, i32 0, i32 14, !dbg !5217
  %call42 = call i8* @dma_alloc_coherent(%struct.device* %dev41, i64 256, i64* %ao_dma_desc_bus_addr, i32 3264) #7, !dbg !5218
  %41 = bitcast i8* %call42 to %struct.plx_dma_desc*, !dbg !5218
  %42 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5219
  %ao_dma_desc = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %42, i32 0, i32 13, !dbg !5220
  store %struct.plx_dma_desc* %41, %struct.plx_dma_desc** %ao_dma_desc, align 8, !dbg !5221
  %43 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5222
  %ao_dma_desc43 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %43, i32 0, i32 13, !dbg !5224
  %44 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ao_dma_desc43, align 8, !dbg !5224
  %tobool44 = icmp ne %struct.plx_dma_desc* %44, null, !dbg !5222
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !5225

if.then45:                                        ; preds = %if.then40
  store i32 -12, i32* %retval, align 4, !dbg !5226
  br label %return, !dbg !5226

if.end46:                                         ; preds = %if.then40
  br label %if.end47, !dbg !5227

if.end47:                                         ; preds = %if.end46, %if.end37
  store i32 0, i32* %i, align 4, !dbg !5228
  br label %for.cond48, !dbg !5230

for.cond48:                                       ; preds = %for.inc87, %if.end47
  %45 = load i32, i32* %i, align 4, !dbg !5231
  %46 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5233
  %call49 = call i32 @ai_dma_ring_count(%struct.pcidas64_board* %46) #7, !dbg !5234
  %cmp50 = icmp ult i32 %45, %call49, !dbg !5235
  br i1 %cmp50, label %for.body52, label %for.end89, !dbg !5236

for.body52:                                       ; preds = %for.cond48
  %47 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5237
  %ai_buffer_bus_addr53 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %47, i32 0, i32 7, !dbg !5237
  %48 = load i32, i32* %i, align 4, !dbg !5237
  %idxprom54 = sext i32 %48 to i64, !dbg !5237
  %arrayidx55 = getelementptr [128 x i64], [128 x i64]* %ai_buffer_bus_addr53, i64 0, i64 %idxprom54, !dbg !5237
  %49 = load i64, i64* %arrayidx55, align 8, !dbg !5237
  %conv56 = trunc i64 %49 to i32, !dbg !5237
  %50 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5239
  %ai_dma_desc57 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %50, i32 0, i32 8, !dbg !5240
  %51 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ai_dma_desc57, align 8, !dbg !5240
  %52 = load i32, i32* %i, align 4, !dbg !5241
  %idxprom58 = sext i32 %52 to i64, !dbg !5239
  %arrayidx59 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %51, i64 %idxprom58, !dbg !5239
  %pci_start_addr = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx59, i32 0, i32 0, !dbg !5242
  store i32 %conv56, i32* %pci_start_addr, align 4, !dbg !5243
  %53 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5244
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %53, i32 0, i32 12, !dbg !5246
  %54 = load i32, i32* %layout, align 8, !dbg !5246
  %cmp60 = icmp eq i32 %54, 2, !dbg !5247
  br i1 %cmp60, label %if.then62, label %if.else, !dbg !5248

if.then62:                                        ; preds = %for.body52
  %55 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5249
  %local1_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %55, i32 0, i32 5, !dbg !5249
  %56 = load i32, i32* %local1_iobase, align 4, !dbg !5249
  %add = add i32 %56, 512, !dbg !5249
  %57 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5250
  %ai_dma_desc63 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %57, i32 0, i32 8, !dbg !5251
  %58 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ai_dma_desc63, align 8, !dbg !5251
  %59 = load i32, i32* %i, align 4, !dbg !5252
  %idxprom64 = sext i32 %59 to i64, !dbg !5250
  %arrayidx65 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %58, i64 %idxprom64, !dbg !5250
  %local_start_addr = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx65, i32 0, i32 1, !dbg !5253
  store i32 %add, i32* %local_start_addr, align 4, !dbg !5254
  br label %if.end71, !dbg !5250

if.else:                                          ; preds = %for.body52
  %60 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5255
  %local0_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %60, i32 0, i32 4, !dbg !5255
  %61 = load i32, i32* %local0_iobase, align 8, !dbg !5255
  %add66 = add i32 %61, 512, !dbg !5255
  %62 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5256
  %ai_dma_desc67 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %62, i32 0, i32 8, !dbg !5257
  %63 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ai_dma_desc67, align 8, !dbg !5257
  %64 = load i32, i32* %i, align 4, !dbg !5258
  %idxprom68 = sext i32 %64 to i64, !dbg !5256
  %arrayidx69 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %63, i64 %idxprom68, !dbg !5256
  %local_start_addr70 = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx69, i32 0, i32 1, !dbg !5259
  store i32 %add66, i32* %local_start_addr70, align 4, !dbg !5260
  br label %if.end71

if.end71:                                         ; preds = %if.else, %if.then62
  %65 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5261
  %ai_dma_desc72 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %65, i32 0, i32 8, !dbg !5262
  %66 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ai_dma_desc72, align 8, !dbg !5262
  %67 = load i32, i32* %i, align 4, !dbg !5263
  %idxprom73 = sext i32 %67 to i64, !dbg !5261
  %arrayidx74 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %66, i64 %idxprom73, !dbg !5261
  %transfer_size = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx74, i32 0, i32 2, !dbg !5264
  store i32 0, i32* %transfer_size, align 4, !dbg !5265
  %68 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5266
  %ai_dma_desc_bus_addr75 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %68, i32 0, i32 9, !dbg !5266
  %69 = load i64, i64* %ai_dma_desc_bus_addr75, align 8, !dbg !5266
  %70 = load i32, i32* %i, align 4, !dbg !5266
  %add76 = add i32 %70, 1, !dbg !5266
  %71 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5266
  %call77 = call i32 @ai_dma_ring_count(%struct.pcidas64_board* %71) #7, !dbg !5266
  %rem = urem i32 %add76, %call77, !dbg !5266
  %conv78 = zext i32 %rem to i64, !dbg !5266
  %mul79 = mul i64 %conv78, 16, !dbg !5266
  %add80 = add i64 %69, %mul79, !dbg !5266
  %or = or i64 %add80, 1, !dbg !5266
  %or81 = or i64 %or, 4, !dbg !5266
  %or82 = or i64 %or81, 8, !dbg !5266
  %conv83 = trunc i64 %or82 to i32, !dbg !5266
  %72 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5267
  %ai_dma_desc84 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %72, i32 0, i32 8, !dbg !5268
  %73 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ai_dma_desc84, align 8, !dbg !5268
  %74 = load i32, i32* %i, align 4, !dbg !5269
  %idxprom85 = sext i32 %74 to i64, !dbg !5267
  %arrayidx86 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %73, i64 %idxprom85, !dbg !5267
  %next = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx86, i32 0, i32 3, !dbg !5270
  store i32 %conv83, i32* %next, align 4, !dbg !5271
  br label %for.inc87, !dbg !5272

for.inc87:                                        ; preds = %if.end71
  %75 = load i32, i32* %i, align 4, !dbg !5273
  %inc88 = add i32 %75, 1, !dbg !5273
  store i32 %inc88, i32* %i, align 4, !dbg !5273
  br label %for.cond48, !dbg !5274, !llvm.loop !5275

for.end89:                                        ; preds = %for.cond48
  %76 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5277
  %call90 = call i32 @ao_cmd_is_supported(%struct.pcidas64_board* %76) #7, !dbg !5279
  %tobool91 = icmp ne i32 %call90, 0, !dbg !5279
  br i1 %tobool91, label %if.then92, label %if.end131, !dbg !5280

if.then92:                                        ; preds = %for.end89
  store i32 0, i32* %i, align 4, !dbg !5281
  br label %for.cond93, !dbg !5284

for.cond93:                                       ; preds = %for.inc128, %if.then92
  %77 = load i32, i32* %i, align 4, !dbg !5285
  %cmp94 = icmp slt i32 %77, 16, !dbg !5287
  br i1 %cmp94, label %for.body96, label %for.end130, !dbg !5288

for.body96:                                       ; preds = %for.cond93
  %78 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5289
  %ao_buffer_bus_addr97 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %78, i32 0, i32 12, !dbg !5289
  %79 = load i32, i32* %i, align 4, !dbg !5289
  %idxprom98 = sext i32 %79 to i64, !dbg !5289
  %arrayidx99 = getelementptr [16 x i64], [16 x i64]* %ao_buffer_bus_addr97, i64 0, i64 %idxprom98, !dbg !5289
  %80 = load i64, i64* %arrayidx99, align 8, !dbg !5289
  %conv100 = trunc i64 %80 to i32, !dbg !5289
  %81 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5291
  %ao_dma_desc101 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %81, i32 0, i32 13, !dbg !5292
  %82 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ao_dma_desc101, align 8, !dbg !5292
  %83 = load i32, i32* %i, align 4, !dbg !5293
  %idxprom102 = sext i32 %83 to i64, !dbg !5291
  %arrayidx103 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %82, i64 %idxprom102, !dbg !5291
  %pci_start_addr104 = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx103, i32 0, i32 0, !dbg !5294
  store i32 %conv100, i32* %pci_start_addr104, align 4, !dbg !5295
  %84 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5296
  %local0_iobase105 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %84, i32 0, i32 4, !dbg !5296
  %85 = load i32, i32* %local0_iobase105, align 8, !dbg !5296
  %add106 = add i32 %85, 768, !dbg !5296
  %86 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5297
  %ao_dma_desc107 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %86, i32 0, i32 13, !dbg !5298
  %87 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ao_dma_desc107, align 8, !dbg !5298
  %88 = load i32, i32* %i, align 4, !dbg !5299
  %idxprom108 = sext i32 %88 to i64, !dbg !5297
  %arrayidx109 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %87, i64 %idxprom108, !dbg !5297
  %local_start_addr110 = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx109, i32 0, i32 1, !dbg !5300
  store i32 %add106, i32* %local_start_addr110, align 4, !dbg !5301
  %89 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5302
  %ao_dma_desc111 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %89, i32 0, i32 13, !dbg !5303
  %90 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ao_dma_desc111, align 8, !dbg !5303
  %91 = load i32, i32* %i, align 4, !dbg !5304
  %idxprom112 = sext i32 %91 to i64, !dbg !5302
  %arrayidx113 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %90, i64 %idxprom112, !dbg !5302
  %transfer_size114 = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx113, i32 0, i32 2, !dbg !5305
  store i32 0, i32* %transfer_size114, align 4, !dbg !5306
  %92 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5307
  %ao_dma_desc_bus_addr115 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %92, i32 0, i32 14, !dbg !5307
  %93 = load i64, i64* %ao_dma_desc_bus_addr115, align 8, !dbg !5307
  %94 = load i32, i32* %i, align 4, !dbg !5307
  %add116 = add i32 %94, 1, !dbg !5307
  %rem117 = srem i32 %add116, 16, !dbg !5307
  %conv118 = sext i32 %rem117 to i64, !dbg !5307
  %mul119 = mul i64 %conv118, 16, !dbg !5307
  %add120 = add i64 %93, %mul119, !dbg !5307
  %or121 = or i64 %add120, 1, !dbg !5307
  %or122 = or i64 %or121, 4, !dbg !5307
  %conv123 = trunc i64 %or122 to i32, !dbg !5307
  %95 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5308
  %ao_dma_desc124 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %95, i32 0, i32 13, !dbg !5309
  %96 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ao_dma_desc124, align 8, !dbg !5309
  %97 = load i32, i32* %i, align 4, !dbg !5310
  %idxprom125 = sext i32 %97 to i64, !dbg !5308
  %arrayidx126 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %96, i64 %idxprom125, !dbg !5308
  %next127 = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx126, i32 0, i32 3, !dbg !5311
  store i32 %conv123, i32* %next127, align 4, !dbg !5312
  br label %for.inc128, !dbg !5313

for.inc128:                                       ; preds = %for.body96
  %98 = load i32, i32* %i, align 4, !dbg !5314
  %inc129 = add i32 %98, 1, !dbg !5314
  store i32 %inc129, i32* %i, align 4, !dbg !5314
  br label %for.cond93, !dbg !5315, !llvm.loop !5316

for.end130:                                       ; preds = %for.cond93
  br label %if.end131, !dbg !5318

if.end131:                                        ; preds = %for.end130, %for.end89
  store i32 0, i32* %retval, align 4, !dbg !5319
  br label %return, !dbg !5319

return:                                           ; preds = %if.end131, %if.then45, %if.then36, %if.then25, %if.then
  %99 = load i32, i32* %retval, align 4, !dbg !5320
  ret i32 %99, !dbg !5320
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hw_revision(%struct.comedi_device* %dev, i16 zeroext %hw_status_bits) #2 !dbg !5321 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %hw_status_bits.addr = alloca i16, align 2
  %board = alloca %struct.pcidas64_board*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5326, metadata !DIExpression()), !dbg !5327
  store i16 %hw_status_bits, i16* %hw_status_bits.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %hw_status_bits.addr, metadata !5328, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !5330, metadata !DIExpression()), !dbg !5331
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5332
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !5333
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !5333
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !5332
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !5331
  %3 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5334
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %3, i32 0, i32 12, !dbg !5336
  %4 = load i32, i32* %layout, align 8, !dbg !5336
  %cmp = icmp eq i32 %4, 2, !dbg !5337
  br i1 %cmp, label %if.then, label %if.end, !dbg !5338

if.then:                                          ; preds = %entry
  %5 = load i16, i16* %hw_status_bits.addr, align 2, !dbg !5339
  %conv = zext i16 %5 to i32, !dbg !5339
  %shr = ashr i32 %conv, 13, !dbg !5340
  %and = and i32 %shr, 7, !dbg !5341
  store i32 %and, i32* %retval, align 4, !dbg !5342
  br label %return, !dbg !5342

if.end:                                           ; preds = %entry
  %6 = load i16, i16* %hw_status_bits.addr, align 2, !dbg !5343
  %conv1 = zext i16 %6 to i32, !dbg !5343
  %shr2 = ashr i32 %conv1, 12, !dbg !5344
  %and3 = and i32 %shr2, 15, !dbg !5345
  store i32 %and3, i32* %retval, align 4, !dbg !5346
  br label %return, !dbg !5346

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !5347
  ret i32 %7, !dbg !5347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #2 !dbg !5348 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5351, metadata !DIExpression()), !dbg !5352
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !5353, metadata !DIExpression()), !dbg !5352
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !5352
  %1 = bitcast i8* %0 to i16*, !dbg !5352
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #6, !dbg !5352, !srcloc !5354
  store i16 %2, i16* %ret, align 2, !dbg !5352
  %3 = load i16, i16* %ret, align 2, !dbg !5352
  ret i16 %3, !dbg !5352
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_plx9080(%struct.comedi_device* %dev) #2 !dbg !5355 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %bits = alloca i32, align 4
  %plx_iobase = alloca i8*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5356, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !5358, metadata !DIExpression()), !dbg !5359
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5360
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !5361
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !5361
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !5360
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !5359
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !5362, metadata !DIExpression()), !dbg !5363
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5364
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !5365
  %4 = load i8*, i8** %private, align 8, !dbg !5365
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !5364
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !5363
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !5366, metadata !DIExpression()), !dbg !5367
  call void @llvm.dbg.declare(metadata i8** %plx_iobase, metadata !5368, metadata !DIExpression()), !dbg !5369
  %6 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5370
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %6, i32 0, i32 2, !dbg !5371
  %7 = load i8*, i8** %plx9080_iobase, align 8, !dbg !5371
  store i8* %7, i8** %plx_iobase, align 8, !dbg !5369
  %8 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5372
  %plx9080_iobase1 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %8, i32 0, i32 2, !dbg !5373
  %9 = load i8*, i8** %plx9080_iobase1, align 8, !dbg !5373
  %add.ptr = getelementptr i8, i8* %9, i64 108, !dbg !5374
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !5375
  %10 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5376
  %plx_control_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %10, i32 0, i32 22, !dbg !5377
  store i32 %call, i32* %plx_control_bits, align 4, !dbg !5378
  store i32 0, i32* %bits, align 4, !dbg !5379
  %11 = load i32, i32* %bits, align 4, !dbg !5380
  %12 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5381
  %plx9080_iobase2 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %12, i32 0, i32 2, !dbg !5382
  %13 = load i8*, i8** %plx9080_iobase2, align 8, !dbg !5382
  %add.ptr3 = getelementptr i8, i8* %13, i64 12, !dbg !5383
  call void @writel(i32 %11, i8* %add.ptr3) #7, !dbg !5384
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5385
  call void @disable_plx_interrupts(%struct.comedi_device* %14) #7, !dbg !5386
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5387
  call void @abort_dma(%struct.comedi_device* %15, i32 0) #7, !dbg !5388
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5389
  call void @abort_dma(%struct.comedi_device* %16, i32 1) #7, !dbg !5390
  store i32 0, i32* %bits, align 4, !dbg !5391
  %17 = load i32, i32* %bits, align 4, !dbg !5392
  %conv = zext i32 %17 to i64, !dbg !5392
  %or = or i64 %conv, 64, !dbg !5392
  %conv4 = trunc i64 %or to i32, !dbg !5392
  store i32 %conv4, i32* %bits, align 4, !dbg !5392
  %18 = load i32, i32* %bits, align 4, !dbg !5393
  %conv5 = zext i32 %18 to i64, !dbg !5393
  %or6 = or i64 %conv5, 128, !dbg !5393
  %conv7 = trunc i64 %or6 to i32, !dbg !5393
  store i32 %conv7, i32* %bits, align 4, !dbg !5393
  %19 = load i32, i32* %bits, align 4, !dbg !5394
  %conv8 = zext i32 %19 to i64, !dbg !5394
  %or9 = or i64 %conv8, 512, !dbg !5394
  %conv10 = trunc i64 %or9 to i32, !dbg !5394
  store i32 %conv10, i32* %bits, align 4, !dbg !5394
  %20 = load i32, i32* %bits, align 4, !dbg !5395
  %conv11 = zext i32 %20 to i64, !dbg !5395
  %or12 = or i64 %conv11, 1024, !dbg !5395
  %conv13 = trunc i64 %or12 to i32, !dbg !5395
  store i32 %conv13, i32* %bits, align 4, !dbg !5395
  %21 = load i32, i32* %bits, align 4, !dbg !5396
  %conv14 = zext i32 %21 to i64, !dbg !5396
  %or15 = or i64 %conv14, 2048, !dbg !5396
  %conv16 = trunc i64 %or15 to i32, !dbg !5396
  store i32 %conv16, i32* %bits, align 4, !dbg !5396
  %22 = load i32, i32* %bits, align 4, !dbg !5397
  %conv17 = zext i32 %22 to i64, !dbg !5397
  %or18 = or i64 %conv17, 131072, !dbg !5397
  %conv19 = trunc i64 %or18 to i32, !dbg !5397
  store i32 %conv19, i32* %bits, align 4, !dbg !5397
  %23 = load i32, i32* %bits, align 4, !dbg !5398
  %conv20 = zext i32 %23 to i64, !dbg !5398
  %or21 = or i64 %conv20, 4096, !dbg !5398
  %conv22 = trunc i64 %or21 to i32, !dbg !5398
  store i32 %conv22, i32* %bits, align 4, !dbg !5398
  %24 = load i32, i32* %bits, align 4, !dbg !5399
  %conv23 = zext i32 %24 to i64, !dbg !5399
  %or24 = or i64 %conv23, 256, !dbg !5399
  %conv25 = trunc i64 %or24 to i32, !dbg !5399
  store i32 %conv25, i32* %bits, align 4, !dbg !5399
  %25 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5400
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %25, i32 0, i32 12, !dbg !5402
  %26 = load i32, i32* %layout, align 8, !dbg !5402
  %cmp = icmp eq i32 %26, 2, !dbg !5403
  br i1 %cmp, label %if.then, label %if.else, !dbg !5404

if.then:                                          ; preds = %entry
  %27 = load i32, i32* %bits, align 4, !dbg !5405
  %conv27 = zext i32 %27 to i64, !dbg !5405
  %or28 = or i64 %conv27, 2, !dbg !5405
  %conv29 = trunc i64 %or28 to i32, !dbg !5405
  store i32 %conv29, i32* %bits, align 4, !dbg !5405
  br label %if.end, !dbg !5406

if.else:                                          ; preds = %entry
  %28 = load i32, i32* %bits, align 4, !dbg !5407
  %conv30 = zext i32 %28 to i64, !dbg !5407
  %or31 = or i64 %conv30, 1, !dbg !5407
  %conv32 = trunc i64 %or31 to i32, !dbg !5407
  store i32 %conv32, i32* %bits, align 4, !dbg !5407
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %29 = load i32, i32* %bits, align 4, !dbg !5408
  %30 = load i8*, i8** %plx_iobase, align 8, !dbg !5409
  %add.ptr33 = getelementptr i8, i8* %30, i64 148, !dbg !5410
  call void @writel(i32 %29, i8* %add.ptr33) #7, !dbg !5411
  %31 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5412
  %call34 = call i32 @ao_cmd_is_supported(%struct.pcidas64_board* %31) #7, !dbg !5414
  %tobool = icmp ne i32 %call34, 0, !dbg !5414
  br i1 %tobool, label %if.then35, label %if.end37, !dbg !5415

if.then35:                                        ; preds = %if.end
  %32 = load i32, i32* %bits, align 4, !dbg !5416
  %33 = load i8*, i8** %plx_iobase, align 8, !dbg !5417
  %add.ptr36 = getelementptr i8, i8* %33, i64 128, !dbg !5418
  call void @writel(i32 %32, i8* %add.ptr36) #7, !dbg !5419
  br label %if.end37, !dbg !5419

if.end37:                                         ; preds = %if.then35, %if.end
  %34 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5420
  %plx_intcsr_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %34, i32 0, i32 23, !dbg !5421
  %35 = load i32, i32* %plx_intcsr_bits, align 8, !dbg !5422
  %conv38 = zext i32 %35 to i64, !dbg !5422
  %or39 = or i64 %conv38, 855299, !dbg !5422
  %conv40 = trunc i64 %or39 to i32, !dbg !5422
  store i32 %conv40, i32* %plx_intcsr_bits, align 8, !dbg !5422
  %36 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5423
  %plx_intcsr_bits41 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %36, i32 0, i32 23, !dbg !5424
  %37 = load i32, i32* %plx_intcsr_bits41, align 8, !dbg !5424
  %38 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5425
  %plx9080_iobase42 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %38, i32 0, i32 2, !dbg !5426
  %39 = load i8*, i8** %plx9080_iobase42, align 8, !dbg !5426
  %add.ptr43 = getelementptr i8, i8* %39, i64 104, !dbg !5427
  call void @writel(i32 %37, i8* %add.ptr43) #7, !dbg !5428
  ret void, !dbg !5429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_stc_registers(%struct.comedi_device* %dev) #2 !dbg !5430 {
entry:
  %lock.addr.i49 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i49, metadata !5431, metadata !DIExpression()), !dbg !5436
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5438, metadata !DIExpression()), !dbg !5439
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5440, metadata !DIExpression()), !dbg !5445
  %dev.addr = alloca %struct.comedi_device*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %bits = alloca i16, align 2
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5452, metadata !DIExpression()), !dbg !5453
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !5454, metadata !DIExpression()), !dbg !5455
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5456
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !5457
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !5457
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !5456
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !5455
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !5458, metadata !DIExpression()), !dbg !5459
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5460
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !5461
  %4 = load i8*, i8** %private, align 8, !dbg !5461
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !5460
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !5459
  call void @llvm.dbg.declare(metadata i16* %bits, metadata !5462, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5464, metadata !DIExpression()), !dbg !5465
  br label %do.body, !dbg !5466

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5467

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5468, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5471, metadata !DIExpression()), !dbg !5470
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5470
  %conv = zext i1 %cmp to i32, !dbg !5470
  store i32 1, i32* %tmp, align 4, !dbg !5470
  %6 = load i32, i32* %tmp, align 4, !dbg !5470
  br label %do.body2, !dbg !5472

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5473

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5474

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5476, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5480, metadata !DIExpression()), !dbg !5479
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5479
  %conv8 = zext i1 %cmp7 to i32, !dbg !5479
  store i32 1, i32* %tmp9, align 4, !dbg !5479
  %7 = load i32, i32* %tmp9, align 4, !dbg !5479
  %call = call i64 @arch_local_irq_save() #7, !dbg !5481
  store i64 %call, i64* %flags, align 8, !dbg !5481
  br label %do.end, !dbg !5481

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5474

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5473

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5482, !srcloc !5483
  br label %do.body12, !dbg !5482

do.body12:                                        ; preds = %do.body11
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5484
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 11, !dbg !5484
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5485
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !5486
  %rlock.i = bitcast %union.anon.3* %10 to %struct.raw_spinlock*, !dbg !5486
  br label %do.end14, !dbg !5484

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5482

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5473

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5472

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5467

do.end18:                                         ; preds = %do.end17
  %11 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5487
  %adc_control1_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %11, i32 0, i32 18, !dbg !5489
  %12 = load i16, i16* %adc_control1_bits, align 4, !dbg !5490
  %conv19 = zext i16 %12 to i32, !dbg !5490
  %or = or i32 %conv19, 1, !dbg !5490
  %conv20 = trunc i32 %or to i16, !dbg !5490
  store i16 %conv20, i16* %adc_control1_bits, align 4, !dbg !5490
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5491
  %adc_control1_bits21 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 18, !dbg !5492
  %14 = load i16, i16* %adc_control1_bits21, align 4, !dbg !5492
  %15 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5493
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %15, i32 0, i32 3, !dbg !5494
  %16 = load i8*, i8** %main_iobase, align 8, !dbg !5494
  %add.ptr = getelementptr i8, i8* %16, i64 18, !dbg !5495
  call void @writew(i16 zeroext %14, i8* %add.ptr) #7, !dbg !5496
  %17 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5497
  %main_iobase22 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %17, i32 0, i32 3, !dbg !5498
  %18 = load i8*, i8** %main_iobase22, align 8, !dbg !5498
  %add.ptr23 = getelementptr i8, i8* %18, i64 24, !dbg !5499
  call void @writew(i16 zeroext 255, i8* %add.ptr23) #7, !dbg !5500
  store i16 -31744, i16* %bits, align 2, !dbg !5501
  %19 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5502
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %19, i32 0, i32 12, !dbg !5504
  %20 = load i32, i32* %layout, align 8, !dbg !5504
  %cmp24 = icmp eq i32 %20, 2, !dbg !5505
  br i1 %cmp24, label %if.then, label %if.end, !dbg !5506

if.then:                                          ; preds = %do.end18
  %21 = load i16, i16* %bits, align 2, !dbg !5507
  %conv26 = zext i16 %21 to i32, !dbg !5507
  %or27 = or i32 %conv26, 1, !dbg !5507
  %conv28 = trunc i32 %or27 to i16, !dbg !5507
  store i16 %conv28, i16* %bits, align 2, !dbg !5507
  br label %if.end, !dbg !5508

if.end:                                           ; preds = %if.then, %do.end18
  %22 = load i16, i16* %bits, align 2, !dbg !5509
  %conv29 = zext i16 %22 to i32, !dbg !5509
  %23 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5510
  %hw_config_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %23, i32 0, i32 20, !dbg !5511
  %24 = load i16, i16* %hw_config_bits, align 8, !dbg !5512
  %conv30 = zext i16 %24 to i32, !dbg !5512
  %or31 = or i32 %conv30, %conv29, !dbg !5512
  %conv32 = trunc i32 %or31 to i16, !dbg !5512
  store i16 %conv32, i16* %hw_config_bits, align 8, !dbg !5512
  %25 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5513
  %hw_config_bits33 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %25, i32 0, i32 20, !dbg !5514
  %26 = load i16, i16* %hw_config_bits33, align 8, !dbg !5514
  %27 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5515
  %main_iobase34 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %27, i32 0, i32 3, !dbg !5516
  %28 = load i8*, i8** %main_iobase34, align 8, !dbg !5516
  %add.ptr35 = getelementptr i8, i8* %28, i64 2, !dbg !5517
  call void @writew(i16 zeroext %26, i8* %add.ptr35) #7, !dbg !5518
  %29 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5519
  %main_iobase36 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %29, i32 0, i32 3, !dbg !5520
  %30 = load i8*, i8** %main_iobase36, align 8, !dbg !5520
  %add.ptr37 = getelementptr i8, i8* %30, i64 12, !dbg !5521
  call void @writew(i16 zeroext 0, i8* %add.ptr37) #7, !dbg !5522
  %31 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5523
  %main_iobase38 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %31, i32 0, i32 3, !dbg !5524
  %32 = load i8*, i8** %main_iobase38, align 8, !dbg !5524
  %add.ptr39 = getelementptr i8, i8* %32, i64 20, !dbg !5525
  call void @writew(i16 zeroext 0, i8* %add.ptr39) #7, !dbg !5526
  %33 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5527
  %spinlock40 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %33, i32 0, i32 11, !dbg !5528
  %34 = load i64, i64* %flags, align 8, !dbg !5529
  store %struct.spinlock* %spinlock40, %struct.spinlock** %lock.addr.i49, align 8
  store i64 %34, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !5533
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !5533
  store i32 1, i32* %tmp.i, align 4, !dbg !5533
  %35 = load i32, i32* %tmp.i, align 4, !dbg !5533
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !5540
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !5540
  store i32 1, i32* %tmp8.i, align 4, !dbg !5540
  %36 = load i32, i32* %tmp8.i, align 4, !dbg !5540
  %37 = load i64, i64* %flags.addr.i, align 8, !dbg !5542
  call void @arch_local_irq_restore(i64 %37) #9, !dbg !5542
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5543, !srcloc !5545
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i49, align 8, !dbg !5546
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !5546
  %rlock.i50 = bitcast %union.anon.3* %39 to %struct.raw_spinlock*, !dbg !5546
  %40 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5548
  %fifo_size_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %40, i32 0, i32 19, !dbg !5549
  %41 = load i16, i16* %fifo_size_bits, align 2, !dbg !5550
  %conv41 = zext i16 %41 to i32, !dbg !5550
  %or42 = or i32 %conv41, 63488, !dbg !5550
  %conv43 = trunc i32 %or42 to i16, !dbg !5550
  store i16 %conv43, i16* %fifo_size_bits, align 2, !dbg !5550
  %42 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5551
  %43 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5552
  %ai_fifo = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %43, i32 0, i32 11, !dbg !5553
  %44 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %ai_fifo, align 8, !dbg !5553
  %max_segment_length = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %44, i32 0, i32 1, !dbg !5554
  %45 = load i32, i32* %max_segment_length, align 4, !dbg !5554
  %call44 = call i32 @set_ai_fifo_segment_length(%struct.comedi_device* %42, i32 %45) #7, !dbg !5555
  %46 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5556
  %dac_control1_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %46, i32 0, i32 21, !dbg !5557
  store i16 128, i16* %dac_control1_bits, align 2, !dbg !5558
  %47 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5559
  %intr_enable_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %47, i32 0, i32 17, !dbg !5560
  store i32 16512, i32* %intr_enable_bits, align 8, !dbg !5561
  %48 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5562
  %intr_enable_bits45 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %48, i32 0, i32 17, !dbg !5563
  %49 = load i32, i32* %intr_enable_bits45, align 8, !dbg !5563
  %conv46 = trunc i32 %49 to i16, !dbg !5562
  %50 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5564
  %main_iobase47 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %50, i32 0, i32 3, !dbg !5565
  %51 = load i8*, i8** %main_iobase47, align 8, !dbg !5565
  %add.ptr48 = getelementptr i8, i8* %51, i64 0, !dbg !5566
  call void @writew(i16 zeroext %conv46, i8* %add.ptr48) #7, !dbg !5567
  %52 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5568
  call void @disable_ai_pacing(%struct.comedi_device* %52) #7, !dbg !5569
  ret void, !dbg !5570
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !5571 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5579, metadata !DIExpression()), !dbg !5580
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !5581, metadata !DIExpression()), !dbg !5582
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !5583, metadata !DIExpression()), !dbg !5584
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5585, metadata !DIExpression()), !dbg !5586
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !5587, metadata !DIExpression()), !dbg !5588
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5589
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !5590
  %2 = load i64, i64* %flags.addr, align 8, !dbg !5591
  %3 = load i8*, i8** %name.addr, align 8, !dbg !5592
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !5593
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #7, !dbg !5594
  ret i32 %call, !dbg !5595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @handle_interrupt(i32 %irq, i8* %d) #2 !dbg !5596 {
entry:
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %d.addr = alloca i8*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %status = alloca i16, align 2
  %plx_status = alloca i32, align 4
  %plx_bits = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5597, metadata !DIExpression()), !dbg !5598
  store i8* %d, i8** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr, metadata !5599, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !5601, metadata !DIExpression()), !dbg !5602
  %0 = load i8*, i8** %d.addr, align 8, !dbg !5603
  %1 = bitcast i8* %0 to %struct.comedi_device*, !dbg !5603
  store %struct.comedi_device* %1, %struct.comedi_device** %dev, align 8, !dbg !5602
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !5604, metadata !DIExpression()), !dbg !5605
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5606
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 3, !dbg !5607
  %3 = load i8*, i8** %private, align 8, !dbg !5607
  %4 = bitcast i8* %3 to %struct.pcidas64_private*, !dbg !5606
  store %struct.pcidas64_private* %4, %struct.pcidas64_private** %devpriv, align 8, !dbg !5605
  call void @llvm.dbg.declare(metadata i16* %status, metadata !5608, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.declare(metadata i32* %plx_status, metadata !5610, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.declare(metadata i32* %plx_bits, metadata !5612, metadata !DIExpression()), !dbg !5613
  %5 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5614
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %5, i32 0, i32 2, !dbg !5615
  %6 = load i8*, i8** %plx9080_iobase, align 8, !dbg !5615
  %add.ptr = getelementptr i8, i8* %6, i64 104, !dbg !5616
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !5617
  store i32 %call, i32* %plx_status, align 4, !dbg !5618
  %7 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5619
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %7, i32 0, i32 3, !dbg !5620
  %8 = load i8*, i8** %main_iobase, align 8, !dbg !5620
  %add.ptr1 = getelementptr i8, i8* %8, i64 0, !dbg !5621
  %call2 = call zeroext i16 @readw(i8* %add.ptr1) #7, !dbg !5622
  store i16 %call2, i16* %status, align 2, !dbg !5623
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5624
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 10, !dbg !5626
  %bf.load = load i8, i8* %attached, align 8, !dbg !5626
  %bf.clear = and i8 %bf.load, 1, !dbg !5626
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5626
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5624
  br i1 %tobool, label %if.end, label %if.then, !dbg !5627

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5628
  br label %return, !dbg !5628

if.end:                                           ; preds = %entry
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5629
  %11 = load i16, i16* %status, align 2, !dbg !5630
  %12 = load i32, i32* %plx_status, align 4, !dbg !5631
  call void @handle_ai_interrupt(%struct.comedi_device* %10, i16 zeroext %11, i32 %12) #7, !dbg !5632
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5633
  %14 = load i16, i16* %status, align 2, !dbg !5634
  %15 = load i32, i32* %plx_status, align 4, !dbg !5635
  call void @handle_ao_interrupt(%struct.comedi_device* %13, i16 zeroext %14, i32 %15) #7, !dbg !5636
  %16 = load i32, i32* %plx_status, align 4, !dbg !5637
  %conv = zext i32 %16 to i64, !dbg !5637
  %and = and i64 %conv, 1048576, !dbg !5639
  %tobool3 = icmp ne i64 %and, 0, !dbg !5639
  br i1 %tobool3, label %if.then4, label %if.end10, !dbg !5640

if.then4:                                         ; preds = %if.end
  %17 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5641
  %plx9080_iobase5 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %17, i32 0, i32 2, !dbg !5643
  %18 = load i8*, i8** %plx9080_iobase5, align 8, !dbg !5643
  %add.ptr6 = getelementptr i8, i8* %18, i64 100, !dbg !5644
  %call7 = call i32 @readl(i8* %add.ptr6) #7, !dbg !5645
  store i32 %call7, i32* %plx_bits, align 4, !dbg !5646
  %19 = load i32, i32* %plx_bits, align 4, !dbg !5647
  %20 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5648
  %plx9080_iobase8 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %20, i32 0, i32 2, !dbg !5649
  %21 = load i8*, i8** %plx9080_iobase8, align 8, !dbg !5649
  %add.ptr9 = getelementptr i8, i8* %21, i64 100, !dbg !5650
  call void @writel(i32 %19, i8* %add.ptr9) #7, !dbg !5651
  br label %if.end10, !dbg !5652

if.end10:                                         ; preds = %if.then4, %if.end
  store i32 1, i32* %retval, align 4, !dbg !5653
  br label %return, !dbg !5653

return:                                           ; preds = %if.end10, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !5654
  ret i32 %22, !dbg !5654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @setup_subdevices(%struct.comedi_device* %dev) #2 !dbg !5655 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %data = alloca i8, align 1
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5656, metadata !DIExpression()), !dbg !5657
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !5658, metadata !DIExpression()), !dbg !5659
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5660
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !5661
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !5661
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !5660
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !5659
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !5662, metadata !DIExpression()), !dbg !5663
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5664
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !5665
  %4 = load i8*, i8** %private, align 8, !dbg !5665
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !5664
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !5663
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !5666, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5668, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5670, metadata !DIExpression()), !dbg !5671
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5672
  %call = call i32 @comedi_alloc_subdevices(%struct.comedi_device* %6, i32 10) #7, !dbg !5673
  store i32 %call, i32* %ret, align 4, !dbg !5674
  %7 = load i32, i32* %ret, align 4, !dbg !5675
  %tobool = icmp ne i32 %7, 0, !dbg !5675
  br i1 %tobool, label %if.then, label %if.end, !dbg !5677

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %ret, align 4, !dbg !5678
  store i32 %8, i32* %retval, align 4, !dbg !5679
  br label %return, !dbg !5679

if.end:                                           ; preds = %entry
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5680
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 16, !dbg !5681
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !5681
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %10, i64 0, !dbg !5680
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !5682
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5683
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5684
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %12, i32 0, i32 21, !dbg !5685
  store %struct.comedi_subdevice* %11, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !5686
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5687
  %type = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 2, !dbg !5688
  store i32 1, i32* %type, align 4, !dbg !5689
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5690
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %14, i32 0, i32 4, !dbg !5691
  store i32 17924096, i32* %subdev_flags, align 4, !dbg !5692
  %15 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5693
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %15, i32 0, i32 12, !dbg !5695
  %16 = load i32, i32* %layout, align 8, !dbg !5695
  %cmp = icmp eq i32 %16, 0, !dbg !5696
  br i1 %cmp, label %if.then1, label %if.else, !dbg !5697

if.then1:                                         ; preds = %if.end
  %17 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5698
  %subdev_flags2 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %17, i32 0, i32 4, !dbg !5699
  %18 = load i32, i32* %subdev_flags2, align 4, !dbg !5700
  %or = or i32 %18, 6291456, !dbg !5700
  store i32 %or, i32* %subdev_flags2, align 4, !dbg !5700
  br label %if.end9, !dbg !5698

if.else:                                          ; preds = %if.end
  %19 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5701
  %layout3 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %19, i32 0, i32 12, !dbg !5703
  %20 = load i32, i32* %layout3, align 8, !dbg !5703
  %cmp4 = icmp eq i32 %20, 1, !dbg !5704
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !5705

if.then5:                                         ; preds = %if.else
  %21 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5706
  %subdev_flags6 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %21, i32 0, i32 4, !dbg !5707
  %22 = load i32, i32* %subdev_flags6, align 4, !dbg !5708
  %or7 = or i32 %22, 4194304, !dbg !5708
  store i32 %or7, i32* %subdev_flags6, align 4, !dbg !5708
  br label %if.end8, !dbg !5706

if.end8:                                          ; preds = %if.then5, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then1
  %23 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5709
  %ai_se_chans = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %23, i32 0, i32 1, !dbg !5710
  %24 = load i32, i32* %ai_se_chans, align 8, !dbg !5710
  %25 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5711
  %n_chan = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %25, i32 0, i32 3, !dbg !5712
  store i32 %24, i32* %n_chan, align 8, !dbg !5713
  %26 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5714
  %len_chanlist = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %26, i32 0, i32 5, !dbg !5715
  store i32 8192, i32* %len_chanlist, align 8, !dbg !5716
  %27 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5717
  %ai_bits = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %27, i32 0, i32 2, !dbg !5718
  %28 = load i32, i32* %ai_bits, align 4, !dbg !5718
  %shl = shl i32 1, %28, !dbg !5719
  %sub = sub i32 %shl, 1, !dbg !5720
  %29 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5721
  %maxdata = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %29, i32 0, i32 13, !dbg !5722
  store i32 %sub, i32* %maxdata, align 8, !dbg !5723
  %30 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5724
  %ai_range_table = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %30, i32 0, i32 4, !dbg !5725
  %31 = load %struct.comedi_lrange*, %struct.comedi_lrange** %ai_range_table, align 8, !dbg !5725
  %32 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5726
  %range_table = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %32, i32 0, i32 15, !dbg !5727
  store %struct.comedi_lrange* %31, %struct.comedi_lrange** %range_table, align 8, !dbg !5728
  %33 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5729
  %insn_read = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %33, i32 0, i32 18, !dbg !5730
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ai_rinsn, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_read, align 8, !dbg !5731
  %34 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5732
  %insn_config = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %34, i32 0, i32 21, !dbg !5733
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ai_config_insn, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config, align 8, !dbg !5734
  %35 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5735
  %do_cmd = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %35, i32 0, i32 22, !dbg !5736
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ai_cmd, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %do_cmd, align 8, !dbg !5737
  %36 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5738
  %do_cmdtest = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %36, i32 0, i32 23, !dbg !5739
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)* @ai_cmdtest, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)** %do_cmdtest, align 8, !dbg !5740
  %37 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5741
  %cancel = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %37, i32 0, i32 25, !dbg !5742
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ai_cancel, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %cancel, align 8, !dbg !5743
  %38 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5744
  %layout10 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %38, i32 0, i32 12, !dbg !5746
  %39 = load i32, i32* %layout10, align 8, !dbg !5746
  %cmp11 = icmp eq i32 %39, 2, !dbg !5747
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !5748

if.then12:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i8* %data, metadata !5749, metadata !DIExpression()), !dbg !5751
  %call13 = call zeroext i8 @adc_src_4020_bits(i32 4) #7, !dbg !5752
  %40 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5753
  %i2c_cal_range_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %40, i32 0, i32 25, !dbg !5754
  store i8 %call13, i8* %i2c_cal_range_bits, align 8, !dbg !5755
  store i32 0, i32* %i, align 4, !dbg !5756
  br label %for.cond, !dbg !5758

for.cond:                                         ; preds = %for.inc, %if.then12
  %41 = load i32, i32* %i, align 4, !dbg !5759
  %42 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5761
  %n_chan14 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %42, i32 0, i32 3, !dbg !5762
  %43 = load i32, i32* %n_chan14, align 8, !dbg !5762
  %cmp15 = icmp slt i32 %41, %43, !dbg !5763
  br i1 %cmp15, label %for.body, label %for.end, !dbg !5764

for.body:                                         ; preds = %for.cond
  %44 = load i32, i32* %i, align 4, !dbg !5765
  %call16 = call zeroext i8 @attenuate_bit(i32 %44) #7, !dbg !5766
  %conv = zext i8 %call16 to i32, !dbg !5766
  %45 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5767
  %i2c_cal_range_bits17 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %45, i32 0, i32 25, !dbg !5768
  %46 = load i8, i8* %i2c_cal_range_bits17, align 8, !dbg !5769
  %conv18 = zext i8 %46 to i32, !dbg !5769
  %or19 = or i32 %conv18, %conv, !dbg !5769
  %conv20 = trunc i32 %or19 to i8, !dbg !5769
  store i8 %conv20, i8* %i2c_cal_range_bits17, align 8, !dbg !5769
  br label %for.inc, !dbg !5767

for.inc:                                          ; preds = %for.body
  %47 = load i32, i32* %i, align 4, !dbg !5770
  %inc = add i32 %47, 1, !dbg !5770
  store i32 %inc, i32* %i, align 4, !dbg !5770
  br label %for.cond, !dbg !5771, !llvm.loop !5772

for.end:                                          ; preds = %for.cond
  %48 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !5774
  %i2c_cal_range_bits21 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %48, i32 0, i32 25, !dbg !5775
  %49 = load i8, i8* %i2c_cal_range_bits21, align 8, !dbg !5775
  store i8 %49, i8* %data, align 1, !dbg !5776
  %50 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5777
  call void @i2c_write(%struct.comedi_device* %50, i32 32, i8* %data, i32 1) #7, !dbg !5778
  br label %if.end22, !dbg !5779

if.end22:                                         ; preds = %for.end, %if.end9
  %51 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5780
  %subdevices23 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %51, i32 0, i32 16, !dbg !5781
  %52 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices23, align 8, !dbg !5781
  %arrayidx24 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %52, i64 1, !dbg !5780
  store %struct.comedi_subdevice* %arrayidx24, %struct.comedi_subdevice** %s, align 8, !dbg !5782
  %53 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5783
  %ao_nchan = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %53, i32 0, i32 6, !dbg !5785
  %54 = load i32, i32* %ao_nchan, align 8, !dbg !5785
  %tobool25 = icmp ne i32 %54, 0, !dbg !5783
  br i1 %tobool25, label %if.then26, label %if.else48, !dbg !5786

if.then26:                                        ; preds = %if.end22
  %55 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5787
  %type27 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %55, i32 0, i32 2, !dbg !5789
  store i32 2, i32* %type27, align 4, !dbg !5790
  %56 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5791
  %subdev_flags28 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %56, i32 0, i32 4, !dbg !5792
  store i32 1261568, i32* %subdev_flags28, align 4, !dbg !5793
  %57 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5794
  %ao_nchan29 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %57, i32 0, i32 6, !dbg !5795
  %58 = load i32, i32* %ao_nchan29, align 8, !dbg !5795
  %59 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5796
  %n_chan30 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %59, i32 0, i32 3, !dbg !5797
  store i32 %58, i32* %n_chan30, align 8, !dbg !5798
  %60 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5799
  %ao_bits = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %60, i32 0, i32 7, !dbg !5800
  %61 = load i32, i32* %ao_bits, align 4, !dbg !5800
  %shl31 = shl i32 1, %61, !dbg !5801
  %sub32 = sub i32 %shl31, 1, !dbg !5802
  %62 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5803
  %maxdata33 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %62, i32 0, i32 13, !dbg !5804
  store i32 %sub32, i32* %maxdata33, align 8, !dbg !5805
  %63 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5806
  %ao_range_table = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %63, i32 0, i32 9, !dbg !5807
  %64 = load %struct.comedi_lrange*, %struct.comedi_lrange** %ao_range_table, align 8, !dbg !5807
  %65 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5808
  %range_table34 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %65, i32 0, i32 15, !dbg !5809
  store %struct.comedi_lrange* %64, %struct.comedi_lrange** %range_table34, align 8, !dbg !5810
  %66 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5811
  %insn_write = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %66, i32 0, i32 19, !dbg !5812
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ao_winsn, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_write, align 8, !dbg !5813
  %67 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5814
  %call35 = call i32 @comedi_alloc_subdev_readback(%struct.comedi_subdevice* %67) #7, !dbg !5815
  store i32 %call35, i32* %ret, align 4, !dbg !5816
  %68 = load i32, i32* %ret, align 4, !dbg !5817
  %tobool36 = icmp ne i32 %68, 0, !dbg !5817
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !5819

if.then37:                                        ; preds = %if.then26
  %69 = load i32, i32* %ret, align 4, !dbg !5820
  store i32 %69, i32* %retval, align 4, !dbg !5821
  br label %return, !dbg !5821

if.end38:                                         ; preds = %if.then26
  %70 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5822
  %call39 = call i32 @ao_cmd_is_supported(%struct.pcidas64_board* %70) #7, !dbg !5824
  %tobool40 = icmp ne i32 %call39, 0, !dbg !5824
  br i1 %tobool40, label %if.then41, label %if.end47, !dbg !5825

if.then41:                                        ; preds = %if.end38
  %71 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5826
  %72 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5828
  %write_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %72, i32 0, i32 22, !dbg !5829
  store %struct.comedi_subdevice* %71, %struct.comedi_subdevice** %write_subdev, align 8, !dbg !5830
  %73 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5831
  %do_cmdtest42 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %73, i32 0, i32 23, !dbg !5832
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)* @ao_cmdtest, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)** %do_cmdtest42, align 8, !dbg !5833
  %74 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5834
  %do_cmd43 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %74, i32 0, i32 22, !dbg !5835
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ao_cmd, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %do_cmd43, align 8, !dbg !5836
  %75 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5837
  %ao_nchan44 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %75, i32 0, i32 6, !dbg !5838
  %76 = load i32, i32* %ao_nchan44, align 8, !dbg !5838
  %77 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5839
  %len_chanlist45 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %77, i32 0, i32 5, !dbg !5840
  store i32 %76, i32* %len_chanlist45, align 8, !dbg !5841
  %78 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5842
  %cancel46 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %78, i32 0, i32 25, !dbg !5843
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ao_cancel, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %cancel46, align 8, !dbg !5844
  br label %if.end47, !dbg !5845

if.end47:                                         ; preds = %if.then41, %if.end38
  br label %if.end50, !dbg !5846

if.else48:                                        ; preds = %if.end22
  %79 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5847
  %type49 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %79, i32 0, i32 2, !dbg !5849
  store i32 0, i32* %type49, align 4, !dbg !5850
  br label %if.end50

if.end50:                                         ; preds = %if.else48, %if.end47
  %80 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5851
  %subdevices51 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %80, i32 0, i32 16, !dbg !5852
  %81 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices51, align 8, !dbg !5852
  %arrayidx52 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %81, i64 2, !dbg !5851
  store %struct.comedi_subdevice* %arrayidx52, %struct.comedi_subdevice** %s, align 8, !dbg !5853
  %82 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5854
  %layout53 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %82, i32 0, i32 12, !dbg !5856
  %83 = load i32, i32* %layout53, align 8, !dbg !5856
  %cmp54 = icmp eq i32 %83, 1, !dbg !5857
  br i1 %cmp54, label %if.then56, label %if.else62, !dbg !5858

if.then56:                                        ; preds = %if.end50
  %84 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5859
  %type57 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %84, i32 0, i32 2, !dbg !5861
  store i32 3, i32* %type57, align 4, !dbg !5862
  %85 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5863
  %subdev_flags58 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %85, i32 0, i32 4, !dbg !5864
  store i32 65536, i32* %subdev_flags58, align 4, !dbg !5865
  %86 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5866
  %n_chan59 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %86, i32 0, i32 3, !dbg !5867
  store i32 4, i32* %n_chan59, align 8, !dbg !5868
  %87 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5869
  %maxdata60 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %87, i32 0, i32 13, !dbg !5870
  store i32 1, i32* %maxdata60, align 8, !dbg !5871
  %88 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5872
  %range_table61 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %88, i32 0, i32 15, !dbg !5873
  store %struct.comedi_lrange* @range_unipolar5, %struct.comedi_lrange** %range_table61, align 8, !dbg !5874
  %89 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5875
  %insn_bits = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %89, i32 0, i32 20, !dbg !5876
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @di_rbits, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_bits, align 8, !dbg !5877
  br label %if.end64, !dbg !5878

if.else62:                                        ; preds = %if.end50
  %90 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5879
  %type63 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %90, i32 0, i32 2, !dbg !5881
  store i32 0, i32* %type63, align 4, !dbg !5882
  br label %if.end64

if.end64:                                         ; preds = %if.else62, %if.then56
  %91 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5883
  %layout65 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %91, i32 0, i32 12, !dbg !5885
  %92 = load i32, i32* %layout65, align 8, !dbg !5885
  %cmp66 = icmp eq i32 %92, 1, !dbg !5886
  br i1 %cmp66, label %if.then68, label %if.else77, !dbg !5887

if.then68:                                        ; preds = %if.end64
  %93 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5888
  %subdevices69 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %93, i32 0, i32 16, !dbg !5890
  %94 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices69, align 8, !dbg !5890
  %arrayidx70 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %94, i64 3, !dbg !5888
  store %struct.comedi_subdevice* %arrayidx70, %struct.comedi_subdevice** %s, align 8, !dbg !5891
  %95 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5892
  %type71 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %95, i32 0, i32 2, !dbg !5893
  store i32 4, i32* %type71, align 4, !dbg !5894
  %96 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5895
  %subdev_flags72 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %96, i32 0, i32 4, !dbg !5896
  store i32 131072, i32* %subdev_flags72, align 4, !dbg !5897
  %97 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5898
  %n_chan73 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %97, i32 0, i32 3, !dbg !5899
  store i32 4, i32* %n_chan73, align 8, !dbg !5900
  %98 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5901
  %maxdata74 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %98, i32 0, i32 13, !dbg !5902
  store i32 1, i32* %maxdata74, align 8, !dbg !5903
  %99 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5904
  %range_table75 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %99, i32 0, i32 15, !dbg !5905
  store %struct.comedi_lrange* @range_unipolar5, %struct.comedi_lrange** %range_table75, align 8, !dbg !5906
  %100 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5907
  %insn_bits76 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %100, i32 0, i32 20, !dbg !5908
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @do_wbits, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_bits76, align 8, !dbg !5909
  br label %if.end79, !dbg !5910

if.else77:                                        ; preds = %if.end64
  %101 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5911
  %type78 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %101, i32 0, i32 2, !dbg !5913
  store i32 0, i32* %type78, align 4, !dbg !5914
  br label %if.end79

if.end79:                                         ; preds = %if.else77, %if.then68
  %102 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5915
  %subdevices80 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %102, i32 0, i32 16, !dbg !5916
  %103 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices80, align 8, !dbg !5916
  %arrayidx81 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %103, i64 4, !dbg !5915
  store %struct.comedi_subdevice* %arrayidx81, %struct.comedi_subdevice** %s, align 8, !dbg !5917
  %104 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5918
  %has_8255 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %104, i32 0, i32 13, !dbg !5920
  %bf.load = load i8, i8* %has_8255, align 4, !dbg !5920
  %bf.clear = and i8 %bf.load, 1, !dbg !5920
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5920
  %tobool82 = icmp ne i32 %bf.cast, 0, !dbg !5918
  br i1 %tobool82, label %if.then83, label %if.else95, !dbg !5921

if.then83:                                        ; preds = %if.end79
  %105 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5922
  %layout84 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %105, i32 0, i32 12, !dbg !5925
  %106 = load i32, i32* %layout84, align 8, !dbg !5925
  %cmp85 = icmp eq i32 %106, 2, !dbg !5926
  br i1 %cmp85, label %if.then87, label %if.else89, !dbg !5927

if.then87:                                        ; preds = %if.then83
  %107 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5928
  %108 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5930
  %call88 = call i32 @subdev_8255_init(%struct.comedi_device* %107, %struct.comedi_subdevice* %108, i32 (%struct.comedi_device*, i32, i32, i32, i64)* @dio_callback_4020, i64 72) #7, !dbg !5931
  store i32 %call88, i32* %ret, align 4, !dbg !5932
  br label %if.end91, !dbg !5933

if.else89:                                        ; preds = %if.then83
  %109 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5934
  %110 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5936
  %call90 = call i32 @subdev_8255_mm_init(%struct.comedi_device* %109, %struct.comedi_subdevice* %110, i32 (%struct.comedi_device*, i32, i32, i32, i64)* null, i64 0) #7, !dbg !5937
  store i32 %call90, i32* %ret, align 4, !dbg !5938
  br label %if.end91

if.end91:                                         ; preds = %if.else89, %if.then87
  %111 = load i32, i32* %ret, align 4, !dbg !5939
  %tobool92 = icmp ne i32 %111, 0, !dbg !5939
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !5941

if.then93:                                        ; preds = %if.end91
  %112 = load i32, i32* %ret, align 4, !dbg !5942
  store i32 %112, i32* %retval, align 4, !dbg !5943
  br label %return, !dbg !5943

if.end94:                                         ; preds = %if.end91
  br label %if.end97, !dbg !5944

if.else95:                                        ; preds = %if.end79
  %113 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5945
  %type96 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %113, i32 0, i32 2, !dbg !5947
  store i32 0, i32* %type96, align 4, !dbg !5948
  br label %if.end97

if.end97:                                         ; preds = %if.else95, %if.end94
  %114 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5949
  %subdevices98 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %114, i32 0, i32 16, !dbg !5950
  %115 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices98, align 8, !dbg !5950
  %arrayidx99 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %115, i64 5, !dbg !5949
  store %struct.comedi_subdevice* %arrayidx99, %struct.comedi_subdevice** %s, align 8, !dbg !5951
  %116 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5952
  %layout100 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %116, i32 0, i32 12, !dbg !5954
  %117 = load i32, i32* %layout100, align 8, !dbg !5954
  %cmp101 = icmp eq i32 %117, 0, !dbg !5955
  br i1 %cmp101, label %if.then103, label %if.else111, !dbg !5956

if.then103:                                       ; preds = %if.end97
  %118 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5957
  %type104 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %118, i32 0, i32 2, !dbg !5959
  store i32 5, i32* %type104, align 4, !dbg !5960
  %119 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5961
  %subdev_flags105 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %119, i32 0, i32 4, !dbg !5962
  store i32 196608, i32* %subdev_flags105, align 4, !dbg !5963
  %120 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5964
  %n_chan106 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %120, i32 0, i32 3, !dbg !5965
  store i32 8, i32* %n_chan106, align 8, !dbg !5966
  %121 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5967
  %maxdata107 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %121, i32 0, i32 13, !dbg !5968
  store i32 1, i32* %maxdata107, align 8, !dbg !5969
  %122 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5970
  %range_table108 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %122, i32 0, i32 15, !dbg !5971
  store %struct.comedi_lrange* @range_unipolar5, %struct.comedi_lrange** %range_table108, align 8, !dbg !5972
  %123 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5973
  %insn_config109 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %123, i32 0, i32 21, !dbg !5974
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @dio_60xx_config_insn, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config109, align 8, !dbg !5975
  %124 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5976
  %insn_bits110 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %124, i32 0, i32 20, !dbg !5977
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @dio_60xx_wbits, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_bits110, align 8, !dbg !5978
  br label %if.end113, !dbg !5979

if.else111:                                       ; preds = %if.end97
  %125 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5980
  %type112 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %125, i32 0, i32 2, !dbg !5982
  store i32 0, i32* %type112, align 4, !dbg !5983
  br label %if.end113

if.end113:                                        ; preds = %if.else111, %if.then103
  %126 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5984
  %subdevices114 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %126, i32 0, i32 16, !dbg !5985
  %127 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices114, align 8, !dbg !5985
  %arrayidx115 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %127, i64 6, !dbg !5984
  store %struct.comedi_subdevice* %arrayidx115, %struct.comedi_subdevice** %s, align 8, !dbg !5986
  %128 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5987
  %type116 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %128, i32 0, i32 2, !dbg !5988
  store i32 9, i32* %type116, align 4, !dbg !5989
  %129 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5990
  %subdev_flags117 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %129, i32 0, i32 4, !dbg !5991
  store i32 458752, i32* %subdev_flags117, align 4, !dbg !5992
  %130 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5993
  %n_chan118 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %130, i32 0, i32 3, !dbg !5994
  store i32 8, i32* %n_chan118, align 8, !dbg !5995
  %131 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !5996
  %layout119 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %131, i32 0, i32 12, !dbg !5998
  %132 = load i32, i32* %layout119, align 8, !dbg !5998
  %cmp120 = icmp eq i32 %132, 2, !dbg !5999
  br i1 %cmp120, label %if.then122, label %if.else124, !dbg !6000

if.then122:                                       ; preds = %if.end113
  %133 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6001
  %maxdata123 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %133, i32 0, i32 13, !dbg !6002
  store i32 4095, i32* %maxdata123, align 8, !dbg !6003
  br label %if.end126, !dbg !6001

if.else124:                                       ; preds = %if.end113
  %134 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6004
  %maxdata125 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %134, i32 0, i32 13, !dbg !6005
  store i32 255, i32* %maxdata125, align 8, !dbg !6006
  br label %if.end126

if.end126:                                        ; preds = %if.else124, %if.then122
  %135 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6007
  %insn_write127 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %135, i32 0, i32 19, !dbg !6008
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @cb_pcidas64_calib_insn_write, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_write127, align 8, !dbg !6009
  %136 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6010
  %call128 = call i32 @comedi_alloc_subdev_readback(%struct.comedi_subdevice* %136) #7, !dbg !6011
  store i32 %call128, i32* %ret, align 4, !dbg !6012
  %137 = load i32, i32* %ret, align 4, !dbg !6013
  %tobool129 = icmp ne i32 %137, 0, !dbg !6013
  br i1 %tobool129, label %if.then130, label %if.end131, !dbg !6015

if.then130:                                       ; preds = %if.end126
  %138 = load i32, i32* %ret, align 4, !dbg !6016
  store i32 %138, i32* %retval, align 4, !dbg !6017
  br label %return, !dbg !6017

if.end131:                                        ; preds = %if.end126
  store i32 0, i32* %i, align 4, !dbg !6018
  br label %for.cond132, !dbg !6020

for.cond132:                                      ; preds = %for.inc141, %if.end131
  %139 = load i32, i32* %i, align 4, !dbg !6021
  %140 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6023
  %n_chan133 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %140, i32 0, i32 3, !dbg !6024
  %141 = load i32, i32* %n_chan133, align 8, !dbg !6024
  %cmp134 = icmp slt i32 %139, %141, !dbg !6025
  br i1 %cmp134, label %for.body136, label %for.end143, !dbg !6026

for.body136:                                      ; preds = %for.cond132
  %142 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6027
  %143 = load i32, i32* %i, align 4, !dbg !6029
  %144 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6030
  %maxdata137 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %144, i32 0, i32 13, !dbg !6031
  %145 = load i32, i32* %maxdata137, align 8, !dbg !6031
  %div = udiv i32 %145, 2, !dbg !6032
  call void @caldac_write(%struct.comedi_device* %142, i32 %143, i32 %div) #7, !dbg !6033
  %146 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6034
  %maxdata138 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %146, i32 0, i32 13, !dbg !6035
  %147 = load i32, i32* %maxdata138, align 8, !dbg !6035
  %div139 = udiv i32 %147, 2, !dbg !6036
  %148 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6037
  %readback = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %148, i32 0, i32 32, !dbg !6038
  %149 = load i32*, i32** %readback, align 8, !dbg !6038
  %150 = load i32, i32* %i, align 4, !dbg !6039
  %idxprom = sext i32 %150 to i64, !dbg !6037
  %arrayidx140 = getelementptr i32, i32* %149, i64 %idxprom, !dbg !6037
  store i32 %div139, i32* %arrayidx140, align 4, !dbg !6040
  br label %for.inc141, !dbg !6041

for.inc141:                                       ; preds = %for.body136
  %151 = load i32, i32* %i, align 4, !dbg !6042
  %inc142 = add i32 %151, 1, !dbg !6042
  store i32 %inc142, i32* %i, align 4, !dbg !6042
  br label %for.cond132, !dbg !6043, !llvm.loop !6044

for.end143:                                       ; preds = %for.cond132
  %152 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6046
  %subdevices144 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %152, i32 0, i32 16, !dbg !6047
  %153 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices144, align 8, !dbg !6047
  %arrayidx145 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %153, i64 7, !dbg !6046
  store %struct.comedi_subdevice* %arrayidx145, %struct.comedi_subdevice** %s, align 8, !dbg !6048
  %154 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !6049
  %layout146 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %154, i32 0, i32 12, !dbg !6051
  %155 = load i32, i32* %layout146, align 8, !dbg !6051
  %cmp147 = icmp eq i32 %155, 1, !dbg !6052
  br i1 %cmp147, label %if.then149, label %if.else174, !dbg !6053

if.then149:                                       ; preds = %for.end143
  %156 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6054
  %type150 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %156, i32 0, i32 2, !dbg !6056
  store i32 9, i32* %type150, align 4, !dbg !6057
  %157 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6058
  %subdev_flags151 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %157, i32 0, i32 4, !dbg !6059
  store i32 458752, i32* %subdev_flags151, align 4, !dbg !6060
  %158 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6061
  %n_chan152 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %158, i32 0, i32 3, !dbg !6062
  store i32 2, i32* %n_chan152, align 8, !dbg !6063
  %159 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6064
  %maxdata153 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %159, i32 0, i32 13, !dbg !6065
  store i32 255, i32* %maxdata153, align 8, !dbg !6066
  %160 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6067
  %insn_write154 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %160, i32 0, i32 19, !dbg !6068
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @cb_pcidas64_ad8402_insn_write, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_write154, align 8, !dbg !6069
  %161 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6070
  %call155 = call i32 @comedi_alloc_subdev_readback(%struct.comedi_subdevice* %161) #7, !dbg !6071
  store i32 %call155, i32* %ret, align 4, !dbg !6072
  %162 = load i32, i32* %ret, align 4, !dbg !6073
  %tobool156 = icmp ne i32 %162, 0, !dbg !6073
  br i1 %tobool156, label %if.then157, label %if.end158, !dbg !6075

if.then157:                                       ; preds = %if.then149
  %163 = load i32, i32* %ret, align 4, !dbg !6076
  store i32 %163, i32* %retval, align 4, !dbg !6077
  br label %return, !dbg !6077

if.end158:                                        ; preds = %if.then149
  store i32 0, i32* %i, align 4, !dbg !6078
  br label %for.cond159, !dbg !6080

for.cond159:                                      ; preds = %for.inc171, %if.end158
  %164 = load i32, i32* %i, align 4, !dbg !6081
  %165 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6083
  %n_chan160 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %165, i32 0, i32 3, !dbg !6084
  %166 = load i32, i32* %n_chan160, align 8, !dbg !6084
  %cmp161 = icmp slt i32 %164, %166, !dbg !6085
  br i1 %cmp161, label %for.body163, label %for.end173, !dbg !6086

for.body163:                                      ; preds = %for.cond159
  %167 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6087
  %168 = load i32, i32* %i, align 4, !dbg !6089
  %169 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6090
  %maxdata164 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %169, i32 0, i32 13, !dbg !6091
  %170 = load i32, i32* %maxdata164, align 8, !dbg !6091
  %div165 = udiv i32 %170, 2, !dbg !6092
  call void @ad8402_write(%struct.comedi_device* %167, i32 %168, i32 %div165) #7, !dbg !6093
  %171 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6094
  %maxdata166 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %171, i32 0, i32 13, !dbg !6095
  %172 = load i32, i32* %maxdata166, align 8, !dbg !6095
  %div167 = udiv i32 %172, 2, !dbg !6096
  %173 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6097
  %readback168 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %173, i32 0, i32 32, !dbg !6098
  %174 = load i32*, i32** %readback168, align 8, !dbg !6098
  %175 = load i32, i32* %i, align 4, !dbg !6099
  %idxprom169 = sext i32 %175 to i64, !dbg !6097
  %arrayidx170 = getelementptr i32, i32* %174, i64 %idxprom169, !dbg !6097
  store i32 %div167, i32* %arrayidx170, align 4, !dbg !6100
  br label %for.inc171, !dbg !6101

for.inc171:                                       ; preds = %for.body163
  %176 = load i32, i32* %i, align 4, !dbg !6102
  %inc172 = add i32 %176, 1, !dbg !6102
  store i32 %inc172, i32* %i, align 4, !dbg !6102
  br label %for.cond159, !dbg !6103, !llvm.loop !6104

for.end173:                                       ; preds = %for.cond159
  br label %if.end176, !dbg !6106

if.else174:                                       ; preds = %for.end143
  %177 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6107
  %type175 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %177, i32 0, i32 2, !dbg !6109
  store i32 0, i32* %type175, align 4, !dbg !6110
  br label %if.end176

if.end176:                                        ; preds = %if.else174, %for.end173
  %178 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6111
  %subdevices177 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %178, i32 0, i32 16, !dbg !6112
  %179 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices177, align 8, !dbg !6112
  %arrayidx178 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %179, i64 8, !dbg !6111
  store %struct.comedi_subdevice* %arrayidx178, %struct.comedi_subdevice** %s, align 8, !dbg !6113
  %180 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6114
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %180, i32 0, i32 2, !dbg !6116
  %181 = load i8*, i8** %plx9080_iobase, align 8, !dbg !6116
  %add.ptr = getelementptr i8, i8* %181, i64 108, !dbg !6117
  %call179 = call i32 @readl(i8* %add.ptr) #7, !dbg !6118
  %conv180 = zext i32 %call179 to i64, !dbg !6118
  %and = and i64 %conv180, 268435456, !dbg !6119
  %tobool181 = icmp ne i64 %and, 0, !dbg !6119
  br i1 %tobool181, label %if.then182, label %if.else188, !dbg !6120

if.then182:                                       ; preds = %if.end176
  %182 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6121
  %type183 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %182, i32 0, i32 2, !dbg !6123
  store i32 8, i32* %type183, align 4, !dbg !6124
  %183 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6125
  %subdev_flags184 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %183, i32 0, i32 4, !dbg !6126
  store i32 327680, i32* %subdev_flags184, align 4, !dbg !6127
  %184 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6128
  %n_chan185 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %184, i32 0, i32 3, !dbg !6129
  store i32 128, i32* %n_chan185, align 8, !dbg !6130
  %185 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6131
  %maxdata186 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %185, i32 0, i32 13, !dbg !6132
  store i32 65535, i32* %maxdata186, align 8, !dbg !6133
  %186 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6134
  %insn_read187 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %186, i32 0, i32 18, !dbg !6135
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @eeprom_read_insn, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_read187, align 8, !dbg !6136
  br label %if.end190, !dbg !6137

if.else188:                                       ; preds = %if.end176
  %187 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6138
  %type189 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %187, i32 0, i32 2, !dbg !6140
  store i32 0, i32* %type189, align 4, !dbg !6141
  br label %if.end190

if.end190:                                        ; preds = %if.else188, %if.then182
  %188 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6142
  %subdevices191 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %188, i32 0, i32 16, !dbg !6143
  %189 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices191, align 8, !dbg !6143
  %arrayidx192 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %189, i64 9, !dbg !6142
  store %struct.comedi_subdevice* %arrayidx192, %struct.comedi_subdevice** %s, align 8, !dbg !6144
  %190 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6145
  %type193 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %190, i32 0, i32 2, !dbg !6146
  store i32 0, i32* %type193, align 4, !dbg !6147
  store i32 0, i32* %retval, align 4, !dbg !6148
  br label %return, !dbg !6148

return:                                           ; preds = %if.end190, %if.then157, %if.then130, %if.then93, %if.then37, %if.then
  %191 = load i32, i32* %retval, align 4, !dbg !6149
  ret i32 %191, !dbg !6149
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #2 !dbg !6150 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6154, metadata !DIExpression()), !dbg !6155
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6156, metadata !DIExpression()), !dbg !6157
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !6158, metadata !DIExpression()), !dbg !6159
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !6160, metadata !DIExpression()), !dbg !6161
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6162
  %1 = load i64, i64* %size.addr, align 8, !dbg !6163
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !6164
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !6165
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !6166
  %and = and i32 %4, 8192, !dbg !6167
  %tobool = icmp ne i32 %and, 0, !dbg !6168
  %5 = zext i1 %tobool to i64, !dbg !6168
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !6168
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #7, !dbg !6169
  ret i8* %call, !dbg !6170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ao_cmd_is_supported(%struct.pcidas64_board* %board) #2 !dbg !6171 {
entry:
  %board.addr = alloca %struct.pcidas64_board*, align 8
  store %struct.pcidas64_board* %board, %struct.pcidas64_board** %board.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board.addr, metadata !6174, metadata !DIExpression()), !dbg !6175
  %0 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board.addr, align 8, !dbg !6176
  %ao_nchan = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %0, i32 0, i32 6, !dbg !6177
  %1 = load i32, i32* %ao_nchan, align 8, !dbg !6177
  %tobool = icmp ne i32 %1, 0, !dbg !6176
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6178

land.rhs:                                         ; preds = %entry
  %2 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board.addr, align 8, !dbg !6179
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %2, i32 0, i32 12, !dbg !6180
  %3 = load i32, i32* %layout, align 8, !dbg !6180
  %cmp = icmp ne i32 %3, 2, !dbg !6181
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !6182
  %land.ext = zext i1 %4 to i32, !dbg !6178
  ret i32 %land.ext, !dbg !6183
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @abort_dma(%struct.comedi_device* %dev, i32 %channel) #2 !dbg !6184 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !5431, metadata !DIExpression()), !dbg !6187
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5438, metadata !DIExpression()), !dbg !6189
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5440, metadata !DIExpression()), !dbg !6190
  %dev.addr = alloca %struct.comedi_device*, align 8
  %channel.addr = alloca i32, align 4
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6197, metadata !DIExpression()), !dbg !6198
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !6199, metadata !DIExpression()), !dbg !6200
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !6201, metadata !DIExpression()), !dbg !6202
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6203
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !6204
  %1 = load i8*, i8** %private, align 8, !dbg !6204
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !6203
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !6202
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6205, metadata !DIExpression()), !dbg !6206
  br label %do.body, !dbg !6207

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6208

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6209, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6212, metadata !DIExpression()), !dbg !6211
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6211
  %conv = zext i1 %cmp to i32, !dbg !6211
  store i32 1, i32* %tmp, align 4, !dbg !6211
  %3 = load i32, i32* %tmp, align 4, !dbg !6211
  br label %do.body2, !dbg !6213

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6214

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6215

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6217, metadata !DIExpression()), !dbg !6220
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6221, metadata !DIExpression()), !dbg !6220
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6220
  %conv8 = zext i1 %cmp7 to i32, !dbg !6220
  store i32 1, i32* %tmp9, align 4, !dbg !6220
  %4 = load i32, i32* %tmp9, align 4, !dbg !6220
  %call = call i64 @arch_local_irq_save() #7, !dbg !6222
  store i64 %call, i64* %flags, align 8, !dbg !6222
  br label %do.end, !dbg !6222

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6215

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6214

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6223, !srcloc !6224
  br label %do.body12, !dbg !6223

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6225
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 11, !dbg !6225
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6226
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !6227
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !6227
  br label %do.end14, !dbg !6225

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6223

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6214

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6213

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6208

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6228
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %8, i32 0, i32 2, !dbg !6229
  %9 = load i8*, i8** %plx9080_iobase, align 8, !dbg !6229
  %10 = load i32, i32* %channel.addr, align 4, !dbg !6230
  %call19 = call i32 @plx9080_abort_dma(i8* %9, i32 %10) #7, !dbg !6231
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6232
  %spinlock20 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %11, i32 0, i32 11, !dbg !6233
  %12 = load i64, i64* %flags, align 8, !dbg !6234
  store %struct.spinlock* %spinlock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !6235
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !6235
  store i32 1, i32* %tmp.i, align 4, !dbg !6235
  %13 = load i32, i32* %tmp.i, align 4, !dbg !6235
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !6236
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !6236
  store i32 1, i32* %tmp8.i, align 4, !dbg !6236
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !6236
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !6237
  call void @arch_local_irq_restore(i64 %15) #9, !dbg !6237
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6238, !srcloc !5545
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !6239
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !6239
  %rlock.i22 = bitcast %union.anon.3* %17 to %struct.raw_spinlock*, !dbg !6239
  ret void, !dbg !6240
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !6241 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !6245, metadata !DIExpression()), !dbg !6246
  %call = call i64 @arch_local_save_flags() #7, !dbg !6247
  store i64 %call, i64* %f, align 8, !dbg !6248
  call void @arch_local_irq_disable() #7, !dbg !6249
  %0 = load i64, i64* %f, align 8, !dbg !6250
  ret i64 %0, !dbg !6251
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @plx9080_abort_dma(i8* %iobase, i32 %channel) #2 !dbg !6252 {
entry:
  %retval = alloca i32, align 4
  %iobase.addr = alloca i8*, align 8
  %channel.addr = alloca i32, align 4
  %dma_cs_addr = alloca i8*, align 8
  %dma_status = alloca i8, align 1
  %timeout = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %iobase, i8** %iobase.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iobase.addr, metadata !6255, metadata !DIExpression()), !dbg !6256
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !6257, metadata !DIExpression()), !dbg !6258
  call void @llvm.dbg.declare(metadata i8** %dma_cs_addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.declare(metadata i8* %dma_status, metadata !6261, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !6263, metadata !DIExpression()), !dbg !6264
  store i32 10000, i32* %timeout, align 4, !dbg !6264
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6265, metadata !DIExpression()), !dbg !6266
  %0 = load i8*, i8** %iobase.addr, align 8, !dbg !6267
  %1 = load i32, i32* %channel.addr, align 4, !dbg !6268
  %tobool = icmp ne i32 %1, 0, !dbg !6268
  %2 = zext i1 %tobool to i64, !dbg !6268
  %cond = select i1 %tobool, i32 169, i32 168, !dbg !6268
  %idx.ext = sext i32 %cond to i64, !dbg !6269
  %add.ptr = getelementptr i8, i8* %0, i64 %idx.ext, !dbg !6269
  store i8* %add.ptr, i8** %dma_cs_addr, align 8, !dbg !6270
  %3 = load i8*, i8** %dma_cs_addr, align 8, !dbg !6271
  %call = call zeroext i8 @readb(i8* %3) #7, !dbg !6272
  store i8 %call, i8* %dma_status, align 1, !dbg !6273
  %4 = load i8, i8* %dma_status, align 1, !dbg !6274
  %conv = zext i8 %4 to i64, !dbg !6274
  %and = and i64 %conv, 1, !dbg !6276
  %cmp = icmp eq i64 %and, 0, !dbg !6277
  br i1 %cmp, label %if.then, label %if.end, !dbg !6278

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6279
  br label %return, !dbg !6279

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6280
  br label %for.cond, !dbg !6282

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i8, i8* %dma_status, align 1, !dbg !6283
  %conv2 = zext i8 %5 to i64, !dbg !6283
  %and3 = and i64 %conv2, 16, !dbg !6285
  %tobool4 = icmp ne i64 %and3, 0, !dbg !6285
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !6286

land.rhs:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !6287
  %cmp5 = icmp ult i32 %6, 10000, !dbg !6288
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %7 = phi i1 [ false, %for.cond ], [ %cmp5, %land.rhs ], !dbg !6289
  br i1 %7, label %for.body, label %for.end, !dbg !6290

for.body:                                         ; preds = %land.end
  call void @__const_udelay(i64 4295) #7, !dbg !6291
  %8 = load i8*, i8** %dma_cs_addr, align 8, !dbg !6297
  %call7 = call zeroext i8 @readb(i8* %8) #7, !dbg !6298
  store i8 %call7, i8* %dma_status, align 1, !dbg !6299
  br label %for.inc, !dbg !6300

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !6301
  %inc = add i32 %9, 1, !dbg !6301
  store i32 %inc, i32* %i, align 4, !dbg !6301
  br label %for.cond, !dbg !6302, !llvm.loop !6303

for.end:                                          ; preds = %land.end
  %10 = load i32, i32* %i, align 4, !dbg !6305
  %cmp8 = icmp eq i32 %10, 10000, !dbg !6307
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !6308

if.then10:                                        ; preds = %for.end
  store i32 -110, i32* %retval, align 4, !dbg !6309
  br label %return, !dbg !6309

if.end11:                                         ; preds = %for.end
  %11 = load i8*, i8** %dma_cs_addr, align 8, !dbg !6310
  call void @writeb(i8 zeroext 4, i8* %11) #7, !dbg !6311
  %12 = load i8*, i8** %dma_cs_addr, align 8, !dbg !6312
  %call12 = call zeroext i8 @readb(i8* %12) #7, !dbg !6313
  store i8 %call12, i8* %dma_status, align 1, !dbg !6314
  store i32 0, i32* %i, align 4, !dbg !6315
  br label %for.cond13, !dbg !6317

for.cond13:                                       ; preds = %for.inc24, %if.end11
  %13 = load i8, i8* %dma_status, align 1, !dbg !6318
  %conv14 = zext i8 %13 to i64, !dbg !6318
  %and15 = and i64 %conv14, 16, !dbg !6320
  %cmp16 = icmp eq i64 %and15, 0, !dbg !6321
  br i1 %cmp16, label %land.rhs18, label %land.end21, !dbg !6322

land.rhs18:                                       ; preds = %for.cond13
  %14 = load i32, i32* %i, align 4, !dbg !6323
  %cmp19 = icmp ult i32 %14, 10000, !dbg !6324
  br label %land.end21

land.end21:                                       ; preds = %land.rhs18, %for.cond13
  %15 = phi i1 [ false, %for.cond13 ], [ %cmp19, %land.rhs18 ], !dbg !6325
  br i1 %15, label %for.body22, label %for.end26, !dbg !6326

for.body22:                                       ; preds = %land.end21
  call void @__const_udelay(i64 4295) #7, !dbg !6327
  %16 = load i8*, i8** %dma_cs_addr, align 8, !dbg !6333
  %call23 = call zeroext i8 @readb(i8* %16) #7, !dbg !6334
  store i8 %call23, i8* %dma_status, align 1, !dbg !6335
  br label %for.inc24, !dbg !6336

for.inc24:                                        ; preds = %for.body22
  %17 = load i32, i32* %i, align 4, !dbg !6337
  %inc25 = add i32 %17, 1, !dbg !6337
  store i32 %inc25, i32* %i, align 4, !dbg !6337
  br label %for.cond13, !dbg !6338, !llvm.loop !6339

for.end26:                                        ; preds = %land.end21
  %18 = load i32, i32* %i, align 4, !dbg !6341
  %cmp27 = icmp eq i32 %18, 10000, !dbg !6343
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !6344

if.then29:                                        ; preds = %for.end26
  store i32 -110, i32* %retval, align 4, !dbg !6345
  br label %return, !dbg !6345

if.end30:                                         ; preds = %for.end26
  store i32 0, i32* %retval, align 4, !dbg !6346
  br label %return, !dbg !6346

return:                                           ; preds = %if.end30, %if.then29, %if.then10, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !6347
  ret i32 %19, !dbg !6347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !6348 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !6349, metadata !DIExpression()), !dbg !6351
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6352, metadata !DIExpression()), !dbg !6351
  %0 = load i64, i64* %__edi, align 8, !dbg !6351
  store i64 %0, i64* %__edi, align 8, !dbg !6351
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6353, metadata !DIExpression()), !dbg !6351
  %1 = load i64, i64* %__esi, align 8, !dbg !6351
  store i64 %1, i64* %__esi, align 8, !dbg !6351
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6354, metadata !DIExpression()), !dbg !6351
  %2 = load i64, i64* %__edx, align 8, !dbg !6351
  store i64 %2, i64* %__edx, align 8, !dbg !6351
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6355, metadata !DIExpression()), !dbg !6351
  %3 = load i64, i64* %__ecx, align 8, !dbg !6351
  store i64 %3, i64* %__ecx, align 8, !dbg !6351
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6356, metadata !DIExpression()), !dbg !6351
  %4 = load i64, i64* %__eax, align 8, !dbg !6351
  store i64 %4, i64* %__eax, align 8, !dbg !6351
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !6351
  %6 = call i64 @llvm.read_register.i64(metadata !4629), !dbg !6357
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #6, !dbg !6357, !srcloc !6360
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6357
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6357
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6357
  call void @llvm.write_register.i64(metadata !4629, i64 %asmresult1), !dbg !6357
  %8 = load i64, i64* %__eax, align 8, !dbg !6357
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !6361, metadata !DIExpression()), !dbg !6363
  store i64 -1, i64* %__mask, align 8, !dbg !6363
  %9 = load i64, i64* %__mask, align 8, !dbg !6363
  store i64 %9, i64* %tmp, align 8, !dbg !6363
  %10 = load i64, i64* %tmp, align 8, !dbg !6363
  %and = and i64 %8, %10, !dbg !6357
  store i64 %and, i64* %__ret, align 8, !dbg !6357
  %11 = load i64, i64* %__ret, align 8, !dbg !6351
  store i64 %11, i64* %tmp2, align 8, !dbg !6364
  %12 = load i64, i64* %tmp2, align 8, !dbg !6351
  ret i64 %12, !dbg !6365
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !6366 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6367, metadata !DIExpression()), !dbg !6369
  %0 = load i64, i64* %__edi, align 8, !dbg !6369
  store i64 %0, i64* %__edi, align 8, !dbg !6369
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6370, metadata !DIExpression()), !dbg !6369
  %1 = load i64, i64* %__esi, align 8, !dbg !6369
  store i64 %1, i64* %__esi, align 8, !dbg !6369
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6371, metadata !DIExpression()), !dbg !6369
  %2 = load i64, i64* %__edx, align 8, !dbg !6369
  store i64 %2, i64* %__edx, align 8, !dbg !6369
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6372, metadata !DIExpression()), !dbg !6369
  %3 = load i64, i64* %__ecx, align 8, !dbg !6369
  store i64 %3, i64* %__ecx, align 8, !dbg !6369
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6373, metadata !DIExpression()), !dbg !6369
  %4 = load i64, i64* %__eax, align 8, !dbg !6369
  store i64 %4, i64* %__eax, align 8, !dbg !6369
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !6369
  %6 = call i64 @llvm.read_register.i64(metadata !4629), !dbg !6369
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #6, !dbg !6369, !srcloc !6374
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6369
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6369
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6369
  call void @llvm.write_register.i64(metadata !4629, i64 %asmresult1), !dbg !6369
  ret void, !dbg !6375
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #5

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #2 !dbg !6376 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6379, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !6381, metadata !DIExpression()), !dbg !6380
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !6380
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #6, !dbg !6380, !srcloc !6382
  store i8 %1, i8* %ret, align 1, !dbg !6380
  %2 = load i8, i8* %ret, align 1, !dbg !6380
  ret i8 %2, !dbg !6380
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #2 !dbg !6383 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !6386, metadata !DIExpression()), !dbg !6387
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6388, metadata !DIExpression()), !dbg !6387
  %0 = load i8, i8* %val.addr, align 1, !dbg !6387
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !6387
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #6, !dbg !6387, !srcloc !6389
  ret void, !dbg !6387
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !6390 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !6393, metadata !DIExpression()), !dbg !6394
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6395, metadata !DIExpression()), !dbg !6397
  %0 = load i64, i64* %__edi, align 8, !dbg !6397
  store i64 %0, i64* %__edi, align 8, !dbg !6397
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6398, metadata !DIExpression()), !dbg !6397
  %1 = load i64, i64* %__esi, align 8, !dbg !6397
  store i64 %1, i64* %__esi, align 8, !dbg !6397
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6399, metadata !DIExpression()), !dbg !6397
  %2 = load i64, i64* %__edx, align 8, !dbg !6397
  store i64 %2, i64* %__edx, align 8, !dbg !6397
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6400, metadata !DIExpression()), !dbg !6397
  %3 = load i64, i64* %__ecx, align 8, !dbg !6397
  store i64 %3, i64* %__ecx, align 8, !dbg !6397
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6401, metadata !DIExpression()), !dbg !6397
  %4 = load i64, i64* %__eax, align 8, !dbg !6397
  store i64 %4, i64* %__eax, align 8, !dbg !6397
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !6397
  %6 = call i64 @llvm.read_register.i64(metadata !4629), !dbg !6397
  %7 = load i64, i64* %f.addr, align 8, !dbg !6397
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #6, !dbg !6397, !srcloc !6402
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !6397
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !6397
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6397
  call void @llvm.write_register.i64(metadata !4629, i64 %asmresult1), !dbg !6397
  ret void, !dbg !6403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writew(i16 zeroext %val, i8* %addr) #2 !dbg !6404 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !6407, metadata !DIExpression()), !dbg !6408
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6409, metadata !DIExpression()), !dbg !6408
  %0 = load i16, i16* %val.addr, align 2, !dbg !6408
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !6408
  %2 = bitcast i8* %1 to i16*, !dbg !6408
  call void asm sideeffect "movw $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #6, !dbg !6408, !srcloc !6410
  ret void, !dbg !6408
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_ai_fifo_segment_length(%struct.comedi_device* %dev, i32 %num_entries) #2 !dbg !4285 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %num_entries.addr = alloca i32, align 4
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %fifo = alloca %struct.hw_fifo_info*, align 8
  %num_increments = alloca i32, align 4
  %bits = alloca i16, align 2
  %__x = alloca i32, align 4
  %__d = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6411, metadata !DIExpression()), !dbg !6412
  store i32 %num_entries, i32* %num_entries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_entries.addr, metadata !6413, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !6415, metadata !DIExpression()), !dbg !6416
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6417
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !6418
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !6418
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !6417
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !6416
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !6419, metadata !DIExpression()), !dbg !6420
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6421
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !6422
  %4 = load i8*, i8** %private, align 8, !dbg !6422
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !6421
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !6420
  call void @llvm.dbg.declare(metadata %struct.hw_fifo_info** %fifo, metadata !6423, metadata !DIExpression()), !dbg !6424
  %6 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !6425
  %ai_fifo = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %6, i32 0, i32 11, !dbg !6426
  %7 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %ai_fifo, align 8, !dbg !6426
  store %struct.hw_fifo_info* %7, %struct.hw_fifo_info** %fifo, align 8, !dbg !6424
  call void @llvm.dbg.declare(metadata i32* %num_increments, metadata !6427, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.declare(metadata i16* %bits, metadata !6429, metadata !DIExpression()), !dbg !6430
  %8 = load i32, i32* %num_entries.addr, align 4, !dbg !6431
  %cmp = icmp ult i32 %8, 256, !dbg !6433
  br i1 %cmp, label %if.then, label %if.end, !dbg !6434

if.then:                                          ; preds = %entry
  store i32 256, i32* %num_entries.addr, align 4, !dbg !6435
  br label %if.end, !dbg !6436

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %num_entries.addr, align 4, !dbg !6437
  %10 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %fifo, align 8, !dbg !6439
  %max_segment_length = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %10, i32 0, i32 1, !dbg !6440
  %11 = load i32, i32* %max_segment_length, align 4, !dbg !6440
  %cmp1 = icmp ugt i32 %9, %11, !dbg !6441
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !6442

if.then2:                                         ; preds = %if.end
  %12 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %fifo, align 8, !dbg !6443
  %max_segment_length3 = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %12, i32 0, i32 1, !dbg !6444
  %13 = load i32, i32* %max_segment_length3, align 4, !dbg !6444
  store i32 %13, i32* %num_entries.addr, align 4, !dbg !6445
  br label %if.end4, !dbg !6446

if.end4:                                          ; preds = %if.then2, %if.end
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !6447, metadata !DIExpression()), !dbg !6449
  %14 = load i32, i32* %num_entries.addr, align 4, !dbg !6449
  store i32 %14, i32* %__x, align 4, !dbg !6449
  call void @llvm.dbg.declare(metadata i32* %__d, metadata !6450, metadata !DIExpression()), !dbg !6449
  store i32 256, i32* %__d, align 4, !dbg !6449
  %15 = load i32, i32* %__x, align 4, !dbg !6449
  %add = add i32 %15, 128, !dbg !6449
  %div = udiv i32 %add, 256, !dbg !6449
  store i32 %div, i32* %tmp, align 4, !dbg !6449
  %16 = load i32, i32* %tmp, align 4, !dbg !6449
  store i32 %16, i32* %num_increments, align 4, !dbg !6451
  %17 = load i32, i32* %num_increments, align 4, !dbg !6452
  %sub = sub i32 %17, 1, !dbg !6453
  %neg = xor i32 %sub, -1, !dbg !6454
  %18 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %fifo, align 8, !dbg !6455
  %fifo_size_reg_mask = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %18, i32 0, i32 3, !dbg !6456
  %19 = load i16, i16* %fifo_size_reg_mask, align 4, !dbg !6456
  %conv = zext i16 %19 to i32, !dbg !6455
  %and = and i32 %neg, %conv, !dbg !6457
  %conv5 = trunc i32 %and to i16, !dbg !6458
  store i16 %conv5, i16* %bits, align 2, !dbg !6459
  %20 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %fifo, align 8, !dbg !6460
  %fifo_size_reg_mask6 = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %20, i32 0, i32 3, !dbg !6461
  %21 = load i16, i16* %fifo_size_reg_mask6, align 4, !dbg !6461
  %conv7 = zext i16 %21 to i32, !dbg !6460
  %neg8 = xor i32 %conv7, -1, !dbg !6462
  %22 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6463
  %fifo_size_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %22, i32 0, i32 19, !dbg !6464
  %23 = load i16, i16* %fifo_size_bits, align 2, !dbg !6465
  %conv9 = zext i16 %23 to i32, !dbg !6465
  %and10 = and i32 %conv9, %neg8, !dbg !6465
  %conv11 = trunc i32 %and10 to i16, !dbg !6465
  store i16 %conv11, i16* %fifo_size_bits, align 2, !dbg !6465
  %24 = load i16, i16* %bits, align 2, !dbg !6466
  %conv12 = zext i16 %24 to i32, !dbg !6466
  %25 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6467
  %fifo_size_bits13 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %25, i32 0, i32 19, !dbg !6468
  %26 = load i16, i16* %fifo_size_bits13, align 2, !dbg !6469
  %conv14 = zext i16 %26 to i32, !dbg !6469
  %or = or i32 %conv14, %conv12, !dbg !6469
  %conv15 = trunc i32 %or to i16, !dbg !6469
  store i16 %conv15, i16* %fifo_size_bits13, align 2, !dbg !6469
  %27 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6470
  %fifo_size_bits16 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %27, i32 0, i32 19, !dbg !6471
  %28 = load i16, i16* %fifo_size_bits16, align 2, !dbg !6471
  %29 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6472
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %29, i32 0, i32 3, !dbg !6473
  %30 = load i8*, i8** %main_iobase, align 8, !dbg !6473
  %add.ptr = getelementptr i8, i8* %30, i64 4, !dbg !6474
  call void @writew(i16 zeroext %28, i8* %add.ptr) #7, !dbg !6475
  %31 = load i32, i32* %num_increments, align 4, !dbg !6476
  %mul = mul i32 %31, 256, !dbg !6477
  %32 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6478
  %ai_fifo_segment_length = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %32, i32 0, i32 28, !dbg !6479
  store i32 %mul, i32* %ai_fifo_segment_length, align 4, !dbg !6480
  %33 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6481
  %ai_fifo_segment_length17 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %33, i32 0, i32 28, !dbg !6482
  %34 = load i32, i32* %ai_fifo_segment_length17, align 4, !dbg !6482
  ret i32 %34, !dbg !6483
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disable_ai_pacing(%struct.comedi_device* %dev) #2 !dbg !6484 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !5431, metadata !DIExpression()), !dbg !6485
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5438, metadata !DIExpression()), !dbg !6487
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5440, metadata !DIExpression()), !dbg !6488
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6495, metadata !DIExpression()), !dbg !6496
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !6497, metadata !DIExpression()), !dbg !6498
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6499
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !6500
  %1 = load i8*, i8** %private, align 8, !dbg !6500
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !6499
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !6498
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6501, metadata !DIExpression()), !dbg !6502
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6503
  call void @disable_ai_interrupts(%struct.comedi_device* %3) #7, !dbg !6504
  br label %do.body, !dbg !6505

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6506

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6507, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6510, metadata !DIExpression()), !dbg !6509
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6509
  %conv = zext i1 %cmp to i32, !dbg !6509
  store i32 1, i32* %tmp, align 4, !dbg !6509
  %4 = load i32, i32* %tmp, align 4, !dbg !6509
  br label %do.body2, !dbg !6511

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6512

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6513

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6515, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6519, metadata !DIExpression()), !dbg !6518
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6518
  %conv8 = zext i1 %cmp7 to i32, !dbg !6518
  store i32 1, i32* %tmp9, align 4, !dbg !6518
  %5 = load i32, i32* %tmp9, align 4, !dbg !6518
  %call = call i64 @arch_local_irq_save() #7, !dbg !6520
  store i64 %call, i64* %flags, align 8, !dbg !6520
  br label %do.end, !dbg !6520

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6513

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6512

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6521, !srcloc !6522
  br label %do.body12, !dbg !6521

do.body12:                                        ; preds = %do.body11
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6523
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 11, !dbg !6523
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6524
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !6525
  %rlock.i = bitcast %union.anon.3* %8 to %struct.raw_spinlock*, !dbg !6525
  br label %do.end14, !dbg !6523

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6521

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6512

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6511

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6506

do.end18:                                         ; preds = %do.end17
  %9 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6526
  %adc_control1_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %9, i32 0, i32 18, !dbg !6527
  %10 = load i16, i16* %adc_control1_bits, align 4, !dbg !6528
  %conv19 = zext i16 %10 to i32, !dbg !6528
  %and = and i32 %conv19, -65, !dbg !6528
  %conv20 = trunc i32 %and to i16, !dbg !6528
  store i16 %conv20, i16* %adc_control1_bits, align 4, !dbg !6528
  %11 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6529
  %adc_control1_bits21 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %11, i32 0, i32 18, !dbg !6530
  %12 = load i16, i16* %adc_control1_bits21, align 4, !dbg !6530
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6531
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 3, !dbg !6532
  %14 = load i8*, i8** %main_iobase, align 8, !dbg !6532
  %add.ptr = getelementptr i8, i8* %14, i64 18, !dbg !6533
  call void @writew(i16 zeroext %12, i8* %add.ptr) #7, !dbg !6534
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6535
  %spinlock22 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %15, i32 0, i32 11, !dbg !6536
  %16 = load i64, i64* %flags, align 8, !dbg !6537
  store %struct.spinlock* %spinlock22, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !6538
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !6538
  store i32 1, i32* %tmp.i, align 4, !dbg !6538
  %17 = load i32, i32* %tmp.i, align 4, !dbg !6538
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !6539
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !6539
  store i32 1, i32* %tmp8.i, align 4, !dbg !6539
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !6539
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !6540
  call void @arch_local_irq_restore(i64 %19) #9, !dbg !6540
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6541, !srcloc !5545
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !6542
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !6542
  %rlock.i26 = bitcast %union.anon.3* %21 to %struct.raw_spinlock*, !dbg !6542
  %22 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6543
  %main_iobase23 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %22, i32 0, i32 3, !dbg !6544
  %23 = load i8*, i8** %main_iobase23, align 8, !dbg !6544
  %add.ptr24 = getelementptr i8, i8* %23, i64 16, !dbg !6545
  call void @writew(i16 zeroext 16389, i8* %add.ptr24) #7, !dbg !6546
  ret void, !dbg !6547
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disable_ai_interrupts(%struct.comedi_device* %dev) #2 !dbg !6548 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5431, metadata !DIExpression()), !dbg !6549
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5438, metadata !DIExpression()), !dbg !6551
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5440, metadata !DIExpression()), !dbg !6552
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6559, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !6561, metadata !DIExpression()), !dbg !6562
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6563
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !6564
  %1 = load i8*, i8** %private, align 8, !dbg !6564
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !6563
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !6562
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6565, metadata !DIExpression()), !dbg !6566
  br label %do.body, !dbg !6567

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6568

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6569, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6572, metadata !DIExpression()), !dbg !6571
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6571
  %conv = zext i1 %cmp to i32, !dbg !6571
  store i32 1, i32* %tmp, align 4, !dbg !6571
  %3 = load i32, i32* %tmp, align 4, !dbg !6571
  br label %do.body2, !dbg !6573

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6574

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6575

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6577, metadata !DIExpression()), !dbg !6580
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6581, metadata !DIExpression()), !dbg !6580
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6580
  %conv8 = zext i1 %cmp7 to i32, !dbg !6580
  store i32 1, i32* %tmp9, align 4, !dbg !6580
  %4 = load i32, i32* %tmp9, align 4, !dbg !6580
  %call = call i64 @arch_local_irq_save() #7, !dbg !6582
  store i64 %call, i64* %flags, align 8, !dbg !6582
  br label %do.end, !dbg !6582

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6575

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6574

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6583, !srcloc !6584
  br label %do.body12, !dbg !6583

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6585
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 11, !dbg !6585
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6586
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !6587
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !6587
  br label %do.end14, !dbg !6585

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6583

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6574

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6573

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6568

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6588
  %intr_enable_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %8, i32 0, i32 17, !dbg !6589
  %9 = load i32, i32* %intr_enable_bits, align 8, !dbg !6590
  %and = and i32 %9, -34320, !dbg !6590
  store i32 %and, i32* %intr_enable_bits, align 8, !dbg !6590
  %10 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6591
  %intr_enable_bits19 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %10, i32 0, i32 17, !dbg !6592
  %11 = load i32, i32* %intr_enable_bits19, align 8, !dbg !6592
  %conv20 = trunc i32 %11 to i16, !dbg !6591
  %12 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6593
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %12, i32 0, i32 3, !dbg !6594
  %13 = load i8*, i8** %main_iobase, align 8, !dbg !6594
  %add.ptr = getelementptr i8, i8* %13, i64 0, !dbg !6595
  call void @writew(i16 zeroext %conv20, i8* %add.ptr) #7, !dbg !6596
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6597
  %spinlock21 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %14, i32 0, i32 11, !dbg !6598
  %15 = load i64, i64* %flags, align 8, !dbg !6599
  store %struct.spinlock* %spinlock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !6600
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !6600
  store i32 1, i32* %tmp.i, align 4, !dbg !6600
  %16 = load i32, i32* %tmp.i, align 4, !dbg !6600
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !6601
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !6601
  store i32 1, i32* %tmp8.i, align 4, !dbg !6601
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !6601
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !6602
  call void @arch_local_irq_restore(i64 %18) #9, !dbg !6602
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6603, !srcloc !5545
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !6604
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !6604
  %rlock.i23 = bitcast %union.anon.3* %20 to %struct.raw_spinlock*, !dbg !6604
  ret void, !dbg !6605
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_ai_interrupt(%struct.comedi_device* %dev, i16 zeroext %status, i32 %plx_status) #2 !dbg !6606 {
entry:
  %lock.addr.i113 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i113, metadata !5431, metadata !DIExpression()), !dbg !6609
  %flags.addr.i114 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i114, metadata !5438, metadata !DIExpression()), !dbg !6615
  %tmp.i115 = alloca i32, align 4
  %tmp8.i116 = alloca i32, align 4
  %lock.addr.i111 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i111, metadata !5440, metadata !DIExpression()), !dbg !6616
  %lock.addr.i106 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i106, metadata !5431, metadata !DIExpression()), !dbg !6623
  %flags.addr.i107 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i107, metadata !5438, metadata !DIExpression()), !dbg !6625
  %tmp.i108 = alloca i32, align 4
  %tmp8.i109 = alloca i32, align 4
  %lock.addr.i104 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i104, metadata !5431, metadata !DIExpression()), !dbg !6626
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5438, metadata !DIExpression()), !dbg !6629
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5440, metadata !DIExpression()), !dbg !6630
  %dev.addr = alloca %struct.comedi_device*, align 8
  %status.addr = alloca i16, align 2
  %plx_status.addr = alloca i32, align 4
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %async = alloca %struct.comedi_async*, align 8
  %cmd = alloca %struct.comedi_cmd*, align 8
  %dma1_status = alloca i8, align 1
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__dummy55 = alloca i64, align 8
  %__dummy256 = alloca i64, align 8
  %tmp59 = alloca i32, align 4
  %__dummy63 = alloca i64, align 8
  %__dummy264 = alloca i64, align 8
  %tmp67 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6637, metadata !DIExpression()), !dbg !6638
  store i16 %status, i16* %status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %status.addr, metadata !6639, metadata !DIExpression()), !dbg !6640
  store i32 %plx_status, i32* %plx_status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plx_status.addr, metadata !6641, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !6643, metadata !DIExpression()), !dbg !6644
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6645
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !6646
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !6646
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !6645
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !6644
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !6647, metadata !DIExpression()), !dbg !6648
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6649
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !6650
  %4 = load i8*, i8** %private, align 8, !dbg !6650
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !6649
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !6648
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !6651, metadata !DIExpression()), !dbg !6652
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6653
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 21, !dbg !6654
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !6654
  store %struct.comedi_subdevice* %7, %struct.comedi_subdevice** %s, align 8, !dbg !6652
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !6655, metadata !DIExpression()), !dbg !6656
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6657
  %async1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i32 0, i32 7, !dbg !6658
  %9 = load %struct.comedi_async*, %struct.comedi_async** %async1, align 8, !dbg !6658
  store %struct.comedi_async* %9, %struct.comedi_async** %async, align 8, !dbg !6656
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !6659, metadata !DIExpression()), !dbg !6660
  %10 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6661
  %cmd2 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %10, i32 0, i32 17, !dbg !6662
  store %struct.comedi_cmd* %cmd2, %struct.comedi_cmd** %cmd, align 8, !dbg !6660
  call void @llvm.dbg.declare(metadata i8* %dma1_status, metadata !6663, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6665, metadata !DIExpression()), !dbg !6666
  %11 = load i16, i16* %status.addr, align 2, !dbg !6667
  %conv = zext i16 %11 to i32, !dbg !6667
  %and = and i32 %conv, 2, !dbg !6669
  %tobool = icmp ne i32 %and, 0, !dbg !6669
  br i1 %tobool, label %if.then, label %if.end, !dbg !6670

if.then:                                          ; preds = %entry
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6671
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %12, i32 0, i32 4, !dbg !6671
  %13 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !6671
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0)) #8, !dbg !6671
  %14 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6673
  %events = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %14, i32 0, i32 16, !dbg !6674
  %15 = load i32, i32* %events, align 4, !dbg !6675
  %or = or i32 %15, 16, !dbg !6675
  store i32 %or, i32* %events, align 4, !dbg !6675
  br label %if.end, !dbg !6676

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !6677

do.body:                                          ; preds = %if.end
  br label %do.body3, !dbg !6678

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6679, metadata !DIExpression()), !dbg !6681
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6682, metadata !DIExpression()), !dbg !6681
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6681
  %conv4 = zext i1 %cmp to i32, !dbg !6681
  store i32 1, i32* %tmp, align 4, !dbg !6681
  %16 = load i32, i32* %tmp, align 4, !dbg !6681
  br label %do.body5, !dbg !6683

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !6684

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !6685

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !6687, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !6691, metadata !DIExpression()), !dbg !6690
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !6690
  %conv11 = zext i1 %cmp10 to i32, !dbg !6690
  store i32 1, i32* %tmp12, align 4, !dbg !6690
  %17 = load i32, i32* %tmp12, align 4, !dbg !6690
  %call = call i64 @arch_local_irq_save() #7, !dbg !6692
  store i64 %call, i64* %flags, align 8, !dbg !6692
  br label %do.end, !dbg !6692

do.end:                                           ; preds = %do.body7
  br label %do.end13, !dbg !6685

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !6684

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6693, !srcloc !6694
  br label %do.body15, !dbg !6693

do.body15:                                        ; preds = %do.body14
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6695
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %18, i32 0, i32 11, !dbg !6695
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6696
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !6697
  %rlock.i = bitcast %union.anon.3* %20 to %struct.raw_spinlock*, !dbg !6697
  br label %do.end17, !dbg !6695

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !6693

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6684

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6683

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6678

do.end21:                                         ; preds = %do.end20
  %21 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6698
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %21, i32 0, i32 2, !dbg !6699
  %22 = load i8*, i8** %plx9080_iobase, align 8, !dbg !6699
  %add.ptr = getelementptr i8, i8* %22, i64 169, !dbg !6700
  %call22 = call zeroext i8 @readb(i8* %add.ptr) #7, !dbg !6701
  store i8 %call22, i8* %dma1_status, align 1, !dbg !6702
  %23 = load i32, i32* %plx_status.addr, align 4, !dbg !6703
  %conv23 = zext i32 %23 to i64, !dbg !6703
  %and24 = and i64 %conv23, 4194304, !dbg !6705
  %tobool25 = icmp ne i64 %and24, 0, !dbg !6705
  br i1 %tobool25, label %if.then26, label %if.end38, !dbg !6706

if.then26:                                        ; preds = %do.end21
  %24 = load i8, i8* %dma1_status, align 1, !dbg !6707
  %conv27 = zext i8 %24 to i64, !dbg !6707
  %and28 = and i64 %conv27, 1, !dbg !6709
  %or29 = or i64 %and28, 8, !dbg !6710
  %conv30 = trunc i64 %or29 to i8, !dbg !6711
  %25 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6712
  %plx9080_iobase31 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %25, i32 0, i32 2, !dbg !6713
  %26 = load i8*, i8** %plx9080_iobase31, align 8, !dbg !6713
  %add.ptr32 = getelementptr i8, i8* %26, i64 169, !dbg !6714
  call void @writeb(i8 zeroext %conv30, i8* %add.ptr32) #7, !dbg !6715
  %27 = load i8, i8* %dma1_status, align 1, !dbg !6716
  %conv33 = zext i8 %27 to i64, !dbg !6716
  %and34 = and i64 %conv33, 1, !dbg !6718
  %tobool35 = icmp ne i64 %and34, 0, !dbg !6718
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !6719

if.then36:                                        ; preds = %if.then26
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6720
  call void @drain_dma_buffers(%struct.comedi_device* %28, i32 1) #7, !dbg !6721
  br label %if.end37, !dbg !6721

if.end37:                                         ; preds = %if.then36, %if.then26
  br label %if.end38, !dbg !6722

if.end38:                                         ; preds = %if.end37, %do.end21
  %29 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6723
  %spinlock39 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %29, i32 0, i32 11, !dbg !6724
  %30 = load i64, i64* %flags, align 8, !dbg !6725
  store %struct.spinlock* %spinlock39, %struct.spinlock** %lock.addr.i106, align 8
  store i64 %30, i64* %flags.addr.i107, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !6726
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !6726
  store i32 1, i32* %tmp.i108, align 4, !dbg !6726
  %31 = load i32, i32* %tmp.i108, align 4, !dbg !6726
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !6727
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !6727
  store i32 1, i32* %tmp8.i109, align 4, !dbg !6727
  %32 = load i32, i32* %tmp8.i109, align 4, !dbg !6727
  %33 = load i64, i64* %flags.addr.i107, align 8, !dbg !6728
  call void @arch_local_irq_restore(i64 %33) #9, !dbg !6728
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6729, !srcloc !5545
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i106, align 8, !dbg !6730
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !6730
  %rlock.i110 = bitcast %union.anon.3* %35 to %struct.raw_spinlock*, !dbg !6730
  %36 = load i16, i16* %status.addr, align 2, !dbg !6731
  %conv40 = zext i16 %36 to i32, !dbg !6731
  %and41 = and i32 %conv40, 128, !dbg !6732
  %tobool42 = icmp ne i32 %and41, 0, !dbg !6732
  br i1 %tobool42, label %if.then52, label %lor.lhs.false, !dbg !6733

lor.lhs.false:                                    ; preds = %if.end38
  %37 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !6734
  %flags43 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %37, i32 0, i32 1, !dbg !6735
  %38 = load i32, i32* %flags43, align 4, !dbg !6735
  %and44 = and i32 %38, 32, !dbg !6736
  %tobool45 = icmp ne i32 %and44, 0, !dbg !6736
  br i1 %tobool45, label %land.lhs.true, label %if.end85, !dbg !6737

land.lhs.true:                                    ; preds = %lor.lhs.false
  %39 = load i16, i16* %status.addr, align 2, !dbg !6738
  %conv46 = zext i16 %39 to i32, !dbg !6738
  %and47 = and i32 %conv46, 32, !dbg !6739
  %tobool48 = icmp ne i32 %and47, 0, !dbg !6739
  br i1 %tobool48, label %land.lhs.true49, label %if.end85, !dbg !6740

land.lhs.true49:                                  ; preds = %land.lhs.true
  %40 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !6741
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %40, i32 0, i32 12, !dbg !6742
  %41 = load i32, i32* %layout, align 8, !dbg !6742
  %cmp50 = icmp ne i32 %41, 2, !dbg !6743
  br i1 %cmp50, label %if.then52, label %if.end85, !dbg !6744

if.then52:                                        ; preds = %land.lhs.true49, %if.end38
  br label %do.body53, !dbg !6745

do.body53:                                        ; preds = %if.then52
  br label %do.body54, !dbg !6746

do.body54:                                        ; preds = %do.body53
  call void @llvm.dbg.declare(metadata i64* %__dummy55, metadata !6747, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.declare(metadata i64* %__dummy256, metadata !6750, metadata !DIExpression()), !dbg !6749
  %cmp57 = icmp eq i64* %__dummy55, %__dummy256, !dbg !6749
  %conv58 = zext i1 %cmp57 to i32, !dbg !6749
  store i32 1, i32* %tmp59, align 4, !dbg !6749
  %42 = load i32, i32* %tmp59, align 4, !dbg !6749
  br label %do.body60, !dbg !6751

do.body60:                                        ; preds = %do.body54
  br label %do.body61, !dbg !6752

do.body61:                                        ; preds = %do.body60
  br label %do.body62, !dbg !6753

do.body62:                                        ; preds = %do.body61
  call void @llvm.dbg.declare(metadata i64* %__dummy63, metadata !6755, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.declare(metadata i64* %__dummy264, metadata !6759, metadata !DIExpression()), !dbg !6758
  %cmp65 = icmp eq i64* %__dummy63, %__dummy264, !dbg !6758
  %conv66 = zext i1 %cmp65 to i32, !dbg !6758
  store i32 1, i32* %tmp67, align 4, !dbg !6758
  %43 = load i32, i32* %tmp67, align 4, !dbg !6758
  %call68 = call i64 @arch_local_irq_save() #7, !dbg !6760
  store i64 %call68, i64* %flags, align 8, !dbg !6760
  br label %do.end69, !dbg !6760

do.end69:                                         ; preds = %do.body62
  br label %do.end70, !dbg !6753

do.end70:                                         ; preds = %do.end69
  br label %do.body71, !dbg !6752

do.body71:                                        ; preds = %do.end70
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6761, !srcloc !6762
  br label %do.body72, !dbg !6761

do.body72:                                        ; preds = %do.body71
  %44 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6763
  %spinlock73 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %44, i32 0, i32 11, !dbg !6763
  store %struct.spinlock* %spinlock73, %struct.spinlock** %lock.addr.i111, align 8
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i111, align 8, !dbg !6764
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !6765
  %rlock.i112 = bitcast %union.anon.3* %46 to %struct.raw_spinlock*, !dbg !6765
  br label %do.end75, !dbg !6763

do.end75:                                         ; preds = %do.body72
  br label %do.end76, !dbg !6761

do.end76:                                         ; preds = %do.end75
  br label %do.end77, !dbg !6752

do.end77:                                         ; preds = %do.end76
  br label %do.end78, !dbg !6751

do.end78:                                         ; preds = %do.end77
  br label %do.end79, !dbg !6746

do.end79:                                         ; preds = %do.end78
  %47 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6766
  %ai_cmd_running = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %47, i32 0, i32 27, !dbg !6767
  %48 = load i16, i16* %ai_cmd_running, align 8, !dbg !6767
  %tobool80 = icmp ne i16 %48, 0, !dbg !6766
  br i1 %tobool80, label %if.then81, label %if.else, !dbg !6768

if.then81:                                        ; preds = %do.end79
  %49 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6769
  %spinlock82 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %49, i32 0, i32 11, !dbg !6770
  %50 = load i64, i64* %flags, align 8, !dbg !6771
  store %struct.spinlock* %spinlock82, %struct.spinlock** %lock.addr.i113, align 8
  store i64 %50, i64* %flags.addr.i114, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !6772
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !6772
  store i32 1, i32* %tmp.i115, align 4, !dbg !6772
  %51 = load i32, i32* %tmp.i115, align 4, !dbg !6772
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !6773
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !6773
  store i32 1, i32* %tmp8.i116, align 4, !dbg !6773
  %52 = load i32, i32* %tmp8.i116, align 4, !dbg !6773
  %53 = load i64, i64* %flags.addr.i114, align 8, !dbg !6774
  call void @arch_local_irq_restore(i64 %53) #9, !dbg !6774
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6775, !srcloc !5545
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i113, align 8, !dbg !6776
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !6776
  %rlock.i117 = bitcast %union.anon.3* %55 to %struct.raw_spinlock*, !dbg !6776
  %56 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6777
  call void @pio_drain_ai_fifo(%struct.comedi_device* %56) #7, !dbg !6778
  br label %if.end84, !dbg !6779

if.else:                                          ; preds = %do.end79
  %57 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6780
  %spinlock83 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %57, i32 0, i32 11, !dbg !6781
  %58 = load i64, i64* %flags, align 8, !dbg !6782
  store %struct.spinlock* %spinlock83, %struct.spinlock** %lock.addr.i104, align 8
  store i64 %58, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !6783
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !6783
  store i32 1, i32* %tmp.i, align 4, !dbg !6783
  %59 = load i32, i32* %tmp.i, align 4, !dbg !6783
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !6784
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !6784
  store i32 1, i32* %tmp8.i, align 4, !dbg !6784
  %60 = load i32, i32* %tmp8.i, align 4, !dbg !6784
  %61 = load i64, i64* %flags.addr.i, align 8, !dbg !6785
  call void @arch_local_irq_restore(i64 %61) #9, !dbg !6785
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6786, !srcloc !5545
  %62 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i104, align 8, !dbg !6787
  %63 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %62, i32 0, i32 0, !dbg !6787
  %rlock.i105 = bitcast %union.anon.3* %63 to %struct.raw_spinlock*, !dbg !6787
  br label %if.end84

if.end84:                                         ; preds = %if.else, %if.then81
  br label %if.end85, !dbg !6788

if.end85:                                         ; preds = %if.end84, %land.lhs.true49, %land.lhs.true, %lor.lhs.false
  %64 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !6789
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %64, i32 0, i32 10, !dbg !6791
  %65 = load i32, i32* %stop_src, align 8, !dbg !6791
  %cmp86 = icmp eq i32 %65, 32, !dbg !6792
  br i1 %cmp86, label %land.lhs.true88, label %lor.lhs.false91, !dbg !6793

land.lhs.true88:                                  ; preds = %if.end85
  %66 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6794
  %scans_done = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %66, i32 0, i32 11, !dbg !6795
  %67 = load i32, i32* %scans_done, align 8, !dbg !6795
  %68 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !6796
  %stop_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %68, i32 0, i32 11, !dbg !6797
  %69 = load i32, i32* %stop_arg, align 4, !dbg !6797
  %cmp89 = icmp uge i32 %67, %69, !dbg !6798
  br i1 %cmp89, label %if.then99, label %lor.lhs.false91, !dbg !6799

lor.lhs.false91:                                  ; preds = %land.lhs.true88, %if.end85
  %70 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !6800
  %stop_src92 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %70, i32 0, i32 10, !dbg !6801
  %71 = load i32, i32* %stop_src92, align 8, !dbg !6801
  %cmp93 = icmp eq i32 %71, 64, !dbg !6802
  br i1 %cmp93, label %land.lhs.true95, label %if.end102, !dbg !6803

land.lhs.true95:                                  ; preds = %lor.lhs.false91
  %72 = load i16, i16* %status.addr, align 2, !dbg !6804
  %conv96 = zext i16 %72 to i32, !dbg !6804
  %and97 = and i32 %conv96, 512, !dbg !6805
  %tobool98 = icmp ne i32 %and97, 0, !dbg !6805
  br i1 %tobool98, label %if.then99, label %if.end102, !dbg !6806

if.then99:                                        ; preds = %land.lhs.true95, %land.lhs.true88
  %73 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6807
  %events100 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %73, i32 0, i32 16, !dbg !6808
  %74 = load i32, i32* %events100, align 4, !dbg !6809
  %or101 = or i32 %74, 2, !dbg !6809
  store i32 %or101, i32* %events100, align 4, !dbg !6809
  br label %if.end102, !dbg !6807

if.end102:                                        ; preds = %if.then99, %land.lhs.true95, %lor.lhs.false91
  %75 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6810
  %76 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6811
  %call103 = call i32 @comedi_handle_events(%struct.comedi_device* %75, %struct.comedi_subdevice* %76) #7, !dbg !6812
  ret void, !dbg !6813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_ao_interrupt(%struct.comedi_device* %dev, i16 zeroext %status, i32 %plx_status) #2 !dbg !6814 {
entry:
  %lock.addr.i71 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i71, metadata !5431, metadata !DIExpression()), !dbg !6815
  %flags.addr.i72 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i72, metadata !5438, metadata !DIExpression()), !dbg !6819
  %tmp.i73 = alloca i32, align 4
  %tmp8.i74 = alloca i32, align 4
  %lock.addr.i69 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i69, metadata !5431, metadata !DIExpression()), !dbg !6820
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5438, metadata !DIExpression()), !dbg !6823
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5440, metadata !DIExpression()), !dbg !6824
  %dev.addr = alloca %struct.comedi_device*, align 8
  %status.addr = alloca i16, align 2
  %plx_status.addr = alloca i32, align 4
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %async = alloca %struct.comedi_async*, align 8
  %cmd = alloca %struct.comedi_cmd*, align 8
  %dma0_status = alloca i8, align 1
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6831, metadata !DIExpression()), !dbg !6832
  store i16 %status, i16* %status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %status.addr, metadata !6833, metadata !DIExpression()), !dbg !6834
  store i32 %plx_status, i32* %plx_status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plx_status.addr, metadata !6835, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !6837, metadata !DIExpression()), !dbg !6838
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6839
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !6840
  %1 = load i8*, i8** %private, align 8, !dbg !6840
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !6839
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !6838
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !6841, metadata !DIExpression()), !dbg !6842
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6843
  %write_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 22, !dbg !6844
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %write_subdev, align 8, !dbg !6844
  store %struct.comedi_subdevice* %4, %struct.comedi_subdevice** %s, align 8, !dbg !6842
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !6845, metadata !DIExpression()), !dbg !6846
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !6847, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.declare(metadata i8* %dma0_status, metadata !6849, metadata !DIExpression()), !dbg !6850
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6851, metadata !DIExpression()), !dbg !6852
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6853
  %tobool = icmp ne %struct.comedi_subdevice* %5, null, !dbg !6853
  br i1 %tobool, label %if.end, label %if.then, !dbg !6855

if.then:                                          ; preds = %entry
  br label %return, !dbg !6856

if.end:                                           ; preds = %entry
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6857
  %async1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i32 0, i32 7, !dbg !6858
  %7 = load %struct.comedi_async*, %struct.comedi_async** %async1, align 8, !dbg !6858
  store %struct.comedi_async* %7, %struct.comedi_async** %async, align 8, !dbg !6859
  %8 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6860
  %cmd2 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %8, i32 0, i32 17, !dbg !6861
  store %struct.comedi_cmd* %cmd2, %struct.comedi_cmd** %cmd, align 8, !dbg !6862
  br label %do.body, !dbg !6863

do.body:                                          ; preds = %if.end
  br label %do.body3, !dbg !6864

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6865, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6868, metadata !DIExpression()), !dbg !6867
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6867
  %conv = zext i1 %cmp to i32, !dbg !6867
  store i32 1, i32* %tmp, align 4, !dbg !6867
  %9 = load i32, i32* %tmp, align 4, !dbg !6867
  br label %do.body4, !dbg !6869

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !6870

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !6871

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !6873, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6877, metadata !DIExpression()), !dbg !6876
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !6876
  %conv10 = zext i1 %cmp9 to i32, !dbg !6876
  store i32 1, i32* %tmp11, align 4, !dbg !6876
  %10 = load i32, i32* %tmp11, align 4, !dbg !6876
  %call = call i64 @arch_local_irq_save() #7, !dbg !6878
  store i64 %call, i64* %flags, align 8, !dbg !6878
  br label %do.end, !dbg !6878

do.end:                                           ; preds = %do.body6
  br label %do.end12, !dbg !6871

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !6870

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6879, !srcloc !6880
  br label %do.body14, !dbg !6879

do.body14:                                        ; preds = %do.body13
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6881
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %11, i32 0, i32 11, !dbg !6881
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6882
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !6883
  %rlock.i = bitcast %union.anon.3* %13 to %struct.raw_spinlock*, !dbg !6883
  br label %do.end16, !dbg !6881

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !6879

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6870

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6869

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6864

do.end20:                                         ; preds = %do.end19
  %14 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6884
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %14, i32 0, i32 2, !dbg !6885
  %15 = load i8*, i8** %plx9080_iobase, align 8, !dbg !6885
  %add.ptr = getelementptr i8, i8* %15, i64 168, !dbg !6886
  %call21 = call zeroext i8 @readb(i8* %add.ptr) #7, !dbg !6887
  store i8 %call21, i8* %dma0_status, align 1, !dbg !6888
  %16 = load i32, i32* %plx_status.addr, align 4, !dbg !6889
  %conv22 = zext i32 %16 to i64, !dbg !6889
  %and = and i64 %conv22, 2097152, !dbg !6890
  %tobool23 = icmp ne i64 %and, 0, !dbg !6890
  br i1 %tobool23, label %if.then24, label %if.else48, !dbg !6891

if.then24:                                        ; preds = %do.end20
  %17 = load i8, i8* %dma0_status, align 1, !dbg !6892
  %conv25 = zext i8 %17 to i64, !dbg !6892
  %and26 = and i64 %conv25, 1, !dbg !6894
  %tobool27 = icmp ne i64 %and26, 0, !dbg !6894
  br i1 %tobool27, label %land.lhs.true, label %if.else, !dbg !6895

land.lhs.true:                                    ; preds = %if.then24
  %18 = load i8, i8* %dma0_status, align 1, !dbg !6896
  %conv28 = zext i8 %18 to i64, !dbg !6896
  %and29 = and i64 %conv28, 16, !dbg !6897
  %tobool30 = icmp ne i64 %and29, 0, !dbg !6897
  br i1 %tobool30, label %if.else, label %if.then31, !dbg !6898

if.then31:                                        ; preds = %land.lhs.true
  %19 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6899
  %plx9080_iobase32 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %19, i32 0, i32 2, !dbg !6901
  %20 = load i8*, i8** %plx9080_iobase32, align 8, !dbg !6901
  %add.ptr33 = getelementptr i8, i8* %20, i64 168, !dbg !6902
  call void @writeb(i8 zeroext 9, i8* %add.ptr33) #7, !dbg !6903
  br label %if.end36, !dbg !6904

if.else:                                          ; preds = %land.lhs.true, %if.then24
  %21 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6905
  %plx9080_iobase34 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %21, i32 0, i32 2, !dbg !6907
  %22 = load i8*, i8** %plx9080_iobase34, align 8, !dbg !6907
  %add.ptr35 = getelementptr i8, i8* %22, i64 168, !dbg !6908
  call void @writeb(i8 zeroext 8, i8* %add.ptr35) #7, !dbg !6909
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then31
  %23 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6910
  %spinlock37 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %23, i32 0, i32 11, !dbg !6911
  %24 = load i64, i64* %flags, align 8, !dbg !6912
  store %struct.spinlock* %spinlock37, %struct.spinlock** %lock.addr.i69, align 8
  store i64 %24, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !6913
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !6913
  store i32 1, i32* %tmp.i, align 4, !dbg !6913
  %25 = load i32, i32* %tmp.i, align 4, !dbg !6913
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !6914
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !6914
  store i32 1, i32* %tmp8.i, align 4, !dbg !6914
  %26 = load i32, i32* %tmp8.i, align 4, !dbg !6914
  %27 = load i64, i64* %flags.addr.i, align 8, !dbg !6915
  call void @arch_local_irq_restore(i64 %27) #9, !dbg !6915
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6916, !srcloc !5545
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i69, align 8, !dbg !6917
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !6917
  %rlock.i70 = bitcast %union.anon.3* %29 to %struct.raw_spinlock*, !dbg !6917
  %30 = load i8, i8* %dma0_status, align 1, !dbg !6918
  %conv38 = zext i8 %30 to i64, !dbg !6918
  %and39 = and i64 %conv38, 1, !dbg !6920
  %tobool40 = icmp ne i64 %and39, 0, !dbg !6920
  br i1 %tobool40, label %if.then41, label %if.end47, !dbg !6921

if.then41:                                        ; preds = %if.end36
  %31 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6922
  %32 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !6924
  call void @load_ao_dma(%struct.comedi_device* %31, %struct.comedi_cmd* %32) #7, !dbg !6925
  %33 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6926
  %34 = load i8, i8* %dma0_status, align 1, !dbg !6928
  %conv42 = zext i8 %34 to i16, !dbg !6928
  %call43 = call i32 @ao_dma_needs_restart(%struct.comedi_device* %33, i16 zeroext %conv42) #7, !dbg !6929
  %tobool44 = icmp ne i32 %call43, 0, !dbg !6929
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !6930

if.then45:                                        ; preds = %if.then41
  %35 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6931
  call void @restart_ao_dma(%struct.comedi_device* %35) #7, !dbg !6932
  br label %if.end46, !dbg !6932

if.end46:                                         ; preds = %if.then45, %if.then41
  br label %if.end47, !dbg !6933

if.end47:                                         ; preds = %if.end46, %if.end36
  br label %if.end50, !dbg !6934

if.else48:                                        ; preds = %do.end20
  %36 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6935
  %spinlock49 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %36, i32 0, i32 11, !dbg !6936
  %37 = load i64, i64* %flags, align 8, !dbg !6937
  store %struct.spinlock* %spinlock49, %struct.spinlock** %lock.addr.i71, align 8
  store i64 %37, i64* %flags.addr.i72, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !6938
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !6938
  store i32 1, i32* %tmp.i73, align 4, !dbg !6938
  %38 = load i32, i32* %tmp.i73, align 4, !dbg !6938
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !6939
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !6939
  store i32 1, i32* %tmp8.i74, align 4, !dbg !6939
  %39 = load i32, i32* %tmp8.i74, align 4, !dbg !6939
  %40 = load i64, i64* %flags.addr.i72, align 8, !dbg !6940
  call void @arch_local_irq_restore(i64 %40) #9, !dbg !6940
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6941, !srcloc !5545
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i71, align 8, !dbg !6942
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !6942
  %rlock.i75 = bitcast %union.anon.3* %42 to %struct.raw_spinlock*, !dbg !6942
  br label %if.end50

if.end50:                                         ; preds = %if.else48, %if.end47
  %43 = load i16, i16* %status.addr, align 2, !dbg !6943
  %conv51 = zext i16 %43 to i32, !dbg !6943
  %and52 = and i32 %conv51, 64, !dbg !6945
  %tobool53 = icmp ne i32 %and52, 0, !dbg !6945
  br i1 %tobool53, label %if.then54, label %if.end67, !dbg !6946

if.then54:                                        ; preds = %if.end50
  %44 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !6947
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %44, i32 0, i32 10, !dbg !6950
  %45 = load i32, i32* %stop_src, align 8, !dbg !6950
  %cmp55 = icmp eq i32 %45, 32, !dbg !6951
  br i1 %cmp55, label %land.lhs.true57, label %lor.lhs.false, !dbg !6952

land.lhs.true57:                                  ; preds = %if.then54
  %46 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6953
  %scans_done = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %46, i32 0, i32 11, !dbg !6954
  %47 = load i32, i32* %scans_done, align 8, !dbg !6954
  %48 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !6955
  %stop_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %48, i32 0, i32 11, !dbg !6956
  %49 = load i32, i32* %stop_arg, align 4, !dbg !6956
  %cmp58 = icmp uge i32 %47, %49, !dbg !6957
  br i1 %cmp58, label %if.then62, label %lor.lhs.false, !dbg !6958

lor.lhs.false:                                    ; preds = %land.lhs.true57, %if.then54
  %50 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6959
  %call60 = call i32 @last_ao_dma_load_completed(%struct.comedi_device* %50) #7, !dbg !6960
  %tobool61 = icmp ne i32 %call60, 0, !dbg !6960
  br i1 %tobool61, label %if.then62, label %if.else63, !dbg !6961

if.then62:                                        ; preds = %lor.lhs.false, %land.lhs.true57
  %51 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6962
  %events = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %51, i32 0, i32 16, !dbg !6963
  %52 = load i32, i32* %events, align 4, !dbg !6964
  %or = or i32 %52, 2, !dbg !6964
  store i32 %or, i32* %events, align 4, !dbg !6964
  br label %if.end66, !dbg !6962

if.else63:                                        ; preds = %lor.lhs.false
  %53 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6965
  %events64 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %53, i32 0, i32 16, !dbg !6966
  %54 = load i32, i32* %events64, align 4, !dbg !6967
  %or65 = or i32 %54, 16, !dbg !6967
  store i32 %or65, i32* %events64, align 4, !dbg !6967
  br label %if.end66

if.end66:                                         ; preds = %if.else63, %if.then62
  br label %if.end67, !dbg !6968

if.end67:                                         ; preds = %if.end66, %if.end50
  %55 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6969
  %56 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6970
  %call68 = call i32 @comedi_handle_events(%struct.comedi_device* %55, %struct.comedi_subdevice* %56) #7, !dbg !6971
  br label %return, !dbg !6972

return:                                           ; preds = %if.end67, %if.then
  ret void, !dbg !6972
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drain_dma_buffers(%struct.comedi_device* %dev, i32 %channel) #2 !dbg !6973 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %channel.addr = alloca i32, align 4
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %next_transfer_addr = alloca i32, align 4
  %j = alloca i32, align 4
  %num_samples = alloca i32, align 4
  %pci_addr_reg = alloca i8*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6974, metadata !DIExpression()), !dbg !6975
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !6976, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !6978, metadata !DIExpression()), !dbg !6979
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6980
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !6981
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !6981
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !6980
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !6979
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !6982, metadata !DIExpression()), !dbg !6983
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6984
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !6985
  %4 = load i8*, i8** %private, align 8, !dbg !6985
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !6984
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !6983
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !6986, metadata !DIExpression()), !dbg !6987
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6988
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 21, !dbg !6989
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !6989
  store %struct.comedi_subdevice* %7, %struct.comedi_subdevice** %s, align 8, !dbg !6987
  call void @llvm.dbg.declare(metadata i32* %next_transfer_addr, metadata !6990, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6992, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.declare(metadata i32* %num_samples, metadata !6994, metadata !DIExpression()), !dbg !6995
  store i32 0, i32* %num_samples, align 4, !dbg !6995
  call void @llvm.dbg.declare(metadata i8** %pci_addr_reg, metadata !6996, metadata !DIExpression()), !dbg !6997
  %8 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !6998
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %8, i32 0, i32 2, !dbg !6999
  %9 = load i8*, i8** %plx9080_iobase, align 8, !dbg !6999
  %10 = load i32, i32* %channel.addr, align 4, !dbg !7000
  %tobool = icmp ne i32 %10, 0, !dbg !7000
  %11 = zext i1 %tobool to i64, !dbg !7000
  %cond = select i1 %tobool, i32 152, i32 132, !dbg !7000
  %idx.ext = sext i32 %cond to i64, !dbg !7001
  %add.ptr = getelementptr i8, i8* %9, i64 %idx.ext, !dbg !7001
  store i8* %add.ptr, i8** %pci_addr_reg, align 8, !dbg !7002
  store i32 0, i32* %j, align 4, !dbg !7003
  %12 = load i8*, i8** %pci_addr_reg, align 8, !dbg !7005
  %call = call i32 @readl(i8* %12) #7, !dbg !7006
  store i32 %call, i32* %next_transfer_addr, align 4, !dbg !7007
  br label %for.cond, !dbg !7008

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load i32, i32* %next_transfer_addr, align 4, !dbg !7009
  %conv = zext i32 %13 to i64, !dbg !7009
  %14 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7011
  %ai_buffer_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %14, i32 0, i32 7, !dbg !7012
  %15 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7013
  %ai_dma_index = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %15, i32 0, i32 10, !dbg !7014
  %16 = load i32, i32* %ai_dma_index, align 8, !dbg !7014
  %idxprom = zext i32 %16 to i64, !dbg !7011
  %arrayidx = getelementptr [128 x i64], [128 x i64]* %ai_buffer_bus_addr, i64 0, i64 %idxprom, !dbg !7011
  %17 = load i64, i64* %arrayidx, align 8, !dbg !7011
  %cmp = icmp ult i64 %conv, %17, !dbg !7015
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7016

lor.lhs.false:                                    ; preds = %for.cond
  %18 = load i32, i32* %next_transfer_addr, align 4, !dbg !7017
  %conv2 = zext i32 %18 to i64, !dbg !7017
  %19 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7018
  %ai_buffer_bus_addr3 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %19, i32 0, i32 7, !dbg !7019
  %20 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7020
  %ai_dma_index4 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %20, i32 0, i32 10, !dbg !7021
  %21 = load i32, i32* %ai_dma_index4, align 8, !dbg !7021
  %idxprom5 = zext i32 %21 to i64, !dbg !7018
  %arrayidx6 = getelementptr [128 x i64], [128 x i64]* %ai_buffer_bus_addr3, i64 0, i64 %idxprom5, !dbg !7018
  %22 = load i64, i64* %arrayidx6, align 8, !dbg !7018
  %add = add i64 %22, 4096, !dbg !7022
  %cmp7 = icmp uge i64 %conv2, %add, !dbg !7023
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !7024

land.rhs:                                         ; preds = %lor.lhs.false, %for.cond
  %23 = load i32, i32* %j, align 4, !dbg !7025
  %24 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !7026
  %call9 = call i32 @ai_dma_ring_count(%struct.pcidas64_board* %24) #7, !dbg !7027
  %cmp10 = icmp ult i32 %23, %call9, !dbg !7028
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %25 = phi i1 [ false, %lor.lhs.false ], [ %cmp10, %land.rhs ], !dbg !7029
  br i1 %25, label %for.body, label %for.end, !dbg !7030

for.body:                                         ; preds = %land.end
  %26 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7031
  %27 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7033
  %call12 = call i32 @dma_transfer_size(%struct.comedi_device* %27) #7, !dbg !7034
  %call13 = call i32 @comedi_nsamples_left(%struct.comedi_subdevice* %26, i32 %call12) #7, !dbg !7035
  store i32 %call13, i32* %num_samples, align 4, !dbg !7036
  %28 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7037
  %29 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7038
  %ai_buffer = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %29, i32 0, i32 6, !dbg !7039
  %30 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7040
  %ai_dma_index14 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %30, i32 0, i32 10, !dbg !7041
  %31 = load i32, i32* %ai_dma_index14, align 8, !dbg !7041
  %idxprom15 = zext i32 %31 to i64, !dbg !7038
  %arrayidx16 = getelementptr [128 x i16*], [128 x i16*]* %ai_buffer, i64 0, i64 %idxprom15, !dbg !7038
  %32 = load i16*, i16** %arrayidx16, align 8, !dbg !7038
  %33 = bitcast i16* %32 to i8*, !dbg !7038
  %34 = load i32, i32* %num_samples, align 4, !dbg !7042
  %call17 = call i32 @comedi_buf_write_samples(%struct.comedi_subdevice* %28, i8* %33, i32 %34) #7, !dbg !7043
  %35 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7044
  %ai_dma_index18 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %35, i32 0, i32 10, !dbg !7045
  %36 = load i32, i32* %ai_dma_index18, align 8, !dbg !7045
  %add19 = add i32 %36, 1, !dbg !7046
  %37 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !7047
  %call20 = call i32 @ai_dma_ring_count(%struct.pcidas64_board* %37) #7, !dbg !7048
  %rem = urem i32 %add19, %call20, !dbg !7049
  %38 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7050
  %ai_dma_index21 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %38, i32 0, i32 10, !dbg !7051
  store i32 %rem, i32* %ai_dma_index21, align 8, !dbg !7052
  br label %for.inc, !dbg !7053

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %j, align 4, !dbg !7054
  %inc = add i32 %39, 1, !dbg !7054
  store i32 %inc, i32* %j, align 4, !dbg !7054
  br label %for.cond, !dbg !7055, !llvm.loop !7056

for.end:                                          ; preds = %land.end
  ret void, !dbg !7058
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pio_drain_ai_fifo(%struct.comedi_device* %dev) #2 !dbg !7059 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7060, metadata !DIExpression()), !dbg !7061
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !7062, metadata !DIExpression()), !dbg !7063
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7064
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !7065
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !7065
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !7064
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !7063
  %3 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !7066
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %3, i32 0, i32 12, !dbg !7068
  %4 = load i32, i32* %layout, align 8, !dbg !7068
  %cmp = icmp eq i32 %4, 2, !dbg !7069
  br i1 %cmp, label %if.then, label %if.else, !dbg !7070

if.then:                                          ; preds = %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7071
  call void @pio_drain_ai_fifo_32(%struct.comedi_device* %5) #7, !dbg !7072
  br label %if.end, !dbg !7072

if.else:                                          ; preds = %entry
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7073
  call void @pio_drain_ai_fifo_16(%struct.comedi_device* %6) #7, !dbg !7074
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7075
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_handle_events(%struct.comedi_device*, %struct.comedi_subdevice*) #1

; Function Attrs: noredzone
declare dso_local i32 @comedi_nsamples_left(%struct.comedi_subdevice*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_transfer_size(%struct.comedi_device* %dev) #2 !dbg !7076 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %num_samples = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7079, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !7081, metadata !DIExpression()), !dbg !7082
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7083
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !7084
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !7084
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !7083
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !7082
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !7085, metadata !DIExpression()), !dbg !7086
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7087
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !7088
  %4 = load i8*, i8** %private, align 8, !dbg !7088
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !7087
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !7086
  call void @llvm.dbg.declare(metadata i32* %num_samples, metadata !7089, metadata !DIExpression()), !dbg !7090
  %6 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7091
  %ai_fifo_segment_length = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %6, i32 0, i32 28, !dbg !7092
  %7 = load i32, i32* %ai_fifo_segment_length, align 4, !dbg !7092
  %8 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !7093
  %ai_fifo = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %8, i32 0, i32 11, !dbg !7094
  %9 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %ai_fifo, align 8, !dbg !7094
  %sample_packing_ratio = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %9, i32 0, i32 2, !dbg !7095
  %10 = load i32, i32* %sample_packing_ratio, align 4, !dbg !7095
  %mul = mul i32 %7, %10, !dbg !7096
  store i32 %mul, i32* %num_samples, align 4, !dbg !7097
  %11 = load i32, i32* %num_samples, align 4, !dbg !7098
  %conv = zext i32 %11 to i64, !dbg !7098
  %cmp = icmp ugt i64 %conv, 2048, !dbg !7100
  br i1 %cmp, label %if.then, label %if.end, !dbg !7101

if.then:                                          ; preds = %entry
  store i32 2048, i32* %num_samples, align 4, !dbg !7102
  br label %if.end, !dbg !7103

if.end:                                           ; preds = %if.then, %entry
  %12 = load i32, i32* %num_samples, align 4, !dbg !7104
  ret i32 %12, !dbg !7105
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_write_samples(%struct.comedi_subdevice*, i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pio_drain_ai_fifo_32(%struct.comedi_device* %dev) #2 !dbg !7106 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %nsamples = alloca i32, align 4
  %i = alloca i32, align 4
  %fifo_data = alloca i32, align 4
  %write_code = alloca i32, align 4
  %read_code = alloca i32, align 4
  %val = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7107, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !7109, metadata !DIExpression()), !dbg !7110
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7111
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7112
  %1 = load i8*, i8** %private, align 8, !dbg !7112
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !7111
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !7110
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !7113, metadata !DIExpression()), !dbg !7114
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7115
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 21, !dbg !7116
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !7116
  store %struct.comedi_subdevice* %4, %struct.comedi_subdevice** %s, align 8, !dbg !7114
  call void @llvm.dbg.declare(metadata i32* %nsamples, metadata !7117, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7119, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.declare(metadata i32* %fifo_data, metadata !7121, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.declare(metadata i32* %write_code, metadata !7123, metadata !DIExpression()), !dbg !7124
  %5 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7125
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %5, i32 0, i32 3, !dbg !7126
  %6 = load i8*, i8** %main_iobase, align 8, !dbg !7126
  %add.ptr = getelementptr i8, i8* %6, i64 12, !dbg !7127
  %call = call zeroext i16 @readw(i8* %add.ptr) #7, !dbg !7128
  %conv = zext i16 %call to i32, !dbg !7128
  %and = and i32 %conv, 32767, !dbg !7129
  store i32 %and, i32* %write_code, align 4, !dbg !7124
  call void @llvm.dbg.declare(metadata i32* %read_code, metadata !7130, metadata !DIExpression()), !dbg !7131
  %7 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7132
  %main_iobase1 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %7, i32 0, i32 3, !dbg !7133
  %8 = load i8*, i8** %main_iobase1, align 8, !dbg !7133
  %add.ptr2 = getelementptr i8, i8* %8, i64 8, !dbg !7134
  %call3 = call zeroext i16 @readw(i8* %add.ptr2) #7, !dbg !7135
  %conv4 = zext i16 %call3 to i32, !dbg !7135
  %and5 = and i32 %conv4, 32767, !dbg !7136
  store i32 %and5, i32* %read_code, align 4, !dbg !7131
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7137
  %call6 = call i32 @comedi_nsamples_left(%struct.comedi_subdevice* %9, i32 100000) #7, !dbg !7138
  store i32 %call6, i32* %nsamples, align 4, !dbg !7139
  store i32 0, i32* %i, align 4, !dbg !7140
  br label %for.cond, !dbg !7142

for.cond:                                         ; preds = %if.end, %entry
  %10 = load i32, i32* %read_code, align 4, !dbg !7143
  %11 = load i32, i32* %write_code, align 4, !dbg !7145
  %cmp = icmp ne i32 %10, %11, !dbg !7146
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7147

land.rhs:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !7148
  %13 = load i32, i32* %nsamples, align 4, !dbg !7149
  %cmp8 = icmp ult i32 %12, %13, !dbg !7150
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %14 = phi i1 [ false, %for.cond ], [ %cmp8, %land.rhs ], !dbg !7151
  br i1 %14, label %for.body, label %for.end, !dbg !7152

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i16* %val, metadata !7153, metadata !DIExpression()), !dbg !7155
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7156
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %15, i32 0, i32 17, !dbg !7157
  %16 = load i8*, i8** %mmio, align 8, !dbg !7157
  %add.ptr10 = getelementptr i8, i8* %16, i64 512, !dbg !7158
  %call11 = call i32 @readl(i8* %add.ptr10) #7, !dbg !7159
  store i32 %call11, i32* %fifo_data, align 4, !dbg !7160
  %17 = load i32, i32* %fifo_data, align 4, !dbg !7161
  %and12 = and i32 %17, 65535, !dbg !7162
  %conv13 = trunc i32 %and12 to i16, !dbg !7161
  store i16 %conv13, i16* %val, align 2, !dbg !7163
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7164
  %19 = bitcast i16* %val to i8*, !dbg !7165
  %call14 = call i32 @comedi_buf_write_samples(%struct.comedi_subdevice* %18, i8* %19, i32 1) #7, !dbg !7166
  %20 = load i32, i32* %i, align 4, !dbg !7167
  %inc = add i32 %20, 1, !dbg !7167
  store i32 %inc, i32* %i, align 4, !dbg !7167
  %21 = load i32, i32* %i, align 4, !dbg !7168
  %22 = load i32, i32* %nsamples, align 4, !dbg !7170
  %cmp15 = icmp ult i32 %21, %22, !dbg !7171
  br i1 %cmp15, label %if.then, label %if.end, !dbg !7172

if.then:                                          ; preds = %for.body
  %23 = load i32, i32* %fifo_data, align 4, !dbg !7173
  %shr = lshr i32 %23, 16, !dbg !7175
  %and17 = and i32 %shr, 65535, !dbg !7176
  %conv18 = trunc i32 %and17 to i16, !dbg !7177
  store i16 %conv18, i16* %val, align 2, !dbg !7178
  %24 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7179
  %25 = bitcast i16* %val to i8*, !dbg !7180
  %call19 = call i32 @comedi_buf_write_samples(%struct.comedi_subdevice* %24, i8* %25, i32 1) #7, !dbg !7181
  %26 = load i32, i32* %i, align 4, !dbg !7182
  %inc20 = add i32 %26, 1, !dbg !7182
  store i32 %inc20, i32* %i, align 4, !dbg !7182
  br label %if.end, !dbg !7183

if.end:                                           ; preds = %if.then, %for.body
  %27 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7184
  %main_iobase21 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %27, i32 0, i32 3, !dbg !7185
  %28 = load i8*, i8** %main_iobase21, align 8, !dbg !7185
  %add.ptr22 = getelementptr i8, i8* %28, i64 8, !dbg !7186
  %call23 = call zeroext i16 @readw(i8* %add.ptr22) #7, !dbg !7187
  %conv24 = zext i16 %call23 to i32, !dbg !7187
  %and25 = and i32 %conv24, 32767, !dbg !7188
  store i32 %and25, i32* %read_code, align 4, !dbg !7189
  br label %for.cond, !dbg !7190, !llvm.loop !7191

for.end:                                          ; preds = %land.end
  ret void, !dbg !7193
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pio_drain_ai_fifo_16(%struct.comedi_device* %dev) #2 !dbg !7194 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %i = alloca i32, align 4
  %prepost_bits = alloca i16, align 2
  %read_segment = alloca i32, align 4
  %read_index = alloca i32, align 4
  %write_segment = alloca i32, align 4
  %write_index = alloca i32, align 4
  %num_samples = alloca i32, align 4
  %val = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7195, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !7197, metadata !DIExpression()), !dbg !7198
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7199
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7200
  %1 = load i8*, i8** %private, align 8, !dbg !7200
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !7199
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !7198
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !7201, metadata !DIExpression()), !dbg !7202
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7203
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 21, !dbg !7204
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !7204
  store %struct.comedi_subdevice* %4, %struct.comedi_subdevice** %s, align 8, !dbg !7202
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7205, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.declare(metadata i16* %prepost_bits, metadata !7207, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.declare(metadata i32* %read_segment, metadata !7209, metadata !DIExpression()), !dbg !7210
  call void @llvm.dbg.declare(metadata i32* %read_index, metadata !7211, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.declare(metadata i32* %write_segment, metadata !7213, metadata !DIExpression()), !dbg !7214
  call void @llvm.dbg.declare(metadata i32* %write_index, metadata !7215, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.declare(metadata i32* %num_samples, metadata !7217, metadata !DIExpression()), !dbg !7218
  br label %do.body, !dbg !7219

do.body:                                          ; preds = %do.cond, %entry
  %5 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7220
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %5, i32 0, i32 3, !dbg !7222
  %6 = load i8*, i8** %main_iobase, align 8, !dbg !7222
  %add.ptr = getelementptr i8, i8* %6, i64 8, !dbg !7223
  %call = call zeroext i16 @readw(i8* %add.ptr) #7, !dbg !7224
  %conv = zext i16 %call to i32, !dbg !7224
  %and = and i32 %conv, 32767, !dbg !7225
  store i32 %and, i32* %read_index, align 4, !dbg !7226
  %7 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7227
  %main_iobase1 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %7, i32 0, i32 3, !dbg !7228
  %8 = load i8*, i8** %main_iobase1, align 8, !dbg !7228
  %add.ptr2 = getelementptr i8, i8* %8, i64 12, !dbg !7229
  %call3 = call zeroext i16 @readw(i8* %add.ptr2) #7, !dbg !7230
  %conv4 = zext i16 %call3 to i32, !dbg !7230
  %and5 = and i32 %conv4, 32767, !dbg !7231
  store i32 %and5, i32* %write_index, align 4, !dbg !7232
  %9 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7233
  %main_iobase6 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %9, i32 0, i32 3, !dbg !7234
  %10 = load i8*, i8** %main_iobase6, align 8, !dbg !7234
  %add.ptr7 = getelementptr i8, i8* %10, i64 20, !dbg !7235
  %call8 = call zeroext i16 @readw(i8* %add.ptr7) #7, !dbg !7236
  store i16 %call8, i16* %prepost_bits, align 2, !dbg !7237
  %11 = load i16, i16* %prepost_bits, align 2, !dbg !7238
  %call9 = call i32 @adc_upper_read_ptr_code(i16 zeroext %11) #7, !dbg !7239
  store i32 %call9, i32* %read_segment, align 4, !dbg !7240
  %12 = load i16, i16* %prepost_bits, align 2, !dbg !7241
  %call10 = call i32 @adc_upper_write_ptr_code(i16 zeroext %12) #7, !dbg !7242
  store i32 %call10, i32* %write_segment, align 4, !dbg !7243
  %13 = load i32, i32* %read_segment, align 4, !dbg !7244
  %14 = load i32, i32* %write_segment, align 4, !dbg !7246
  %cmp = icmp ne i32 %13, %14, !dbg !7247
  br i1 %cmp, label %if.then, label %if.else, !dbg !7248

if.then:                                          ; preds = %do.body
  %15 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7249
  %ai_fifo_segment_length = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %15, i32 0, i32 28, !dbg !7250
  %16 = load i32, i32* %ai_fifo_segment_length, align 4, !dbg !7250
  %17 = load i32, i32* %read_index, align 4, !dbg !7251
  %sub = sub i32 %16, %17, !dbg !7252
  store i32 %sub, i32* %num_samples, align 4, !dbg !7253
  br label %if.end, !dbg !7254

if.else:                                          ; preds = %do.body
  %18 = load i32, i32* %write_index, align 4, !dbg !7255
  %19 = load i32, i32* %read_index, align 4, !dbg !7256
  %sub12 = sub i32 %18, %19, !dbg !7257
  store i32 %sub12, i32* %num_samples, align 4, !dbg !7258
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load i32, i32* %num_samples, align 4, !dbg !7259
  %cmp13 = icmp slt i32 %20, 0, !dbg !7261
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !7262

if.then15:                                        ; preds = %if.end
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7263
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %21, i32 0, i32 4, !dbg !7263
  %22 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !7263
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %22, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33, i64 0, i64 0)) #8, !dbg !7263
  br label %do.end, !dbg !7265

if.end16:                                         ; preds = %if.end
  %23 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7266
  %24 = load i32, i32* %num_samples, align 4, !dbg !7267
  %call17 = call i32 @comedi_nsamples_left(%struct.comedi_subdevice* %23, i32 %24) #7, !dbg !7268
  store i32 %call17, i32* %num_samples, align 4, !dbg !7269
  %25 = load i32, i32* %num_samples, align 4, !dbg !7270
  %cmp18 = icmp eq i32 %25, 0, !dbg !7272
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !7273

if.then20:                                        ; preds = %if.end16
  br label %do.end, !dbg !7274

if.end21:                                         ; preds = %if.end16
  store i32 0, i32* %i, align 4, !dbg !7275
  br label %for.cond, !dbg !7277

for.cond:                                         ; preds = %for.inc, %if.end21
  %26 = load i32, i32* %i, align 4, !dbg !7278
  %27 = load i32, i32* %num_samples, align 4, !dbg !7280
  %cmp22 = icmp ult i32 %26, %27, !dbg !7281
  br i1 %cmp22, label %for.body, label %for.end, !dbg !7282

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %val, metadata !7283, metadata !DIExpression()), !dbg !7285
  %28 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7286
  %main_iobase24 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %28, i32 0, i32 3, !dbg !7287
  %29 = load i8*, i8** %main_iobase24, align 8, !dbg !7287
  %add.ptr25 = getelementptr i8, i8* %29, i64 512, !dbg !7288
  %call26 = call zeroext i16 @readw(i8* %add.ptr25) #7, !dbg !7289
  store i16 %call26, i16* %val, align 2, !dbg !7290
  %30 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7291
  %31 = bitcast i16* %val to i8*, !dbg !7292
  %call27 = call i32 @comedi_buf_write_samples(%struct.comedi_subdevice* %30, i8* %31, i32 1) #7, !dbg !7293
  br label %for.inc, !dbg !7294

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !7295
  %inc = add i32 %32, 1, !dbg !7295
  store i32 %inc, i32* %i, align 4, !dbg !7295
  br label %for.cond, !dbg !7296, !llvm.loop !7297

for.end:                                          ; preds = %for.cond
  br label %do.cond, !dbg !7299

do.cond:                                          ; preds = %for.end
  %33 = load i32, i32* %read_segment, align 4, !dbg !7300
  %34 = load i32, i32* %write_segment, align 4, !dbg !7301
  %cmp28 = icmp ne i32 %33, %34, !dbg !7302
  br i1 %cmp28, label %do.body, label %do.end, !dbg !7299, !llvm.loop !7303

do.end:                                           ; preds = %do.cond, %if.then20, %if.then15
  ret void, !dbg !7305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @adc_upper_read_ptr_code(i16 zeroext %prepost_bits) #2 !dbg !7306 {
entry:
  %prepost_bits.addr = alloca i16, align 2
  store i16 %prepost_bits, i16* %prepost_bits.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %prepost_bits.addr, metadata !7309, metadata !DIExpression()), !dbg !7310
  %0 = load i16, i16* %prepost_bits.addr, align 2, !dbg !7311
  %conv = zext i16 %0 to i32, !dbg !7311
  %shr = ashr i32 %conv, 12, !dbg !7312
  %and = and i32 %shr, 3, !dbg !7313
  ret i32 %and, !dbg !7314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @adc_upper_write_ptr_code(i16 zeroext %prepost_bits) #2 !dbg !7315 {
entry:
  %prepost_bits.addr = alloca i16, align 2
  store i16 %prepost_bits, i16* %prepost_bits.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %prepost_bits.addr, metadata !7316, metadata !DIExpression()), !dbg !7317
  %0 = load i16, i16* %prepost_bits.addr, align 2, !dbg !7318
  %conv = zext i16 %0 to i32, !dbg !7318
  %shr = ashr i32 %conv, 14, !dbg !7319
  %and = and i32 %shr, 3, !dbg !7320
  ret i32 %and, !dbg !7321
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @load_ao_dma(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !7322 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %num_bytes = alloca i32, align 4
  %next_transfer_addr = alloca i32, align 4
  %pci_addr_reg = alloca i8*, align 8
  %buffer_index = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7327, metadata !DIExpression()), !dbg !7328
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !7329, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !7331, metadata !DIExpression()), !dbg !7332
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7333
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7334
  %1 = load i8*, i8** %private, align 8, !dbg !7334
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !7333
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !7332
  call void @llvm.dbg.declare(metadata i32* %num_bytes, metadata !7335, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.declare(metadata i32* %next_transfer_addr, metadata !7337, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.declare(metadata i8** %pci_addr_reg, metadata !7339, metadata !DIExpression()), !dbg !7340
  %3 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7341
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %3, i32 0, i32 2, !dbg !7342
  %4 = load i8*, i8** %plx9080_iobase, align 8, !dbg !7342
  %add.ptr = getelementptr i8, i8* %4, i64 132, !dbg !7343
  store i8* %add.ptr, i8** %pci_addr_reg, align 8, !dbg !7340
  call void @llvm.dbg.declare(metadata i32* %buffer_index, metadata !7344, metadata !DIExpression()), !dbg !7345
  br label %do.body, !dbg !7346

do.body:                                          ; preds = %do.cond, %entry
  %5 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7347
  %ao_dma_index = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %5, i32 0, i32 15, !dbg !7349
  %6 = load i32, i32* %ao_dma_index, align 8, !dbg !7349
  store i32 %6, i32* %buffer_index, align 4, !dbg !7350
  %7 = load i8*, i8** %pci_addr_reg, align 8, !dbg !7351
  %call = call i32 @readl(i8* %7) #7, !dbg !7352
  store i32 %call, i32* %next_transfer_addr, align 4, !dbg !7353
  %8 = load i32, i32* %next_transfer_addr, align 4, !dbg !7354
  %conv = zext i32 %8 to i64, !dbg !7354
  %9 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7356
  %ao_buffer_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %9, i32 0, i32 12, !dbg !7357
  %10 = load i32, i32* %buffer_index, align 4, !dbg !7358
  %idxprom = zext i32 %10 to i64, !dbg !7356
  %arrayidx = getelementptr [16 x i64], [16 x i64]* %ao_buffer_bus_addr, i64 0, i64 %idxprom, !dbg !7356
  %11 = load i64, i64* %arrayidx, align 8, !dbg !7356
  %cmp = icmp uge i64 %conv, %11, !dbg !7359
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7360

land.lhs.true:                                    ; preds = %do.body
  %12 = load i32, i32* %next_transfer_addr, align 4, !dbg !7361
  %conv2 = zext i32 %12 to i64, !dbg !7361
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7362
  %ao_buffer_bus_addr3 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 12, !dbg !7363
  %14 = load i32, i32* %buffer_index, align 4, !dbg !7364
  %idxprom4 = zext i32 %14 to i64, !dbg !7362
  %arrayidx5 = getelementptr [16 x i64], [16 x i64]* %ao_buffer_bus_addr3, i64 0, i64 %idxprom4, !dbg !7362
  %15 = load i64, i64* %arrayidx5, align 8, !dbg !7362
  %add = add i64 %15, 4096, !dbg !7365
  %cmp6 = icmp ult i64 %conv2, %add, !dbg !7366
  br i1 %cmp6, label %if.then, label %if.end, !dbg !7367

if.then:                                          ; preds = %land.lhs.true
  br label %do.end, !dbg !7368

if.end:                                           ; preds = %land.lhs.true, %do.body
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7369
  %17 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !7370
  %call8 = call i32 @load_ao_dma_buffer(%struct.comedi_device* %16, %struct.comedi_cmd* %17) #7, !dbg !7371
  store i32 %call8, i32* %num_bytes, align 4, !dbg !7372
  br label %do.cond, !dbg !7373

do.cond:                                          ; preds = %if.end
  %18 = load i32, i32* %num_bytes, align 4, !dbg !7374
  %cmp9 = icmp uge i32 %18, 4096, !dbg !7375
  br i1 %cmp9, label %do.body, label %do.end, !dbg !7373, !llvm.loop !7376

do.end:                                           ; preds = %if.then, %do.cond
  ret void, !dbg !7378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ao_dma_needs_restart(%struct.comedi_device* %dev, i16 zeroext %dma_status) #2 !dbg !7379 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %dma_status.addr = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7382, metadata !DIExpression()), !dbg !7383
  store i16 %dma_status, i16* %dma_status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dma_status.addr, metadata !7384, metadata !DIExpression()), !dbg !7385
  %0 = load i16, i16* %dma_status.addr, align 2, !dbg !7386
  %conv = zext i16 %0 to i64, !dbg !7386
  %and = and i64 %conv, 16, !dbg !7388
  %cmp = icmp eq i64 %and, 0, !dbg !7389
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7390

lor.lhs.false:                                    ; preds = %entry
  %1 = load i16, i16* %dma_status.addr, align 2, !dbg !7391
  %conv2 = zext i16 %1 to i64, !dbg !7391
  %and3 = and i64 %conv2, 1, !dbg !7392
  %cmp4 = icmp eq i64 %and3, 0, !dbg !7393
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7394

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !7395
  br label %return, !dbg !7395

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7396
  %call = call i32 @last_ao_dma_load_completed(%struct.comedi_device* %2) #7, !dbg !7398
  %tobool = icmp ne i32 %call, 0, !dbg !7398
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !7399

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7400
  br label %return, !dbg !7400

if.end7:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !7401
  br label %return, !dbg !7401

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !7402
  ret i32 %3, !dbg !7402
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @restart_ao_dma(%struct.comedi_device* %dev) #2 !dbg !7403 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %dma_desc_bits = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7404, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !7406, metadata !DIExpression()), !dbg !7407
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7408
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7409
  %1 = load i8*, i8** %private, align 8, !dbg !7409
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !7408
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !7407
  call void @llvm.dbg.declare(metadata i32* %dma_desc_bits, metadata !7410, metadata !DIExpression()), !dbg !7411
  %3 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7412
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %3, i32 0, i32 2, !dbg !7413
  %4 = load i8*, i8** %plx9080_iobase, align 8, !dbg !7413
  %add.ptr = getelementptr i8, i8* %4, i64 144, !dbg !7414
  %call = call i32 @readl(i8* %add.ptr) #7, !dbg !7415
  store i32 %call, i32* %dma_desc_bits, align 4, !dbg !7416
  %5 = load i32, i32* %dma_desc_bits, align 4, !dbg !7417
  %conv = zext i32 %5 to i64, !dbg !7417
  %and = and i64 %conv, -3, !dbg !7417
  %conv1 = trunc i64 %and to i32, !dbg !7417
  store i32 %conv1, i32* %dma_desc_bits, align 4, !dbg !7417
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7418
  %7 = load i32, i32* %dma_desc_bits, align 4, !dbg !7419
  call void @load_first_dma_descriptor(%struct.comedi_device* %6, i32 0, i32 %7) #7, !dbg !7420
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7421
  call void @dma_start_sync(%struct.comedi_device* %8, i32 0) #7, !dbg !7422
  ret void, !dbg !7423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @last_ao_dma_load_completed(%struct.comedi_device* %dev) #2 !dbg !7424 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %buffer_index = alloca i32, align 4
  %transfer_address = alloca i32, align 4
  %dma_status = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !7427, metadata !DIExpression()), !dbg !7428
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7429
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7430
  %1 = load i8*, i8** %private, align 8, !dbg !7430
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !7429
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !7428
  call void @llvm.dbg.declare(metadata i32* %buffer_index, metadata !7431, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.declare(metadata i32* %transfer_address, metadata !7433, metadata !DIExpression()), !dbg !7434
  call void @llvm.dbg.declare(metadata i16* %dma_status, metadata !7435, metadata !DIExpression()), !dbg !7436
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7437
  %call = call i32 @prev_ao_dma_index(%struct.comedi_device* %3) #7, !dbg !7438
  store i32 %call, i32* %buffer_index, align 4, !dbg !7439
  %4 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7440
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %4, i32 0, i32 2, !dbg !7441
  %5 = load i8*, i8** %plx9080_iobase, align 8, !dbg !7441
  %add.ptr = getelementptr i8, i8* %5, i64 168, !dbg !7442
  %call1 = call zeroext i8 @readb(i8* %add.ptr) #7, !dbg !7443
  %conv = zext i8 %call1 to i16, !dbg !7443
  store i16 %conv, i16* %dma_status, align 2, !dbg !7444
  %6 = load i16, i16* %dma_status, align 2, !dbg !7445
  %conv2 = zext i16 %6 to i64, !dbg !7445
  %and = and i64 %conv2, 16, !dbg !7447
  %cmp = icmp eq i64 %and, 0, !dbg !7448
  br i1 %cmp, label %if.then, label %if.end, !dbg !7449

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7450
  br label %return, !dbg !7450

if.end:                                           ; preds = %entry
  %7 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7451
  %plx9080_iobase4 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %7, i32 0, i32 2, !dbg !7452
  %8 = load i8*, i8** %plx9080_iobase4, align 8, !dbg !7452
  %add.ptr5 = getelementptr i8, i8* %8, i64 132, !dbg !7453
  %call6 = call i32 @readl(i8* %add.ptr5) #7, !dbg !7454
  store i32 %call6, i32* %transfer_address, align 4, !dbg !7455
  %9 = load i32, i32* %transfer_address, align 4, !dbg !7456
  %conv7 = zext i32 %9 to i64, !dbg !7456
  %10 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7458
  %ao_buffer_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %10, i32 0, i32 12, !dbg !7459
  %11 = load i32, i32* %buffer_index, align 4, !dbg !7460
  %idxprom = zext i32 %11 to i64, !dbg !7458
  %arrayidx = getelementptr [16 x i64], [16 x i64]* %ao_buffer_bus_addr, i64 0, i64 %idxprom, !dbg !7458
  %12 = load i64, i64* %arrayidx, align 8, !dbg !7458
  %cmp8 = icmp ne i64 %conv7, %12, !dbg !7461
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !7462

if.then10:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7463
  br label %return, !dbg !7463

if.end11:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !7464
  br label %return, !dbg !7464

return:                                           ; preds = %if.end11, %if.then10, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !7465
  ret i32 %13, !dbg !7465
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @load_ao_dma_buffer(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !7466 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %buffer_index = alloca i32, align 4
  %prev_buffer_index = alloca i32, align 4
  %nsamples = alloca i32, align 4
  %nbytes = alloca i32, align 4
  %next_bits = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7469, metadata !DIExpression()), !dbg !7470
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !7473, metadata !DIExpression()), !dbg !7474
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7475
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7476
  %1 = load i8*, i8** %private, align 8, !dbg !7476
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !7475
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !7474
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !7477, metadata !DIExpression()), !dbg !7478
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7479
  %write_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 22, !dbg !7480
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %write_subdev, align 8, !dbg !7480
  store %struct.comedi_subdevice* %4, %struct.comedi_subdevice** %s, align 8, !dbg !7478
  call void @llvm.dbg.declare(metadata i32* %buffer_index, metadata !7481, metadata !DIExpression()), !dbg !7482
  %5 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7483
  %ao_dma_index = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %5, i32 0, i32 15, !dbg !7484
  %6 = load i32, i32* %ao_dma_index, align 8, !dbg !7484
  store i32 %6, i32* %buffer_index, align 4, !dbg !7482
  call void @llvm.dbg.declare(metadata i32* %prev_buffer_index, metadata !7485, metadata !DIExpression()), !dbg !7486
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7487
  %call = call i32 @prev_ao_dma_index(%struct.comedi_device* %7) #7, !dbg !7488
  store i32 %call, i32* %prev_buffer_index, align 4, !dbg !7486
  call void @llvm.dbg.declare(metadata i32* %nsamples, metadata !7489, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.declare(metadata i32* %nbytes, metadata !7491, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.declare(metadata i32* %next_bits, metadata !7493, metadata !DIExpression()), !dbg !7494
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7495
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7496
  %10 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7497
  %ao_buffer = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %10, i32 0, i32 11, !dbg !7498
  %11 = load i32, i32* %buffer_index, align 4, !dbg !7499
  %idxprom = zext i32 %11 to i64, !dbg !7497
  %arrayidx = getelementptr [16 x i16*], [16 x i16*]* %ao_buffer, i64 0, i64 %idxprom, !dbg !7497
  %12 = load i16*, i16** %arrayidx, align 8, !dbg !7497
  %call1 = call i32 @cb_pcidas64_ao_fill_buffer(%struct.comedi_device* %8, %struct.comedi_subdevice* %9, i16* %12, i32 4096) #7, !dbg !7500
  store i32 %call1, i32* %nsamples, align 4, !dbg !7501
  %13 = load i32, i32* %nsamples, align 4, !dbg !7502
  %cmp = icmp eq i32 %13, 0, !dbg !7504
  br i1 %cmp, label %if.then, label %if.end, !dbg !7505

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7506
  br label %return, !dbg !7506

if.end:                                           ; preds = %entry
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7507
  %15 = load i32, i32* %nsamples, align 4, !dbg !7508
  %call2 = call i32 @comedi_samples_to_bytes(%struct.comedi_subdevice* %14, i32 %15) #7, !dbg !7509
  store i32 %call2, i32* %nbytes, align 4, !dbg !7510
  %16 = load i32, i32* %nbytes, align 4, !dbg !7511
  %17 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7512
  %ao_dma_desc = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %17, i32 0, i32 13, !dbg !7513
  %18 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ao_dma_desc, align 8, !dbg !7513
  %19 = load i32, i32* %buffer_index, align 4, !dbg !7514
  %idxprom3 = zext i32 %19 to i64, !dbg !7512
  %arrayidx4 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %18, i64 %idxprom3, !dbg !7512
  %transfer_size = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx4, i32 0, i32 2, !dbg !7515
  store i32 %16, i32* %transfer_size, align 4, !dbg !7516
  %20 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7517
  %ao_dma_desc5 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %20, i32 0, i32 13, !dbg !7517
  %21 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ao_dma_desc5, align 8, !dbg !7517
  %22 = load i32, i32* %buffer_index, align 4, !dbg !7517
  %idxprom6 = zext i32 %22 to i64, !dbg !7517
  %arrayidx7 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %21, i64 %idxprom6, !dbg !7517
  %next = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx7, i32 0, i32 3, !dbg !7517
  %23 = load i32, i32* %next, align 4, !dbg !7517
  store i32 %23, i32* %next_bits, align 4, !dbg !7518
  %24 = load i32, i32* %next_bits, align 4, !dbg !7519
  %conv = zext i32 %24 to i64, !dbg !7519
  %or = or i64 %conv, 2, !dbg !7519
  %conv8 = trunc i64 %or to i32, !dbg !7519
  store i32 %conv8, i32* %next_bits, align 4, !dbg !7519
  %25 = load i32, i32* %next_bits, align 4, !dbg !7520
  %26 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7521
  %ao_dma_desc9 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %26, i32 0, i32 13, !dbg !7522
  %27 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ao_dma_desc9, align 8, !dbg !7522
  %28 = load i32, i32* %buffer_index, align 4, !dbg !7523
  %idxprom10 = zext i32 %28 to i64, !dbg !7521
  %arrayidx11 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %27, i64 %idxprom10, !dbg !7521
  %next12 = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx11, i32 0, i32 3, !dbg !7524
  store i32 %25, i32* %next12, align 4, !dbg !7525
  %29 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7526
  %ao_dma_desc13 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %29, i32 0, i32 13, !dbg !7526
  %30 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ao_dma_desc13, align 8, !dbg !7526
  %31 = load i32, i32* %prev_buffer_index, align 4, !dbg !7526
  %idxprom14 = zext i32 %31 to i64, !dbg !7526
  %arrayidx15 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %30, i64 %idxprom14, !dbg !7526
  %next16 = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx15, i32 0, i32 3, !dbg !7526
  %32 = load i32, i32* %next16, align 4, !dbg !7526
  store i32 %32, i32* %next_bits, align 4, !dbg !7527
  %33 = load i32, i32* %next_bits, align 4, !dbg !7528
  %conv17 = zext i32 %33 to i64, !dbg !7528
  %and = and i64 %conv17, -3, !dbg !7528
  %conv18 = trunc i64 %and to i32, !dbg !7528
  store i32 %conv18, i32* %next_bits, align 4, !dbg !7528
  %34 = load i32, i32* %next_bits, align 4, !dbg !7529
  %35 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7530
  %ao_dma_desc19 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %35, i32 0, i32 13, !dbg !7531
  %36 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ao_dma_desc19, align 8, !dbg !7531
  %37 = load i32, i32* %prev_buffer_index, align 4, !dbg !7532
  %idxprom20 = zext i32 %37 to i64, !dbg !7530
  %arrayidx21 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %36, i64 %idxprom20, !dbg !7530
  %next22 = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx21, i32 0, i32 3, !dbg !7533
  store i32 %34, i32* %next22, align 4, !dbg !7534
  %38 = load i32, i32* %buffer_index, align 4, !dbg !7535
  %add = add i32 %38, 1, !dbg !7536
  %rem = urem i32 %add, 16, !dbg !7537
  %39 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7538
  %ao_dma_index23 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %39, i32 0, i32 15, !dbg !7539
  store i32 %rem, i32* %ao_dma_index23, align 8, !dbg !7540
  %40 = load i32, i32* %nbytes, align 4, !dbg !7541
  store i32 %40, i32* %retval, align 4, !dbg !7542
  br label %return, !dbg !7542

return:                                           ; preds = %if.end, %if.then
  %41 = load i32, i32* %retval, align 4, !dbg !7543
  ret i32 %41, !dbg !7543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @prev_ao_dma_index(%struct.comedi_device* %dev) #2 !dbg !7544 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %buffer_index = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7545, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !7547, metadata !DIExpression()), !dbg !7548
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7549
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7550
  %1 = load i8*, i8** %private, align 8, !dbg !7550
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !7549
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !7548
  call void @llvm.dbg.declare(metadata i32* %buffer_index, metadata !7551, metadata !DIExpression()), !dbg !7552
  %3 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7553
  %ao_dma_index = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %3, i32 0, i32 15, !dbg !7555
  %4 = load i32, i32* %ao_dma_index, align 8, !dbg !7555
  %cmp = icmp eq i32 %4, 0, !dbg !7556
  br i1 %cmp, label %if.then, label %if.else, !dbg !7557

if.then:                                          ; preds = %entry
  store i32 15, i32* %buffer_index, align 4, !dbg !7558
  br label %if.end, !dbg !7559

if.else:                                          ; preds = %entry
  %5 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7560
  %ao_dma_index1 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %5, i32 0, i32 15, !dbg !7561
  %6 = load i32, i32* %ao_dma_index1, align 8, !dbg !7561
  %sub = sub i32 %6, 1, !dbg !7562
  store i32 %sub, i32* %buffer_index, align 4, !dbg !7563
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %buffer_index, align 4, !dbg !7564
  ret i32 %7, !dbg !7565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cb_pcidas64_ao_fill_buffer(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i16* %dest, i32 %max_bytes) #2 !dbg !7566 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %dest.addr = alloca i16*, align 8
  %max_bytes.addr = alloca i32, align 4
  %nsamples = alloca i32, align 4
  %actual_bytes = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7570, metadata !DIExpression()), !dbg !7571
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !7572, metadata !DIExpression()), !dbg !7573
  store i16* %dest, i16** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dest.addr, metadata !7574, metadata !DIExpression()), !dbg !7575
  store i32 %max_bytes, i32* %max_bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_bytes.addr, metadata !7576, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.declare(metadata i32* %nsamples, metadata !7578, metadata !DIExpression()), !dbg !7579
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7580
  %1 = load i32, i32* %max_bytes.addr, align 4, !dbg !7581
  %call = call i32 @comedi_bytes_to_samples(%struct.comedi_subdevice* %0, i32 %1) #7, !dbg !7582
  store i32 %call, i32* %nsamples, align 4, !dbg !7579
  call void @llvm.dbg.declare(metadata i32* %actual_bytes, metadata !7583, metadata !DIExpression()), !dbg !7584
  %2 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7585
  %3 = load i32, i32* %nsamples, align 4, !dbg !7586
  %call1 = call i32 @comedi_nsamples_left(%struct.comedi_subdevice* %2, i32 %3) #7, !dbg !7587
  store i32 %call1, i32* %nsamples, align 4, !dbg !7588
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7589
  %5 = load i16*, i16** %dest.addr, align 8, !dbg !7590
  %6 = bitcast i16* %5 to i8*, !dbg !7590
  %7 = load i32, i32* %nsamples, align 4, !dbg !7591
  %call2 = call i32 @comedi_buf_read_samples(%struct.comedi_subdevice* %4, i8* %6, i32 %7) #7, !dbg !7592
  store i32 %call2, i32* %actual_bytes, align 4, !dbg !7593
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7594
  %9 = load i32, i32* %actual_bytes, align 4, !dbg !7595
  %call3 = call i32 @comedi_bytes_to_samples(%struct.comedi_subdevice* %8, i32 %9) #7, !dbg !7596
  ret i32 %call3, !dbg !7597
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_samples_to_bytes(%struct.comedi_subdevice* %s, i32 %nsamples) #2 !dbg !7598 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %nsamples.addr = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !7601, metadata !DIExpression()), !dbg !7602
  store i32 %nsamples, i32* %nsamples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nsamples.addr, metadata !7603, metadata !DIExpression()), !dbg !7604
  %0 = load i32, i32* %nsamples.addr, align 4, !dbg !7605
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7606
  %call = call i32 @comedi_sample_shift(%struct.comedi_subdevice* %1) #7, !dbg !7607
  %shl = shl i32 %0, %call, !dbg !7608
  ret i32 %shl, !dbg !7609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_bytes_to_samples(%struct.comedi_subdevice* %s, i32 %nbytes) #2 !dbg !7610 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %nbytes.addr = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !7611, metadata !DIExpression()), !dbg !7612
  store i32 %nbytes, i32* %nbytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !7613, metadata !DIExpression()), !dbg !7614
  %0 = load i32, i32* %nbytes.addr, align 4, !dbg !7615
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7616
  %call = call i32 @comedi_sample_shift(%struct.comedi_subdevice* %1) #7, !dbg !7617
  %shr = lshr i32 %0, %call, !dbg !7618
  ret i32 %shr, !dbg !7619
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_read_samples(%struct.comedi_subdevice*, i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_sample_shift(%struct.comedi_subdevice* %s) #2 !dbg !7620 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !7623, metadata !DIExpression()), !dbg !7624
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7625
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 4, !dbg !7626
  %1 = load i32, i32* %subdev_flags, align 4, !dbg !7626
  %and = and i32 %1, 268435456, !dbg !7627
  %tobool = icmp ne i32 %and, 0, !dbg !7625
  %2 = zext i1 %tobool to i64, !dbg !7625
  %cond = select i1 %tobool, i32 2, i32 1, !dbg !7625
  ret i32 %cond, !dbg !7628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @load_first_dma_descriptor(%struct.comedi_device* %dev, i32 %dma_channel, i32 %descriptor_bits) #2 !dbg !7629 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %dma_channel.addr = alloca i32, align 4
  %descriptor_bits.addr = alloca i32, align 4
  %devpriv = alloca %struct.pcidas64_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  store i32 %dma_channel, i32* %dma_channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dma_channel.addr, metadata !7632, metadata !DIExpression()), !dbg !7633
  store i32 %descriptor_bits, i32* %descriptor_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %descriptor_bits.addr, metadata !7634, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !7636, metadata !DIExpression()), !dbg !7637
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7638
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7639
  %1 = load i8*, i8** %private, align 8, !dbg !7639
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !7638
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !7637
  %3 = load i32, i32* %dma_channel.addr, align 4, !dbg !7640
  %tobool = icmp ne i32 %3, 0, !dbg !7640
  br i1 %tobool, label %if.then, label %if.else, !dbg !7642

if.then:                                          ; preds = %entry
  %4 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7643
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %4, i32 0, i32 2, !dbg !7645
  %5 = load i8*, i8** %plx9080_iobase, align 8, !dbg !7645
  %add.ptr = getelementptr i8, i8* %5, i64 160, !dbg !7646
  call void @writel(i32 0, i8* %add.ptr) #7, !dbg !7647
  %6 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7648
  %plx9080_iobase1 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %6, i32 0, i32 2, !dbg !7649
  %7 = load i8*, i8** %plx9080_iobase1, align 8, !dbg !7649
  %add.ptr2 = getelementptr i8, i8* %7, i64 152, !dbg !7650
  call void @writel(i32 0, i8* %add.ptr2) #7, !dbg !7651
  %8 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7652
  %plx9080_iobase3 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %8, i32 0, i32 2, !dbg !7653
  %9 = load i8*, i8** %plx9080_iobase3, align 8, !dbg !7653
  %add.ptr4 = getelementptr i8, i8* %9, i64 156, !dbg !7654
  call void @writel(i32 0, i8* %add.ptr4) #7, !dbg !7655
  %10 = load i32, i32* %descriptor_bits.addr, align 4, !dbg !7656
  %11 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7657
  %plx9080_iobase5 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %11, i32 0, i32 2, !dbg !7658
  %12 = load i8*, i8** %plx9080_iobase5, align 8, !dbg !7658
  %add.ptr6 = getelementptr i8, i8* %12, i64 164, !dbg !7659
  call void @writel(i32 %10, i8* %add.ptr6) #7, !dbg !7660
  br label %if.end, !dbg !7661

if.else:                                          ; preds = %entry
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7662
  %plx9080_iobase7 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 2, !dbg !7664
  %14 = load i8*, i8** %plx9080_iobase7, align 8, !dbg !7664
  %add.ptr8 = getelementptr i8, i8* %14, i64 140, !dbg !7665
  call void @writel(i32 0, i8* %add.ptr8) #7, !dbg !7666
  %15 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7667
  %plx9080_iobase9 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %15, i32 0, i32 2, !dbg !7668
  %16 = load i8*, i8** %plx9080_iobase9, align 8, !dbg !7668
  %add.ptr10 = getelementptr i8, i8* %16, i64 132, !dbg !7669
  call void @writel(i32 0, i8* %add.ptr10) #7, !dbg !7670
  %17 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7671
  %plx9080_iobase11 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %17, i32 0, i32 2, !dbg !7672
  %18 = load i8*, i8** %plx9080_iobase11, align 8, !dbg !7672
  %add.ptr12 = getelementptr i8, i8* %18, i64 136, !dbg !7673
  call void @writel(i32 0, i8* %add.ptr12) #7, !dbg !7674
  %19 = load i32, i32* %descriptor_bits.addr, align 4, !dbg !7675
  %20 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7676
  %plx9080_iobase13 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %20, i32 0, i32 2, !dbg !7677
  %21 = load i8*, i8** %plx9080_iobase13, align 8, !dbg !7677
  %add.ptr14 = getelementptr i8, i8* %21, i64 144, !dbg !7678
  call void @writel(i32 %19, i8* %add.ptr14) #7, !dbg !7679
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7680
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_start_sync(%struct.comedi_device* %dev, i32 %channel) #2 !dbg !7681 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !5431, metadata !DIExpression()), !dbg !7682
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5438, metadata !DIExpression()), !dbg !7684
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5440, metadata !DIExpression()), !dbg !7685
  %dev.addr = alloca %struct.comedi_device*, align 8
  %channel.addr = alloca i32, align 4
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7692, metadata !DIExpression()), !dbg !7693
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7694, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !7696, metadata !DIExpression()), !dbg !7697
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7698
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7699
  %1 = load i8*, i8** %private, align 8, !dbg !7699
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !7698
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !7697
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7700, metadata !DIExpression()), !dbg !7701
  br label %do.body, !dbg !7702

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7703

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7704, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7707, metadata !DIExpression()), !dbg !7706
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7706
  %conv = zext i1 %cmp to i32, !dbg !7706
  store i32 1, i32* %tmp, align 4, !dbg !7706
  %3 = load i32, i32* %tmp, align 4, !dbg !7706
  br label %do.body2, !dbg !7708

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7709

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7710

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7712, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7716, metadata !DIExpression()), !dbg !7715
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7715
  %conv8 = zext i1 %cmp7 to i32, !dbg !7715
  store i32 1, i32* %tmp9, align 4, !dbg !7715
  %4 = load i32, i32* %tmp9, align 4, !dbg !7715
  %call = call i64 @arch_local_irq_save() #7, !dbg !7717
  store i64 %call, i64* %flags, align 8, !dbg !7717
  br label %do.end, !dbg !7717

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7710

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7709

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7718, !srcloc !7719
  br label %do.body12, !dbg !7718

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7720
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 11, !dbg !7720
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7721
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !7722
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !7722
  br label %do.end14, !dbg !7720

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7718

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7709

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7708

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7703

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7723
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %8, i32 0, i32 2, !dbg !7724
  %9 = load i8*, i8** %plx9080_iobase, align 8, !dbg !7724
  %10 = load i32, i32* %channel.addr, align 4, !dbg !7725
  %tobool = icmp ne i32 %10, 0, !dbg !7725
  %11 = zext i1 %tobool to i64, !dbg !7725
  %cond = select i1 %tobool, i32 169, i32 168, !dbg !7725
  %idx.ext = sext i32 %cond to i64, !dbg !7726
  %add.ptr = getelementptr i8, i8* %9, i64 %idx.ext, !dbg !7726
  call void @writeb(i8 zeroext 11, i8* %add.ptr) #7, !dbg !7727
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7728
  %spinlock19 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %12, i32 0, i32 11, !dbg !7729
  %13 = load i64, i64* %flags, align 8, !dbg !7730
  store %struct.spinlock* %spinlock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !7731
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !7731
  store i32 1, i32* %tmp.i, align 4, !dbg !7731
  %14 = load i32, i32* %tmp.i, align 4, !dbg !7731
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !7732
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !7732
  store i32 1, i32* %tmp8.i, align 4, !dbg !7732
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !7732
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !7733
  call void @arch_local_irq_restore(i64 %16) #9, !dbg !7733
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7734, !srcloc !5545
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !7735
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !7735
  %rlock.i21 = bitcast %union.anon.3* %18 to %struct.raw_spinlock*, !dbg !7735
  ret void, !dbg !7736
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_alloc_subdevices(%struct.comedi_device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_rinsn(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !7737 {
entry:
  %lock.addr.i170 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i170, metadata !5431, metadata !DIExpression()), !dbg !7738
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5438, metadata !DIExpression()), !dbg !7740
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5440, metadata !DIExpression()), !dbg !7741
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %bits = alloca i32, align 4
  %n = alloca i32, align 4
  %channel = alloca i32, align 4
  %range = alloca i32, align 4
  %aref = alloca i32, align 4
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  %cal_en_bit = alloca i32, align 4
  %old_cal_range_bits = alloca i8, align 1
  %i2c_data = alloca i8, align 1
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7748, metadata !DIExpression()), !dbg !7749
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !7750, metadata !DIExpression()), !dbg !7751
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !7752, metadata !DIExpression()), !dbg !7753
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !7754, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !7756, metadata !DIExpression()), !dbg !7757
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7758
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !7759
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !7759
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !7758
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !7757
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !7760, metadata !DIExpression()), !dbg !7761
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7762
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !7763
  %4 = load i8*, i8** %private, align 8, !dbg !7763
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !7762
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !7761
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !7764, metadata !DIExpression()), !dbg !7765
  store i32 0, i32* %bits, align 4, !dbg !7765
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7766, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !7768, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.declare(metadata i32* %range, metadata !7770, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.declare(metadata i32* %aref, metadata !7772, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7774, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7776, metadata !DIExpression()), !dbg !7777
  %6 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !7778
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %6, i32 0, i32 4, !dbg !7778
  %7 = load i32, i32* %chanspec, align 4, !dbg !7778
  %and = and i32 %7, 65535, !dbg !7778
  store i32 %and, i32* %channel, align 4, !dbg !7779
  %8 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !7780
  %chanspec1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %8, i32 0, i32 4, !dbg !7780
  %9 = load i32, i32* %chanspec1, align 4, !dbg !7780
  %shr = lshr i32 %9, 16, !dbg !7780
  %and2 = and i32 %shr, 255, !dbg !7780
  store i32 %and2, i32* %range, align 4, !dbg !7781
  %10 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !7782
  %chanspec3 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %10, i32 0, i32 4, !dbg !7782
  %11 = load i32, i32* %chanspec3, align 4, !dbg !7782
  %shr4 = lshr i32 %11, 24, !dbg !7782
  %and5 = and i32 %shr4, 3, !dbg !7782
  store i32 %and5, i32* %aref, align 4, !dbg !7783
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7784
  call void @disable_ai_pacing(%struct.comedi_device* %12) #7, !dbg !7785
  br label %do.body, !dbg !7786

do.body:                                          ; preds = %entry
  br label %do.body6, !dbg !7787

do.body6:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7788, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7791, metadata !DIExpression()), !dbg !7790
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7790
  %conv = zext i1 %cmp to i32, !dbg !7790
  store i32 1, i32* %tmp, align 4, !dbg !7790
  %13 = load i32, i32* %tmp, align 4, !dbg !7790
  br label %do.body7, !dbg !7792

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !7793

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !7794

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !7796, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !7800, metadata !DIExpression()), !dbg !7799
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !7799
  %conv13 = zext i1 %cmp12 to i32, !dbg !7799
  store i32 1, i32* %tmp14, align 4, !dbg !7799
  %14 = load i32, i32* %tmp14, align 4, !dbg !7799
  %call = call i64 @arch_local_irq_save() #7, !dbg !7801
  store i64 %call, i64* %flags, align 8, !dbg !7801
  br label %do.end, !dbg !7801

do.end:                                           ; preds = %do.body9
  br label %do.end15, !dbg !7794

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !7793

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7802, !srcloc !7803
  br label %do.body17, !dbg !7802

do.body17:                                        ; preds = %do.body16
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7804
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %15, i32 0, i32 11, !dbg !7804
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7805
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !7806
  %rlock.i = bitcast %union.anon.3* %17 to %struct.raw_spinlock*, !dbg !7806
  br label %do.end19, !dbg !7804

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !7802

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !7793

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !7792

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !7787

do.end23:                                         ; preds = %do.end22
  %18 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !7807
  %chanspec24 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %18, i32 0, i32 4, !dbg !7809
  %19 = load i32, i32* %chanspec24, align 4, !dbg !7809
  %and25 = and i32 %19, 67108864, !dbg !7810
  %tobool = icmp ne i32 %and25, 0, !dbg !7810
  br i1 %tobool, label %if.then, label %if.else, !dbg !7811

if.then:                                          ; preds = %do.end23
  %20 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7812
  %adc_control1_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %20, i32 0, i32 18, !dbg !7813
  %21 = load i16, i16* %adc_control1_bits, align 4, !dbg !7814
  %conv26 = zext i16 %21 to i32, !dbg !7814
  %or = or i32 %conv26, 512, !dbg !7814
  %conv27 = trunc i32 %or to i16, !dbg !7814
  store i16 %conv27, i16* %adc_control1_bits, align 4, !dbg !7814
  br label %if.end, !dbg !7812

if.else:                                          ; preds = %do.end23
  %22 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7815
  %adc_control1_bits28 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %22, i32 0, i32 18, !dbg !7816
  %23 = load i16, i16* %adc_control1_bits28, align 4, !dbg !7817
  %conv29 = zext i16 %23 to i32, !dbg !7817
  %and30 = and i32 %conv29, -513, !dbg !7817
  %conv31 = trunc i32 %and30 to i16, !dbg !7817
  store i16 %conv31, i16* %adc_control1_bits28, align 4, !dbg !7817
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7818
  %adc_control1_bits32 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %24, i32 0, i32 18, !dbg !7819
  %25 = load i16, i16* %adc_control1_bits32, align 4, !dbg !7819
  %26 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7820
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %26, i32 0, i32 3, !dbg !7821
  %27 = load i8*, i8** %main_iobase, align 8, !dbg !7821
  %add.ptr = getelementptr i8, i8* %27, i64 18, !dbg !7822
  call void @writew(i16 zeroext %25, i8* %add.ptr) #7, !dbg !7823
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7824
  %spinlock33 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %28, i32 0, i32 11, !dbg !7825
  %29 = load i64, i64* %flags, align 8, !dbg !7826
  store %struct.spinlock* %spinlock33, %struct.spinlock** %lock.addr.i170, align 8
  store i64 %29, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !7827
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !7827
  store i32 1, i32* %tmp.i, align 4, !dbg !7827
  %30 = load i32, i32* %tmp.i, align 4, !dbg !7827
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !7828
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !7828
  store i32 1, i32* %tmp8.i, align 4, !dbg !7828
  %31 = load i32, i32* %tmp8.i, align 4, !dbg !7828
  %32 = load i64, i64* %flags.addr.i, align 8, !dbg !7829
  call void @arch_local_irq_restore(i64 %32) #9, !dbg !7829
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7830, !srcloc !5545
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i170, align 8, !dbg !7831
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !7831
  %rlock.i171 = bitcast %union.anon.3* %34 to %struct.raw_spinlock*, !dbg !7831
  %35 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !7832
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %35, i32 0, i32 12, !dbg !7834
  %36 = load i32, i32* %layout, align 8, !dbg !7834
  %cmp34 = icmp ne i32 %36, 2, !dbg !7835
  br i1 %cmp34, label %if.then36, label %if.else87, !dbg !7836

if.then36:                                        ; preds = %if.end
  %37 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7837
  %hw_config_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %37, i32 0, i32 20, !dbg !7839
  %38 = load i16, i16* %hw_config_bits, align 8, !dbg !7840
  %conv37 = zext i16 %38 to i32, !dbg !7840
  %and38 = and i32 %conv37, -513, !dbg !7840
  %conv39 = trunc i32 %and38 to i16, !dbg !7840
  store i16 %conv39, i16* %hw_config_bits, align 8, !dbg !7840
  %39 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7841
  %hw_config_bits40 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %39, i32 0, i32 20, !dbg !7842
  %40 = load i16, i16* %hw_config_bits40, align 8, !dbg !7842
  %41 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7843
  %main_iobase41 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %41, i32 0, i32 3, !dbg !7844
  %42 = load i8*, i8** %main_iobase41, align 8, !dbg !7844
  %add.ptr42 = getelementptr i8, i8* %42, i64 2, !dbg !7845
  call void @writew(i16 zeroext %40, i8* %add.ptr42) #7, !dbg !7846
  %43 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !7847
  %chanspec43 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %43, i32 0, i32 4, !dbg !7849
  %44 = load i32, i32* %chanspec43, align 4, !dbg !7849
  %and44 = and i32 %44, 134217728, !dbg !7850
  %tobool45 = icmp ne i32 %and44, 0, !dbg !7850
  br i1 %tobool45, label %if.then46, label %if.else59, !dbg !7851

if.then46:                                        ; preds = %if.then36
  call void @llvm.dbg.declare(metadata i32* %cal_en_bit, metadata !7852, metadata !DIExpression()), !dbg !7854
  %45 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !7855
  %layout47 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %45, i32 0, i32 12, !dbg !7857
  %46 = load i32, i32* %layout47, align 8, !dbg !7857
  %cmp48 = icmp eq i32 %46, 0, !dbg !7858
  br i1 %cmp48, label %if.then50, label %if.else51, !dbg !7859

if.then50:                                        ; preds = %if.then46
  store i32 512, i32* %cal_en_bit, align 4, !dbg !7860
  br label %if.end52, !dbg !7861

if.else51:                                        ; preds = %if.then46
  store i32 64, i32* %cal_en_bit, align 4, !dbg !7862
  br label %if.end52

if.end52:                                         ; preds = %if.else51, %if.then50
  %47 = load i32, i32* %cal_en_bit, align 4, !dbg !7863
  %48 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7864
  %calibration_source = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %48, i32 0, i32 24, !dbg !7865
  %49 = load i32, i32* %calibration_source, align 4, !dbg !7865
  %call53 = call zeroext i16 @adc_src_bits(i32 %49) #7, !dbg !7866
  %conv54 = zext i16 %call53 to i32, !dbg !7866
  %or55 = or i32 %47, %conv54, !dbg !7867
  %conv56 = trunc i32 %or55 to i16, !dbg !7863
  %50 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7868
  %main_iobase57 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %50, i32 0, i32 3, !dbg !7869
  %51 = load i8*, i8** %main_iobase57, align 8, !dbg !7869
  %add.ptr58 = getelementptr i8, i8* %51, i64 20, !dbg !7870
  call void @writew(i16 zeroext %conv56, i8* %add.ptr58) #7, !dbg !7871
  br label %if.end62, !dbg !7872

if.else59:                                        ; preds = %if.then36
  %52 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7873
  %main_iobase60 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %52, i32 0, i32 3, !dbg !7875
  %53 = load i8*, i8** %main_iobase60, align 8, !dbg !7875
  %add.ptr61 = getelementptr i8, i8* %53, i64 20, !dbg !7876
  call void @writew(i16 zeroext 0, i8* %add.ptr61) #7, !dbg !7877
  br label %if.end62

if.end62:                                         ; preds = %if.else59, %if.end52
  store i32 0, i32* %bits, align 4, !dbg !7878
  %54 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7879
  %55 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !7880
  %chanspec63 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %55, i32 0, i32 4, !dbg !7880
  %56 = load i32, i32* %chanspec63, align 4, !dbg !7880
  %shr64 = lshr i32 %56, 16, !dbg !7880
  %and65 = and i32 %shr64, 255, !dbg !7880
  %call66 = call i32 @ai_range_bits_6xxx(%struct.comedi_device* %54, i32 %and65) #7, !dbg !7881
  %57 = load i32, i32* %bits, align 4, !dbg !7882
  %or67 = or i32 %57, %call66, !dbg !7882
  store i32 %or67, i32* %bits, align 4, !dbg !7882
  %58 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7883
  %59 = load i32, i32* %aref, align 4, !dbg !7884
  %cmp68 = icmp eq i32 %59, 2, !dbg !7885
  %conv69 = zext i1 %cmp68 to i32, !dbg !7885
  %call70 = call zeroext i16 @se_diff_bit_6xxx(%struct.comedi_device* %58, i32 %conv69) #7, !dbg !7886
  %conv71 = zext i16 %call70 to i32, !dbg !7886
  %60 = load i32, i32* %bits, align 4, !dbg !7887
  %or72 = or i32 %60, %conv71, !dbg !7887
  store i32 %or72, i32* %bits, align 4, !dbg !7887
  %61 = load i32, i32* %aref, align 4, !dbg !7888
  %cmp73 = icmp eq i32 %61, 1, !dbg !7890
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !7891

if.then75:                                        ; preds = %if.end62
  %62 = load i32, i32* %bits, align 4, !dbg !7892
  %or76 = or i32 %62, 8192, !dbg !7892
  store i32 %or76, i32* %bits, align 4, !dbg !7892
  br label %if.end77, !dbg !7893

if.end77:                                         ; preds = %if.then75, %if.end62
  %63 = load i32, i32* %channel, align 4, !dbg !7894
  %call78 = call zeroext i16 @adc_chan_bits(i32 %63) #7, !dbg !7895
  %conv79 = zext i16 %call78 to i32, !dbg !7895
  %64 = load i32, i32* %bits, align 4, !dbg !7896
  %or80 = or i32 %64, %conv79, !dbg !7896
  store i32 %or80, i32* %bits, align 4, !dbg !7896
  %65 = load i32, i32* %channel, align 4, !dbg !7897
  %call81 = call zeroext i16 @adc_chan_bits(i32 %65) #7, !dbg !7898
  %66 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7899
  %main_iobase82 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %66, i32 0, i32 3, !dbg !7900
  %67 = load i8*, i8** %main_iobase82, align 8, !dbg !7900
  %add.ptr83 = getelementptr i8, i8* %67, i64 44, !dbg !7901
  call void @writew(i16 zeroext %call81, i8* %add.ptr83) #7, !dbg !7902
  %68 = load i32, i32* %bits, align 4, !dbg !7903
  %conv84 = trunc i32 %68 to i16, !dbg !7903
  %69 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7904
  %main_iobase85 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %69, i32 0, i32 3, !dbg !7905
  %70 = load i8*, i8** %main_iobase85, align 8, !dbg !7905
  %add.ptr86 = getelementptr i8, i8* %70, i64 40, !dbg !7906
  call void @writew(i16 zeroext %conv84, i8* %add.ptr86) #7, !dbg !7907
  br label %if.end140, !dbg !7908

if.else87:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %old_cal_range_bits, metadata !7909, metadata !DIExpression()), !dbg !7911
  %71 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7912
  %i2c_cal_range_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %71, i32 0, i32 25, !dbg !7913
  %72 = load i8, i8* %i2c_cal_range_bits, align 8, !dbg !7913
  store i8 %72, i8* %old_cal_range_bits, align 1, !dbg !7911
  %73 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7914
  %i2c_cal_range_bits88 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %73, i32 0, i32 25, !dbg !7915
  %74 = load i8, i8* %i2c_cal_range_bits88, align 8, !dbg !7916
  %conv89 = zext i8 %74 to i32, !dbg !7916
  %and90 = and i32 %conv89, -113, !dbg !7916
  %conv91 = trunc i32 %and90 to i8, !dbg !7916
  store i8 %conv91, i8* %i2c_cal_range_bits88, align 8, !dbg !7916
  %75 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !7917
  %chanspec92 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %75, i32 0, i32 4, !dbg !7919
  %76 = load i32, i32* %chanspec92, align 4, !dbg !7919
  %and93 = and i32 %76, 134217728, !dbg !7920
  %tobool94 = icmp ne i32 %and93, 0, !dbg !7920
  br i1 %tobool94, label %if.then95, label %if.else103, !dbg !7921

if.then95:                                        ; preds = %if.else87
  %77 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7922
  %calibration_source96 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %77, i32 0, i32 24, !dbg !7924
  %78 = load i32, i32* %calibration_source96, align 4, !dbg !7924
  %call97 = call zeroext i8 @adc_src_4020_bits(i32 %78) #7, !dbg !7925
  %conv98 = zext i8 %call97 to i32, !dbg !7925
  %79 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7926
  %i2c_cal_range_bits99 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %79, i32 0, i32 25, !dbg !7927
  %80 = load i8, i8* %i2c_cal_range_bits99, align 8, !dbg !7928
  %conv100 = zext i8 %80 to i32, !dbg !7928
  %or101 = or i32 %conv100, %conv98, !dbg !7928
  %conv102 = trunc i32 %or101 to i8, !dbg !7928
  store i8 %conv102, i8* %i2c_cal_range_bits99, align 8, !dbg !7928
  br label %if.end110, !dbg !7929

if.else103:                                       ; preds = %if.else87
  %call104 = call zeroext i8 @adc_src_4020_bits(i32 4) #7, !dbg !7930
  %conv105 = zext i8 %call104 to i32, !dbg !7930
  %81 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7932
  %i2c_cal_range_bits106 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %81, i32 0, i32 25, !dbg !7933
  %82 = load i8, i8* %i2c_cal_range_bits106, align 8, !dbg !7934
  %conv107 = zext i8 %82 to i32, !dbg !7934
  %or108 = or i32 %conv107, %conv105, !dbg !7934
  %conv109 = trunc i32 %or108 to i8, !dbg !7934
  store i8 %conv109, i8* %i2c_cal_range_bits106, align 8, !dbg !7934
  br label %if.end110

if.end110:                                        ; preds = %if.else103, %if.then95
  %83 = load i32, i32* %range, align 4, !dbg !7935
  %cmp111 = icmp eq i32 %83, 0, !dbg !7937
  br i1 %cmp111, label %if.then113, label %if.else120, !dbg !7938

if.then113:                                       ; preds = %if.end110
  %84 = load i32, i32* %channel, align 4, !dbg !7939
  %call114 = call zeroext i8 @attenuate_bit(i32 %84) #7, !dbg !7940
  %conv115 = zext i8 %call114 to i32, !dbg !7940
  %85 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7941
  %i2c_cal_range_bits116 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %85, i32 0, i32 25, !dbg !7942
  %86 = load i8, i8* %i2c_cal_range_bits116, align 8, !dbg !7943
  %conv117 = zext i8 %86 to i32, !dbg !7943
  %or118 = or i32 %conv117, %conv115, !dbg !7943
  %conv119 = trunc i32 %or118 to i8, !dbg !7943
  store i8 %conv119, i8* %i2c_cal_range_bits116, align 8, !dbg !7943
  br label %if.end127, !dbg !7941

if.else120:                                       ; preds = %if.end110
  %87 = load i32, i32* %channel, align 4, !dbg !7944
  %call121 = call zeroext i8 @attenuate_bit(i32 %87) #7, !dbg !7945
  %conv122 = zext i8 %call121 to i32, !dbg !7945
  %neg = xor i32 %conv122, -1, !dbg !7946
  %88 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7947
  %i2c_cal_range_bits123 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %88, i32 0, i32 25, !dbg !7948
  %89 = load i8, i8* %i2c_cal_range_bits123, align 8, !dbg !7949
  %conv124 = zext i8 %89 to i32, !dbg !7949
  %and125 = and i32 %conv124, %neg, !dbg !7949
  %conv126 = trunc i32 %and125 to i8, !dbg !7949
  store i8 %conv126, i8* %i2c_cal_range_bits123, align 8, !dbg !7949
  br label %if.end127

if.end127:                                        ; preds = %if.else120, %if.then113
  %90 = load i8, i8* %old_cal_range_bits, align 1, !dbg !7950
  %conv128 = zext i8 %90 to i32, !dbg !7950
  %91 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7952
  %i2c_cal_range_bits129 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %91, i32 0, i32 25, !dbg !7953
  %92 = load i8, i8* %i2c_cal_range_bits129, align 8, !dbg !7953
  %conv130 = zext i8 %92 to i32, !dbg !7952
  %cmp131 = icmp ne i32 %conv128, %conv130, !dbg !7954
  br i1 %cmp131, label %if.then133, label %if.end135, !dbg !7955

if.then133:                                       ; preds = %if.end127
  call void @llvm.dbg.declare(metadata i8* %i2c_data, metadata !7956, metadata !DIExpression()), !dbg !7958
  %93 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7959
  %i2c_cal_range_bits134 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %93, i32 0, i32 25, !dbg !7960
  %94 = load i8, i8* %i2c_cal_range_bits134, align 8, !dbg !7960
  store i8 %94, i8* %i2c_data, align 1, !dbg !7958
  %95 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7961
  call void @i2c_write(%struct.comedi_device* %95, i32 32, i8* %i2c_data, i32 1) #7, !dbg !7962
  br label %if.end135, !dbg !7963

if.end135:                                        ; preds = %if.then133, %if.end127
  %96 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7964
  %main_iobase136 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %96, i32 0, i32 3, !dbg !7965
  %97 = load i8*, i8** %main_iobase136, align 8, !dbg !7965
  %add.ptr137 = getelementptr i8, i8* %97, i64 24, !dbg !7966
  call void @writew(i16 zeroext 0, i8* %add.ptr137) #7, !dbg !7967
  %98 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7968
  %main_iobase138 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %98, i32 0, i32 3, !dbg !7969
  %99 = load i8*, i8** %main_iobase138, align 8, !dbg !7969
  %add.ptr139 = getelementptr i8, i8* %99, i64 22, !dbg !7970
  call void @writew(i16 zeroext 2, i8* %add.ptr139) #7, !dbg !7971
  br label %if.end140

if.end140:                                        ; preds = %if.end135, %if.end77
  store i32 0, i32* %n, align 4, !dbg !7972
  br label %for.cond, !dbg !7974

for.cond:                                         ; preds = %for.inc, %if.end140
  %100 = load i32, i32* %n, align 4, !dbg !7975
  %101 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !7977
  %n141 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %101, i32 0, i32 1, !dbg !7978
  %102 = load i32, i32* %n141, align 4, !dbg !7978
  %cmp142 = icmp ult i32 %100, %102, !dbg !7979
  br i1 %cmp142, label %for.body, label %for.end, !dbg !7980

for.body:                                         ; preds = %for.cond
  %103 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7981
  %main_iobase144 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %103, i32 0, i32 3, !dbg !7983
  %104 = load i8*, i8** %main_iobase144, align 8, !dbg !7983
  %add.ptr145 = getelementptr i8, i8* %104, i64 42, !dbg !7984
  call void @writew(i16 zeroext 0, i8* %add.ptr145) #7, !dbg !7985
  %105 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !7986
  %chanspec146 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %105, i32 0, i32 4, !dbg !7986
  %106 = load i32, i32* %chanspec146, align 4, !dbg !7986
  %and147 = and i32 %106, 65535, !dbg !7986
  %call148 = call zeroext i16 @adc_convert_chan_4020_bits(i32 %and147) #7, !dbg !7987
  %107 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !7988
  %main_iobase149 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %107, i32 0, i32 3, !dbg !7989
  %108 = load i8*, i8** %main_iobase149, align 8, !dbg !7989
  %add.ptr150 = getelementptr i8, i8* %108, i64 36, !dbg !7990
  call void @writew(i16 zeroext %call148, i8* %add.ptr150) #7, !dbg !7991
  %109 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7992
  %110 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7993
  %111 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !7994
  %call151 = call i32 @comedi_timeout(%struct.comedi_device* %109, %struct.comedi_subdevice* %110, %struct.comedi_insn* %111, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i64)* @cb_pcidas64_ai_eoc, i64 0) #7, !dbg !7995
  store i32 %call151, i32* %ret, align 4, !dbg !7996
  %112 = load i32, i32* %ret, align 4, !dbg !7997
  %tobool152 = icmp ne i32 %112, 0, !dbg !7997
  br i1 %tobool152, label %if.then153, label %if.end154, !dbg !7999

if.then153:                                       ; preds = %for.body
  %113 = load i32, i32* %ret, align 4, !dbg !8000
  store i32 %113, i32* %retval, align 4, !dbg !8001
  br label %return, !dbg !8001

if.end154:                                        ; preds = %for.body
  %114 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !8002
  %layout155 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %114, i32 0, i32 12, !dbg !8004
  %115 = load i32, i32* %layout155, align 8, !dbg !8004
  %cmp156 = icmp eq i32 %115, 2, !dbg !8005
  br i1 %cmp156, label %if.then158, label %if.else162, !dbg !8006

if.then158:                                       ; preds = %if.end154
  %116 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8007
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %116, i32 0, i32 17, !dbg !8008
  %117 = load i8*, i8** %mmio, align 8, !dbg !8008
  %add.ptr159 = getelementptr i8, i8* %117, i64 512, !dbg !8009
  %call160 = call i32 @readl(i8* %add.ptr159) #7, !dbg !8010
  %and161 = and i32 %call160, 65535, !dbg !8011
  %118 = load i32*, i32** %data.addr, align 8, !dbg !8012
  %119 = load i32, i32* %n, align 4, !dbg !8013
  %idxprom = zext i32 %119 to i64, !dbg !8012
  %arrayidx = getelementptr i32, i32* %118, i64 %idxprom, !dbg !8012
  store i32 %and161, i32* %arrayidx, align 4, !dbg !8014
  br label %if.end169, !dbg !8012

if.else162:                                       ; preds = %if.end154
  %120 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8015
  %main_iobase163 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %120, i32 0, i32 3, !dbg !8016
  %121 = load i8*, i8** %main_iobase163, align 8, !dbg !8016
  %add.ptr164 = getelementptr i8, i8* %121, i64 4, !dbg !8017
  %call165 = call zeroext i16 @readw(i8* %add.ptr164) #7, !dbg !8018
  %conv166 = zext i16 %call165 to i32, !dbg !8018
  %122 = load i32*, i32** %data.addr, align 8, !dbg !8019
  %123 = load i32, i32* %n, align 4, !dbg !8020
  %idxprom167 = zext i32 %123 to i64, !dbg !8019
  %arrayidx168 = getelementptr i32, i32* %122, i64 %idxprom167, !dbg !8019
  store i32 %conv166, i32* %arrayidx168, align 4, !dbg !8021
  br label %if.end169

if.end169:                                        ; preds = %if.else162, %if.then158
  br label %for.inc, !dbg !8022

for.inc:                                          ; preds = %if.end169
  %124 = load i32, i32* %n, align 4, !dbg !8023
  %inc = add i32 %124, 1, !dbg !8023
  store i32 %inc, i32* %n, align 4, !dbg !8023
  br label %for.cond, !dbg !8024, !llvm.loop !8025

for.end:                                          ; preds = %for.cond
  %125 = load i32, i32* %n, align 4, !dbg !8027
  store i32 %125, i32* %retval, align 4, !dbg !8028
  br label %return, !dbg !8028

return:                                           ; preds = %for.end, %if.then153
  %126 = load i32, i32* %retval, align 4, !dbg !8029
  ret i32 %126, !dbg !8029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_config_insn(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !8030 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %id = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8031, metadata !DIExpression()), !dbg !8032
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !8033, metadata !DIExpression()), !dbg !8034
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !8035, metadata !DIExpression()), !dbg !8036
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !8037, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.declare(metadata i32* %id, metadata !8039, metadata !DIExpression()), !dbg !8040
  %0 = load i32*, i32** %data.addr, align 8, !dbg !8041
  %arrayidx = getelementptr i32, i32* %0, i64 0, !dbg !8041
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8041
  store i32 %1, i32* %id, align 4, !dbg !8040
  %2 = load i32, i32* %id, align 4, !dbg !8042
  switch i32 %2, label %sw.default [
    i32 20, label %sw.bb
    i32 22, label %sw.bb1
    i32 23, label %sw.bb3
  ], !dbg !8043

sw.bb:                                            ; preds = %entry
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8044
  %4 = load i32*, i32** %data.addr, align 8, !dbg !8046
  %call = call i32 @ai_config_calibration_source(%struct.comedi_device* %3, i32* %4) #7, !dbg !8047
  store i32 %call, i32* %retval, align 4, !dbg !8048
  br label %return, !dbg !8048

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8049
  %6 = load i32*, i32** %data.addr, align 8, !dbg !8050
  %call2 = call i32 @ai_config_block_size(%struct.comedi_device* %5, i32* %6) #7, !dbg !8051
  store i32 %call2, i32* %retval, align 4, !dbg !8052
  br label %return, !dbg !8052

sw.bb3:                                           ; preds = %entry
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8053
  %8 = load i32*, i32** %data.addr, align 8, !dbg !8054
  %call4 = call i32 @ai_config_master_clock(%struct.comedi_device* %7, i32* %8) #7, !dbg !8055
  store i32 %call4, i32* %retval, align 4, !dbg !8056
  br label %return, !dbg !8056

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8057
  br label %return, !dbg !8057

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb1, %sw.bb
  %9 = load i32, i32* %retval, align 4, !dbg !8058
  ret i32 %9, !dbg !8058
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_cmd(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !8059 {
entry:
  %lock.addr.i222 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i222, metadata !5431, metadata !DIExpression()), !dbg !8060
  %flags.addr.i223 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i223, metadata !5438, metadata !DIExpression()), !dbg !8062
  %tmp.i224 = alloca i32, align 4
  %tmp8.i225 = alloca i32, align 4
  %lock.addr.i220 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i220, metadata !5440, metadata !DIExpression()), !dbg !8063
  %lock.addr.i218 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i218, metadata !5431, metadata !DIExpression()), !dbg !8070
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5438, metadata !DIExpression()), !dbg !8072
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5440, metadata !DIExpression()), !dbg !8073
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %async = alloca %struct.comedi_async*, align 8
  %cmd = alloca %struct.comedi_cmd*, align 8
  %bits = alloca i32, align 4
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %retval3 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %__dummy152 = alloca i64, align 8
  %__dummy2153 = alloca i64, align 8
  %tmp156 = alloca i32, align 4
  %__dummy160 = alloca i64, align 8
  %__dummy2161 = alloca i64, align 8
  %tmp164 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8080, metadata !DIExpression()), !dbg !8081
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !8082, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !8084, metadata !DIExpression()), !dbg !8085
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8086
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !8087
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !8087
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !8086
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !8085
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !8088, metadata !DIExpression()), !dbg !8089
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8090
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !8091
  %4 = load i8*, i8** %private, align 8, !dbg !8091
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !8090
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !8089
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !8092, metadata !DIExpression()), !dbg !8093
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !8094
  %async1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i32 0, i32 7, !dbg !8095
  %7 = load %struct.comedi_async*, %struct.comedi_async** %async1, align 8, !dbg !8095
  store %struct.comedi_async* %7, %struct.comedi_async** %async, align 8, !dbg !8093
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !8096, metadata !DIExpression()), !dbg !8097
  %8 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !8098
  %cmd2 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %8, i32 0, i32 17, !dbg !8099
  store %struct.comedi_cmd* %cmd2, %struct.comedi_cmd** %cmd, align 8, !dbg !8097
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !8100, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8104, metadata !DIExpression()), !dbg !8105
  call void @llvm.dbg.declare(metadata i32* %retval3, metadata !8106, metadata !DIExpression()), !dbg !8107
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8108
  call void @disable_ai_pacing(%struct.comedi_device* %9) #7, !dbg !8109
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8110
  call void @abort_dma(%struct.comedi_device* %10, i32 1) #7, !dbg !8111
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8112
  %12 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8113
  %call = call i32 @setup_channel_queue(%struct.comedi_device* %11, %struct.comedi_cmd* %12) #7, !dbg !8114
  store i32 %call, i32* %retval3, align 4, !dbg !8115
  %13 = load i32, i32* %retval3, align 4, !dbg !8116
  %cmp = icmp slt i32 %13, 0, !dbg !8118
  br i1 %cmp, label %if.then, label %if.end, !dbg !8119

if.then:                                          ; preds = %entry
  %14 = load i32, i32* %retval3, align 4, !dbg !8120
  store i32 %14, i32* %retval, align 4, !dbg !8121
  br label %return, !dbg !8121

if.end:                                           ; preds = %entry
  %15 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8122
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %15, i32 0, i32 3, !dbg !8123
  %16 = load i8*, i8** %main_iobase, align 8, !dbg !8123
  %add.ptr = getelementptr i8, i8* %16, i64 20, !dbg !8124
  call void @writew(i16 zeroext 0, i8* %add.ptr) #7, !dbg !8125
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8126
  %18 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8127
  call void @set_ai_pacing(%struct.comedi_device* %17, %struct.comedi_cmd* %18) #7, !dbg !8128
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8129
  %20 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8130
  call void @setup_sample_counters(%struct.comedi_device* %19, %struct.comedi_cmd* %20) #7, !dbg !8131
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8132
  %22 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8133
  call void @enable_ai_interrupts(%struct.comedi_device* %21, %struct.comedi_cmd* %22) #7, !dbg !8134
  br label %do.body, !dbg !8135

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !8136

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8137, metadata !DIExpression()), !dbg !8139
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8140, metadata !DIExpression()), !dbg !8139
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !8139
  %conv = zext i1 %cmp5 to i32, !dbg !8139
  store i32 1, i32* %tmp, align 4, !dbg !8139
  %23 = load i32, i32* %tmp, align 4, !dbg !8139
  br label %do.body6, !dbg !8141

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !8142

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !8143

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !8145, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !8149, metadata !DIExpression()), !dbg !8148
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !8148
  %conv12 = zext i1 %cmp11 to i32, !dbg !8148
  store i32 1, i32* %tmp13, align 4, !dbg !8148
  %24 = load i32, i32* %tmp13, align 4, !dbg !8148
  %call14 = call i64 @arch_local_irq_save() #7, !dbg !8150
  store i64 %call14, i64* %flags, align 8, !dbg !8150
  br label %do.end, !dbg !8150

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !8143

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !8142

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8151, !srcloc !8152
  br label %do.body17, !dbg !8151

do.body17:                                        ; preds = %do.body16
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8153
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %25, i32 0, i32 11, !dbg !8153
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8154
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !8155
  %rlock.i = bitcast %union.anon.3* %27 to %struct.raw_spinlock*, !dbg !8155
  br label %do.end19, !dbg !8153

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !8151

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8142

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8141

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !8136

do.end23:                                         ; preds = %do.end22
  %28 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8156
  %adc_control1_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %28, i32 0, i32 18, !dbg !8157
  %29 = load i16, i16* %adc_control1_bits, align 4, !dbg !8158
  %conv24 = zext i16 %29 to i32, !dbg !8158
  %or = or i32 %conv24, 64, !dbg !8158
  %conv25 = trunc i32 %or to i16, !dbg !8158
  store i16 %conv25, i16* %adc_control1_bits, align 4, !dbg !8158
  %30 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8159
  %adc_control1_bits26 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %30, i32 0, i32 18, !dbg !8160
  %31 = load i16, i16* %adc_control1_bits26, align 4, !dbg !8161
  %conv27 = zext i16 %31 to i32, !dbg !8161
  %and = and i32 %conv27, -513, !dbg !8161
  %conv28 = trunc i32 %and to i16, !dbg !8161
  store i16 %conv28, i16* %adc_control1_bits26, align 4, !dbg !8161
  %32 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !8162
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %32, i32 0, i32 12, !dbg !8164
  %33 = load i32, i32* %layout, align 8, !dbg !8164
  %cmp29 = icmp ne i32 %33, 2, !dbg !8165
  br i1 %cmp29, label %if.then31, label %if.else52, !dbg !8166

if.then31:                                        ; preds = %do.end23
  %34 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8167
  %adc_control1_bits32 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %34, i32 0, i32 18, !dbg !8169
  %35 = load i16, i16* %adc_control1_bits32, align 4, !dbg !8170
  %conv33 = zext i16 %35 to i32, !dbg !8170
  %and34 = and i32 %conv33, -61441, !dbg !8170
  %conv35 = trunc i32 %and34 to i16, !dbg !8170
  store i16 %conv35, i16* %adc_control1_bits32, align 4, !dbg !8170
  %36 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8171
  %convert_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %36, i32 0, i32 6, !dbg !8173
  %37 = load i32, i32* %convert_src, align 8, !dbg !8173
  %cmp36 = icmp eq i32 %37, 64, !dbg !8174
  br i1 %cmp36, label %if.then38, label %if.else, !dbg !8175

if.then38:                                        ; preds = %if.then31
  %call39 = call zeroext i16 @adc_mode_bits(i32 13) #7, !dbg !8176
  %conv40 = zext i16 %call39 to i32, !dbg !8176
  %38 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8177
  %adc_control1_bits41 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %38, i32 0, i32 18, !dbg !8178
  %39 = load i16, i16* %adc_control1_bits41, align 4, !dbg !8179
  %conv42 = zext i16 %39 to i32, !dbg !8179
  %or43 = or i32 %conv42, %conv40, !dbg !8179
  %conv44 = trunc i32 %or43 to i16, !dbg !8179
  store i16 %conv44, i16* %adc_control1_bits41, align 4, !dbg !8179
  br label %if.end51, !dbg !8177

if.else:                                          ; preds = %if.then31
  %call45 = call zeroext i16 @adc_mode_bits(i32 8) #7, !dbg !8180
  %conv46 = zext i16 %call45 to i32, !dbg !8180
  %40 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8181
  %adc_control1_bits47 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %40, i32 0, i32 18, !dbg !8182
  %41 = load i16, i16* %adc_control1_bits47, align 4, !dbg !8183
  %conv48 = zext i16 %41 to i32, !dbg !8183
  %or49 = or i32 %conv48, %conv46, !dbg !8183
  %conv50 = trunc i32 %or49 to i16, !dbg !8183
  store i16 %conv50, i16* %adc_control1_bits47, align 4, !dbg !8183
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then38
  br label %if.end100, !dbg !8184

if.else52:                                        ; preds = %do.end23
  %42 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8185
  %adc_control1_bits53 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %42, i32 0, i32 18, !dbg !8187
  %43 = load i16, i16* %adc_control1_bits53, align 4, !dbg !8188
  %conv54 = zext i16 %43 to i32, !dbg !8188
  %and55 = and i32 %conv54, -12289, !dbg !8188
  %conv56 = trunc i32 %and55 to i16, !dbg !8188
  store i16 %conv56, i16* %adc_control1_bits53, align 4, !dbg !8188
  %44 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8189
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %44, i32 0, i32 13, !dbg !8191
  %45 = load i32, i32* %chanlist_len, align 8, !dbg !8191
  %cmp57 = icmp eq i32 %45, 4, !dbg !8192
  br i1 %cmp57, label %if.then59, label %if.else64, !dbg !8193

if.then59:                                        ; preds = %if.else52
  %46 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8194
  %adc_control1_bits60 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %46, i32 0, i32 18, !dbg !8195
  %47 = load i16, i16* %adc_control1_bits60, align 4, !dbg !8196
  %conv61 = zext i16 %47 to i32, !dbg !8196
  %or62 = or i32 %conv61, 8192, !dbg !8196
  %conv63 = trunc i32 %or62 to i16, !dbg !8196
  store i16 %conv63, i16* %adc_control1_bits60, align 4, !dbg !8196
  br label %if.end74, !dbg !8194

if.else64:                                        ; preds = %if.else52
  %48 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8197
  %chanlist_len65 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %48, i32 0, i32 13, !dbg !8199
  %49 = load i32, i32* %chanlist_len65, align 8, !dbg !8199
  %cmp66 = icmp eq i32 %49, 2, !dbg !8200
  br i1 %cmp66, label %if.then68, label %if.end73, !dbg !8201

if.then68:                                        ; preds = %if.else64
  %50 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8202
  %adc_control1_bits69 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %50, i32 0, i32 18, !dbg !8203
  %51 = load i16, i16* %adc_control1_bits69, align 4, !dbg !8204
  %conv70 = zext i16 %51 to i32, !dbg !8204
  %or71 = or i32 %conv70, 4096, !dbg !8204
  %conv72 = trunc i32 %or71 to i16, !dbg !8204
  store i16 %conv72, i16* %adc_control1_bits69, align 4, !dbg !8204
  br label %if.end73, !dbg !8202

if.end73:                                         ; preds = %if.then68, %if.else64
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then59
  %52 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8205
  %adc_control1_bits75 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %52, i32 0, i32 18, !dbg !8206
  %53 = load i16, i16* %adc_control1_bits75, align 4, !dbg !8207
  %conv76 = zext i16 %53 to i32, !dbg !8207
  %and77 = and i32 %conv76, -769, !dbg !8207
  %conv78 = trunc i32 %and77 to i16, !dbg !8207
  store i16 %conv78, i16* %adc_control1_bits75, align 4, !dbg !8207
  %54 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8208
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %54, i32 0, i32 12, !dbg !8208
  %55 = load i32*, i32** %chanlist, align 8, !dbg !8208
  %arrayidx = getelementptr i32, i32* %55, i64 0, !dbg !8208
  %56 = load i32, i32* %arrayidx, align 4, !dbg !8208
  %and79 = and i32 %56, 65535, !dbg !8208
  %call80 = call zeroext i16 @adc_lo_chan_4020_bits(i32 %and79) #7, !dbg !8209
  %conv81 = zext i16 %call80 to i32, !dbg !8209
  %57 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8210
  %adc_control1_bits82 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %57, i32 0, i32 18, !dbg !8211
  %58 = load i16, i16* %adc_control1_bits82, align 4, !dbg !8212
  %conv83 = zext i16 %58 to i32, !dbg !8212
  %or84 = or i32 %conv83, %conv81, !dbg !8212
  %conv85 = trunc i32 %or84 to i16, !dbg !8212
  store i16 %conv85, i16* %adc_control1_bits82, align 4, !dbg !8212
  %59 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8213
  %adc_control1_bits86 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %59, i32 0, i32 18, !dbg !8214
  %60 = load i16, i16* %adc_control1_bits86, align 4, !dbg !8215
  %conv87 = zext i16 %60 to i32, !dbg !8215
  %and88 = and i32 %conv87, -3073, !dbg !8215
  %conv89 = trunc i32 %and88 to i16, !dbg !8215
  store i16 %conv89, i16* %adc_control1_bits86, align 4, !dbg !8215
  %61 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8216
  %chanlist90 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %61, i32 0, i32 12, !dbg !8216
  %62 = load i32*, i32** %chanlist90, align 8, !dbg !8216
  %63 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8216
  %chanlist_len91 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %63, i32 0, i32 13, !dbg !8216
  %64 = load i32, i32* %chanlist_len91, align 8, !dbg !8216
  %sub = sub i32 %64, 1, !dbg !8216
  %idxprom = zext i32 %sub to i64, !dbg !8216
  %arrayidx92 = getelementptr i32, i32* %62, i64 %idxprom, !dbg !8216
  %65 = load i32, i32* %arrayidx92, align 4, !dbg !8216
  %and93 = and i32 %65, 65535, !dbg !8216
  %call94 = call zeroext i16 @adc_hi_chan_4020_bits(i32 %and93) #7, !dbg !8217
  %conv95 = zext i16 %call94 to i32, !dbg !8217
  %66 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8218
  %adc_control1_bits96 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %66, i32 0, i32 18, !dbg !8219
  %67 = load i16, i16* %adc_control1_bits96, align 4, !dbg !8220
  %conv97 = zext i16 %67 to i32, !dbg !8220
  %or98 = or i32 %conv97, %conv95, !dbg !8220
  %conv99 = trunc i32 %or98 to i16, !dbg !8220
  store i16 %conv99, i16* %adc_control1_bits96, align 4, !dbg !8220
  br label %if.end100

if.end100:                                        ; preds = %if.end74, %if.end51
  %68 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8221
  %adc_control1_bits101 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %68, i32 0, i32 18, !dbg !8222
  %69 = load i16, i16* %adc_control1_bits101, align 4, !dbg !8222
  %70 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8223
  %main_iobase102 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %70, i32 0, i32 3, !dbg !8224
  %71 = load i8*, i8** %main_iobase102, align 8, !dbg !8224
  %add.ptr103 = getelementptr i8, i8* %71, i64 18, !dbg !8225
  call void @writew(i16 zeroext %69, i8* %add.ptr103) #7, !dbg !8226
  %72 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8227
  %spinlock104 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %72, i32 0, i32 11, !dbg !8228
  %73 = load i64, i64* %flags, align 8, !dbg !8229
  store %struct.spinlock* %spinlock104, %struct.spinlock** %lock.addr.i218, align 8
  store i64 %73, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !8230
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !8230
  store i32 1, i32* %tmp.i, align 4, !dbg !8230
  %74 = load i32, i32* %tmp.i, align 4, !dbg !8230
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !8231
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !8231
  store i32 1, i32* %tmp8.i, align 4, !dbg !8231
  %75 = load i32, i32* %tmp8.i, align 4, !dbg !8231
  %76 = load i64, i64* %flags.addr.i, align 8, !dbg !8232
  call void @arch_local_irq_restore(i64 %76) #9, !dbg !8232
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8233, !srcloc !5545
  %77 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i218, align 8, !dbg !8234
  %78 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %77, i32 0, i32 0, !dbg !8234
  %rlock.i219 = bitcast %union.anon.3* %78 to %struct.raw_spinlock*, !dbg !8234
  %79 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8235
  %main_iobase105 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %79, i32 0, i32 3, !dbg !8236
  %80 = load i8*, i8** %main_iobase105, align 8, !dbg !8236
  %add.ptr106 = getelementptr i8, i8* %80, i64 42, !dbg !8237
  call void @writew(i16 zeroext 0, i8* %add.ptr106) #7, !dbg !8238
  %81 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8239
  %flags107 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %81, i32 0, i32 1, !dbg !8241
  %82 = load i32, i32* %flags107, align 4, !dbg !8241
  %and108 = and i32 %82, 32, !dbg !8242
  %cmp109 = icmp eq i32 %and108, 0, !dbg !8243
  br i1 %cmp109, label %if.then114, label %lor.lhs.false, !dbg !8244

lor.lhs.false:                                    ; preds = %if.end100
  %83 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !8245
  %layout111 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %83, i32 0, i32 12, !dbg !8246
  %84 = load i32, i32* %layout111, align 8, !dbg !8246
  %cmp112 = icmp eq i32 %84, 2, !dbg !8247
  br i1 %cmp112, label %if.then114, label %if.end127, !dbg !8248

if.then114:                                       ; preds = %lor.lhs.false, %if.end100
  %85 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8249
  %ai_dma_index = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %85, i32 0, i32 10, !dbg !8251
  store i32 0, i32* %ai_dma_index, align 8, !dbg !8252
  store i32 0, i32* %i, align 4, !dbg !8253
  br label %for.cond, !dbg !8255

for.cond:                                         ; preds = %for.inc, %if.then114
  %86 = load i32, i32* %i, align 4, !dbg !8256
  %87 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !8258
  %call115 = call i32 @ai_dma_ring_count(%struct.pcidas64_board* %87) #7, !dbg !8259
  %cmp116 = icmp ult i32 %86, %call115, !dbg !8260
  br i1 %cmp116, label %for.body, label %for.end, !dbg !8261

for.body:                                         ; preds = %for.cond
  %88 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8262
  %call118 = call i32 @dma_transfer_size(%struct.comedi_device* %88) #7, !dbg !8262
  %conv119 = zext i32 %call118 to i64, !dbg !8262
  %mul = mul i64 %conv119, 2, !dbg !8262
  %conv120 = trunc i64 %mul to i32, !dbg !8262
  %89 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8263
  %ai_dma_desc = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %89, i32 0, i32 8, !dbg !8264
  %90 = load %struct.plx_dma_desc*, %struct.plx_dma_desc** %ai_dma_desc, align 8, !dbg !8264
  %91 = load i32, i32* %i, align 4, !dbg !8265
  %idxprom121 = zext i32 %91 to i64, !dbg !8263
  %arrayidx122 = getelementptr %struct.plx_dma_desc, %struct.plx_dma_desc* %90, i64 %idxprom121, !dbg !8263
  %transfer_size = getelementptr inbounds %struct.plx_dma_desc, %struct.plx_dma_desc* %arrayidx122, i32 0, i32 2, !dbg !8266
  store i32 %conv120, i32* %transfer_size, align 4, !dbg !8267
  br label %for.inc, !dbg !8263

for.inc:                                          ; preds = %for.body
  %92 = load i32, i32* %i, align 4, !dbg !8268
  %inc = add i32 %92, 1, !dbg !8268
  store i32 %inc, i32* %i, align 4, !dbg !8268
  br label %for.cond, !dbg !8269, !llvm.loop !8270

for.end:                                          ; preds = %for.cond
  %93 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8272
  %94 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8273
  %ai_dma_desc_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %94, i32 0, i32 9, !dbg !8274
  %95 = load i64, i64* %ai_dma_desc_bus_addr, align 8, !dbg !8274
  %or123 = or i64 %95, 1, !dbg !8275
  %or124 = or i64 %or123, 4, !dbg !8276
  %or125 = or i64 %or124, 8, !dbg !8277
  %conv126 = trunc i64 %or125 to i32, !dbg !8273
  call void @load_first_dma_descriptor(%struct.comedi_device* %93, i32 1, i32 %conv126) #7, !dbg !8278
  %96 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8279
  call void @dma_start_sync(%struct.comedi_device* %96, i32 1) #7, !dbg !8280
  br label %if.end127, !dbg !8281

if.end127:                                        ; preds = %for.end, %lor.lhs.false
  %97 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !8282
  %layout128 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %97, i32 0, i32 12, !dbg !8284
  %98 = load i32, i32* %layout128, align 8, !dbg !8284
  %cmp129 = icmp eq i32 %98, 2, !dbg !8285
  br i1 %cmp129, label %if.then131, label %if.end149, !dbg !8286

if.then131:                                       ; preds = %if.end127
  store i32 0, i32* %bits, align 4, !dbg !8287
  %99 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8289
  %start_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %99, i32 0, i32 2, !dbg !8291
  %100 = load i32, i32* %start_src, align 8, !dbg !8291
  %cmp132 = icmp eq i32 %100, 64, !dbg !8292
  br i1 %cmp132, label %land.lhs.true, label %if.end137, !dbg !8293

land.lhs.true:                                    ; preds = %if.then131
  %101 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8294
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %101, i32 0, i32 3, !dbg !8294
  %102 = load i32, i32* %start_arg, align 4, !dbg !8294
  %and134 = and i32 %102, 65535, !dbg !8294
  %tobool = icmp ne i32 %and134, 0, !dbg !8294
  br i1 %tobool, label %if.then135, label %if.end137, !dbg !8295

if.then135:                                       ; preds = %land.lhs.true
  %103 = load i32, i32* %bits, align 4, !dbg !8296
  %or136 = or i32 %103, 8192, !dbg !8296
  store i32 %or136, i32* %bits, align 4, !dbg !8296
  br label %if.end137, !dbg !8297

if.end137:                                        ; preds = %if.then135, %land.lhs.true, %if.then131
  %104 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8298
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %104, i32 0, i32 10, !dbg !8300
  %105 = load i32, i32* %stop_src, align 8, !dbg !8300
  %cmp138 = icmp eq i32 %105, 64, !dbg !8301
  br i1 %cmp138, label %land.lhs.true140, label %if.end145, !dbg !8302

land.lhs.true140:                                 ; preds = %if.end137
  %106 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8303
  %stop_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %106, i32 0, i32 11, !dbg !8303
  %107 = load i32, i32* %stop_arg, align 4, !dbg !8303
  %and141 = and i32 %107, 65535, !dbg !8303
  %tobool142 = icmp ne i32 %and141, 0, !dbg !8303
  br i1 %tobool142, label %if.then143, label %if.end145, !dbg !8304

if.then143:                                       ; preds = %land.lhs.true140
  %108 = load i32, i32* %bits, align 4, !dbg !8305
  %or144 = or i32 %108, 16384, !dbg !8305
  store i32 %or144, i32* %bits, align 4, !dbg !8305
  br label %if.end145, !dbg !8306

if.end145:                                        ; preds = %if.then143, %land.lhs.true140, %if.end137
  %109 = load i32, i32* %bits, align 4, !dbg !8307
  %conv146 = trunc i32 %109 to i16, !dbg !8307
  %110 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8308
  %main_iobase147 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %110, i32 0, i32 3, !dbg !8309
  %111 = load i8*, i8** %main_iobase147, align 8, !dbg !8309
  %add.ptr148 = getelementptr i8, i8* %111, i64 12, !dbg !8310
  call void @writew(i16 zeroext %conv146, i8* %add.ptr148) #7, !dbg !8311
  br label %if.end149, !dbg !8312

if.end149:                                        ; preds = %if.end145, %if.end127
  br label %do.body150, !dbg !8313

do.body150:                                       ; preds = %if.end149
  br label %do.body151, !dbg !8314

do.body151:                                       ; preds = %do.body150
  call void @llvm.dbg.declare(metadata i64* %__dummy152, metadata !8315, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.declare(metadata i64* %__dummy2153, metadata !8318, metadata !DIExpression()), !dbg !8317
  %cmp154 = icmp eq i64* %__dummy152, %__dummy2153, !dbg !8317
  %conv155 = zext i1 %cmp154 to i32, !dbg !8317
  store i32 1, i32* %tmp156, align 4, !dbg !8317
  %112 = load i32, i32* %tmp156, align 4, !dbg !8317
  br label %do.body157, !dbg !8319

do.body157:                                       ; preds = %do.body151
  br label %do.body158, !dbg !8320

do.body158:                                       ; preds = %do.body157
  br label %do.body159, !dbg !8321

do.body159:                                       ; preds = %do.body158
  call void @llvm.dbg.declare(metadata i64* %__dummy160, metadata !8323, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.declare(metadata i64* %__dummy2161, metadata !8327, metadata !DIExpression()), !dbg !8326
  %cmp162 = icmp eq i64* %__dummy160, %__dummy2161, !dbg !8326
  %conv163 = zext i1 %cmp162 to i32, !dbg !8326
  store i32 1, i32* %tmp164, align 4, !dbg !8326
  %113 = load i32, i32* %tmp164, align 4, !dbg !8326
  %call165 = call i64 @arch_local_irq_save() #7, !dbg !8328
  store i64 %call165, i64* %flags, align 8, !dbg !8328
  br label %do.end166, !dbg !8328

do.end166:                                        ; preds = %do.body159
  br label %do.end167, !dbg !8321

do.end167:                                        ; preds = %do.end166
  br label %do.body168, !dbg !8320

do.body168:                                       ; preds = %do.end167
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8329, !srcloc !8330
  br label %do.body169, !dbg !8329

do.body169:                                       ; preds = %do.body168
  %114 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8331
  %spinlock170 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %114, i32 0, i32 11, !dbg !8331
  store %struct.spinlock* %spinlock170, %struct.spinlock** %lock.addr.i220, align 8
  %115 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i220, align 8, !dbg !8332
  %116 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %115, i32 0, i32 0, !dbg !8333
  %rlock.i221 = bitcast %union.anon.3* %116 to %struct.raw_spinlock*, !dbg !8333
  br label %do.end172, !dbg !8331

do.end172:                                        ; preds = %do.body169
  br label %do.end173, !dbg !8329

do.end173:                                        ; preds = %do.end172
  br label %do.end174, !dbg !8320

do.end174:                                        ; preds = %do.end173
  br label %do.end175, !dbg !8319

do.end175:                                        ; preds = %do.end174
  br label %do.end176, !dbg !8314

do.end176:                                        ; preds = %do.end175
  store i32 32773, i32* %bits, align 4, !dbg !8334
  %117 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8335
  %flags177 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %117, i32 0, i32 1, !dbg !8337
  %118 = load i32, i32* %flags177, align 4, !dbg !8337
  %and178 = and i32 %118, 32, !dbg !8338
  %tobool179 = icmp ne i32 %and178, 0, !dbg !8338
  br i1 %tobool179, label %if.then180, label %if.end182, !dbg !8339

if.then180:                                       ; preds = %do.end176
  %119 = load i32, i32* %bits, align 4, !dbg !8340
  %or181 = or i32 %119, 16384, !dbg !8340
  store i32 %or181, i32* %bits, align 4, !dbg !8340
  br label %if.end182, !dbg !8341

if.end182:                                        ; preds = %if.then180, %do.end176
  %120 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8342
  %start_src183 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %120, i32 0, i32 2, !dbg !8344
  %121 = load i32, i32* %start_src183, align 8, !dbg !8344
  %cmp184 = icmp eq i32 %121, 64, !dbg !8345
  br i1 %cmp184, label %if.then186, label %if.else194, !dbg !8346

if.then186:                                       ; preds = %if.end182
  %122 = load i32, i32* %bits, align 4, !dbg !8347
  %or187 = or i32 %122, 32, !dbg !8347
  store i32 %or187, i32* %bits, align 4, !dbg !8347
  %123 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8349
  %start_arg188 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %123, i32 0, i32 3, !dbg !8351
  %124 = load i32, i32* %start_arg188, align 4, !dbg !8351
  %and189 = and i32 %124, -2147483648, !dbg !8352
  %tobool190 = icmp ne i32 %and189, 0, !dbg !8352
  br i1 %tobool190, label %if.then191, label %if.end193, !dbg !8353

if.then191:                                       ; preds = %if.then186
  %125 = load i32, i32* %bits, align 4, !dbg !8354
  %or192 = or i32 %125, 64, !dbg !8354
  store i32 %or192, i32* %bits, align 4, !dbg !8354
  br label %if.end193, !dbg !8355

if.end193:                                        ; preds = %if.then191, %if.then186
  br label %if.end201, !dbg !8356

if.else194:                                       ; preds = %if.end182
  %126 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8357
  %start_src195 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %126, i32 0, i32 2, !dbg !8359
  %127 = load i32, i32* %start_src195, align 8, !dbg !8359
  %cmp196 = icmp eq i32 %127, 2, !dbg !8360
  br i1 %cmp196, label %if.then198, label %if.end200, !dbg !8361

if.then198:                                       ; preds = %if.else194
  %128 = load i32, i32* %bits, align 4, !dbg !8362
  %or199 = or i32 %128, 16, !dbg !8362
  store i32 %or199, i32* %bits, align 4, !dbg !8362
  br label %if.end200, !dbg !8364

if.end200:                                        ; preds = %if.then198, %if.else194
  br label %if.end201

if.end201:                                        ; preds = %if.end200, %if.end193
  %129 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8365
  %call202 = call i32 @use_hw_sample_counter(%struct.comedi_cmd* %129) #7, !dbg !8367
  %tobool203 = icmp ne i32 %call202, 0, !dbg !8367
  br i1 %tobool203, label %if.then204, label %if.end206, !dbg !8368

if.then204:                                       ; preds = %if.end201
  %130 = load i32, i32* %bits, align 4, !dbg !8369
  %or205 = or i32 %130, 4096, !dbg !8369
  store i32 %or205, i32* %bits, align 4, !dbg !8369
  br label %if.end206, !dbg !8370

if.end206:                                        ; preds = %if.then204, %if.end201
  %131 = load i32, i32* %bits, align 4, !dbg !8371
  %conv207 = trunc i32 %131 to i16, !dbg !8371
  %132 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8372
  %main_iobase208 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %132, i32 0, i32 3, !dbg !8373
  %133 = load i8*, i8** %main_iobase208, align 8, !dbg !8373
  %add.ptr209 = getelementptr i8, i8* %133, i64 16, !dbg !8374
  call void @writew(i16 zeroext %conv207, i8* %add.ptr209) #7, !dbg !8375
  %134 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8376
  %ai_cmd_running = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %134, i32 0, i32 27, !dbg !8377
  store i16 1, i16* %ai_cmd_running, align 8, !dbg !8378
  %135 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8379
  %spinlock210 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %135, i32 0, i32 11, !dbg !8380
  %136 = load i64, i64* %flags, align 8, !dbg !8381
  store %struct.spinlock* %spinlock210, %struct.spinlock** %lock.addr.i222, align 8
  store i64 %136, i64* %flags.addr.i223, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !8382
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !8382
  store i32 1, i32* %tmp.i224, align 4, !dbg !8382
  %137 = load i32, i32* %tmp.i224, align 4, !dbg !8382
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !8383
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !8383
  store i32 1, i32* %tmp8.i225, align 4, !dbg !8383
  %138 = load i32, i32* %tmp8.i225, align 4, !dbg !8383
  %139 = load i64, i64* %flags.addr.i223, align 8, !dbg !8384
  call void @arch_local_irq_restore(i64 %139) #9, !dbg !8384
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8385, !srcloc !5545
  %140 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i222, align 8, !dbg !8386
  %141 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %140, i32 0, i32 0, !dbg !8386
  %rlock.i226 = bitcast %union.anon.3* %141 to %struct.raw_spinlock*, !dbg !8386
  %142 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8387
  %start_src211 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %142, i32 0, i32 2, !dbg !8389
  %143 = load i32, i32* %start_src211, align 8, !dbg !8389
  %cmp212 = icmp eq i32 %143, 2, !dbg !8390
  br i1 %cmp212, label %if.then214, label %if.end217, !dbg !8391

if.then214:                                       ; preds = %if.end206
  %144 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8392
  %main_iobase215 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %144, i32 0, i32 3, !dbg !8393
  %145 = load i8*, i8** %main_iobase215, align 8, !dbg !8393
  %add.ptr216 = getelementptr i8, i8* %145, i64 34, !dbg !8394
  call void @writew(i16 zeroext 0, i8* %add.ptr216) #7, !dbg !8395
  br label %if.end217, !dbg !8395

if.end217:                                        ; preds = %if.then214, %if.end206
  store i32 0, i32* %retval, align 4, !dbg !8396
  br label %return, !dbg !8396

return:                                           ; preds = %if.end217, %if.then
  %146 = load i32, i32* %retval, align 4, !dbg !8397
  ret i32 %146, !dbg !8397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_cmdtest(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_cmd* %cmd) #2 !dbg !8398 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %err = alloca i32, align 4
  %tmp_arg = alloca i32, align 4
  %tmp_arg2 = alloca i32, align 4
  %triggers = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8399, metadata !DIExpression()), !dbg !8400
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !8401, metadata !DIExpression()), !dbg !8402
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !8403, metadata !DIExpression()), !dbg !8404
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !8405, metadata !DIExpression()), !dbg !8406
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8407
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !8408
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !8408
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !8407
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !8406
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8409, metadata !DIExpression()), !dbg !8410
  store i32 0, i32* %err, align 4, !dbg !8410
  call void @llvm.dbg.declare(metadata i32* %tmp_arg, metadata !8411, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.declare(metadata i32* %tmp_arg2, metadata !8413, metadata !DIExpression()), !dbg !8414
  call void @llvm.dbg.declare(metadata i32* %triggers, metadata !8415, metadata !DIExpression()), !dbg !8416
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8417
  %start_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %3, i32 0, i32 2, !dbg !8418
  %call = call i32 @comedi_check_trigger_src(i32* %start_src, i32 66) #7, !dbg !8419
  %4 = load i32, i32* %err, align 4, !dbg !8420
  %or = or i32 %4, %call, !dbg !8420
  store i32 %or, i32* %err, align 4, !dbg !8420
  store i32 16, i32* %triggers, align 4, !dbg !8421
  %5 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !8422
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %5, i32 0, i32 12, !dbg !8424
  %6 = load i32, i32* %layout, align 8, !dbg !8424
  %cmp = icmp eq i32 %6, 2, !dbg !8425
  br i1 %cmp, label %if.then, label %if.else, !dbg !8426

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %triggers, align 4, !dbg !8427
  %or1 = or i32 %7, 256, !dbg !8427
  store i32 %or1, i32* %triggers, align 4, !dbg !8427
  br label %if.end, !dbg !8428

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %triggers, align 4, !dbg !8429
  %or2 = or i32 %8, 4, !dbg !8429
  store i32 %or2, i32* %triggers, align 4, !dbg !8429
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8430
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %9, i32 0, i32 4, !dbg !8431
  %10 = load i32, i32* %triggers, align 4, !dbg !8432
  %call3 = call i32 @comedi_check_trigger_src(i32* %scan_begin_src, i32 %10) #7, !dbg !8433
  %11 = load i32, i32* %err, align 4, !dbg !8434
  %or4 = or i32 %11, %call3, !dbg !8434
  store i32 %or4, i32* %err, align 4, !dbg !8434
  store i32 16, i32* %triggers, align 4, !dbg !8435
  %12 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !8436
  %layout5 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %12, i32 0, i32 12, !dbg !8438
  %13 = load i32, i32* %layout5, align 8, !dbg !8438
  %cmp6 = icmp eq i32 %13, 2, !dbg !8439
  br i1 %cmp6, label %if.then7, label %if.else9, !dbg !8440

if.then7:                                         ; preds = %if.end
  %14 = load i32, i32* %triggers, align 4, !dbg !8441
  %or8 = or i32 %14, 2, !dbg !8441
  store i32 %or8, i32* %triggers, align 4, !dbg !8441
  br label %if.end11, !dbg !8442

if.else9:                                         ; preds = %if.end
  %15 = load i32, i32* %triggers, align 4, !dbg !8443
  %or10 = or i32 %15, 64, !dbg !8443
  store i32 %or10, i32* %triggers, align 4, !dbg !8443
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.then7
  %16 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8444
  %convert_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %16, i32 0, i32 6, !dbg !8445
  %17 = load i32, i32* %triggers, align 4, !dbg !8446
  %call12 = call i32 @comedi_check_trigger_src(i32* %convert_src, i32 %17) #7, !dbg !8447
  %18 = load i32, i32* %err, align 4, !dbg !8448
  %or13 = or i32 %18, %call12, !dbg !8448
  store i32 %or13, i32* %err, align 4, !dbg !8448
  %19 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8449
  %scan_end_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %19, i32 0, i32 8, !dbg !8450
  %call14 = call i32 @comedi_check_trigger_src(i32* %scan_end_src, i32 32) #7, !dbg !8451
  %20 = load i32, i32* %err, align 4, !dbg !8452
  %or15 = or i32 %20, %call14, !dbg !8452
  store i32 %or15, i32* %err, align 4, !dbg !8452
  %21 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8453
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %21, i32 0, i32 10, !dbg !8454
  %call16 = call i32 @comedi_check_trigger_src(i32* %stop_src, i32 97) #7, !dbg !8455
  %22 = load i32, i32* %err, align 4, !dbg !8456
  %or17 = or i32 %22, %call16, !dbg !8456
  store i32 %or17, i32* %err, align 4, !dbg !8456
  %23 = load i32, i32* %err, align 4, !dbg !8457
  %tobool = icmp ne i32 %23, 0, !dbg !8457
  br i1 %tobool, label %if.then18, label %if.end19, !dbg !8459

if.then18:                                        ; preds = %if.end11
  store i32 1, i32* %retval, align 4, !dbg !8460
  br label %return, !dbg !8460

if.end19:                                         ; preds = %if.end11
  %24 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8461
  %start_src20 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %24, i32 0, i32 2, !dbg !8462
  %25 = load i32, i32* %start_src20, align 8, !dbg !8462
  %call21 = call i32 @comedi_check_trigger_is_unique(i32 %25) #7, !dbg !8463
  %26 = load i32, i32* %err, align 4, !dbg !8464
  %or22 = or i32 %26, %call21, !dbg !8464
  store i32 %or22, i32* %err, align 4, !dbg !8464
  %27 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8465
  %scan_begin_src23 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %27, i32 0, i32 4, !dbg !8466
  %28 = load i32, i32* %scan_begin_src23, align 8, !dbg !8466
  %call24 = call i32 @comedi_check_trigger_is_unique(i32 %28) #7, !dbg !8467
  %29 = load i32, i32* %err, align 4, !dbg !8468
  %or25 = or i32 %29, %call24, !dbg !8468
  store i32 %or25, i32* %err, align 4, !dbg !8468
  %30 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8469
  %convert_src26 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %30, i32 0, i32 6, !dbg !8470
  %31 = load i32, i32* %convert_src26, align 8, !dbg !8470
  %call27 = call i32 @comedi_check_trigger_is_unique(i32 %31) #7, !dbg !8471
  %32 = load i32, i32* %err, align 4, !dbg !8472
  %or28 = or i32 %32, %call27, !dbg !8472
  store i32 %or28, i32* %err, align 4, !dbg !8472
  %33 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8473
  %stop_src29 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %33, i32 0, i32 10, !dbg !8474
  %34 = load i32, i32* %stop_src29, align 8, !dbg !8474
  %call30 = call i32 @comedi_check_trigger_is_unique(i32 %34) #7, !dbg !8475
  %35 = load i32, i32* %err, align 4, !dbg !8476
  %or31 = or i32 %35, %call30, !dbg !8476
  store i32 %or31, i32* %err, align 4, !dbg !8476
  %36 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8477
  %convert_src32 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %36, i32 0, i32 6, !dbg !8479
  %37 = load i32, i32* %convert_src32, align 8, !dbg !8479
  %cmp33 = icmp eq i32 %37, 64, !dbg !8480
  br i1 %cmp33, label %land.lhs.true, label %if.end38, !dbg !8481

land.lhs.true:                                    ; preds = %if.end19
  %38 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8482
  %scan_begin_src34 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %38, i32 0, i32 4, !dbg !8483
  %39 = load i32, i32* %scan_begin_src34, align 8, !dbg !8483
  %cmp35 = icmp eq i32 %39, 16, !dbg !8484
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !8485

if.then36:                                        ; preds = %land.lhs.true
  %40 = load i32, i32* %err, align 4, !dbg !8486
  %or37 = or i32 %40, -22, !dbg !8486
  store i32 %or37, i32* %err, align 4, !dbg !8486
  br label %if.end38, !dbg !8487

if.end38:                                         ; preds = %if.then36, %land.lhs.true, %if.end19
  %41 = load i32, i32* %err, align 4, !dbg !8488
  %tobool39 = icmp ne i32 %41, 0, !dbg !8488
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !8490

if.then40:                                        ; preds = %if.end38
  store i32 2, i32* %retval, align 4, !dbg !8491
  br label %return, !dbg !8491

if.end41:                                         ; preds = %if.end38
  %42 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8492
  %start_src42 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %42, i32 0, i32 2, !dbg !8493
  %43 = load i32, i32* %start_src42, align 8, !dbg !8493
  switch i32 %43, label %sw.epilog [
    i32 2, label %sw.bb
    i32 64, label %sw.bb45
  ], !dbg !8494

sw.bb:                                            ; preds = %if.end41
  %44 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8495
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %44, i32 0, i32 3, !dbg !8497
  %call43 = call i32 @comedi_check_trigger_arg_is(i32* %start_arg, i32 0) #7, !dbg !8498
  %45 = load i32, i32* %err, align 4, !dbg !8499
  %or44 = or i32 %45, %call43, !dbg !8499
  store i32 %or44, i32* %err, align 4, !dbg !8499
  br label %sw.epilog, !dbg !8500

sw.bb45:                                          ; preds = %if.end41
  br label %sw.epilog, !dbg !8501

sw.epilog:                                        ; preds = %if.end41, %sw.bb45, %sw.bb
  %46 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8502
  %convert_src46 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %46, i32 0, i32 6, !dbg !8504
  %47 = load i32, i32* %convert_src46, align 8, !dbg !8504
  %cmp47 = icmp eq i32 %47, 16, !dbg !8505
  br i1 %cmp47, label %if.then48, label %if.end66, !dbg !8506

if.then48:                                        ; preds = %sw.epilog
  %48 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !8507
  %layout49 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %48, i32 0, i32 12, !dbg !8510
  %49 = load i32, i32* %layout49, align 8, !dbg !8510
  %cmp50 = icmp eq i32 %49, 2, !dbg !8511
  br i1 %cmp50, label %if.then51, label %if.else54, !dbg !8512

if.then51:                                        ; preds = %if.then48
  %50 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8513
  %convert_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %50, i32 0, i32 7, !dbg !8515
  %call52 = call i32 @comedi_check_trigger_arg_is(i32* %convert_arg, i32 0) #7, !dbg !8516
  %51 = load i32, i32* %err, align 4, !dbg !8517
  %or53 = or i32 %51, %call52, !dbg !8517
  store i32 %or53, i32* %err, align 4, !dbg !8517
  br label %if.end65, !dbg !8518

if.else54:                                        ; preds = %if.then48
  %52 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8519
  %convert_arg55 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %52, i32 0, i32 7, !dbg !8521
  %53 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !8522
  %ai_speed = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %53, i32 0, i32 3, !dbg !8523
  %54 = load i32, i32* %ai_speed, align 8, !dbg !8523
  %call56 = call i32 @comedi_check_trigger_arg_min(i32* %convert_arg55, i32 %54) #7, !dbg !8524
  %55 = load i32, i32* %err, align 4, !dbg !8525
  %or57 = or i32 %55, %call56, !dbg !8525
  store i32 %or57, i32* %err, align 4, !dbg !8525
  %56 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8526
  %scan_begin_src58 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %56, i32 0, i32 4, !dbg !8528
  %57 = load i32, i32* %scan_begin_src58, align 8, !dbg !8528
  %cmp59 = icmp eq i32 %57, 16, !dbg !8529
  br i1 %cmp59, label %if.then60, label %if.end64, !dbg !8530

if.then60:                                        ; preds = %if.else54
  %58 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8531
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %58, i32 0, i32 5, !dbg !8533
  %59 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8534
  %convert_arg61 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %59, i32 0, i32 7, !dbg !8535
  %60 = load i32, i32* %convert_arg61, align 4, !dbg !8535
  %61 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8536
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %61, i32 0, i32 13, !dbg !8537
  %62 = load i32, i32* %chanlist_len, align 8, !dbg !8537
  %mul = mul i32 %60, %62, !dbg !8538
  %call62 = call i32 @comedi_check_trigger_arg_min(i32* %scan_begin_arg, i32 %mul) #7, !dbg !8539
  %63 = load i32, i32* %err, align 4, !dbg !8540
  %or63 = or i32 %63, %call62, !dbg !8540
  store i32 %or63, i32* %err, align 4, !dbg !8540
  br label %if.end64, !dbg !8541

if.end64:                                         ; preds = %if.then60, %if.else54
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then51
  br label %if.end66, !dbg !8542

if.end66:                                         ; preds = %if.end65, %sw.epilog
  %64 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8543
  %chanlist_len67 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %64, i32 0, i32 13, !dbg !8544
  %call68 = call i32 @comedi_check_trigger_arg_min(i32* %chanlist_len67, i32 1) #7, !dbg !8545
  %65 = load i32, i32* %err, align 4, !dbg !8546
  %or69 = or i32 %65, %call68, !dbg !8546
  store i32 %or69, i32* %err, align 4, !dbg !8546
  %66 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8547
  %scan_end_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %66, i32 0, i32 9, !dbg !8548
  %67 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8549
  %chanlist_len70 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %67, i32 0, i32 13, !dbg !8550
  %68 = load i32, i32* %chanlist_len70, align 8, !dbg !8550
  %call71 = call i32 @comedi_check_trigger_arg_is(i32* %scan_end_arg, i32 %68) #7, !dbg !8551
  %69 = load i32, i32* %err, align 4, !dbg !8552
  %or72 = or i32 %69, %call71, !dbg !8552
  store i32 %or72, i32* %err, align 4, !dbg !8552
  %70 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8553
  %stop_src73 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %70, i32 0, i32 10, !dbg !8554
  %71 = load i32, i32* %stop_src73, align 8, !dbg !8554
  switch i32 %71, label %sw.default [
    i32 64, label %sw.bb74
    i32 32, label %sw.bb75
    i32 1, label %sw.bb78
  ], !dbg !8555

sw.bb74:                                          ; preds = %if.end66
  br label %sw.epilog82, !dbg !8556

sw.bb75:                                          ; preds = %if.end66
  %72 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8558
  %stop_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %72, i32 0, i32 11, !dbg !8559
  %call76 = call i32 @comedi_check_trigger_arg_min(i32* %stop_arg, i32 1) #7, !dbg !8560
  %73 = load i32, i32* %err, align 4, !dbg !8561
  %or77 = or i32 %73, %call76, !dbg !8561
  store i32 %or77, i32* %err, align 4, !dbg !8561
  br label %sw.epilog82, !dbg !8562

sw.bb78:                                          ; preds = %if.end66
  %74 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8563
  %stop_arg79 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %74, i32 0, i32 11, !dbg !8564
  %call80 = call i32 @comedi_check_trigger_arg_is(i32* %stop_arg79, i32 0) #7, !dbg !8565
  %75 = load i32, i32* %err, align 4, !dbg !8566
  %or81 = or i32 %75, %call80, !dbg !8566
  store i32 %or81, i32* %err, align 4, !dbg !8566
  br label %sw.epilog82, !dbg !8567

sw.default:                                       ; preds = %if.end66
  br label %sw.epilog82, !dbg !8568

sw.epilog82:                                      ; preds = %sw.default, %sw.bb78, %sw.bb75, %sw.bb74
  %76 = load i32, i32* %err, align 4, !dbg !8569
  %tobool83 = icmp ne i32 %76, 0, !dbg !8569
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !8571

if.then84:                                        ; preds = %sw.epilog82
  store i32 3, i32* %retval, align 4, !dbg !8572
  br label %return, !dbg !8572

if.end85:                                         ; preds = %sw.epilog82
  %77 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8573
  %convert_src86 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %77, i32 0, i32 6, !dbg !8575
  %78 = load i32, i32* %convert_src86, align 8, !dbg !8575
  %cmp87 = icmp eq i32 %78, 16, !dbg !8576
  br i1 %cmp87, label %if.then88, label %if.end100, !dbg !8577

if.then88:                                        ; preds = %if.end85
  %79 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8578
  %convert_arg89 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %79, i32 0, i32 7, !dbg !8580
  %80 = load i32, i32* %convert_arg89, align 4, !dbg !8580
  store i32 %80, i32* %tmp_arg, align 4, !dbg !8581
  %81 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8582
  %scan_begin_arg90 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %81, i32 0, i32 5, !dbg !8583
  %82 = load i32, i32* %scan_begin_arg90, align 4, !dbg !8583
  store i32 %82, i32* %tmp_arg2, align 4, !dbg !8584
  %83 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8585
  %84 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8586
  call void @check_adc_timing(%struct.comedi_device* %83, %struct.comedi_cmd* %84) #7, !dbg !8587
  %85 = load i32, i32* %tmp_arg, align 4, !dbg !8588
  %86 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8590
  %convert_arg91 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %86, i32 0, i32 7, !dbg !8591
  %87 = load i32, i32* %convert_arg91, align 4, !dbg !8591
  %cmp92 = icmp ne i32 %85, %87, !dbg !8592
  br i1 %cmp92, label %if.then93, label %if.end94, !dbg !8593

if.then93:                                        ; preds = %if.then88
  %88 = load i32, i32* %err, align 4, !dbg !8594
  %inc = add i32 %88, 1, !dbg !8594
  store i32 %inc, i32* %err, align 4, !dbg !8594
  br label %if.end94, !dbg !8595

if.end94:                                         ; preds = %if.then93, %if.then88
  %89 = load i32, i32* %tmp_arg2, align 4, !dbg !8596
  %90 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8598
  %scan_begin_arg95 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %90, i32 0, i32 5, !dbg !8599
  %91 = load i32, i32* %scan_begin_arg95, align 4, !dbg !8599
  %cmp96 = icmp ne i32 %89, %91, !dbg !8600
  br i1 %cmp96, label %if.then97, label %if.end99, !dbg !8601

if.then97:                                        ; preds = %if.end94
  %92 = load i32, i32* %err, align 4, !dbg !8602
  %inc98 = add i32 %92, 1, !dbg !8602
  store i32 %inc98, i32* %err, align 4, !dbg !8602
  br label %if.end99, !dbg !8603

if.end99:                                         ; preds = %if.then97, %if.end94
  br label %if.end100, !dbg !8604

if.end100:                                        ; preds = %if.end99, %if.end85
  %93 = load i32, i32* %err, align 4, !dbg !8605
  %tobool101 = icmp ne i32 %93, 0, !dbg !8605
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !8607

if.then102:                                       ; preds = %if.end100
  store i32 4, i32* %retval, align 4, !dbg !8608
  br label %return, !dbg !8608

if.end103:                                        ; preds = %if.end100
  %94 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8609
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %94, i32 0, i32 12, !dbg !8611
  %95 = load i32*, i32** %chanlist, align 8, !dbg !8611
  %tobool104 = icmp ne i32* %95, null, !dbg !8609
  br i1 %tobool104, label %land.lhs.true105, label %if.end111, !dbg !8612

land.lhs.true105:                                 ; preds = %if.end103
  %96 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8613
  %chanlist_len106 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %96, i32 0, i32 13, !dbg !8614
  %97 = load i32, i32* %chanlist_len106, align 8, !dbg !8614
  %cmp107 = icmp ugt i32 %97, 0, !dbg !8615
  br i1 %cmp107, label %if.then108, label %if.end111, !dbg !8616

if.then108:                                       ; preds = %land.lhs.true105
  %98 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8617
  %99 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !8618
  %100 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8619
  %call109 = call i32 @cb_pcidas64_ai_check_chanlist(%struct.comedi_device* %98, %struct.comedi_subdevice* %99, %struct.comedi_cmd* %100) #7, !dbg !8620
  %101 = load i32, i32* %err, align 4, !dbg !8621
  %or110 = or i32 %101, %call109, !dbg !8621
  store i32 %or110, i32* %err, align 4, !dbg !8621
  br label %if.end111, !dbg !8622

if.end111:                                        ; preds = %if.then108, %land.lhs.true105, %if.end103
  %102 = load i32, i32* %err, align 4, !dbg !8623
  %tobool112 = icmp ne i32 %102, 0, !dbg !8623
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !8625

if.then113:                                       ; preds = %if.end111
  store i32 5, i32* %retval, align 4, !dbg !8626
  br label %return, !dbg !8626

if.end114:                                        ; preds = %if.end111
  store i32 0, i32* %retval, align 4, !dbg !8627
  br label %return, !dbg !8627

return:                                           ; preds = %if.end114, %if.then113, %if.then102, %if.then84, %if.then40, %if.then18
  %103 = load i32, i32* %retval, align 4, !dbg !8628
  ret i32 %103, !dbg !8628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_cancel(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !8629 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !5431, metadata !DIExpression()), !dbg !8630
  %flags.addr.i28 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i28, metadata !5438, metadata !DIExpression()), !dbg !8632
  %tmp.i29 = alloca i32, align 4
  %tmp8.i30 = alloca i32, align 4
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !5431, metadata !DIExpression()), !dbg !8633
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5438, metadata !DIExpression()), !dbg !8637
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5440, metadata !DIExpression()), !dbg !8638
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8645, metadata !DIExpression()), !dbg !8646
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !8647, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !8649, metadata !DIExpression()), !dbg !8650
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8651
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !8652
  %1 = load i8*, i8** %private, align 8, !dbg !8652
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !8651
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !8650
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8653, metadata !DIExpression()), !dbg !8654
  br label %do.body, !dbg !8655

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8656

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8657, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8660, metadata !DIExpression()), !dbg !8659
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8659
  %conv = zext i1 %cmp to i32, !dbg !8659
  store i32 1, i32* %tmp, align 4, !dbg !8659
  %3 = load i32, i32* %tmp, align 4, !dbg !8659
  br label %do.body2, !dbg !8661

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8662

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8663

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8665, metadata !DIExpression()), !dbg !8668
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8669, metadata !DIExpression()), !dbg !8668
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8668
  %conv8 = zext i1 %cmp7 to i32, !dbg !8668
  store i32 1, i32* %tmp9, align 4, !dbg !8668
  %4 = load i32, i32* %tmp9, align 4, !dbg !8668
  %call = call i64 @arch_local_irq_save() #7, !dbg !8670
  store i64 %call, i64* %flags, align 8, !dbg !8670
  br label %do.end, !dbg !8670

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8663

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8662

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8671, !srcloc !8672
  br label %do.body12, !dbg !8671

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8673
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 11, !dbg !8673
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8674
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !8675
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !8675
  br label %do.end14, !dbg !8673

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8671

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8662

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8661

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8656

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8676
  %ai_cmd_running = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %8, i32 0, i32 27, !dbg !8677
  %9 = load i16, i16* %ai_cmd_running, align 8, !dbg !8677
  %conv19 = sext i16 %9 to i32, !dbg !8676
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !8678
  br i1 %cmp20, label %if.then, label %if.end, !dbg !8679

if.then:                                          ; preds = %do.end18
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8680
  %spinlock22 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %10, i32 0, i32 11, !dbg !8681
  %11 = load i64, i64* %flags, align 8, !dbg !8682
  store %struct.spinlock* %spinlock22, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !8683
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !8683
  store i32 1, i32* %tmp.i, align 4, !dbg !8683
  %12 = load i32, i32* %tmp.i, align 4, !dbg !8683
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !8684
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !8684
  store i32 1, i32* %tmp8.i, align 4, !dbg !8684
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !8684
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !8685
  call void @arch_local_irq_restore(i64 %14) #9, !dbg !8685
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8686, !srcloc !5545
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !8687
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !8687
  %rlock.i26 = bitcast %union.anon.3* %16 to %struct.raw_spinlock*, !dbg !8687
  store i32 0, i32* %retval, align 4, !dbg !8688
  br label %return, !dbg !8688

if.end:                                           ; preds = %do.end18
  %17 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8689
  %ai_cmd_running23 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %17, i32 0, i32 27, !dbg !8690
  store i16 0, i16* %ai_cmd_running23, align 8, !dbg !8691
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8692
  %spinlock24 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %18, i32 0, i32 11, !dbg !8693
  %19 = load i64, i64* %flags, align 8, !dbg !8694
  store %struct.spinlock* %spinlock24, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %19, i64* %flags.addr.i28, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !8695
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !8695
  store i32 1, i32* %tmp.i29, align 4, !dbg !8695
  %20 = load i32, i32* %tmp.i29, align 4, !dbg !8695
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !8696
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !8696
  store i32 1, i32* %tmp8.i30, align 4, !dbg !8696
  %21 = load i32, i32* %tmp8.i30, align 4, !dbg !8696
  %22 = load i64, i64* %flags.addr.i28, align 8, !dbg !8697
  call void @arch_local_irq_restore(i64 %22) #9, !dbg !8697
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8698, !srcloc !5545
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !8699
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !8699
  %rlock.i31 = bitcast %union.anon.3* %24 to %struct.raw_spinlock*, !dbg !8699
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8700
  call void @disable_ai_pacing(%struct.comedi_device* %25) #7, !dbg !8701
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8702
  call void @abort_dma(%struct.comedi_device* %26, i32 1) #7, !dbg !8703
  store i32 0, i32* %retval, align 4, !dbg !8704
  br label %return, !dbg !8704

return:                                           ; preds = %if.end, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !8705
  ret i32 %27, !dbg !8705
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @adc_src_4020_bits(i32 %source) #2 !dbg !8706 {
entry:
  %source.addr = alloca i32, align 4
  store i32 %source, i32* %source.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source.addr, metadata !8709, metadata !DIExpression()), !dbg !8710
  %0 = load i32, i32* %source.addr, align 4, !dbg !8711
  %shl = shl i32 %0, 4, !dbg !8712
  %and = and i32 %shl, 112, !dbg !8713
  %conv = trunc i32 %and to i8, !dbg !8714
  ret i8 %conv, !dbg !8715
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @attenuate_bit(i32 %channel) #2 !dbg !8716 {
entry:
  %channel.addr = alloca i32, align 4
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8717, metadata !DIExpression()), !dbg !8718
  %0 = load i32, i32* %channel.addr, align 4, !dbg !8719
  %and = and i32 %0, 3, !dbg !8720
  %shl = shl i32 1, %and, !dbg !8721
  %conv = trunc i32 %shl to i8, !dbg !8722
  ret i8 %conv, !dbg !8723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @i2c_write(%struct.comedi_device* %dev, i32 %address, i8* %data, i32 %length) #2 !dbg !4303 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %address.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %i = alloca i32, align 4
  %bitstream = alloca i8, align 1
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8724, metadata !DIExpression()), !dbg !8725
  store i32 %address, i32* %address.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %address.addr, metadata !8726, metadata !DIExpression()), !dbg !8727
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8728, metadata !DIExpression()), !dbg !8729
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !8730, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !8732, metadata !DIExpression()), !dbg !8733
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8734
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !8735
  %1 = load i8*, i8** %private, align 8, !dbg !8735
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !8734
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !8733
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8736, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.declare(metadata i8* %bitstream, metadata !8738, metadata !DIExpression()), !dbg !8739
  %3 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8740
  %plx_control_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %3, i32 0, i32 22, !dbg !8741
  %4 = load i32, i32* %plx_control_bits, align 4, !dbg !8742
  %conv = zext i32 %4 to i64, !dbg !8742
  %and = and i64 %conv, -33554433, !dbg !8742
  %conv1 = trunc i64 %and to i32, !dbg !8742
  store i32 %conv1, i32* %plx_control_bits, align 4, !dbg !8742
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8743
  call void @i2c_stop(%struct.comedi_device* %5) #7, !dbg !8744
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8745
  call void @i2c_start(%struct.comedi_device* %6) #7, !dbg !8746
  %7 = load i32, i32* %address.addr, align 4, !dbg !8747
  %shl = shl i32 %7, 1, !dbg !8748
  %and2 = and i32 %shl, -2, !dbg !8749
  %conv3 = trunc i32 %and2 to i8, !dbg !8750
  store i8 %conv3, i8* %bitstream, align 1, !dbg !8751
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8752
  %9 = load i8, i8* %bitstream, align 1, !dbg !8753
  call void @i2c_write_byte(%struct.comedi_device* %8, i8 zeroext %9) #7, !dbg !8754
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8755
  %call = call i32 @i2c_read_ack(%struct.comedi_device* %10) #7, !dbg !8757
  %cmp = icmp ne i32 %call, 0, !dbg !8758
  br i1 %cmp, label %if.then, label %if.end, !dbg !8759

if.then:                                          ; preds = %entry
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8760
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %11, i32 0, i32 4, !dbg !8760
  %12 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !8760
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.37, i64 0, i64 0)) #8, !dbg !8760
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8762
  call void @i2c_stop(%struct.comedi_device* %13) #7, !dbg !8763
  br label %return, !dbg !8764

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8765
  br label %for.cond, !dbg !8767

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !8768
  %15 = load i32, i32* %length.addr, align 4, !dbg !8770
  %cmp5 = icmp ult i32 %14, %15, !dbg !8771
  br i1 %cmp5, label %for.body, label %for.end, !dbg !8772

for.body:                                         ; preds = %for.cond
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8773
  %17 = load i8*, i8** %data.addr, align 8, !dbg !8775
  %18 = load i32, i32* %i, align 4, !dbg !8776
  %idxprom = zext i32 %18 to i64, !dbg !8775
  %arrayidx = getelementptr i8, i8* %17, i64 %idxprom, !dbg !8775
  %19 = load i8, i8* %arrayidx, align 1, !dbg !8775
  call void @i2c_write_byte(%struct.comedi_device* %16, i8 zeroext %19) #7, !dbg !8777
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8778
  %call7 = call i32 @i2c_read_ack(%struct.comedi_device* %20) #7, !dbg !8780
  %cmp8 = icmp ne i32 %call7, 0, !dbg !8781
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !8782

if.then10:                                        ; preds = %for.body
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8783
  %class_dev11 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %21, i32 0, i32 4, !dbg !8783
  %22 = load %struct.device*, %struct.device** %class_dev11, align 8, !dbg !8783
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %22, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.37, i64 0, i64 0)) #8, !dbg !8783
  %23 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8785
  call void @i2c_stop(%struct.comedi_device* %23) #7, !dbg !8786
  br label %return, !dbg !8787

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !8788

for.inc:                                          ; preds = %if.end12
  %24 = load i32, i32* %i, align 4, !dbg !8789
  %inc = add i32 %24, 1, !dbg !8789
  store i32 %inc, i32* %i, align 4, !dbg !8789
  br label %for.cond, !dbg !8790, !llvm.loop !8791

for.end:                                          ; preds = %for.cond
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8793
  call void @i2c_stop(%struct.comedi_device* %25) #7, !dbg !8794
  br label %return, !dbg !8795

return:                                           ; preds = %for.end, %if.then10, %if.then
  ret void, !dbg !8795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ao_winsn(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !8796 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %chan = alloca i32, align 4
  %range = alloca i32, align 4
  %val = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8797, metadata !DIExpression()), !dbg !8798
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !8799, metadata !DIExpression()), !dbg !8800
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !8801, metadata !DIExpression()), !dbg !8802
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !8803, metadata !DIExpression()), !dbg !8804
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !8805, metadata !DIExpression()), !dbg !8806
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8807
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !8808
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !8808
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !8807
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !8806
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !8809, metadata !DIExpression()), !dbg !8810
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8811
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !8812
  %4 = load i8*, i8** %private, align 8, !dbg !8812
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !8811
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !8810
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !8813, metadata !DIExpression()), !dbg !8814
  %6 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !8815
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %6, i32 0, i32 4, !dbg !8815
  %7 = load i32, i32* %chanspec, align 4, !dbg !8815
  %and = and i32 %7, 65535, !dbg !8815
  store i32 %and, i32* %chan, align 4, !dbg !8814
  call void @llvm.dbg.declare(metadata i32* %range, metadata !8816, metadata !DIExpression()), !dbg !8817
  %8 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !8818
  %chanspec1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %8, i32 0, i32 4, !dbg !8818
  %9 = load i32, i32* %chanspec1, align 4, !dbg !8818
  %shr = lshr i32 %9, 16, !dbg !8818
  %and2 = and i32 %shr, 255, !dbg !8818
  store i32 %and2, i32* %range, align 4, !dbg !8817
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8819, metadata !DIExpression()), !dbg !8820
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !8821
  %readback = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %10, i32 0, i32 32, !dbg !8822
  %11 = load i32*, i32** %readback, align 8, !dbg !8822
  %12 = load i32, i32* %chan, align 4, !dbg !8823
  %idxprom = zext i32 %12 to i64, !dbg !8821
  %arrayidx = getelementptr i32, i32* %11, i64 %idxprom, !dbg !8821
  %13 = load i32, i32* %arrayidx, align 4, !dbg !8821
  store i32 %13, i32* %val, align 4, !dbg !8820
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8824, metadata !DIExpression()), !dbg !8825
  %14 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8826
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %14, i32 0, i32 3, !dbg !8827
  %15 = load i8*, i8** %main_iobase, align 8, !dbg !8827
  %add.ptr = getelementptr i8, i8* %15, i64 80, !dbg !8828
  call void @writew(i16 zeroext 0, i8* %add.ptr) #7, !dbg !8829
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8830
  %17 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8831
  %dac_control1_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %17, i32 0, i32 21, !dbg !8832
  %18 = load i32, i32* %chan, align 4, !dbg !8833
  %19 = load i32, i32* %range, align 4, !dbg !8834
  call void @set_dac_range_bits(%struct.comedi_device* %16, i16* %dac_control1_bits, i32 %18, i32 %19) #7, !dbg !8835
  %20 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8836
  %dac_control1_bits3 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %20, i32 0, i32 21, !dbg !8837
  %21 = load i16, i16* %dac_control1_bits3, align 2, !dbg !8837
  %22 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8838
  %main_iobase4 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %22, i32 0, i32 3, !dbg !8839
  %23 = load i8*, i8** %main_iobase4, align 8, !dbg !8839
  %add.ptr5 = getelementptr i8, i8* %23, i64 82, !dbg !8840
  call void @writew(i16 zeroext %21, i8* %add.ptr5) #7, !dbg !8841
  store i32 0, i32* %i, align 4, !dbg !8842
  br label %for.cond, !dbg !8844

for.cond:                                         ; preds = %for.inc, %entry
  %24 = load i32, i32* %i, align 4, !dbg !8845
  %25 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !8847
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %25, i32 0, i32 1, !dbg !8848
  %26 = load i32, i32* %n, align 4, !dbg !8848
  %cmp = icmp ult i32 %24, %26, !dbg !8849
  br i1 %cmp, label %for.body, label %for.end, !dbg !8850

for.body:                                         ; preds = %for.cond
  %27 = load i32*, i32** %data.addr, align 8, !dbg !8851
  %28 = load i32, i32* %i, align 4, !dbg !8853
  %idxprom6 = zext i32 %28 to i64, !dbg !8851
  %arrayidx7 = getelementptr i32, i32* %27, i64 %idxprom6, !dbg !8851
  %29 = load i32, i32* %arrayidx7, align 4, !dbg !8851
  store i32 %29, i32* %val, align 4, !dbg !8854
  %30 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !8855
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %30, i32 0, i32 12, !dbg !8857
  %31 = load i32, i32* %layout, align 8, !dbg !8857
  %cmp8 = icmp eq i32 %31, 2, !dbg !8858
  br i1 %cmp8, label %if.then, label %if.else, !dbg !8859

if.then:                                          ; preds = %for.body
  %32 = load i32, i32* %val, align 4, !dbg !8860
  %and9 = and i32 %32, 255, !dbg !8862
  %conv = trunc i32 %and9 to i16, !dbg !8860
  %33 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8863
  %main_iobase10 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %33, i32 0, i32 3, !dbg !8864
  %34 = load i8*, i8** %main_iobase10, align 8, !dbg !8864
  %35 = load i32, i32* %chan, align 4, !dbg !8865
  %call = call i32 @dac_lsb_4020_reg(i32 %35) #7, !dbg !8866
  %idx.ext = zext i32 %call to i64, !dbg !8867
  %add.ptr11 = getelementptr i8, i8* %34, i64 %idx.ext, !dbg !8867
  call void @writew(i16 zeroext %conv, i8* %add.ptr11) #7, !dbg !8868
  %36 = load i32, i32* %val, align 4, !dbg !8869
  %shr12 = lshr i32 %36, 8, !dbg !8870
  %and13 = and i32 %shr12, 15, !dbg !8871
  %conv14 = trunc i32 %and13 to i16, !dbg !8872
  %37 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8873
  %main_iobase15 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %37, i32 0, i32 3, !dbg !8874
  %38 = load i8*, i8** %main_iobase15, align 8, !dbg !8874
  %39 = load i32, i32* %chan, align 4, !dbg !8875
  %call16 = call i32 @dac_msb_4020_reg(i32 %39) #7, !dbg !8876
  %idx.ext17 = zext i32 %call16 to i64, !dbg !8877
  %add.ptr18 = getelementptr i8, i8* %38, i64 %idx.ext17, !dbg !8877
  call void @writew(i16 zeroext %conv14, i8* %add.ptr18) #7, !dbg !8878
  br label %if.end, !dbg !8879

if.else:                                          ; preds = %for.body
  %40 = load i32, i32* %val, align 4, !dbg !8880
  %conv19 = trunc i32 %40 to i16, !dbg !8880
  %41 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !8882
  %main_iobase20 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %41, i32 0, i32 3, !dbg !8883
  %42 = load i8*, i8** %main_iobase20, align 8, !dbg !8883
  %43 = load i32, i32* %chan, align 4, !dbg !8884
  %call21 = call i32 @dac_convert_reg(i32 %43) #7, !dbg !8885
  %idx.ext22 = zext i32 %call21 to i64, !dbg !8886
  %add.ptr23 = getelementptr i8, i8* %42, i64 %idx.ext22, !dbg !8886
  call void @writew(i16 zeroext %conv19, i8* %add.ptr23) #7, !dbg !8887
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !8888

for.inc:                                          ; preds = %if.end
  %44 = load i32, i32* %i, align 4, !dbg !8889
  %inc = add i32 %44, 1, !dbg !8889
  store i32 %inc, i32* %i, align 4, !dbg !8889
  br label %for.cond, !dbg !8890, !llvm.loop !8891

for.end:                                          ; preds = %for.cond
  %45 = load i32, i32* %val, align 4, !dbg !8893
  %46 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !8894
  %readback24 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %46, i32 0, i32 32, !dbg !8895
  %47 = load i32*, i32** %readback24, align 8, !dbg !8895
  %48 = load i32, i32* %chan, align 4, !dbg !8896
  %idxprom25 = zext i32 %48 to i64, !dbg !8894
  %arrayidx26 = getelementptr i32, i32* %47, i64 %idxprom25, !dbg !8894
  store i32 %45, i32* %arrayidx26, align 4, !dbg !8897
  %49 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !8898
  %n27 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %49, i32 0, i32 1, !dbg !8899
  %50 = load i32, i32* %n27, align 4, !dbg !8899
  ret i32 %50, !dbg !8900
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_alloc_subdev_readback(%struct.comedi_subdevice*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ao_cmdtest(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_cmd* %cmd) #2 !dbg !8901 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %err = alloca i32, align 4
  %tmp_arg = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8902, metadata !DIExpression()), !dbg !8903
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !8904, metadata !DIExpression()), !dbg !8905
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !8906, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !8908, metadata !DIExpression()), !dbg !8909
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8910
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !8911
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !8911
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !8910
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !8909
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8912, metadata !DIExpression()), !dbg !8913
  store i32 0, i32* %err, align 4, !dbg !8913
  call void @llvm.dbg.declare(metadata i32* %tmp_arg, metadata !8914, metadata !DIExpression()), !dbg !8915
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8916
  %start_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %3, i32 0, i32 2, !dbg !8917
  %call = call i32 @comedi_check_trigger_src(i32* %start_src, i32 192) #7, !dbg !8918
  %4 = load i32, i32* %err, align 4, !dbg !8919
  %or = or i32 %4, %call, !dbg !8919
  store i32 %or, i32* %err, align 4, !dbg !8919
  %5 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8920
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %5, i32 0, i32 4, !dbg !8921
  %call1 = call i32 @comedi_check_trigger_src(i32* %scan_begin_src, i32 80) #7, !dbg !8922
  %6 = load i32, i32* %err, align 4, !dbg !8923
  %or2 = or i32 %6, %call1, !dbg !8923
  store i32 %or2, i32* %err, align 4, !dbg !8923
  %7 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8924
  %convert_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %7, i32 0, i32 6, !dbg !8925
  %call3 = call i32 @comedi_check_trigger_src(i32* %convert_src, i32 2) #7, !dbg !8926
  %8 = load i32, i32* %err, align 4, !dbg !8927
  %or4 = or i32 %8, %call3, !dbg !8927
  store i32 %or4, i32* %err, align 4, !dbg !8927
  %9 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8928
  %scan_end_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %9, i32 0, i32 8, !dbg !8929
  %call5 = call i32 @comedi_check_trigger_src(i32* %scan_end_src, i32 32) #7, !dbg !8930
  %10 = load i32, i32* %err, align 4, !dbg !8931
  %or6 = or i32 %10, %call5, !dbg !8931
  store i32 %or6, i32* %err, align 4, !dbg !8931
  %11 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8932
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %11, i32 0, i32 10, !dbg !8933
  %call7 = call i32 @comedi_check_trigger_src(i32* %stop_src, i32 1) #7, !dbg !8934
  %12 = load i32, i32* %err, align 4, !dbg !8935
  %or8 = or i32 %12, %call7, !dbg !8935
  store i32 %or8, i32* %err, align 4, !dbg !8935
  %13 = load i32, i32* %err, align 4, !dbg !8936
  %tobool = icmp ne i32 %13, 0, !dbg !8936
  br i1 %tobool, label %if.then, label %if.end, !dbg !8938

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8939
  br label %return, !dbg !8939

if.end:                                           ; preds = %entry
  %14 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8940
  %start_src9 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %14, i32 0, i32 2, !dbg !8941
  %15 = load i32, i32* %start_src9, align 8, !dbg !8941
  %call10 = call i32 @comedi_check_trigger_is_unique(i32 %15) #7, !dbg !8942
  %16 = load i32, i32* %err, align 4, !dbg !8943
  %or11 = or i32 %16, %call10, !dbg !8943
  store i32 %or11, i32* %err, align 4, !dbg !8943
  %17 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8944
  %scan_begin_src12 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %17, i32 0, i32 4, !dbg !8945
  %18 = load i32, i32* %scan_begin_src12, align 8, !dbg !8945
  %call13 = call i32 @comedi_check_trigger_is_unique(i32 %18) #7, !dbg !8946
  %19 = load i32, i32* %err, align 4, !dbg !8947
  %or14 = or i32 %19, %call13, !dbg !8947
  store i32 %or14, i32* %err, align 4, !dbg !8947
  %20 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8948
  %convert_src15 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %20, i32 0, i32 6, !dbg !8950
  %21 = load i32, i32* %convert_src15, align 8, !dbg !8950
  %cmp = icmp eq i32 %21, 64, !dbg !8951
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !8952

land.lhs.true:                                    ; preds = %if.end
  %22 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8953
  %scan_begin_src16 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %22, i32 0, i32 4, !dbg !8954
  %23 = load i32, i32* %scan_begin_src16, align 8, !dbg !8954
  %cmp17 = icmp eq i32 %23, 16, !dbg !8955
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !8956

if.then18:                                        ; preds = %land.lhs.true
  %24 = load i32, i32* %err, align 4, !dbg !8957
  %or19 = or i32 %24, -22, !dbg !8957
  store i32 %or19, i32* %err, align 4, !dbg !8957
  br label %if.end20, !dbg !8958

if.end20:                                         ; preds = %if.then18, %land.lhs.true, %if.end
  %25 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8959
  %stop_src21 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %25, i32 0, i32 10, !dbg !8961
  %26 = load i32, i32* %stop_src21, align 8, !dbg !8961
  %cmp22 = icmp ne i32 %26, 32, !dbg !8962
  br i1 %cmp22, label %land.lhs.true23, label %if.end31, !dbg !8963

land.lhs.true23:                                  ; preds = %if.end20
  %27 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8964
  %stop_src24 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %27, i32 0, i32 10, !dbg !8965
  %28 = load i32, i32* %stop_src24, align 8, !dbg !8965
  %cmp25 = icmp ne i32 %28, 1, !dbg !8966
  br i1 %cmp25, label %land.lhs.true26, label %if.end31, !dbg !8967

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %29 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8968
  %stop_src27 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %29, i32 0, i32 10, !dbg !8969
  %30 = load i32, i32* %stop_src27, align 8, !dbg !8969
  %cmp28 = icmp ne i32 %30, 64, !dbg !8970
  br i1 %cmp28, label %if.then29, label %if.end31, !dbg !8971

if.then29:                                        ; preds = %land.lhs.true26
  %31 = load i32, i32* %err, align 4, !dbg !8972
  %or30 = or i32 %31, -22, !dbg !8972
  store i32 %or30, i32* %err, align 4, !dbg !8972
  br label %if.end31, !dbg !8973

if.end31:                                         ; preds = %if.then29, %land.lhs.true26, %land.lhs.true23, %if.end20
  %32 = load i32, i32* %err, align 4, !dbg !8974
  %tobool32 = icmp ne i32 %32, 0, !dbg !8974
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !8976

if.then33:                                        ; preds = %if.end31
  store i32 2, i32* %retval, align 4, !dbg !8977
  br label %return, !dbg !8977

if.end34:                                         ; preds = %if.end31
  %33 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8978
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %33, i32 0, i32 3, !dbg !8979
  %call35 = call i32 @comedi_check_trigger_arg_is(i32* %start_arg, i32 0) #7, !dbg !8980
  %34 = load i32, i32* %err, align 4, !dbg !8981
  %or36 = or i32 %34, %call35, !dbg !8981
  store i32 %or36, i32* %err, align 4, !dbg !8981
  %35 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8982
  %scan_begin_src37 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %35, i32 0, i32 4, !dbg !8984
  %36 = load i32, i32* %scan_begin_src37, align 8, !dbg !8984
  %cmp38 = icmp eq i32 %36, 16, !dbg !8985
  br i1 %cmp38, label %if.then39, label %if.end49, !dbg !8986

if.then39:                                        ; preds = %if.end34
  %37 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8987
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %37, i32 0, i32 5, !dbg !8989
  %38 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !8990
  %ao_scan_speed = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %38, i32 0, i32 8, !dbg !8991
  %39 = load i32, i32* %ao_scan_speed, align 8, !dbg !8991
  %call40 = call i32 @comedi_check_trigger_arg_min(i32* %scan_begin_arg, i32 %39) #7, !dbg !8992
  %40 = load i32, i32* %err, align 4, !dbg !8993
  %or41 = or i32 %40, %call40, !dbg !8993
  store i32 %or41, i32* %err, align 4, !dbg !8993
  %41 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8994
  %scan_begin_arg42 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %41, i32 0, i32 5, !dbg !8996
  %42 = load i32, i32* %scan_begin_arg42, align 4, !dbg !8996
  %43 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8997
  %flags = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %43, i32 0, i32 1, !dbg !8998
  %44 = load i32, i32* %flags, align 4, !dbg !8998
  %call43 = call i32 @get_ao_divisor(i32 %42, i32 %44) #7, !dbg !8999
  %cmp44 = icmp ugt i32 %call43, 16777215, !dbg !9000
  br i1 %cmp44, label %if.then45, label %if.end48, !dbg !9001

if.then45:                                        ; preds = %if.then39
  %45 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9002
  %scan_begin_arg46 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %45, i32 0, i32 5, !dbg !9004
  store i32 419430425, i32* %scan_begin_arg46, align 4, !dbg !9005
  %46 = load i32, i32* %err, align 4, !dbg !9006
  %or47 = or i32 %46, -22, !dbg !9006
  store i32 %or47, i32* %err, align 4, !dbg !9006
  br label %if.end48, !dbg !9007

if.end48:                                         ; preds = %if.then45, %if.then39
  br label %if.end49, !dbg !9008

if.end49:                                         ; preds = %if.end48, %if.end34
  %47 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9009
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %47, i32 0, i32 13, !dbg !9010
  %call50 = call i32 @comedi_check_trigger_arg_min(i32* %chanlist_len, i32 1) #7, !dbg !9011
  %48 = load i32, i32* %err, align 4, !dbg !9012
  %or51 = or i32 %48, %call50, !dbg !9012
  store i32 %or51, i32* %err, align 4, !dbg !9012
  %49 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9013
  %scan_end_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %49, i32 0, i32 9, !dbg !9014
  %50 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9015
  %chanlist_len52 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %50, i32 0, i32 13, !dbg !9016
  %51 = load i32, i32* %chanlist_len52, align 8, !dbg !9016
  %call53 = call i32 @comedi_check_trigger_arg_is(i32* %scan_end_arg, i32 %51) #7, !dbg !9017
  %52 = load i32, i32* %err, align 4, !dbg !9018
  %or54 = or i32 %52, %call53, !dbg !9018
  store i32 %or54, i32* %err, align 4, !dbg !9018
  %53 = load i32, i32* %err, align 4, !dbg !9019
  %tobool55 = icmp ne i32 %53, 0, !dbg !9019
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !9021

if.then56:                                        ; preds = %if.end49
  store i32 3, i32* %retval, align 4, !dbg !9022
  br label %return, !dbg !9022

if.end57:                                         ; preds = %if.end49
  %54 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9023
  %scan_begin_src58 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %54, i32 0, i32 4, !dbg !9025
  %55 = load i32, i32* %scan_begin_src58, align 8, !dbg !9025
  %cmp59 = icmp eq i32 %55, 16, !dbg !9026
  br i1 %cmp59, label %if.then60, label %if.end70, !dbg !9027

if.then60:                                        ; preds = %if.end57
  %56 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9028
  %scan_begin_arg61 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %56, i32 0, i32 5, !dbg !9030
  %57 = load i32, i32* %scan_begin_arg61, align 4, !dbg !9030
  store i32 %57, i32* %tmp_arg, align 4, !dbg !9031
  %58 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9032
  %scan_begin_arg62 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %58, i32 0, i32 5, !dbg !9033
  %59 = load i32, i32* %scan_begin_arg62, align 4, !dbg !9033
  %60 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9034
  %flags63 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %60, i32 0, i32 1, !dbg !9035
  %61 = load i32, i32* %flags63, align 4, !dbg !9035
  %call64 = call i32 @get_divisor(i32 %59, i32 %61) #7, !dbg !9036
  %mul = mul i32 %call64, 25, !dbg !9037
  %62 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9038
  %scan_begin_arg65 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %62, i32 0, i32 5, !dbg !9039
  store i32 %mul, i32* %scan_begin_arg65, align 4, !dbg !9040
  %63 = load i32, i32* %tmp_arg, align 4, !dbg !9041
  %64 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9043
  %scan_begin_arg66 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %64, i32 0, i32 5, !dbg !9044
  %65 = load i32, i32* %scan_begin_arg66, align 4, !dbg !9044
  %cmp67 = icmp ne i32 %63, %65, !dbg !9045
  br i1 %cmp67, label %if.then68, label %if.end69, !dbg !9046

if.then68:                                        ; preds = %if.then60
  %66 = load i32, i32* %err, align 4, !dbg !9047
  %inc = add i32 %66, 1, !dbg !9047
  store i32 %inc, i32* %err, align 4, !dbg !9047
  br label %if.end69, !dbg !9048

if.end69:                                         ; preds = %if.then68, %if.then60
  br label %if.end70, !dbg !9049

if.end70:                                         ; preds = %if.end69, %if.end57
  %67 = load i32, i32* %err, align 4, !dbg !9050
  %tobool71 = icmp ne i32 %67, 0, !dbg !9050
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !9052

if.then72:                                        ; preds = %if.end70
  store i32 4, i32* %retval, align 4, !dbg !9053
  br label %return, !dbg !9053

if.end73:                                         ; preds = %if.end70
  %68 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9054
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %68, i32 0, i32 12, !dbg !9056
  %69 = load i32*, i32** %chanlist, align 8, !dbg !9056
  %tobool74 = icmp ne i32* %69, null, !dbg !9054
  br i1 %tobool74, label %land.lhs.true75, label %if.end81, !dbg !9057

land.lhs.true75:                                  ; preds = %if.end73
  %70 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9058
  %chanlist_len76 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %70, i32 0, i32 13, !dbg !9059
  %71 = load i32, i32* %chanlist_len76, align 8, !dbg !9059
  %cmp77 = icmp ugt i32 %71, 0, !dbg !9060
  br i1 %cmp77, label %if.then78, label %if.end81, !dbg !9061

if.then78:                                        ; preds = %land.lhs.true75
  %72 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9062
  %73 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9063
  %74 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9064
  %call79 = call i32 @cb_pcidas64_ao_check_chanlist(%struct.comedi_device* %72, %struct.comedi_subdevice* %73, %struct.comedi_cmd* %74) #7, !dbg !9065
  %75 = load i32, i32* %err, align 4, !dbg !9066
  %or80 = or i32 %75, %call79, !dbg !9066
  store i32 %or80, i32* %err, align 4, !dbg !9066
  br label %if.end81, !dbg !9067

if.end81:                                         ; preds = %if.then78, %land.lhs.true75, %if.end73
  %76 = load i32, i32* %err, align 4, !dbg !9068
  %tobool82 = icmp ne i32 %76, 0, !dbg !9068
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !9070

if.then83:                                        ; preds = %if.end81
  store i32 5, i32* %retval, align 4, !dbg !9071
  br label %return, !dbg !9071

if.end84:                                         ; preds = %if.end81
  store i32 0, i32* %retval, align 4, !dbg !9072
  br label %return, !dbg !9072

return:                                           ; preds = %if.end84, %if.then83, %if.then72, %if.then56, %if.then33, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !9073
  ret i32 %77, !dbg !9073
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ao_cmd(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !9074 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %cmd = alloca %struct.comedi_cmd*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9075, metadata !DIExpression()), !dbg !9076
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9077, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !9079, metadata !DIExpression()), !dbg !9080
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9081
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !9082
  %1 = load i8*, i8** %private, align 8, !dbg !9082
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !9081
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !9080
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !9083, metadata !DIExpression()), !dbg !9084
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9085
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 7, !dbg !9086
  %4 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9086
  %cmd1 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %4, i32 0, i32 17, !dbg !9087
  store %struct.comedi_cmd* %cmd1, %struct.comedi_cmd** %cmd, align 8, !dbg !9084
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9088
  %call = call i32 @external_ai_queue_in_use(%struct.comedi_device* %5) #7, !dbg !9090
  %tobool = icmp ne i32 %call, 0, !dbg !9090
  br i1 %tobool, label %if.then, label %if.end, !dbg !9091

if.then:                                          ; preds = %entry
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9092
  call void @warn_external_queue(%struct.comedi_device* %6) #7, !dbg !9094
  store i32 -16, i32* %retval, align 4, !dbg !9095
  br label %return, !dbg !9095

if.end:                                           ; preds = %entry
  %7 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9096
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %7, i32 0, i32 3, !dbg !9097
  %8 = load i8*, i8** %main_iobase, align 8, !dbg !9097
  %add.ptr = getelementptr i8, i8* %8, i64 80, !dbg !9098
  call void @writew(i16 zeroext 0, i8* %add.ptr) #7, !dbg !9099
  %9 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9100
  %ao_dma_index = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %9, i32 0, i32 15, !dbg !9101
  store i32 0, i32* %ao_dma_index, align 8, !dbg !9102
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9103
  %11 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9104
  call void @set_dac_select_reg(%struct.comedi_device* %10, %struct.comedi_cmd* %11) #7, !dbg !9105
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9106
  %13 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9107
  call void @set_dac_interval_regs(%struct.comedi_device* %12, %struct.comedi_cmd* %13) #7, !dbg !9108
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9109
  %15 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9110
  %ao_dma_desc_bus_addr = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %15, i32 0, i32 14, !dbg !9111
  %16 = load i64, i64* %ao_dma_desc_bus_addr, align 8, !dbg !9111
  %or = or i64 %16, 1, !dbg !9112
  %or2 = or i64 %or, 4, !dbg !9113
  %conv = trunc i64 %or2 to i32, !dbg !9110
  call void @load_first_dma_descriptor(%struct.comedi_device* %14, i32 0, i32 %conv) #7, !dbg !9114
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9115
  %18 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9116
  call void @set_dac_control1_reg(%struct.comedi_device* %17, %struct.comedi_cmd* %18) #7, !dbg !9117
  %19 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9118
  %async3 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %19, i32 0, i32 7, !dbg !9119
  %20 = load %struct.comedi_async*, %struct.comedi_async** %async3, align 8, !dbg !9119
  %inttrig = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %20, i32 0, i32 20, !dbg !9120
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* @ao_inttrig, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig, align 8, !dbg !9121
  store i32 0, i32* %retval, align 4, !dbg !9122
  br label %return, !dbg !9122

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !9123
  ret i32 %21, !dbg !9123
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ao_cancel(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !9124 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9125, metadata !DIExpression()), !dbg !9126
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9127, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !9129, metadata !DIExpression()), !dbg !9130
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9131
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !9132
  %1 = load i8*, i8** %private, align 8, !dbg !9132
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !9131
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !9130
  %3 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9133
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %3, i32 0, i32 3, !dbg !9134
  %4 = load i8*, i8** %main_iobase, align 8, !dbg !9134
  %add.ptr = getelementptr i8, i8* %4, i64 80, !dbg !9135
  call void @writew(i16 zeroext 0, i8* %add.ptr) #7, !dbg !9136
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9137
  call void @abort_dma(%struct.comedi_device* %5, i32 0) #7, !dbg !9138
  ret i32 0, !dbg !9139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @di_rbits(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !9140 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %bits = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9141, metadata !DIExpression()), !dbg !9142
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9143, metadata !DIExpression()), !dbg !9144
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !9145, metadata !DIExpression()), !dbg !9146
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9147, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !9149, metadata !DIExpression()), !dbg !9150
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9151
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 17, !dbg !9152
  %1 = load i8*, i8** %mmio, align 8, !dbg !9152
  %add.ptr = getelementptr i8, i8* %1, i64 40, !dbg !9153
  %call = call zeroext i8 @readb(i8* %add.ptr) #7, !dbg !9154
  %conv = zext i8 %call to i32, !dbg !9154
  store i32 %conv, i32* %bits, align 4, !dbg !9155
  %2 = load i32, i32* %bits, align 4, !dbg !9156
  %and = and i32 %2, 15, !dbg !9156
  store i32 %and, i32* %bits, align 4, !dbg !9156
  %3 = load i32, i32* %bits, align 4, !dbg !9157
  %4 = load i32*, i32** %data.addr, align 8, !dbg !9158
  %arrayidx = getelementptr i32, i32* %4, i64 1, !dbg !9158
  store i32 %3, i32* %arrayidx, align 4, !dbg !9159
  %5 = load i32*, i32** %data.addr, align 8, !dbg !9160
  %arrayidx1 = getelementptr i32, i32* %5, i64 0, !dbg !9160
  store i32 0, i32* %arrayidx1, align 4, !dbg !9161
  %6 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9162
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %6, i32 0, i32 1, !dbg !9163
  %7 = load i32, i32* %n, align 4, !dbg !9163
  ret i32 %7, !dbg !9164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_wbits(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !9165 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9166, metadata !DIExpression()), !dbg !9167
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9168, metadata !DIExpression()), !dbg !9169
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !9170, metadata !DIExpression()), !dbg !9171
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9172, metadata !DIExpression()), !dbg !9173
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9174
  %1 = load i32*, i32** %data.addr, align 8, !dbg !9176
  %call = call i32 @comedi_dio_update_state(%struct.comedi_subdevice* %0, i32* %1) #7, !dbg !9177
  %tobool = icmp ne i32 %call, 0, !dbg !9177
  br i1 %tobool, label %if.then, label %if.end, !dbg !9178

if.then:                                          ; preds = %entry
  %2 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9179
  %state = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %2, i32 0, i32 29, !dbg !9180
  %3 = load i32, i32* %state, align 4, !dbg !9180
  %conv = trunc i32 %3 to i8, !dbg !9179
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9181
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 17, !dbg !9182
  %5 = load i8*, i8** %mmio, align 8, !dbg !9182
  %add.ptr = getelementptr i8, i8* %5, i64 32, !dbg !9183
  call void @writeb(i8 zeroext %conv, i8* %add.ptr) #7, !dbg !9184
  br label %if.end, !dbg !9184

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9185
  %state1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i32 0, i32 29, !dbg !9186
  %7 = load i32, i32* %state1, align 4, !dbg !9186
  %8 = load i32*, i32** %data.addr, align 8, !dbg !9187
  %arrayidx = getelementptr i32, i32* %8, i64 1, !dbg !9187
  store i32 %7, i32* %arrayidx, align 4, !dbg !9188
  %9 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9189
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %9, i32 0, i32 1, !dbg !9190
  %10 = load i32, i32* %n, align 4, !dbg !9190
  ret i32 %10, !dbg !9191
}

; Function Attrs: noredzone
declare dso_local i32 @subdev_8255_init(%struct.comedi_device*, %struct.comedi_subdevice*, i32 (%struct.comedi_device*, i32, i32, i32, i64)*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dio_callback_4020(%struct.comedi_device* %dev, i32 %dir, i32 %port, i32 %data, i64 %iobase) #2 !dbg !9192 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %dir.addr = alloca i32, align 4
  %port.addr = alloca i32, align 4
  %data.addr = alloca i32, align 4
  %iobase.addr = alloca i64, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9195, metadata !DIExpression()), !dbg !9196
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !9197, metadata !DIExpression()), !dbg !9198
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9199, metadata !DIExpression()), !dbg !9200
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !9201, metadata !DIExpression()), !dbg !9202
  store i64 %iobase, i64* %iobase.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iobase.addr, metadata !9203, metadata !DIExpression()), !dbg !9204
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !9205, metadata !DIExpression()), !dbg !9206
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9207
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !9208
  %1 = load i8*, i8** %private, align 8, !dbg !9208
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !9207
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !9206
  %3 = load i32, i32* %dir.addr, align 4, !dbg !9209
  %tobool = icmp ne i32 %3, 0, !dbg !9209
  br i1 %tobool, label %if.then, label %if.end, !dbg !9211

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %data.addr, align 4, !dbg !9212
  %conv = trunc i32 %4 to i16, !dbg !9212
  %5 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9214
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %5, i32 0, i32 3, !dbg !9215
  %6 = load i8*, i8** %main_iobase, align 8, !dbg !9215
  %7 = load i64, i64* %iobase.addr, align 8, !dbg !9216
  %add.ptr = getelementptr i8, i8* %6, i64 %7, !dbg !9217
  %8 = load i32, i32* %port.addr, align 4, !dbg !9218
  %mul = mul i32 2, %8, !dbg !9219
  %idx.ext = sext i32 %mul to i64, !dbg !9220
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !9220
  call void @writew(i16 zeroext %conv, i8* %add.ptr1) #7, !dbg !9221
  store i32 0, i32* %retval, align 4, !dbg !9222
  br label %return, !dbg !9222

if.end:                                           ; preds = %entry
  %9 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9223
  %main_iobase2 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %9, i32 0, i32 3, !dbg !9224
  %10 = load i8*, i8** %main_iobase2, align 8, !dbg !9224
  %11 = load i64, i64* %iobase.addr, align 8, !dbg !9225
  %add.ptr3 = getelementptr i8, i8* %10, i64 %11, !dbg !9226
  %12 = load i32, i32* %port.addr, align 4, !dbg !9227
  %mul4 = mul i32 2, %12, !dbg !9228
  %idx.ext5 = sext i32 %mul4 to i64, !dbg !9229
  %add.ptr6 = getelementptr i8, i8* %add.ptr3, i64 %idx.ext5, !dbg !9229
  %call = call zeroext i16 @readw(i8* %add.ptr6) #7, !dbg !9230
  %conv7 = zext i16 %call to i32, !dbg !9230
  store i32 %conv7, i32* %retval, align 4, !dbg !9231
  br label %return, !dbg !9231

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !9232
  ret i32 %13, !dbg !9232
}

; Function Attrs: noredzone
declare dso_local i32 @subdev_8255_mm_init(%struct.comedi_device*, %struct.comedi_subdevice*, i32 (%struct.comedi_device*, i32, i32, i32, i64)*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dio_60xx_config_insn(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !9233 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9234, metadata !DIExpression()), !dbg !9235
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9236, metadata !DIExpression()), !dbg !9237
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !9238, metadata !DIExpression()), !dbg !9239
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9240, metadata !DIExpression()), !dbg !9241
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9242, metadata !DIExpression()), !dbg !9243
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9244
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9245
  %2 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9246
  %3 = load i32*, i32** %data.addr, align 8, !dbg !9247
  %call = call i32 @comedi_dio_insn_config(%struct.comedi_device* %0, %struct.comedi_subdevice* %1, %struct.comedi_insn* %2, i32* %3, i32 0) #7, !dbg !9248
  store i32 %call, i32* %ret, align 4, !dbg !9249
  %4 = load i32, i32* %ret, align 4, !dbg !9250
  %tobool = icmp ne i32 %4, 0, !dbg !9250
  br i1 %tobool, label %if.then, label %if.end, !dbg !9252

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !9253
  store i32 %5, i32* %retval, align 4, !dbg !9254
  br label %return, !dbg !9254

if.end:                                           ; preds = %entry
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9255
  %io_bits = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i32 0, i32 12, !dbg !9256
  %7 = load i32, i32* %io_bits, align 4, !dbg !9256
  %conv = trunc i32 %7 to i8, !dbg !9255
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9257
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 17, !dbg !9258
  %9 = load i8*, i8** %mmio, align 8, !dbg !9258
  %add.ptr = getelementptr i8, i8* %9, i64 64, !dbg !9259
  call void @writeb(i8 zeroext %conv, i8* %add.ptr) #7, !dbg !9260
  %10 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9261
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %10, i32 0, i32 1, !dbg !9262
  %11 = load i32, i32* %n, align 4, !dbg !9262
  store i32 %11, i32* %retval, align 4, !dbg !9263
  br label %return, !dbg !9263

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !9264
  ret i32 %12, !dbg !9264
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dio_60xx_wbits(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !9265 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9266, metadata !DIExpression()), !dbg !9267
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9268, metadata !DIExpression()), !dbg !9269
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !9270, metadata !DIExpression()), !dbg !9271
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9272, metadata !DIExpression()), !dbg !9273
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9274
  %1 = load i32*, i32** %data.addr, align 8, !dbg !9276
  %call = call i32 @comedi_dio_update_state(%struct.comedi_subdevice* %0, i32* %1) #7, !dbg !9277
  %tobool = icmp ne i32 %call, 0, !dbg !9277
  br i1 %tobool, label %if.then, label %if.end, !dbg !9278

if.then:                                          ; preds = %entry
  %2 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9279
  %state = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %2, i32 0, i32 29, !dbg !9280
  %3 = load i32, i32* %state, align 4, !dbg !9280
  %conv = trunc i32 %3 to i8, !dbg !9279
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9281
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 17, !dbg !9282
  %5 = load i8*, i8** %mmio, align 8, !dbg !9282
  %add.ptr = getelementptr i8, i8* %5, i64 72, !dbg !9283
  call void @writeb(i8 zeroext %conv, i8* %add.ptr) #7, !dbg !9284
  br label %if.end, !dbg !9284

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9285
  %mmio1 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 17, !dbg !9286
  %7 = load i8*, i8** %mmio1, align 8, !dbg !9286
  %add.ptr2 = getelementptr i8, i8* %7, i64 72, !dbg !9287
  %call3 = call zeroext i8 @readb(i8* %add.ptr2) #7, !dbg !9288
  %conv4 = zext i8 %call3 to i32, !dbg !9288
  %8 = load i32*, i32** %data.addr, align 8, !dbg !9289
  %arrayidx = getelementptr i32, i32* %8, i64 1, !dbg !9289
  store i32 %conv4, i32* %arrayidx, align 4, !dbg !9290
  %9 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9291
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %9, i32 0, i32 1, !dbg !9292
  %10 = load i32, i32* %n, align 4, !dbg !9292
  ret i32 %10, !dbg !9293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cb_pcidas64_calib_insn_write(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !9294 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %chan = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9295, metadata !DIExpression()), !dbg !9296
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9297, metadata !DIExpression()), !dbg !9298
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !9299, metadata !DIExpression()), !dbg !9300
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9301, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !9303, metadata !DIExpression()), !dbg !9304
  %0 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9305
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %0, i32 0, i32 4, !dbg !9305
  %1 = load i32, i32* %chanspec, align 4, !dbg !9305
  %and = and i32 %1, 65535, !dbg !9305
  store i32 %and, i32* %chan, align 4, !dbg !9304
  %2 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9306
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %2, i32 0, i32 1, !dbg !9308
  %3 = load i32, i32* %n, align 4, !dbg !9308
  %tobool = icmp ne i32 %3, 0, !dbg !9306
  br i1 %tobool, label %if.then, label %if.end8, !dbg !9309

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9310, metadata !DIExpression()), !dbg !9312
  %4 = load i32*, i32** %data.addr, align 8, !dbg !9313
  %5 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9314
  %n1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %5, i32 0, i32 1, !dbg !9315
  %6 = load i32, i32* %n1, align 4, !dbg !9315
  %sub = sub i32 %6, 1, !dbg !9316
  %idxprom = zext i32 %sub to i64, !dbg !9313
  %arrayidx = getelementptr i32, i32* %4, i64 %idxprom, !dbg !9313
  %7 = load i32, i32* %arrayidx, align 4, !dbg !9313
  store i32 %7, i32* %val, align 4, !dbg !9312
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9317
  %readback = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i32 0, i32 32, !dbg !9319
  %9 = load i32*, i32** %readback, align 8, !dbg !9319
  %10 = load i32, i32* %chan, align 4, !dbg !9320
  %idxprom2 = zext i32 %10 to i64, !dbg !9317
  %arrayidx3 = getelementptr i32, i32* %9, i64 %idxprom2, !dbg !9317
  %11 = load i32, i32* %arrayidx3, align 4, !dbg !9317
  %12 = load i32, i32* %val, align 4, !dbg !9321
  %cmp = icmp ne i32 %11, %12, !dbg !9322
  br i1 %cmp, label %if.then4, label %if.end, !dbg !9323

if.then4:                                         ; preds = %if.then
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9324
  %14 = load i32, i32* %chan, align 4, !dbg !9326
  %15 = load i32, i32* %val, align 4, !dbg !9327
  call void @caldac_write(%struct.comedi_device* %13, i32 %14, i32 %15) #7, !dbg !9328
  %16 = load i32, i32* %val, align 4, !dbg !9329
  %17 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9330
  %readback5 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %17, i32 0, i32 32, !dbg !9331
  %18 = load i32*, i32** %readback5, align 8, !dbg !9331
  %19 = load i32, i32* %chan, align 4, !dbg !9332
  %idxprom6 = zext i32 %19 to i64, !dbg !9330
  %arrayidx7 = getelementptr i32, i32* %18, i64 %idxprom6, !dbg !9330
  store i32 %16, i32* %arrayidx7, align 4, !dbg !9333
  br label %if.end, !dbg !9334

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end8, !dbg !9335

if.end8:                                          ; preds = %if.end, %entry
  %20 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9336
  %n9 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %20, i32 0, i32 1, !dbg !9337
  %21 = load i32, i32* %n9, align 4, !dbg !9337
  ret i32 %21, !dbg !9338
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @caldac_write(%struct.comedi_device* %dev, i32 %channel, i32 %value) #2 !dbg !9339 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %channel.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %board = alloca %struct.pcidas64_board*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9340, metadata !DIExpression()), !dbg !9341
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !9342, metadata !DIExpression()), !dbg !9343
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9344, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !9346, metadata !DIExpression()), !dbg !9347
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9348
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !9349
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !9349
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !9348
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !9347
  %3 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !9350
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %3, i32 0, i32 12, !dbg !9351
  %4 = load i32, i32* %layout, align 8, !dbg !9351
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
  ], !dbg !9352

sw.bb:                                            ; preds = %entry, %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9353
  %6 = load i32, i32* %channel.addr, align 4, !dbg !9355
  %7 = load i32, i32* %value.addr, align 4, !dbg !9356
  %conv = trunc i32 %7 to i8, !dbg !9356
  %call = call i32 @caldac_8800_write(%struct.comedi_device* %5, i32 %6, i8 zeroext %conv) #7, !dbg !9357
  br label %sw.epilog, !dbg !9358

sw.bb1:                                           ; preds = %entry
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9359
  %9 = load i32, i32* %channel.addr, align 4, !dbg !9360
  %10 = load i32, i32* %value.addr, align 4, !dbg !9361
  %call2 = call i32 @caldac_i2c_write(%struct.comedi_device* %8, i32 %9, i32 %10) #7, !dbg !9362
  br label %sw.epilog, !dbg !9363

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9364

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  ret void, !dbg !9365
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cb_pcidas64_ad8402_insn_write(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !9366 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %chan = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9367, metadata !DIExpression()), !dbg !9368
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9369, metadata !DIExpression()), !dbg !9370
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !9371, metadata !DIExpression()), !dbg !9372
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9373, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !9375, metadata !DIExpression()), !dbg !9376
  %0 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9377
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %0, i32 0, i32 4, !dbg !9377
  %1 = load i32, i32* %chanspec, align 4, !dbg !9377
  %and = and i32 %1, 65535, !dbg !9377
  store i32 %and, i32* %chan, align 4, !dbg !9376
  %2 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9378
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %2, i32 0, i32 1, !dbg !9380
  %3 = load i32, i32* %n, align 4, !dbg !9380
  %tobool = icmp ne i32 %3, 0, !dbg !9378
  br i1 %tobool, label %if.then, label %if.end8, !dbg !9381

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9382, metadata !DIExpression()), !dbg !9384
  %4 = load i32*, i32** %data.addr, align 8, !dbg !9385
  %5 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9386
  %n1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %5, i32 0, i32 1, !dbg !9387
  %6 = load i32, i32* %n1, align 4, !dbg !9387
  %sub = sub i32 %6, 1, !dbg !9388
  %idxprom = zext i32 %sub to i64, !dbg !9385
  %arrayidx = getelementptr i32, i32* %4, i64 %idxprom, !dbg !9385
  %7 = load i32, i32* %arrayidx, align 4, !dbg !9385
  store i32 %7, i32* %val, align 4, !dbg !9384
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9389
  %readback = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i32 0, i32 32, !dbg !9391
  %9 = load i32*, i32** %readback, align 8, !dbg !9391
  %10 = load i32, i32* %chan, align 4, !dbg !9392
  %idxprom2 = zext i32 %10 to i64, !dbg !9389
  %arrayidx3 = getelementptr i32, i32* %9, i64 %idxprom2, !dbg !9389
  %11 = load i32, i32* %arrayidx3, align 4, !dbg !9389
  %12 = load i32, i32* %val, align 4, !dbg !9393
  %cmp = icmp ne i32 %11, %12, !dbg !9394
  br i1 %cmp, label %if.then4, label %if.end, !dbg !9395

if.then4:                                         ; preds = %if.then
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9396
  %14 = load i32, i32* %chan, align 4, !dbg !9398
  %15 = load i32, i32* %val, align 4, !dbg !9399
  call void @ad8402_write(%struct.comedi_device* %13, i32 %14, i32 %15) #7, !dbg !9400
  %16 = load i32, i32* %val, align 4, !dbg !9401
  %17 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9402
  %readback5 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %17, i32 0, i32 32, !dbg !9403
  %18 = load i32*, i32** %readback5, align 8, !dbg !9403
  %19 = load i32, i32* %chan, align 4, !dbg !9404
  %idxprom6 = zext i32 %19 to i64, !dbg !9402
  %arrayidx7 = getelementptr i32, i32* %18, i64 %idxprom6, !dbg !9402
  store i32 %16, i32* %arrayidx7, align 4, !dbg !9405
  br label %if.end, !dbg !9406

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end8, !dbg !9407

if.end8:                                          ; preds = %if.end, %entry
  %20 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9408
  %n9 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %20, i32 0, i32 1, !dbg !9409
  %21 = load i32, i32* %n9, align 4, !dbg !9409
  ret i32 %21, !dbg !9410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ad8402_write(%struct.comedi_device* %dev, i32 %channel, i32 %value) #2 !dbg !4329 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %channel.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %bit = alloca i32, align 4
  %register_bits = alloca i32, align 4
  %bitstream = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9411, metadata !DIExpression()), !dbg !9412
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !9413, metadata !DIExpression()), !dbg !9414
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9415, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !9417, metadata !DIExpression()), !dbg !9418
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9419
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !9420
  %1 = load i8*, i8** %private, align 8, !dbg !9420
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !9419
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !9418
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !9421, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.declare(metadata i32* %register_bits, metadata !9423, metadata !DIExpression()), !dbg !9424
  call void @llvm.dbg.declare(metadata i32* %bitstream, metadata !9425, metadata !DIExpression()), !dbg !9426
  %3 = load i32, i32* %channel.addr, align 4, !dbg !9427
  %and = and i32 %3, 3, !dbg !9428
  %shl = shl i32 %and, 8, !dbg !9429
  %4 = load i32, i32* %value.addr, align 4, !dbg !9430
  %and1 = and i32 %4, 255, !dbg !9431
  %or = or i32 %shl, %and1, !dbg !9432
  store i32 %or, i32* %bitstream, align 4, !dbg !9426
  store i32 2, i32* %register_bits, align 4, !dbg !9433
  call void @__const_udelay(i64 4295) #7, !dbg !9434
  %5 = load i32, i32* %register_bits, align 4, !dbg !9439
  %conv = trunc i32 %5 to i16, !dbg !9439
  %6 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9440
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %6, i32 0, i32 3, !dbg !9441
  %7 = load i8*, i8** %main_iobase, align 8, !dbg !9441
  %add.ptr = getelementptr i8, i8* %7, i64 20, !dbg !9442
  call void @writew(i16 zeroext %conv, i8* %add.ptr) #7, !dbg !9443
  store i32 512, i32* %bit, align 4, !dbg !9444
  br label %for.cond, !dbg !9446

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %bit, align 4, !dbg !9447
  %tobool = icmp ne i32 %8, 0, !dbg !9449
  br i1 %tobool, label %for.body, label %for.end, !dbg !9449

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %bitstream, align 4, !dbg !9450
  %10 = load i32, i32* %bit, align 4, !dbg !9453
  %and2 = and i32 %9, %10, !dbg !9454
  %tobool3 = icmp ne i32 %and2, 0, !dbg !9454
  br i1 %tobool3, label %if.then, label %if.else, !dbg !9455

if.then:                                          ; preds = %for.body
  %11 = load i32, i32* %register_bits, align 4, !dbg !9456
  %or4 = or i32 %11, 128, !dbg !9456
  store i32 %or4, i32* %register_bits, align 4, !dbg !9456
  br label %if.end, !dbg !9457

if.else:                                          ; preds = %for.body
  %12 = load i32, i32* %register_bits, align 4, !dbg !9458
  %and5 = and i32 %12, -129, !dbg !9458
  store i32 %and5, i32* %register_bits, align 4, !dbg !9458
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @__const_udelay(i64 4295) #7, !dbg !9459
  %13 = load i32, i32* %register_bits, align 4, !dbg !9464
  %conv6 = trunc i32 %13 to i16, !dbg !9464
  %14 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9465
  %main_iobase7 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %14, i32 0, i32 3, !dbg !9466
  %15 = load i8*, i8** %main_iobase7, align 8, !dbg !9466
  %add.ptr8 = getelementptr i8, i8* %15, i64 20, !dbg !9467
  call void @writew(i16 zeroext %conv6, i8* %add.ptr8) #7, !dbg !9468
  call void @__const_udelay(i64 4295) #7, !dbg !9469
  %16 = load i32, i32* %register_bits, align 4, !dbg !9474
  %or9 = or i32 %16, 256, !dbg !9475
  %conv10 = trunc i32 %or9 to i16, !dbg !9474
  %17 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9476
  %main_iobase11 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %17, i32 0, i32 3, !dbg !9477
  %18 = load i8*, i8** %main_iobase11, align 8, !dbg !9477
  %add.ptr12 = getelementptr i8, i8* %18, i64 20, !dbg !9478
  call void @writew(i16 zeroext %conv10, i8* %add.ptr12) #7, !dbg !9479
  br label %for.inc, !dbg !9480

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %bit, align 4, !dbg !9481
  %shr = lshr i32 %19, 1, !dbg !9481
  store i32 %shr, i32* %bit, align 4, !dbg !9481
  br label %for.cond, !dbg !9482, !llvm.loop !9483

for.end:                                          ; preds = %for.cond
  call void @__const_udelay(i64 4295) #7, !dbg !9485
  %20 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9490
  %main_iobase13 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %20, i32 0, i32 3, !dbg !9491
  %21 = load i8*, i8** %main_iobase13, align 8, !dbg !9491
  %add.ptr14 = getelementptr i8, i8* %21, i64 20, !dbg !9492
  call void @writew(i16 zeroext 0, i8* %add.ptr14) #7, !dbg !9493
  ret void, !dbg !9494
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @eeprom_read_insn(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !9495 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %val = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9496, metadata !DIExpression()), !dbg !9497
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9498, metadata !DIExpression()), !dbg !9499
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !9500, metadata !DIExpression()), !dbg !9501
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9502, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9504, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9506, metadata !DIExpression()), !dbg !9507
  %0 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9508
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %0, i32 0, i32 1, !dbg !9510
  %1 = load i32, i32* %n, align 4, !dbg !9510
  %tobool = icmp ne i32 %1, 0, !dbg !9508
  br i1 %tobool, label %if.then, label %if.end, !dbg !9511

if.then:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9512
  %3 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9514
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %3, i32 0, i32 4, !dbg !9514
  %4 = load i32, i32* %chanspec, align 4, !dbg !9514
  %and = and i32 %4, 65535, !dbg !9514
  %conv = trunc i32 %and to i8, !dbg !9514
  %call = call zeroext i16 @read_eeprom(%struct.comedi_device* %2, i8 zeroext %conv) #7, !dbg !9515
  %conv1 = zext i16 %call to i32, !dbg !9515
  store i32 %conv1, i32* %val, align 4, !dbg !9516
  store i32 0, i32* %i, align 4, !dbg !9517
  br label %for.cond, !dbg !9519

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !9520
  %6 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9522
  %n2 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %6, i32 0, i32 1, !dbg !9523
  %7 = load i32, i32* %n2, align 4, !dbg !9523
  %cmp = icmp ult i32 %5, %7, !dbg !9524
  br i1 %cmp, label %for.body, label %for.end, !dbg !9525

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %val, align 4, !dbg !9526
  %9 = load i32*, i32** %data.addr, align 8, !dbg !9527
  %10 = load i32, i32* %i, align 4, !dbg !9528
  %idxprom = zext i32 %10 to i64, !dbg !9527
  %arrayidx = getelementptr i32, i32* %9, i64 %idxprom, !dbg !9527
  store i32 %8, i32* %arrayidx, align 4, !dbg !9529
  br label %for.inc, !dbg !9527

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !9530
  %inc = add i32 %11, 1, !dbg !9530
  store i32 %inc, i32* %i, align 4, !dbg !9530
  br label %for.cond, !dbg !9531, !llvm.loop !9532

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !9534

if.end:                                           ; preds = %for.end, %entry
  %12 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9535
  %n4 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %12, i32 0, i32 1, !dbg !9536
  %13 = load i32, i32* %n4, align 4, !dbg !9536
  ret i32 %13, !dbg !9537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @adc_src_bits(i32 %source) #2 !dbg !9538 {
entry:
  %source.addr = alloca i32, align 4
  store i32 %source, i32* %source.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source.addr, metadata !9541, metadata !DIExpression()), !dbg !9542
  %0 = load i32, i32* %source.addr, align 4, !dbg !9543
  %and = and i32 %0, 15, !dbg !9544
  %shl = shl i32 %and, 3, !dbg !9545
  %conv = trunc i32 %shl to i16, !dbg !9546
  ret i16 %conv, !dbg !9547
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_range_bits_6xxx(%struct.comedi_device* %dev, i32 %range_index) #2 !dbg !9548 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %range_index.addr = alloca i32, align 4
  %board = alloca %struct.pcidas64_board*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9551, metadata !DIExpression()), !dbg !9552
  store i32 %range_index, i32* %range_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %range_index.addr, metadata !9553, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !9555, metadata !DIExpression()), !dbg !9556
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9557
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !9558
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !9558
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !9557
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !9556
  %3 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !9559
  %ai_range_code = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %3, i32 0, i32 5, !dbg !9560
  %4 = load i8*, i8** %ai_range_code, align 8, !dbg !9560
  %5 = load i32, i32* %range_index.addr, align 4, !dbg !9561
  %idxprom = zext i32 %5 to i64, !dbg !9559
  %arrayidx = getelementptr i8, i8* %4, i64 %idxprom, !dbg !9559
  %6 = load i8, i8* %arrayidx, align 1, !dbg !9559
  %conv = zext i8 %6 to i32, !dbg !9559
  %shl = shl i32 %conv, 8, !dbg !9562
  ret i32 %shl, !dbg !9563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @se_diff_bit_6xxx(%struct.comedi_device* %dev, i32 %use_differential) #2 !dbg !9564 {
entry:
  %retval = alloca i16, align 2
  %dev.addr = alloca %struct.comedi_device*, align 8
  %use_differential.addr = alloca i32, align 4
  %board = alloca %struct.pcidas64_board*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9567, metadata !DIExpression()), !dbg !9568
  store i32 %use_differential, i32* %use_differential.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %use_differential.addr, metadata !9569, metadata !DIExpression()), !dbg !9570
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !9571, metadata !DIExpression()), !dbg !9572
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9573
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !9574
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !9574
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !9573
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !9572
  %3 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !9575
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %3, i32 0, i32 12, !dbg !9577
  %4 = load i32, i32* %layout, align 8, !dbg !9577
  %cmp = icmp eq i32 %4, 1, !dbg !9578
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !9579

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* %use_differential.addr, align 4, !dbg !9580
  %tobool = icmp ne i32 %5, 0, !dbg !9580
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9581

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %6 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !9582
  %layout1 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %6, i32 0, i32 12, !dbg !9583
  %7 = load i32, i32* %layout1, align 8, !dbg !9583
  %cmp2 = icmp eq i32 %7, 0, !dbg !9584
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !9585

land.lhs.true3:                                   ; preds = %lor.lhs.false
  %8 = load i32, i32* %use_differential.addr, align 4, !dbg !9586
  %tobool4 = icmp ne i32 %8, 0, !dbg !9586
  br i1 %tobool4, label %if.then, label %if.end, !dbg !9587

if.then:                                          ; preds = %land.lhs.true3, %land.lhs.true
  store i16 4096, i16* %retval, align 2, !dbg !9588
  br label %return, !dbg !9588

if.end:                                           ; preds = %land.lhs.true3, %lor.lhs.false
  store i16 0, i16* %retval, align 2, !dbg !9589
  br label %return, !dbg !9589

return:                                           ; preds = %if.end, %if.then
  %9 = load i16, i16* %retval, align 2, !dbg !9590
  ret i16 %9, !dbg !9590
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @adc_chan_bits(i32 %channel) #2 !dbg !9591 {
entry:
  %channel.addr = alloca i32, align 4
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !9592, metadata !DIExpression()), !dbg !9593
  %0 = load i32, i32* %channel.addr, align 4, !dbg !9594
  %and = and i32 %0, 63, !dbg !9595
  %conv = trunc i32 %and to i16, !dbg !9594
  ret i16 %conv, !dbg !9596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @adc_convert_chan_4020_bits(i32 %channel) #2 !dbg !9597 {
entry:
  %channel.addr = alloca i32, align 4
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !9598, metadata !DIExpression()), !dbg !9599
  %0 = load i32, i32* %channel.addr, align 4, !dbg !9600
  %and = and i32 %0, 3, !dbg !9601
  %shl = shl i32 %and, 8, !dbg !9602
  %conv = trunc i32 %shl to i16, !dbg !9603
  ret i16 %conv, !dbg !9604
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_timeout(%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i64)*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cb_pcidas64_ai_eoc(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i64 %context) #2 !dbg !9605 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %context.addr = alloca i64, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %status = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9608, metadata !DIExpression()), !dbg !9609
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9610, metadata !DIExpression()), !dbg !9611
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !9612, metadata !DIExpression()), !dbg !9613
  store i64 %context, i64* %context.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %context.addr, metadata !9614, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !9616, metadata !DIExpression()), !dbg !9617
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9618
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !9619
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !9619
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !9618
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !9617
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !9620, metadata !DIExpression()), !dbg !9621
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9622
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !9623
  %4 = load i8*, i8** %private, align 8, !dbg !9623
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !9622
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !9621
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9624, metadata !DIExpression()), !dbg !9625
  %6 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9626
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %6, i32 0, i32 3, !dbg !9627
  %7 = load i8*, i8** %main_iobase, align 8, !dbg !9627
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !9628
  %call = call zeroext i16 @readw(i8* %add.ptr) #7, !dbg !9629
  %conv = zext i16 %call to i32, !dbg !9629
  store i32 %conv, i32* %status, align 4, !dbg !9630
  %8 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !9631
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %8, i32 0, i32 12, !dbg !9633
  %9 = load i32, i32* %layout, align 8, !dbg !9633
  %cmp = icmp eq i32 %9, 2, !dbg !9634
  br i1 %cmp, label %if.then, label %if.else, !dbg !9635

if.then:                                          ; preds = %entry
  %10 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9636
  %main_iobase2 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %10, i32 0, i32 3, !dbg !9638
  %11 = load i8*, i8** %main_iobase2, align 8, !dbg !9638
  %add.ptr3 = getelementptr i8, i8* %11, i64 12, !dbg !9639
  %call4 = call zeroext i16 @readw(i8* %add.ptr3) #7, !dbg !9640
  %conv5 = zext i16 %call4 to i32, !dbg !9640
  store i32 %conv5, i32* %status, align 4, !dbg !9641
  %12 = load i32, i32* %status, align 4, !dbg !9642
  %tobool = icmp ne i32 %12, 0, !dbg !9642
  br i1 %tobool, label %if.then6, label %if.end, !dbg !9644

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !9645
  br label %return, !dbg !9645

if.end:                                           ; preds = %if.then
  br label %if.end12, !dbg !9646

if.else:                                          ; preds = %entry
  %13 = load i32, i32* %status, align 4, !dbg !9647
  %conv7 = trunc i32 %13 to i16, !dbg !9647
  %call8 = call zeroext i16 @pipe_full_bits(i16 zeroext %conv7) #7, !dbg !9650
  %tobool9 = icmp ne i16 %call8, 0, !dbg !9650
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9651

if.then10:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !9652
  br label %return, !dbg !9652

if.end11:                                         ; preds = %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end
  store i32 -16, i32* %retval, align 4, !dbg !9653
  br label %return, !dbg !9653

return:                                           ; preds = %if.end12, %if.then10, %if.then6
  %14 = load i32, i32* %retval, align 4, !dbg !9654
  ret i32 %14, !dbg !9654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @pipe_full_bits(i16 zeroext %hw_status_bits) #2 !dbg !9655 {
entry:
  %hw_status_bits.addr = alloca i16, align 2
  store i16 %hw_status_bits, i16* %hw_status_bits.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %hw_status_bits.addr, metadata !9658, metadata !DIExpression()), !dbg !9659
  %0 = load i16, i16* %hw_status_bits.addr, align 2, !dbg !9660
  %conv = zext i16 %0 to i32, !dbg !9660
  %shr = ashr i32 %conv, 10, !dbg !9661
  %and = and i32 %shr, 3, !dbg !9662
  %conv1 = trunc i32 %and to i16, !dbg !9663
  ret i16 %conv1, !dbg !9664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_config_calibration_source(%struct.comedi_device* %dev, i32* %data) #2 !dbg !9665 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %source = alloca i32, align 4
  %num_calibration_sources = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9668, metadata !DIExpression()), !dbg !9669
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9670, metadata !DIExpression()), !dbg !9671
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !9672, metadata !DIExpression()), !dbg !9673
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9674
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !9675
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !9675
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !9674
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !9673
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !9676, metadata !DIExpression()), !dbg !9677
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9678
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !9679
  %4 = load i8*, i8** %private, align 8, !dbg !9679
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !9678
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !9677
  call void @llvm.dbg.declare(metadata i32* %source, metadata !9680, metadata !DIExpression()), !dbg !9681
  %6 = load i32*, i32** %data.addr, align 8, !dbg !9682
  %arrayidx = getelementptr i32, i32* %6, i64 1, !dbg !9682
  %7 = load i32, i32* %arrayidx, align 4, !dbg !9682
  store i32 %7, i32* %source, align 4, !dbg !9681
  call void @llvm.dbg.declare(metadata i32* %num_calibration_sources, metadata !9683, metadata !DIExpression()), !dbg !9684
  %8 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !9685
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %8, i32 0, i32 12, !dbg !9687
  %9 = load i32, i32* %layout, align 8, !dbg !9687
  %cmp = icmp eq i32 %9, 0, !dbg !9688
  br i1 %cmp, label %if.then, label %if.else, !dbg !9689

if.then:                                          ; preds = %entry
  store i32 16, i32* %num_calibration_sources, align 4, !dbg !9690
  br label %if.end, !dbg !9691

if.else:                                          ; preds = %entry
  store i32 8, i32* %num_calibration_sources, align 4, !dbg !9692
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %source, align 4, !dbg !9693
  %11 = load i32, i32* %num_calibration_sources, align 4, !dbg !9695
  %cmp1 = icmp uge i32 %10, %11, !dbg !9696
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9697

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !9698
  br label %return, !dbg !9698

if.end3:                                          ; preds = %if.end
  %12 = load i32, i32* %source, align 4, !dbg !9700
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9701
  %calibration_source = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 24, !dbg !9702
  store i32 %12, i32* %calibration_source, align 4, !dbg !9703
  store i32 2, i32* %retval, align 4, !dbg !9704
  br label %return, !dbg !9704

return:                                           ; preds = %if.end3, %if.then2
  %14 = load i32, i32* %retval, align 4, !dbg !9705
  ret i32 %14, !dbg !9705
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_config_block_size(%struct.comedi_device* %dev, i32* %data) #2 !dbg !9706 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %fifo_size = alloca i32, align 4
  %fifo = alloca %struct.hw_fifo_info*, align 8
  %block_size = alloca i32, align 4
  %requested_block_size = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9707, metadata !DIExpression()), !dbg !9708
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9709, metadata !DIExpression()), !dbg !9710
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !9711, metadata !DIExpression()), !dbg !9712
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9713
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !9714
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !9714
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !9713
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !9712
  call void @llvm.dbg.declare(metadata i32* %fifo_size, metadata !9715, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.declare(metadata %struct.hw_fifo_info** %fifo, metadata !9717, metadata !DIExpression()), !dbg !9718
  %3 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !9719
  %ai_fifo = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %3, i32 0, i32 11, !dbg !9720
  %4 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %ai_fifo, align 8, !dbg !9720
  store %struct.hw_fifo_info* %4, %struct.hw_fifo_info** %fifo, align 8, !dbg !9718
  call void @llvm.dbg.declare(metadata i32* %block_size, metadata !9721, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.declare(metadata i32* %requested_block_size, metadata !9723, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !9725, metadata !DIExpression()), !dbg !9726
  %5 = load i32*, i32** %data.addr, align 8, !dbg !9727
  %arrayidx = getelementptr i32, i32* %5, i64 1, !dbg !9727
  %6 = load i32, i32* %arrayidx, align 4, !dbg !9727
  store i32 %6, i32* %requested_block_size, align 4, !dbg !9728
  %7 = load i32, i32* %requested_block_size, align 4, !dbg !9729
  %tobool = icmp ne i32 %7, 0, !dbg !9729
  br i1 %tobool, label %if.then, label %if.end3, !dbg !9731

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %requested_block_size, align 4, !dbg !9732
  %9 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %fifo, align 8, !dbg !9734
  %num_segments = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %9, i32 0, i32 0, !dbg !9735
  %10 = load i32, i32* %num_segments, align 4, !dbg !9735
  %mul = mul i32 %8, %10, !dbg !9736
  %div = udiv i32 %mul, 2, !dbg !9737
  store i32 %div, i32* %fifo_size, align 4, !dbg !9738
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9739
  %12 = load i32, i32* %fifo_size, align 4, !dbg !9740
  %call = call i32 @set_ai_fifo_size(%struct.comedi_device* %11, i32 %12) #7, !dbg !9741
  store i32 %call, i32* %retval1, align 4, !dbg !9742
  %13 = load i32, i32* %retval1, align 4, !dbg !9743
  %cmp = icmp slt i32 %13, 0, !dbg !9745
  br i1 %cmp, label %if.then2, label %if.end, !dbg !9746

if.then2:                                         ; preds = %if.then
  %14 = load i32, i32* %retval1, align 4, !dbg !9747
  store i32 %14, i32* %retval, align 4, !dbg !9748
  br label %return, !dbg !9748

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !9749

if.end3:                                          ; preds = %if.end, %entry
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9750
  %call4 = call i32 @ai_fifo_size(%struct.comedi_device* %15) #7, !dbg !9751
  %16 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %fifo, align 8, !dbg !9752
  %num_segments5 = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %16, i32 0, i32 0, !dbg !9753
  %17 = load i32, i32* %num_segments5, align 4, !dbg !9753
  %div6 = udiv i32 %call4, %17, !dbg !9754
  %mul7 = mul i32 %div6, 2, !dbg !9755
  store i32 %mul7, i32* %block_size, align 4, !dbg !9756
  %18 = load i32, i32* %block_size, align 4, !dbg !9757
  %19 = load i32*, i32** %data.addr, align 8, !dbg !9758
  %arrayidx8 = getelementptr i32, i32* %19, i64 1, !dbg !9758
  store i32 %18, i32* %arrayidx8, align 4, !dbg !9759
  store i32 2, i32* %retval, align 4, !dbg !9760
  br label %return, !dbg !9760

return:                                           ; preds = %if.end3, %if.then2
  %20 = load i32, i32* %retval, align 4, !dbg !9761
  ret i32 %20, !dbg !9761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_config_master_clock(%struct.comedi_device* %dev, i32* %data) #2 !dbg !9762 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9763, metadata !DIExpression()), !dbg !9764
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9765, metadata !DIExpression()), !dbg !9766
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !9767, metadata !DIExpression()), !dbg !9768
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9769
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !9770
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !9770
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !9769
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !9768
  %3 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !9771
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %3, i32 0, i32 12, !dbg !9772
  %4 = load i32, i32* %layout, align 8, !dbg !9772
  switch i32 %4, label %sw.default [
    i32 2, label %sw.bb
  ], !dbg !9773

sw.bb:                                            ; preds = %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9774
  %6 = load i32*, i32** %data.addr, align 8, !dbg !9776
  %call = call i32 @ai_config_master_clock_4020(%struct.comedi_device* %5, i32* %6) #7, !dbg !9777
  store i32 %call, i32* %retval, align 4, !dbg !9778
  br label %return, !dbg !9778

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9779
  br label %return, !dbg !9779

return:                                           ; preds = %sw.default, %sw.bb
  %7 = load i32, i32* %retval, align 4, !dbg !9780
  ret i32 %7, !dbg !9780
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_ai_fifo_size(%struct.comedi_device* %dev, i32 %num_samples) #2 !dbg !9781 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %num_samples.addr = alloca i32, align 4
  %board = alloca %struct.pcidas64_board*, align 8
  %num_fifo_entries = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %fifo = alloca %struct.hw_fifo_info*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9782, metadata !DIExpression()), !dbg !9783
  store i32 %num_samples, i32* %num_samples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_samples.addr, metadata !9784, metadata !DIExpression()), !dbg !9785
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !9786, metadata !DIExpression()), !dbg !9787
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9788
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !9789
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !9789
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !9788
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !9787
  call void @llvm.dbg.declare(metadata i32* %num_fifo_entries, metadata !9790, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !9792, metadata !DIExpression()), !dbg !9793
  call void @llvm.dbg.declare(metadata %struct.hw_fifo_info** %fifo, metadata !9794, metadata !DIExpression()), !dbg !9795
  %3 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !9796
  %ai_fifo = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %3, i32 0, i32 11, !dbg !9797
  %4 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %ai_fifo, align 8, !dbg !9797
  store %struct.hw_fifo_info* %4, %struct.hw_fifo_info** %fifo, align 8, !dbg !9795
  %5 = load i32, i32* %num_samples.addr, align 4, !dbg !9798
  %6 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %fifo, align 8, !dbg !9799
  %sample_packing_ratio = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %6, i32 0, i32 2, !dbg !9800
  %7 = load i32, i32* %sample_packing_ratio, align 4, !dbg !9800
  %div = udiv i32 %5, %7, !dbg !9801
  store i32 %div, i32* %num_fifo_entries, align 4, !dbg !9802
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9803
  %9 = load i32, i32* %num_fifo_entries, align 4, !dbg !9804
  %10 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %fifo, align 8, !dbg !9805
  %num_segments = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %10, i32 0, i32 0, !dbg !9806
  %11 = load i32, i32* %num_segments, align 4, !dbg !9806
  %div2 = udiv i32 %9, %11, !dbg !9807
  %call = call i32 @set_ai_fifo_segment_length(%struct.comedi_device* %8, i32 %div2) #7, !dbg !9808
  store i32 %call, i32* %retval1, align 4, !dbg !9809
  %12 = load i32, i32* %retval1, align 4, !dbg !9810
  %cmp = icmp slt i32 %12, 0, !dbg !9812
  br i1 %cmp, label %if.then, label %if.end, !dbg !9813

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %retval1, align 4, !dbg !9814
  store i32 %13, i32* %retval, align 4, !dbg !9815
  br label %return, !dbg !9815

if.end:                                           ; preds = %entry
  %14 = load i32, i32* %retval1, align 4, !dbg !9816
  %15 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %fifo, align 8, !dbg !9817
  %num_segments3 = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %15, i32 0, i32 0, !dbg !9818
  %16 = load i32, i32* %num_segments3, align 4, !dbg !9818
  %mul = mul i32 %14, %16, !dbg !9819
  %17 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %fifo, align 8, !dbg !9820
  %sample_packing_ratio4 = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %17, i32 0, i32 2, !dbg !9821
  %18 = load i32, i32* %sample_packing_ratio4, align 4, !dbg !9821
  %mul5 = mul i32 %mul, %18, !dbg !9822
  store i32 %mul5, i32* %retval, align 4, !dbg !9823
  br label %return, !dbg !9823

return:                                           ; preds = %if.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !9824
  ret i32 %19, !dbg !9824
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_fifo_size(%struct.comedi_device* %dev) #2 !dbg !9825 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9826, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !9828, metadata !DIExpression()), !dbg !9829
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9830
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !9831
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !9831
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !9830
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !9829
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !9832, metadata !DIExpression()), !dbg !9833
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9834
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !9835
  %4 = load i8*, i8** %private, align 8, !dbg !9835
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !9834
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !9833
  %6 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9836
  %ai_fifo_segment_length = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %6, i32 0, i32 28, !dbg !9837
  %7 = load i32, i32* %ai_fifo_segment_length, align 4, !dbg !9837
  %8 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !9838
  %ai_fifo = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %8, i32 0, i32 11, !dbg !9839
  %9 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %ai_fifo, align 8, !dbg !9839
  %num_segments = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %9, i32 0, i32 0, !dbg !9840
  %10 = load i32, i32* %num_segments, align 4, !dbg !9840
  %mul = mul i32 %7, %10, !dbg !9841
  %11 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !9842
  %ai_fifo1 = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %11, i32 0, i32 11, !dbg !9843
  %12 = load %struct.hw_fifo_info*, %struct.hw_fifo_info** %ai_fifo1, align 8, !dbg !9843
  %sample_packing_ratio = getelementptr inbounds %struct.hw_fifo_info, %struct.hw_fifo_info* %12, i32 0, i32 2, !dbg !9844
  %13 = load i32, i32* %sample_packing_ratio, align 4, !dbg !9844
  %mul2 = mul i32 %mul, %13, !dbg !9845
  ret i32 %mul2, !dbg !9846
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_config_master_clock_4020(%struct.comedi_device* %dev, i32* %data) #2 !dbg !9847 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %divisor = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9848, metadata !DIExpression()), !dbg !9849
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9850, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !9852, metadata !DIExpression()), !dbg !9853
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9854
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !9855
  %1 = load i8*, i8** %private, align 8, !dbg !9855
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !9854
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !9853
  call void @llvm.dbg.declare(metadata i32* %divisor, metadata !9856, metadata !DIExpression()), !dbg !9857
  %3 = load i32*, i32** %data.addr, align 8, !dbg !9858
  %arrayidx = getelementptr i32, i32* %3, i64 4, !dbg !9858
  %4 = load i32, i32* %arrayidx, align 4, !dbg !9858
  store i32 %4, i32* %divisor, align 4, !dbg !9857
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !9859, metadata !DIExpression()), !dbg !9860
  store i32 0, i32* %retval1, align 4, !dbg !9860
  %5 = load i32, i32* %divisor, align 4, !dbg !9861
  %cmp = icmp ult i32 %5, 2, !dbg !9863
  br i1 %cmp, label %if.then, label %if.end, !dbg !9864

if.then:                                          ; preds = %entry
  store i32 2, i32* %divisor, align 4, !dbg !9865
  store i32 -11, i32* %retval1, align 4, !dbg !9867
  br label %if.end, !dbg !9868

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32*, i32** %data.addr, align 8, !dbg !9869
  %arrayidx2 = getelementptr i32, i32* %6, i64 1, !dbg !9869
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !9869
  switch i32 %7, label %sw.default [
    i32 524288, label %sw.bb
  ], !dbg !9870

sw.bb:                                            ; preds = %if.end
  %8 = load i32, i32* %divisor, align 4, !dbg !9871
  %9 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9873
  %ext_clock = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %9, i32 0, i32 29, !dbg !9874
  %divisor3 = getelementptr inbounds %struct.ext_clock_info, %struct.ext_clock_info* %ext_clock, i32 0, i32 0, !dbg !9875
  store i32 %8, i32* %divisor3, align 8, !dbg !9876
  %10 = load i32*, i32** %data.addr, align 8, !dbg !9877
  %arrayidx4 = getelementptr i32, i32* %10, i64 2, !dbg !9877
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !9877
  %12 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9878
  %ext_clock5 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %12, i32 0, i32 29, !dbg !9879
  %chanspec = getelementptr inbounds %struct.ext_clock_info, %struct.ext_clock_info* %ext_clock5, i32 0, i32 1, !dbg !9880
  store i32 %11, i32* %chanspec, align 4, !dbg !9881
  br label %sw.epilog, !dbg !9882

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !9883
  br label %return, !dbg !9883

sw.epilog:                                        ; preds = %sw.bb
  %13 = load i32, i32* %divisor, align 4, !dbg !9884
  %14 = load i32*, i32** %data.addr, align 8, !dbg !9885
  %arrayidx6 = getelementptr i32, i32* %14, i64 4, !dbg !9885
  store i32 %13, i32* %arrayidx6, align 4, !dbg !9886
  %15 = load i32, i32* %retval1, align 4, !dbg !9887
  %tobool = icmp ne i32 %15, 0, !dbg !9887
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9887

cond.true:                                        ; preds = %sw.epilog
  %16 = load i32, i32* %retval1, align 4, !dbg !9888
  br label %cond.end, !dbg !9887

cond.false:                                       ; preds = %sw.epilog
  br label %cond.end, !dbg !9887

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %16, %cond.true ], [ 5, %cond.false ], !dbg !9887
  store i32 %cond, i32* %retval, align 4, !dbg !9889
  br label %return, !dbg !9889

return:                                           ; preds = %cond.end, %sw.default
  %17 = load i32, i32* %retval, align 4, !dbg !9890
  ret i32 %17, !dbg !9890
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @setup_channel_queue(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !9891 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %bits = alloca i16, align 2
  %i = alloca i32, align 4
  %chanspec = alloca i32, align 4
  %use_differential = alloca i32, align 4
  %old_cal_range_bits = alloca i16, align 2
  %channel = alloca i32, align 4
  %range = alloca i32, align 4
  %i2c_data = alloca i8, align 1
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9894, metadata !DIExpression()), !dbg !9895
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !9898, metadata !DIExpression()), !dbg !9899
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9900
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !9901
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !9901
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !9900
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !9899
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !9902, metadata !DIExpression()), !dbg !9903
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9904
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !9905
  %4 = load i8*, i8** %private, align 8, !dbg !9905
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !9904
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !9903
  call void @llvm.dbg.declare(metadata i16* %bits, metadata !9906, metadata !DIExpression()), !dbg !9907
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9908, metadata !DIExpression()), !dbg !9909
  %6 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !9910
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %6, i32 0, i32 12, !dbg !9912
  %7 = load i32, i32* %layout, align 8, !dbg !9912
  %cmp = icmp ne i32 %7, 2, !dbg !9913
  br i1 %cmp, label %if.then, label %if.else118, !dbg !9914

if.then:                                          ; preds = %entry
  %8 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9915
  %call = call i32 @use_internal_queue_6xxx(%struct.comedi_cmd* %8) #7, !dbg !9918
  %tobool = icmp ne i32 %call, 0, !dbg !9918
  br i1 %tobool, label %if.then1, label %if.else, !dbg !9919

if.then1:                                         ; preds = %if.then
  %9 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9920
  %hw_config_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %9, i32 0, i32 20, !dbg !9922
  %10 = load i16, i16* %hw_config_bits, align 8, !dbg !9923
  %conv = zext i16 %10 to i32, !dbg !9923
  %and = and i32 %conv, -513, !dbg !9923
  %conv2 = trunc i32 %and to i16, !dbg !9923
  store i16 %conv2, i16* %hw_config_bits, align 8, !dbg !9923
  %11 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9924
  %hw_config_bits3 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %11, i32 0, i32 20, !dbg !9925
  %12 = load i16, i16* %hw_config_bits3, align 8, !dbg !9925
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9926
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 3, !dbg !9927
  %14 = load i8*, i8** %main_iobase, align 8, !dbg !9927
  %add.ptr = getelementptr i8, i8* %14, i64 2, !dbg !9928
  call void @writew(i16 zeroext %12, i8* %add.ptr) #7, !dbg !9929
  store i16 0, i16* %bits, align 2, !dbg !9930
  %15 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9931
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %15, i32 0, i32 12, !dbg !9931
  %16 = load i32*, i32** %chanlist, align 8, !dbg !9931
  %arrayidx = getelementptr i32, i32* %16, i64 0, !dbg !9931
  %17 = load i32, i32* %arrayidx, align 4, !dbg !9931
  %and4 = and i32 %17, 65535, !dbg !9931
  %call5 = call zeroext i16 @adc_chan_bits(i32 %and4) #7, !dbg !9932
  %conv6 = zext i16 %call5 to i32, !dbg !9932
  %18 = load i16, i16* %bits, align 2, !dbg !9933
  %conv7 = zext i16 %18 to i32, !dbg !9933
  %or = or i32 %conv7, %conv6, !dbg !9933
  %conv8 = trunc i32 %or to i16, !dbg !9933
  store i16 %conv8, i16* %bits, align 2, !dbg !9933
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9934
  %20 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9935
  %chanlist9 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %20, i32 0, i32 12, !dbg !9935
  %21 = load i32*, i32** %chanlist9, align 8, !dbg !9935
  %arrayidx10 = getelementptr i32, i32* %21, i64 0, !dbg !9935
  %22 = load i32, i32* %arrayidx10, align 4, !dbg !9935
  %shr = lshr i32 %22, 16, !dbg !9935
  %and11 = and i32 %shr, 255, !dbg !9935
  %call12 = call i32 @ai_range_bits_6xxx(%struct.comedi_device* %19, i32 %and11) #7, !dbg !9936
  %23 = load i16, i16* %bits, align 2, !dbg !9937
  %conv13 = zext i16 %23 to i32, !dbg !9937
  %or14 = or i32 %conv13, %call12, !dbg !9937
  %conv15 = trunc i32 %or14 to i16, !dbg !9937
  store i16 %conv15, i16* %bits, align 2, !dbg !9937
  %24 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9938
  %25 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9939
  %chanlist16 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %25, i32 0, i32 12, !dbg !9939
  %26 = load i32*, i32** %chanlist16, align 8, !dbg !9939
  %arrayidx17 = getelementptr i32, i32* %26, i64 0, !dbg !9939
  %27 = load i32, i32* %arrayidx17, align 4, !dbg !9939
  %shr18 = lshr i32 %27, 24, !dbg !9939
  %and19 = and i32 %shr18, 3, !dbg !9939
  %cmp20 = icmp eq i32 %and19, 2, !dbg !9940
  %conv21 = zext i1 %cmp20 to i32, !dbg !9940
  %call22 = call zeroext i16 @se_diff_bit_6xxx(%struct.comedi_device* %24, i32 %conv21) #7, !dbg !9941
  %conv23 = zext i16 %call22 to i32, !dbg !9941
  %28 = load i16, i16* %bits, align 2, !dbg !9942
  %conv24 = zext i16 %28 to i32, !dbg !9942
  %or25 = or i32 %conv24, %conv23, !dbg !9942
  %conv26 = trunc i32 %or25 to i16, !dbg !9942
  store i16 %conv26, i16* %bits, align 2, !dbg !9942
  %29 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9943
  %chanlist27 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %29, i32 0, i32 12, !dbg !9943
  %30 = load i32*, i32** %chanlist27, align 8, !dbg !9943
  %arrayidx28 = getelementptr i32, i32* %30, i64 0, !dbg !9943
  %31 = load i32, i32* %arrayidx28, align 4, !dbg !9943
  %shr29 = lshr i32 %31, 24, !dbg !9943
  %and30 = and i32 %shr29, 3, !dbg !9943
  %cmp31 = icmp eq i32 %and30, 1, !dbg !9945
  br i1 %cmp31, label %if.then33, label %if.end, !dbg !9946

if.then33:                                        ; preds = %if.then1
  %32 = load i16, i16* %bits, align 2, !dbg !9947
  %conv34 = zext i16 %32 to i32, !dbg !9947
  %or35 = or i32 %conv34, 8192, !dbg !9947
  %conv36 = trunc i32 %or35 to i16, !dbg !9947
  store i16 %conv36, i16* %bits, align 2, !dbg !9947
  br label %if.end, !dbg !9948

if.end:                                           ; preds = %if.then33, %if.then1
  %33 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9949
  %chanlist37 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %33, i32 0, i32 12, !dbg !9949
  %34 = load i32*, i32** %chanlist37, align 8, !dbg !9949
  %35 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9949
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %35, i32 0, i32 13, !dbg !9949
  %36 = load i32, i32* %chanlist_len, align 8, !dbg !9949
  %sub = sub i32 %36, 1, !dbg !9949
  %idxprom = zext i32 %sub to i64, !dbg !9949
  %arrayidx38 = getelementptr i32, i32* %34, i64 %idxprom, !dbg !9949
  %37 = load i32, i32* %arrayidx38, align 4, !dbg !9949
  %and39 = and i32 %37, 65535, !dbg !9949
  %call40 = call zeroext i16 @adc_chan_bits(i32 %and39) #7, !dbg !9950
  %38 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9951
  %main_iobase41 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %38, i32 0, i32 3, !dbg !9952
  %39 = load i8*, i8** %main_iobase41, align 8, !dbg !9952
  %add.ptr42 = getelementptr i8, i8* %39, i64 44, !dbg !9953
  call void @writew(i16 zeroext %call40, i8* %add.ptr42) #7, !dbg !9954
  %40 = load i16, i16* %bits, align 2, !dbg !9955
  %41 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9956
  %main_iobase43 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %41, i32 0, i32 3, !dbg !9957
  %42 = load i8*, i8** %main_iobase43, align 8, !dbg !9957
  %add.ptr44 = getelementptr i8, i8* %42, i64 40, !dbg !9958
  call void @writew(i16 zeroext %40, i8* %add.ptr44) #7, !dbg !9959
  br label %if.end117, !dbg !9960

if.else:                                          ; preds = %if.then
  %43 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9961
  %write_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %43, i32 0, i32 22, !dbg !9964
  %44 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %write_subdev, align 8, !dbg !9964
  %tobool45 = icmp ne %struct.comedi_subdevice* %44, null, !dbg !9961
  br i1 %tobool45, label %land.lhs.true, label %if.end49, !dbg !9965

land.lhs.true:                                    ; preds = %if.else
  %45 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9966
  %write_subdev46 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %45, i32 0, i32 22, !dbg !9967
  %46 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %write_subdev46, align 8, !dbg !9967
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %46, i32 0, i32 9, !dbg !9968
  %47 = load i8*, i8** %busy, align 8, !dbg !9968
  %tobool47 = icmp ne i8* %47, null, !dbg !9966
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !9969

if.then48:                                        ; preds = %land.lhs.true
  %48 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9970
  call void @warn_external_queue(%struct.comedi_device* %48) #7, !dbg !9972
  store i32 -16, i32* %retval, align 4, !dbg !9973
  br label %return, !dbg !9973

if.end49:                                         ; preds = %land.lhs.true, %if.else
  %49 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9974
  %hw_config_bits50 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %49, i32 0, i32 20, !dbg !9975
  %50 = load i16, i16* %hw_config_bits50, align 8, !dbg !9976
  %conv51 = zext i16 %50 to i32, !dbg !9976
  %or52 = or i32 %conv51, 512, !dbg !9976
  %conv53 = trunc i32 %or52 to i16, !dbg !9976
  store i16 %conv53, i16* %hw_config_bits50, align 8, !dbg !9976
  %51 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9977
  %hw_config_bits54 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %51, i32 0, i32 20, !dbg !9978
  %52 = load i16, i16* %hw_config_bits54, align 8, !dbg !9978
  %53 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9979
  %main_iobase55 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %53, i32 0, i32 3, !dbg !9980
  %54 = load i8*, i8** %main_iobase55, align 8, !dbg !9980
  %add.ptr56 = getelementptr i8, i8* %54, i64 2, !dbg !9981
  call void @writew(i16 zeroext %52, i8* %add.ptr56) #7, !dbg !9982
  %55 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9983
  %main_iobase57 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %55, i32 0, i32 3, !dbg !9984
  %56 = load i8*, i8** %main_iobase57, align 8, !dbg !9984
  %add.ptr58 = getelementptr i8, i8* %56, i64 102, !dbg !9985
  call void @writew(i16 zeroext 0, i8* %add.ptr58) #7, !dbg !9986
  %57 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !9987
  %main_iobase59 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %57, i32 0, i32 3, !dbg !9988
  %58 = load i8*, i8** %main_iobase59, align 8, !dbg !9988
  %add.ptr60 = getelementptr i8, i8* %58, i64 38, !dbg !9989
  call void @writew(i16 zeroext 0, i8* %add.ptr60) #7, !dbg !9990
  store i32 0, i32* %i, align 4, !dbg !9991
  br label %for.cond, !dbg !9993

for.cond:                                         ; preds = %for.inc, %if.end49
  %59 = load i32, i32* %i, align 4, !dbg !9994
  %60 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9996
  %chanlist_len61 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %60, i32 0, i32 13, !dbg !9997
  %61 = load i32, i32* %chanlist_len61, align 8, !dbg !9997
  %cmp62 = icmp ult i32 %59, %61, !dbg !9998
  br i1 %cmp62, label %for.body, label %for.end, !dbg !9999

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %chanspec, metadata !10000, metadata !DIExpression()), !dbg !10002
  %62 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10003
  %chanlist64 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %62, i32 0, i32 12, !dbg !10004
  %63 = load i32*, i32** %chanlist64, align 8, !dbg !10004
  %64 = load i32, i32* %i, align 4, !dbg !10005
  %idxprom65 = sext i32 %64 to i64, !dbg !10003
  %arrayidx66 = getelementptr i32, i32* %63, i64 %idxprom65, !dbg !10003
  %65 = load i32, i32* %arrayidx66, align 4, !dbg !10003
  store i32 %65, i32* %chanspec, align 4, !dbg !10002
  call void @llvm.dbg.declare(metadata i32* %use_differential, metadata !10006, metadata !DIExpression()), !dbg !10007
  store i16 0, i16* %bits, align 2, !dbg !10008
  %66 = load i32, i32* %chanspec, align 4, !dbg !10009
  %and67 = and i32 %66, 65535, !dbg !10009
  %call68 = call zeroext i16 @adc_chan_bits(i32 %and67) #7, !dbg !10010
  %conv69 = zext i16 %call68 to i32, !dbg !10010
  %67 = load i16, i16* %bits, align 2, !dbg !10011
  %conv70 = zext i16 %67 to i32, !dbg !10011
  %or71 = or i32 %conv70, %conv69, !dbg !10011
  %conv72 = trunc i32 %or71 to i16, !dbg !10011
  store i16 %conv72, i16* %bits, align 2, !dbg !10011
  %68 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10012
  %69 = load i32, i32* %chanspec, align 4, !dbg !10013
  %shr73 = lshr i32 %69, 16, !dbg !10013
  %and74 = and i32 %shr73, 255, !dbg !10013
  %call75 = call i32 @ai_range_bits_6xxx(%struct.comedi_device* %68, i32 %and74) #7, !dbg !10014
  %70 = load i16, i16* %bits, align 2, !dbg !10015
  %conv76 = zext i16 %70 to i32, !dbg !10015
  %or77 = or i32 %conv76, %call75, !dbg !10015
  %conv78 = trunc i32 %or77 to i16, !dbg !10015
  store i16 %conv78, i16* %bits, align 2, !dbg !10015
  store i32 0, i32* %use_differential, align 4, !dbg !10016
  %71 = load i32, i32* %chanspec, align 4, !dbg !10017
  %shr79 = lshr i32 %71, 24, !dbg !10017
  %and80 = and i32 %shr79, 3, !dbg !10017
  %cmp81 = icmp eq i32 %and80, 2, !dbg !10019
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !10020

if.then83:                                        ; preds = %for.body
  store i32 1, i32* %use_differential, align 4, !dbg !10021
  br label %if.end84, !dbg !10022

if.end84:                                         ; preds = %if.then83, %for.body
  %72 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10023
  %73 = load i32, i32* %use_differential, align 4, !dbg !10024
  %call85 = call zeroext i16 @se_diff_bit_6xxx(%struct.comedi_device* %72, i32 %73) #7, !dbg !10025
  %conv86 = zext i16 %call85 to i32, !dbg !10025
  %74 = load i16, i16* %bits, align 2, !dbg !10026
  %conv87 = zext i16 %74 to i32, !dbg !10026
  %or88 = or i32 %conv87, %conv86, !dbg !10026
  %conv89 = trunc i32 %or88 to i16, !dbg !10026
  store i16 %conv89, i16* %bits, align 2, !dbg !10026
  %75 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10027
  %chanlist90 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %75, i32 0, i32 12, !dbg !10027
  %76 = load i32*, i32** %chanlist90, align 8, !dbg !10027
  %77 = load i32, i32* %i, align 4, !dbg !10027
  %idxprom91 = sext i32 %77 to i64, !dbg !10027
  %arrayidx92 = getelementptr i32, i32* %76, i64 %idxprom91, !dbg !10027
  %78 = load i32, i32* %arrayidx92, align 4, !dbg !10027
  %shr93 = lshr i32 %78, 24, !dbg !10027
  %and94 = and i32 %shr93, 3, !dbg !10027
  %cmp95 = icmp eq i32 %and94, 1, !dbg !10029
  br i1 %cmp95, label %if.then97, label %if.end101, !dbg !10030

if.then97:                                        ; preds = %if.end84
  %79 = load i16, i16* %bits, align 2, !dbg !10031
  %conv98 = zext i16 %79 to i32, !dbg !10031
  %or99 = or i32 %conv98, 8192, !dbg !10031
  %conv100 = trunc i32 %or99 to i16, !dbg !10031
  store i16 %conv100, i16* %bits, align 2, !dbg !10031
  br label %if.end101, !dbg !10032

if.end101:                                        ; preds = %if.then97, %if.end84
  %80 = load i32, i32* %i, align 4, !dbg !10033
  %81 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10035
  %chanlist_len102 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %81, i32 0, i32 13, !dbg !10036
  %82 = load i32, i32* %chanlist_len102, align 8, !dbg !10036
  %sub103 = sub i32 %82, 1, !dbg !10037
  %cmp104 = icmp eq i32 %80, %sub103, !dbg !10038
  br i1 %cmp104, label %if.then106, label %if.end110, !dbg !10039

if.then106:                                       ; preds = %if.end101
  %83 = load i16, i16* %bits, align 2, !dbg !10040
  %conv107 = zext i16 %83 to i32, !dbg !10040
  %or108 = or i32 %conv107, 49152, !dbg !10040
  %conv109 = trunc i32 %or108 to i16, !dbg !10040
  store i16 %conv109, i16* %bits, align 2, !dbg !10040
  br label %if.end110, !dbg !10041

if.end110:                                        ; preds = %if.then106, %if.end101
  %84 = load i16, i16* %bits, align 2, !dbg !10042
  %85 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10043
  %main_iobase111 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %85, i32 0, i32 3, !dbg !10044
  %86 = load i8*, i8** %main_iobase111, align 8, !dbg !10044
  %add.ptr112 = getelementptr i8, i8* %86, i64 256, !dbg !10045
  call void @writew(i16 zeroext %84, i8* %add.ptr112) #7, !dbg !10046
  br label %for.inc, !dbg !10047

for.inc:                                          ; preds = %if.end110
  %87 = load i32, i32* %i, align 4, !dbg !10048
  %inc = add i32 %87, 1, !dbg !10048
  store i32 %inc, i32* %i, align 4, !dbg !10048
  br label %for.cond, !dbg !10049, !llvm.loop !10050

for.end:                                          ; preds = %for.cond
  %88 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10052
  %main_iobase113 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %88, i32 0, i32 3, !dbg !10053
  %89 = load i8*, i8** %main_iobase113, align 8, !dbg !10053
  %add.ptr114 = getelementptr i8, i8* %89, i64 38, !dbg !10054
  call void @writew(i16 zeroext 0, i8* %add.ptr114) #7, !dbg !10055
  %90 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10056
  %main_iobase115 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %90, i32 0, i32 3, !dbg !10057
  %91 = load i8*, i8** %main_iobase115, align 8, !dbg !10057
  %add.ptr116 = getelementptr i8, i8* %91, i64 40, !dbg !10058
  call void @writew(i16 zeroext 0, i8* %add.ptr116) #7, !dbg !10059
  br label %if.end117

if.end117:                                        ; preds = %for.end, %if.end
  br label %if.end172, !dbg !10060

if.else118:                                       ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %old_cal_range_bits, metadata !10061, metadata !DIExpression()), !dbg !10063
  %92 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10064
  %i2c_cal_range_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %92, i32 0, i32 25, !dbg !10065
  %93 = load i8, i8* %i2c_cal_range_bits, align 8, !dbg !10065
  %conv119 = zext i8 %93 to i16, !dbg !10064
  store i16 %conv119, i16* %old_cal_range_bits, align 2, !dbg !10063
  %94 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10066
  %i2c_cal_range_bits120 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %94, i32 0, i32 25, !dbg !10067
  %95 = load i8, i8* %i2c_cal_range_bits120, align 8, !dbg !10068
  %conv121 = zext i8 %95 to i32, !dbg !10068
  %and122 = and i32 %conv121, -113, !dbg !10068
  %conv123 = trunc i32 %and122 to i8, !dbg !10068
  store i8 %conv123, i8* %i2c_cal_range_bits120, align 8, !dbg !10068
  %call124 = call zeroext i8 @adc_src_4020_bits(i32 4) #7, !dbg !10069
  %conv125 = zext i8 %call124 to i32, !dbg !10069
  %96 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10070
  %i2c_cal_range_bits126 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %96, i32 0, i32 25, !dbg !10071
  %97 = load i8, i8* %i2c_cal_range_bits126, align 8, !dbg !10072
  %conv127 = zext i8 %97 to i32, !dbg !10072
  %or128 = or i32 %conv127, %conv125, !dbg !10072
  %conv129 = trunc i32 %or128 to i8, !dbg !10072
  store i8 %conv129, i8* %i2c_cal_range_bits126, align 8, !dbg !10072
  store i32 0, i32* %i, align 4, !dbg !10073
  br label %for.cond130, !dbg !10075

for.cond130:                                      ; preds = %for.inc161, %if.else118
  %98 = load i32, i32* %i, align 4, !dbg !10076
  %99 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10078
  %chanlist_len131 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %99, i32 0, i32 13, !dbg !10079
  %100 = load i32, i32* %chanlist_len131, align 8, !dbg !10079
  %cmp132 = icmp ult i32 %98, %100, !dbg !10080
  br i1 %cmp132, label %for.body134, label %for.end163, !dbg !10081

for.body134:                                      ; preds = %for.cond130
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !10082, metadata !DIExpression()), !dbg !10084
  %101 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10085
  %chanlist135 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %101, i32 0, i32 12, !dbg !10085
  %102 = load i32*, i32** %chanlist135, align 8, !dbg !10085
  %103 = load i32, i32* %i, align 4, !dbg !10085
  %idxprom136 = sext i32 %103 to i64, !dbg !10085
  %arrayidx137 = getelementptr i32, i32* %102, i64 %idxprom136, !dbg !10085
  %104 = load i32, i32* %arrayidx137, align 4, !dbg !10085
  %and138 = and i32 %104, 65535, !dbg !10085
  store i32 %and138, i32* %channel, align 4, !dbg !10084
  call void @llvm.dbg.declare(metadata i32* %range, metadata !10086, metadata !DIExpression()), !dbg !10087
  %105 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10088
  %chanlist139 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %105, i32 0, i32 12, !dbg !10088
  %106 = load i32*, i32** %chanlist139, align 8, !dbg !10088
  %107 = load i32, i32* %i, align 4, !dbg !10088
  %idxprom140 = sext i32 %107 to i64, !dbg !10088
  %arrayidx141 = getelementptr i32, i32* %106, i64 %idxprom140, !dbg !10088
  %108 = load i32, i32* %arrayidx141, align 4, !dbg !10088
  %shr142 = lshr i32 %108, 16, !dbg !10088
  %and143 = and i32 %shr142, 255, !dbg !10088
  store i32 %and143, i32* %range, align 4, !dbg !10087
  %109 = load i32, i32* %range, align 4, !dbg !10089
  %cmp144 = icmp eq i32 %109, 0, !dbg !10091
  br i1 %cmp144, label %if.then146, label %if.else153, !dbg !10092

if.then146:                                       ; preds = %for.body134
  %110 = load i32, i32* %channel, align 4, !dbg !10093
  %call147 = call zeroext i8 @attenuate_bit(i32 %110) #7, !dbg !10094
  %conv148 = zext i8 %call147 to i32, !dbg !10094
  %111 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10095
  %i2c_cal_range_bits149 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %111, i32 0, i32 25, !dbg !10096
  %112 = load i8, i8* %i2c_cal_range_bits149, align 8, !dbg !10097
  %conv150 = zext i8 %112 to i32, !dbg !10097
  %or151 = or i32 %conv150, %conv148, !dbg !10097
  %conv152 = trunc i32 %or151 to i8, !dbg !10097
  store i8 %conv152, i8* %i2c_cal_range_bits149, align 8, !dbg !10097
  br label %if.end160, !dbg !10095

if.else153:                                       ; preds = %for.body134
  %113 = load i32, i32* %channel, align 4, !dbg !10098
  %call154 = call zeroext i8 @attenuate_bit(i32 %113) #7, !dbg !10099
  %conv155 = zext i8 %call154 to i32, !dbg !10099
  %neg = xor i32 %conv155, -1, !dbg !10100
  %114 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10101
  %i2c_cal_range_bits156 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %114, i32 0, i32 25, !dbg !10102
  %115 = load i8, i8* %i2c_cal_range_bits156, align 8, !dbg !10103
  %conv157 = zext i8 %115 to i32, !dbg !10103
  %and158 = and i32 %conv157, %neg, !dbg !10103
  %conv159 = trunc i32 %and158 to i8, !dbg !10103
  store i8 %conv159, i8* %i2c_cal_range_bits156, align 8, !dbg !10103
  br label %if.end160

if.end160:                                        ; preds = %if.else153, %if.then146
  br label %for.inc161, !dbg !10104

for.inc161:                                       ; preds = %if.end160
  %116 = load i32, i32* %i, align 4, !dbg !10105
  %inc162 = add i32 %116, 1, !dbg !10105
  store i32 %inc162, i32* %i, align 4, !dbg !10105
  br label %for.cond130, !dbg !10106, !llvm.loop !10107

for.end163:                                       ; preds = %for.cond130
  %117 = load i16, i16* %old_cal_range_bits, align 2, !dbg !10109
  %conv164 = zext i16 %117 to i32, !dbg !10109
  %118 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10111
  %i2c_cal_range_bits165 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %118, i32 0, i32 25, !dbg !10112
  %119 = load i8, i8* %i2c_cal_range_bits165, align 8, !dbg !10112
  %conv166 = zext i8 %119 to i32, !dbg !10111
  %cmp167 = icmp ne i32 %conv164, %conv166, !dbg !10113
  br i1 %cmp167, label %if.then169, label %if.end171, !dbg !10114

if.then169:                                       ; preds = %for.end163
  call void @llvm.dbg.declare(metadata i8* %i2c_data, metadata !10115, metadata !DIExpression()), !dbg !10117
  %120 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10118
  %i2c_cal_range_bits170 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %120, i32 0, i32 25, !dbg !10119
  %121 = load i8, i8* %i2c_cal_range_bits170, align 8, !dbg !10119
  store i8 %121, i8* %i2c_data, align 1, !dbg !10117
  %122 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10120
  call void @i2c_write(%struct.comedi_device* %122, i32 32, i8* %i2c_data, i32 1) #7, !dbg !10121
  br label %if.end171, !dbg !10122

if.end171:                                        ; preds = %if.then169, %for.end163
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %if.end117
  store i32 0, i32* %retval, align 4, !dbg !10123
  br label %return, !dbg !10123

return:                                           ; preds = %if.end172, %if.then48
  %123 = load i32, i32* %retval, align 4, !dbg !10124
  ret i32 %123, !dbg !10124
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_ai_pacing(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !10125 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %convert_counter = alloca i32, align 4
  %scan_counter = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10126, metadata !DIExpression()), !dbg !10127
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10128, metadata !DIExpression()), !dbg !10129
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !10130, metadata !DIExpression()), !dbg !10131
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10132
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !10133
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !10133
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !10132
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !10131
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !10134, metadata !DIExpression()), !dbg !10135
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10136
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !10137
  %4 = load i8*, i8** %private, align 8, !dbg !10137
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !10136
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !10135
  call void @llvm.dbg.declare(metadata i32* %convert_counter, metadata !10138, metadata !DIExpression()), !dbg !10139
  store i32 0, i32* %convert_counter, align 4, !dbg !10139
  call void @llvm.dbg.declare(metadata i32* %scan_counter, metadata !10140, metadata !DIExpression()), !dbg !10141
  store i32 0, i32* %scan_counter, align 4, !dbg !10141
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10142
  %7 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10143
  call void @check_adc_timing(%struct.comedi_device* %6, %struct.comedi_cmd* %7) #7, !dbg !10144
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10145
  %9 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10146
  call void @select_master_clock(%struct.comedi_device* %8, %struct.comedi_cmd* %9) #7, !dbg !10147
  %10 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !10148
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %10, i32 0, i32 12, !dbg !10150
  %11 = load i32, i32* %layout, align 8, !dbg !10150
  %cmp = icmp eq i32 %11, 2, !dbg !10151
  br i1 %cmp, label %if.then, label %if.else, !dbg !10152

if.then:                                          ; preds = %entry
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10153
  %13 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10155
  %call = call i32 @ai_convert_counter_4020(%struct.comedi_device* %12, %struct.comedi_cmd* %13) #7, !dbg !10156
  store i32 %call, i32* %convert_counter, align 4, !dbg !10157
  br label %if.end, !dbg !10158

if.else:                                          ; preds = %entry
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10159
  %15 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10161
  %call1 = call i32 @ai_convert_counter_6xxx(%struct.comedi_device* %14, %struct.comedi_cmd* %15) #7, !dbg !10162
  store i32 %call1, i32* %convert_counter, align 4, !dbg !10163
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10164
  %17 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10165
  %call2 = call i32 @ai_scan_counter_6xxx(%struct.comedi_device* %16, %struct.comedi_cmd* %17) #7, !dbg !10166
  store i32 %call2, i32* %scan_counter, align 4, !dbg !10167
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load i32, i32* %convert_counter, align 4, !dbg !10168
  %and = and i32 %18, 65535, !dbg !10169
  %conv = trunc i32 %and to i16, !dbg !10168
  %19 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10170
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %19, i32 0, i32 3, !dbg !10171
  %20 = load i8*, i8** %main_iobase, align 8, !dbg !10171
  %add.ptr = getelementptr i8, i8* %20, i64 22, !dbg !10172
  call void @writew(i16 zeroext %conv, i8* %add.ptr) #7, !dbg !10173
  %21 = load i32, i32* %convert_counter, align 4, !dbg !10174
  %shr = lshr i32 %21, 16, !dbg !10175
  %and3 = and i32 %shr, 255, !dbg !10176
  %conv4 = trunc i32 %and3 to i16, !dbg !10177
  %22 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10178
  %main_iobase5 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %22, i32 0, i32 3, !dbg !10179
  %23 = load i8*, i8** %main_iobase5, align 8, !dbg !10179
  %add.ptr6 = getelementptr i8, i8* %23, i64 24, !dbg !10180
  call void @writew(i16 zeroext %conv4, i8* %add.ptr6) #7, !dbg !10181
  %24 = load i32, i32* %scan_counter, align 4, !dbg !10182
  %and7 = and i32 %24, 65535, !dbg !10183
  %conv8 = trunc i32 %and7 to i16, !dbg !10182
  %25 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10184
  %main_iobase9 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %25, i32 0, i32 3, !dbg !10185
  %26 = load i8*, i8** %main_iobase9, align 8, !dbg !10185
  %add.ptr10 = getelementptr i8, i8* %26, i64 26, !dbg !10186
  call void @writew(i16 zeroext %conv8, i8* %add.ptr10) #7, !dbg !10187
  %27 = load i32, i32* %scan_counter, align 4, !dbg !10188
  %shr11 = lshr i32 %27, 16, !dbg !10189
  %and12 = and i32 %shr11, 255, !dbg !10190
  %conv13 = trunc i32 %and12 to i16, !dbg !10191
  %28 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10192
  %main_iobase14 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %28, i32 0, i32 3, !dbg !10193
  %29 = load i8*, i8** %main_iobase14, align 8, !dbg !10193
  %add.ptr15 = getelementptr i8, i8* %29, i64 28, !dbg !10194
  call void @writew(i16 zeroext %conv13, i8* %add.ptr15) #7, !dbg !10195
  ret void, !dbg !10196
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @setup_sample_counters(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !10197 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10198, metadata !DIExpression()), !dbg !10199
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10200, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !10202, metadata !DIExpression()), !dbg !10203
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10204
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10205
  %1 = load i8*, i8** %private, align 8, !dbg !10205
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !10204
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !10203
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10206
  %call = call i32 @use_hw_sample_counter(%struct.comedi_cmd* %3) #7, !dbg !10208
  %tobool = icmp ne i32 %call, 0, !dbg !10208
  br i1 %tobool, label %if.then, label %if.else, !dbg !10209

if.then:                                          ; preds = %entry
  %4 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10210
  %stop_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %4, i32 0, i32 11, !dbg !10212
  %5 = load i32, i32* %stop_arg, align 4, !dbg !10212
  %and = and i32 %5, 65535, !dbg !10213
  %conv = trunc i32 %and to i16, !dbg !10210
  %6 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10214
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %6, i32 0, i32 3, !dbg !10215
  %7 = load i8*, i8** %main_iobase, align 8, !dbg !10215
  %add.ptr = getelementptr i8, i8* %7, i64 30, !dbg !10216
  call void @writew(i16 zeroext %conv, i8* %add.ptr) #7, !dbg !10217
  %8 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10218
  %stop_arg1 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %8, i32 0, i32 11, !dbg !10219
  %9 = load i32, i32* %stop_arg1, align 4, !dbg !10219
  %shr = lshr i32 %9, 16, !dbg !10220
  %and2 = and i32 %shr, 255, !dbg !10221
  %conv3 = trunc i32 %and2 to i16, !dbg !10222
  %10 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10223
  %main_iobase4 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %10, i32 0, i32 3, !dbg !10224
  %11 = load i8*, i8** %main_iobase4, align 8, !dbg !10224
  %add.ptr5 = getelementptr i8, i8* %11, i64 32, !dbg !10225
  call void @writew(i16 zeroext %conv3, i8* %add.ptr5) #7, !dbg !10226
  br label %if.end, !dbg !10227

if.else:                                          ; preds = %entry
  %12 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10228
  %main_iobase6 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %12, i32 0, i32 3, !dbg !10230
  %13 = load i8*, i8** %main_iobase6, align 8, !dbg !10230
  %add.ptr7 = getelementptr i8, i8* %13, i64 30, !dbg !10231
  call void @writew(i16 zeroext 1, i8* %add.ptr7) #7, !dbg !10232
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10233
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_ai_interrupts(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !10234 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !5431, metadata !DIExpression()), !dbg !10235
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5438, metadata !DIExpression()), !dbg !10237
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5440, metadata !DIExpression()), !dbg !10238
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %bits = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10245, metadata !DIExpression()), !dbg !10246
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10247, metadata !DIExpression()), !dbg !10248
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !10249, metadata !DIExpression()), !dbg !10250
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10251
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !10252
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !10252
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !10251
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !10250
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !10253, metadata !DIExpression()), !dbg !10254
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10255
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !10256
  %4 = load i8*, i8** %private, align 8, !dbg !10256
  %5 = bitcast i8* %4 to %struct.pcidas64_private*, !dbg !10255
  store %struct.pcidas64_private* %5, %struct.pcidas64_private** %devpriv, align 8, !dbg !10254
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !10257, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10259, metadata !DIExpression()), !dbg !10260
  store i32 34312, i32* %bits, align 4, !dbg !10261
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10262
  %flags1 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 1, !dbg !10264
  %7 = load i32, i32* %flags1, align 4, !dbg !10264
  %and = and i32 %7, 32, !dbg !10265
  %tobool = icmp ne i32 %and, 0, !dbg !10265
  br i1 %tobool, label %if.then, label %if.end3, !dbg !10266

if.then:                                          ; preds = %entry
  %8 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !10267
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %8, i32 0, i32 12, !dbg !10270
  %9 = load i32, i32* %layout, align 8, !dbg !10270
  %cmp = icmp ne i32 %9, 2, !dbg !10271
  br i1 %cmp, label %if.then2, label %if.end, !dbg !10272

if.then2:                                         ; preds = %if.then
  %10 = load i32, i32* %bits, align 4, !dbg !10273
  %or = or i32 %10, 6, !dbg !10273
  store i32 %or, i32* %bits, align 4, !dbg !10273
  br label %if.end, !dbg !10274

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !10275

if.end3:                                          ; preds = %if.end, %entry
  br label %do.body, !dbg !10276

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !10277

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10278, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10281, metadata !DIExpression()), !dbg !10280
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !10280
  %conv = zext i1 %cmp5 to i32, !dbg !10280
  store i32 1, i32* %tmp, align 4, !dbg !10280
  %11 = load i32, i32* %tmp, align 4, !dbg !10280
  br label %do.body6, !dbg !10282

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !10283

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !10284

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !10286, metadata !DIExpression()), !dbg !10289
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !10290, metadata !DIExpression()), !dbg !10289
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !10289
  %conv12 = zext i1 %cmp11 to i32, !dbg !10289
  store i32 1, i32* %tmp13, align 4, !dbg !10289
  %12 = load i32, i32* %tmp13, align 4, !dbg !10289
  %call = call i64 @arch_local_irq_save() #7, !dbg !10291
  store i64 %call, i64* %flags, align 8, !dbg !10291
  br label %do.end, !dbg !10291

do.end:                                           ; preds = %do.body8
  br label %do.end14, !dbg !10284

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !10283

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10292, !srcloc !10293
  br label %do.body16, !dbg !10292

do.body16:                                        ; preds = %do.body15
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10294
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %13, i32 0, i32 11, !dbg !10294
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10295
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !10296
  %rlock.i = bitcast %union.anon.3* %15 to %struct.raw_spinlock*, !dbg !10296
  br label %do.end18, !dbg !10294

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !10292

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10283

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10282

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10277

do.end22:                                         ; preds = %do.end21
  %16 = load i32, i32* %bits, align 4, !dbg !10297
  %17 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10298
  %intr_enable_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %17, i32 0, i32 17, !dbg !10299
  %18 = load i32, i32* %intr_enable_bits, align 8, !dbg !10300
  %or23 = or i32 %18, %16, !dbg !10300
  store i32 %or23, i32* %intr_enable_bits, align 8, !dbg !10300
  %19 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10301
  %intr_enable_bits24 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %19, i32 0, i32 17, !dbg !10302
  %20 = load i32, i32* %intr_enable_bits24, align 8, !dbg !10302
  %conv25 = trunc i32 %20 to i16, !dbg !10301
  %21 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10303
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %21, i32 0, i32 3, !dbg !10304
  %22 = load i8*, i8** %main_iobase, align 8, !dbg !10304
  %add.ptr = getelementptr i8, i8* %22, i64 0, !dbg !10305
  call void @writew(i16 zeroext %conv25, i8* %add.ptr) #7, !dbg !10306
  %23 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10307
  %spinlock26 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %23, i32 0, i32 11, !dbg !10308
  %24 = load i64, i64* %flags, align 8, !dbg !10309
  store %struct.spinlock* %spinlock26, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %24, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !413, metadata !5530, metadata !DIExpression()) #6, !dbg !10310
  call void @llvm.dbg.declare(metadata !413, metadata !5534, metadata !DIExpression()) #6, !dbg !10310
  store i32 1, i32* %tmp.i, align 4, !dbg !10310
  %25 = load i32, i32* %tmp.i, align 4, !dbg !10310
  call void @llvm.dbg.declare(metadata !413, metadata !5535, metadata !DIExpression()) #6, !dbg !10311
  call void @llvm.dbg.declare(metadata !413, metadata !5541, metadata !DIExpression()) #6, !dbg !10311
  store i32 1, i32* %tmp8.i, align 4, !dbg !10311
  %26 = load i32, i32* %tmp8.i, align 4, !dbg !10311
  %27 = load i64, i64* %flags.addr.i, align 8, !dbg !10312
  call void @arch_local_irq_restore(i64 %27) #9, !dbg !10312
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10313, !srcloc !5545
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !10314
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !10314
  %rlock.i28 = bitcast %union.anon.3* %29 to %struct.raw_spinlock*, !dbg !10314
  ret void, !dbg !10315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @adc_mode_bits(i32 %mode) #2 !dbg !10316 {
entry:
  %mode.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10317, metadata !DIExpression()), !dbg !10318
  %0 = load i32, i32* %mode.addr, align 4, !dbg !10319
  %and = and i32 %0, 15, !dbg !10320
  %shl = shl i32 %and, 12, !dbg !10321
  %conv = trunc i32 %shl to i16, !dbg !10322
  ret i16 %conv, !dbg !10323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @adc_lo_chan_4020_bits(i32 %channel) #2 !dbg !10324 {
entry:
  %channel.addr = alloca i32, align 4
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !10325, metadata !DIExpression()), !dbg !10326
  %0 = load i32, i32* %channel.addr, align 4, !dbg !10327
  %and = and i32 %0, 3, !dbg !10328
  %shl = shl i32 %and, 8, !dbg !10329
  %conv = trunc i32 %shl to i16, !dbg !10330
  ret i16 %conv, !dbg !10331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @adc_hi_chan_4020_bits(i32 %channel) #2 !dbg !10332 {
entry:
  %channel.addr = alloca i32, align 4
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  %0 = load i32, i32* %channel.addr, align 4, !dbg !10335
  %and = and i32 %0, 3, !dbg !10336
  %shl = shl i32 %and, 10, !dbg !10337
  %conv = trunc i32 %shl to i16, !dbg !10338
  ret i16 %conv, !dbg !10339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @use_hw_sample_counter(%struct.comedi_cmd* %cmd) #2 !dbg !10340 {
entry:
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10343, metadata !DIExpression()), !dbg !10344
  ret i32 0, !dbg !10345
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @use_internal_queue_6xxx(%struct.comedi_cmd* %cmd) #2 !dbg !10346 {
entry:
  %retval = alloca i32, align 4
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10349, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10351, metadata !DIExpression()), !dbg !10352
  store i32 0, i32* %i, align 4, !dbg !10353
  br label %for.cond, !dbg !10355

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10356
  %add = add i32 %0, 1, !dbg !10358
  %1 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10359
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %1, i32 0, i32 13, !dbg !10360
  %2 = load i32, i32* %chanlist_len, align 8, !dbg !10360
  %cmp = icmp ult i32 %add, %2, !dbg !10361
  br i1 %cmp, label %for.body, label %for.end, !dbg !10362

for.body:                                         ; preds = %for.cond
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10363
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %3, i32 0, i32 12, !dbg !10363
  %4 = load i32*, i32** %chanlist, align 8, !dbg !10363
  %5 = load i32, i32* %i, align 4, !dbg !10363
  %add1 = add i32 %5, 1, !dbg !10363
  %idxprom = sext i32 %add1 to i64, !dbg !10363
  %arrayidx = getelementptr i32, i32* %4, i64 %idxprom, !dbg !10363
  %6 = load i32, i32* %arrayidx, align 4, !dbg !10363
  %and = and i32 %6, 65535, !dbg !10363
  %7 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10366
  %chanlist2 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %7, i32 0, i32 12, !dbg !10366
  %8 = load i32*, i32** %chanlist2, align 8, !dbg !10366
  %9 = load i32, i32* %i, align 4, !dbg !10366
  %idxprom3 = sext i32 %9 to i64, !dbg !10366
  %arrayidx4 = getelementptr i32, i32* %8, i64 %idxprom3, !dbg !10366
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !10366
  %and5 = and i32 %10, 65535, !dbg !10366
  %add6 = add i32 %and5, 1, !dbg !10367
  %cmp7 = icmp ne i32 %and, %add6, !dbg !10368
  br i1 %cmp7, label %if.then, label %if.end, !dbg !10369

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !10370
  br label %return, !dbg !10370

if.end:                                           ; preds = %for.body
  %11 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10371
  %chanlist8 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %11, i32 0, i32 12, !dbg !10371
  %12 = load i32*, i32** %chanlist8, align 8, !dbg !10371
  %13 = load i32, i32* %i, align 4, !dbg !10371
  %add9 = add i32 %13, 1, !dbg !10371
  %idxprom10 = sext i32 %add9 to i64, !dbg !10371
  %arrayidx11 = getelementptr i32, i32* %12, i64 %idxprom10, !dbg !10371
  %14 = load i32, i32* %arrayidx11, align 4, !dbg !10371
  %shr = lshr i32 %14, 16, !dbg !10371
  %and12 = and i32 %shr, 255, !dbg !10371
  %15 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10373
  %chanlist13 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %15, i32 0, i32 12, !dbg !10373
  %16 = load i32*, i32** %chanlist13, align 8, !dbg !10373
  %17 = load i32, i32* %i, align 4, !dbg !10373
  %idxprom14 = sext i32 %17 to i64, !dbg !10373
  %arrayidx15 = getelementptr i32, i32* %16, i64 %idxprom14, !dbg !10373
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !10373
  %shr16 = lshr i32 %18, 16, !dbg !10373
  %and17 = and i32 %shr16, 255, !dbg !10373
  %cmp18 = icmp ne i32 %and12, %and17, !dbg !10374
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10375

if.then19:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10376
  br label %return, !dbg !10376

if.end20:                                         ; preds = %if.end
  %19 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10377
  %chanlist21 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %19, i32 0, i32 12, !dbg !10377
  %20 = load i32*, i32** %chanlist21, align 8, !dbg !10377
  %21 = load i32, i32* %i, align 4, !dbg !10377
  %add22 = add i32 %21, 1, !dbg !10377
  %idxprom23 = sext i32 %add22 to i64, !dbg !10377
  %arrayidx24 = getelementptr i32, i32* %20, i64 %idxprom23, !dbg !10377
  %22 = load i32, i32* %arrayidx24, align 4, !dbg !10377
  %shr25 = lshr i32 %22, 24, !dbg !10377
  %and26 = and i32 %shr25, 3, !dbg !10377
  %23 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10379
  %chanlist27 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %23, i32 0, i32 12, !dbg !10379
  %24 = load i32*, i32** %chanlist27, align 8, !dbg !10379
  %25 = load i32, i32* %i, align 4, !dbg !10379
  %idxprom28 = sext i32 %25 to i64, !dbg !10379
  %arrayidx29 = getelementptr i32, i32* %24, i64 %idxprom28, !dbg !10379
  %26 = load i32, i32* %arrayidx29, align 4, !dbg !10379
  %shr30 = lshr i32 %26, 24, !dbg !10379
  %and31 = and i32 %shr30, 3, !dbg !10379
  %cmp32 = icmp ne i32 %and26, %and31, !dbg !10380
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !10381

if.then33:                                        ; preds = %if.end20
  store i32 0, i32* %retval, align 4, !dbg !10382
  br label %return, !dbg !10382

if.end34:                                         ; preds = %if.end20
  br label %for.inc, !dbg !10383

for.inc:                                          ; preds = %if.end34
  %27 = load i32, i32* %i, align 4, !dbg !10384
  %inc = add i32 %27, 1, !dbg !10384
  store i32 %inc, i32* %i, align 4, !dbg !10384
  br label %for.cond, !dbg !10385, !llvm.loop !10386

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !10388
  br label %return, !dbg !10388

return:                                           ; preds = %for.end, %if.then33, %if.then19, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !10389
  ret i32 %28, !dbg !10389
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @warn_external_queue(%struct.comedi_device* %dev) #2 !dbg !10390 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10391, metadata !DIExpression()), !dbg !10392
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10393
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 4, !dbg !10393
  %1 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !10393
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %1, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.34, i64 0, i64 0)) #8, !dbg !10393
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10394
  %class_dev1 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 4, !dbg !10394
  %3 = load %struct.device*, %struct.device** %class_dev1, align 8, !dbg !10394
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %3, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.35, i64 0, i64 0)) #8, !dbg !10394
  ret void, !dbg !10395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_adc_timing(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !4292 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %convert_divisor = alloca i64, align 8
  %scan_divisor = alloca i32, align 4
  %max_scan_divisor = alloca i64, align 8
  %min_scan_divisor = alloca i64, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10396, metadata !DIExpression()), !dbg !10397
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10398, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !10400, metadata !DIExpression()), !dbg !10401
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10402
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !10403
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !10403
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !10402
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !10401
  call void @llvm.dbg.declare(metadata i64* %convert_divisor, metadata !10404, metadata !DIExpression()), !dbg !10405
  store i64 0, i64* %convert_divisor, align 8, !dbg !10405
  call void @llvm.dbg.declare(metadata i32* %scan_divisor, metadata !10406, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.declare(metadata i64* %max_scan_divisor, metadata !10408, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.declare(metadata i64* %min_scan_divisor, metadata !10410, metadata !DIExpression()), !dbg !10411
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10412
  %convert_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %3, i32 0, i32 6, !dbg !10414
  %4 = load i32, i32* %convert_src, align 8, !dbg !10414
  %cmp = icmp eq i32 %4, 16, !dbg !10415
  br i1 %cmp, label %if.then, label %if.else14, !dbg !10416

if.then:                                          ; preds = %entry
  %5 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !10417
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %5, i32 0, i32 12, !dbg !10420
  %6 = load i32, i32* %layout, align 8, !dbg !10420
  %cmp1 = icmp eq i32 %6, 2, !dbg !10421
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !10422

if.then2:                                         ; preds = %if.then
  %7 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10423
  %convert_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %7, i32 0, i32 7, !dbg !10425
  store i32 0, i32* %convert_arg, align 4, !dbg !10426
  br label %if.end13, !dbg !10427

if.else:                                          ; preds = %if.then
  %8 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10428
  %convert_arg3 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %8, i32 0, i32 7, !dbg !10430
  %9 = load i32, i32* %convert_arg3, align 4, !dbg !10430
  %10 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10431
  %flags = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %10, i32 0, i32 1, !dbg !10432
  %11 = load i32, i32* %flags, align 4, !dbg !10432
  %call = call i32 @get_divisor(i32 %9, i32 %11) #7, !dbg !10433
  %conv = zext i32 %call to i64, !dbg !10433
  store i64 %conv, i64* %convert_divisor, align 8, !dbg !10434
  %12 = load i64, i64* %convert_divisor, align 8, !dbg !10435
  %cmp4 = icmp ugt i64 %12, 16777218, !dbg !10437
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !10438

if.then6:                                         ; preds = %if.else
  store i64 16777218, i64* %convert_divisor, align 8, !dbg !10439
  br label %if.end, !dbg !10440

if.end:                                           ; preds = %if.then6, %if.else
  %13 = load i64, i64* %convert_divisor, align 8, !dbg !10441
  %cmp7 = icmp ult i64 %13, 3, !dbg !10443
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !10444

if.then9:                                         ; preds = %if.end
  store i64 3, i64* %convert_divisor, align 8, !dbg !10445
  br label %if.end10, !dbg !10446

if.end10:                                         ; preds = %if.then9, %if.end
  %14 = load i64, i64* %convert_divisor, align 8, !dbg !10447
  %mul = mul i64 %14, 25, !dbg !10448
  %conv11 = trunc i64 %mul to i32, !dbg !10447
  %15 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10449
  %convert_arg12 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %15, i32 0, i32 7, !dbg !10450
  store i32 %conv11, i32* %convert_arg12, align 4, !dbg !10451
  br label %if.end13

if.end13:                                         ; preds = %if.end10, %if.then2
  br label %if.end21, !dbg !10452

if.else14:                                        ; preds = %entry
  %16 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10453
  %convert_src15 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %16, i32 0, i32 6, !dbg !10455
  %17 = load i32, i32* %convert_src15, align 8, !dbg !10455
  %cmp16 = icmp eq i32 %17, 2, !dbg !10456
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !10457

if.then18:                                        ; preds = %if.else14
  %18 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10458
  %convert_arg19 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %18, i32 0, i32 7, !dbg !10460
  store i32 0, i32* %convert_arg19, align 4, !dbg !10461
  br label %if.end20, !dbg !10462

if.end20:                                         ; preds = %if.then18, %if.else14
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end13
  %19 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10463
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %19, i32 0, i32 4, !dbg !10465
  %20 = load i32, i32* %scan_begin_src, align 8, !dbg !10465
  %cmp22 = icmp eq i32 %20, 16, !dbg !10466
  br i1 %cmp22, label %if.then24, label %if.end53, !dbg !10467

if.then24:                                        ; preds = %if.end21
  %21 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10468
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %21, i32 0, i32 5, !dbg !10470
  %22 = load i32, i32* %scan_begin_arg, align 4, !dbg !10470
  %23 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10471
  %flags25 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %23, i32 0, i32 1, !dbg !10472
  %24 = load i32, i32* %flags25, align 4, !dbg !10472
  %call26 = call i32 @get_divisor(i32 %22, i32 %24) #7, !dbg !10473
  store i32 %call26, i32* %scan_divisor, align 4, !dbg !10474
  %25 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10475
  %convert_src27 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %25, i32 0, i32 6, !dbg !10477
  %26 = load i32, i32* %convert_src27, align 8, !dbg !10477
  %cmp28 = icmp eq i32 %26, 16, !dbg !10478
  br i1 %cmp28, label %if.then30, label %if.else36, !dbg !10479

if.then30:                                        ; preds = %if.then24
  %27 = load i64, i64* %convert_divisor, align 8, !dbg !10480
  %28 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10482
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %28, i32 0, i32 13, !dbg !10483
  %29 = load i32, i32* %chanlist_len, align 8, !dbg !10483
  %conv31 = zext i32 %29 to i64, !dbg !10482
  %mul32 = mul i64 %27, %conv31, !dbg !10484
  store i64 %mul32, i64* %min_scan_divisor, align 8, !dbg !10485
  %30 = load i64, i64* %convert_divisor, align 8, !dbg !10486
  %31 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10487
  %chanlist_len33 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %31, i32 0, i32 13, !dbg !10488
  %32 = load i32, i32* %chanlist_len33, align 8, !dbg !10488
  %conv34 = zext i32 %32 to i64, !dbg !10487
  %mul35 = mul i64 %30, %conv34, !dbg !10489
  %sub = sub i64 %mul35, 1, !dbg !10490
  %add = add i64 %sub, 16777215, !dbg !10491
  store i64 %add, i64* %max_scan_divisor, align 8, !dbg !10492
  br label %if.end38, !dbg !10493

if.else36:                                        ; preds = %if.then24
  store i64 2, i64* %min_scan_divisor, align 8, !dbg !10494
  %33 = load i64, i64* %min_scan_divisor, align 8, !dbg !10496
  %add37 = add i64 16777215, %33, !dbg !10497
  store i64 %add37, i64* %max_scan_divisor, align 8, !dbg !10498
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.then30
  %34 = load i32, i32* %scan_divisor, align 4, !dbg !10499
  %conv39 = zext i32 %34 to i64, !dbg !10499
  %35 = load i64, i64* %max_scan_divisor, align 8, !dbg !10501
  %cmp40 = icmp ugt i64 %conv39, %35, !dbg !10502
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !10503

if.then42:                                        ; preds = %if.end38
  %36 = load i64, i64* %max_scan_divisor, align 8, !dbg !10504
  %conv43 = trunc i64 %36 to i32, !dbg !10504
  store i32 %conv43, i32* %scan_divisor, align 4, !dbg !10505
  br label %if.end44, !dbg !10506

if.end44:                                         ; preds = %if.then42, %if.end38
  %37 = load i32, i32* %scan_divisor, align 4, !dbg !10507
  %conv45 = zext i32 %37 to i64, !dbg !10507
  %38 = load i64, i64* %min_scan_divisor, align 8, !dbg !10509
  %cmp46 = icmp ult i64 %conv45, %38, !dbg !10510
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !10511

if.then48:                                        ; preds = %if.end44
  %39 = load i64, i64* %min_scan_divisor, align 8, !dbg !10512
  %conv49 = trunc i64 %39 to i32, !dbg !10512
  store i32 %conv49, i32* %scan_divisor, align 4, !dbg !10513
  br label %if.end50, !dbg !10514

if.end50:                                         ; preds = %if.then48, %if.end44
  %40 = load i32, i32* %scan_divisor, align 4, !dbg !10515
  %mul51 = mul i32 %40, 25, !dbg !10516
  %41 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10517
  %scan_begin_arg52 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %41, i32 0, i32 5, !dbg !10518
  store i32 %mul51, i32* %scan_begin_arg52, align 4, !dbg !10519
  br label %if.end53, !dbg !10520

if.end53:                                         ; preds = %if.end50, %if.end21
  ret void, !dbg !10521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @select_master_clock(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !10522 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10523, metadata !DIExpression()), !dbg !10524
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10525, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !10527, metadata !DIExpression()), !dbg !10528
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10529
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !10530
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !10530
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !10529
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !10528
  %3 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !10531
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %3, i32 0, i32 12, !dbg !10532
  %4 = load i32, i32* %layout, align 8, !dbg !10532
  switch i32 %4, label %sw.default [
    i32 2, label %sw.bb
  ], !dbg !10533

sw.bb:                                            ; preds = %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10534
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10536
  call void @select_master_clock_4020(%struct.comedi_device* %5, %struct.comedi_cmd* %6) #7, !dbg !10537
  br label %sw.epilog, !dbg !10538

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !10539

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  ret void, !dbg !10540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_convert_counter_4020(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !10541 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %divisor = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10544, metadata !DIExpression()), !dbg !10545
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10546, metadata !DIExpression()), !dbg !10547
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !10548, metadata !DIExpression()), !dbg !10549
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10550
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10551
  %1 = load i8*, i8** %private, align 8, !dbg !10551
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !10550
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !10549
  call void @llvm.dbg.declare(metadata i32* %divisor, metadata !10552, metadata !DIExpression()), !dbg !10553
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10554
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %3, i32 0, i32 4, !dbg !10555
  %4 = load i32, i32* %scan_begin_src, align 8, !dbg !10555
  switch i32 %4, label %sw.default [
    i32 16, label %sw.bb
    i32 256, label %sw.bb1
  ], !dbg !10556

sw.bb:                                            ; preds = %entry
  %5 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10557
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %5, i32 0, i32 5, !dbg !10559
  %6 = load i32, i32* %scan_begin_arg, align 4, !dbg !10559
  %div = udiv i32 %6, 25, !dbg !10560
  store i32 %div, i32* %divisor, align 4, !dbg !10561
  br label %sw.epilog, !dbg !10562

sw.bb1:                                           ; preds = %entry
  %7 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10563
  %ext_clock = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %7, i32 0, i32 29, !dbg !10564
  %divisor2 = getelementptr inbounds %struct.ext_clock_info, %struct.ext_clock_info* %ext_clock, i32 0, i32 0, !dbg !10565
  %8 = load i32, i32* %divisor2, align 8, !dbg !10565
  store i32 %8, i32* %divisor, align 4, !dbg !10566
  br label %sw.epilog, !dbg !10567

sw.default:                                       ; preds = %entry
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10568
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 4, !dbg !10568
  %10 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !10568
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %10, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.36, i64 0, i64 0)) #8, !dbg !10568
  store i32 1000, i32* %divisor, align 4, !dbg !10569
  br label %sw.epilog, !dbg !10570

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  %11 = load i32, i32* %divisor, align 4, !dbg !10571
  %sub = sub i32 %11, 2, !dbg !10572
  ret i32 %sub, !dbg !10573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_convert_counter_6xxx(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !10574 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10577, metadata !DIExpression()), !dbg !10578
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10579, metadata !DIExpression()), !dbg !10580
  %0 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10581
  %convert_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %0, i32 0, i32 7, !dbg !10582
  %1 = load i32, i32* %convert_arg, align 4, !dbg !10582
  %div = udiv i32 %1, 25, !dbg !10583
  %sub = sub i32 %div, 3, !dbg !10584
  ret i32 %sub, !dbg !10585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ai_scan_counter_6xxx(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !10586 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %count = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10587, metadata !DIExpression()), !dbg !10588
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10589, metadata !DIExpression()), !dbg !10590
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10591, metadata !DIExpression()), !dbg !10592
  %0 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10593
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %0, i32 0, i32 4, !dbg !10594
  %1 = load i32, i32* %scan_begin_src, align 8, !dbg !10594
  switch i32 %1, label %sw.default [
    i32 16, label %sw.bb
    i32 4, label %sw.bb2
  ], !dbg !10595

sw.bb:                                            ; preds = %entry
  %2 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10596
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %2, i32 0, i32 5, !dbg !10598
  %3 = load i32, i32* %scan_begin_arg, align 4, !dbg !10598
  %4 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10599
  %convert_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %4, i32 0, i32 7, !dbg !10600
  %5 = load i32, i32* %convert_arg, align 4, !dbg !10600
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10601
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 13, !dbg !10602
  %7 = load i32, i32* %chanlist_len, align 8, !dbg !10602
  %sub = sub i32 %7, 1, !dbg !10603
  %mul = mul i32 %5, %sub, !dbg !10604
  %sub1 = sub i32 %3, %mul, !dbg !10605
  %div = udiv i32 %sub1, 25, !dbg !10606
  store i32 %div, i32* %count, align 4, !dbg !10607
  br label %sw.epilog, !dbg !10608

sw.bb2:                                           ; preds = %entry
  %8 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10609
  %convert_arg3 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %8, i32 0, i32 7, !dbg !10610
  %9 = load i32, i32* %convert_arg3, align 4, !dbg !10610
  %div4 = udiv i32 %9, 25, !dbg !10611
  store i32 %div4, i32* %count, align 4, !dbg !10612
  br label %sw.epilog, !dbg !10613

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10614
  br label %return, !dbg !10614

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb
  %10 = load i32, i32* %count, align 4, !dbg !10615
  %sub5 = sub i32 %10, 3, !dbg !10616
  store i32 %sub5, i32* %retval, align 4, !dbg !10617
  br label %return, !dbg !10617

return:                                           ; preds = %sw.epilog, %sw.default
  %11 = load i32, i32* %retval, align 4, !dbg !10618
  ret i32 %11, !dbg !10618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_divisor(i32 %ns, i32 %flags) #2 !dbg !10619 {
entry:
  %ns.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %divisor = alloca i32, align 4
  %__x = alloca i32, align 4
  %__d = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %ns, i32* %ns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !10622, metadata !DIExpression()), !dbg !10623
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10624, metadata !DIExpression()), !dbg !10625
  call void @llvm.dbg.declare(metadata i32* %divisor, metadata !10626, metadata !DIExpression()), !dbg !10627
  %0 = load i32, i32* %flags.addr, align 4, !dbg !10628
  %and = and i32 %0, 196608, !dbg !10629
  switch i32 %and, label %sw.default [
    i32 131072, label %sw.bb
    i32 65536, label %sw.bb1
    i32 0, label %sw.bb3
  ], !dbg !10630

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %ns.addr, align 4, !dbg !10631
  %add = add i32 %1, 25, !dbg !10631
  %sub = sub i32 %add, 1, !dbg !10631
  %div = udiv i32 %sub, 25, !dbg !10631
  store i32 %div, i32* %divisor, align 4, !dbg !10633
  br label %sw.epilog, !dbg !10634

sw.bb1:                                           ; preds = %entry
  %2 = load i32, i32* %ns.addr, align 4, !dbg !10635
  %div2 = udiv i32 %2, 25, !dbg !10636
  store i32 %div2, i32* %divisor, align 4, !dbg !10637
  br label %sw.epilog, !dbg !10638

sw.bb3:                                           ; preds = %entry
  br label %sw.default, !dbg !10638

sw.default:                                       ; preds = %entry, %sw.bb3
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !10639, metadata !DIExpression()), !dbg !10641
  %3 = load i32, i32* %ns.addr, align 4, !dbg !10641
  store i32 %3, i32* %__x, align 4, !dbg !10641
  call void @llvm.dbg.declare(metadata i32* %__d, metadata !10642, metadata !DIExpression()), !dbg !10641
  store i32 25, i32* %__d, align 4, !dbg !10641
  %4 = load i32, i32* %__x, align 4, !dbg !10641
  %5 = load i32, i32* %__d, align 4, !dbg !10641
  %div4 = sdiv i32 %5, 2, !dbg !10641
  %add5 = add i32 %4, %div4, !dbg !10641
  %6 = load i32, i32* %__d, align 4, !dbg !10641
  %div6 = udiv i32 %add5, %6, !dbg !10641
  store i32 %div6, i32* %tmp, align 4, !dbg !10641
  %7 = load i32, i32* %tmp, align 4, !dbg !10641
  store i32 %7, i32* %divisor, align 4, !dbg !10643
  br label %sw.epilog, !dbg !10644

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  %8 = load i32, i32* %divisor, align 4, !dbg !10645
  ret i32 %8, !dbg !10646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @select_master_clock_4020(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !10647 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %chanspec = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10648, metadata !DIExpression()), !dbg !10649
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10650, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !10652, metadata !DIExpression()), !dbg !10653
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10654
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10655
  %1 = load i8*, i8** %private, align 8, !dbg !10655
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !10654
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !10653
  %3 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10656
  %hw_config_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %3, i32 0, i32 20, !dbg !10657
  %4 = load i16, i16* %hw_config_bits, align 8, !dbg !10658
  %conv = zext i16 %4 to i32, !dbg !10658
  %and = and i32 %conv, -4, !dbg !10658
  %conv1 = trunc i32 %and to i16, !dbg !10658
  store i16 %conv1, i16* %hw_config_bits, align 8, !dbg !10658
  %5 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10659
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %5, i32 0, i32 4, !dbg !10661
  %6 = load i32, i32* %scan_begin_src, align 8, !dbg !10661
  %cmp = icmp eq i32 %6, 256, !dbg !10662
  br i1 %cmp, label %if.then, label %if.else13, !dbg !10663

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %chanspec, metadata !10664, metadata !DIExpression()), !dbg !10666
  %7 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10667
  %ext_clock = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %7, i32 0, i32 29, !dbg !10668
  %chanspec3 = getelementptr inbounds %struct.ext_clock_info, %struct.ext_clock_info* %ext_clock, i32 0, i32 1, !dbg !10669
  %8 = load i32, i32* %chanspec3, align 4, !dbg !10669
  store i32 %8, i32* %chanspec, align 4, !dbg !10666
  %9 = load i32, i32* %chanspec, align 4, !dbg !10670
  %and4 = and i32 %9, 65535, !dbg !10670
  %tobool = icmp ne i32 %and4, 0, !dbg !10670
  br i1 %tobool, label %if.then5, label %if.else, !dbg !10672

if.then5:                                         ; preds = %if.then
  %10 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10673
  %hw_config_bits6 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %10, i32 0, i32 20, !dbg !10674
  %11 = load i16, i16* %hw_config_bits6, align 8, !dbg !10675
  %conv7 = zext i16 %11 to i32, !dbg !10675
  %or = or i32 %conv7, 2, !dbg !10675
  %conv8 = trunc i32 %or to i16, !dbg !10675
  store i16 %conv8, i16* %hw_config_bits6, align 8, !dbg !10675
  br label %if.end, !dbg !10673

if.else:                                          ; preds = %if.then
  %12 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10676
  %hw_config_bits9 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %12, i32 0, i32 20, !dbg !10677
  %13 = load i16, i16* %hw_config_bits9, align 8, !dbg !10678
  %conv10 = zext i16 %13 to i32, !dbg !10678
  %or11 = or i32 %conv10, 3, !dbg !10678
  %conv12 = trunc i32 %or11 to i16, !dbg !10678
  store i16 %conv12, i16* %hw_config_bits9, align 8, !dbg !10678
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end18, !dbg !10679

if.else13:                                        ; preds = %entry
  %14 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10680
  %hw_config_bits14 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %14, i32 0, i32 20, !dbg !10682
  %15 = load i16, i16* %hw_config_bits14, align 8, !dbg !10683
  %conv15 = zext i16 %15 to i32, !dbg !10683
  %or16 = or i32 %conv15, 1, !dbg !10683
  %conv17 = trunc i32 %or16 to i16, !dbg !10683
  store i16 %conv17, i16* %hw_config_bits14, align 8, !dbg !10683
  br label %if.end18

if.end18:                                         ; preds = %if.else13, %if.end
  %16 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10684
  %hw_config_bits19 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %16, i32 0, i32 20, !dbg !10685
  %17 = load i16, i16* %hw_config_bits19, align 8, !dbg !10685
  %18 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10686
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %18, i32 0, i32 3, !dbg !10687
  %19 = load i8*, i8** %main_iobase, align 8, !dbg !10687
  %add.ptr = getelementptr i8, i8* %19, i64 2, !dbg !10688
  call void @writew(i16 zeroext %17, i8* %add.ptr) #7, !dbg !10689
  ret void, !dbg !10690
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_check_trigger_src(i32* %src, i32 %flags) #2 !dbg !10691 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32*, align 8
  %flags.addr = alloca i32, align 4
  %orig_src = alloca i32, align 4
  store i32* %src, i32** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %src.addr, metadata !10694, metadata !DIExpression()), !dbg !10695
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10696, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.declare(metadata i32* %orig_src, metadata !10698, metadata !DIExpression()), !dbg !10699
  %0 = load i32*, i32** %src.addr, align 8, !dbg !10700
  %1 = load i32, i32* %0, align 4, !dbg !10701
  store i32 %1, i32* %orig_src, align 4, !dbg !10699
  %2 = load i32, i32* %orig_src, align 4, !dbg !10702
  %3 = load i32, i32* %flags.addr, align 4, !dbg !10703
  %and = and i32 %2, %3, !dbg !10704
  %4 = load i32*, i32** %src.addr, align 8, !dbg !10705
  store i32 %and, i32* %4, align 4, !dbg !10706
  %5 = load i32*, i32** %src.addr, align 8, !dbg !10707
  %6 = load i32, i32* %5, align 4, !dbg !10709
  %cmp = icmp eq i32 %6, 0, !dbg !10710
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10711

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32*, i32** %src.addr, align 8, !dbg !10712
  %8 = load i32, i32* %7, align 4, !dbg !10713
  %9 = load i32, i32* %orig_src, align 4, !dbg !10714
  %cmp1 = icmp ne i32 %8, %9, !dbg !10715
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10716

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !10717
  br label %return, !dbg !10717

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !10718
  br label %return, !dbg !10718

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !10719
  ret i32 %10, !dbg !10719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_check_trigger_is_unique(i32 %src) #2 !dbg !10720 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !10723, metadata !DIExpression()), !dbg !10724
  %0 = load i32, i32* %src.addr, align 4, !dbg !10725
  %1 = load i32, i32* %src.addr, align 4, !dbg !10727
  %sub = sub i32 %1, 1, !dbg !10728
  %and = and i32 %0, %sub, !dbg !10729
  %cmp = icmp ne i32 %and, 0, !dbg !10730
  br i1 %cmp, label %if.then, label %if.end, !dbg !10731

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10732
  br label %return, !dbg !10732

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10733
  br label %return, !dbg !10733

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !10734
  ret i32 %2, !dbg !10734
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_check_trigger_arg_is(i32* %arg, i32 %val) #2 !dbg !10735 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i32*, align 8
  %val.addr = alloca i32, align 4
  store i32* %arg, i32** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %arg.addr, metadata !10736, metadata !DIExpression()), !dbg !10737
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10738, metadata !DIExpression()), !dbg !10739
  %0 = load i32*, i32** %arg.addr, align 8, !dbg !10740
  %1 = load i32, i32* %0, align 4, !dbg !10742
  %2 = load i32, i32* %val.addr, align 4, !dbg !10743
  %cmp = icmp ne i32 %1, %2, !dbg !10744
  br i1 %cmp, label %if.then, label %if.end, !dbg !10745

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %val.addr, align 4, !dbg !10746
  %4 = load i32*, i32** %arg.addr, align 8, !dbg !10748
  store i32 %3, i32* %4, align 4, !dbg !10749
  store i32 -22, i32* %retval, align 4, !dbg !10750
  br label %return, !dbg !10750

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10751
  br label %return, !dbg !10751

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10752
  ret i32 %5, !dbg !10752
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_check_trigger_arg_min(i32* %arg, i32 %val) #2 !dbg !10753 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i32*, align 8
  %val.addr = alloca i32, align 4
  store i32* %arg, i32** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %arg.addr, metadata !10754, metadata !DIExpression()), !dbg !10755
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10756, metadata !DIExpression()), !dbg !10757
  %0 = load i32*, i32** %arg.addr, align 8, !dbg !10758
  %1 = load i32, i32* %0, align 4, !dbg !10760
  %2 = load i32, i32* %val.addr, align 4, !dbg !10761
  %cmp = icmp ult i32 %1, %2, !dbg !10762
  br i1 %cmp, label %if.then, label %if.end, !dbg !10763

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %val.addr, align 4, !dbg !10764
  %4 = load i32*, i32** %arg.addr, align 8, !dbg !10766
  store i32 %3, i32* %4, align 4, !dbg !10767
  store i32 -22, i32* %retval, align 4, !dbg !10768
  br label %return, !dbg !10768

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10769
  br label %return, !dbg !10769

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10770
  ret i32 %5, !dbg !10770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cb_pcidas64_ai_check_chanlist(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_cmd* %cmd) #2 !dbg !10771 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  %aref0 = alloca i32, align 4
  %i = alloca i32, align 4
  %aref = alloca i32, align 4
  %chan0 = alloca i32, align 4
  %chan = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10772, metadata !DIExpression()), !dbg !10773
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10774, metadata !DIExpression()), !dbg !10775
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10776, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !10778, metadata !DIExpression()), !dbg !10779
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10780
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !10781
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !10781
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !10780
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !10779
  call void @llvm.dbg.declare(metadata i32* %aref0, metadata !10782, metadata !DIExpression()), !dbg !10783
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10784
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %3, i32 0, i32 12, !dbg !10784
  %4 = load i32*, i32** %chanlist, align 8, !dbg !10784
  %arrayidx = getelementptr i32, i32* %4, i64 0, !dbg !10784
  %5 = load i32, i32* %arrayidx, align 4, !dbg !10784
  %shr = lshr i32 %5, 24, !dbg !10784
  %and = and i32 %shr, 3, !dbg !10784
  store i32 %and, i32* %aref0, align 4, !dbg !10783
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10785, metadata !DIExpression()), !dbg !10786
  store i32 1, i32* %i, align 4, !dbg !10787
  br label %for.cond, !dbg !10789

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !10790
  %7 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10792
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %7, i32 0, i32 13, !dbg !10793
  %8 = load i32, i32* %chanlist_len, align 8, !dbg !10793
  %cmp = icmp ult i32 %6, %8, !dbg !10794
  br i1 %cmp, label %for.body, label %for.end, !dbg !10795

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %aref, metadata !10796, metadata !DIExpression()), !dbg !10798
  %9 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10799
  %chanlist1 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %9, i32 0, i32 12, !dbg !10799
  %10 = load i32*, i32** %chanlist1, align 8, !dbg !10799
  %11 = load i32, i32* %i, align 4, !dbg !10799
  %idxprom = sext i32 %11 to i64, !dbg !10799
  %arrayidx2 = getelementptr i32, i32* %10, i64 %idxprom, !dbg !10799
  %12 = load i32, i32* %arrayidx2, align 4, !dbg !10799
  %shr3 = lshr i32 %12, 24, !dbg !10799
  %and4 = and i32 %shr3, 3, !dbg !10799
  store i32 %and4, i32* %aref, align 4, !dbg !10798
  %13 = load i32, i32* %aref, align 4, !dbg !10800
  %14 = load i32, i32* %aref0, align 4, !dbg !10802
  %cmp5 = icmp ne i32 %13, %14, !dbg !10803
  br i1 %cmp5, label %if.then, label %if.end, !dbg !10804

if.then:                                          ; preds = %for.body
  store i32 -22, i32* %retval, align 4, !dbg !10805
  br label %return, !dbg !10805

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10807

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !dbg !10808
  %inc = add i32 %15, 1, !dbg !10808
  store i32 %inc, i32* %i, align 4, !dbg !10808
  br label %for.cond, !dbg !10809, !llvm.loop !10810

for.end:                                          ; preds = %for.cond
  %16 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !10812
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %16, i32 0, i32 12, !dbg !10814
  %17 = load i32, i32* %layout, align 8, !dbg !10814
  %cmp6 = icmp eq i32 %17, 2, !dbg !10815
  br i1 %cmp6, label %if.then7, label %if.end29, !dbg !10816

if.then7:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %chan0, metadata !10817, metadata !DIExpression()), !dbg !10819
  %18 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10820
  %chanlist8 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %18, i32 0, i32 12, !dbg !10820
  %19 = load i32*, i32** %chanlist8, align 8, !dbg !10820
  %arrayidx9 = getelementptr i32, i32* %19, i64 0, !dbg !10820
  %20 = load i32, i32* %arrayidx9, align 4, !dbg !10820
  %and10 = and i32 %20, 65535, !dbg !10820
  store i32 %and10, i32* %chan0, align 4, !dbg !10819
  store i32 1, i32* %i, align 4, !dbg !10821
  br label %for.cond11, !dbg !10823

for.cond11:                                       ; preds = %for.inc22, %if.then7
  %21 = load i32, i32* %i, align 4, !dbg !10824
  %22 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10826
  %chanlist_len12 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %22, i32 0, i32 13, !dbg !10827
  %23 = load i32, i32* %chanlist_len12, align 8, !dbg !10827
  %cmp13 = icmp ult i32 %21, %23, !dbg !10828
  br i1 %cmp13, label %for.body14, label %for.end24, !dbg !10829

for.body14:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !10830, metadata !DIExpression()), !dbg !10832
  %24 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10833
  %chanlist15 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %24, i32 0, i32 12, !dbg !10833
  %25 = load i32*, i32** %chanlist15, align 8, !dbg !10833
  %26 = load i32, i32* %i, align 4, !dbg !10833
  %idxprom16 = sext i32 %26 to i64, !dbg !10833
  %arrayidx17 = getelementptr i32, i32* %25, i64 %idxprom16, !dbg !10833
  %27 = load i32, i32* %arrayidx17, align 4, !dbg !10833
  %and18 = and i32 %27, 65535, !dbg !10833
  store i32 %and18, i32* %chan, align 4, !dbg !10832
  %28 = load i32, i32* %chan, align 4, !dbg !10834
  %29 = load i32, i32* %chan0, align 4, !dbg !10836
  %30 = load i32, i32* %i, align 4, !dbg !10837
  %add = add i32 %29, %30, !dbg !10838
  %cmp19 = icmp ne i32 %28, %add, !dbg !10839
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !10840

if.then20:                                        ; preds = %for.body14
  store i32 -22, i32* %retval, align 4, !dbg !10841
  br label %return, !dbg !10841

if.end21:                                         ; preds = %for.body14
  br label %for.inc22, !dbg !10843

for.inc22:                                        ; preds = %if.end21
  %31 = load i32, i32* %i, align 4, !dbg !10844
  %inc23 = add i32 %31, 1, !dbg !10844
  store i32 %inc23, i32* %i, align 4, !dbg !10844
  br label %for.cond11, !dbg !10845, !llvm.loop !10846

for.end24:                                        ; preds = %for.cond11
  %32 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10848
  %chanlist_len25 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %32, i32 0, i32 13, !dbg !10850
  %33 = load i32, i32* %chanlist_len25, align 8, !dbg !10850
  %cmp26 = icmp eq i32 %33, 3, !dbg !10851
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !10852

if.then27:                                        ; preds = %for.end24
  store i32 -22, i32* %retval, align 4, !dbg !10853
  br label %return, !dbg !10853

if.end28:                                         ; preds = %for.end24
  br label %if.end29, !dbg !10855

if.end29:                                         ; preds = %if.end28, %for.end
  store i32 0, i32* %retval, align 4, !dbg !10856
  br label %return, !dbg !10856

return:                                           ; preds = %if.end29, %if.then27, %if.then20, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !10857
  ret i32 %34, !dbg !10857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @i2c_stop(%struct.comedi_device* %dev) #2 !dbg !10858 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10859, metadata !DIExpression()), !dbg !10860
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10861
  call void @i2c_set_scl(%struct.comedi_device* %0, i32 0) #7, !dbg !10862
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10863
  call void @i2c_set_sda(%struct.comedi_device* %1, i32 0) #7, !dbg !10864
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10865
  call void @i2c_set_scl(%struct.comedi_device* %2, i32 1) #7, !dbg !10866
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10867
  call void @i2c_set_sda(%struct.comedi_device* %3, i32 1) #7, !dbg !10868
  ret void, !dbg !10869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @i2c_start(%struct.comedi_device* %dev) #2 !dbg !10870 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10871, metadata !DIExpression()), !dbg !10872
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10873
  call void @i2c_set_scl(%struct.comedi_device* %0, i32 1) #7, !dbg !10874
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10875
  call void @i2c_set_sda(%struct.comedi_device* %1, i32 1) #7, !dbg !10876
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10877
  call void @i2c_set_sda(%struct.comedi_device* %2, i32 0) #7, !dbg !10878
  ret void, !dbg !10879
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @i2c_write_byte(%struct.comedi_device* %dev, i8 zeroext %byte) #2 !dbg !10880 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %byte.addr = alloca i8, align 1
  %bit = alloca i8, align 1
  %num_bits = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10883, metadata !DIExpression()), !dbg !10884
  store i8 %byte, i8* %byte.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %byte.addr, metadata !10885, metadata !DIExpression()), !dbg !10886
  call void @llvm.dbg.declare(metadata i8* %bit, metadata !10887, metadata !DIExpression()), !dbg !10888
  call void @llvm.dbg.declare(metadata i32* %num_bits, metadata !10889, metadata !DIExpression()), !dbg !10890
  store i32 8, i32* %num_bits, align 4, !dbg !10890
  %0 = load i32, i32* %num_bits, align 4, !dbg !10891
  %sub = sub i32 %0, 1, !dbg !10893
  %shl = shl i32 1, %sub, !dbg !10894
  %conv = trunc i32 %shl to i8, !dbg !10895
  store i8 %conv, i8* %bit, align 1, !dbg !10896
  br label %for.cond, !dbg !10897

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8, i8* %bit, align 1, !dbg !10898
  %tobool = icmp ne i8 %1, 0, !dbg !10900
  br i1 %tobool, label %for.body, label %for.end, !dbg !10900

for.body:                                         ; preds = %for.cond
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10901
  call void @i2c_set_scl(%struct.comedi_device* %2, i32 0) #7, !dbg !10903
  %3 = load i8, i8* %byte.addr, align 1, !dbg !10904
  %conv1 = zext i8 %3 to i32, !dbg !10904
  %4 = load i8, i8* %bit, align 1, !dbg !10906
  %conv2 = zext i8 %4 to i32, !dbg !10906
  %and = and i32 %conv1, %conv2, !dbg !10907
  %tobool3 = icmp ne i32 %and, 0, !dbg !10907
  br i1 %tobool3, label %if.then, label %if.else, !dbg !10908

if.then:                                          ; preds = %for.body
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10909
  call void @i2c_set_sda(%struct.comedi_device* %5, i32 1) #7, !dbg !10910
  br label %if.end, !dbg !10910

if.else:                                          ; preds = %for.body
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10911
  call void @i2c_set_sda(%struct.comedi_device* %6, i32 0) #7, !dbg !10912
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10913
  call void @i2c_set_scl(%struct.comedi_device* %7, i32 1) #7, !dbg !10914
  br label %for.inc, !dbg !10915

for.inc:                                          ; preds = %if.end
  %8 = load i8, i8* %bit, align 1, !dbg !10916
  %conv4 = zext i8 %8 to i32, !dbg !10916
  %shr = ashr i32 %conv4, 1, !dbg !10916
  %conv5 = trunc i32 %shr to i8, !dbg !10916
  store i8 %conv5, i8* %bit, align 1, !dbg !10916
  br label %for.cond, !dbg !10917, !llvm.loop !10918

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @i2c_read_ack(%struct.comedi_device* %dev) #2 !dbg !10921 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10922, metadata !DIExpression()), !dbg !10923
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10924
  call void @i2c_set_scl(%struct.comedi_device* %0, i32 0) #7, !dbg !10925
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10926
  call void @i2c_set_sda(%struct.comedi_device* %1, i32 1) #7, !dbg !10927
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10928
  call void @i2c_set_scl(%struct.comedi_device* %2, i32 1) #7, !dbg !10929
  ret i32 0, !dbg !10930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @i2c_set_scl(%struct.comedi_device* %dev, i32 %state) #2 !dbg !4308 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %state.addr = alloca i32, align 4
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %plx_control_addr = alloca i8*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10931, metadata !DIExpression()), !dbg !10932
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !10933, metadata !DIExpression()), !dbg !10934
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !10935, metadata !DIExpression()), !dbg !10936
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10937
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10938
  %1 = load i8*, i8** %private, align 8, !dbg !10938
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !10937
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !10936
  call void @llvm.dbg.declare(metadata i8** %plx_control_addr, metadata !10939, metadata !DIExpression()), !dbg !10940
  %3 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10941
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %3, i32 0, i32 2, !dbg !10942
  %4 = load i8*, i8** %plx9080_iobase, align 8, !dbg !10942
  %add.ptr = getelementptr i8, i8* %4, i64 108, !dbg !10943
  store i8* %add.ptr, i8** %plx_control_addr, align 8, !dbg !10940
  %5 = load i32, i32* %state.addr, align 4, !dbg !10944
  %tobool = icmp ne i32 %5, 0, !dbg !10944
  br i1 %tobool, label %if.then, label %if.else, !dbg !10946

if.then:                                          ; preds = %entry
  %6 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10947
  %plx_control_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %6, i32 0, i32 22, !dbg !10949
  %7 = load i32, i32* %plx_control_bits, align 4, !dbg !10950
  %and = and i32 %7, -65537, !dbg !10950
  store i32 %and, i32* %plx_control_bits, align 4, !dbg !10950
  %8 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10951
  %plx_control_bits1 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %8, i32 0, i32 22, !dbg !10952
  %9 = load i32, i32* %plx_control_bits1, align 4, !dbg !10952
  %10 = load i8*, i8** %plx_control_addr, align 8, !dbg !10953
  call void @writel(i32 %9, i8* %10) #7, !dbg !10954
  call void @__const_udelay(i64 4295000) #7, !dbg !10955
  br label %if.end, !dbg !10960

if.else:                                          ; preds = %entry
  %11 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10961
  %plx_control_bits2 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %11, i32 0, i32 22, !dbg !10963
  %12 = load i32, i32* %plx_control_bits2, align 4, !dbg !10964
  %or = or i32 %12, 65536, !dbg !10964
  store i32 %or, i32* %plx_control_bits2, align 4, !dbg !10964
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10965
  %plx_control_bits3 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 22, !dbg !10966
  %14 = load i32, i32* %plx_control_bits3, align 4, !dbg !10966
  %15 = load i8*, i8** %plx_control_addr, align 8, !dbg !10967
  call void @writel(i32 %14, i8* %15) #7, !dbg !10968
  call void @__const_udelay(i64 42950) #7, !dbg !10969
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @i2c_set_sda(%struct.comedi_device* %dev, i32 %state) #2 !dbg !4317 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %state.addr = alloca i32, align 4
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %plx_control_addr = alloca i8*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10975, metadata !DIExpression()), !dbg !10976
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !10977, metadata !DIExpression()), !dbg !10978
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !10979, metadata !DIExpression()), !dbg !10980
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10981
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10982
  %1 = load i8*, i8** %private, align 8, !dbg !10982
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !10981
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !10980
  call void @llvm.dbg.declare(metadata i8** %plx_control_addr, metadata !10983, metadata !DIExpression()), !dbg !10984
  %3 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10985
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %3, i32 0, i32 2, !dbg !10986
  %4 = load i8*, i8** %plx9080_iobase, align 8, !dbg !10986
  %add.ptr = getelementptr i8, i8* %4, i64 108, !dbg !10987
  store i8* %add.ptr, i8** %plx_control_addr, align 8, !dbg !10984
  %5 = load i32, i32* %state.addr, align 4, !dbg !10988
  %tobool = icmp ne i32 %5, 0, !dbg !10988
  br i1 %tobool, label %if.then, label %if.else, !dbg !10990

if.then:                                          ; preds = %entry
  %6 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10991
  %plx_control_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %6, i32 0, i32 22, !dbg !10993
  %7 = load i32, i32* %plx_control_bits, align 4, !dbg !10994
  %and = and i32 %7, -67108865, !dbg !10994
  store i32 %and, i32* %plx_control_bits, align 4, !dbg !10994
  %8 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !10995
  %plx_control_bits1 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %8, i32 0, i32 22, !dbg !10996
  %9 = load i32, i32* %plx_control_bits1, align 4, !dbg !10996
  %10 = load i8*, i8** %plx_control_addr, align 8, !dbg !10997
  call void @writel(i32 %9, i8* %10) #7, !dbg !10998
  call void @__const_udelay(i64 4295000) #7, !dbg !10999
  br label %if.end, !dbg !11004

if.else:                                          ; preds = %entry
  %11 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11005
  %plx_control_bits2 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %11, i32 0, i32 22, !dbg !11007
  %12 = load i32, i32* %plx_control_bits2, align 4, !dbg !11008
  %or = or i32 %12, 67108864, !dbg !11008
  store i32 %or, i32* %plx_control_bits2, align 4, !dbg !11008
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11009
  %plx_control_bits3 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 22, !dbg !11010
  %14 = load i32, i32* %plx_control_bits3, align 4, !dbg !11010
  %15 = load i8*, i8** %plx_control_addr, align 8, !dbg !11011
  call void @writel(i32 %14, i8* %15) #7, !dbg !11012
  call void @__const_udelay(i64 42950) #7, !dbg !11013
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_dac_range_bits(%struct.comedi_device* %dev, i16* %bits, i32 %channel, i32 %range) #2 !dbg !11019 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %bits.addr = alloca i16*, align 8
  %channel.addr = alloca i32, align 4
  %range.addr = alloca i32, align 4
  %board = alloca %struct.pcidas64_board*, align 8
  %code = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11022, metadata !DIExpression()), !dbg !11023
  store i16* %bits, i16** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %bits.addr, metadata !11024, metadata !DIExpression()), !dbg !11025
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !11026, metadata !DIExpression()), !dbg !11027
  store i32 %range, i32* %range.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %range.addr, metadata !11028, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !11030, metadata !DIExpression()), !dbg !11031
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11032
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !11033
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !11033
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !11032
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !11031
  call void @llvm.dbg.declare(metadata i32* %code, metadata !11034, metadata !DIExpression()), !dbg !11035
  %3 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !11036
  %ao_range_code = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %3, i32 0, i32 10, !dbg !11037
  %4 = load i32*, i32** %ao_range_code, align 8, !dbg !11037
  %5 = load i32, i32* %range.addr, align 4, !dbg !11038
  %idxprom = zext i32 %5 to i64, !dbg !11036
  %arrayidx = getelementptr i32, i32* %4, i64 %idxprom, !dbg !11036
  %6 = load i32, i32* %arrayidx, align 4, !dbg !11036
  store i32 %6, i32* %code, align 4, !dbg !11035
  %7 = load i32, i32* %channel.addr, align 4, !dbg !11039
  %cmp = icmp ugt i32 %7, 1, !dbg !11041
  br i1 %cmp, label %if.then, label %if.end, !dbg !11042

if.then:                                          ; preds = %entry
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11043
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 4, !dbg !11043
  %9 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !11043
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0)) #8, !dbg !11043
  br label %if.end, !dbg !11043

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %code, align 4, !dbg !11044
  %and = and i32 %10, -4, !dbg !11046
  %tobool = icmp ne i32 %and, 0, !dbg !11046
  br i1 %tobool, label %if.then1, label %if.end3, !dbg !11047

if.then1:                                         ; preds = %if.end
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11048
  %class_dev2 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %11, i32 0, i32 4, !dbg !11048
  %12 = load %struct.device*, %struct.device** %class_dev2, align 8, !dbg !11048
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.39, i64 0, i64 0)) #8, !dbg !11048
  br label %if.end3, !dbg !11048

if.end3:                                          ; preds = %if.then1, %if.end
  %13 = load i32, i32* %channel.addr, align 4, !dbg !11049
  %mul = mul i32 2, %13, !dbg !11050
  %shl = shl i32 3, %mul, !dbg !11051
  %neg = xor i32 %shl, -1, !dbg !11052
  %14 = load i16*, i16** %bits.addr, align 8, !dbg !11053
  %15 = load i16, i16* %14, align 2, !dbg !11054
  %conv = zext i16 %15 to i32, !dbg !11054
  %and4 = and i32 %conv, %neg, !dbg !11054
  %conv5 = trunc i32 %and4 to i16, !dbg !11054
  store i16 %conv5, i16* %14, align 2, !dbg !11054
  %16 = load i32, i32* %code, align 4, !dbg !11055
  %17 = load i32, i32* %channel.addr, align 4, !dbg !11056
  %mul6 = mul i32 2, %17, !dbg !11057
  %shl7 = shl i32 %16, %mul6, !dbg !11058
  %18 = load i16*, i16** %bits.addr, align 8, !dbg !11059
  %19 = load i16, i16* %18, align 2, !dbg !11060
  %conv8 = zext i16 %19 to i32, !dbg !11060
  %or = or i32 %conv8, %shl7, !dbg !11060
  %conv9 = trunc i32 %or to i16, !dbg !11060
  store i16 %conv9, i16* %18, align 2, !dbg !11060
  ret void, !dbg !11061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dac_lsb_4020_reg(i32 %channel) #2 !dbg !11062 {
entry:
  %channel.addr = alloca i32, align 4
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !11065, metadata !DIExpression()), !dbg !11066
  %0 = load i32, i32* %channel.addr, align 4, !dbg !11067
  %and = and i32 %0, 1, !dbg !11068
  %mul = mul i32 4, %and, !dbg !11069
  %add = add i32 112, %mul, !dbg !11070
  ret i32 %add, !dbg !11071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dac_msb_4020_reg(i32 %channel) #2 !dbg !11072 {
entry:
  %channel.addr = alloca i32, align 4
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !11073, metadata !DIExpression()), !dbg !11074
  %0 = load i32, i32* %channel.addr, align 4, !dbg !11075
  %and = and i32 %0, 1, !dbg !11076
  %mul = mul i32 4, %and, !dbg !11077
  %add = add i32 114, %mul, !dbg !11078
  ret i32 %add, !dbg !11079
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dac_convert_reg(i32 %channel) #2 !dbg !11080 {
entry:
  %channel.addr = alloca i32, align 4
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !11081, metadata !DIExpression()), !dbg !11082
  %0 = load i32, i32* %channel.addr, align 4, !dbg !11083
  %and = and i32 %0, 1, !dbg !11084
  %mul = mul i32 2, %and, !dbg !11085
  %add = add i32 112, %mul, !dbg !11086
  ret i32 %add, !dbg !11087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_ao_divisor(i32 %ns, i32 %flags) #2 !dbg !11088 {
entry:
  %ns.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store i32 %ns, i32* %ns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !11089, metadata !DIExpression()), !dbg !11090
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11091, metadata !DIExpression()), !dbg !11092
  %0 = load i32, i32* %ns.addr, align 4, !dbg !11093
  %1 = load i32, i32* %flags.addr, align 4, !dbg !11094
  %call = call i32 @get_divisor(i32 %0, i32 %1) #7, !dbg !11095
  %sub = sub i32 %call, 2, !dbg !11096
  ret i32 %sub, !dbg !11097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cb_pcidas64_ao_check_chanlist(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_cmd* %cmd) #2 !dbg !11098 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %chan0 = alloca i32, align 4
  %i = alloca i32, align 4
  %chan = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11099, metadata !DIExpression()), !dbg !11100
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !11101, metadata !DIExpression()), !dbg !11102
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !11103, metadata !DIExpression()), !dbg !11104
  call void @llvm.dbg.declare(metadata i32* %chan0, metadata !11105, metadata !DIExpression()), !dbg !11106
  %0 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11107
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %0, i32 0, i32 12, !dbg !11107
  %1 = load i32*, i32** %chanlist, align 8, !dbg !11107
  %arrayidx = getelementptr i32, i32* %1, i64 0, !dbg !11107
  %2 = load i32, i32* %arrayidx, align 4, !dbg !11107
  %and = and i32 %2, 65535, !dbg !11107
  store i32 %and, i32* %chan0, align 4, !dbg !11106
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11108, metadata !DIExpression()), !dbg !11109
  store i32 1, i32* %i, align 4, !dbg !11110
  br label %for.cond, !dbg !11112

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !11113
  %4 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11115
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %4, i32 0, i32 13, !dbg !11116
  %5 = load i32, i32* %chanlist_len, align 8, !dbg !11116
  %cmp = icmp ult i32 %3, %5, !dbg !11117
  br i1 %cmp, label %for.body, label %for.end, !dbg !11118

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !11119, metadata !DIExpression()), !dbg !11121
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11122
  %chanlist1 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 12, !dbg !11122
  %7 = load i32*, i32** %chanlist1, align 8, !dbg !11122
  %8 = load i32, i32* %i, align 4, !dbg !11122
  %idxprom = sext i32 %8 to i64, !dbg !11122
  %arrayidx2 = getelementptr i32, i32* %7, i64 %idxprom, !dbg !11122
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !11122
  %and3 = and i32 %9, 65535, !dbg !11122
  store i32 %and3, i32* %chan, align 4, !dbg !11121
  %10 = load i32, i32* %chan, align 4, !dbg !11123
  %11 = load i32, i32* %chan0, align 4, !dbg !11125
  %12 = load i32, i32* %i, align 4, !dbg !11126
  %add = add i32 %11, %12, !dbg !11127
  %cmp4 = icmp ne i32 %10, %add, !dbg !11128
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11129

if.then:                                          ; preds = %for.body
  store i32 -22, i32* %retval, align 4, !dbg !11130
  br label %return, !dbg !11130

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11132

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !11133
  %inc = add i32 %13, 1, !dbg !11133
  store i32 %inc, i32* %i, align 4, !dbg !11133
  br label %for.cond, !dbg !11134, !llvm.loop !11135

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !11137
  br label %return, !dbg !11137

return:                                           ; preds = %for.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !11138
  ret i32 %14, !dbg !11138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @external_ai_queue_in_use(%struct.comedi_device* %dev) #2 !dbg !11139 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %board = alloca %struct.pcidas64_board*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11140, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.declare(metadata %struct.pcidas64_board** %board, metadata !11142, metadata !DIExpression()), !dbg !11143
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11144
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !11145
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !11145
  %2 = bitcast i8* %1 to %struct.pcidas64_board*, !dbg !11144
  store %struct.pcidas64_board* %2, %struct.pcidas64_board** %board, align 8, !dbg !11143
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11146
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 21, !dbg !11148
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !11148
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %4, i32 0, i32 9, !dbg !11149
  %5 = load i8*, i8** %busy, align 8, !dbg !11149
  %tobool = icmp ne i8* %5, null, !dbg !11146
  br i1 %tobool, label %if.end, label %if.then, !dbg !11150

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11151
  br label %return, !dbg !11151

if.end:                                           ; preds = %entry
  %6 = load %struct.pcidas64_board*, %struct.pcidas64_board** %board, align 8, !dbg !11152
  %layout = getelementptr inbounds %struct.pcidas64_board, %struct.pcidas64_board* %6, i32 0, i32 12, !dbg !11154
  %7 = load i32, i32* %layout, align 8, !dbg !11154
  %cmp = icmp eq i32 %7, 2, !dbg !11155
  br i1 %cmp, label %if.then1, label %if.else, !dbg !11156

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11157
  br label %return, !dbg !11157

if.else:                                          ; preds = %if.end
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11158
  %read_subdev2 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 21, !dbg !11160
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev2, align 8, !dbg !11160
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %9, i32 0, i32 7, !dbg !11161
  %10 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !11161
  %cmd = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %10, i32 0, i32 17, !dbg !11162
  %call = call i32 @use_internal_queue_6xxx(%struct.comedi_cmd* %cmd) #7, !dbg !11163
  %tobool3 = icmp ne i32 %call, 0, !dbg !11163
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !11164

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !11165
  br label %return, !dbg !11165

if.end5:                                          ; preds = %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end5
  store i32 1, i32* %retval, align 4, !dbg !11166
  br label %return, !dbg !11166

return:                                           ; preds = %if.end6, %if.then4, %if.then1, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !11167
  ret i32 %11, !dbg !11167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_dac_select_reg(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !11168 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %bits = alloca i16, align 2
  %first_channel = alloca i32, align 4
  %last_channel = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11169, metadata !DIExpression()), !dbg !11170
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !11171, metadata !DIExpression()), !dbg !11172
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !11173, metadata !DIExpression()), !dbg !11174
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11175
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11176
  %1 = load i8*, i8** %private, align 8, !dbg !11176
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !11175
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !11174
  call void @llvm.dbg.declare(metadata i16* %bits, metadata !11177, metadata !DIExpression()), !dbg !11178
  call void @llvm.dbg.declare(metadata i32* %first_channel, metadata !11179, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.declare(metadata i32* %last_channel, metadata !11181, metadata !DIExpression()), !dbg !11182
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11183
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %3, i32 0, i32 12, !dbg !11183
  %4 = load i32*, i32** %chanlist, align 8, !dbg !11183
  %arrayidx = getelementptr i32, i32* %4, i64 0, !dbg !11183
  %5 = load i32, i32* %arrayidx, align 4, !dbg !11183
  %and = and i32 %5, 65535, !dbg !11183
  store i32 %and, i32* %first_channel, align 4, !dbg !11184
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11185
  %chanlist1 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 12, !dbg !11185
  %7 = load i32*, i32** %chanlist1, align 8, !dbg !11185
  %8 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11185
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %8, i32 0, i32 13, !dbg !11185
  %9 = load i32, i32* %chanlist_len, align 8, !dbg !11185
  %sub = sub i32 %9, 1, !dbg !11185
  %idxprom = zext i32 %sub to i64, !dbg !11185
  %arrayidx2 = getelementptr i32, i32* %7, i64 %idxprom, !dbg !11185
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !11185
  %and3 = and i32 %10, 65535, !dbg !11185
  store i32 %and3, i32* %last_channel, align 4, !dbg !11186
  %11 = load i32, i32* %last_channel, align 4, !dbg !11187
  %12 = load i32, i32* %first_channel, align 4, !dbg !11189
  %cmp = icmp ult i32 %11, %12, !dbg !11190
  br i1 %cmp, label %if.then, label %if.end, !dbg !11191

if.then:                                          ; preds = %entry
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11192
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %13, i32 0, i32 4, !dbg !11192
  %14 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !11192
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %14, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.40, i64 0, i64 0)) #8, !dbg !11192
  br label %if.end, !dbg !11192

if.end:                                           ; preds = %if.then, %entry
  %15 = load i32, i32* %first_channel, align 4, !dbg !11193
  %and4 = and i32 %15, 7, !dbg !11194
  %16 = load i32, i32* %last_channel, align 4, !dbg !11195
  %and5 = and i32 %16, 7, !dbg !11196
  %shl = shl i32 %and5, 3, !dbg !11197
  %or = or i32 %and4, %shl, !dbg !11198
  %conv = trunc i32 %or to i16, !dbg !11199
  store i16 %conv, i16* %bits, align 2, !dbg !11200
  %17 = load i16, i16* %bits, align 2, !dbg !11201
  %18 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11202
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %18, i32 0, i32 3, !dbg !11203
  %19 = load i8*, i8** %main_iobase, align 8, !dbg !11203
  %add.ptr = getelementptr i8, i8* %19, i64 96, !dbg !11204
  call void @writew(i16 zeroext %17, i8* %add.ptr) #7, !dbg !11205
  ret void, !dbg !11206
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_dac_interval_regs(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !11207 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %divisor = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11208, metadata !DIExpression()), !dbg !11209
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !11210, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !11212, metadata !DIExpression()), !dbg !11213
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11214
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11215
  %1 = load i8*, i8** %private, align 8, !dbg !11215
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !11214
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !11213
  call void @llvm.dbg.declare(metadata i32* %divisor, metadata !11216, metadata !DIExpression()), !dbg !11217
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11218
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %3, i32 0, i32 4, !dbg !11220
  %4 = load i32, i32* %scan_begin_src, align 8, !dbg !11220
  %cmp = icmp ne i32 %4, 16, !dbg !11221
  br i1 %cmp, label %if.then, label %if.end, !dbg !11222

if.then:                                          ; preds = %entry
  br label %return, !dbg !11223

if.end:                                           ; preds = %entry
  %5 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11224
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %5, i32 0, i32 5, !dbg !11225
  %6 = load i32, i32* %scan_begin_arg, align 4, !dbg !11225
  %7 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11226
  %flags = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %7, i32 0, i32 1, !dbg !11227
  %8 = load i32, i32* %flags, align 4, !dbg !11227
  %call = call i32 @get_ao_divisor(i32 %6, i32 %8) #7, !dbg !11228
  store i32 %call, i32* %divisor, align 4, !dbg !11229
  %9 = load i32, i32* %divisor, align 4, !dbg !11230
  %cmp1 = icmp ugt i32 %9, 16777215, !dbg !11232
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11233

if.then2:                                         ; preds = %if.end
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11234
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %10, i32 0, i32 4, !dbg !11234
  %11 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !11234
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %11, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41, i64 0, i64 0)) #8, !dbg !11234
  store i32 16777215, i32* %divisor, align 4, !dbg !11236
  br label %if.end3, !dbg !11237

if.end3:                                          ; preds = %if.then2, %if.end
  %12 = load i32, i32* %divisor, align 4, !dbg !11238
  %and = and i32 %12, 65535, !dbg !11239
  %conv = trunc i32 %and to i16, !dbg !11238
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11240
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 3, !dbg !11241
  %14 = load i8*, i8** %main_iobase, align 8, !dbg !11241
  %add.ptr = getelementptr i8, i8* %14, i64 84, !dbg !11242
  call void @writew(i16 zeroext %conv, i8* %add.ptr) #7, !dbg !11243
  %15 = load i32, i32* %divisor, align 4, !dbg !11244
  %shr = lshr i32 %15, 16, !dbg !11245
  %and4 = and i32 %shr, 255, !dbg !11246
  %conv5 = trunc i32 %and4 to i16, !dbg !11247
  %16 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11248
  %main_iobase6 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %16, i32 0, i32 3, !dbg !11249
  %17 = load i8*, i8** %main_iobase6, align 8, !dbg !11249
  %add.ptr7 = getelementptr i8, i8* %17, i64 86, !dbg !11250
  call void @writew(i16 zeroext %conv5, i8* %add.ptr7) #7, !dbg !11251
  br label %return, !dbg !11252

return:                                           ; preds = %if.end3, %if.then
  ret void, !dbg !11252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_dac_control1_reg(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !11253 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %i = alloca i32, align 4
  %channel = alloca i32, align 4
  %range = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11254, metadata !DIExpression()), !dbg !11255
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !11256, metadata !DIExpression()), !dbg !11257
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !11258, metadata !DIExpression()), !dbg !11259
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11260
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11261
  %1 = load i8*, i8** %private, align 8, !dbg !11261
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !11260
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !11259
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11262, metadata !DIExpression()), !dbg !11263
  store i32 0, i32* %i, align 4, !dbg !11264
  br label %for.cond, !dbg !11266

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !11267
  %4 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11269
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %4, i32 0, i32 13, !dbg !11270
  %5 = load i32, i32* %chanlist_len, align 8, !dbg !11270
  %cmp = icmp ult i32 %3, %5, !dbg !11271
  br i1 %cmp, label %for.body, label %for.end, !dbg !11272

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !11273, metadata !DIExpression()), !dbg !11275
  call void @llvm.dbg.declare(metadata i32* %range, metadata !11276, metadata !DIExpression()), !dbg !11277
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11278
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 12, !dbg !11278
  %7 = load i32*, i32** %chanlist, align 8, !dbg !11278
  %8 = load i32, i32* %i, align 4, !dbg !11278
  %idxprom = sext i32 %8 to i64, !dbg !11278
  %arrayidx = getelementptr i32, i32* %7, i64 %idxprom, !dbg !11278
  %9 = load i32, i32* %arrayidx, align 4, !dbg !11278
  %and = and i32 %9, 65535, !dbg !11278
  store i32 %and, i32* %channel, align 4, !dbg !11279
  %10 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11280
  %chanlist1 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %10, i32 0, i32 12, !dbg !11280
  %11 = load i32*, i32** %chanlist1, align 8, !dbg !11280
  %12 = load i32, i32* %i, align 4, !dbg !11280
  %idxprom2 = sext i32 %12 to i64, !dbg !11280
  %arrayidx3 = getelementptr i32, i32* %11, i64 %idxprom2, !dbg !11280
  %13 = load i32, i32* %arrayidx3, align 4, !dbg !11280
  %shr = lshr i32 %13, 16, !dbg !11280
  %and4 = and i32 %shr, 255, !dbg !11280
  store i32 %and4, i32* %range, align 4, !dbg !11281
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11282
  %15 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11283
  %dac_control1_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %15, i32 0, i32 21, !dbg !11284
  %16 = load i32, i32* %channel, align 4, !dbg !11285
  %17 = load i32, i32* %range, align 4, !dbg !11286
  call void @set_dac_range_bits(%struct.comedi_device* %14, i16* %dac_control1_bits, i32 %16, i32 %17) #7, !dbg !11287
  br label %for.inc, !dbg !11288

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !11289
  %inc = add i32 %18, 1, !dbg !11289
  store i32 %inc, i32* %i, align 4, !dbg !11289
  br label %for.cond, !dbg !11290, !llvm.loop !11291

for.end:                                          ; preds = %for.cond
  %19 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11293
  %dac_control1_bits5 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %19, i32 0, i32 21, !dbg !11294
  %20 = load i16, i16* %dac_control1_bits5, align 2, !dbg !11295
  %conv = zext i16 %20 to i32, !dbg !11295
  %or = or i32 %conv, 32, !dbg !11295
  %conv6 = trunc i32 %or to i16, !dbg !11295
  store i16 %conv6, i16* %dac_control1_bits5, align 2, !dbg !11295
  %21 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11296
  %dac_control1_bits7 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %21, i32 0, i32 21, !dbg !11297
  %22 = load i16, i16* %dac_control1_bits7, align 2, !dbg !11297
  %23 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11298
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %23, i32 0, i32 3, !dbg !11299
  %24 = load i8*, i8** %main_iobase, align 8, !dbg !11299
  %add.ptr = getelementptr i8, i8* %24, i64 82, !dbg !11300
  call void @writew(i16 zeroext %22, i8* %add.ptr) #7, !dbg !11301
  ret void, !dbg !11302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ao_inttrig(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i32 %trig_num) #2 !dbg !11303 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %trig_num.addr = alloca i32, align 4
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %cmd = alloca %struct.comedi_cmd*, align 8
  %retval2 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11304, metadata !DIExpression()), !dbg !11305
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !11306, metadata !DIExpression()), !dbg !11307
  store i32 %trig_num, i32* %trig_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %trig_num.addr, metadata !11308, metadata !DIExpression()), !dbg !11309
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !11310, metadata !DIExpression()), !dbg !11311
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11312
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11313
  %1 = load i8*, i8** %private, align 8, !dbg !11313
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !11312
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !11311
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !11314, metadata !DIExpression()), !dbg !11315
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !11316
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 7, !dbg !11317
  %4 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !11317
  %cmd1 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %4, i32 0, i32 17, !dbg !11318
  store %struct.comedi_cmd* %cmd1, %struct.comedi_cmd** %cmd, align 8, !dbg !11315
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !11319, metadata !DIExpression()), !dbg !11320
  %5 = load i32, i32* %trig_num.addr, align 4, !dbg !11321
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !11323
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 3, !dbg !11324
  %7 = load i32, i32* %start_arg, align 4, !dbg !11324
  %cmp = icmp ne i32 %5, %7, !dbg !11325
  br i1 %cmp, label %if.then, label %if.end, !dbg !11326

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11327
  br label %return, !dbg !11327

if.end:                                           ; preds = %entry
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11328
  %9 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !11329
  %call = call i32 @prep_ao_dma(%struct.comedi_device* %8, %struct.comedi_cmd* %9) #7, !dbg !11330
  store i32 %call, i32* %retval2, align 4, !dbg !11331
  %10 = load i32, i32* %retval2, align 4, !dbg !11332
  %cmp3 = icmp slt i32 %10, 0, !dbg !11334
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !11335

if.then4:                                         ; preds = %if.end
  store i32 -32, i32* %retval, align 4, !dbg !11336
  br label %return, !dbg !11336

if.end5:                                          ; preds = %if.end
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11337
  %12 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !11338
  call void @set_dac_control0_reg(%struct.comedi_device* %11, %struct.comedi_cmd* %12) #7, !dbg !11339
  %13 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !11340
  %start_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %13, i32 0, i32 2, !dbg !11342
  %14 = load i32, i32* %start_src, align 8, !dbg !11342
  %cmp6 = icmp eq i32 %14, 128, !dbg !11343
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11344

if.then7:                                         ; preds = %if.end5
  %15 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11345
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %15, i32 0, i32 3, !dbg !11346
  %16 = load i8*, i8** %main_iobase, align 8, !dbg !11346
  %add.ptr = getelementptr i8, i8* %16, i64 100, !dbg !11347
  call void @writew(i16 zeroext 0, i8* %add.ptr) #7, !dbg !11348
  br label %if.end8, !dbg !11348

if.end8:                                          ; preds = %if.then7, %if.end5
  %17 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !11349
  %async9 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %17, i32 0, i32 7, !dbg !11350
  %18 = load %struct.comedi_async*, %struct.comedi_async** %async9, align 8, !dbg !11350
  %inttrig = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %18, i32 0, i32 20, !dbg !11351
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* null, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig, align 8, !dbg !11352
  store i32 0, i32* %retval, align 4, !dbg !11353
  br label %return, !dbg !11353

return:                                           ; preds = %if.end8, %if.then4, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !11354
  ret i32 %19, !dbg !11354
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @prep_ao_dma(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !11355 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %nsamples = alloca i32, align 4
  %nbytes = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11356, metadata !DIExpression()), !dbg !11357
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !11358, metadata !DIExpression()), !dbg !11359
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !11360, metadata !DIExpression()), !dbg !11361
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11362
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11363
  %1 = load i8*, i8** %private, align 8, !dbg !11363
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !11362
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !11361
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !11364, metadata !DIExpression()), !dbg !11365
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11366
  %write_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 22, !dbg !11367
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %write_subdev, align 8, !dbg !11367
  store %struct.comedi_subdevice* %4, %struct.comedi_subdevice** %s, align 8, !dbg !11365
  call void @llvm.dbg.declare(metadata i32* %nsamples, metadata !11368, metadata !DIExpression()), !dbg !11369
  call void @llvm.dbg.declare(metadata i32* %nbytes, metadata !11370, metadata !DIExpression()), !dbg !11371
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11372, metadata !DIExpression()), !dbg !11373
  %5 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11374
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %5, i32 0, i32 3, !dbg !11375
  %6 = load i8*, i8** %main_iobase, align 8, !dbg !11375
  %add.ptr = getelementptr i8, i8* %6, i64 38, !dbg !11376
  call void @writew(i16 zeroext 0, i8* %add.ptr) #7, !dbg !11377
  %7 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11378
  %main_iobase1 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %7, i32 0, i32 3, !dbg !11379
  %8 = load i8*, i8** %main_iobase1, align 8, !dbg !11379
  %add.ptr2 = getelementptr i8, i8* %8, i64 102, !dbg !11380
  call void @writew(i16 zeroext 0, i8* %add.ptr2) #7, !dbg !11381
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11382
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11383
  %11 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11384
  %ao_bounce_buffer = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %11, i32 0, i32 30, !dbg !11385
  %arraydecay = getelementptr inbounds [8192 x i16], [8192 x i16]* %ao_bounce_buffer, i64 0, i64 0, !dbg !11384
  %call = call i32 @cb_pcidas64_ao_fill_buffer(%struct.comedi_device* %9, %struct.comedi_subdevice* %10, i16* %arraydecay, i32 8192) #7, !dbg !11386
  store i32 %call, i32* %nsamples, align 4, !dbg !11387
  %12 = load i32, i32* %nsamples, align 4, !dbg !11388
  %cmp = icmp eq i32 %12, 0, !dbg !11390
  br i1 %cmp, label %if.then, label %if.end, !dbg !11391

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !11392
  br label %return, !dbg !11392

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !11393
  br label %for.cond, !dbg !11395

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !11396
  %14 = load i32, i32* %nsamples, align 4, !dbg !11398
  %cmp3 = icmp ult i32 %13, %14, !dbg !11399
  br i1 %cmp3, label %for.body, label %for.end, !dbg !11400

for.body:                                         ; preds = %for.cond
  %15 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11401
  %ao_bounce_buffer4 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %15, i32 0, i32 30, !dbg !11403
  %16 = load i32, i32* %i, align 4, !dbg !11404
  %idxprom = sext i32 %16 to i64, !dbg !11401
  %arrayidx = getelementptr [8192 x i16], [8192 x i16]* %ao_bounce_buffer4, i64 0, i64 %idxprom, !dbg !11401
  %17 = load i16, i16* %arrayidx, align 2, !dbg !11401
  %18 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11405
  %main_iobase5 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %18, i32 0, i32 3, !dbg !11406
  %19 = load i8*, i8** %main_iobase5, align 8, !dbg !11406
  %add.ptr6 = getelementptr i8, i8* %19, i64 768, !dbg !11407
  call void @writew(i16 zeroext %17, i8* %add.ptr6) #7, !dbg !11408
  br label %for.inc, !dbg !11409

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !11410
  %inc = add i32 %20, 1, !dbg !11410
  store i32 %inc, i32* %i, align 4, !dbg !11410
  br label %for.cond, !dbg !11411, !llvm.loop !11412

for.end:                                          ; preds = %for.cond
  %21 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11414
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %21, i32 0, i32 10, !dbg !11416
  %22 = load i32, i32* %stop_src, align 8, !dbg !11416
  %cmp7 = icmp eq i32 %22, 32, !dbg !11417
  br i1 %cmp7, label %land.lhs.true, label %if.end10, !dbg !11418

land.lhs.true:                                    ; preds = %for.end
  %23 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11419
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %23, i32 0, i32 7, !dbg !11420
  %24 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !11420
  %scans_done = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %24, i32 0, i32 11, !dbg !11421
  %25 = load i32, i32* %scans_done, align 8, !dbg !11421
  %26 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11422
  %stop_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %26, i32 0, i32 11, !dbg !11423
  %27 = load i32, i32* %stop_arg, align 4, !dbg !11423
  %cmp8 = icmp uge i32 %25, %27, !dbg !11424
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11425

if.then9:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !11426
  br label %return, !dbg !11426

if.end10:                                         ; preds = %land.lhs.true, %for.end
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11427
  %29 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11428
  %call11 = call i32 @load_ao_dma_buffer(%struct.comedi_device* %28, %struct.comedi_cmd* %29) #7, !dbg !11429
  store i32 %call11, i32* %nbytes, align 4, !dbg !11430
  %30 = load i32, i32* %nbytes, align 4, !dbg !11431
  %cmp12 = icmp eq i32 %30, 0, !dbg !11433
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !11434

if.then13:                                        ; preds = %if.end10
  store i32 -1, i32* %retval, align 4, !dbg !11435
  br label %return, !dbg !11435

if.end14:                                         ; preds = %if.end10
  %31 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11436
  %32 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11437
  call void @load_ao_dma(%struct.comedi_device* %31, %struct.comedi_cmd* %32) #7, !dbg !11438
  %33 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11439
  call void @dma_start_sync(%struct.comedi_device* %33, i32 0) #7, !dbg !11440
  store i32 0, i32* %retval, align 4, !dbg !11441
  br label %return, !dbg !11441

return:                                           ; preds = %if.end14, %if.then13, %if.then9, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !11442
  ret i32 %34, !dbg !11442
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_dac_control0_reg(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !11443 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %bits = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11444, metadata !DIExpression()), !dbg !11445
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !11446, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !11448, metadata !DIExpression()), !dbg !11449
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11450
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11451
  %1 = load i8*, i8** %private, align 8, !dbg !11451
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !11450
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !11449
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !11452, metadata !DIExpression()), !dbg !11453
  store i32 32775, i32* %bits, align 4, !dbg !11453
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11454
  %start_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %3, i32 0, i32 2, !dbg !11456
  %4 = load i32, i32* %start_src, align 8, !dbg !11456
  %cmp = icmp eq i32 %4, 64, !dbg !11457
  br i1 %cmp, label %if.then, label %if.else, !dbg !11458

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %bits, align 4, !dbg !11459
  %or = or i32 %5, 32, !dbg !11459
  store i32 %or, i32* %bits, align 4, !dbg !11459
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11461
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 3, !dbg !11463
  %7 = load i32, i32* %start_arg, align 4, !dbg !11463
  %and = and i32 %7, -2147483648, !dbg !11464
  %tobool = icmp ne i32 %and, 0, !dbg !11464
  br i1 %tobool, label %if.then1, label %if.end, !dbg !11465

if.then1:                                         ; preds = %if.then
  %8 = load i32, i32* %bits, align 4, !dbg !11466
  %or2 = or i32 %8, 8, !dbg !11466
  store i32 %or2, i32* %bits, align 4, !dbg !11466
  br label %if.end, !dbg !11467

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end4, !dbg !11468

if.else:                                          ; preds = %entry
  %9 = load i32, i32* %bits, align 4, !dbg !11469
  %or3 = or i32 %9, 16, !dbg !11469
  store i32 %or3, i32* %bits, align 4, !dbg !11469
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.end
  %10 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11471
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %10, i32 0, i32 4, !dbg !11473
  %11 = load i32, i32* %scan_begin_src, align 8, !dbg !11473
  %cmp5 = icmp eq i32 %11, 64, !dbg !11474
  br i1 %cmp5, label %if.then6, label %if.end13, !dbg !11475

if.then6:                                         ; preds = %if.end4
  %12 = load i32, i32* %bits, align 4, !dbg !11476
  %or7 = or i32 %12, 64, !dbg !11476
  store i32 %or7, i32* %bits, align 4, !dbg !11476
  %13 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11478
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %13, i32 0, i32 5, !dbg !11480
  %14 = load i32, i32* %scan_begin_arg, align 4, !dbg !11480
  %and8 = and i32 %14, -2147483648, !dbg !11481
  %tobool9 = icmp ne i32 %and8, 0, !dbg !11481
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !11482

if.then10:                                        ; preds = %if.then6
  %15 = load i32, i32* %bits, align 4, !dbg !11483
  %or11 = or i32 %15, 128, !dbg !11483
  store i32 %or11, i32* %bits, align 4, !dbg !11483
  br label %if.end12, !dbg !11484

if.end12:                                         ; preds = %if.then10, %if.then6
  br label %if.end13, !dbg !11485

if.end13:                                         ; preds = %if.end12, %if.end4
  %16 = load i32, i32* %bits, align 4, !dbg !11486
  %conv = trunc i32 %16 to i16, !dbg !11486
  %17 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11487
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %17, i32 0, i32 3, !dbg !11488
  %18 = load i8*, i8** %main_iobase, align 8, !dbg !11488
  %add.ptr = getelementptr i8, i8* %18, i64 80, !dbg !11489
  call void @writew(i16 zeroext %conv, i8* %add.ptr) #7, !dbg !11490
  ret void, !dbg !11491
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_dio_update_state(%struct.comedi_subdevice*, i32*) #1

; Function Attrs: noredzone
declare dso_local i32 @comedi_dio_insn_config(%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @caldac_8800_write(%struct.comedi_device* %dev, i32 %address, i8 zeroext %value) #2 !dbg !4320 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %address.addr = alloca i32, align 4
  %value.addr = alloca i8, align 1
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %bitstream = alloca i32, align 4
  %bit = alloca i32, align 4
  %register_bits = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11492, metadata !DIExpression()), !dbg !11493
  store i32 %address, i32* %address.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %address.addr, metadata !11494, metadata !DIExpression()), !dbg !11495
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !11496, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !11498, metadata !DIExpression()), !dbg !11499
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11500
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11501
  %1 = load i8*, i8** %private, align 8, !dbg !11501
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !11500
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !11499
  call void @llvm.dbg.declare(metadata i32* %bitstream, metadata !11502, metadata !DIExpression()), !dbg !11503
  %3 = load i32, i32* %address.addr, align 4, !dbg !11504
  %and = and i32 %3, 7, !dbg !11505
  %shl = shl i32 %and, 8, !dbg !11506
  %4 = load i8, i8* %value.addr, align 1, !dbg !11507
  %conv = zext i8 %4 to i32, !dbg !11507
  %or = or i32 %shl, %conv, !dbg !11508
  store i32 %or, i32* %bitstream, align 4, !dbg !11503
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !11509, metadata !DIExpression()), !dbg !11510
  call void @llvm.dbg.declare(metadata i32* %register_bits, metadata !11511, metadata !DIExpression()), !dbg !11512
  %5 = load i32, i32* %address.addr, align 4, !dbg !11513
  %cmp = icmp uge i32 %5, 8, !dbg !11515
  br i1 %cmp, label %if.then, label %if.end, !dbg !11516

if.then:                                          ; preds = %entry
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11517
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 4, !dbg !11517
  %7 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !11517
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.42, i64 0, i64 0)) #8, !dbg !11517
  store i32 -1, i32* %retval, align 4, !dbg !11519
  br label %return, !dbg !11519

if.end:                                           ; preds = %entry
  store i32 1024, i32* %bit, align 4, !dbg !11520
  br label %for.cond, !dbg !11522

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %bit, align 4, !dbg !11523
  %tobool = icmp ne i32 %8, 0, !dbg !11525
  br i1 %tobool, label %for.body, label %for.end, !dbg !11525

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %register_bits, align 4, !dbg !11526
  %9 = load i32, i32* %bitstream, align 4, !dbg !11528
  %10 = load i32, i32* %bit, align 4, !dbg !11530
  %and2 = and i32 %9, %10, !dbg !11531
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11531
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !11532

if.then4:                                         ; preds = %for.body
  %11 = load i32, i32* %register_bits, align 4, !dbg !11533
  %or5 = or i32 %11, 128, !dbg !11533
  store i32 %or5, i32* %register_bits, align 4, !dbg !11533
  br label %if.end6, !dbg !11534

if.end6:                                          ; preds = %if.then4, %for.body
  call void @__const_udelay(i64 4295) #7, !dbg !11535
  %12 = load i32, i32* %register_bits, align 4, !dbg !11540
  %conv7 = trunc i32 %12 to i16, !dbg !11540
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11541
  %main_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 3, !dbg !11542
  %14 = load i8*, i8** %main_iobase, align 8, !dbg !11542
  %add.ptr = getelementptr i8, i8* %14, i64 20, !dbg !11543
  call void @writew(i16 zeroext %conv7, i8* %add.ptr) #7, !dbg !11544
  %15 = load i32, i32* %register_bits, align 4, !dbg !11545
  %or8 = or i32 %15, 256, !dbg !11545
  store i32 %or8, i32* %register_bits, align 4, !dbg !11545
  call void @__const_udelay(i64 4295) #7, !dbg !11546
  %16 = load i32, i32* %register_bits, align 4, !dbg !11551
  %conv9 = trunc i32 %16 to i16, !dbg !11551
  %17 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11552
  %main_iobase10 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %17, i32 0, i32 3, !dbg !11553
  %18 = load i8*, i8** %main_iobase10, align 8, !dbg !11553
  %add.ptr11 = getelementptr i8, i8* %18, i64 20, !dbg !11554
  call void @writew(i16 zeroext %conv9, i8* %add.ptr11) #7, !dbg !11555
  br label %for.inc, !dbg !11556

for.inc:                                          ; preds = %if.end6
  %19 = load i32, i32* %bit, align 4, !dbg !11557
  %shr = lshr i32 %19, 1, !dbg !11557
  store i32 %shr, i32* %bit, align 4, !dbg !11557
  br label %for.cond, !dbg !11558, !llvm.loop !11559

for.end:                                          ; preds = %for.cond
  call void @__const_udelay(i64 4295) #7, !dbg !11561
  %20 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11566
  %main_iobase12 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %20, i32 0, i32 3, !dbg !11567
  %21 = load i8*, i8** %main_iobase12, align 8, !dbg !11567
  %add.ptr13 = getelementptr i8, i8* %21, i64 20, !dbg !11568
  call void @writew(i16 zeroext 1, i8* %add.ptr13) #7, !dbg !11569
  call void @__const_udelay(i64 4295) #7, !dbg !11570
  %22 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11575
  %main_iobase14 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %22, i32 0, i32 3, !dbg !11576
  %23 = load i8*, i8** %main_iobase14, align 8, !dbg !11576
  %add.ptr15 = getelementptr i8, i8* %23, i64 20, !dbg !11577
  call void @writew(i16 zeroext 0, i8* %add.ptr15) #7, !dbg !11578
  call void @__const_udelay(i64 4295) #7, !dbg !11579
  store i32 0, i32* %retval, align 4, !dbg !11584
  br label %return, !dbg !11584

return:                                           ; preds = %for.end, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !11585
  ret i32 %24, !dbg !11585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @caldac_i2c_write(%struct.comedi_device* %dev, i32 %caldac_channel, i32 %value) #2 !dbg !320 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %caldac_channel.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %serial_bytes = alloca [3 x i8], align 1
  %i2c_addr = alloca i8, align 1
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11586, metadata !DIExpression()), !dbg !11587
  store i32 %caldac_channel, i32* %caldac_channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %caldac_channel.addr, metadata !11588, metadata !DIExpression()), !dbg !11589
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !11590, metadata !DIExpression()), !dbg !11591
  call void @llvm.dbg.declare(metadata [3 x i8]* %serial_bytes, metadata !11592, metadata !DIExpression()), !dbg !11594
  call void @llvm.dbg.declare(metadata i8* %i2c_addr, metadata !11595, metadata !DIExpression()), !dbg !11596
  %0 = load i32, i32* %caldac_channel.addr, align 4, !dbg !11597
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
    i32 3, label %sw.bb5
    i32 4, label %sw.bb7
    i32 5, label %sw.bb9
    i32 6, label %sw.bb11
    i32 7, label %sw.bb13
  ], !dbg !11598

sw.bb:                                            ; preds = %entry
  store i8 12, i8* %i2c_addr, align 1, !dbg !11599
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %serial_bytes, i64 0, i64 0, !dbg !11601
  store i8 1, i8* %arrayidx, align 1, !dbg !11602
  br label %sw.epilog, !dbg !11603

sw.bb1:                                           ; preds = %entry
  store i8 12, i8* %i2c_addr, align 1, !dbg !11604
  %arrayidx2 = getelementptr [3 x i8], [3 x i8]* %serial_bytes, i64 0, i64 0, !dbg !11605
  store i8 4, i8* %arrayidx2, align 1, !dbg !11606
  br label %sw.epilog, !dbg !11607

sw.bb3:                                           ; preds = %entry
  store i8 13, i8* %i2c_addr, align 1, !dbg !11608
  %arrayidx4 = getelementptr [3 x i8], [3 x i8]* %serial_bytes, i64 0, i64 0, !dbg !11609
  store i8 1, i8* %arrayidx4, align 1, !dbg !11610
  br label %sw.epilog, !dbg !11611

sw.bb5:                                           ; preds = %entry
  store i8 13, i8* %i2c_addr, align 1, !dbg !11612
  %arrayidx6 = getelementptr [3 x i8], [3 x i8]* %serial_bytes, i64 0, i64 0, !dbg !11613
  store i8 4, i8* %arrayidx6, align 1, !dbg !11614
  br label %sw.epilog, !dbg !11615

sw.bb7:                                           ; preds = %entry
  store i8 12, i8* %i2c_addr, align 1, !dbg !11616
  %arrayidx8 = getelementptr [3 x i8], [3 x i8]* %serial_bytes, i64 0, i64 0, !dbg !11617
  store i8 2, i8* %arrayidx8, align 1, !dbg !11618
  br label %sw.epilog, !dbg !11619

sw.bb9:                                           ; preds = %entry
  store i8 12, i8* %i2c_addr, align 1, !dbg !11620
  %arrayidx10 = getelementptr [3 x i8], [3 x i8]* %serial_bytes, i64 0, i64 0, !dbg !11621
  store i8 8, i8* %arrayidx10, align 1, !dbg !11622
  br label %sw.epilog, !dbg !11623

sw.bb11:                                          ; preds = %entry
  store i8 13, i8* %i2c_addr, align 1, !dbg !11624
  %arrayidx12 = getelementptr [3 x i8], [3 x i8]* %serial_bytes, i64 0, i64 0, !dbg !11625
  store i8 2, i8* %arrayidx12, align 1, !dbg !11626
  br label %sw.epilog, !dbg !11627

sw.bb13:                                          ; preds = %entry
  store i8 13, i8* %i2c_addr, align 1, !dbg !11628
  %arrayidx14 = getelementptr [3 x i8], [3 x i8]* %serial_bytes, i64 0, i64 0, !dbg !11629
  store i8 8, i8* %arrayidx14, align 1, !dbg !11630
  br label %sw.epilog, !dbg !11631

sw.default:                                       ; preds = %entry
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11632
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %1, i32 0, i32 4, !dbg !11632
  %2 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !11632
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43, i64 0, i64 0)) #8, !dbg !11632
  store i32 -1, i32* %retval, align 4, !dbg !11633
  br label %return, !dbg !11633

sw.epilog:                                        ; preds = %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %3 = load i32, i32* %value.addr, align 4, !dbg !11634
  %shr = lshr i32 %3, 8, !dbg !11635
  %and = and i32 %shr, 15, !dbg !11636
  %or = or i32 32, %and, !dbg !11637
  %conv = trunc i32 %or to i8, !dbg !11638
  %arrayidx15 = getelementptr [3 x i8], [3 x i8]* %serial_bytes, i64 0, i64 1, !dbg !11639
  store i8 %conv, i8* %arrayidx15, align 1, !dbg !11640
  %4 = load i32, i32* %value.addr, align 4, !dbg !11641
  %and16 = and i32 %4, 255, !dbg !11642
  %conv17 = trunc i32 %and16 to i8, !dbg !11641
  %arrayidx18 = getelementptr [3 x i8], [3 x i8]* %serial_bytes, i64 0, i64 2, !dbg !11643
  store i8 %conv17, i8* %arrayidx18, align 1, !dbg !11644
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11645
  %6 = load i8, i8* %i2c_addr, align 1, !dbg !11646
  %conv19 = zext i8 %6 to i32, !dbg !11646
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %serial_bytes, i64 0, i64 0, !dbg !11647
  call void @i2c_write(%struct.comedi_device* %5, i32 %conv19, i8* %arraydecay, i32 3) #7, !dbg !11648
  store i32 0, i32* %retval, align 4, !dbg !11649
  br label %return, !dbg !11649

return:                                           ; preds = %sw.epilog, %sw.default
  %7 = load i32, i32* %retval, align 4, !dbg !11650
  ret i32 %7, !dbg !11650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @read_eeprom(%struct.comedi_device* %dev, i8 zeroext %address) #2 !dbg !4336 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %address.addr = alloca i8, align 1
  %devpriv = alloca %struct.pcidas64_private*, align 8
  %bitstream = alloca i32, align 4
  %bit = alloca i32, align 4
  %plx_control_addr = alloca i8*, align 8
  %value = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11651, metadata !DIExpression()), !dbg !11652
  store i8 %address, i8* %address.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %address.addr, metadata !11653, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.declare(metadata %struct.pcidas64_private** %devpriv, metadata !11655, metadata !DIExpression()), !dbg !11656
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11657
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11658
  %1 = load i8*, i8** %private, align 8, !dbg !11658
  %2 = bitcast i8* %1 to %struct.pcidas64_private*, !dbg !11657
  store %struct.pcidas64_private* %2, %struct.pcidas64_private** %devpriv, align 8, !dbg !11656
  call void @llvm.dbg.declare(metadata i32* %bitstream, metadata !11659, metadata !DIExpression()), !dbg !11660
  %3 = load i8, i8* %address.addr, align 1, !dbg !11661
  %conv = zext i8 %3 to i32, !dbg !11661
  %or = or i32 1536, %conv, !dbg !11662
  store i32 %or, i32* %bitstream, align 4, !dbg !11660
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !11663, metadata !DIExpression()), !dbg !11664
  call void @llvm.dbg.declare(metadata i8** %plx_control_addr, metadata !11665, metadata !DIExpression()), !dbg !11667
  %4 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11668
  %plx9080_iobase = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %4, i32 0, i32 2, !dbg !11669
  %5 = load i8*, i8** %plx9080_iobase, align 8, !dbg !11669
  %add.ptr = getelementptr i8, i8* %5, i64 108, !dbg !11670
  store i8* %add.ptr, i8** %plx_control_addr, align 8, !dbg !11667
  call void @llvm.dbg.declare(metadata i16* %value, metadata !11671, metadata !DIExpression()), !dbg !11672
  call void @__const_udelay(i64 4295) #7, !dbg !11673
  %6 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11678
  %plx_control_bits = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %6, i32 0, i32 22, !dbg !11679
  %7 = load i32, i32* %plx_control_bits, align 4, !dbg !11680
  %conv1 = zext i32 %7 to i64, !dbg !11680
  %and = and i64 %conv1, -50331649, !dbg !11680
  %conv2 = trunc i64 %and to i32, !dbg !11680
  store i32 %conv2, i32* %plx_control_bits, align 4, !dbg !11680
  %8 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11681
  %plx_control_bits3 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %8, i32 0, i32 22, !dbg !11682
  %9 = load i32, i32* %plx_control_bits3, align 4, !dbg !11683
  %conv4 = zext i32 %9 to i64, !dbg !11683
  %or5 = or i64 %conv4, 65536, !dbg !11683
  %conv6 = trunc i64 %or5 to i32, !dbg !11683
  store i32 %conv6, i32* %plx_control_bits3, align 4, !dbg !11683
  %10 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11684
  %plx_control_bits7 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %10, i32 0, i32 22, !dbg !11685
  %11 = load i32, i32* %plx_control_bits7, align 4, !dbg !11685
  %12 = load i8*, i8** %plx_control_addr, align 8, !dbg !11686
  call void @writel(i32 %11, i8* %12) #7, !dbg !11687
  call void @__const_udelay(i64 4295) #7, !dbg !11688
  %13 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11693
  %plx_control_bits8 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %13, i32 0, i32 22, !dbg !11694
  %14 = load i32, i32* %plx_control_bits8, align 4, !dbg !11695
  %conv9 = zext i32 %14 to i64, !dbg !11695
  %or10 = or i64 %conv9, 33554432, !dbg !11695
  %conv11 = trunc i64 %or10 to i32, !dbg !11695
  store i32 %conv11, i32* %plx_control_bits8, align 4, !dbg !11695
  %15 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11696
  %plx_control_bits12 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %15, i32 0, i32 22, !dbg !11697
  %16 = load i32, i32* %plx_control_bits12, align 4, !dbg !11697
  %17 = load i8*, i8** %plx_control_addr, align 8, !dbg !11698
  call void @writel(i32 %16, i8* %17) #7, !dbg !11699
  store i32 1024, i32* %bit, align 4, !dbg !11700
  br label %for.cond, !dbg !11702

for.cond:                                         ; preds = %for.inc, %entry
  %18 = load i32, i32* %bit, align 4, !dbg !11703
  %tobool = icmp ne i32 %18, 0, !dbg !11705
  br i1 %tobool, label %for.body, label %for.end, !dbg !11705

for.body:                                         ; preds = %for.cond
  call void @__const_udelay(i64 4295) #7, !dbg !11706
  %19 = load i32, i32* %bitstream, align 4, !dbg !11712
  %20 = load i32, i32* %bit, align 4, !dbg !11714
  %and13 = and i32 %19, %20, !dbg !11715
  %tobool14 = icmp ne i32 %and13, 0, !dbg !11715
  br i1 %tobool14, label %if.then, label %if.else, !dbg !11716

if.then:                                          ; preds = %for.body
  %21 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11717
  %plx_control_bits15 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %21, i32 0, i32 22, !dbg !11718
  %22 = load i32, i32* %plx_control_bits15, align 4, !dbg !11719
  %conv16 = zext i32 %22 to i64, !dbg !11719
  %or17 = or i64 %conv16, 67108864, !dbg !11719
  %conv18 = trunc i64 %or17 to i32, !dbg !11719
  store i32 %conv18, i32* %plx_control_bits15, align 4, !dbg !11719
  br label %if.end, !dbg !11717

if.else:                                          ; preds = %for.body
  %23 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11720
  %plx_control_bits19 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %23, i32 0, i32 22, !dbg !11721
  %24 = load i32, i32* %plx_control_bits19, align 4, !dbg !11722
  %conv20 = zext i32 %24 to i64, !dbg !11722
  %and21 = and i64 %conv20, -67108865, !dbg !11722
  %conv22 = trunc i64 %and21 to i32, !dbg !11722
  store i32 %conv22, i32* %plx_control_bits19, align 4, !dbg !11722
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11723
  %plx_control_bits23 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %25, i32 0, i32 22, !dbg !11724
  %26 = load i32, i32* %plx_control_bits23, align 4, !dbg !11724
  %27 = load i8*, i8** %plx_control_addr, align 8, !dbg !11725
  call void @writel(i32 %26, i8* %27) #7, !dbg !11726
  call void @__const_udelay(i64 4295) #7, !dbg !11727
  %28 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11732
  %plx_control_bits24 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %28, i32 0, i32 22, !dbg !11733
  %29 = load i32, i32* %plx_control_bits24, align 4, !dbg !11734
  %conv25 = zext i32 %29 to i64, !dbg !11734
  %or26 = or i64 %conv25, 16777216, !dbg !11734
  %conv27 = trunc i64 %or26 to i32, !dbg !11734
  store i32 %conv27, i32* %plx_control_bits24, align 4, !dbg !11734
  %30 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11735
  %plx_control_bits28 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %30, i32 0, i32 22, !dbg !11736
  %31 = load i32, i32* %plx_control_bits28, align 4, !dbg !11736
  %32 = load i8*, i8** %plx_control_addr, align 8, !dbg !11737
  call void @writel(i32 %31, i8* %32) #7, !dbg !11738
  call void @__const_udelay(i64 4295) #7, !dbg !11739
  %33 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11744
  %plx_control_bits29 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %33, i32 0, i32 22, !dbg !11745
  %34 = load i32, i32* %plx_control_bits29, align 4, !dbg !11746
  %conv30 = zext i32 %34 to i64, !dbg !11746
  %and31 = and i64 %conv30, -16777217, !dbg !11746
  %conv32 = trunc i64 %and31 to i32, !dbg !11746
  store i32 %conv32, i32* %plx_control_bits29, align 4, !dbg !11746
  %35 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11747
  %plx_control_bits33 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %35, i32 0, i32 22, !dbg !11748
  %36 = load i32, i32* %plx_control_bits33, align 4, !dbg !11748
  %37 = load i8*, i8** %plx_control_addr, align 8, !dbg !11749
  call void @writel(i32 %36, i8* %37) #7, !dbg !11750
  br label %for.inc, !dbg !11751

for.inc:                                          ; preds = %if.end
  %38 = load i32, i32* %bit, align 4, !dbg !11752
  %shr = lshr i32 %38, 1, !dbg !11752
  store i32 %shr, i32* %bit, align 4, !dbg !11752
  br label %for.cond, !dbg !11753, !llvm.loop !11754

for.end:                                          ; preds = %for.cond
  store i16 0, i16* %value, align 2, !dbg !11756
  store i32 32768, i32* %bit, align 4, !dbg !11757
  br label %for.cond34, !dbg !11759

for.cond34:                                       ; preds = %for.inc55, %for.end
  %39 = load i32, i32* %bit, align 4, !dbg !11760
  %tobool35 = icmp ne i32 %39, 0, !dbg !11762
  br i1 %tobool35, label %for.body36, label %for.end57, !dbg !11762

for.body36:                                       ; preds = %for.cond34
  call void @__const_udelay(i64 4295) #7, !dbg !11763
  %40 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11769
  %plx_control_bits37 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %40, i32 0, i32 22, !dbg !11770
  %41 = load i32, i32* %plx_control_bits37, align 4, !dbg !11771
  %conv38 = zext i32 %41 to i64, !dbg !11771
  %or39 = or i64 %conv38, 16777216, !dbg !11771
  %conv40 = trunc i64 %or39 to i32, !dbg !11771
  store i32 %conv40, i32* %plx_control_bits37, align 4, !dbg !11771
  %42 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11772
  %plx_control_bits41 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %42, i32 0, i32 22, !dbg !11773
  %43 = load i32, i32* %plx_control_bits41, align 4, !dbg !11773
  %44 = load i8*, i8** %plx_control_addr, align 8, !dbg !11774
  call void @writel(i32 %43, i8* %44) #7, !dbg !11775
  call void @__const_udelay(i64 4295) #7, !dbg !11776
  %45 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11781
  %plx_control_bits42 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %45, i32 0, i32 22, !dbg !11782
  %46 = load i32, i32* %plx_control_bits42, align 4, !dbg !11783
  %conv43 = zext i32 %46 to i64, !dbg !11783
  %and44 = and i64 %conv43, -16777217, !dbg !11783
  %conv45 = trunc i64 %and44 to i32, !dbg !11783
  store i32 %conv45, i32* %plx_control_bits42, align 4, !dbg !11783
  %47 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11784
  %plx_control_bits46 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %47, i32 0, i32 22, !dbg !11785
  %48 = load i32, i32* %plx_control_bits46, align 4, !dbg !11785
  %49 = load i8*, i8** %plx_control_addr, align 8, !dbg !11786
  call void @writel(i32 %48, i8* %49) #7, !dbg !11787
  call void @__const_udelay(i64 4295) #7, !dbg !11788
  %50 = load i8*, i8** %plx_control_addr, align 8, !dbg !11793
  %call = call i32 @readl(i8* %50) #7, !dbg !11795
  %conv47 = zext i32 %call to i64, !dbg !11795
  %and48 = and i64 %conv47, 134217728, !dbg !11796
  %tobool49 = icmp ne i64 %and48, 0, !dbg !11796
  br i1 %tobool49, label %if.then50, label %if.end54, !dbg !11797

if.then50:                                        ; preds = %for.body36
  %51 = load i32, i32* %bit, align 4, !dbg !11798
  %52 = load i16, i16* %value, align 2, !dbg !11799
  %conv51 = zext i16 %52 to i32, !dbg !11799
  %or52 = or i32 %conv51, %51, !dbg !11799
  %conv53 = trunc i32 %or52 to i16, !dbg !11799
  store i16 %conv53, i16* %value, align 2, !dbg !11799
  br label %if.end54, !dbg !11800

if.end54:                                         ; preds = %if.then50, %for.body36
  br label %for.inc55, !dbg !11801

for.inc55:                                        ; preds = %if.end54
  %53 = load i32, i32* %bit, align 4, !dbg !11802
  %shr56 = lshr i32 %53, 1, !dbg !11802
  store i32 %shr56, i32* %bit, align 4, !dbg !11802
  br label %for.cond34, !dbg !11803, !llvm.loop !11804

for.end57:                                        ; preds = %for.cond34
  call void @__const_udelay(i64 4295) #7, !dbg !11806
  %54 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11811
  %plx_control_bits58 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %54, i32 0, i32 22, !dbg !11812
  %55 = load i32, i32* %plx_control_bits58, align 4, !dbg !11813
  %conv59 = zext i32 %55 to i64, !dbg !11813
  %and60 = and i64 %conv59, -33554433, !dbg !11813
  %conv61 = trunc i64 %and60 to i32, !dbg !11813
  store i32 %conv61, i32* %plx_control_bits58, align 4, !dbg !11813
  %56 = load %struct.pcidas64_private*, %struct.pcidas64_private** %devpriv, align 8, !dbg !11814
  %plx_control_bits62 = getelementptr inbounds %struct.pcidas64_private, %struct.pcidas64_private* %56, i32 0, i32 22, !dbg !11815
  %57 = load i32, i32* %plx_control_bits62, align 4, !dbg !11815
  %58 = load i8*, i8** %plx_control_addr, align 8, !dbg !11816
  call void @writel(i32 %57, i8* %58) #7, !dbg !11817
  %59 = load i16, i16* %value, align 2, !dbg !11818
  ret i16 %59, !dbg !11819
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cb_pcidas64_pci_probe(%struct.pci_dev* %dev, %struct.pci_device_id* %id) #2 !dbg !11820 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %id.addr = alloca %struct.pci_device_id*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11821, metadata !DIExpression()), !dbg !11822
  store %struct.pci_device_id* %id, %struct.pci_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %id.addr, metadata !11823, metadata !DIExpression()), !dbg !11824
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11825
  %1 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !11826
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %1, i32 0, i32 6, !dbg !11827
  %2 = load i64, i64* %driver_data, align 8, !dbg !11827
  %call = call i32 @comedi_pci_auto_config(%struct.pci_dev* %0, %struct.comedi_driver* @cb_pcidas64_driver, i64 %2) #7, !dbg !11828
  ret i32 %call, !dbg !11829
}

; Function Attrs: noredzone
declare dso_local void @comedi_pci_auto_unconfig(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @comedi_pci_auto_config(%struct.pci_dev*, %struct.comedi_driver*, i64) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { noredzone }
attributes #8 = { cold noredzone }
attributes #9 = { noredzone nounwind }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4629}
!llvm.module.flags = !{!4630, !4631, !4632, !4633}
!llvm.ident = !{!4634}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_cb_pcidas64_driver_init234", scope: !2, file: !3, line: 4120, type: !374, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !4156, globals: !4164, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/staging/comedi/drivers/cb_pcidas64.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !100, !105, !113, !119, !133, !161, !174, !184, !203, !220, !226, !238, !249, !265, !270, !277, !287, !294, !298, !303, !319, !4153}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !94, line: 5, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99}
!96 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "register_layout", file: !3, line: 578, baseType: !7, size: 32, elements: !101)
!101 = !{!102, !103, !104}
!102 = !DIEnumerator(name: "LAYOUT_60XX", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "LAYOUT_64XX", value: 1, isUnsigned: true)
!104 = !DIEnumerator(name: "LAYOUT_4020", value: 2, isUnsigned: true)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "read_only_registers", file: !3, line: 150, baseType: !7, size: 32, elements: !106)
!106 = !{!107, !108, !109, !110, !111, !112}
!107 = !DIEnumerator(name: "HW_STATUS_REG", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "PIPE1_READ_REG", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "ADC_READ_PNTR_REG", value: 8, isUnsigned: true)
!110 = !DIEnumerator(name: "LOWER_XFER_REG", value: 16, isUnsigned: true)
!111 = !DIEnumerator(name: "ADC_WRITE_PNTR_REG", value: 12, isUnsigned: true)
!112 = !DIEnumerator(name: "PREPOST_REG", value: 20, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "read_write_registers", file: !3, line: 163, baseType: !7, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118}
!115 = !DIEnumerator(name: "I8255_4020_REG", value: 72, isUnsigned: true)
!116 = !DIEnumerator(name: "ADC_QUEUE_FIFO_REG", value: 256, isUnsigned: true)
!117 = !DIEnumerator(name: "ADC_FIFO_REG", value: 512, isUnsigned: true)
!118 = !DIEnumerator(name: "DAC_FIFO_REG", value: 768, isUnsigned: true)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "adc_control1_contents", file: !3, line: 258, baseType: !7, size: 32, elements: !120)
!120 = !{!121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132}
!121 = !DIEnumerator(name: "ADC_QUEUE_CONFIG_BIT", value: 1, isUnsigned: true)
!122 = !DIEnumerator(name: "CONVERT_POLARITY_BIT", value: 16, isUnsigned: true)
!123 = !DIEnumerator(name: "EOC_POLARITY_BIT", value: 32, isUnsigned: true)
!124 = !DIEnumerator(name: "ADC_SW_GATE_BIT", value: 64, isUnsigned: true)
!125 = !DIEnumerator(name: "ADC_DITHER_BIT", value: 512, isUnsigned: true)
!126 = !DIEnumerator(name: "RETRIGGER_BIT", value: 2048, isUnsigned: true)
!127 = !DIEnumerator(name: "ADC_LO_CHANNEL_4020_MASK", value: 768, isUnsigned: true)
!128 = !DIEnumerator(name: "ADC_HI_CHANNEL_4020_MASK", value: 3072, isUnsigned: true)
!129 = !DIEnumerator(name: "TWO_CHANNEL_4020_BITS", value: 4096, isUnsigned: true)
!130 = !DIEnumerator(name: "FOUR_CHANNEL_4020_BITS", value: 8192, isUnsigned: true)
!131 = !DIEnumerator(name: "CHANNEL_MODE_4020_MASK", value: 12288, isUnsigned: true)
!132 = !DIEnumerator(name: "ADC_MODE_MASK", value: 61440, isUnsigned: true)
!133 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "write_only_registers", file: !3, line: 97, baseType: !7, size: 32, elements: !134)
!134 = !{!135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160}
!135 = !DIEnumerator(name: "INTR_ENABLE_REG", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "HW_CONFIG_REG", value: 2, isUnsigned: true)
!137 = !DIEnumerator(name: "DAQ_SYNC_REG", value: 12, isUnsigned: true)
!138 = !DIEnumerator(name: "DAQ_ATRIG_LOW_4020_REG", value: 12, isUnsigned: true)
!139 = !DIEnumerator(name: "ADC_CONTROL0_REG", value: 16, isUnsigned: true)
!140 = !DIEnumerator(name: "ADC_CONTROL1_REG", value: 18, isUnsigned: true)
!141 = !DIEnumerator(name: "CALIBRATION_REG", value: 20, isUnsigned: true)
!142 = !DIEnumerator(name: "ADC_SAMPLE_INTERVAL_LOWER_REG", value: 22, isUnsigned: true)
!143 = !DIEnumerator(name: "ADC_SAMPLE_INTERVAL_UPPER_REG", value: 24, isUnsigned: true)
!144 = !DIEnumerator(name: "ADC_DELAY_INTERVAL_LOWER_REG", value: 26, isUnsigned: true)
!145 = !DIEnumerator(name: "ADC_DELAY_INTERVAL_UPPER_REG", value: 28, isUnsigned: true)
!146 = !DIEnumerator(name: "ADC_COUNT_LOWER_REG", value: 30, isUnsigned: true)
!147 = !DIEnumerator(name: "ADC_COUNT_UPPER_REG", value: 32, isUnsigned: true)
!148 = !DIEnumerator(name: "ADC_START_REG", value: 34, isUnsigned: true)
!149 = !DIEnumerator(name: "ADC_CONVERT_REG", value: 36, isUnsigned: true)
!150 = !DIEnumerator(name: "ADC_QUEUE_CLEAR_REG", value: 38, isUnsigned: true)
!151 = !DIEnumerator(name: "ADC_QUEUE_LOAD_REG", value: 40, isUnsigned: true)
!152 = !DIEnumerator(name: "ADC_BUFFER_CLEAR_REG", value: 42, isUnsigned: true)
!153 = !DIEnumerator(name: "ADC_QUEUE_HIGH_REG", value: 44, isUnsigned: true)
!154 = !DIEnumerator(name: "DAC_CONTROL0_REG", value: 80, isUnsigned: true)
!155 = !DIEnumerator(name: "DAC_CONTROL1_REG", value: 82, isUnsigned: true)
!156 = !DIEnumerator(name: "DAC_SAMPLE_INTERVAL_LOWER_REG", value: 84, isUnsigned: true)
!157 = !DIEnumerator(name: "DAC_SAMPLE_INTERVAL_UPPER_REG", value: 86, isUnsigned: true)
!158 = !DIEnumerator(name: "DAC_SELECT_REG", value: 96, isUnsigned: true)
!159 = !DIEnumerator(name: "DAC_START_REG", value: 100, isUnsigned: true)
!160 = !DIEnumerator(name: "DAC_BUFFER_CLEAR_REG", value: 102, isUnsigned: true)
!161 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hw_config_contents", file: !3, line: 203, baseType: !7, size: 32, elements: !162)
!162 = !{!163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173}
!163 = !DIEnumerator(name: "MASTER_CLOCK_4020_MASK", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "INTERNAL_CLOCK_4020_BITS", value: 1, isUnsigned: true)
!165 = !DIEnumerator(name: "BNC_CLOCK_4020_BITS", value: 2, isUnsigned: true)
!166 = !DIEnumerator(name: "EXT_CLOCK_4020_BITS", value: 3, isUnsigned: true)
!167 = !DIEnumerator(name: "EXT_QUEUE_BIT", value: 512, isUnsigned: true)
!168 = !DIEnumerator(name: "SLOW_DAC_BIT", value: 1024, isUnsigned: true)
!169 = !DIEnumerator(name: "HW_CONFIG_DUMMY_BITS", value: 8192, isUnsigned: true)
!170 = !DIEnumerator(name: "DMA_CH_SELECT_BIT", value: 32768, isUnsigned: true)
!171 = !DIEnumerator(name: "FIFO_SIZE_REG", value: 4, isUnsigned: true)
!172 = !DIEnumerator(name: "DAC_FIFO_SIZE_MASK", value: 65280, isUnsigned: true)
!173 = !DIEnumerator(name: "DAC_FIFO_BITS", value: 63488, isUnsigned: true)
!174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dac_control1_contents", file: !3, line: 353, baseType: !7, size: 32, elements: !175)
!175 = !{!176, !177, !178, !179, !180, !181, !182, !183}
!176 = !DIEnumerator(name: "DAC_WRITE_POLARITY_BIT", value: 2048, isUnsigned: true)
!177 = !DIEnumerator(name: "DAC1_EXT_REF_BIT", value: 512, isUnsigned: true)
!178 = !DIEnumerator(name: "DAC0_EXT_REF_BIT", value: 256, isUnsigned: true)
!179 = !DIEnumerator(name: "DAC_OUTPUT_ENABLE_BIT", value: 128, isUnsigned: true)
!180 = !DIEnumerator(name: "DAC_UPDATE_POLARITY_BIT", value: 64, isUnsigned: true)
!181 = !DIEnumerator(name: "DAC_SW_GATE_BIT", value: 32, isUnsigned: true)
!182 = !DIEnumerator(name: "DAC1_UNIPOLAR_BIT", value: 8, isUnsigned: true)
!183 = !DIEnumerator(name: "DAC0_UNIPOLAR_BIT", value: 2, isUnsigned: true)
!184 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "intr_enable_contents", file: !3, line: 183, baseType: !7, size: 32, elements: !185)
!185 = !{!186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202}
!186 = !DIEnumerator(name: "ADC_INTR_SRC_MASK", value: 3, isUnsigned: true)
!187 = !DIEnumerator(name: "ADC_INTR_QFULL_BITS", value: 0, isUnsigned: true)
!188 = !DIEnumerator(name: "ADC_INTR_EOC_BITS", value: 1, isUnsigned: true)
!189 = !DIEnumerator(name: "ADC_INTR_EOSCAN_BITS", value: 2, isUnsigned: true)
!190 = !DIEnumerator(name: "ADC_INTR_EOSEQ_BITS", value: 3, isUnsigned: true)
!191 = !DIEnumerator(name: "EN_ADC_INTR_SRC_BIT", value: 4, isUnsigned: true)
!192 = !DIEnumerator(name: "EN_ADC_DONE_INTR_BIT", value: 8, isUnsigned: true)
!193 = !DIEnumerator(name: "DAC_INTR_SRC_MASK", value: 48, isUnsigned: true)
!194 = !DIEnumerator(name: "DAC_INTR_QEMPTY_BITS", value: 0, isUnsigned: true)
!195 = !DIEnumerator(name: "DAC_INTR_HIGH_CHAN_BITS", value: 16, isUnsigned: true)
!196 = !DIEnumerator(name: "EN_DAC_INTR_SRC_BIT", value: 64, isUnsigned: true)
!197 = !DIEnumerator(name: "EN_DAC_DONE_INTR_BIT", value: 128, isUnsigned: true)
!198 = !DIEnumerator(name: "EN_ADC_ACTIVE_INTR_BIT", value: 512, isUnsigned: true)
!199 = !DIEnumerator(name: "EN_ADC_STOP_INTR_BIT", value: 1024, isUnsigned: true)
!200 = !DIEnumerator(name: "EN_DAC_ACTIVE_INTR_BIT", value: 2048, isUnsigned: true)
!201 = !DIEnumerator(name: "EN_DAC_UNDERRUN_BIT", value: 16384, isUnsigned: true)
!202 = !DIEnumerator(name: "EN_ADC_OVERRUN_BIT", value: 32768, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "adc_control0_contents", file: !3, line: 237, baseType: !7, size: 32, elements: !204)
!204 = !{!205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219}
!205 = !DIEnumerator(name: "ADC_GATE_SRC_MASK", value: 3, isUnsigned: true)
!206 = !DIEnumerator(name: "ADC_SOFT_GATE_BITS", value: 1, isUnsigned: true)
!207 = !DIEnumerator(name: "ADC_EXT_GATE_BITS", value: 2, isUnsigned: true)
!208 = !DIEnumerator(name: "ADC_ANALOG_GATE_BITS", value: 3, isUnsigned: true)
!209 = !DIEnumerator(name: "ADC_GATE_LEVEL_BIT", value: 4, isUnsigned: true)
!210 = !DIEnumerator(name: "ADC_GATE_POLARITY_BIT", value: 8, isUnsigned: true)
!211 = !DIEnumerator(name: "ADC_START_TRIG_SOFT_BITS", value: 16, isUnsigned: true)
!212 = !DIEnumerator(name: "ADC_START_TRIG_EXT_BITS", value: 32, isUnsigned: true)
!213 = !DIEnumerator(name: "ADC_START_TRIG_ANALOG_BITS", value: 48, isUnsigned: true)
!214 = !DIEnumerator(name: "ADC_START_TRIG_MASK", value: 48, isUnsigned: true)
!215 = !DIEnumerator(name: "ADC_START_TRIG_FALLING_BIT", value: 64, isUnsigned: true)
!216 = !DIEnumerator(name: "ADC_EXT_CONV_FALLING_BIT", value: 2048, isUnsigned: true)
!217 = !DIEnumerator(name: "ADC_SAMPLE_COUNTER_EN_BIT", value: 4096, isUnsigned: true)
!218 = !DIEnumerator(name: "ADC_DMA_DISABLE_BIT", value: 16384, isUnsigned: true)
!219 = !DIEnumerator(name: "ADC_ENABLE_BIT", value: 32768, isUnsigned: true)
!220 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !221, line: 11, baseType: !7, size: 32, elements: !222)
!221 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!222 = !{!223, !224, !225}
!223 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!224 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!225 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hw_status_contents", file: !3, line: 365, baseType: !7, size: 32, elements: !227)
!227 = !{!228, !229, !230, !231, !232, !233, !234, !235, !236, !237}
!228 = !DIEnumerator(name: "DAC_UNDERRUN_BIT", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "ADC_OVERRUN_BIT", value: 2, isUnsigned: true)
!230 = !DIEnumerator(name: "DAC_ACTIVE_BIT", value: 4, isUnsigned: true)
!231 = !DIEnumerator(name: "ADC_ACTIVE_BIT", value: 8, isUnsigned: true)
!232 = !DIEnumerator(name: "DAC_INTR_PENDING_BIT", value: 16, isUnsigned: true)
!233 = !DIEnumerator(name: "ADC_INTR_PENDING_BIT", value: 32, isUnsigned: true)
!234 = !DIEnumerator(name: "DAC_DONE_BIT", value: 64, isUnsigned: true)
!235 = !DIEnumerator(name: "ADC_DONE_BIT", value: 128, isUnsigned: true)
!236 = !DIEnumerator(name: "EXT_INTR_PENDING_BIT", value: 256, isUnsigned: true)
!237 = !DIEnumerator(name: "ADC_STOP_BIT", value: 512, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "comedi_cb", file: !239, line: 383, baseType: !7, size: 32, elements: !240)
!239 = !DIFile(filename: "drivers/staging/comedi/drivers/../comedidev.h", directory: "/home/lizy2001/genbc/linux")
!240 = !{!241, !242, !243, !244, !245, !246, !247, !248}
!241 = !DIEnumerator(name: "COMEDI_CB_EOS", value: 1, isUnsigned: true)
!242 = !DIEnumerator(name: "COMEDI_CB_EOA", value: 2, isUnsigned: true)
!243 = !DIEnumerator(name: "COMEDI_CB_BLOCK", value: 4, isUnsigned: true)
!244 = !DIEnumerator(name: "COMEDI_CB_EOBUF", value: 8, isUnsigned: true)
!245 = !DIEnumerator(name: "COMEDI_CB_ERROR", value: 16, isUnsigned: true)
!246 = !DIEnumerator(name: "COMEDI_CB_OVERFLOW", value: 32, isUnsigned: true)
!247 = !DIEnumerator(name: "COMEDI_CB_ERROR_MASK", value: 48, isUnsigned: true)
!248 = !DIEnumerator(name: "COMEDI_CB_CANCEL_MASK", value: 50, isUnsigned: true)
!249 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "comedi_subdevice_type", file: !250, line: 221, baseType: !7, size: 32, elements: !251)
!250 = !DIFile(filename: "drivers/staging/comedi/drivers/../comedi.h", directory: "/home/lizy2001/genbc/linux")
!251 = !{!252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264}
!252 = !DIEnumerator(name: "COMEDI_SUBD_UNUSED", value: 0, isUnsigned: true)
!253 = !DIEnumerator(name: "COMEDI_SUBD_AI", value: 1, isUnsigned: true)
!254 = !DIEnumerator(name: "COMEDI_SUBD_AO", value: 2, isUnsigned: true)
!255 = !DIEnumerator(name: "COMEDI_SUBD_DI", value: 3, isUnsigned: true)
!256 = !DIEnumerator(name: "COMEDI_SUBD_DO", value: 4, isUnsigned: true)
!257 = !DIEnumerator(name: "COMEDI_SUBD_DIO", value: 5, isUnsigned: true)
!258 = !DIEnumerator(name: "COMEDI_SUBD_COUNTER", value: 6, isUnsigned: true)
!259 = !DIEnumerator(name: "COMEDI_SUBD_TIMER", value: 7, isUnsigned: true)
!260 = !DIEnumerator(name: "COMEDI_SUBD_MEMORY", value: 8, isUnsigned: true)
!261 = !DIEnumerator(name: "COMEDI_SUBD_CALIB", value: 9, isUnsigned: true)
!262 = !DIEnumerator(name: "COMEDI_SUBD_PROC", value: 10, isUnsigned: true)
!263 = !DIEnumerator(name: "COMEDI_SUBD_SERIAL", value: 11, isUnsigned: true)
!264 = !DIEnumerator(name: "COMEDI_SUBD_PWM", value: 12, isUnsigned: true)
!265 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "i2c_addresses", file: !3, line: 399, baseType: !7, size: 32, elements: !266)
!266 = !{!267, !268, !269}
!267 = !DIEnumerator(name: "RANGE_CAL_I2C_ADDR", value: 32, isUnsigned: true)
!268 = !DIEnumerator(name: "CALDAC0_I2C_ADDR", value: 12, isUnsigned: true)
!269 = !DIEnumerator(name: "CALDAC1_I2C_ADDR", value: 13, isUnsigned: true)
!270 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dio_counter_registers", file: !3, line: 173, baseType: !7, size: 32, elements: !271)
!271 = !{!272, !273, !274, !275, !276}
!272 = !DIEnumerator(name: "DIO_8255_OFFSET", value: 0, isUnsigned: true)
!273 = !DIEnumerator(name: "DO_REG", value: 32, isUnsigned: true)
!274 = !DIEnumerator(name: "DI_REG", value: 40, isUnsigned: true)
!275 = !DIEnumerator(name: "DIO_DIRECTION_60XX_REG", value: 64, isUnsigned: true)
!276 = !DIEnumerator(name: "DIO_DATA_60XX_REG", value: 72, isUnsigned: true)
!277 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calibration_contents", file: !3, line: 289, baseType: !7, size: 32, elements: !278)
!278 = !{!279, !280, !281, !282, !283, !284, !285, !286}
!279 = !DIEnumerator(name: "SELECT_8800_BIT", value: 1, isUnsigned: true)
!280 = !DIEnumerator(name: "SELECT_8402_64XX_BIT", value: 2, isUnsigned: true)
!281 = !DIEnumerator(name: "SELECT_1590_60XX_BIT", value: 2, isUnsigned: true)
!282 = !DIEnumerator(name: "CAL_EN_64XX_BIT", value: 64, isUnsigned: true)
!283 = !DIEnumerator(name: "SERIAL_DATA_IN_BIT", value: 128, isUnsigned: true)
!284 = !DIEnumerator(name: "SERIAL_CLOCK_BIT", value: 256, isUnsigned: true)
!285 = !DIEnumerator(name: "CAL_EN_60XX_BIT", value: 512, isUnsigned: true)
!286 = !DIEnumerator(name: "CAL_GAIN_BIT", value: 2048, isUnsigned: true)
!287 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "adc_queue_load_contents", file: !3, line: 322, baseType: !7, size: 32, elements: !288)
!288 = !{!289, !290, !291, !292, !293}
!289 = !DIEnumerator(name: "UNIP_BIT", value: 2048, isUnsigned: true)
!290 = !DIEnumerator(name: "ADC_SE_DIFF_BIT", value: 4096, isUnsigned: true)
!291 = !DIEnumerator(name: "ADC_COMMON_BIT", value: 8192, isUnsigned: true)
!292 = !DIEnumerator(name: "QUEUE_EOSEQ_BIT", value: 16384, isUnsigned: true)
!293 = !DIEnumerator(name: "QUEUE_EOSCAN_BIT", value: 32768, isUnsigned: true)
!294 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "range_cal_i2c_contents", file: !3, line: 405, baseType: !7, size: 32, elements: !295)
!295 = !{!296, !297}
!296 = !DIEnumerator(name: "ADC_SRC_4020_MASK", value: 112, isUnsigned: true)
!297 = !DIEnumerator(name: "BNC_TRIG_THRESHOLD_0V_BIT", value: 128, isUnsigned: true)
!298 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "daq_atrig_low_4020_contents", file: !3, line: 223, baseType: !7, size: 32, elements: !299)
!299 = !{!300, !301, !302}
!300 = !DIEnumerator(name: "EXT_AGATE_BNC_BIT", value: 32768, isUnsigned: true)
!301 = !DIEnumerator(name: "EXT_STOP_TRIG_BNC_BIT", value: 16384, isUnsigned: true)
!302 = !DIEnumerator(name: "EXT_START_TRIG_BNC_BIT", value: 8192, isUnsigned: true)
!303 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dac_control0_contents", file: !3, line: 336, baseType: !7, size: 32, elements: !304)
!304 = !{!305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318}
!305 = !DIEnumerator(name: "DAC_ENABLE_BIT", value: 32768, isUnsigned: true)
!306 = !DIEnumerator(name: "DAC_CYCLIC_STOP_BIT", value: 16384, isUnsigned: true)
!307 = !DIEnumerator(name: "DAC_WAVEFORM_MODE_BIT", value: 256, isUnsigned: true)
!308 = !DIEnumerator(name: "DAC_EXT_UPDATE_FALLING_BIT", value: 128, isUnsigned: true)
!309 = !DIEnumerator(name: "DAC_EXT_UPDATE_ENABLE_BIT", value: 64, isUnsigned: true)
!310 = !DIEnumerator(name: "WAVEFORM_TRIG_MASK", value: 48, isUnsigned: true)
!311 = !DIEnumerator(name: "WAVEFORM_TRIG_DISABLED_BITS", value: 0, isUnsigned: true)
!312 = !DIEnumerator(name: "WAVEFORM_TRIG_SOFT_BITS", value: 16, isUnsigned: true)
!313 = !DIEnumerator(name: "WAVEFORM_TRIG_EXT_BITS", value: 32, isUnsigned: true)
!314 = !DIEnumerator(name: "WAVEFORM_TRIG_ADC1_BITS", value: 48, isUnsigned: true)
!315 = !DIEnumerator(name: "WAVEFORM_TRIG_FALLING_BIT", value: 8, isUnsigned: true)
!316 = !DIEnumerator(name: "WAVEFORM_GATE_LEVEL_BIT", value: 4, isUnsigned: true)
!317 = !DIEnumerator(name: "WAVEFORM_GATE_ENABLE_BIT", value: 2, isUnsigned: true)
!318 = !DIEnumerator(name: "WAVEFORM_GATE_SELECT_BIT", value: 1, isUnsigned: true)
!319 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pointer_bits", scope: !320, file: !3, line: 3556, baseType: !7, size: 32, elements: !4148)
!320 = distinct !DISubprogram(name: "caldac_i2c_write", scope: !3, file: !3, line: 3551, type: !321, scopeLine: 3553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!321 = !DISubroutineType(types: !322)
!322 = !{!323, !324, !7, !7}
!323 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_device", file: !239, line: 541, size: 1920, elements: !326)
!326 = !{!327, !328, !370, !373, !375, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4139, !4140, !4144}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !325, file: !239, line: 542, baseType: !323, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !325, file: !239, line: 543, baseType: !329, size: 64, offset: 64)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_driver", file: !239, line: 437, size: 576, elements: !331)
!331 = !{!332, !333, !337, !341, !356, !360, !365, !366, !369}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !330, file: !239, line: 439, baseType: !329, size: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !330, file: !239, line: 441, baseType: !334, size: 64, offset: 64)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !336)
!336 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !330, file: !239, line: 442, baseType: !338, size: 64, offset: 128)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !340, line: 76, flags: DIFlagFwdDecl)
!340 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!341 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !330, file: !239, line: 443, baseType: !342, size: 64, offset: 192)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64)
!343 = !DISubroutineType(types: !344)
!344 = !{!323, !324, !345}
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_devconfig", file: !250, line: 834, size: 1184, elements: !347)
!347 = !{!348, !352}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "board_name", scope: !346, file: !250, line: 835, baseType: !349, size: 160)
!349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 160, elements: !350)
!350 = !{!351}
!351 = !DISubrange(count: 20)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !346, file: !250, line: 836, baseType: !353, size: 1024, offset: 160)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 1024, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !330, file: !239, line: 444, baseType: !357, size: 64, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DISubroutineType(types: !359)
!359 = !{null, !324}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "auto_attach", scope: !330, file: !239, line: 445, baseType: !361, size: 64, offset: 320)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = !DISubroutineType(types: !363)
!363 = !{!323, !324, !364}
!364 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "num_names", scope: !330, file: !239, line: 446, baseType: !7, size: 32, offset: 384)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "board_name", scope: !330, file: !239, line: 447, baseType: !367, size: 64, offset: 448)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !330, file: !239, line: 448, baseType: !323, size: 32, offset: 512)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "pacer", scope: !325, file: !239, line: 544, baseType: !371, size: 64, offset: 128)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!372 = !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_8254", file: !239, line: 544, flags: DIFlagFwdDecl)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !325, file: !239, line: 545, baseType: !374, size: 64, offset: 192)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !325, file: !239, line: 547, baseType: !376, size: 64, offset: 256)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !378)
!378 = !{!379, !3536, !3537, !3540, !3541, !3592, !3683, !3684, !3685, !3686, !3687, !3696, !3801, !3814, !3817, !3818, !3822, !3824, !3825, !3826, !3830, !3836, !3837, !3840, !3844, !3934, !3935, !3936, !3937, !3938, !3970, !3971, !3972, !3975, !3978, !3979, !3980, !3981}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !377, file: !73, line: 462, baseType: !380, size: 512)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !381, line: 64, size: 512, elements: !382)
!381 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!382 = !{!383, !384, !391, !393, !453, !3387, !3526, !3531, !3532, !3533, !3534, !3535}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !380, file: !381, line: 65, baseType: !334, size: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !380, file: !381, line: 66, baseType: !385, size: 128, offset: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !386, line: 178, size: 128, elements: !387)
!386 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!387 = !{!388, !390}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !385, file: !386, line: 179, baseType: !389, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !385, file: !386, line: 179, baseType: !389, size: 64, offset: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !380, file: !381, line: 67, baseType: !392, size: 64, offset: 192)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !380, file: !381, line: 68, baseType: !394, size: 64, offset: 256)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !381, line: 192, size: 704, elements: !396)
!396 = !{!397, !398, !414, !415}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !395, file: !381, line: 193, baseType: !385, size: 128)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !395, file: !381, line: 194, baseType: !399, offset: 128)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !400, line: 83, baseType: !401)
!400 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !400, line: 71, elements: !402)
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !400, line: 72, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !400, line: 72, elements: !405)
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !404, file: !400, line: 73, baseType: !407)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !400, line: 20, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !407, file: !400, line: 21, baseType: !410)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !411, line: 25, baseType: !412)
!411 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !411, line: 25, elements: !413)
!413 = !{}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !395, file: !381, line: 195, baseType: !380, size: 512, offset: 128)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !395, file: !381, line: 196, baseType: !416, size: 64, offset: 640)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !418)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !381, line: 156, size: 192, elements: !419)
!419 = !{!420, !425, !430}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !418, file: !381, line: 157, baseType: !421, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DISubroutineType(types: !424)
!424 = !{!323, !394, !392}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !418, file: !381, line: 158, baseType: !426, size: 64, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DISubroutineType(types: !429)
!429 = !{!334, !394, !392}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !418, file: !381, line: 159, baseType: !431, size: 64, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !432)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = !DISubroutineType(types: !434)
!434 = !{!323, !394, !392, !435}
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !381, line: 148, size: 20736, elements: !437)
!437 = !{!438, !443, !447, !448, !452}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !436, file: !381, line: 149, baseType: !439, size: 192)
!439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !440, size: 192, elements: !441)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!441 = !{!442}
!442 = !DISubrange(count: 3)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !436, file: !381, line: 150, baseType: !444, size: 4096, offset: 192)
!444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !440, size: 4096, elements: !445)
!445 = !{!446}
!446 = !DISubrange(count: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !436, file: !381, line: 151, baseType: !323, size: 32, offset: 4288)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !436, file: !381, line: 152, baseType: !449, size: 16384, offset: 4320)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 16384, elements: !450)
!450 = !{!451}
!451 = !DISubrange(count: 2048)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !436, file: !381, line: 153, baseType: !323, size: 32, offset: 20704)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !380, file: !381, line: 69, baseType: !454, size: 64, offset: 320)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !381, line: 138, size: 448, elements: !456)
!456 = !{!457, !461, !490, !492, !3349, !3377, !3381}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !455, file: !381, line: 139, baseType: !458, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DISubroutineType(types: !460)
!460 = !{null, !392}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !455, file: !381, line: 140, baseType: !462, size: 64, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !464)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !465, line: 230, size: 128, elements: !466)
!465 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!466 = !{!467, !483}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !464, file: !465, line: 231, baseType: !468, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{!471, !392, !476, !440}
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !386, line: 60, baseType: !472)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !473, line: 73, baseType: !474)
!473 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !473, line: 15, baseType: !475)
!475 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !465, line: 30, size: 128, elements: !478)
!478 = !{!479, !480}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !477, file: !465, line: 31, baseType: !334, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !477, file: !465, line: 32, baseType: !481, size: 16, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !386, line: 19, baseType: !482)
!482 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !464, file: !465, line: 232, baseType: !484, size: 64, offset: 64)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{!471, !392, !476, !334, !487}
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !386, line: 55, baseType: !488)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !473, line: 72, baseType: !489)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !473, line: 16, baseType: !364)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !455, file: !381, line: 141, baseType: !491, size: 64, offset: 128)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !455, file: !381, line: 142, baseType: !493, size: 64, offset: 192)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !496)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !465, line: 84, size: 320, elements: !497)
!497 = !{!498, !499, !503, !3346, !3347}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !496, file: !465, line: 85, baseType: !334, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !496, file: !465, line: 86, baseType: !500, size: 64, offset: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DISubroutineType(types: !502)
!502 = !{!481, !392, !476, !323}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !496, file: !465, line: 88, baseType: !504, size: 64, offset: 128)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DISubroutineType(types: !506)
!506 = !{!481, !392, !507, !323}
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !465, line: 168, size: 448, elements: !509)
!509 = !{!510, !511, !512, !513, !3341, !3342}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !508, file: !465, line: 169, baseType: !477, size: 128)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !508, file: !465, line: 170, baseType: !487, size: 64, offset: 128)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !508, file: !465, line: 171, baseType: !374, size: 64, offset: 192)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !508, file: !465, line: 172, baseType: !514, size: 64, offset: 256)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DISubroutineType(types: !516)
!516 = !{!471, !517, !392, !507, !440, !696, !487}
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !519)
!519 = !{!520, !538, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3324, !3325, !3334, !3335, !3336, !3337, !3338, !3339, !3340}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !518, file: !44, line: 920, baseType: !521, size: 128)
!521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !518, file: !44, line: 917, size: 128, elements: !522)
!522 = !{!523, !529}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !521, file: !44, line: 918, baseType: !524, size: 64)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !525, line: 58, size: 64, elements: !526)
!525 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!526 = !{!527}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !524, file: !525, line: 59, baseType: !528, size: 64)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !521, file: !44, line: 919, baseType: !530, size: 128, align: 64)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !386, line: 216, size: 128, align: 64, elements: !531)
!531 = !{!532, !534}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !530, file: !386, line: 217, baseType: !533, size: 64)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !530, file: !386, line: 218, baseType: !535, size: 64, offset: 64)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DISubroutineType(types: !537)
!537 = !{null, !533}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !518, file: !44, line: 921, baseType: !539, size: 128, offset: 128)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !540, line: 8, size: 128, elements: !541)
!540 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!541 = !{!542, !546}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !539, file: !540, line: 9, baseType: !543, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !545, line: 18, flags: DIFlagFwdDecl)
!545 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!546 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !539, file: !540, line: 10, baseType: !547, size: 64, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !545, line: 89, size: 1536, elements: !549)
!549 = !{!550, !551, !561, !569, !570, !593, !3274, !3276, !3288, !3289, !3290, !3291, !3292, !3298, !3299, !3300}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !548, file: !545, line: 91, baseType: !7, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !548, file: !545, line: 92, baseType: !552, size: 32, offset: 32)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !553, line: 277, baseType: !554)
!553 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !553, line: 277, size: 32, elements: !555)
!555 = !{!556}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !554, file: !553, line: 277, baseType: !557, size: 32)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !553, line: 70, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !553, line: 65, size: 32, elements: !559)
!559 = !{!560}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !558, file: !553, line: 66, baseType: !7, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !548, file: !545, line: 93, baseType: !562, size: 128, offset: 64)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !563, line: 38, size: 128, elements: !564)
!563 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!564 = !{!565, !567}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !562, file: !563, line: 39, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !562, file: !563, line: 39, baseType: !568, size: 64, offset: 64)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !548, file: !545, line: 94, baseType: !547, size: 64, offset: 192)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !548, file: !545, line: 95, baseType: !571, size: 128, offset: 256)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !545, line: 47, size: 128, elements: !572)
!572 = !{!573, !589}
!573 = !DIDerivedType(tag: DW_TAG_member, scope: !571, file: !545, line: 48, baseType: !574, size: 64)
!574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !571, file: !545, line: 48, size: 64, elements: !575)
!575 = !{!576, !585}
!576 = !DIDerivedType(tag: DW_TAG_member, scope: !574, file: !545, line: 49, baseType: !577, size: 64)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !574, file: !545, line: 49, size: 64, elements: !578)
!578 = !{!579, !584}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !577, file: !545, line: 50, baseType: !580, size: 32)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !581, line: 21, baseType: !582)
!581 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !583, line: 27, baseType: !7)
!583 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!584 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !577, file: !545, line: 50, baseType: !580, size: 32, offset: 32)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !574, file: !545, line: 52, baseType: !586, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !581, line: 23, baseType: !587)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !583, line: 31, baseType: !588)
!588 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !571, file: !545, line: 54, baseType: !590, size: 64, offset: 64)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !592)
!592 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !548, file: !545, line: 96, baseType: !594, size: 64, offset: 384)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !596)
!596 = !{!597, !598, !599, !607, !614, !615, !763, !2985, !2986, !2987, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3250, !3258, !3259, !3260, !3270, !3271, !3272, !3273}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !595, file: !44, line: 611, baseType: !481, size: 16)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !595, file: !44, line: 612, baseType: !482, size: 16, offset: 16)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !595, file: !44, line: 613, baseType: !600, size: 32, offset: 32)
!600 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !601, line: 23, baseType: !602)
!601 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !601, line: 21, size: 32, elements: !603)
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !602, file: !601, line: 22, baseType: !605, size: 32)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !386, line: 32, baseType: !606)
!606 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !473, line: 49, baseType: !7)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !595, file: !44, line: 614, baseType: !608, size: 32, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !601, line: 28, baseType: !609)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !601, line: 26, size: 32, elements: !610)
!610 = !{!611}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !609, file: !601, line: 27, baseType: !612, size: 32)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !386, line: 33, baseType: !613)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !473, line: 50, baseType: !7)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !595, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !595, file: !44, line: 622, baseType: !616, size: 64, offset: 128)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !619)
!619 = !{!620, !624, !637, !641, !647, !651, !657, !661, !665, !669, !673, !674, !680, !684, !710, !739, !743, !749, !754, !758, !759}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !618, file: !44, line: 1865, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DISubroutineType(types: !623)
!623 = !{!547, !594, !547, !7}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !618, file: !44, line: 1866, baseType: !625, size: 64, offset: 64)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DISubroutineType(types: !627)
!627 = !{!334, !547, !594, !628}
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !630, line: 10, size: 128, elements: !631)
!630 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!631 = !{!632, !636}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !629, file: !630, line: 11, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DISubroutineType(types: !635)
!635 = !{null, !374}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !629, file: !630, line: 12, baseType: !374, size: 64, offset: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !618, file: !44, line: 1867, baseType: !638, size: 64, offset: 128)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DISubroutineType(types: !640)
!640 = !{!323, !594, !323}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !618, file: !44, line: 1868, baseType: !642, size: 64, offset: 192)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DISubroutineType(types: !644)
!644 = !{!645, !594, !323}
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !618, file: !44, line: 1870, baseType: !648, size: 64, offset: 256)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DISubroutineType(types: !650)
!650 = !{!323, !547, !440, !323}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !618, file: !44, line: 1872, baseType: !652, size: 64, offset: 320)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DISubroutineType(types: !654)
!654 = !{!323, !594, !547, !481, !655}
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !386, line: 30, baseType: !656)
!656 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !618, file: !44, line: 1873, baseType: !658, size: 64, offset: 384)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DISubroutineType(types: !660)
!660 = !{!323, !547, !594, !547}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !618, file: !44, line: 1874, baseType: !662, size: 64, offset: 448)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DISubroutineType(types: !664)
!664 = !{!323, !594, !547}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !618, file: !44, line: 1875, baseType: !666, size: 64, offset: 512)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!323, !594, !547, !334}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !618, file: !44, line: 1876, baseType: !670, size: 64, offset: 576)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{!323, !594, !547, !481}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !618, file: !44, line: 1877, baseType: !662, size: 64, offset: 640)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !618, file: !44, line: 1878, baseType: !675, size: 64, offset: 704)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DISubroutineType(types: !677)
!677 = !{!323, !594, !547, !481, !678}
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !386, line: 16, baseType: !679)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !386, line: 13, baseType: !580)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !618, file: !44, line: 1879, baseType: !681, size: 64, offset: 768)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{!323, !594, !547, !594, !547, !7}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !618, file: !44, line: 1881, baseType: !685, size: 64, offset: 832)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{!323, !547, !688}
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !690)
!690 = !{!691, !692, !693, !694, !695, !699, !707, !708, !709}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !689, file: !44, line: 220, baseType: !7, size: 32)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !689, file: !44, line: 221, baseType: !481, size: 16, offset: 32)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !689, file: !44, line: 222, baseType: !600, size: 32, offset: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !689, file: !44, line: 223, baseType: !608, size: 32, offset: 96)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !689, file: !44, line: 224, baseType: !696, size: 64, offset: 128)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !386, line: 46, baseType: !697)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !473, line: 88, baseType: !698)
!698 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !689, file: !44, line: 225, baseType: !700, size: 128, offset: 192)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !701, line: 13, size: 128, elements: !702)
!701 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!702 = !{!703, !706}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !700, file: !701, line: 14, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !701, line: 8, baseType: !705)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !583, line: 30, baseType: !698)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !700, file: !701, line: 15, baseType: !475, size: 64, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !689, file: !44, line: 226, baseType: !700, size: 128, offset: 320)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !689, file: !44, line: 227, baseType: !700, size: 128, offset: 448)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !689, file: !44, line: 234, baseType: !517, size: 64, offset: 576)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !618, file: !44, line: 1882, baseType: !711, size: 64, offset: 896)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DISubroutineType(types: !713)
!713 = !{!323, !714, !716, !580, !7}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !539)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !718, line: 22, size: 1152, elements: !719)
!718 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!719 = !{!720, !721, !722, !723, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !717, file: !718, line: 23, baseType: !580, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !717, file: !718, line: 24, baseType: !481, size: 16, offset: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !717, file: !718, line: 25, baseType: !7, size: 32, offset: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !717, file: !718, line: 26, baseType: !724, size: 32, offset: 96)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !386, line: 104, baseType: !580)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !717, file: !718, line: 27, baseType: !586, size: 64, offset: 128)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !717, file: !718, line: 28, baseType: !586, size: 64, offset: 192)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !717, file: !718, line: 37, baseType: !586, size: 64, offset: 256)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !717, file: !718, line: 38, baseType: !678, size: 32, offset: 320)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !717, file: !718, line: 39, baseType: !678, size: 32, offset: 352)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !717, file: !718, line: 40, baseType: !600, size: 32, offset: 384)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !717, file: !718, line: 41, baseType: !608, size: 32, offset: 416)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !717, file: !718, line: 42, baseType: !696, size: 64, offset: 448)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !717, file: !718, line: 43, baseType: !700, size: 128, offset: 512)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !717, file: !718, line: 44, baseType: !700, size: 128, offset: 640)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !717, file: !718, line: 45, baseType: !700, size: 128, offset: 768)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !717, file: !718, line: 46, baseType: !700, size: 128, offset: 896)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !717, file: !718, line: 47, baseType: !586, size: 64, offset: 1024)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !717, file: !718, line: 48, baseType: !586, size: 64, offset: 1088)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !618, file: !44, line: 1883, baseType: !740, size: 64, offset: 960)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DISubroutineType(types: !742)
!742 = !{!471, !547, !440, !487}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !618, file: !44, line: 1884, baseType: !744, size: 64, offset: 1024)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{!323, !594, !747, !586, !586}
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !618, file: !44, line: 1886, baseType: !750, size: 64, offset: 1088)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DISubroutineType(types: !752)
!752 = !{!323, !594, !753, !323}
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !618, file: !44, line: 1887, baseType: !755, size: 64, offset: 1152)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DISubroutineType(types: !757)
!757 = !{!323, !594, !547, !517, !7, !481}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !618, file: !44, line: 1890, baseType: !670, size: 64, offset: 1216)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !618, file: !44, line: 1891, baseType: !760, size: 64, offset: 1280)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DISubroutineType(types: !762)
!762 = !{!323, !594, !645, !323}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !595, file: !44, line: 623, baseType: !764, size: 64, offset: 192)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !766)
!766 = !{!767, !768, !769, !770, !771, !772, !819, !2592, !2674, !2757, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2773, !2777, !2778, !2781, !2782, !2785, !2786, !2787, !2828, !2855, !2856, !2857, !2858, !2859, !2860, !2863, !2865, !2872, !2873, !2875, !2876, !2877, !2936, !2937, !2952, !2953, !2954, !2955, !2956, !2959, !2960, !2961, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !765, file: !44, line: 1417, baseType: !385, size: 128)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !765, file: !44, line: 1418, baseType: !678, size: 32, offset: 128)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !765, file: !44, line: 1419, baseType: !592, size: 8, offset: 160)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !765, file: !44, line: 1420, baseType: !364, size: 64, offset: 192)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !765, file: !44, line: 1421, baseType: !696, size: 64, offset: 256)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !765, file: !44, line: 1422, baseType: !773, size: 64, offset: 320)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !775)
!775 = !{!776, !777, !778, !785, !789, !793, !797, !798, !799, !809, !812, !813, !814, !816, !817, !818}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !774, file: !44, line: 2229, baseType: !334, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !774, file: !44, line: 2230, baseType: !323, size: 32, offset: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !774, file: !44, line: 2238, baseType: !779, size: 64, offset: 128)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!323, !782}
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !784, line: 28, flags: DIFlagFwdDecl)
!784 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!785 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !774, file: !44, line: 2239, baseType: !786, size: 64, offset: 192)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !788)
!788 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !774, file: !44, line: 2240, baseType: !790, size: 64, offset: 256)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!547, !773, !323, !334, !374}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !774, file: !44, line: 2242, baseType: !794, size: 64, offset: 320)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = !DISubroutineType(types: !796)
!796 = !{null, !764}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !774, file: !44, line: 2243, baseType: !338, size: 64, offset: 384)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !774, file: !44, line: 2244, baseType: !773, size: 64, offset: 448)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !774, file: !44, line: 2245, baseType: !800, size: 64, offset: 512)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !386, line: 182, size: 64, elements: !801)
!801 = !{!802}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !800, file: !386, line: 183, baseType: !803, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !386, line: 186, size: 128, elements: !805)
!805 = !{!806, !807}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !804, file: !386, line: 187, baseType: !803, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !804, file: !386, line: 187, baseType: !808, size: 64, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !774, file: !44, line: 2247, baseType: !810, offset: 576)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !811, line: 187, elements: !413)
!811 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!812 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !774, file: !44, line: 2248, baseType: !810, offset: 576)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !774, file: !44, line: 2249, baseType: !810, offset: 576)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !774, file: !44, line: 2250, baseType: !815, offset: 576)
!815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !810, elements: !441)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !774, file: !44, line: 2252, baseType: !810, offset: 576)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !774, file: !44, line: 2253, baseType: !810, offset: 576)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !774, file: !44, line: 2254, baseType: !810, offset: 576)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !765, file: !44, line: 1423, baseType: !820, size: 64, offset: 384)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !823)
!823 = !{!824, !828, !832, !833, !837, !843, !847, !848, !849, !853, !857, !858, !859, !860, !866, !871, !872, !879, !880, !881, !882, !2576, !2591}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !822, file: !44, line: 1936, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{!594, !764}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !822, file: !44, line: 1937, baseType: !829, size: 64, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DISubroutineType(types: !831)
!831 = !{null, !594}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !822, file: !44, line: 1938, baseType: !829, size: 64, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !822, file: !44, line: 1940, baseType: !834, size: 64, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DISubroutineType(types: !836)
!836 = !{null, !594, !323}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !822, file: !44, line: 1941, baseType: !838, size: 64, offset: 256)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{!323, !594, !841}
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !822, file: !44, line: 1942, baseType: !844, size: 64, offset: 320)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{!323, !594}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !822, file: !44, line: 1943, baseType: !829, size: 64, offset: 384)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !822, file: !44, line: 1944, baseType: !794, size: 64, offset: 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !822, file: !44, line: 1945, baseType: !850, size: 64, offset: 512)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!323, !764, !323}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !822, file: !44, line: 1946, baseType: !854, size: 64, offset: 576)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{!323, !764}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !822, file: !44, line: 1947, baseType: !854, size: 64, offset: 640)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !822, file: !44, line: 1948, baseType: !854, size: 64, offset: 704)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !822, file: !44, line: 1949, baseType: !854, size: 64, offset: 768)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !822, file: !44, line: 1950, baseType: !861, size: 64, offset: 832)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!323, !547, !864}
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !822, file: !44, line: 1951, baseType: !867, size: 64, offset: 896)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{!323, !764, !870, !440}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !822, file: !44, line: 1952, baseType: !794, size: 64, offset: 960)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !822, file: !44, line: 1954, baseType: !873, size: 64, offset: 1024)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DISubroutineType(types: !875)
!875 = !{!323, !876, !547}
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !878, line: 539, flags: DIFlagFwdDecl)
!878 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!879 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !822, file: !44, line: 1955, baseType: !873, size: 64, offset: 1088)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !822, file: !44, line: 1956, baseType: !873, size: 64, offset: 1152)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !822, file: !44, line: 1957, baseType: !873, size: 64, offset: 1216)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !822, file: !44, line: 1963, baseType: !883, size: 64, offset: 1280)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{!323, !764, !886, !909}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !888, line: 68, size: 512, align: 128, elements: !889)
!888 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!889 = !{!890, !891, !2568, !2575}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !887, file: !888, line: 69, baseType: !364, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, scope: !887, file: !888, line: 77, baseType: !892, size: 320, offset: 64)
!892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !888, line: 77, size: 320, elements: !893)
!893 = !{!894, !1082, !1087, !1115, !1123, !1129, !2499, !2567}
!894 = !DIDerivedType(tag: DW_TAG_member, scope: !892, file: !888, line: 78, baseType: !895, size: 320)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !892, file: !888, line: 78, size: 320, elements: !896)
!896 = !{!897, !898, !1080, !1081}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !895, file: !888, line: 84, baseType: !385, size: 128)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !895, file: !888, line: 86, baseType: !899, size: 64, offset: 128)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !901)
!901 = !{!902, !903, !911, !912, !917, !932, !948, !949, !950, !951, !1073, !1074, !1077, !1078, !1079}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !900, file: !44, line: 452, baseType: !594, size: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !900, file: !44, line: 453, baseType: !904, size: 128, offset: 64)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !905, line: 292, size: 128, elements: !906)
!905 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!906 = !{!907, !908, !910}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !904, file: !905, line: 293, baseType: !399)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !904, file: !905, line: 295, baseType: !909, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !386, line: 148, baseType: !7)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !904, file: !905, line: 296, baseType: !374, size: 64, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !900, file: !44, line: 454, baseType: !909, size: 32, offset: 192)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !900, file: !44, line: 455, baseType: !913, size: 32, offset: 224)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !386, line: 168, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !386, line: 166, size: 32, elements: !915)
!915 = !{!916}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !914, file: !386, line: 167, baseType: !323, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !900, file: !44, line: 460, baseType: !918, size: 128, offset: 256)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !919, line: 125, size: 128, elements: !920)
!919 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!920 = !{!921, !931}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !918, file: !919, line: 126, baseType: !922, size: 64)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !919, line: 31, size: 64, elements: !923)
!923 = !{!924}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !922, file: !919, line: 32, baseType: !925, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !919, line: 24, size: 192, align: 64, elements: !927)
!927 = !{!928, !929, !930}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !926, file: !919, line: 25, baseType: !364, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !926, file: !919, line: 26, baseType: !925, size: 64, offset: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !926, file: !919, line: 27, baseType: !925, size: 64, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !918, file: !919, line: 127, baseType: !925, size: 64, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !900, file: !44, line: 461, baseType: !933, size: 256, offset: 384)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !934, line: 35, size: 256, elements: !935)
!934 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!935 = !{!936, !944, !945, !947}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !933, file: !934, line: 36, baseType: !937, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !938, line: 13, baseType: !939)
!938 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !386, line: 175, baseType: !940)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !386, line: 173, size: 64, elements: !941)
!941 = !{!942}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !940, file: !386, line: 174, baseType: !943, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !581, line: 22, baseType: !705)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !933, file: !934, line: 42, baseType: !937, size: 64, offset: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !933, file: !934, line: 46, baseType: !946, offset: 128)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !400, line: 29, baseType: !407)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !933, file: !934, line: 47, baseType: !385, size: 128, offset: 128)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !900, file: !44, line: 462, baseType: !364, size: 64, offset: 640)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !900, file: !44, line: 463, baseType: !364, size: 64, offset: 704)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !900, file: !44, line: 464, baseType: !364, size: 64, offset: 768)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !900, file: !44, line: 465, baseType: !952, size: 64, offset: 832)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !955)
!955 = !{!956, !960, !964, !968, !972, !976, !982, !988, !992, !997, !1001, !1005, !1009, !1037, !1041, !1047, !1048, !1049, !1053, !1058, !1062, !1069}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !954, file: !44, line: 368, baseType: !957, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{!323, !886, !841}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !954, file: !44, line: 369, baseType: !961, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DISubroutineType(types: !963)
!963 = !{!323, !517, !886}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !954, file: !44, line: 372, baseType: !965, size: 64, offset: 128)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{!323, !899, !841}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !954, file: !44, line: 375, baseType: !969, size: 64, offset: 192)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{!323, !886}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !954, file: !44, line: 381, baseType: !973, size: 64, offset: 256)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{!323, !517, !899, !389, !7}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !954, file: !44, line: 383, baseType: !977, size: 64, offset: 320)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !980}
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !954, file: !44, line: 385, baseType: !983, size: 64, offset: 384)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{!323, !517, !899, !696, !7, !7, !986, !987}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !954, file: !44, line: 388, baseType: !989, size: 64, offset: 448)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DISubroutineType(types: !991)
!991 = !{!323, !517, !899, !696, !7, !7, !886, !374}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !954, file: !44, line: 393, baseType: !993, size: 64, offset: 512)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{!996, !899, !996}
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !386, line: 125, baseType: !586)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !954, file: !44, line: 394, baseType: !998, size: 64, offset: 576)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{null, !886, !7, !7}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !954, file: !44, line: 395, baseType: !1002, size: 64, offset: 640)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!323, !886, !909}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !954, file: !44, line: 396, baseType: !1006, size: 64, offset: 704)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{null, !886}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !954, file: !44, line: 397, baseType: !1010, size: 64, offset: 768)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!471, !1013, !1035}
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1022, !1023, !1024, !1027, !1028}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1014, file: !44, line: 321, baseType: !517, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1014, file: !44, line: 326, baseType: !696, size: 64, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1014, file: !44, line: 327, baseType: !1019, size: 64, offset: 128)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{null, !1013, !475, !475}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1014, file: !44, line: 328, baseType: !374, size: 64, offset: 192)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1014, file: !44, line: 329, baseType: !323, size: 32, offset: 256)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1014, file: !44, line: 330, baseType: !1025, size: 16, offset: 288)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !581, line: 19, baseType: !1026)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !583, line: 24, baseType: !482)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1014, file: !44, line: 331, baseType: !1025, size: 16, offset: 304)
!1028 = !DIDerivedType(tag: DW_TAG_member, scope: !1014, file: !44, line: 332, baseType: !1029, size: 64, offset: 320)
!1029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1014, file: !44, line: 332, size: 64, elements: !1030)
!1030 = !{!1031, !1032}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1029, file: !44, line: 333, baseType: !7, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1029, file: !44, line: 334, baseType: !1033, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !954, file: !44, line: 402, baseType: !1038, size: 64, offset: 832)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!323, !899, !886, !886, !5}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !954, file: !44, line: 404, baseType: !1042, size: 64, offset: 896)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!655, !886, !1045}
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1046, line: 305, baseType: !7)
!1046 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !954, file: !44, line: 405, baseType: !1006, size: 64, offset: 960)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !954, file: !44, line: 406, baseType: !969, size: 64, offset: 1024)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !954, file: !44, line: 407, baseType: !1050, size: 64, offset: 1088)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!323, !886, !364, !364}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !954, file: !44, line: 409, baseType: !1054, size: 64, offset: 1152)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !886, !1057, !1057}
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !954, file: !44, line: 410, baseType: !1059, size: 64, offset: 1216)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!323, !899, !886}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !954, file: !44, line: 413, baseType: !1063, size: 64, offset: 1280)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!323, !1066, !517, !1068}
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !954, file: !44, line: 415, baseType: !1070, size: 64, offset: 1344)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{null, !517}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !900, file: !44, line: 466, baseType: !364, size: 64, offset: 896)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !900, file: !44, line: 467, baseType: !1075, size: 32, offset: 960)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1076, line: 8, baseType: !580)
!1076 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !900, file: !44, line: 468, baseType: !399, offset: 992)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !900, file: !44, line: 469, baseType: !385, size: 128, offset: 1024)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !900, file: !44, line: 470, baseType: !374, size: 64, offset: 1152)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !895, file: !888, line: 87, baseType: !364, size: 64, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !895, file: !888, line: 94, baseType: !364, size: 64, offset: 256)
!1082 = !DIDerivedType(tag: DW_TAG_member, scope: !892, file: !888, line: 96, baseType: !1083, size: 64)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !892, file: !888, line: 96, size: 64, elements: !1084)
!1084 = !{!1085}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1083, file: !888, line: 101, baseType: !1086, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !386, line: 143, baseType: !586)
!1087 = !DIDerivedType(tag: DW_TAG_member, scope: !892, file: !888, line: 103, baseType: !1088, size: 320)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !892, file: !888, line: 103, size: 320, elements: !1089)
!1089 = !{!1090, !1100, !1103, !1104}
!1090 = !DIDerivedType(tag: DW_TAG_member, scope: !1088, file: !888, line: 104, baseType: !1091, size: 128)
!1091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1088, file: !888, line: 104, size: 128, elements: !1092)
!1092 = !{!1093, !1094}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1091, file: !888, line: 105, baseType: !385, size: 128)
!1094 = !DIDerivedType(tag: DW_TAG_member, scope: !1091, file: !888, line: 106, baseType: !1095, size: 128)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1091, file: !888, line: 106, size: 128, elements: !1096)
!1096 = !{!1097, !1098, !1099}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1095, file: !888, line: 107, baseType: !886, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1095, file: !888, line: 109, baseType: !323, size: 32, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1095, file: !888, line: 110, baseType: !323, size: 32, offset: 96)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1088, file: !888, line: 117, baseType: !1101, size: 64, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !888, line: 117, flags: DIFlagFwdDecl)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1088, file: !888, line: 119, baseType: !374, size: 64, offset: 192)
!1104 = !DIDerivedType(tag: DW_TAG_member, scope: !1088, file: !888, line: 120, baseType: !1105, size: 64, offset: 256)
!1105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1088, file: !888, line: 120, size: 64, elements: !1106)
!1106 = !{!1107, !1108, !1109}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1105, file: !888, line: 121, baseType: !374, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1105, file: !888, line: 122, baseType: !364, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, scope: !1105, file: !888, line: 123, baseType: !1110, size: 32)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1105, file: !888, line: 123, size: 32, elements: !1111)
!1111 = !{!1112, !1113, !1114}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1110, file: !888, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1110, file: !888, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1110, file: !888, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1115 = !DIDerivedType(tag: DW_TAG_member, scope: !892, file: !888, line: 130, baseType: !1116, size: 192)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !892, file: !888, line: 130, size: 192, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1116, file: !888, line: 131, baseType: !364, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1116, file: !888, line: 134, baseType: !592, size: 8, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1116, file: !888, line: 135, baseType: !592, size: 8, offset: 72)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1116, file: !888, line: 136, baseType: !913, size: 32, offset: 96)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1116, file: !888, line: 137, baseType: !7, size: 32, offset: 128)
!1123 = !DIDerivedType(tag: DW_TAG_member, scope: !892, file: !888, line: 139, baseType: !1124, size: 256)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !892, file: !888, line: 139, size: 256, elements: !1125)
!1125 = !{!1126, !1127, !1128}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1124, file: !888, line: 140, baseType: !364, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1124, file: !888, line: 141, baseType: !913, size: 32, offset: 64)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1124, file: !888, line: 143, baseType: !385, size: 128, offset: 128)
!1129 = !DIDerivedType(tag: DW_TAG_member, scope: !892, file: !888, line: 145, baseType: !1130, size: 256)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !892, file: !888, line: 145, size: 256, elements: !1131)
!1131 = !{!1132, !1133, !1135, !1136, !2498}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1130, file: !888, line: 146, baseType: !364, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1130, file: !888, line: 147, baseType: !1134, size: 64, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !878, line: 509, baseType: !886)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1130, file: !888, line: 148, baseType: !364, size: 64, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_member, scope: !1130, file: !888, line: 149, baseType: !1137, size: 64, offset: 192)
!1137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1130, file: !888, line: 149, size: 64, elements: !1138)
!1138 = !{!1139, !2497}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1137, file: !888, line: 150, baseType: !1140, size: 64)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !888, line: 388, size: 7296, elements: !1142)
!1142 = !{!1143, !2493}
!1143 = !DIDerivedType(tag: DW_TAG_member, scope: !1141, file: !888, line: 389, baseType: !1144, size: 7296)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1141, file: !888, line: 389, size: 7296, elements: !1145)
!1145 = !{!1146, !1264, !1265, !1266, !1270, !1271, !1272, !1273, !1274, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1315, !1323, !1326, !1372, !1373, !2477, !2478, !2481, !2482, !2483, !2486, !2487, !2488, !2491, !2492}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1144, file: !888, line: 390, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !888, line: 305, size: 1472, elements: !1149)
!1149 = !{!1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1164, !1165, !1170, !1171, !1174, !1258, !1259, !1260, !1261, !1262}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1148, file: !888, line: 308, baseType: !364, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1148, file: !888, line: 309, baseType: !364, size: 64, offset: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1148, file: !888, line: 313, baseType: !1147, size: 64, offset: 128)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1148, file: !888, line: 313, baseType: !1147, size: 64, offset: 192)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1148, file: !888, line: 315, baseType: !926, size: 192, align: 64, offset: 256)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1148, file: !888, line: 323, baseType: !364, size: 64, offset: 448)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1148, file: !888, line: 327, baseType: !1140, size: 64, offset: 512)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1148, file: !888, line: 333, baseType: !1158, size: 64, offset: 576)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !878, line: 284, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !878, line: 284, size: 64, elements: !1160)
!1160 = !{!1161}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1159, file: !878, line: 284, baseType: !1162, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1163, line: 19, baseType: !364)
!1163 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1148, file: !888, line: 334, baseType: !364, size: 64, offset: 640)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1148, file: !888, line: 343, baseType: !1166, size: 256, offset: 704)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1148, file: !888, line: 340, size: 256, elements: !1167)
!1167 = !{!1168, !1169}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1166, file: !888, line: 341, baseType: !926, size: 192, align: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1166, file: !888, line: 342, baseType: !364, size: 64, offset: 192)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1148, file: !888, line: 351, baseType: !385, size: 128, offset: 960)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1148, file: !888, line: 353, baseType: !1172, size: 64, offset: 1088)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !888, line: 353, flags: DIFlagFwdDecl)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1148, file: !888, line: 356, baseType: !1175, size: 64, offset: 1152)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1178)
!1178 = !{!1179, !1183, !1184, !1188, !1192, !1232, !1236, !1240, !1244, !1245, !1246, !1250, !1254}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1177, file: !14, line: 558, baseType: !1180, size: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{null, !1147}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1177, file: !14, line: 559, baseType: !1180, size: 64, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1177, file: !14, line: 560, baseType: !1185, size: 64, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!323, !1147, !364}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1177, file: !14, line: 561, baseType: !1189, size: 64, offset: 192)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{!323, !1147}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1177, file: !14, line: 562, baseType: !1193, size: 64, offset: 256)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!1196, !1197}
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !888, line: 682, baseType: !7)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1203, !1204, !1205, !1212, !1219, !1225, !1226, !1227, !1229, !1231}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1198, file: !14, line: 509, baseType: !1147, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1198, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1198, file: !14, line: 511, baseType: !909, size: 32, offset: 96)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1198, file: !14, line: 512, baseType: !364, size: 64, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1198, file: !14, line: 513, baseType: !364, size: 64, offset: 192)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1198, file: !14, line: 514, baseType: !1206, size: 64, offset: 256)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !878, line: 385, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 385, size: 64, elements: !1209)
!1209 = !{!1210}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1208, file: !878, line: 385, baseType: !1211, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1163, line: 15, baseType: !364)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1198, file: !14, line: 516, baseType: !1213, size: 64, offset: 320)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !878, line: 359, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 359, size: 64, elements: !1216)
!1216 = !{!1217}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1215, file: !878, line: 359, baseType: !1218, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1163, line: 16, baseType: !364)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1198, file: !14, line: 519, baseType: !1220, size: 64, offset: 384)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1163, line: 21, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1163, line: 21, size: 64, elements: !1222)
!1222 = !{!1223}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1221, file: !1163, line: 21, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1163, line: 14, baseType: !364)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1198, file: !14, line: 521, baseType: !886, size: 64, offset: 448)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1198, file: !14, line: 522, baseType: !886, size: 64, offset: 512)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1198, file: !14, line: 528, baseType: !1228, size: 64, offset: 576)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1198, file: !14, line: 532, baseType: !1230, size: 64, offset: 640)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1198, file: !14, line: 536, baseType: !1134, size: 64, offset: 704)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1177, file: !14, line: 563, baseType: !1233, size: 64, offset: 320)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!1196, !1197, !13}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1177, file: !14, line: 565, baseType: !1237, size: 64, offset: 384)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{null, !1197, !364, !364}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1177, file: !14, line: 567, baseType: !1241, size: 64, offset: 448)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!364, !1147}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1177, file: !14, line: 571, baseType: !1193, size: 64, offset: 512)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1177, file: !14, line: 574, baseType: !1193, size: 64, offset: 576)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1177, file: !14, line: 579, baseType: !1247, size: 64, offset: 640)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!323, !1147, !364, !374, !323, !323}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1177, file: !14, line: 585, baseType: !1251, size: 64, offset: 704)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{!334, !1147}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1177, file: !14, line: 615, baseType: !1255, size: 64, offset: 768)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!886, !1147, !364}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1148, file: !888, line: 359, baseType: !364, size: 64, offset: 1216)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1148, file: !888, line: 361, baseType: !517, size: 64, offset: 1280)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1148, file: !888, line: 362, baseType: !374, size: 64, offset: 1344)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1148, file: !888, line: 365, baseType: !937, size: 64, offset: 1408)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1148, file: !888, line: 373, baseType: !1263, offset: 1472)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !888, line: 296, elements: !413)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1144, file: !888, line: 391, baseType: !922, size: 64, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1144, file: !888, line: 392, baseType: !586, size: 64, offset: 128)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1144, file: !888, line: 394, baseType: !1267, size: 64, offset: 192)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!364, !517, !364, !364, !364, !364}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1144, file: !888, line: 398, baseType: !364, size: 64, offset: 256)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1144, file: !888, line: 399, baseType: !364, size: 64, offset: 320)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1144, file: !888, line: 405, baseType: !364, size: 64, offset: 384)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1144, file: !888, line: 406, baseType: !364, size: 64, offset: 448)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1144, file: !888, line: 407, baseType: !1275, size: 64, offset: 512)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !878, line: 286, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 286, size: 64, elements: !1278)
!1278 = !{!1279}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1277, file: !878, line: 286, baseType: !1280, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1163, line: 18, baseType: !364)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1144, file: !888, line: 416, baseType: !913, size: 32, offset: 576)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1144, file: !888, line: 428, baseType: !913, size: 32, offset: 608)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1144, file: !888, line: 437, baseType: !913, size: 32, offset: 640)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1144, file: !888, line: 447, baseType: !913, size: 32, offset: 672)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1144, file: !888, line: 450, baseType: !937, size: 64, offset: 704)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1144, file: !888, line: 452, baseType: !323, size: 32, offset: 768)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1144, file: !888, line: 454, baseType: !399, offset: 800)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1144, file: !888, line: 457, baseType: !933, size: 256, offset: 832)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1144, file: !888, line: 459, baseType: !385, size: 128, offset: 1088)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1144, file: !888, line: 466, baseType: !364, size: 64, offset: 1216)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1144, file: !888, line: 467, baseType: !364, size: 64, offset: 1280)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1144, file: !888, line: 469, baseType: !364, size: 64, offset: 1344)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1144, file: !888, line: 470, baseType: !364, size: 64, offset: 1408)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1144, file: !888, line: 471, baseType: !939, size: 64, offset: 1472)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1144, file: !888, line: 472, baseType: !364, size: 64, offset: 1536)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1144, file: !888, line: 473, baseType: !364, size: 64, offset: 1600)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1144, file: !888, line: 474, baseType: !364, size: 64, offset: 1664)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1144, file: !888, line: 475, baseType: !364, size: 64, offset: 1728)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1144, file: !888, line: 477, baseType: !399, offset: 1792)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1144, file: !888, line: 478, baseType: !364, size: 64, offset: 1792)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1144, file: !888, line: 478, baseType: !364, size: 64, offset: 1856)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1144, file: !888, line: 478, baseType: !364, size: 64, offset: 1920)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1144, file: !888, line: 478, baseType: !364, size: 64, offset: 1984)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1144, file: !888, line: 479, baseType: !364, size: 64, offset: 2048)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1144, file: !888, line: 479, baseType: !364, size: 64, offset: 2112)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1144, file: !888, line: 479, baseType: !364, size: 64, offset: 2176)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1144, file: !888, line: 480, baseType: !364, size: 64, offset: 2240)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1144, file: !888, line: 480, baseType: !364, size: 64, offset: 2304)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1144, file: !888, line: 480, baseType: !364, size: 64, offset: 2368)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1144, file: !888, line: 480, baseType: !364, size: 64, offset: 2432)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1144, file: !888, line: 482, baseType: !1312, size: 2816, offset: 2496)
!1312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 2816, elements: !1313)
!1313 = !{!1314}
!1314 = !DISubrange(count: 44)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1144, file: !888, line: 488, baseType: !1316, size: 256, offset: 5312)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1317, line: 60, size: 256, elements: !1318)
!1317 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1316, file: !1317, line: 61, baseType: !1320, size: 256)
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 256, elements: !1321)
!1321 = !{!1322}
!1322 = !DISubrange(count: 4)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1144, file: !888, line: 490, baseType: !1324, size: 64, offset: 5568)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !888, line: 490, flags: DIFlagFwdDecl)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1144, file: !888, line: 493, baseType: !1327, size: 896, offset: 5632)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1328, line: 53, baseType: !1329)
!1328 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1328, line: 13, size: 896, elements: !1330)
!1330 = !{!1331, !1332, !1333, !1334, !1337, !1338, !1345, !1346, !1366, !1367, !1368}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1329, file: !1328, line: 18, baseType: !586, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1329, file: !1328, line: 28, baseType: !939, size: 64, offset: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1329, file: !1328, line: 31, baseType: !933, size: 256, offset: 128)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1329, file: !1328, line: 32, baseType: !1335, size: 64, offset: 384)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1328, line: 32, flags: DIFlagFwdDecl)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1329, file: !1328, line: 37, baseType: !482, size: 16, offset: 448)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1329, file: !1328, line: 40, baseType: !1339, size: 192, offset: 512)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1340, line: 53, size: 192, elements: !1341)
!1340 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1341 = !{!1342, !1343, !1344}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1339, file: !1340, line: 54, baseType: !937, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1339, file: !1340, line: 55, baseType: !399, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1339, file: !1340, line: 59, baseType: !385, size: 128, offset: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1329, file: !1328, line: 41, baseType: !374, size: 64, offset: 704)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1329, file: !1328, line: 42, baseType: !1347, size: 64, offset: 768)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1350, line: 13, size: 896, elements: !1351)
!1350 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1351 = !{!1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1349, file: !1350, line: 14, baseType: !374, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1349, file: !1350, line: 15, baseType: !364, size: 64, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1349, file: !1350, line: 17, baseType: !364, size: 64, offset: 128)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1349, file: !1350, line: 17, baseType: !364, size: 64, offset: 192)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1349, file: !1350, line: 19, baseType: !475, size: 64, offset: 256)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1349, file: !1350, line: 21, baseType: !475, size: 64, offset: 320)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1349, file: !1350, line: 22, baseType: !475, size: 64, offset: 384)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1349, file: !1350, line: 23, baseType: !475, size: 64, offset: 448)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1349, file: !1350, line: 24, baseType: !475, size: 64, offset: 512)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1349, file: !1350, line: 25, baseType: !475, size: 64, offset: 576)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1349, file: !1350, line: 26, baseType: !475, size: 64, offset: 640)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1349, file: !1350, line: 27, baseType: !475, size: 64, offset: 704)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1349, file: !1350, line: 28, baseType: !475, size: 64, offset: 768)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1349, file: !1350, line: 29, baseType: !475, size: 64, offset: 832)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1329, file: !1328, line: 44, baseType: !913, size: 32, offset: 832)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1329, file: !1328, line: 50, baseType: !1025, size: 16, offset: 864)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1329, file: !1328, line: 51, baseType: !1369, size: 16, offset: 880)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !581, line: 18, baseType: !1370)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !583, line: 23, baseType: !1371)
!1371 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1144, file: !888, line: 495, baseType: !364, size: 64, offset: 6528)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1144, file: !888, line: 497, baseType: !1374, size: 64, offset: 6592)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !888, line: 381, size: 384, elements: !1376)
!1376 = !{!1377, !1378, !2476}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1375, file: !888, line: 382, baseType: !913, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1375, file: !888, line: 383, baseType: !1379, size: 128, offset: 64)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !888, line: 376, size: 128, elements: !1380)
!1380 = !{!1381, !2474}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1379, file: !888, line: 377, baseType: !1382, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1384, line: 640, size: 48640, elements: !1385)
!1384 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1385 = !{!1386, !1392, !1394, !1395, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1412, !1430, !1441, !1526, !1527, !1528, !1539, !1540, !1542, !1543, !1544, !1545, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1624, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1662, !1664, !1665, !1666, !1678, !1679, !1680, !1681, !1682, !1683, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1707, !1712, !1896, !1897, !1898, !1899, !1903, !1906, !1909, !1912, !1915, !1919, !2020, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2066, !2067, !2068, !2069, !2070, !2075, !2076, !2077, !2080, !2081, !2084, !2087, !2090, !2093, !2136, !2139, !2140, !2219, !2220, !2223, !2224, !2227, !2228, !2229, !2233, !2234, !2235, !2248, !2249, !2250, !2260, !2265, !2268, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1383, file: !1384, line: 646, baseType: !1387, size: 128)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1388, line: 56, size: 128, elements: !1389)
!1388 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1389 = !{!1390, !1391}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1387, file: !1388, line: 57, baseType: !364, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1387, file: !1388, line: 58, baseType: !580, size: 32, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1383, file: !1384, line: 649, baseType: !1393, size: 64, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !475)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1383, file: !1384, line: 657, baseType: !374, size: 64, offset: 192)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1383, file: !1384, line: 658, baseType: !1396, size: 32, offset: 256)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1397, line: 113, baseType: !1398)
!1397 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1397, line: 111, size: 32, elements: !1399)
!1399 = !{!1400}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1398, file: !1397, line: 112, baseType: !913, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1383, file: !1384, line: 660, baseType: !7, size: 32, offset: 288)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1383, file: !1384, line: 661, baseType: !7, size: 32, offset: 320)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1383, file: !1384, line: 684, baseType: !323, size: 32, offset: 352)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1383, file: !1384, line: 686, baseType: !323, size: 32, offset: 384)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1383, file: !1384, line: 687, baseType: !323, size: 32, offset: 416)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1383, file: !1384, line: 688, baseType: !323, size: 32, offset: 448)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1383, file: !1384, line: 689, baseType: !7, size: 32, offset: 480)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1383, file: !1384, line: 691, baseType: !1409, size: 64, offset: 512)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1411)
!1411 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1384, line: 691, flags: DIFlagFwdDecl)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1383, file: !1384, line: 692, baseType: !1413, size: 832, offset: 576)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1384, line: 451, size: 832, elements: !1414)
!1414 = !{!1415, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1413, file: !1384, line: 453, baseType: !1416, size: 128)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1384, line: 325, size: 128, elements: !1417)
!1417 = !{!1418, !1419}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1416, file: !1384, line: 326, baseType: !364, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1416, file: !1384, line: 327, baseType: !580, size: 32, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1413, file: !1384, line: 454, baseType: !926, size: 192, align: 64, offset: 128)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1413, file: !1384, line: 455, baseType: !385, size: 128, offset: 320)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1413, file: !1384, line: 456, baseType: !7, size: 32, offset: 448)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1413, file: !1384, line: 458, baseType: !586, size: 64, offset: 512)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1413, file: !1384, line: 459, baseType: !586, size: 64, offset: 576)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1413, file: !1384, line: 460, baseType: !586, size: 64, offset: 640)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1413, file: !1384, line: 461, baseType: !586, size: 64, offset: 704)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1413, file: !1384, line: 463, baseType: !586, size: 64, offset: 768)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1413, file: !1384, line: 465, baseType: !1429, offset: 832)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1384, line: 415, elements: !413)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1383, file: !1384, line: 693, baseType: !1431, size: 384, offset: 1408)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1384, line: 489, size: 384, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1436, !1437, !1438, !1439}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1431, file: !1384, line: 490, baseType: !385, size: 128)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1431, file: !1384, line: 491, baseType: !364, size: 64, offset: 128)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1431, file: !1384, line: 492, baseType: !364, size: 64, offset: 192)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1431, file: !1384, line: 493, baseType: !7, size: 32, offset: 256)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1431, file: !1384, line: 494, baseType: !482, size: 16, offset: 288)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1431, file: !1384, line: 495, baseType: !482, size: 16, offset: 304)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1431, file: !1384, line: 497, baseType: !1440, size: 64, offset: 320)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1383, file: !1384, line: 697, baseType: !1442, size: 1792, offset: 1792)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1384, line: 507, size: 1792, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1523, !1524}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1442, file: !1384, line: 508, baseType: !926, size: 192, align: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1442, file: !1384, line: 515, baseType: !586, size: 64, offset: 192)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1442, file: !1384, line: 516, baseType: !586, size: 64, offset: 256)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1442, file: !1384, line: 517, baseType: !586, size: 64, offset: 320)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1442, file: !1384, line: 518, baseType: !586, size: 64, offset: 384)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1442, file: !1384, line: 519, baseType: !586, size: 64, offset: 448)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1442, file: !1384, line: 526, baseType: !943, size: 64, offset: 512)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1442, file: !1384, line: 527, baseType: !586, size: 64, offset: 576)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1442, file: !1384, line: 528, baseType: !7, size: 32, offset: 640)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1442, file: !1384, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1442, file: !1384, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1442, file: !1384, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1442, file: !1384, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1442, file: !1384, line: 563, baseType: !1458, size: 512, offset: 704)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1459)
!1459 = !{!1460, !1468, !1469, !1474, !1517, !1520, !1521, !1522}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1458, file: !20, line: 119, baseType: !1461, size: 256)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1462, line: 9, size: 256, elements: !1463)
!1462 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1463 = !{!1464, !1465}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1461, file: !1462, line: 10, baseType: !926, size: 192, align: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1461, file: !1462, line: 11, baseType: !1466, size: 64, offset: 192)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1467, line: 29, baseType: !943)
!1467 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1458, file: !20, line: 120, baseType: !1466, size: 64, offset: 256)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1458, file: !20, line: 121, baseType: !1470, size: 64, offset: 320)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!19, !1473}
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1458, file: !20, line: 122, baseType: !1475, size: 64, offset: 384)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1477)
!1477 = !{!1478, !1498, !1499, !1502, !1507, !1508, !1512, !1516}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1476, file: !20, line: 160, baseType: !1479, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1481)
!1481 = !{!1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1480, file: !20, line: 215, baseType: !946)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1480, file: !20, line: 216, baseType: !7, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1480, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1480, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1480, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1480, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1480, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1480, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1480, file: !20, line: 233, baseType: !1466, size: 64, offset: 128)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1480, file: !20, line: 234, baseType: !1473, size: 64, offset: 192)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1480, file: !20, line: 235, baseType: !1466, size: 64, offset: 256)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1480, file: !20, line: 236, baseType: !1473, size: 64, offset: 320)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1480, file: !20, line: 237, baseType: !1495, size: 4096, offset: 512)
!1495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1476, size: 4096, elements: !1496)
!1496 = !{!1497}
!1497 = !DISubrange(count: 8)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1476, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1476, file: !20, line: 162, baseType: !1500, size: 32, offset: 96)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !386, line: 27, baseType: !1501)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !473, line: 96, baseType: !323)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1476, file: !20, line: 163, baseType: !1503, size: 32, offset: 128)
!1503 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !553, line: 276, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !553, line: 276, size: 32, elements: !1505)
!1505 = !{!1506}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1504, file: !553, line: 276, baseType: !557, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1476, file: !20, line: 164, baseType: !1473, size: 64, offset: 192)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1476, file: !20, line: 165, baseType: !1509, size: 128, offset: 256)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1462, line: 14, size: 128, elements: !1510)
!1510 = !{!1511}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1509, file: !1462, line: 15, baseType: !918, size: 128)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1476, file: !20, line: 166, baseType: !1513, size: 64, offset: 384)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!1466}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1476, file: !20, line: 167, baseType: !1466, size: 64, offset: 448)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1458, file: !20, line: 123, baseType: !1518, size: 8, offset: 448)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !581, line: 17, baseType: !1519)
!1519 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !583, line: 21, baseType: !592)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1458, file: !20, line: 124, baseType: !1518, size: 8, offset: 456)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1458, file: !20, line: 125, baseType: !1518, size: 8, offset: 464)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1458, file: !20, line: 126, baseType: !1518, size: 8, offset: 472)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1442, file: !1384, line: 572, baseType: !1458, size: 512, offset: 1216)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1442, file: !1384, line: 580, baseType: !1525, size: 64, offset: 1728)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1383, file: !1384, line: 721, baseType: !7, size: 32, offset: 3584)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1383, file: !1384, line: 722, baseType: !323, size: 32, offset: 3616)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1383, file: !1384, line: 723, baseType: !1529, size: 64, offset: 3648)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1531)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1532, line: 17, baseType: !1533)
!1532 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1532, line: 17, size: 64, elements: !1534)
!1534 = !{!1535}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1533, file: !1532, line: 17, baseType: !1536, size: 64)
!1536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 64, elements: !1537)
!1537 = !{!1538}
!1538 = !DISubrange(count: 1)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1383, file: !1384, line: 724, baseType: !1531, size: 64, offset: 3712)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1383, file: !1384, line: 749, baseType: !1541, offset: 3776)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1384, line: 290, elements: !413)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1383, file: !1384, line: 751, baseType: !385, size: 128, offset: 3776)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1383, file: !1384, line: 757, baseType: !1140, size: 64, offset: 3904)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1383, file: !1384, line: 758, baseType: !1140, size: 64, offset: 3968)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1383, file: !1384, line: 761, baseType: !1546, size: 320, offset: 4032)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1317, line: 34, size: 320, elements: !1547)
!1547 = !{!1548, !1549}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1546, file: !1317, line: 35, baseType: !586, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1546, file: !1317, line: 36, baseType: !1550, size: 256, offset: 64)
!1550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1147, size: 256, elements: !1321)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1383, file: !1384, line: 766, baseType: !323, size: 32, offset: 4352)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1383, file: !1384, line: 767, baseType: !323, size: 32, offset: 4384)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1383, file: !1384, line: 768, baseType: !323, size: 32, offset: 4416)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1383, file: !1384, line: 770, baseType: !323, size: 32, offset: 4448)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1383, file: !1384, line: 772, baseType: !364, size: 64, offset: 4480)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1383, file: !1384, line: 775, baseType: !7, size: 32, offset: 4544)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1383, file: !1384, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1383, file: !1384, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1383, file: !1384, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1383, file: !1384, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1383, file: !1384, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1383, file: !1384, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1383, file: !1384, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1383, file: !1384, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1383, file: !1384, line: 831, baseType: !364, size: 64, offset: 4672)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1383, file: !1384, line: 833, baseType: !1567, size: 384, offset: 4736)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1568)
!1568 = !{!1569, !1574}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1567, file: !25, line: 26, baseType: !1570, size: 64)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{!475, !1573}
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, scope: !1567, file: !25, line: 27, baseType: !1575, size: 320, offset: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1567, file: !25, line: 27, size: 320, elements: !1576)
!1576 = !{!1577, !1587, !1614}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1575, file: !25, line: 36, baseType: !1578, size: 320)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1575, file: !25, line: 29, size: 320, elements: !1579)
!1579 = !{!1580, !1582, !1583, !1584, !1585, !1586}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1578, file: !25, line: 30, baseType: !1581, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1578, file: !25, line: 31, baseType: !580, size: 32, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1578, file: !25, line: 32, baseType: !580, size: 32, offset: 96)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1578, file: !25, line: 33, baseType: !580, size: 32, offset: 128)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1578, file: !25, line: 34, baseType: !586, size: 64, offset: 192)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1578, file: !25, line: 35, baseType: !1581, size: 64, offset: 256)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1575, file: !25, line: 46, baseType: !1588, size: 192)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1575, file: !25, line: 38, size: 192, elements: !1589)
!1589 = !{!1590, !1591, !1592, !1613}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1588, file: !25, line: 39, baseType: !1500, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1588, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, scope: !1588, file: !25, line: 41, baseType: !1593, size: 64, offset: 64)
!1593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1588, file: !25, line: 41, size: 64, elements: !1594)
!1594 = !{!1595, !1603}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1593, file: !25, line: 42, baseType: !1596, size: 64)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1598, line: 7, size: 128, elements: !1599)
!1598 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1599 = !{!1600, !1602}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1597, file: !1598, line: 8, baseType: !1601, size: 64)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !473, line: 93, baseType: !698)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1597, file: !1598, line: 9, baseType: !698, size: 64, offset: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1593, file: !25, line: 43, baseType: !1604, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1606, line: 7, size: 64, elements: !1607)
!1606 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1607 = !{!1608, !1612}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1605, file: !1606, line: 8, baseType: !1609, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1606, line: 5, baseType: !1610)
!1610 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !581, line: 20, baseType: !1611)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !583, line: 26, baseType: !323)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1605, file: !1606, line: 9, baseType: !1610, size: 32, offset: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1588, file: !25, line: 45, baseType: !586, size: 64, offset: 128)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1575, file: !25, line: 54, baseType: !1615, size: 256)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1575, file: !25, line: 48, size: 256, elements: !1616)
!1616 = !{!1617, !1620, !1621, !1622, !1623}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1615, file: !25, line: 49, baseType: !1618, size: 64)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1615, file: !25, line: 50, baseType: !323, size: 32, offset: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1615, file: !25, line: 51, baseType: !323, size: 32, offset: 96)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1615, file: !25, line: 52, baseType: !364, size: 64, offset: 128)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1615, file: !25, line: 53, baseType: !364, size: 64, offset: 192)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1383, file: !1384, line: 835, baseType: !1625, size: 32, offset: 5120)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !386, line: 22, baseType: !1626)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !473, line: 28, baseType: !323)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1383, file: !1384, line: 836, baseType: !1625, size: 32, offset: 5152)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1383, file: !1384, line: 840, baseType: !364, size: 64, offset: 5184)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1383, file: !1384, line: 849, baseType: !1382, size: 64, offset: 5248)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1383, file: !1384, line: 852, baseType: !1382, size: 64, offset: 5312)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1383, file: !1384, line: 857, baseType: !385, size: 128, offset: 5376)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1383, file: !1384, line: 858, baseType: !385, size: 128, offset: 5504)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1383, file: !1384, line: 859, baseType: !1382, size: 64, offset: 5632)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1383, file: !1384, line: 867, baseType: !385, size: 128, offset: 5696)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1383, file: !1384, line: 868, baseType: !385, size: 128, offset: 5824)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1383, file: !1384, line: 871, baseType: !1637, size: 64, offset: 5952)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1639)
!1639 = !{!1640, !1641, !1642, !1643, !1645, !1646, !1653, !1654}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1638, file: !53, line: 61, baseType: !1396, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1638, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1638, file: !53, line: 63, baseType: !399, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1638, file: !53, line: 65, baseType: !1644, size: 256, offset: 64)
!1644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !800, size: 256, elements: !1321)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1638, file: !53, line: 66, baseType: !800, size: 64, offset: 320)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1638, file: !53, line: 68, baseType: !1647, size: 128, offset: 384)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1648, line: 40, baseType: !1649)
!1648 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1648, line: 36, size: 128, elements: !1650)
!1650 = !{!1651, !1652}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1649, file: !1648, line: 37, baseType: !399)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1649, file: !1648, line: 38, baseType: !385, size: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1638, file: !53, line: 69, baseType: !530, size: 128, align: 64, offset: 512)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1638, file: !53, line: 70, baseType: !1655, size: 128, offset: 640)
!1655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1656, size: 128, elements: !1537)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1657)
!1657 = !{!1658, !1659}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1656, file: !53, line: 55, baseType: !323, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1656, file: !53, line: 56, baseType: !1660, size: 64, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1383, file: !1384, line: 872, baseType: !1663, size: 512, offset: 6016)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !804, size: 512, elements: !1321)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1383, file: !1384, line: 873, baseType: !385, size: 128, offset: 6528)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1383, file: !1384, line: 874, baseType: !385, size: 128, offset: 6656)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1383, file: !1384, line: 876, baseType: !1667, size: 64, offset: 6784)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1669, line: 26, size: 192, elements: !1670)
!1669 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1668, file: !1669, line: 27, baseType: !7, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1668, file: !1669, line: 28, baseType: !1673, size: 128, offset: 64)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1674, line: 43, size: 128, elements: !1675)
!1674 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1675 = !{!1676, !1677}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1673, file: !1674, line: 44, baseType: !946)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1673, file: !1674, line: 45, baseType: !385, size: 128)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1383, file: !1384, line: 879, baseType: !870, size: 64, offset: 6848)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1383, file: !1384, line: 882, baseType: !870, size: 64, offset: 6912)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1383, file: !1384, line: 884, baseType: !586, size: 64, offset: 6976)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1383, file: !1384, line: 885, baseType: !586, size: 64, offset: 7040)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1383, file: !1384, line: 890, baseType: !586, size: 64, offset: 7104)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1383, file: !1384, line: 891, baseType: !1684, size: 128, offset: 7168)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1384, line: 242, size: 128, elements: !1685)
!1685 = !{!1686, !1687, !1688}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1684, file: !1384, line: 244, baseType: !586, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1684, file: !1384, line: 245, baseType: !586, size: 64, offset: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1684, file: !1384, line: 246, baseType: !946, offset: 128)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1383, file: !1384, line: 900, baseType: !364, size: 64, offset: 7296)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1383, file: !1384, line: 901, baseType: !364, size: 64, offset: 7360)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1383, file: !1384, line: 904, baseType: !586, size: 64, offset: 7424)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1383, file: !1384, line: 907, baseType: !586, size: 64, offset: 7488)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1383, file: !1384, line: 910, baseType: !364, size: 64, offset: 7552)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1383, file: !1384, line: 911, baseType: !364, size: 64, offset: 7616)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1383, file: !1384, line: 914, baseType: !1696, size: 640, offset: 7680)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1697, line: 123, size: 640, elements: !1698)
!1697 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1698 = !{!1699, !1705, !1706}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1696, file: !1697, line: 124, baseType: !1700, size: 576)
!1700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 576, elements: !441)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1697, line: 108, size: 192, elements: !1702)
!1702 = !{!1703, !1704}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1701, file: !1697, line: 109, baseType: !586, size: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1701, file: !1697, line: 110, baseType: !1509, size: 128, offset: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1696, file: !1697, line: 125, baseType: !7, size: 32, offset: 576)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1696, file: !1697, line: 126, baseType: !7, size: 32, offset: 608)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1383, file: !1384, line: 917, baseType: !1708, size: 192, offset: 8320)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1697, line: 134, size: 192, elements: !1709)
!1709 = !{!1710, !1711}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1708, file: !1697, line: 135, baseType: !530, size: 128, align: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1708, file: !1697, line: 136, baseType: !7, size: 32, offset: 128)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1383, file: !1384, line: 923, baseType: !1713, size: 64, offset: 8512)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64)
!1714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1715)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1716, line: 111, size: 1280, elements: !1717)
!1716 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1737, !1738, !1739, !1740, !1741, !1742, !1849, !1850, !1851, !1852, !1878, !1881, !1891}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1715, file: !1716, line: 112, baseType: !913, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1715, file: !1716, line: 120, baseType: !600, size: 32, offset: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1715, file: !1716, line: 121, baseType: !608, size: 32, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1715, file: !1716, line: 122, baseType: !600, size: 32, offset: 96)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1715, file: !1716, line: 123, baseType: !608, size: 32, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1715, file: !1716, line: 124, baseType: !600, size: 32, offset: 160)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1715, file: !1716, line: 125, baseType: !608, size: 32, offset: 192)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1715, file: !1716, line: 126, baseType: !600, size: 32, offset: 224)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1715, file: !1716, line: 127, baseType: !608, size: 32, offset: 256)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1715, file: !1716, line: 128, baseType: !7, size: 32, offset: 288)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1715, file: !1716, line: 129, baseType: !1729, size: 64, offset: 320)
!1729 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1730, line: 26, baseType: !1731)
!1730 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1730, line: 24, size: 64, elements: !1732)
!1732 = !{!1733}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1731, file: !1730, line: 25, baseType: !1734, size: 64)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !582, size: 64, elements: !1735)
!1735 = !{!1736}
!1736 = !DISubrange(count: 2)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1715, file: !1716, line: 130, baseType: !1729, size: 64, offset: 384)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1715, file: !1716, line: 131, baseType: !1729, size: 64, offset: 448)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1715, file: !1716, line: 132, baseType: !1729, size: 64, offset: 512)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1715, file: !1716, line: 133, baseType: !1729, size: 64, offset: 576)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1715, file: !1716, line: 135, baseType: !592, size: 8, offset: 640)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1715, file: !1716, line: 137, baseType: !1743, size: 64, offset: 704)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1745, line: 189, size: 1664, elements: !1746)
!1745 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1746 = !{!1747, !1748, !1751, !1756, !1757, !1760, !1761, !1766, !1767, !1768, !1769, !1771, !1772, !1773, !1774, !1775, !1813, !1834}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1744, file: !1745, line: 190, baseType: !1396, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1744, file: !1745, line: 191, baseType: !1749, size: 32, offset: 32)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1745, line: 28, baseType: !1750)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !386, line: 98, baseType: !1610)
!1751 = !DIDerivedType(tag: DW_TAG_member, scope: !1744, file: !1745, line: 192, baseType: !1752, size: 192, offset: 64)
!1752 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1744, file: !1745, line: 192, size: 192, elements: !1753)
!1753 = !{!1754, !1755}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1752, file: !1745, line: 193, baseType: !385, size: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1752, file: !1745, line: 194, baseType: !926, size: 192, align: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1744, file: !1745, line: 199, baseType: !933, size: 256, offset: 256)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1744, file: !1745, line: 200, baseType: !1758, size: 64, offset: 512)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1745, line: 200, flags: DIFlagFwdDecl)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1744, file: !1745, line: 201, baseType: !374, size: 64, offset: 576)
!1761 = !DIDerivedType(tag: DW_TAG_member, scope: !1744, file: !1745, line: 202, baseType: !1762, size: 64, offset: 640)
!1762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1744, file: !1745, line: 202, size: 64, elements: !1763)
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1762, file: !1745, line: 203, baseType: !704, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1762, file: !1745, line: 204, baseType: !704, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1744, file: !1745, line: 206, baseType: !704, size: 64, offset: 704)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1744, file: !1745, line: 207, baseType: !600, size: 32, offset: 768)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1744, file: !1745, line: 208, baseType: !608, size: 32, offset: 800)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1744, file: !1745, line: 209, baseType: !1770, size: 32, offset: 832)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1745, line: 31, baseType: !724)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1744, file: !1745, line: 210, baseType: !482, size: 16, offset: 864)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1744, file: !1745, line: 211, baseType: !482, size: 16, offset: 880)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1744, file: !1745, line: 215, baseType: !1371, size: 16, offset: 896)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1744, file: !1745, line: 222, baseType: !364, size: 64, offset: 960)
!1775 = !DIDerivedType(tag: DW_TAG_member, scope: !1744, file: !1745, line: 239, baseType: !1776, size: 320, offset: 1024)
!1776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1744, file: !1745, line: 239, size: 320, elements: !1777)
!1777 = !{!1778, !1805}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1776, file: !1745, line: 240, baseType: !1779, size: 320)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1745, line: 108, size: 320, elements: !1780)
!1780 = !{!1781, !1782, !1794, !1797, !1804}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1779, file: !1745, line: 110, baseType: !364, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, scope: !1779, file: !1745, line: 111, baseType: !1783, size: 64, offset: 64)
!1783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1779, file: !1745, line: 111, size: 64, elements: !1784)
!1784 = !{!1785, !1793}
!1785 = !DIDerivedType(tag: DW_TAG_member, scope: !1783, file: !1745, line: 112, baseType: !1786, size: 64)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1783, file: !1745, line: 112, size: 64, elements: !1787)
!1787 = !{!1788, !1789}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1786, file: !1745, line: 114, baseType: !1025, size: 16)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1786, file: !1745, line: 115, baseType: !1790, size: 48, offset: 16)
!1790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 48, elements: !1791)
!1791 = !{!1792}
!1792 = !DISubrange(count: 6)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1783, file: !1745, line: 121, baseType: !364, size: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1779, file: !1745, line: 123, baseType: !1795, size: 64, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1745, line: 96, flags: DIFlagFwdDecl)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1779, file: !1745, line: 124, baseType: !1798, size: 64, offset: 192)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1745, line: 102, size: 192, elements: !1800)
!1800 = !{!1801, !1802, !1803}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1799, file: !1745, line: 103, baseType: !530, size: 128, align: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1799, file: !1745, line: 104, baseType: !1396, size: 32, offset: 128)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1799, file: !1745, line: 105, baseType: !655, size: 8, offset: 160)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1779, file: !1745, line: 125, baseType: !334, size: 64, offset: 256)
!1805 = !DIDerivedType(tag: DW_TAG_member, scope: !1776, file: !1745, line: 241, baseType: !1806, size: 320)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1776, file: !1745, line: 241, size: 320, elements: !1807)
!1807 = !{!1808, !1809, !1810, !1811, !1812}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1806, file: !1745, line: 242, baseType: !364, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1806, file: !1745, line: 243, baseType: !364, size: 64, offset: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1806, file: !1745, line: 244, baseType: !1795, size: 64, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1806, file: !1745, line: 245, baseType: !1798, size: 64, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1806, file: !1745, line: 246, baseType: !440, size: 64, offset: 256)
!1813 = !DIDerivedType(tag: DW_TAG_member, scope: !1744, file: !1745, line: 254, baseType: !1814, size: 256, offset: 1344)
!1814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1744, file: !1745, line: 254, size: 256, elements: !1815)
!1815 = !{!1816, !1822}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1814, file: !1745, line: 255, baseType: !1817, size: 256)
!1817 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1745, line: 128, size: 256, elements: !1818)
!1818 = !{!1819, !1820}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1817, file: !1745, line: 129, baseType: !374, size: 64)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1817, file: !1745, line: 130, baseType: !1821, size: 256)
!1821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 256, elements: !1321)
!1822 = !DIDerivedType(tag: DW_TAG_member, scope: !1814, file: !1745, line: 256, baseType: !1823, size: 256)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1814, file: !1745, line: 256, size: 256, elements: !1824)
!1824 = !{!1825, !1826}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1823, file: !1745, line: 258, baseType: !385, size: 128)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1823, file: !1745, line: 259, baseType: !1827, size: 128, offset: 128)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1828, line: 22, size: 128, elements: !1829)
!1828 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1829 = !{!1830, !1833}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1827, file: !1828, line: 23, baseType: !1831, size: 64)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1828, line: 23, flags: DIFlagFwdDecl)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1827, file: !1828, line: 24, baseType: !364, size: 64, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1744, file: !1745, line: 274, baseType: !1835, size: 64, offset: 1600)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1745, line: 170, size: 192, elements: !1837)
!1837 = !{!1838, !1847, !1848}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1836, file: !1745, line: 171, baseType: !1839, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1745, line: 165, baseType: !1840)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!323, !1743, !1843, !1845, !1743}
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1796)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1817)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1836, file: !1745, line: 172, baseType: !1743, size: 64, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1836, file: !1745, line: 173, baseType: !1795, size: 64, offset: 128)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1715, file: !1716, line: 138, baseType: !1743, size: 64, offset: 768)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1715, file: !1716, line: 139, baseType: !1743, size: 64, offset: 832)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1715, file: !1716, line: 140, baseType: !1743, size: 64, offset: 896)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1715, file: !1716, line: 145, baseType: !1853, size: 64, offset: 960)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1855, line: 13, size: 896, elements: !1856)
!1855 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1856 = !{!1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1854, file: !1855, line: 14, baseType: !1396, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1854, file: !1855, line: 15, baseType: !913, size: 32, offset: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1854, file: !1855, line: 16, baseType: !913, size: 32, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1854, file: !1855, line: 21, baseType: !937, size: 64, offset: 128)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1854, file: !1855, line: 27, baseType: !364, size: 64, offset: 192)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1854, file: !1855, line: 28, baseType: !364, size: 64, offset: 256)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1854, file: !1855, line: 29, baseType: !937, size: 64, offset: 320)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1854, file: !1855, line: 32, baseType: !804, size: 128, offset: 384)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1854, file: !1855, line: 33, baseType: !600, size: 32, offset: 512)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1854, file: !1855, line: 37, baseType: !937, size: 64, offset: 576)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1854, file: !1855, line: 44, baseType: !1868, size: 256, offset: 640)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1869, line: 15, size: 256, elements: !1870)
!1869 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1870 = !{!1871, !1872, !1873, !1874, !1875, !1876, !1877}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1868, file: !1869, line: 16, baseType: !946)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1868, file: !1869, line: 18, baseType: !323, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1868, file: !1869, line: 19, baseType: !323, size: 32, offset: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1868, file: !1869, line: 20, baseType: !323, size: 32, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1868, file: !1869, line: 21, baseType: !323, size: 32, offset: 96)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1868, file: !1869, line: 22, baseType: !364, size: 64, offset: 128)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1868, file: !1869, line: 23, baseType: !364, size: 64, offset: 192)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1715, file: !1716, line: 146, baseType: !1879, size: 64, offset: 1024)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !601, line: 18, flags: DIFlagFwdDecl)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1715, file: !1716, line: 147, baseType: !1882, size: 64, offset: 1088)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1716, line: 25, size: 64, elements: !1884)
!1884 = !{!1885, !1886, !1887}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1883, file: !1716, line: 26, baseType: !913, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1883, file: !1716, line: 27, baseType: !323, size: 32, offset: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1883, file: !1716, line: 28, baseType: !1888, offset: 64)
!1888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !608, elements: !1889)
!1889 = !{!1890}
!1890 = !DISubrange(count: 0)
!1891 = !DIDerivedType(tag: DW_TAG_member, scope: !1715, file: !1716, line: 149, baseType: !1892, size: 128, offset: 1152)
!1892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1715, file: !1716, line: 149, size: 128, elements: !1893)
!1893 = !{!1894, !1895}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1892, file: !1716, line: 150, baseType: !323, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1892, file: !1716, line: 151, baseType: !530, size: 128, align: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1383, file: !1384, line: 926, baseType: !1713, size: 64, offset: 8576)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1383, file: !1384, line: 929, baseType: !1713, size: 64, offset: 8640)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1383, file: !1384, line: 933, baseType: !1743, size: 64, offset: 8704)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1383, file: !1384, line: 943, baseType: !1900, size: 128, offset: 8768)
!1900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 128, elements: !1901)
!1901 = !{!1902}
!1902 = !DISubrange(count: 16)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1383, file: !1384, line: 945, baseType: !1904, size: 64, offset: 8896)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1384, line: 49, flags: DIFlagFwdDecl)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1383, file: !1384, line: 956, baseType: !1907, size: 64, offset: 8960)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1384, line: 45, flags: DIFlagFwdDecl)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1383, file: !1384, line: 959, baseType: !1910, size: 64, offset: 9024)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1384, line: 959, flags: DIFlagFwdDecl)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1383, file: !1384, line: 962, baseType: !1913, size: 64, offset: 9088)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1384, line: 66, flags: DIFlagFwdDecl)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1383, file: !1384, line: 966, baseType: !1916, size: 64, offset: 9152)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1918, line: 35, flags: DIFlagFwdDecl)
!1918 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1383, file: !1384, line: 969, baseType: !1920, size: 64, offset: 9216)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1922, line: 82, size: 7296, elements: !1923)
!1922 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1923 = !{!1924, !1925, !1926, !1927, !1928, !1929, !1930, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1959, !1968, !1969, !1971, !1972, !1973, !1976, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2006, !2007, !2014, !2015, !2016, !2017, !2018, !2019}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1921, file: !1922, line: 83, baseType: !1396, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1921, file: !1922, line: 84, baseType: !913, size: 32, offset: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1921, file: !1922, line: 85, baseType: !323, size: 32, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1921, file: !1922, line: 86, baseType: !385, size: 128, offset: 128)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1921, file: !1922, line: 88, baseType: !1647, size: 128, offset: 256)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1921, file: !1922, line: 91, baseType: !1382, size: 64, offset: 384)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1921, file: !1922, line: 94, baseType: !1931, size: 192, offset: 448)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1932, line: 30, size: 192, elements: !1933)
!1932 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1933 = !{!1934, !1935}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1931, file: !1932, line: 31, baseType: !385, size: 128)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1931, file: !1932, line: 32, baseType: !1936, size: 64, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1937, line: 25, baseType: !1938)
!1937 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1937, line: 23, size: 64, elements: !1939)
!1939 = !{!1940}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1938, file: !1937, line: 24, baseType: !1536, size: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1921, file: !1922, line: 97, baseType: !800, size: 64, offset: 640)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1921, file: !1922, line: 100, baseType: !323, size: 32, offset: 704)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1921, file: !1922, line: 106, baseType: !323, size: 32, offset: 736)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1921, file: !1922, line: 107, baseType: !1382, size: 64, offset: 768)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1921, file: !1922, line: 110, baseType: !323, size: 32, offset: 832)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1921, file: !1922, line: 111, baseType: !7, size: 32, offset: 864)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1921, file: !1922, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1921, file: !1922, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1921, file: !1922, line: 128, baseType: !323, size: 32, offset: 928)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1921, file: !1922, line: 129, baseType: !385, size: 128, offset: 960)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1921, file: !1922, line: 132, baseType: !1458, size: 512, offset: 1088)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1921, file: !1922, line: 133, baseType: !1466, size: 64, offset: 1600)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1921, file: !1922, line: 140, baseType: !1954, size: 256, offset: 1664)
!1954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 256, elements: !1735)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1922, line: 38, size: 128, elements: !1956)
!1956 = !{!1957, !1958}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1955, file: !1922, line: 39, baseType: !586, size: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1955, file: !1922, line: 40, baseType: !586, size: 64, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1921, file: !1922, line: 146, baseType: !1960, size: 192, offset: 1920)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1922, line: 66, size: 192, elements: !1961)
!1961 = !{!1962}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1960, file: !1922, line: 67, baseType: !1963, size: 192)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1922, line: 47, size: 192, elements: !1964)
!1964 = !{!1965, !1966, !1967}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1963, file: !1922, line: 48, baseType: !939, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1963, file: !1922, line: 49, baseType: !939, size: 64, offset: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1963, file: !1922, line: 50, baseType: !939, size: 64, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1921, file: !1922, line: 150, baseType: !1696, size: 640, offset: 2112)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1921, file: !1922, line: 153, baseType: !1970, size: 256, offset: 2752)
!1970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 256, elements: !1321)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1921, file: !1922, line: 159, baseType: !1637, size: 64, offset: 3008)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1921, file: !1922, line: 162, baseType: !323, size: 32, offset: 3072)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1921, file: !1922, line: 164, baseType: !1974, size: 64, offset: 3136)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1922, line: 164, flags: DIFlagFwdDecl)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1921, file: !1922, line: 175, baseType: !1977, size: 32, offset: 3200)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !553, line: 805, baseType: !1978)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !553, line: 798, size: 32, elements: !1979)
!1979 = !{!1980, !1981}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1978, file: !553, line: 803, baseType: !552, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1978, file: !553, line: 804, baseType: !399, offset: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1921, file: !1922, line: 176, baseType: !586, size: 64, offset: 3264)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1921, file: !1922, line: 176, baseType: !586, size: 64, offset: 3328)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1921, file: !1922, line: 176, baseType: !586, size: 64, offset: 3392)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1921, file: !1922, line: 176, baseType: !586, size: 64, offset: 3456)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1921, file: !1922, line: 177, baseType: !586, size: 64, offset: 3520)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1921, file: !1922, line: 178, baseType: !586, size: 64, offset: 3584)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1921, file: !1922, line: 179, baseType: !1684, size: 128, offset: 3648)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1921, file: !1922, line: 180, baseType: !364, size: 64, offset: 3776)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1921, file: !1922, line: 180, baseType: !364, size: 64, offset: 3840)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1921, file: !1922, line: 180, baseType: !364, size: 64, offset: 3904)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1921, file: !1922, line: 180, baseType: !364, size: 64, offset: 3968)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1921, file: !1922, line: 181, baseType: !364, size: 64, offset: 4032)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1921, file: !1922, line: 181, baseType: !364, size: 64, offset: 4096)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1921, file: !1922, line: 181, baseType: !364, size: 64, offset: 4160)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1921, file: !1922, line: 181, baseType: !364, size: 64, offset: 4224)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1921, file: !1922, line: 182, baseType: !364, size: 64, offset: 4288)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1921, file: !1922, line: 182, baseType: !364, size: 64, offset: 4352)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1921, file: !1922, line: 182, baseType: !364, size: 64, offset: 4416)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1921, file: !1922, line: 182, baseType: !364, size: 64, offset: 4480)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1921, file: !1922, line: 183, baseType: !364, size: 64, offset: 4544)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1921, file: !1922, line: 183, baseType: !364, size: 64, offset: 4608)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1921, file: !1922, line: 184, baseType: !2004, offset: 4672)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2005, line: 12, elements: !413)
!2005 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1921, file: !1922, line: 192, baseType: !588, size: 64, offset: 4672)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1921, file: !1922, line: 203, baseType: !2008, size: 2048, offset: 4736)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2009, size: 2048, elements: !1901)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2010, line: 43, size: 128, elements: !2011)
!2010 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2011 = !{!2012, !2013}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2009, file: !2010, line: 44, baseType: !489, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2009, file: !2010, line: 45, baseType: !489, size: 64, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1921, file: !1922, line: 220, baseType: !655, size: 8, offset: 6784)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1921, file: !1922, line: 221, baseType: !1371, size: 16, offset: 6800)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1921, file: !1922, line: 222, baseType: !1371, size: 16, offset: 6816)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1921, file: !1922, line: 224, baseType: !1140, size: 64, offset: 6848)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1921, file: !1922, line: 227, baseType: !1339, size: 192, offset: 6912)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1921, file: !1922, line: 233, baseType: !1339, size: 192, offset: 7104)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1383, file: !1384, line: 970, baseType: !2021, size: 64, offset: 9280)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1922, line: 20, size: 16576, elements: !2023)
!2023 = !{!2024, !2025, !2026, !2027}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2022, file: !1922, line: 21, baseType: !399)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2022, file: !1922, line: 22, baseType: !1396, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2022, file: !1922, line: 23, baseType: !1647, size: 128, offset: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2022, file: !1922, line: 24, baseType: !2028, size: 16384, offset: 192)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2029, size: 16384, elements: !445)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1932, line: 49, size: 256, elements: !2030)
!2030 = !{!2031}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2029, file: !1932, line: 50, baseType: !2032, size: 256)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1932, line: 35, size: 256, elements: !2033)
!2033 = !{!2034, !2041, !2042, !2048}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2032, file: !1932, line: 37, baseType: !2035, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2036, line: 19, baseType: !2037)
!2036 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2036, line: 18, baseType: !2039)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{null, !323}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2032, file: !1932, line: 38, baseType: !364, size: 64, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2032, file: !1932, line: 44, baseType: !2043, size: 64, offset: 128)
!2043 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2036, line: 22, baseType: !2044)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2036, line: 21, baseType: !2046)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{null}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2032, file: !1932, line: 46, baseType: !1936, size: 64, offset: 192)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1383, file: !1384, line: 971, baseType: !1936, size: 64, offset: 9344)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1383, file: !1384, line: 972, baseType: !1936, size: 64, offset: 9408)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1383, file: !1384, line: 974, baseType: !1936, size: 64, offset: 9472)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1383, file: !1384, line: 975, baseType: !1931, size: 192, offset: 9536)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1383, file: !1384, line: 976, baseType: !364, size: 64, offset: 9728)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1383, file: !1384, line: 977, baseType: !487, size: 64, offset: 9792)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1383, file: !1384, line: 978, baseType: !7, size: 32, offset: 9856)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1383, file: !1384, line: 980, baseType: !533, size: 64, offset: 9920)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1383, file: !1384, line: 989, baseType: !2058, size: 128, offset: 9984)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2059, line: 35, size: 128, elements: !2060)
!2059 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2060 = !{!2061, !2062, !2063}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2058, file: !2059, line: 36, baseType: !323, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2058, file: !2059, line: 37, baseType: !913, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2058, file: !2059, line: 38, baseType: !2064, size: 64, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2059, line: 23, flags: DIFlagFwdDecl)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1383, file: !1384, line: 992, baseType: !586, size: 64, offset: 10112)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1383, file: !1384, line: 993, baseType: !586, size: 64, offset: 10176)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1383, file: !1384, line: 996, baseType: !399, offset: 10240)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1383, file: !1384, line: 999, baseType: !946, offset: 10240)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1383, file: !1384, line: 1001, baseType: !2071, size: 64, offset: 10240)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1384, line: 636, size: 64, elements: !2072)
!2072 = !{!2073}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2071, file: !1384, line: 637, baseType: !2074, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1383, file: !1384, line: 1005, baseType: !918, size: 128, offset: 10304)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1383, file: !1384, line: 1007, baseType: !1382, size: 64, offset: 10432)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1383, file: !1384, line: 1009, baseType: !2078, size: 64, offset: 10496)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1384, line: 1009, flags: DIFlagFwdDecl)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1383, file: !1384, line: 1043, baseType: !374, size: 64, offset: 10560)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1383, file: !1384, line: 1046, baseType: !2082, size: 64, offset: 10624)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1384, line: 41, flags: DIFlagFwdDecl)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1383, file: !1384, line: 1050, baseType: !2085, size: 64, offset: 10688)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1384, line: 42, flags: DIFlagFwdDecl)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1383, file: !1384, line: 1054, baseType: !2088, size: 64, offset: 10752)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1384, line: 55, flags: DIFlagFwdDecl)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1383, file: !1384, line: 1056, baseType: !2091, size: 64, offset: 10816)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1384, line: 40, flags: DIFlagFwdDecl)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1383, file: !1384, line: 1058, baseType: !2094, size: 64, offset: 10880)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2096, line: 99, size: 704, elements: !2097)
!2096 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2097 = !{!2098, !2099, !2100, !2101, !2102, !2103, !2104, !2123, !2124}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2095, file: !2096, line: 100, baseType: !937, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2095, file: !2096, line: 101, baseType: !913, size: 32, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2095, file: !2096, line: 102, baseType: !913, size: 32, offset: 96)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2095, file: !2096, line: 105, baseType: !399, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2095, file: !2096, line: 107, baseType: !482, size: 16, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2095, file: !2096, line: 109, baseType: !904, size: 128, offset: 192)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2095, file: !2096, line: 110, baseType: !2105, size: 64, offset: 320)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2096, line: 73, size: 448, elements: !2107)
!2107 = !{!2108, !2111, !2112, !2117, !2122}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2106, file: !2096, line: 74, baseType: !2109, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2110 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2096, line: 74, flags: DIFlagFwdDecl)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2106, file: !2096, line: 75, baseType: !2094, size: 64, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, scope: !2106, file: !2096, line: 83, baseType: !2113, size: 128, offset: 128)
!2113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2106, file: !2096, line: 83, size: 128, elements: !2114)
!2114 = !{!2115, !2116}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2113, file: !2096, line: 84, baseType: !385, size: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2113, file: !2096, line: 85, baseType: !1101, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, scope: !2106, file: !2096, line: 87, baseType: !2118, size: 128, offset: 256)
!2118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2106, file: !2096, line: 87, size: 128, elements: !2119)
!2119 = !{!2120, !2121}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2118, file: !2096, line: 88, baseType: !804, size: 128)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2118, file: !2096, line: 89, baseType: !530, size: 128, align: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2106, file: !2096, line: 92, baseType: !7, size: 32, offset: 384)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2095, file: !2096, line: 111, baseType: !800, size: 64, offset: 384)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2095, file: !2096, line: 113, baseType: !2125, size: 256, offset: 448)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2126, line: 102, size: 256, elements: !2127)
!2126 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2127 = !{!2128, !2129, !2130}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2125, file: !2126, line: 103, baseType: !937, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2125, file: !2126, line: 104, baseType: !385, size: 128, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2125, file: !2126, line: 105, baseType: !2131, size: 64, offset: 192)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2126, line: 21, baseType: !2132)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = !DISubroutineType(types: !2134)
!2134 = !{null, !2135}
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1383, file: !1384, line: 1061, baseType: !2137, size: 64, offset: 10944)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1384, line: 43, flags: DIFlagFwdDecl)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1383, file: !1384, line: 1064, baseType: !364, size: 64, offset: 11008)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1383, file: !1384, line: 1065, baseType: !2141, size: 64, offset: 11072)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1932, line: 14, baseType: !2143)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1932, line: 12, size: 384, elements: !2144)
!2144 = !{!2145}
!2145 = !DIDerivedType(tag: DW_TAG_member, scope: !2143, file: !1932, line: 13, baseType: !2146, size: 384)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2143, file: !1932, line: 13, size: 384, elements: !2147)
!2147 = !{!2148, !2149, !2150, !2151}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2146, file: !1932, line: 13, baseType: !323, size: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2146, file: !1932, line: 13, baseType: !323, size: 32, offset: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2146, file: !1932, line: 13, baseType: !323, size: 32, offset: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2146, file: !1932, line: 13, baseType: !2152, size: 256, offset: 128)
!2152 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2153, line: 32, size: 256, elements: !2154)
!2153 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2154 = !{!2155, !2160, !2173, !2179, !2188, !2208, !2213}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2152, file: !2153, line: 37, baseType: !2156, size: 64)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2152, file: !2153, line: 34, size: 64, elements: !2157)
!2157 = !{!2158, !2159}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2156, file: !2153, line: 35, baseType: !1626, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2156, file: !2153, line: 36, baseType: !606, size: 32, offset: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2152, file: !2153, line: 45, baseType: !2161, size: 192)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2152, file: !2153, line: 40, size: 192, elements: !2162)
!2162 = !{!2163, !2165, !2166, !2172}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2161, file: !2153, line: 41, baseType: !2164, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !473, line: 95, baseType: !323)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2161, file: !2153, line: 42, baseType: !323, size: 32, offset: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2161, file: !2153, line: 43, baseType: !2167, size: 64, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2153, line: 11, baseType: !2168)
!2168 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2153, line: 8, size: 64, elements: !2169)
!2169 = !{!2170, !2171}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2168, file: !2153, line: 9, baseType: !323, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2168, file: !2153, line: 10, baseType: !374, size: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2161, file: !2153, line: 44, baseType: !323, size: 32, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2152, file: !2153, line: 52, baseType: !2174, size: 128)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2152, file: !2153, line: 48, size: 128, elements: !2175)
!2175 = !{!2176, !2177, !2178}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2174, file: !2153, line: 49, baseType: !1626, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2174, file: !2153, line: 50, baseType: !606, size: 32, offset: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2174, file: !2153, line: 51, baseType: !2167, size: 64, offset: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2152, file: !2153, line: 61, baseType: !2180, size: 256)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2152, file: !2153, line: 55, size: 256, elements: !2181)
!2181 = !{!2182, !2183, !2184, !2185, !2187}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2180, file: !2153, line: 56, baseType: !1626, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2180, file: !2153, line: 57, baseType: !606, size: 32, offset: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2180, file: !2153, line: 58, baseType: !323, size: 32, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2180, file: !2153, line: 59, baseType: !2186, size: 64, offset: 128)
!2186 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !473, line: 94, baseType: !474)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2180, file: !2153, line: 60, baseType: !2186, size: 64, offset: 192)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2152, file: !2153, line: 95, baseType: !2189, size: 256)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2152, file: !2153, line: 64, size: 256, elements: !2190)
!2190 = !{!2191, !2192}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2189, file: !2153, line: 65, baseType: !374, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, scope: !2189, file: !2153, line: 77, baseType: !2193, size: 192, offset: 64)
!2193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2189, file: !2153, line: 77, size: 192, elements: !2194)
!2194 = !{!2195, !2196, !2203}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2193, file: !2153, line: 82, baseType: !1371, size: 16)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2193, file: !2153, line: 88, baseType: !2197, size: 192)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2193, file: !2153, line: 84, size: 192, elements: !2198)
!2198 = !{!2199, !2201, !2202}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2197, file: !2153, line: 85, baseType: !2200, size: 64)
!2200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 64, elements: !1496)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2197, file: !2153, line: 86, baseType: !374, size: 64, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2197, file: !2153, line: 87, baseType: !374, size: 64, offset: 128)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2193, file: !2153, line: 93, baseType: !2204, size: 96)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2193, file: !2153, line: 90, size: 96, elements: !2205)
!2205 = !{!2206, !2207}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2204, file: !2153, line: 91, baseType: !2200, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2204, file: !2153, line: 92, baseType: !582, size: 32, offset: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2152, file: !2153, line: 101, baseType: !2209, size: 128)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2152, file: !2153, line: 98, size: 128, elements: !2210)
!2210 = !{!2211, !2212}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2209, file: !2153, line: 99, baseType: !475, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2209, file: !2153, line: 100, baseType: !323, size: 32, offset: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2152, file: !2153, line: 108, baseType: !2214, size: 128)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2152, file: !2153, line: 104, size: 128, elements: !2215)
!2215 = !{!2216, !2217, !2218}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2214, file: !2153, line: 105, baseType: !374, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2214, file: !2153, line: 106, baseType: !323, size: 32, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2214, file: !2153, line: 107, baseType: !7, size: 32, offset: 96)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1383, file: !1384, line: 1067, baseType: !2004, offset: 11136)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1383, file: !1384, line: 1099, baseType: !2221, size: 64, offset: 11136)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1384, line: 56, flags: DIFlagFwdDecl)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1383, file: !1384, line: 1103, baseType: !385, size: 128, offset: 11200)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1383, file: !1384, line: 1104, baseType: !2225, size: 64, offset: 11328)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1384, line: 46, flags: DIFlagFwdDecl)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1383, file: !1384, line: 1105, baseType: !1339, size: 192, offset: 11392)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1383, file: !1384, line: 1106, baseType: !7, size: 32, offset: 11584)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1383, file: !1384, line: 1109, baseType: !2230, size: 128, offset: 11648)
!2230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2231, size: 128, elements: !1735)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 64)
!2232 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1384, line: 51, flags: DIFlagFwdDecl)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1383, file: !1384, line: 1110, baseType: !1339, size: 192, offset: 11776)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1383, file: !1384, line: 1111, baseType: !385, size: 128, offset: 11968)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1383, file: !1384, line: 1173, baseType: !2236, size: 64, offset: 12096)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2238, line: 62, size: 256, align: 256, elements: !2239)
!2238 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2239 = !{!2240, !2241, !2242, !2247}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2237, file: !2238, line: 75, baseType: !582, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2237, file: !2238, line: 90, baseType: !582, size: 32, offset: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2237, file: !2238, line: 124, baseType: !2243, size: 64, offset: 64)
!2243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2237, file: !2238, line: 109, size: 64, elements: !2244)
!2244 = !{!2245, !2246}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2243, file: !2238, line: 110, baseType: !587, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2243, file: !2238, line: 112, baseType: !587, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2237, file: !2238, line: 144, baseType: !582, size: 32, offset: 128)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1383, file: !1384, line: 1174, baseType: !580, size: 32, offset: 12160)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1383, file: !1384, line: 1179, baseType: !364, size: 64, offset: 12224)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1383, file: !1384, line: 1182, baseType: !2251, size: 128, offset: 12288)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1317, line: 76, size: 128, elements: !2252)
!2252 = !{!2253, !2258, !2259}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2251, file: !1317, line: 85, baseType: !2254, size: 64)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2255, line: 7, size: 64, elements: !2256)
!2255 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2256 = !{!2257}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2254, file: !2255, line: 12, baseType: !1533, size: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2251, file: !1317, line: 88, baseType: !655, size: 8, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2251, file: !1317, line: 95, baseType: !655, size: 8, offset: 72)
!2260 = !DIDerivedType(tag: DW_TAG_member, scope: !1383, file: !1384, line: 1184, baseType: !2261, size: 128, offset: 12416)
!2261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1383, file: !1384, line: 1184, size: 128, elements: !2262)
!2262 = !{!2263, !2264}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2261, file: !1384, line: 1185, baseType: !1396, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2261, file: !1384, line: 1186, baseType: !530, size: 128, align: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1383, file: !1384, line: 1190, baseType: !2266, size: 64, offset: 12544)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1384, line: 53, flags: DIFlagFwdDecl)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1383, file: !1384, line: 1192, baseType: !2269, size: 128, offset: 12608)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1317, line: 64, size: 128, elements: !2270)
!2270 = !{!2271, !2272, !2273}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2269, file: !1317, line: 65, baseType: !886, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2269, file: !1317, line: 67, baseType: !582, size: 32, offset: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2269, file: !1317, line: 68, baseType: !582, size: 32, offset: 96)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1383, file: !1384, line: 1206, baseType: !323, size: 32, offset: 12736)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1383, file: !1384, line: 1207, baseType: !323, size: 32, offset: 12768)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1383, file: !1384, line: 1209, baseType: !364, size: 64, offset: 12800)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1383, file: !1384, line: 1219, baseType: !586, size: 64, offset: 12864)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1383, file: !1384, line: 1220, baseType: !586, size: 64, offset: 12928)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1383, file: !1384, line: 1317, baseType: !323, size: 32, offset: 12992)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1383, file: !1384, line: 1319, baseType: !1382, size: 64, offset: 13056)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1383, file: !1384, line: 1322, baseType: !2282, size: 64, offset: 13120)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2284, line: 56, size: 512, elements: !2285)
!2284 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2285 = !{!2286, !2287, !2288, !2289, !2290, !2291, !2292, !2294}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2283, file: !2284, line: 57, baseType: !2282, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2283, file: !2284, line: 58, baseType: !374, size: 64, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2283, file: !2284, line: 59, baseType: !364, size: 64, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2283, file: !2284, line: 60, baseType: !364, size: 64, offset: 192)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2283, file: !2284, line: 61, baseType: !986, size: 64, offset: 256)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2283, file: !2284, line: 62, baseType: !7, size: 32, offset: 320)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2283, file: !2284, line: 63, baseType: !2293, size: 64, offset: 384)
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !386, line: 153, baseType: !586)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2283, file: !2284, line: 64, baseType: !2295, size: 64, offset: 448)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1383, file: !1384, line: 1326, baseType: !1396, size: 32, offset: 13184)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1383, file: !1384, line: 1342, baseType: !374, size: 64, offset: 13248)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1383, file: !1384, line: 1343, baseType: !587, size: 64, offset: 13312)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1383, file: !1384, line: 1344, baseType: !586, size: 64, offset: 13376)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1383, file: !1384, line: 1345, baseType: !587, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1383, file: !1384, line: 1346, baseType: !587, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1383, file: !1384, line: 1347, baseType: !587, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1383, file: !1384, line: 1348, baseType: !530, size: 128, align: 64, offset: 13504)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1383, file: !1384, line: 1358, baseType: !2306, size: 34816, offset: 13824)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2307, line: 485, size: 34816, elements: !2308)
!2307 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2308 = !{!2309, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2338, !2339, !2340, !2341, !2342, !2343, !2346, !2347, !2348}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2306, file: !2307, line: 487, baseType: !2310, size: 192)
!2310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2311, size: 192, elements: !441)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2312, line: 16, size: 64, elements: !2313)
!2312 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2313 = !{!2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2311, file: !2312, line: 17, baseType: !1025, size: 16)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2311, file: !2312, line: 18, baseType: !1025, size: 16, offset: 16)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2311, file: !2312, line: 19, baseType: !1025, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2311, file: !2312, line: 19, baseType: !1025, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2311, file: !2312, line: 19, baseType: !1025, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2311, file: !2312, line: 19, baseType: !1025, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2311, file: !2312, line: 19, baseType: !1025, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2311, file: !2312, line: 20, baseType: !1025, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2311, file: !2312, line: 20, baseType: !1025, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2311, file: !2312, line: 20, baseType: !1025, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2311, file: !2312, line: 20, baseType: !1025, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2311, file: !2312, line: 20, baseType: !1025, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2311, file: !2312, line: 20, baseType: !1025, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2306, file: !2307, line: 491, baseType: !364, size: 64, offset: 192)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2306, file: !2307, line: 495, baseType: !482, size: 16, offset: 256)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2306, file: !2307, line: 496, baseType: !482, size: 16, offset: 272)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2306, file: !2307, line: 497, baseType: !482, size: 16, offset: 288)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2306, file: !2307, line: 498, baseType: !482, size: 16, offset: 304)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2306, file: !2307, line: 502, baseType: !364, size: 64, offset: 320)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2306, file: !2307, line: 503, baseType: !364, size: 64, offset: 384)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2306, file: !2307, line: 514, baseType: !2335, size: 256, offset: 448)
!2335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2336, size: 256, elements: !1321)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!2337 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2307, line: 483, flags: DIFlagFwdDecl)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2306, file: !2307, line: 516, baseType: !364, size: 64, offset: 704)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2306, file: !2307, line: 518, baseType: !364, size: 64, offset: 768)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2306, file: !2307, line: 520, baseType: !364, size: 64, offset: 832)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2306, file: !2307, line: 521, baseType: !364, size: 64, offset: 896)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2306, file: !2307, line: 522, baseType: !364, size: 64, offset: 960)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2306, file: !2307, line: 528, baseType: !2344, size: 64, offset: 1024)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!2345 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2307, line: 10, flags: DIFlagFwdDecl)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2306, file: !2307, line: 535, baseType: !364, size: 64, offset: 1088)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2306, file: !2307, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2306, file: !2307, line: 540, baseType: !2349, size: 33280, offset: 1536)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2350, line: 317, size: 33280, elements: !2351)
!2350 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2351 = !{!2352, !2353, !2354}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2349, file: !2350, line: 330, baseType: !7, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2349, file: !2350, line: 337, baseType: !364, size: 64, offset: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2349, file: !2350, line: 348, baseType: !2355, size: 32768, offset: 512)
!2355 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2350, line: 304, size: 32768, elements: !2356)
!2356 = !{!2357, !2370, !2407, !2457, !2470}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2355, file: !2350, line: 305, baseType: !2358, size: 896)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2350, line: 12, size: 896, elements: !2359)
!2359 = !{!2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2369}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2358, file: !2350, line: 13, baseType: !580, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2358, file: !2350, line: 14, baseType: !580, size: 32, offset: 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2358, file: !2350, line: 15, baseType: !580, size: 32, offset: 64)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2358, file: !2350, line: 16, baseType: !580, size: 32, offset: 96)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2358, file: !2350, line: 17, baseType: !580, size: 32, offset: 128)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2358, file: !2350, line: 18, baseType: !580, size: 32, offset: 160)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2358, file: !2350, line: 19, baseType: !580, size: 32, offset: 192)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2358, file: !2350, line: 22, baseType: !2368, size: 640, offset: 224)
!2368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !580, size: 640, elements: !350)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2358, file: !2350, line: 25, baseType: !580, size: 32, offset: 864)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2355, file: !2350, line: 306, baseType: !2371, size: 4096, align: 128)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2350, line: 34, size: 4096, align: 128, elements: !2372)
!2372 = !{!2373, !2374, !2375, !2376, !2377, !2392, !2393, !2394, !2396, !2398, !2402}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2371, file: !2350, line: 35, baseType: !1025, size: 16)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2371, file: !2350, line: 36, baseType: !1025, size: 16, offset: 16)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2371, file: !2350, line: 37, baseType: !1025, size: 16, offset: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2371, file: !2350, line: 38, baseType: !1025, size: 16, offset: 48)
!2377 = !DIDerivedType(tag: DW_TAG_member, scope: !2371, file: !2350, line: 39, baseType: !2378, size: 128, offset: 64)
!2378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2371, file: !2350, line: 39, size: 128, elements: !2379)
!2379 = !{!2380, !2385}
!2380 = !DIDerivedType(tag: DW_TAG_member, scope: !2378, file: !2350, line: 40, baseType: !2381, size: 128)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2378, file: !2350, line: 40, size: 128, elements: !2382)
!2382 = !{!2383, !2384}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2381, file: !2350, line: 41, baseType: !586, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2381, file: !2350, line: 42, baseType: !586, size: 64, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, scope: !2378, file: !2350, line: 44, baseType: !2386, size: 128)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2378, file: !2350, line: 44, size: 128, elements: !2387)
!2387 = !{!2388, !2389, !2390, !2391}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2386, file: !2350, line: 45, baseType: !580, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2386, file: !2350, line: 46, baseType: !580, size: 32, offset: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2386, file: !2350, line: 47, baseType: !580, size: 32, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2386, file: !2350, line: 48, baseType: !580, size: 32, offset: 96)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2371, file: !2350, line: 51, baseType: !580, size: 32, offset: 192)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2371, file: !2350, line: 52, baseType: !580, size: 32, offset: 224)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2371, file: !2350, line: 55, baseType: !2395, size: 1024, offset: 256)
!2395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !580, size: 1024, elements: !354)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2371, file: !2350, line: 58, baseType: !2397, size: 2048, offset: 1280)
!2397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !580, size: 2048, elements: !445)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2371, file: !2350, line: 60, baseType: !2399, size: 384, offset: 3328)
!2399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !580, size: 384, elements: !2400)
!2400 = !{!2401}
!2401 = !DISubrange(count: 12)
!2402 = !DIDerivedType(tag: DW_TAG_member, scope: !2371, file: !2350, line: 62, baseType: !2403, size: 384, offset: 3712)
!2403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2371, file: !2350, line: 62, size: 384, elements: !2404)
!2404 = !{!2405, !2406}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2403, file: !2350, line: 63, baseType: !2399, size: 384)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2403, file: !2350, line: 64, baseType: !2399, size: 384)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2355, file: !2350, line: 307, baseType: !2408, size: 1088)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2350, line: 79, size: 1088, elements: !2409)
!2409 = !{!2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2456}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2408, file: !2350, line: 80, baseType: !580, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2408, file: !2350, line: 81, baseType: !580, size: 32, offset: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2408, file: !2350, line: 82, baseType: !580, size: 32, offset: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2408, file: !2350, line: 83, baseType: !580, size: 32, offset: 96)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2408, file: !2350, line: 84, baseType: !580, size: 32, offset: 128)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2408, file: !2350, line: 85, baseType: !580, size: 32, offset: 160)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2408, file: !2350, line: 86, baseType: !580, size: 32, offset: 192)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2408, file: !2350, line: 88, baseType: !2368, size: 640, offset: 224)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2408, file: !2350, line: 89, baseType: !1518, size: 8, offset: 864)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2408, file: !2350, line: 90, baseType: !1518, size: 8, offset: 872)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2408, file: !2350, line: 91, baseType: !1518, size: 8, offset: 880)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2408, file: !2350, line: 92, baseType: !1518, size: 8, offset: 888)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2408, file: !2350, line: 93, baseType: !1518, size: 8, offset: 896)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2408, file: !2350, line: 94, baseType: !1518, size: 8, offset: 904)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2408, file: !2350, line: 95, baseType: !2425, size: 64, offset: 960)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2427, line: 11, size: 128, elements: !2428)
!2427 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2428 = !{!2429, !2430}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2426, file: !2427, line: 12, baseType: !475, size: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2426, file: !2427, line: 13, baseType: !2431, size: 64, offset: 64)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2433, line: 56, size: 1344, elements: !2434)
!2433 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2434 = !{!2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2432, file: !2433, line: 61, baseType: !364, size: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2432, file: !2433, line: 62, baseType: !364, size: 64, offset: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2432, file: !2433, line: 63, baseType: !364, size: 64, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2432, file: !2433, line: 64, baseType: !364, size: 64, offset: 192)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2432, file: !2433, line: 65, baseType: !364, size: 64, offset: 256)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2432, file: !2433, line: 66, baseType: !364, size: 64, offset: 320)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2432, file: !2433, line: 68, baseType: !364, size: 64, offset: 384)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2432, file: !2433, line: 69, baseType: !364, size: 64, offset: 448)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2432, file: !2433, line: 70, baseType: !364, size: 64, offset: 512)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2432, file: !2433, line: 71, baseType: !364, size: 64, offset: 576)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2432, file: !2433, line: 72, baseType: !364, size: 64, offset: 640)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2432, file: !2433, line: 73, baseType: !364, size: 64, offset: 704)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2432, file: !2433, line: 74, baseType: !364, size: 64, offset: 768)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2432, file: !2433, line: 75, baseType: !364, size: 64, offset: 832)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2432, file: !2433, line: 76, baseType: !364, size: 64, offset: 896)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2432, file: !2433, line: 81, baseType: !364, size: 64, offset: 960)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2432, file: !2433, line: 83, baseType: !364, size: 64, offset: 1024)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2432, file: !2433, line: 84, baseType: !364, size: 64, offset: 1088)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2432, file: !2433, line: 85, baseType: !364, size: 64, offset: 1152)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2432, file: !2433, line: 86, baseType: !364, size: 64, offset: 1216)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2432, file: !2433, line: 87, baseType: !364, size: 64, offset: 1280)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2408, file: !2350, line: 96, baseType: !580, size: 32, offset: 1024)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2355, file: !2350, line: 308, baseType: !2458, size: 4608, align: 512)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2350, line: 289, size: 4608, align: 512, elements: !2459)
!2459 = !{!2460, !2461, !2468}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2458, file: !2350, line: 290, baseType: !2371, size: 4096, align: 128)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2458, file: !2350, line: 291, baseType: !2462, size: 512, offset: 4096)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2350, line: 268, size: 512, elements: !2463)
!2463 = !{!2464, !2465, !2466}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2462, file: !2350, line: 269, baseType: !586, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2462, file: !2350, line: 270, baseType: !586, size: 64, offset: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2462, file: !2350, line: 271, baseType: !2467, size: 384, offset: 128)
!2467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 384, elements: !1791)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2458, file: !2350, line: 292, baseType: !2469, offset: 4608)
!2469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1518, elements: !1889)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2355, file: !2350, line: 309, baseType: !2471, size: 32768)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1518, size: 32768, elements: !2472)
!2472 = !{!2473}
!2473 = !DISubrange(count: 4096)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1379, file: !888, line: 378, baseType: !2475, size: 64, offset: 64)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1375, file: !888, line: 384, baseType: !1668, size: 192, offset: 192)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1144, file: !888, line: 500, baseType: !399, offset: 6656)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1144, file: !888, line: 501, baseType: !2479, size: 64, offset: 6656)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !888, line: 387, flags: DIFlagFwdDecl)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1144, file: !888, line: 516, baseType: !1879, size: 64, offset: 6720)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1144, file: !888, line: 519, baseType: !517, size: 64, offset: 6784)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1144, file: !888, line: 521, baseType: !2484, size: 64, offset: 6848)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !888, line: 521, flags: DIFlagFwdDecl)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1144, file: !888, line: 545, baseType: !913, size: 32, offset: 6912)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1144, file: !888, line: 548, baseType: !655, size: 8, offset: 6944)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1144, file: !888, line: 550, baseType: !2489, offset: 6952)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2490, line: 142, elements: !413)
!2490 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1144, file: !888, line: 554, baseType: !2125, size: 256, offset: 6976)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1144, file: !888, line: 557, baseType: !580, size: 32, offset: 7232)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1141, file: !888, line: 565, baseType: !2494, offset: 7296)
!2494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, elements: !2495)
!2495 = !{!2496}
!2496 = !DISubrange(count: -1)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1137, file: !888, line: 151, baseType: !913, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1130, file: !888, line: 156, baseType: !399, offset: 256)
!2499 = !DIDerivedType(tag: DW_TAG_member, scope: !892, file: !888, line: 159, baseType: !2500, size: 128)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !892, file: !888, line: 159, size: 128, elements: !2501)
!2501 = !{!2502, !2566}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2500, file: !888, line: 161, baseType: !2503, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2505)
!2505 = !{!2506, !2516, !2537, !2538, !2539, !2540, !2541, !2553, !2554, !2555}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2504, file: !31, line: 111, baseType: !2507, size: 384)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2508)
!2508 = !{!2509, !2511, !2512, !2513, !2514, !2515}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2507, file: !31, line: 20, baseType: !2510, size: 64)
!2510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !364)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2507, file: !31, line: 21, baseType: !2510, size: 64, offset: 64)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2507, file: !31, line: 22, baseType: !2510, size: 64, offset: 128)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2507, file: !31, line: 23, baseType: !364, size: 64, offset: 192)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2507, file: !31, line: 24, baseType: !364, size: 64, offset: 256)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2507, file: !31, line: 25, baseType: !364, size: 64, offset: 320)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2504, file: !31, line: 112, baseType: !2517, size: 64, offset: 384)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2519, line: 105, size: 128, elements: !2520)
!2519 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2520 = !{!2521, !2522}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2518, file: !2519, line: 110, baseType: !364, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2518, file: !2519, line: 118, baseType: !2523, size: 64, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2519, line: 95, size: 448, elements: !2525)
!2525 = !{!2526, !2527, !2532, !2533, !2534, !2535, !2536}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2524, file: !2519, line: 96, baseType: !937, size: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2524, file: !2519, line: 97, baseType: !2528, size: 64, offset: 64)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2519, line: 60, baseType: !2530)
!2530 = !DISubroutineType(types: !2531)
!2531 = !{null, !2517}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2524, file: !2519, line: 98, baseType: !2528, size: 64, offset: 128)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2524, file: !2519, line: 99, baseType: !655, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2524, file: !2519, line: 100, baseType: !655, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2524, file: !2519, line: 101, baseType: !530, size: 128, align: 64, offset: 256)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2524, file: !2519, line: 102, baseType: !2517, size: 64, offset: 384)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2504, file: !31, line: 113, baseType: !2518, size: 128, offset: 448)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2504, file: !31, line: 114, baseType: !1668, size: 192, offset: 576)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2504, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2504, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2504, file: !31, line: 117, baseType: !2542, size: 64, offset: 832)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2544)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2545)
!2545 = !{!2546, !2547, !2551, !2552}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2544, file: !31, line: 73, baseType: !1006, size: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2544, file: !31, line: 78, baseType: !2548, size: 64, offset: 64)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 64)
!2549 = !DISubroutineType(types: !2550)
!2550 = !{null, !2503}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2544, file: !31, line: 83, baseType: !2548, size: 64, offset: 128)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2544, file: !31, line: 89, baseType: !1193, size: 64, offset: 192)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2504, file: !31, line: 118, baseType: !374, size: 64, offset: 896)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2504, file: !31, line: 119, baseType: !323, size: 32, offset: 960)
!2555 = !DIDerivedType(tag: DW_TAG_member, scope: !2504, file: !31, line: 120, baseType: !2556, size: 128, offset: 1024)
!2556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2504, file: !31, line: 120, size: 128, elements: !2557)
!2557 = !{!2558, !2564}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2556, file: !31, line: 121, baseType: !2559, size: 128)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2560, line: 6, size: 128, elements: !2561)
!2560 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2561 = !{!2562, !2563}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2559, file: !2560, line: 7, baseType: !586, size: 64)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2559, file: !2560, line: 8, baseType: !586, size: 64, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2556, file: !31, line: 122, baseType: !2565)
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2559, elements: !1889)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2500, file: !888, line: 162, baseType: !374, size: 64, offset: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !892, file: !888, line: 176, baseType: !530, size: 128, align: 64)
!2568 = !DIDerivedType(tag: DW_TAG_member, scope: !887, file: !888, line: 179, baseType: !2569, size: 32, offset: 384)
!2569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !888, line: 179, size: 32, elements: !2570)
!2570 = !{!2571, !2572, !2573, !2574}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2569, file: !888, line: 184, baseType: !913, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2569, file: !888, line: 192, baseType: !7, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2569, file: !888, line: 194, baseType: !7, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2569, file: !888, line: 195, baseType: !323, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !887, file: !888, line: 199, baseType: !913, size: 32, offset: 416)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !822, file: !44, line: 1964, baseType: !2577, size: 64, offset: 1344)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!475, !764, !2580}
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2582, line: 12, size: 256, elements: !2583)
!2582 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2583 = !{!2584, !2585, !2586, !2587, !2588}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2581, file: !2582, line: 13, baseType: !909, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2581, file: !2582, line: 16, baseType: !323, size: 32, offset: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2581, file: !2582, line: 23, baseType: !364, size: 64, offset: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2581, file: !2582, line: 30, baseType: !364, size: 64, offset: 128)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2581, file: !2582, line: 33, baseType: !2589, size: 64, offset: 192)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !888, line: 27, flags: DIFlagFwdDecl)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !822, file: !44, line: 1966, baseType: !2577, size: 64, offset: 1408)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !765, file: !44, line: 1424, baseType: !2593, size: 64, offset: 448)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2595)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2596)
!2596 = !{!2597, !2643, !2647, !2651, !2652, !2653, !2654, !2655, !2660, !2665, !2669}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2595, file: !38, line: 323, baseType: !2598, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DISubroutineType(types: !2600)
!2600 = !{!323, !2601}
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2603)
!2603 = !{!2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2628, !2629, !2630}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2602, file: !38, line: 295, baseType: !804, size: 128)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2602, file: !38, line: 296, baseType: !385, size: 128, offset: 128)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2602, file: !38, line: 297, baseType: !385, size: 128, offset: 256)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2602, file: !38, line: 298, baseType: !385, size: 128, offset: 384)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2602, file: !38, line: 299, baseType: !1339, size: 192, offset: 512)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2602, file: !38, line: 300, baseType: !399, offset: 704)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2602, file: !38, line: 301, baseType: !913, size: 32, offset: 704)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2602, file: !38, line: 302, baseType: !764, size: 64, offset: 768)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2602, file: !38, line: 303, baseType: !2613, size: 64, offset: 832)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2614)
!2614 = !{!2615, !2627}
!2615 = !DIDerivedType(tag: DW_TAG_member, scope: !2613, file: !38, line: 69, baseType: !2616, size: 32)
!2616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2613, file: !38, line: 69, size: 32, elements: !2617)
!2617 = !{!2618, !2619, !2620}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2616, file: !38, line: 70, baseType: !600, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2616, file: !38, line: 71, baseType: !608, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2616, file: !38, line: 72, baseType: !2621, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2622, line: 24, baseType: !2623)
!2622 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2622, line: 22, size: 32, elements: !2624)
!2624 = !{!2625}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2623, file: !2622, line: 23, baseType: !2626, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2622, line: 20, baseType: !606)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2613, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2602, file: !38, line: 304, baseType: !696, size: 64, offset: 896)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2602, file: !38, line: 305, baseType: !364, size: 64, offset: 960)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2602, file: !38, line: 306, baseType: !2631, size: 576, offset: 1024)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2632)
!2632 = !{!2633, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2631, file: !38, line: 206, baseType: !2634, size: 64)
!2634 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !698)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2631, file: !38, line: 207, baseType: !2634, size: 64, offset: 64)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2631, file: !38, line: 208, baseType: !2634, size: 64, offset: 128)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2631, file: !38, line: 209, baseType: !2634, size: 64, offset: 192)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2631, file: !38, line: 210, baseType: !2634, size: 64, offset: 256)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2631, file: !38, line: 211, baseType: !2634, size: 64, offset: 320)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2631, file: !38, line: 212, baseType: !2634, size: 64, offset: 384)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2631, file: !38, line: 213, baseType: !704, size: 64, offset: 448)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2631, file: !38, line: 214, baseType: !704, size: 64, offset: 512)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2595, file: !38, line: 324, baseType: !2644, size: 64, offset: 64)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{!2601, !764, !323}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2595, file: !38, line: 325, baseType: !2648, size: 64, offset: 128)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = !DISubroutineType(types: !2650)
!2650 = !{null, !2601}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2595, file: !38, line: 326, baseType: !2598, size: 64, offset: 192)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2595, file: !38, line: 327, baseType: !2598, size: 64, offset: 256)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2595, file: !38, line: 328, baseType: !2598, size: 64, offset: 320)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2595, file: !38, line: 329, baseType: !850, size: 64, offset: 384)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2595, file: !38, line: 332, baseType: !2656, size: 64, offset: 448)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{!2659, !594}
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2595, file: !38, line: 333, baseType: !2661, size: 64, offset: 512)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 64)
!2662 = !DISubroutineType(types: !2663)
!2663 = !{!323, !594, !2664}
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2595, file: !38, line: 335, baseType: !2666, size: 64, offset: 576)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DISubroutineType(types: !2668)
!2668 = !{!323, !594, !2659}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2595, file: !38, line: 337, baseType: !2670, size: 64, offset: 640)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = !DISubroutineType(types: !2672)
!2672 = !{!323, !764, !2673}
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !765, file: !44, line: 1425, baseType: !2675, size: 64, offset: 512)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2677)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2678)
!2678 = !{!2679, !2683, !2684, !2688, !2689, !2690, !2705, !2728, !2732, !2733, !2756}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2677, file: !38, line: 429, baseType: !2680, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!323, !764, !323, !323, !714}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2677, file: !38, line: 430, baseType: !850, size: 64, offset: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2677, file: !38, line: 431, baseType: !2685, size: 64, offset: 128)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = !DISubroutineType(types: !2687)
!2687 = !{!323, !764, !7}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2677, file: !38, line: 432, baseType: !2685, size: 64, offset: 192)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2677, file: !38, line: 433, baseType: !850, size: 64, offset: 256)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2677, file: !38, line: 434, baseType: !2691, size: 64, offset: 320)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DISubroutineType(types: !2693)
!2693 = !{!323, !764, !323, !2694}
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2696)
!2696 = !{!2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2695, file: !38, line: 416, baseType: !323, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2695, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2695, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2695, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2695, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2695, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2695, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2695, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2677, file: !38, line: 435, baseType: !2706, size: 64, offset: 384)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{!323, !764, !2613, !2709}
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2711)
!2711 = !{!2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2710, file: !38, line: 344, baseType: !323, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2710, file: !38, line: 345, baseType: !586, size: 64, offset: 64)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2710, file: !38, line: 346, baseType: !586, size: 64, offset: 128)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2710, file: !38, line: 347, baseType: !586, size: 64, offset: 192)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2710, file: !38, line: 348, baseType: !586, size: 64, offset: 256)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2710, file: !38, line: 349, baseType: !586, size: 64, offset: 320)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2710, file: !38, line: 350, baseType: !586, size: 64, offset: 384)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2710, file: !38, line: 351, baseType: !943, size: 64, offset: 448)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2710, file: !38, line: 353, baseType: !943, size: 64, offset: 512)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2710, file: !38, line: 354, baseType: !323, size: 32, offset: 576)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2710, file: !38, line: 355, baseType: !323, size: 32, offset: 608)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2710, file: !38, line: 356, baseType: !586, size: 64, offset: 640)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2710, file: !38, line: 357, baseType: !586, size: 64, offset: 704)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2710, file: !38, line: 358, baseType: !586, size: 64, offset: 768)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2710, file: !38, line: 359, baseType: !943, size: 64, offset: 832)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2710, file: !38, line: 360, baseType: !323, size: 32, offset: 896)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2677, file: !38, line: 436, baseType: !2729, size: 64, offset: 448)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = !DISubroutineType(types: !2731)
!2731 = !{!323, !764, !2673, !2709}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2677, file: !38, line: 438, baseType: !2706, size: 64, offset: 512)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2677, file: !38, line: 439, baseType: !2734, size: 64, offset: 576)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{!323, !764, !2737}
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2739)
!2739 = !{!2740, !2741}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2738, file: !38, line: 410, baseType: !7, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2738, file: !38, line: 411, baseType: !2742, size: 1344, offset: 64)
!2742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2743, size: 1344, elements: !441)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2744)
!2744 = !{!2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2755}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2743, file: !38, line: 396, baseType: !7, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2743, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2743, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2743, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2743, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2743, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2743, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2743, file: !38, line: 404, baseType: !588, size: 64, offset: 256)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2743, file: !38, line: 405, baseType: !2754, size: 64, offset: 320)
!2754 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !386, line: 126, baseType: !586)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2743, file: !38, line: 406, baseType: !2754, size: 64, offset: 384)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2677, file: !38, line: 440, baseType: !2685, size: 64, offset: 640)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !765, file: !44, line: 1426, baseType: !2758, size: 64, offset: 576)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2760)
!2760 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !765, file: !44, line: 1427, baseType: !364, size: 64, offset: 640)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !765, file: !44, line: 1428, baseType: !364, size: 64, offset: 704)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !765, file: !44, line: 1429, baseType: !364, size: 64, offset: 768)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !765, file: !44, line: 1430, baseType: !547, size: 64, offset: 832)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !765, file: !44, line: 1431, baseType: !933, size: 256, offset: 896)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !765, file: !44, line: 1432, baseType: !323, size: 32, offset: 1152)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !765, file: !44, line: 1433, baseType: !913, size: 32, offset: 1184)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !765, file: !44, line: 1437, baseType: !2769, size: 64, offset: 1216)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2772)
!2772 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !765, file: !44, line: 1449, baseType: !2774, size: 64, offset: 1280)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !563, line: 34, size: 64, elements: !2775)
!2775 = !{!2776}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2774, file: !563, line: 35, baseType: !566, size: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !765, file: !44, line: 1450, baseType: !385, size: 128, offset: 1344)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !765, file: !44, line: 1451, baseType: !2779, size: 64, offset: 1472)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !765, file: !44, line: 1452, baseType: !2091, size: 64, offset: 1536)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !765, file: !44, line: 1453, baseType: !2783, size: 64, offset: 1600)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !765, file: !44, line: 1454, baseType: !804, size: 128, offset: 1664)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !765, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !765, file: !44, line: 1456, baseType: !2788, size: 2432, offset: 1856)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2789)
!2789 = !{!2790, !2791, !2792, !2794, !2826}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2788, file: !38, line: 519, baseType: !7, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2788, file: !38, line: 520, baseType: !933, size: 256, offset: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2788, file: !38, line: 521, baseType: !2793, size: 192, offset: 320)
!2793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !594, size: 192, elements: !441)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2788, file: !38, line: 522, baseType: !2795, size: 1728, offset: 512)
!2795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2796, size: 1728, elements: !441)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2797)
!2797 = !{!2798, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2796, file: !38, line: 223, baseType: !2799, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2801)
!2801 = !{!2802, !2803, !2816, !2817}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2800, file: !38, line: 444, baseType: !323, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2800, file: !38, line: 445, baseType: !2804, size: 64, offset: 64)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2806)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2807)
!2807 = !{!2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2806, file: !38, line: 311, baseType: !850, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2806, file: !38, line: 312, baseType: !850, size: 64, offset: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2806, file: !38, line: 313, baseType: !850, size: 64, offset: 128)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2806, file: !38, line: 314, baseType: !850, size: 64, offset: 192)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2806, file: !38, line: 315, baseType: !2598, size: 64, offset: 256)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2806, file: !38, line: 316, baseType: !2598, size: 64, offset: 320)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2806, file: !38, line: 317, baseType: !2598, size: 64, offset: 384)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2806, file: !38, line: 318, baseType: !2670, size: 64, offset: 448)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2800, file: !38, line: 446, baseType: !338, size: 64, offset: 128)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2800, file: !38, line: 447, baseType: !2799, size: 64, offset: 192)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2796, file: !38, line: 224, baseType: !323, size: 32, offset: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2796, file: !38, line: 226, baseType: !385, size: 128, offset: 128)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2796, file: !38, line: 227, baseType: !364, size: 64, offset: 256)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2796, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2796, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2796, file: !38, line: 230, baseType: !2634, size: 64, offset: 384)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2796, file: !38, line: 231, baseType: !2634, size: 64, offset: 448)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2796, file: !38, line: 232, baseType: !374, size: 64, offset: 512)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2788, file: !38, line: 523, baseType: !2827, size: 192, offset: 2240)
!2827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2804, size: 192, elements: !441)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !765, file: !44, line: 1458, baseType: !2829, size: 2112, offset: 4288)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2830)
!2830 = !{!2831, !2832, !2833}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2829, file: !44, line: 1411, baseType: !323, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2829, file: !44, line: 1412, baseType: !1647, size: 128, offset: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2829, file: !44, line: 1413, baseType: !2834, size: 1920, offset: 192)
!2834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2835, size: 1920, elements: !441)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2836, line: 12, size: 640, elements: !2837)
!2836 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2837 = !{!2838, !2846, !2848, !2853, !2854}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2835, file: !2836, line: 13, baseType: !2839, size: 320)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2840, line: 17, size: 320, elements: !2841)
!2840 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2841 = !{!2842, !2843, !2844, !2845}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2839, file: !2840, line: 18, baseType: !323, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2839, file: !2840, line: 19, baseType: !323, size: 32, offset: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2839, file: !2840, line: 20, baseType: !1647, size: 128, offset: 64)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2839, file: !2840, line: 22, baseType: !530, size: 128, align: 64, offset: 192)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2835, file: !2836, line: 14, baseType: !2847, size: 64, offset: 320)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2835, file: !2836, line: 15, baseType: !2849, size: 64, offset: 384)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2850, line: 16, size: 64, elements: !2851)
!2850 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2851 = !{!2852}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2849, file: !2850, line: 17, baseType: !1382, size: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2835, file: !2836, line: 16, baseType: !1647, size: 128, offset: 448)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2835, file: !2836, line: 17, baseType: !913, size: 32, offset: 576)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !765, file: !44, line: 1465, baseType: !374, size: 64, offset: 6400)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !765, file: !44, line: 1468, baseType: !580, size: 32, offset: 6464)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !765, file: !44, line: 1470, baseType: !704, size: 64, offset: 6528)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !765, file: !44, line: 1471, baseType: !704, size: 64, offset: 6592)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !765, file: !44, line: 1473, baseType: !582, size: 32, offset: 6656)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !765, file: !44, line: 1474, baseType: !2861, size: 64, offset: 6720)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !765, file: !44, line: 1477, baseType: !2864, size: 256, offset: 6784)
!2864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 256, elements: !354)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !765, file: !44, line: 1478, baseType: !2866, size: 128, offset: 7040)
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2867, line: 18, baseType: !2868)
!2867 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2868 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2867, line: 16, size: 128, elements: !2869)
!2869 = !{!2870}
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2868, file: !2867, line: 17, baseType: !2871, size: 128)
!2871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1519, size: 128, elements: !1901)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !765, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !765, file: !44, line: 1481, baseType: !2874, size: 32, offset: 7200)
!2874 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !386, line: 150, baseType: !7)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !765, file: !44, line: 1487, baseType: !1339, size: 192, offset: 7232)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !765, file: !44, line: 1493, baseType: !334, size: 64, offset: 7424)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !765, file: !44, line: 1495, baseType: !2878, size: 64, offset: 7488)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2880)
!2880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !545, line: 135, size: 1024, align: 512, elements: !2881)
!2881 = !{!2882, !2886, !2887, !2894, !2900, !2904, !2908, !2912, !2913, !2917, !2921, !2926, !2930}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2880, file: !545, line: 136, baseType: !2883, size: 64)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64)
!2884 = !DISubroutineType(types: !2885)
!2885 = !{!323, !547, !7}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2880, file: !545, line: 137, baseType: !2883, size: 64, offset: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2880, file: !545, line: 138, baseType: !2888, size: 64, offset: 128)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{!323, !2891, !2893}
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !548)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2880, file: !545, line: 139, baseType: !2895, size: 64, offset: 192)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!323, !2891, !7, !334, !2898}
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !571)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2880, file: !545, line: 141, baseType: !2901, size: 64, offset: 256)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!323, !2891}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2880, file: !545, line: 142, baseType: !2905, size: 64, offset: 320)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{!323, !547}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2880, file: !545, line: 143, baseType: !2909, size: 64, offset: 384)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{null, !547}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2880, file: !545, line: 144, baseType: !2909, size: 64, offset: 448)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2880, file: !545, line: 145, baseType: !2914, size: 64, offset: 512)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{null, !547, !594}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2880, file: !545, line: 146, baseType: !2918, size: 64, offset: 576)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 64)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{!440, !547, !440, !323}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2880, file: !545, line: 147, baseType: !2922, size: 64, offset: 640)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = !DISubroutineType(types: !2924)
!2924 = !{!543, !2925}
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2880, file: !545, line: 148, baseType: !2927, size: 64, offset: 704)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!323, !714, !655}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2880, file: !545, line: 149, baseType: !2931, size: 64, offset: 768)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = !DISubroutineType(types: !2933)
!2933 = !{!547, !547, !2934}
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !595)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !765, file: !44, line: 1500, baseType: !323, size: 32, offset: 7552)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !765, file: !44, line: 1502, baseType: !2938, size: 448, offset: 7616)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2582, line: 60, size: 448, elements: !2939)
!2939 = !{!2940, !2945, !2946, !2947, !2948, !2949, !2950}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2938, file: !2582, line: 61, baseType: !2941, size: 64)
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 64)
!2942 = !DISubroutineType(types: !2943)
!2943 = !{!364, !2944, !2580}
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2938, file: !2582, line: 63, baseType: !2941, size: 64, offset: 64)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2938, file: !2582, line: 66, baseType: !475, size: 64, offset: 128)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2938, file: !2582, line: 67, baseType: !323, size: 32, offset: 192)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2938, file: !2582, line: 68, baseType: !7, size: 32, offset: 224)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2938, file: !2582, line: 71, baseType: !385, size: 128, offset: 256)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2938, file: !2582, line: 77, baseType: !2951, size: 64, offset: 384)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !765, file: !44, line: 1505, baseType: !937, size: 64, offset: 8064)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !765, file: !44, line: 1508, baseType: !937, size: 64, offset: 8128)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !765, file: !44, line: 1511, baseType: !323, size: 32, offset: 8192)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !765, file: !44, line: 1514, baseType: !1075, size: 32, offset: 8224)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !765, file: !44, line: 1517, baseType: !2957, size: 64, offset: 8256)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2126, line: 18, flags: DIFlagFwdDecl)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !765, file: !44, line: 1518, baseType: !800, size: 64, offset: 8320)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !765, file: !44, line: 1525, baseType: !1879, size: 64, offset: 8384)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !765, file: !44, line: 1532, baseType: !2962, size: 64, offset: 8448)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2963, line: 52, size: 64, elements: !2964)
!2963 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2964 = !{!2965}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2962, file: !2963, line: 53, baseType: !2966, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2963, line: 40, size: 256, elements: !2968)
!2968 = !{!2969, !2970, !2975}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2967, file: !2963, line: 42, baseType: !399)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2967, file: !2963, line: 44, baseType: !2971, size: 192)
!2971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2963, line: 28, size: 192, elements: !2972)
!2972 = !{!2973, !2974}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2971, file: !2963, line: 29, baseType: !385, size: 128)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2971, file: !2963, line: 31, baseType: !475, size: 64, offset: 128)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2967, file: !2963, line: 49, baseType: !475, size: 64, offset: 192)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !765, file: !44, line: 1533, baseType: !2962, size: 64, offset: 8512)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !765, file: !44, line: 1534, baseType: !530, size: 128, align: 64, offset: 8576)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !765, file: !44, line: 1535, baseType: !2125, size: 256, offset: 8704)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !765, file: !44, line: 1537, baseType: !1339, size: 192, offset: 8960)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !765, file: !44, line: 1542, baseType: !323, size: 32, offset: 9152)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !765, file: !44, line: 1545, baseType: !399, offset: 9184)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !765, file: !44, line: 1546, baseType: !385, size: 128, offset: 9216)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !765, file: !44, line: 1548, baseType: !399, offset: 9344)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !765, file: !44, line: 1549, baseType: !385, size: 128, offset: 9344)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !595, file: !44, line: 624, baseType: !899, size: 64, offset: 256)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !595, file: !44, line: 631, baseType: !364, size: 64, offset: 320)
!2987 = !DIDerivedType(tag: DW_TAG_member, scope: !595, file: !44, line: 639, baseType: !2988, size: 32, offset: 384)
!2988 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !595, file: !44, line: 639, size: 32, elements: !2989)
!2989 = !{!2990, !2992}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2988, file: !44, line: 640, baseType: !2991, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2988, file: !44, line: 641, baseType: !7, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !595, file: !44, line: 643, baseType: !678, size: 32, offset: 416)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !595, file: !44, line: 644, baseType: !696, size: 64, offset: 448)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !595, file: !44, line: 645, baseType: !700, size: 128, offset: 512)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !595, file: !44, line: 646, baseType: !700, size: 128, offset: 640)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !595, file: !44, line: 647, baseType: !700, size: 128, offset: 768)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !595, file: !44, line: 648, baseType: !399, offset: 896)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !595, file: !44, line: 649, baseType: !482, size: 16, offset: 896)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !595, file: !44, line: 650, baseType: !1518, size: 8, offset: 912)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !595, file: !44, line: 651, baseType: !1518, size: 8, offset: 920)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !595, file: !44, line: 652, baseType: !2754, size: 64, offset: 960)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !595, file: !44, line: 659, baseType: !364, size: 64, offset: 1024)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !595, file: !44, line: 660, baseType: !933, size: 256, offset: 1088)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !595, file: !44, line: 662, baseType: !364, size: 64, offset: 1344)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !595, file: !44, line: 663, baseType: !364, size: 64, offset: 1408)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !595, file: !44, line: 665, baseType: !804, size: 128, offset: 1472)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !595, file: !44, line: 666, baseType: !385, size: 128, offset: 1600)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !595, file: !44, line: 675, baseType: !385, size: 128, offset: 1728)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !595, file: !44, line: 676, baseType: !385, size: 128, offset: 1856)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !595, file: !44, line: 677, baseType: !385, size: 128, offset: 1984)
!3012 = !DIDerivedType(tag: DW_TAG_member, scope: !595, file: !44, line: 678, baseType: !3013, size: 128, offset: 2112)
!3013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !595, file: !44, line: 678, size: 128, elements: !3014)
!3014 = !{!3015, !3016}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3013, file: !44, line: 679, baseType: !800, size: 64)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3013, file: !44, line: 680, baseType: !530, size: 128, align: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !595, file: !44, line: 682, baseType: !939, size: 64, offset: 2240)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !595, file: !44, line: 683, baseType: !939, size: 64, offset: 2304)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !595, file: !44, line: 684, baseType: !913, size: 32, offset: 2368)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !595, file: !44, line: 685, baseType: !913, size: 32, offset: 2400)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !595, file: !44, line: 686, baseType: !913, size: 32, offset: 2432)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !595, file: !44, line: 688, baseType: !913, size: 32, offset: 2464)
!3023 = !DIDerivedType(tag: DW_TAG_member, scope: !595, file: !44, line: 690, baseType: !3024, size: 64, offset: 2496)
!3024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !595, file: !44, line: 690, size: 64, elements: !3025)
!3025 = !{!3026, !3249}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3024, file: !44, line: 691, baseType: !3027, size: 64)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3029)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !3030)
!3030 = !{!3031, !3032, !3036, !3041, !3045, !3046, !3047, !3051, !3064, !3065, !3073, !3077, !3078, !3082, !3083, !3087, !3092, !3093, !3097, !3101, !3209, !3213, !3214, !3218, !3219, !3223, !3227, !3232, !3236, !3240, !3244, !3248}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3029, file: !44, line: 1823, baseType: !338, size: 64)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3029, file: !44, line: 1824, baseType: !3033, size: 64, offset: 64)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!696, !517, !696, !323}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3029, file: !44, line: 1825, baseType: !3037, size: 64, offset: 128)
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{!471, !517, !440, !487, !3040}
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3029, file: !44, line: 1826, baseType: !3042, size: 64, offset: 192)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{!471, !517, !334, !487, !3040}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3029, file: !44, line: 1827, baseType: !1010, size: 64, offset: 256)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3029, file: !44, line: 1828, baseType: !1010, size: 64, offset: 320)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3029, file: !44, line: 1829, baseType: !3048, size: 64, offset: 384)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{!323, !1013, !655}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3029, file: !44, line: 1830, baseType: !3052, size: 64, offset: 448)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DISubroutineType(types: !3054)
!3054 = !{!323, !517, !3055}
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 64)
!3056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !3057)
!3057 = !{!3058, !3063}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3056, file: !44, line: 1777, baseType: !3059, size: 64)
!3059 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !3060)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{!323, !3055, !334, !323, !696, !586, !7}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3056, file: !44, line: 1778, baseType: !696, size: 64, offset: 64)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3029, file: !44, line: 1831, baseType: !3052, size: 64, offset: 512)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3029, file: !44, line: 1832, baseType: !3066, size: 64, offset: 576)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!3069, !517, !3071}
!3069 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3070, line: 52, baseType: !7)
!3070 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 64)
!3072 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !784, line: 27, flags: DIFlagFwdDecl)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3029, file: !44, line: 1833, baseType: !3074, size: 64, offset: 640)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DISubroutineType(types: !3076)
!3076 = !{!475, !517, !7, !364}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3029, file: !44, line: 1834, baseType: !3074, size: 64, offset: 704)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3029, file: !44, line: 1835, baseType: !3079, size: 64, offset: 768)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!323, !517, !1147}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3029, file: !44, line: 1836, baseType: !364, size: 64, offset: 832)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3029, file: !44, line: 1837, baseType: !3084, size: 64, offset: 896)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = !DISubroutineType(types: !3086)
!3086 = !{!323, !594, !517}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3029, file: !44, line: 1838, baseType: !3088, size: 64, offset: 960)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 64)
!3089 = !DISubroutineType(types: !3090)
!3090 = !{!323, !517, !3091}
!3091 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !374)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3029, file: !44, line: 1839, baseType: !3084, size: 64, offset: 1024)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3029, file: !44, line: 1840, baseType: !3094, size: 64, offset: 1088)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{!323, !517, !696, !696, !323}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3029, file: !44, line: 1841, baseType: !3098, size: 64, offset: 1152)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DISubroutineType(types: !3100)
!3100 = !{!323, !323, !517, !323}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3029, file: !44, line: 1842, baseType: !3102, size: 64, offset: 1216)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!323, !517, !323, !3105}
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 64)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3107)
!3107 = !{!3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3139, !3140, !3141, !3154, !3185}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3106, file: !44, line: 1063, baseType: !3105, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3106, file: !44, line: 1064, baseType: !385, size: 128, offset: 64)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3106, file: !44, line: 1065, baseType: !804, size: 128, offset: 192)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3106, file: !44, line: 1066, baseType: !385, size: 128, offset: 320)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3106, file: !44, line: 1069, baseType: !385, size: 128, offset: 448)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3106, file: !44, line: 1072, baseType: !3091, size: 64, offset: 576)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3106, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3106, file: !44, line: 1074, baseType: !592, size: 8, offset: 672)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3106, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3106, file: !44, line: 1076, baseType: !323, size: 32, offset: 736)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3106, file: !44, line: 1077, baseType: !1647, size: 128, offset: 768)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3106, file: !44, line: 1078, baseType: !517, size: 64, offset: 896)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3106, file: !44, line: 1079, baseType: !696, size: 64, offset: 960)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3106, file: !44, line: 1080, baseType: !696, size: 64, offset: 1024)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3106, file: !44, line: 1082, baseType: !3123, size: 64, offset: 1088)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 64)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3125)
!3125 = !{!3126, !3134, !3135, !3136, !3137, !3138}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3124, file: !44, line: 1315, baseType: !3127)
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3128, line: 20, baseType: !3129)
!3128 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3128, line: 11, elements: !3130)
!3130 = !{!3131}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3129, file: !3128, line: 12, baseType: !3132)
!3132 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !411, line: 33, baseType: !3133)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !411, line: 31, elements: !413)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3124, file: !44, line: 1316, baseType: !323, size: 32)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3124, file: !44, line: 1317, baseType: !323, size: 32, offset: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3124, file: !44, line: 1318, baseType: !3123, size: 64, offset: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3124, file: !44, line: 1319, baseType: !517, size: 64, offset: 128)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3124, file: !44, line: 1320, baseType: !530, size: 128, align: 64, offset: 192)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3106, file: !44, line: 1084, baseType: !364, size: 64, offset: 1152)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3106, file: !44, line: 1085, baseType: !364, size: 64, offset: 1216)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3106, file: !44, line: 1087, baseType: !3142, size: 64, offset: 1280)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 64)
!3143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3144)
!3144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3145)
!3145 = !{!3146, !3150}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3144, file: !44, line: 1012, baseType: !3147, size: 64)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 64)
!3148 = !DISubroutineType(types: !3149)
!3149 = !{null, !3105, !3105}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3144, file: !44, line: 1013, baseType: !3151, size: 64, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{null, !3105}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3106, file: !44, line: 1088, baseType: !3155, size: 64, offset: 1344)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3157)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3158)
!3158 = !{!3159, !3163, !3167, !3168, !3172, !3176, !3180, !3184}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3157, file: !44, line: 1017, baseType: !3160, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{!3091, !3091}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3157, file: !44, line: 1018, baseType: !3164, size: 64, offset: 64)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{null, !3091}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3157, file: !44, line: 1019, baseType: !3151, size: 64, offset: 128)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3157, file: !44, line: 1020, baseType: !3169, size: 64, offset: 192)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{!323, !3105, !323}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3157, file: !44, line: 1021, baseType: !3173, size: 64, offset: 256)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{!655, !3105}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3157, file: !44, line: 1022, baseType: !3177, size: 64, offset: 320)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{!323, !3105, !323, !389}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3157, file: !44, line: 1023, baseType: !3181, size: 64, offset: 384)
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3182, size: 64)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{null, !3105, !987}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3157, file: !44, line: 1024, baseType: !3173, size: 64, offset: 448)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3106, file: !44, line: 1097, baseType: !3186, size: 256, offset: 1408)
!3186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3106, file: !44, line: 1089, size: 256, elements: !3187)
!3187 = !{!3188, !3197, !3203}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3186, file: !44, line: 1090, baseType: !3189, size: 256)
!3189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3190, line: 10, size: 256, elements: !3191)
!3190 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3191 = !{!3192, !3193, !3196}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3189, file: !3190, line: 11, baseType: !580, size: 32)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3189, file: !3190, line: 12, baseType: !3194, size: 64, offset: 64)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3195 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3190, line: 5, flags: DIFlagFwdDecl)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3189, file: !3190, line: 13, baseType: !385, size: 128, offset: 128)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3186, file: !44, line: 1091, baseType: !3198, size: 64)
!3198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3190, line: 17, size: 64, elements: !3199)
!3199 = !{!3200}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3198, file: !3190, line: 18, baseType: !3201, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3190, line: 16, flags: DIFlagFwdDecl)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3186, file: !44, line: 1096, baseType: !3204, size: 192)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3186, file: !44, line: 1092, size: 192, elements: !3205)
!3205 = !{!3206, !3207, !3208}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3204, file: !44, line: 1093, baseType: !385, size: 128)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3204, file: !44, line: 1094, baseType: !323, size: 32, offset: 128)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3204, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3029, file: !44, line: 1843, baseType: !3210, size: 64, offset: 1280)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{!471, !517, !886, !323, !487, !3040, !323}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3029, file: !44, line: 1844, baseType: !1267, size: 64, offset: 1344)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3029, file: !44, line: 1845, baseType: !3215, size: 64, offset: 1408)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{!323, !323}
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3029, file: !44, line: 1846, baseType: !3102, size: 64, offset: 1472)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3029, file: !44, line: 1847, baseType: !3220, size: 64, offset: 1536)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!471, !2266, !517, !3040, !487, !7}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3029, file: !44, line: 1848, baseType: !3224, size: 64, offset: 1600)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = !DISubroutineType(types: !3226)
!3226 = !{!471, !517, !3040, !2266, !487, !7}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3029, file: !44, line: 1849, baseType: !3228, size: 64, offset: 1664)
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{!323, !517, !475, !3231, !987}
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3029, file: !44, line: 1850, baseType: !3233, size: 64, offset: 1728)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{!475, !517, !323, !696, !696}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3029, file: !44, line: 1852, baseType: !3237, size: 64, offset: 1792)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3238 = !DISubroutineType(types: !3239)
!3239 = !{null, !876, !517}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3029, file: !44, line: 1856, baseType: !3241, size: 64, offset: 1856)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{!471, !517, !696, !517, !696, !487, !7}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3029, file: !44, line: 1858, baseType: !3245, size: 64, offset: 1920)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DISubroutineType(types: !3247)
!3247 = !{!696, !517, !696, !517, !696, !696, !7}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3029, file: !44, line: 1861, baseType: !3094, size: 64, offset: 1984)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3024, file: !44, line: 692, baseType: !829, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !595, file: !44, line: 694, baseType: !3251, size: 64, offset: 2560)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3253)
!3253 = !{!3254, !3255, !3256, !3257}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3252, file: !44, line: 1101, baseType: !399)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3252, file: !44, line: 1102, baseType: !385, size: 128)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3252, file: !44, line: 1103, baseType: !385, size: 128, offset: 128)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3252, file: !44, line: 1104, baseType: !385, size: 128, offset: 256)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !595, file: !44, line: 695, baseType: !900, size: 1216, align: 64, offset: 2624)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !595, file: !44, line: 696, baseType: !385, size: 128, offset: 3840)
!3260 = !DIDerivedType(tag: DW_TAG_member, scope: !595, file: !44, line: 697, baseType: !3261, size: 64, offset: 3968)
!3261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !595, file: !44, line: 697, size: 64, elements: !3262)
!3262 = !{!3263, !3264, !3265, !3268, !3269}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3261, file: !44, line: 698, baseType: !2266, size: 64)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3261, file: !44, line: 699, baseType: !2779, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3261, file: !44, line: 700, baseType: !3266, size: 64)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3261, file: !44, line: 701, baseType: !440, size: 64)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3261, file: !44, line: 702, baseType: !7, size: 32)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !595, file: !44, line: 705, baseType: !582, size: 32, offset: 4032)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !595, file: !44, line: 708, baseType: !582, size: 32, offset: 4064)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !595, file: !44, line: 709, baseType: !2861, size: 64, offset: 4096)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !595, file: !44, line: 720, baseType: !374, size: 64, offset: 4160)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !548, file: !545, line: 98, baseType: !3275, size: 256, offset: 448)
!3275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 256, elements: !354)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !548, file: !545, line: 101, baseType: !3277, size: 32, offset: 704)
!3277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3278, line: 25, size: 32, elements: !3279)
!3278 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3279 = !{!3280}
!3280 = !DIDerivedType(tag: DW_TAG_member, scope: !3277, file: !3278, line: 26, baseType: !3281, size: 32)
!3281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3277, file: !3278, line: 26, size: 32, elements: !3282)
!3282 = !{!3283}
!3283 = !DIDerivedType(tag: DW_TAG_member, scope: !3281, file: !3278, line: 30, baseType: !3284, size: 32)
!3284 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3281, file: !3278, line: 30, size: 32, elements: !3285)
!3285 = !{!3286, !3287}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3284, file: !3278, line: 31, baseType: !399)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3284, file: !3278, line: 32, baseType: !323, size: 32)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !548, file: !545, line: 102, baseType: !2878, size: 64, offset: 768)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !548, file: !545, line: 103, baseType: !764, size: 64, offset: 832)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !548, file: !545, line: 104, baseType: !364, size: 64, offset: 896)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !548, file: !545, line: 105, baseType: !374, size: 64, offset: 960)
!3292 = !DIDerivedType(tag: DW_TAG_member, scope: !548, file: !545, line: 107, baseType: !3293, size: 128, offset: 1024)
!3293 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !548, file: !545, line: 107, size: 128, elements: !3294)
!3294 = !{!3295, !3296}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3293, file: !545, line: 108, baseType: !385, size: 128)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3293, file: !545, line: 109, baseType: !3297, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !548, file: !545, line: 111, baseType: !385, size: 128, offset: 1152)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !548, file: !545, line: 112, baseType: !385, size: 128, offset: 1280)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !548, file: !545, line: 120, baseType: !3301, size: 128, offset: 1408)
!3301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !548, file: !545, line: 116, size: 128, elements: !3302)
!3302 = !{!3303, !3304, !3305}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3301, file: !545, line: 117, baseType: !804, size: 128)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3301, file: !545, line: 118, baseType: !562, size: 128)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3301, file: !545, line: 119, baseType: !530, size: 128, align: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !518, file: !44, line: 922, baseType: !594, size: 64, offset: 256)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !518, file: !44, line: 923, baseType: !3027, size: 64, offset: 320)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !518, file: !44, line: 929, baseType: !399, offset: 384)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !518, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !518, file: !44, line: 931, baseType: !937, size: 64, offset: 448)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !518, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !518, file: !44, line: 933, baseType: !2874, size: 32, offset: 544)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !518, file: !44, line: 934, baseType: !1339, size: 192, offset: 576)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !518, file: !44, line: 935, baseType: !696, size: 64, offset: 768)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !518, file: !44, line: 936, baseType: !3316, size: 192, offset: 832)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3317)
!3317 = !{!3318, !3319, !3320, !3321, !3322, !3323}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3316, file: !44, line: 886, baseType: !3127)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3316, file: !44, line: 887, baseType: !1637, size: 64)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3316, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3316, file: !44, line: 889, baseType: !600, size: 32, offset: 96)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3316, file: !44, line: 889, baseType: !600, size: 32, offset: 128)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3316, file: !44, line: 890, baseType: !323, size: 32, offset: 160)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !518, file: !44, line: 937, baseType: !1713, size: 64, offset: 1024)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !518, file: !44, line: 938, baseType: !3326, size: 256, offset: 1088)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3327)
!3327 = !{!3328, !3329, !3330, !3331, !3332, !3333}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3326, file: !44, line: 897, baseType: !364, size: 64)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3326, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3326, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3326, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3326, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3326, file: !44, line: 904, baseType: !696, size: 64, offset: 192)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !518, file: !44, line: 940, baseType: !586, size: 64, offset: 1344)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !518, file: !44, line: 945, baseType: !374, size: 64, offset: 1408)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !518, file: !44, line: 949, baseType: !385, size: 128, offset: 1472)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !518, file: !44, line: 950, baseType: !385, size: 128, offset: 1600)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !518, file: !44, line: 952, baseType: !899, size: 64, offset: 1728)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !518, file: !44, line: 953, baseType: !1075, size: 32, offset: 1792)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !518, file: !44, line: 954, baseType: !1075, size: 32, offset: 1824)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !508, file: !465, line: 174, baseType: !514, size: 64, offset: 320)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !508, file: !465, line: 176, baseType: !3343, size: 64, offset: 384)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3344, size: 64)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{!323, !517, !392, !507, !1147}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !496, file: !465, line: 90, baseType: !491, size: 64, offset: 192)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !496, file: !465, line: 91, baseType: !3348, size: 64, offset: 256)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !455, file: !381, line: 143, baseType: !3350, size: 64, offset: 256)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{!3353, !392}
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3354, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3355)
!3355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3356)
!3356 = !{!3357, !3358, !3362, !3366, !3372, !3376}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3355, file: !61, line: 40, baseType: !60, size: 32)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3355, file: !61, line: 41, baseType: !3359, size: 64, offset: 64)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 64)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!655}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3355, file: !61, line: 42, baseType: !3363, size: 64, offset: 128)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3364, size: 64)
!3364 = !DISubroutineType(types: !3365)
!3365 = !{!374}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3355, file: !61, line: 43, baseType: !3367, size: 64, offset: 192)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{!2295, !3370}
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3371, size: 64)
!3371 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3355, file: !61, line: 44, baseType: !3373, size: 64, offset: 256)
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 64)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{!2295}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3355, file: !61, line: 45, baseType: !633, size: 64, offset: 320)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !455, file: !381, line: 144, baseType: !3378, size: 64, offset: 320)
!3378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3379, size: 64)
!3379 = !DISubroutineType(types: !3380)
!3380 = !{!2295, !392}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !455, file: !381, line: 145, baseType: !3382, size: 64, offset: 384)
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{null, !392, !3385, !3386}
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !380, file: !381, line: 70, baseType: !3388, size: 64, offset: 384)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !784, line: 123, size: 1024, elements: !3390)
!3390 = !{!3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3519, !3520, !3521, !3522, !3523}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3389, file: !784, line: 124, baseType: !913, size: 32)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3389, file: !784, line: 125, baseType: !913, size: 32, offset: 32)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3389, file: !784, line: 135, baseType: !3388, size: 64, offset: 64)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3389, file: !784, line: 136, baseType: !334, size: 64, offset: 128)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3389, file: !784, line: 138, baseType: !926, size: 192, align: 64, offset: 192)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3389, file: !784, line: 140, baseType: !2295, size: 64, offset: 384)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3389, file: !784, line: 141, baseType: !7, size: 32, offset: 448)
!3398 = !DIDerivedType(tag: DW_TAG_member, scope: !3389, file: !784, line: 142, baseType: !3399, size: 256, offset: 512)
!3399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3389, file: !784, line: 142, size: 256, elements: !3400)
!3400 = !{!3401, !3447, !3451}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3399, file: !784, line: 143, baseType: !3402, size: 192)
!3402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !784, line: 91, size: 192, elements: !3403)
!3403 = !{!3404, !3405, !3406}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3402, file: !784, line: 92, baseType: !364, size: 64)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3402, file: !784, line: 94, baseType: !922, size: 64, offset: 64)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3402, file: !784, line: 100, baseType: !3407, size: 64, offset: 128)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !784, line: 180, size: 704, elements: !3409)
!3409 = !{!3410, !3411, !3412, !3419, !3420, !3421, !3445, !3446}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3408, file: !784, line: 182, baseType: !3388, size: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3408, file: !784, line: 183, baseType: !7, size: 32, offset: 64)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3408, file: !784, line: 186, baseType: !3413, size: 192, offset: 128)
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3414, line: 19, size: 192, elements: !3415)
!3414 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3415 = !{!3416, !3417, !3418}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3413, file: !3414, line: 20, baseType: !904, size: 128)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3413, file: !3414, line: 21, baseType: !7, size: 32, offset: 128)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3413, file: !3414, line: 22, baseType: !7, size: 32, offset: 160)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3408, file: !784, line: 187, baseType: !580, size: 32, offset: 320)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3408, file: !784, line: 188, baseType: !580, size: 32, offset: 352)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3408, file: !784, line: 189, baseType: !3422, size: 64, offset: 384)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3423, size: 64)
!3423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !784, line: 168, size: 320, elements: !3424)
!3424 = !{!3425, !3429, !3433, !3437, !3441}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3423, file: !784, line: 169, baseType: !3426, size: 64)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!323, !876, !3407}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3423, file: !784, line: 171, baseType: !3430, size: 64, offset: 64)
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3431 = !DISubroutineType(types: !3432)
!3432 = !{!323, !3388, !334, !481}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3423, file: !784, line: 173, baseType: !3434, size: 64, offset: 128)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = !DISubroutineType(types: !3436)
!3436 = !{!323, !3388}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3423, file: !784, line: 174, baseType: !3438, size: 64, offset: 192)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = !DISubroutineType(types: !3440)
!3440 = !{!323, !3388, !3388, !334}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3423, file: !784, line: 176, baseType: !3442, size: 64, offset: 256)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!323, !876, !3388, !3407}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3408, file: !784, line: 192, baseType: !385, size: 128, offset: 448)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3408, file: !784, line: 194, baseType: !1647, size: 128, offset: 576)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3399, file: !784, line: 144, baseType: !3448, size: 64)
!3448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !784, line: 103, size: 64, elements: !3449)
!3449 = !{!3450}
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3448, file: !784, line: 104, baseType: !3388, size: 64)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3399, file: !784, line: 145, baseType: !3452, size: 256)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !784, line: 107, size: 256, elements: !3453)
!3453 = !{!3454, !3514, !3517, !3518}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3452, file: !784, line: 108, baseType: !3455, size: 64)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3457)
!3457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !784, line: 217, size: 768, elements: !3458)
!3458 = !{!3459, !3479, !3483, !3487, !3491, !3495, !3499, !3503, !3504, !3505, !3506, !3510}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3457, file: !784, line: 222, baseType: !3460, size: 64)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!323, !3463}
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !784, line: 197, size: 1088, elements: !3465)
!3465 = !{!3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3464, file: !784, line: 199, baseType: !3388, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3464, file: !784, line: 200, baseType: !517, size: 64, offset: 64)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3464, file: !784, line: 201, baseType: !876, size: 64, offset: 128)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3464, file: !784, line: 202, baseType: !374, size: 64, offset: 192)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3464, file: !784, line: 205, baseType: !1339, size: 192, offset: 256)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3464, file: !784, line: 206, baseType: !1339, size: 192, offset: 448)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3464, file: !784, line: 207, baseType: !323, size: 32, offset: 640)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3464, file: !784, line: 208, baseType: !385, size: 128, offset: 704)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3464, file: !784, line: 209, baseType: !440, size: 64, offset: 832)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3464, file: !784, line: 211, baseType: !487, size: 64, offset: 896)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3464, file: !784, line: 212, baseType: !655, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3464, file: !784, line: 213, baseType: !655, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3464, file: !784, line: 214, baseType: !1175, size: 64, offset: 1024)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3457, file: !784, line: 223, baseType: !3480, size: 64, offset: 64)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{null, !3463}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3457, file: !784, line: 236, baseType: !3484, size: 64, offset: 128)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!323, !876, !374}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3457, file: !784, line: 238, baseType: !3488, size: 64, offset: 192)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!374, !876, !3040}
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3457, file: !784, line: 239, baseType: !3492, size: 64, offset: 256)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 64)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{!374, !876, !374, !3040}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3457, file: !784, line: 240, baseType: !3496, size: 64, offset: 320)
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{null, !876, !374}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3457, file: !784, line: 242, baseType: !3500, size: 64, offset: 384)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{!471, !3463, !440, !487, !696}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3457, file: !784, line: 252, baseType: !487, size: 64, offset: 448)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3457, file: !784, line: 259, baseType: !655, size: 8, offset: 512)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3457, file: !784, line: 260, baseType: !3500, size: 64, offset: 576)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3457, file: !784, line: 263, baseType: !3507, size: 64, offset: 640)
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3508, size: 64)
!3508 = !DISubroutineType(types: !3509)
!3509 = !{!3069, !3463, !3071}
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3457, file: !784, line: 266, baseType: !3511, size: 64, offset: 704)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{!323, !3463, !1147}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3452, file: !784, line: 109, baseType: !3515, size: 64, offset: 64)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !784, line: 31, flags: DIFlagFwdDecl)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3452, file: !784, line: 110, baseType: !696, size: 64, offset: 128)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3452, file: !784, line: 111, baseType: !3388, size: 64, offset: 192)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3389, file: !784, line: 148, baseType: !374, size: 64, offset: 768)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3389, file: !784, line: 154, baseType: !586, size: 64, offset: 832)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3389, file: !784, line: 156, baseType: !482, size: 16, offset: 896)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3389, file: !784, line: 157, baseType: !481, size: 16, offset: 912)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3389, file: !784, line: 158, baseType: !3524, size: 64, offset: 960)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !784, line: 32, flags: DIFlagFwdDecl)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !380, file: !381, line: 71, baseType: !3527, size: 32, offset: 448)
!3527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3528, line: 19, size: 32, elements: !3529)
!3528 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3529 = !{!3530}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3527, file: !3528, line: 20, baseType: !1396, size: 32)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !380, file: !381, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !380, file: !381, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !380, file: !381, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !380, file: !381, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !380, file: !381, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !377, file: !73, line: 463, baseType: !376, size: 64, offset: 512)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !377, file: !73, line: 465, baseType: !3538, size: 64, offset: 576)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !377, file: !73, line: 467, baseType: !334, size: 64, offset: 640)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !377, file: !73, line: 468, baseType: !3542, size: 64, offset: 704)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3544)
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3545)
!3545 = !{!3546, !3547, !3548, !3552, !3557, !3561}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3544, file: !73, line: 88, baseType: !334, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3544, file: !73, line: 89, baseType: !493, size: 64, offset: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3544, file: !73, line: 90, baseType: !3549, size: 64, offset: 128)
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 64)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!323, !376, !435}
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3544, file: !73, line: 91, baseType: !3553, size: 64, offset: 192)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = !DISubroutineType(types: !3555)
!3555 = !{!440, !376, !3556, !3385, !3386}
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3544, file: !73, line: 93, baseType: !3558, size: 64, offset: 256)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{null, !376}
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3544, file: !73, line: 95, baseType: !3562, size: 64, offset: 320)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3564)
!3564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3565)
!3565 = !{!3566, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591}
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3564, file: !80, line: 279, baseType: !3567, size: 64)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = !DISubroutineType(types: !3569)
!3569 = !{!323, !376}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3564, file: !80, line: 280, baseType: !3558, size: 64, offset: 64)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3564, file: !80, line: 281, baseType: !3567, size: 64, offset: 128)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3564, file: !80, line: 282, baseType: !3567, size: 64, offset: 192)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3564, file: !80, line: 283, baseType: !3567, size: 64, offset: 256)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3564, file: !80, line: 284, baseType: !3567, size: 64, offset: 320)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3564, file: !80, line: 285, baseType: !3567, size: 64, offset: 384)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3564, file: !80, line: 286, baseType: !3567, size: 64, offset: 448)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3564, file: !80, line: 287, baseType: !3567, size: 64, offset: 512)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3564, file: !80, line: 288, baseType: !3567, size: 64, offset: 576)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3564, file: !80, line: 289, baseType: !3567, size: 64, offset: 640)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3564, file: !80, line: 290, baseType: !3567, size: 64, offset: 704)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3564, file: !80, line: 291, baseType: !3567, size: 64, offset: 768)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3564, file: !80, line: 292, baseType: !3567, size: 64, offset: 832)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3564, file: !80, line: 293, baseType: !3567, size: 64, offset: 896)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3564, file: !80, line: 294, baseType: !3567, size: 64, offset: 960)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3564, file: !80, line: 295, baseType: !3567, size: 64, offset: 1024)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3564, file: !80, line: 296, baseType: !3567, size: 64, offset: 1088)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3564, file: !80, line: 297, baseType: !3567, size: 64, offset: 1152)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3564, file: !80, line: 298, baseType: !3567, size: 64, offset: 1216)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3564, file: !80, line: 299, baseType: !3567, size: 64, offset: 1280)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3564, file: !80, line: 300, baseType: !3567, size: 64, offset: 1344)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3564, file: !80, line: 301, baseType: !3567, size: 64, offset: 1408)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !377, file: !73, line: 470, baseType: !3593, size: 64, offset: 768)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3595, line: 82, size: 1408, elements: !3596)
!3595 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3596 = !{!3597, !3598, !3599, !3600, !3601, !3602, !3603, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3678, !3681, !3682}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3594, file: !3595, line: 83, baseType: !334, size: 64)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3594, file: !3595, line: 84, baseType: !334, size: 64, offset: 64)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3594, file: !3595, line: 85, baseType: !376, size: 64, offset: 128)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3594, file: !3595, line: 86, baseType: !493, size: 64, offset: 192)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3594, file: !3595, line: 87, baseType: !493, size: 64, offset: 256)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3594, file: !3595, line: 88, baseType: !493, size: 64, offset: 320)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3594, file: !3595, line: 90, baseType: !3604, size: 64, offset: 384)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{!323, !376, !3607}
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3609)
!3609 = !{!3610, !3611, !3612, !3613, !3614, !3615, !3616, !3629, !3642, !3643, !3644, !3645, !3646, !3654, !3655, !3656, !3657, !3658, !3659}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3608, file: !67, line: 96, baseType: !334, size: 64)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3608, file: !67, line: 97, baseType: !3593, size: 64, offset: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3608, file: !67, line: 99, baseType: !338, size: 64, offset: 128)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3608, file: !67, line: 100, baseType: !334, size: 64, offset: 192)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3608, file: !67, line: 102, baseType: !655, size: 8, offset: 256)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3608, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3608, file: !67, line: 105, baseType: !3617, size: 64, offset: 320)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3619)
!3619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3620, line: 262, size: 1600, elements: !3621)
!3620 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3621 = !{!3622, !3623, !3624, !3628}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3619, file: !3620, line: 263, baseType: !2864, size: 256)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3619, file: !3620, line: 264, baseType: !2864, size: 256, offset: 256)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3619, file: !3620, line: 265, baseType: !3625, size: 1024, offset: 512)
!3625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 1024, elements: !3626)
!3626 = !{!3627}
!3627 = !DISubrange(count: 128)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3619, file: !3620, line: 266, baseType: !2295, size: 64, offset: 1536)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3608, file: !67, line: 106, baseType: !3630, size: 64, offset: 384)
!3630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3631, size: 64)
!3631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3632)
!3632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3620, line: 210, size: 256, elements: !3633)
!3633 = !{!3634, !3638, !3640, !3641}
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3632, file: !3620, line: 211, baseType: !3635, size: 72)
!3635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1519, size: 72, elements: !3636)
!3636 = !{!3637}
!3637 = !DISubrange(count: 9)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3632, file: !3620, line: 212, baseType: !3639, size: 64, offset: 128)
!3639 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3620, line: 14, baseType: !364)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3632, file: !3620, line: 213, baseType: !582, size: 32, offset: 192)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3632, file: !3620, line: 214, baseType: !582, size: 32, offset: 224)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3608, file: !67, line: 108, baseType: !3567, size: 64, offset: 448)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3608, file: !67, line: 109, baseType: !3558, size: 64, offset: 512)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3608, file: !67, line: 110, baseType: !3567, size: 64, offset: 576)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3608, file: !67, line: 111, baseType: !3558, size: 64, offset: 640)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3608, file: !67, line: 112, baseType: !3647, size: 64, offset: 704)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{!323, !376, !3650}
!3650 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3651)
!3651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3652)
!3652 = !{!3653}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3651, file: !80, line: 51, baseType: !323, size: 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3608, file: !67, line: 113, baseType: !3567, size: 64, offset: 768)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3608, file: !67, line: 114, baseType: !493, size: 64, offset: 832)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3608, file: !67, line: 115, baseType: !493, size: 64, offset: 896)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3608, file: !67, line: 117, baseType: !3562, size: 64, offset: 960)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3608, file: !67, line: 118, baseType: !3558, size: 64, offset: 1024)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3608, file: !67, line: 120, baseType: !3660, size: 64, offset: 1088)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3594, file: !3595, line: 91, baseType: !3549, size: 64, offset: 448)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3594, file: !3595, line: 92, baseType: !3567, size: 64, offset: 512)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3594, file: !3595, line: 93, baseType: !3558, size: 64, offset: 576)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3594, file: !3595, line: 94, baseType: !3567, size: 64, offset: 640)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3594, file: !3595, line: 95, baseType: !3558, size: 64, offset: 704)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3594, file: !3595, line: 97, baseType: !3567, size: 64, offset: 768)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3594, file: !3595, line: 98, baseType: !3567, size: 64, offset: 832)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3594, file: !3595, line: 100, baseType: !3647, size: 64, offset: 896)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3594, file: !3595, line: 101, baseType: !3567, size: 64, offset: 960)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3594, file: !3595, line: 103, baseType: !3567, size: 64, offset: 1024)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3594, file: !3595, line: 105, baseType: !3567, size: 64, offset: 1088)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3594, file: !3595, line: 107, baseType: !3562, size: 64, offset: 1152)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3594, file: !3595, line: 109, baseType: !3675, size: 64, offset: 1216)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3677)
!3677 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3595, line: 109, flags: DIFlagFwdDecl)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3594, file: !3595, line: 111, baseType: !3679, size: 64, offset: 1280)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3595, line: 111, flags: DIFlagFwdDecl)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3594, file: !3595, line: 112, baseType: !810, offset: 1344)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3594, file: !3595, line: 114, baseType: !655, size: 8, offset: 1344)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !377, file: !73, line: 471, baseType: !3607, size: 64, offset: 832)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !377, file: !73, line: 473, baseType: !374, size: 64, offset: 896)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !377, file: !73, line: 475, baseType: !374, size: 64, offset: 960)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !377, file: !73, line: 480, baseType: !1339, size: 192, offset: 1024)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !377, file: !73, line: 484, baseType: !3688, size: 576, offset: 1216)
!3688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3689)
!3689 = !{!3690, !3691, !3692, !3693, !3694, !3695}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3688, file: !73, line: 362, baseType: !385, size: 128)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3688, file: !73, line: 363, baseType: !385, size: 128, offset: 128)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3688, file: !73, line: 364, baseType: !385, size: 128, offset: 256)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3688, file: !73, line: 365, baseType: !385, size: 128, offset: 384)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3688, file: !73, line: 366, baseType: !655, size: 8, offset: 512)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3688, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !377, file: !73, line: 485, baseType: !3697, size: 2304, offset: 1792)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3698)
!3698 = !{!3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3794, !3798}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3697, file: !80, line: 566, baseType: !3650, size: 32)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3697, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3697, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3697, file: !80, line: 569, baseType: !655, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3697, file: !80, line: 570, baseType: !655, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3697, file: !80, line: 571, baseType: !655, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3697, file: !80, line: 572, baseType: !655, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3697, file: !80, line: 573, baseType: !655, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3697, file: !80, line: 574, baseType: !655, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3697, file: !80, line: 575, baseType: !655, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3697, file: !80, line: 576, baseType: !655, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3697, file: !80, line: 577, baseType: !580, size: 32, offset: 64)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3697, file: !80, line: 578, baseType: !399, offset: 96)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3697, file: !80, line: 580, baseType: !385, size: 128, offset: 128)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3697, file: !80, line: 581, baseType: !1668, size: 192, offset: 256)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3697, file: !80, line: 582, baseType: !3715, size: 64, offset: 448)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3717, line: 43, size: 1472, elements: !3718)
!3717 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3718 = !{!3719, !3720, !3721, !3722, !3723, !3726, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3716, file: !3717, line: 44, baseType: !334, size: 64)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3716, file: !3717, line: 45, baseType: !323, size: 32, offset: 64)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3716, file: !3717, line: 46, baseType: !385, size: 128, offset: 128)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3716, file: !3717, line: 47, baseType: !399, offset: 256)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3716, file: !3717, line: 48, baseType: !3724, size: 64, offset: 256)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3716, file: !3717, line: 49, baseType: !3727, size: 320, offset: 320)
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3728, line: 11, size: 320, elements: !3729)
!3728 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3729 = !{!3730, !3731, !3732, !3737}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3727, file: !3728, line: 16, baseType: !804, size: 128)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3727, file: !3728, line: 17, baseType: !364, size: 64, offset: 128)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3727, file: !3728, line: 18, baseType: !3733, size: 64, offset: 192)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{null, !3736}
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3727, size: 64)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3727, file: !3728, line: 19, baseType: !580, size: 32, offset: 256)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3716, file: !3717, line: 50, baseType: !364, size: 64, offset: 640)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3716, file: !3717, line: 51, baseType: !1466, size: 64, offset: 704)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3716, file: !3717, line: 52, baseType: !1466, size: 64, offset: 768)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3716, file: !3717, line: 53, baseType: !1466, size: 64, offset: 832)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3716, file: !3717, line: 54, baseType: !1466, size: 64, offset: 896)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3716, file: !3717, line: 55, baseType: !1466, size: 64, offset: 960)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3716, file: !3717, line: 56, baseType: !364, size: 64, offset: 1024)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3716, file: !3717, line: 57, baseType: !364, size: 64, offset: 1088)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3716, file: !3717, line: 58, baseType: !364, size: 64, offset: 1152)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3716, file: !3717, line: 59, baseType: !364, size: 64, offset: 1216)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3716, file: !3717, line: 60, baseType: !364, size: 64, offset: 1280)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3716, file: !3717, line: 61, baseType: !376, size: 64, offset: 1344)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3716, file: !3717, line: 62, baseType: !655, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3716, file: !3717, line: 63, baseType: !655, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3697, file: !80, line: 583, baseType: !655, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3697, file: !80, line: 584, baseType: !655, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3697, file: !80, line: 585, baseType: !655, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3697, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3697, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3697, file: !80, line: 592, baseType: !1458, size: 512, offset: 576)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3697, file: !80, line: 593, baseType: !586, size: 64, offset: 1088)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3697, file: !80, line: 594, baseType: !2125, size: 256, offset: 1152)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3697, file: !80, line: 595, baseType: !1647, size: 128, offset: 1408)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3697, file: !80, line: 596, baseType: !3724, size: 64, offset: 1536)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3697, file: !80, line: 597, baseType: !913, size: 32, offset: 1600)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3697, file: !80, line: 598, baseType: !913, size: 32, offset: 1632)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3697, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3697, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3697, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3697, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3697, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3697, file: !80, line: 604, baseType: !655, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3697, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3697, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3697, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3697, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3697, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3697, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3697, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3697, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3697, file: !80, line: 613, baseType: !323, size: 32, offset: 1792)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3697, file: !80, line: 614, baseType: !323, size: 32, offset: 1824)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3697, file: !80, line: 615, baseType: !586, size: 64, offset: 1856)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3697, file: !80, line: 616, baseType: !586, size: 64, offset: 1920)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3697, file: !80, line: 617, baseType: !586, size: 64, offset: 1984)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3697, file: !80, line: 618, baseType: !586, size: 64, offset: 2048)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3697, file: !80, line: 620, baseType: !3785, size: 64, offset: 2112)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3787)
!3787 = !{!3788, !3789, !3790, !3791}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3786, file: !80, line: 537, baseType: !399)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3786, file: !80, line: 538, baseType: !7, size: 32)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3786, file: !80, line: 540, baseType: !385, size: 128, offset: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3786, file: !80, line: 543, baseType: !3792, size: 64, offset: 192)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3697, file: !80, line: 621, baseType: !3795, size: 64, offset: 2176)
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3796 = !DISubroutineType(types: !3797)
!3797 = !{null, !376, !1610}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3697, file: !80, line: 622, baseType: !3799, size: 64, offset: 2240)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !377, file: !73, line: 486, baseType: !3802, size: 64, offset: 4096)
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64)
!3803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3804)
!3804 = !{!3805, !3806, !3807, !3811, !3812, !3813}
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3803, file: !80, line: 643, baseType: !3564, size: 1472)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3803, file: !80, line: 644, baseType: !3567, size: 64, offset: 1472)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3803, file: !80, line: 645, baseType: !3808, size: 64, offset: 1536)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{null, !376, !655}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3803, file: !80, line: 646, baseType: !3567, size: 64, offset: 1600)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3803, file: !80, line: 647, baseType: !3558, size: 64, offset: 1664)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3803, file: !80, line: 648, baseType: !3558, size: 64, offset: 1728)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !377, file: !73, line: 493, baseType: !3815, size: 64, offset: 4160)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 493, flags: DIFlagFwdDecl)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !377, file: !73, line: 499, baseType: !385, size: 128, offset: 4224)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !377, file: !73, line: 502, baseType: !3819, size: 64, offset: 4352)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3821)
!3821 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !377, file: !73, line: 504, baseType: !3823, size: 64, offset: 4416)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !377, file: !73, line: 505, baseType: !586, size: 64, offset: 4480)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !377, file: !73, line: 510, baseType: !586, size: 64, offset: 4544)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !377, file: !73, line: 511, baseType: !3827, size: 64, offset: 4608)
!3827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3828, size: 64)
!3828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3829)
!3829 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !377, file: !73, line: 513, baseType: !3831, size: 64, offset: 4672)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3833)
!3833 = !{!3834, !3835}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3832, file: !73, line: 293, baseType: !7, size: 32)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3832, file: !73, line: 294, baseType: !364, size: 64, offset: 64)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !377, file: !73, line: 515, baseType: !385, size: 128, offset: 4736)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !377, file: !73, line: 526, baseType: !3838, offset: 4864)
!3838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3839, line: 5, elements: !413)
!3839 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !377, file: !73, line: 528, baseType: !3841, size: 64, offset: 4864)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3843, line: 14, flags: DIFlagFwdDecl)
!3843 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !377, file: !73, line: 529, baseType: !3845, size: 64, offset: 4928)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3847, line: 17, size: 192, elements: !3848)
!3847 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3848 = !{!3849, !3850, !3933}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3846, file: !3847, line: 18, baseType: !3845, size: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3846, file: !3847, line: 19, baseType: !3851, size: 64, offset: 64)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3853)
!3853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3847, line: 110, size: 1152, elements: !3854)
!3854 = !{!3855, !3859, !3863, !3869, !3875, !3879, !3883, !3888, !3892, !3893, !3897, !3901, !3905, !3916, !3917, !3918, !3919, !3929}
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3853, file: !3847, line: 111, baseType: !3856, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DISubroutineType(types: !3858)
!3858 = !{!3845, !3845}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3853, file: !3847, line: 112, baseType: !3860, size: 64, offset: 64)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{null, !3845}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3853, file: !3847, line: 113, baseType: !3864, size: 64, offset: 128)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{!655, !3867}
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3846)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3853, file: !3847, line: 114, baseType: !3870, size: 64, offset: 192)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!2295, !3867, !3873}
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !377)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3853, file: !3847, line: 116, baseType: !3876, size: 64, offset: 256)
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 64)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!655, !3867, !334}
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3853, file: !3847, line: 118, baseType: !3880, size: 64, offset: 320)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!323, !3867, !334, !7, !374, !487}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3853, file: !3847, line: 123, baseType: !3884, size: 64, offset: 384)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{!323, !3867, !334, !3887, !487}
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3853, file: !3847, line: 126, baseType: !3889, size: 64, offset: 448)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3890, size: 64)
!3890 = !DISubroutineType(types: !3891)
!3891 = !{!334, !3867}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3853, file: !3847, line: 127, baseType: !3889, size: 64, offset: 512)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3853, file: !3847, line: 128, baseType: !3894, size: 64, offset: 576)
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3895, size: 64)
!3895 = !DISubroutineType(types: !3896)
!3896 = !{!3845, !3867}
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3853, file: !3847, line: 130, baseType: !3898, size: 64, offset: 640)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{!3845, !3867, !3845}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3853, file: !3847, line: 133, baseType: !3902, size: 64, offset: 704)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{!3845, !3867, !334}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3853, file: !3847, line: 135, baseType: !3906, size: 64, offset: 768)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DISubroutineType(types: !3908)
!3908 = !{!323, !3867, !334, !334, !7, !7, !3909}
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 64)
!3910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3847, line: 43, size: 640, elements: !3911)
!3911 = !{!3912, !3913, !3914}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3910, file: !3847, line: 44, baseType: !3845, size: 64)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3910, file: !3847, line: 45, baseType: !7, size: 32, offset: 64)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3910, file: !3847, line: 46, baseType: !3915, size: 512, offset: 128)
!3915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 512, elements: !1496)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3853, file: !3847, line: 140, baseType: !3898, size: 64, offset: 832)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3853, file: !3847, line: 143, baseType: !3894, size: 64, offset: 896)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3853, file: !3847, line: 145, baseType: !3856, size: 64, offset: 960)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3853, file: !3847, line: 146, baseType: !3920, size: 64, offset: 1024)
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DISubroutineType(types: !3922)
!3922 = !{!323, !3867, !3923}
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3847, line: 29, size: 128, elements: !3925)
!3925 = !{!3926, !3927, !3928}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3924, file: !3847, line: 30, baseType: !7, size: 32)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3924, file: !3847, line: 31, baseType: !7, size: 32, offset: 32)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3924, file: !3847, line: 32, baseType: !3867, size: 64, offset: 64)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3853, file: !3847, line: 148, baseType: !3930, size: 64, offset: 1088)
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!323, !3867, !376}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3846, file: !3847, line: 20, baseType: !376, size: 64, offset: 128)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !377, file: !73, line: 534, baseType: !678, size: 32, offset: 4992)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !377, file: !73, line: 535, baseType: !580, size: 32, offset: 5024)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !377, file: !73, line: 537, baseType: !399, offset: 5056)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !377, file: !73, line: 538, baseType: !385, size: 128, offset: 5056)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !377, file: !73, line: 540, baseType: !3939, size: 64, offset: 5184)
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3941, line: 54, size: 960, elements: !3942)
!3941 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3942 = !{!3943, !3944, !3945, !3946, !3947, !3948, !3949, !3953, !3957, !3958, !3959, !3960, !3964, !3968, !3969}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3940, file: !3941, line: 55, baseType: !334, size: 64)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3940, file: !3941, line: 56, baseType: !338, size: 64, offset: 64)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3940, file: !3941, line: 58, baseType: !493, size: 64, offset: 128)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3940, file: !3941, line: 59, baseType: !493, size: 64, offset: 192)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3940, file: !3941, line: 60, baseType: !392, size: 64, offset: 256)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3940, file: !3941, line: 62, baseType: !3549, size: 64, offset: 320)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3940, file: !3941, line: 63, baseType: !3950, size: 64, offset: 384)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{!440, !376, !3556}
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3940, file: !3941, line: 65, baseType: !3954, size: 64, offset: 448)
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3955, size: 64)
!3955 = !DISubroutineType(types: !3956)
!3956 = !{null, !3939}
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3940, file: !3941, line: 66, baseType: !3558, size: 64, offset: 512)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3940, file: !3941, line: 68, baseType: !3567, size: 64, offset: 576)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3940, file: !3941, line: 70, baseType: !3353, size: 64, offset: 640)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3940, file: !3941, line: 71, baseType: !3961, size: 64, offset: 704)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{!2295, !376}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3940, file: !3941, line: 73, baseType: !3965, size: 64, offset: 768)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{null, !376, !3385, !3386}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3940, file: !3941, line: 75, baseType: !3562, size: 64, offset: 832)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3940, file: !3941, line: 77, baseType: !3679, size: 64, offset: 896)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !377, file: !73, line: 541, baseType: !493, size: 64, offset: 5248)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !377, file: !73, line: 543, baseType: !3558, size: 64, offset: 5312)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !377, file: !73, line: 544, baseType: !3973, size: 64, offset: 5376)
!3973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3974, size: 64)
!3974 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !377, file: !73, line: 545, baseType: !3976, size: 64, offset: 5440)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !377, file: !73, line: 547, baseType: !655, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !377, file: !73, line: 548, baseType: !655, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !377, file: !73, line: 549, baseType: !655, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !377, file: !73, line: 550, baseType: !655, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !325, file: !239, line: 548, baseType: !323, size: 32, offset: 320)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "detach_count", scope: !325, file: !239, line: 549, baseType: !7, size: 32, offset: 352)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "hw_dev", scope: !325, file: !239, line: 550, baseType: !376, size: 64, offset: 384)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "board_name", scope: !325, file: !239, line: 552, baseType: !334, size: 64, offset: 448)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "board_ptr", scope: !325, file: !239, line: 553, baseType: !2295, size: 64, offset: 512)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "attached", scope: !325, file: !239, line: 554, baseType: !7, size: 1, offset: 576, flags: DIFlagBitField, extraData: i64 576)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "ioenabled", scope: !325, file: !239, line: 555, baseType: !7, size: 1, offset: 577, flags: DIFlagBitField, extraData: i64 576)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "spinlock", scope: !325, file: !239, line: 556, baseType: !399, offset: 584)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !325, file: !239, line: 557, baseType: !1339, size: 192, offset: 640)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "attach_lock", scope: !325, file: !239, line: 558, baseType: !933, size: 256, offset: 832)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !325, file: !239, line: 559, baseType: !3527, size: 32, offset: 1088)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "n_subdevices", scope: !325, file: !239, line: 561, baseType: !323, size: 32, offset: 1120)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "subdevices", scope: !325, file: !239, line: 562, baseType: !3995, size: 64, offset: 1152)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_subdevice", file: !239, line: 153, size: 1792, elements: !3997)
!3997 = !{!3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4073, !4086, !4089, !4090, !4104, !4105, !4106, !4107, !4111, !4116, !4117, !4118, !4119, !4123, !4124, !4125, !4126, !4127}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !3996, file: !239, line: 154, baseType: !324, size: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3996, file: !239, line: 155, baseType: !323, size: 32, offset: 64)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3996, file: !239, line: 156, baseType: !323, size: 32, offset: 96)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "n_chan", scope: !3996, file: !239, line: 157, baseType: !323, size: 32, offset: 128)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "subdev_flags", scope: !3996, file: !239, line: 158, baseType: !323, size: 32, offset: 160)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "len_chanlist", scope: !3996, file: !239, line: 159, baseType: !323, size: 32, offset: 192)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3996, file: !239, line: 161, baseType: !374, size: 64, offset: 256)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "async", scope: !3996, file: !239, line: 163, baseType: !4006, size: 64, offset: 320)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_async", file: !239, line: 347, size: 1536, elements: !4008)
!4008 = !{!4009, !4010, !4011, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4059, !4060, !4061}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4007, file: !239, line: 348, baseType: !374, size: 64)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_bufsz", scope: !4007, file: !239, line: 349, baseType: !7, size: 32, offset: 64)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "buf_map", scope: !4007, file: !239, line: 350, baseType: !4012, size: 64, offset: 128)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_buf_map", file: !239, line: 249, size: 256, elements: !4014)
!4014 = !{!4015, !4016, !4022, !4023, !4024}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "dma_hw_dev", scope: !4013, file: !239, line: 250, baseType: !376, size: 64)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "page_list", scope: !4013, file: !239, line: 251, baseType: !4017, size: 64, offset: 64)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_buf_page", file: !239, line: 220, size: 128, elements: !4019)
!4019 = !{!4020, !4021}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "virt_addr", scope: !4018, file: !239, line: 221, baseType: !374, size: 64)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !4018, file: !239, line: 222, baseType: !1086, size: 64, offset: 64)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !4013, file: !239, line: 252, baseType: !7, size: 32, offset: 128)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dir", scope: !4013, file: !239, line: 253, baseType: !93, size: 32, offset: 160)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4013, file: !239, line: 254, baseType: !3527, size: 32, offset: 192)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "max_bufsize", scope: !4007, file: !239, line: 351, baseType: !7, size: 32, offset: 192)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "buf_write_count", scope: !4007, file: !239, line: 352, baseType: !7, size: 32, offset: 224)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "buf_write_alloc_count", scope: !4007, file: !239, line: 353, baseType: !7, size: 32, offset: 256)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "buf_read_count", scope: !4007, file: !239, line: 354, baseType: !7, size: 32, offset: 288)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "buf_read_alloc_count", scope: !4007, file: !239, line: 355, baseType: !7, size: 32, offset: 320)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "buf_write_ptr", scope: !4007, file: !239, line: 356, baseType: !7, size: 32, offset: 352)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "buf_read_ptr", scope: !4007, file: !239, line: 357, baseType: !7, size: 32, offset: 384)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "cur_chan", scope: !4007, file: !239, line: 358, baseType: !7, size: 32, offset: 416)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "scans_done", scope: !4007, file: !239, line: 359, baseType: !7, size: 32, offset: 448)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "scan_progress", scope: !4007, file: !239, line: 360, baseType: !7, size: 32, offset: 480)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "munge_chan", scope: !4007, file: !239, line: 361, baseType: !7, size: 32, offset: 512)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "munge_count", scope: !4007, file: !239, line: 362, baseType: !7, size: 32, offset: 544)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "munge_ptr", scope: !4007, file: !239, line: 363, baseType: !7, size: 32, offset: 576)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4007, file: !239, line: 364, baseType: !7, size: 32, offset: 608)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4007, file: !239, line: 365, baseType: !4040, size: 640, offset: 640)
!4040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_cmd", file: !250, line: 589, size: 640, elements: !4041)
!4041 = !{!4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4058}
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "subdev", scope: !4040, file: !250, line: 590, baseType: !7, size: 32)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4040, file: !250, line: 591, baseType: !7, size: 32, offset: 32)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "start_src", scope: !4040, file: !250, line: 593, baseType: !7, size: 32, offset: 64)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "start_arg", scope: !4040, file: !250, line: 594, baseType: !7, size: 32, offset: 96)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "scan_begin_src", scope: !4040, file: !250, line: 596, baseType: !7, size: 32, offset: 128)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "scan_begin_arg", scope: !4040, file: !250, line: 597, baseType: !7, size: 32, offset: 160)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "convert_src", scope: !4040, file: !250, line: 599, baseType: !7, size: 32, offset: 192)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "convert_arg", scope: !4040, file: !250, line: 600, baseType: !7, size: 32, offset: 224)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "scan_end_src", scope: !4040, file: !250, line: 602, baseType: !7, size: 32, offset: 256)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "scan_end_arg", scope: !4040, file: !250, line: 603, baseType: !7, size: 32, offset: 288)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "stop_src", scope: !4040, file: !250, line: 605, baseType: !7, size: 32, offset: 320)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "stop_arg", scope: !4040, file: !250, line: 606, baseType: !7, size: 32, offset: 352)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "chanlist", scope: !4040, file: !250, line: 608, baseType: !2847, size: 64, offset: 384)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "chanlist_len", scope: !4040, file: !250, line: 609, baseType: !7, size: 32, offset: 448)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4040, file: !250, line: 611, baseType: !4057, size: 64, offset: 512)
!4057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !4040, file: !250, line: 612, baseType: !7, size: 32, offset: 576)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "wait_head", scope: !4007, file: !239, line: 366, baseType: !1647, size: 128, offset: 1280)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "cb_mask", scope: !4007, file: !239, line: 367, baseType: !7, size: 32, offset: 1408)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "inttrig", scope: !4007, file: !239, line: 368, baseType: !4062, size: 64, offset: 1472)
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{!323, !324, !3995, !7}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3996, file: !239, line: 165, baseType: !374, size: 64, offset: 384)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !3996, file: !239, line: 166, baseType: !374, size: 64, offset: 448)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "runflags", scope: !3996, file: !239, line: 167, baseType: !7, size: 32, offset: 512)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock", scope: !3996, file: !239, line: 168, baseType: !399, offset: 544)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "io_bits", scope: !3996, file: !239, line: 170, baseType: !7, size: 32, offset: 544)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "maxdata", scope: !3996, file: !239, line: 172, baseType: !7, size: 32, offset: 576)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "maxdata_list", scope: !3996, file: !239, line: 173, baseType: !4072, size: 64, offset: 640)
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "range_table", scope: !3996, file: !239, line: 175, baseType: !4074, size: 64, offset: 704)
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4076)
!4076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_lrange", file: !239, line: 635, size: 32, elements: !4077)
!4077 = !{!4078, !4079}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4076, file: !239, line: 636, baseType: !323, size: 32)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4076, file: !239, line: 637, baseType: !4080, offset: 32)
!4080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4081, elements: !2495)
!4081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_krange", file: !250, line: 685, size: 96, elements: !4082)
!4082 = !{!4083, !4084, !4085}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !4081, file: !250, line: 686, baseType: !323, size: 32)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4081, file: !250, line: 687, baseType: !323, size: 32, offset: 32)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4081, file: !250, line: 688, baseType: !7, size: 32, offset: 64)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "range_table_list", scope: !3996, file: !239, line: 176, baseType: !4087, size: 64, offset: 768)
!4087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4088, size: 64)
!4088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4074)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "chanlist", scope: !3996, file: !239, line: 178, baseType: !2847, size: 64, offset: 832)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "insn_read", scope: !3996, file: !239, line: 180, baseType: !4091, size: 64, offset: 896)
!4091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4092, size: 64)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{!323, !324, !3995, !4094, !2847}
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_insn", file: !250, line: 491, size: 320, elements: !4096)
!4096 = !{!4097, !4098, !4099, !4100, !4101, !4102}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !4095, file: !250, line: 492, baseType: !7, size: 32)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !4095, file: !250, line: 493, baseType: !7, size: 32, offset: 32)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4095, file: !250, line: 494, baseType: !2847, size: 64, offset: 64)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "subdev", scope: !4095, file: !250, line: 495, baseType: !7, size: 32, offset: 128)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "chanspec", scope: !4095, file: !250, line: 496, baseType: !7, size: 32, offset: 160)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4095, file: !250, line: 497, baseType: !4103, size: 96, offset: 192)
!4103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !441)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "insn_write", scope: !3996, file: !239, line: 182, baseType: !4091, size: 64, offset: 960)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "insn_bits", scope: !3996, file: !239, line: 184, baseType: !4091, size: 64, offset: 1024)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "insn_config", scope: !3996, file: !239, line: 186, baseType: !4091, size: 64, offset: 1088)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "do_cmd", scope: !3996, file: !239, line: 191, baseType: !4108, size: 64, offset: 1152)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = !DISubroutineType(types: !4110)
!4110 = !{!323, !324, !3995}
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "do_cmdtest", scope: !3996, file: !239, line: 192, baseType: !4112, size: 64, offset: 1216)
!4112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4113, size: 64)
!4113 = !DISubroutineType(types: !4114)
!4114 = !{!323, !324, !3995, !4115}
!4115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 64)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3996, file: !239, line: 195, baseType: !4108, size: 64, offset: 1280)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3996, file: !239, line: 196, baseType: !4108, size: 64, offset: 1344)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "buf_change", scope: !3996, file: !239, line: 199, baseType: !4108, size: 64, offset: 1408)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "munge", scope: !3996, file: !239, line: 202, baseType: !4120, size: 64, offset: 1472)
!4120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4121, size: 64)
!4121 = !DISubroutineType(types: !4122)
!4122 = !{null, !324, !3995, !374, !7, !7}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "async_dma_dir", scope: !3996, file: !239, line: 205, baseType: !93, size: 32, offset: 1536)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3996, file: !239, line: 207, baseType: !7, size: 32, offset: 1568)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3996, file: !239, line: 209, baseType: !376, size: 64, offset: 1600)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3996, file: !239, line: 210, baseType: !323, size: 32, offset: 1664)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "readback", scope: !3996, file: !239, line: 212, baseType: !2847, size: 64, offset: 1728)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "mmio", scope: !325, file: !239, line: 565, baseType: !374, size: 64, offset: 1216)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "iobase", scope: !325, file: !239, line: 566, baseType: !364, size: 64, offset: 1280)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "iolen", scope: !325, file: !239, line: 567, baseType: !364, size: 64, offset: 1344)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !325, file: !239, line: 568, baseType: !7, size: 32, offset: 1408)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "read_subdev", scope: !325, file: !239, line: 570, baseType: !3995, size: 64, offset: 1472)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "write_subdev", scope: !325, file: !239, line: 571, baseType: !3995, size: 64, offset: 1536)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "async_queue", scope: !325, file: !239, line: 573, baseType: !3123, size: 64, offset: 1600)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !325, file: !239, line: 575, baseType: !4136, size: 64, offset: 1664)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{!323, !324}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !325, file: !239, line: 576, baseType: !357, size: 64, offset: 1728)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "insn_device_config", scope: !325, file: !239, line: 577, baseType: !4141, size: 64, offset: 1792)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!323, !324, !4094, !2847}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "get_valid_routes", scope: !325, file: !239, line: 579, baseType: !4145, size: 64, offset: 1856)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{!7, !324, !7, !2847}
!4148 = !{!4149, !4150, !4151, !4152}
!4149 = !DIEnumerator(name: "OFFSET_0_2", value: 1, isUnsigned: true)
!4150 = !DIEnumerator(name: "GAIN_0_2", value: 2, isUnsigned: true)
!4151 = !DIEnumerator(name: "OFFSET_1_3", value: 4, isUnsigned: true)
!4152 = !DIEnumerator(name: "GAIN_1_3", value: 8, isUnsigned: true)
!4153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "data_bits", scope: !320, file: !3, line: 3563, baseType: !7, size: 32, elements: !4154)
!4154 = !{!4155}
!4155 = !DIEnumerator(name: "NOT_CLEAR_REGISTERS", value: 32, isUnsigned: true)
!4156 = !{!4157, !323, !580, !909, !4159, !582, !4160, !364, !4162}
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4158, size: 64)
!4158 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!4159 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !3070, line: 31, baseType: !582)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4161, size: 64)
!4161 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !482)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !592)
!4164 = !{!0, !4165, !4170, !4175, !4180, !4185, !4190, !4192, !4227, !4229, !4232, !4234, !4237, !4239, !4241, !4246, !4248, !4251, !4254, !4256, !4258, !4263, !4265, !4268, !4270, !4275, !4277, !4279, !4281, !4283, !4288, !4290, !4295, !4297, !4299, !4301, !4306, !4311, !4313, !4315, !4318, !4323, !4325, !4327, !4332, !4334, !4339, !4341, !4343, !4345, !4624}
!4165 = !DIGlobalVariableExpression(var: !4166, expr: !DIExpression())
!4166 = distinct !DIGlobalVariable(name: "__exitcall_cb_pcidas64_driver_exit", scope: !2, file: !3, line: 4120, type: !4167, isLocal: true, isDefinition: true)
!4167 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4168, line: 117, baseType: !4169)
!4168 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!4170 = !DIGlobalVariableExpression(var: !4171, expr: !DIExpression())
!4171 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author235", scope: !2, file: !3, line: 4122, type: !4172, isLocal: true, isDefinition: true, align: 8)
!4172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 392, elements: !4173)
!4173 = !{!4174}
!4174 = !DISubrange(count: 49)
!4175 = !DIGlobalVariableExpression(var: !4176, expr: !DIExpression())
!4176 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description236", scope: !2, file: !3, line: 4123, type: !4177, isLocal: true, isDefinition: true, align: 8)
!4177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 384, elements: !4178)
!4178 = !{!4179}
!4179 = !DISubrange(count: 48)
!4180 = !DIGlobalVariableExpression(var: !4181, expr: !DIExpression())
!4181 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file237", scope: !2, file: !3, line: 4124, type: !4182, isLocal: true, isDefinition: true, align: 8)
!4182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 480, elements: !4183)
!4183 = !{!4184}
!4184 = !DISubrange(count: 60)
!4185 = !DIGlobalVariableExpression(var: !4186, expr: !DIExpression())
!4186 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license238", scope: !2, file: !3, line: 4124, type: !4187, isLocal: true, isDefinition: true, align: 8)
!4187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 192, elements: !4188)
!4188 = !{!4189}
!4189 = !DISubrange(count: 24)
!4190 = !DIGlobalVariableExpression(var: !4191, expr: !DIExpression())
!4191 = distinct !DIGlobalVariable(name: "cb_pcidas64_driver", scope: !2, file: !3, line: 4074, type: !330, isLocal: true, isDefinition: true)
!4192 = !DIGlobalVariableExpression(var: !4193, expr: !DIExpression())
!4193 = distinct !DIGlobalVariable(name: "pcidas64_boards", scope: !2, file: !3, line: 678, type: !4194, isLocal: true, isDefinition: true)
!4194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4195, size: 14784, elements: !4225)
!4195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4196)
!4196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcidas64_board", file: !3, line: 622, size: 704, elements: !4197)
!4197 = !{!4198, !4199, !4200, !4201, !4202, !4203, !4206, !4207, !4208, !4209, !4210, !4213, !4223, !4224}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4196, file: !3, line: 623, baseType: !334, size: 64)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "ai_se_chans", scope: !4196, file: !3, line: 624, baseType: !323, size: 32, offset: 64)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "ai_bits", scope: !4196, file: !3, line: 625, baseType: !323, size: 32, offset: 96)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "ai_speed", scope: !4196, file: !3, line: 626, baseType: !323, size: 32, offset: 128)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "ai_range_table", scope: !4196, file: !3, line: 627, baseType: !4074, size: 64, offset: 192)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "ai_range_code", scope: !4196, file: !3, line: 628, baseType: !4204, size: 64, offset: 256)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1518)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "ao_nchan", scope: !4196, file: !3, line: 629, baseType: !323, size: 32, offset: 320)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "ao_bits", scope: !4196, file: !3, line: 630, baseType: !323, size: 32, offset: 352)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "ao_scan_speed", scope: !4196, file: !3, line: 631, baseType: !323, size: 32, offset: 384)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "ao_range_table", scope: !4196, file: !3, line: 632, baseType: !4074, size: 64, offset: 448)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "ao_range_code", scope: !4196, file: !3, line: 633, baseType: !4211, size: 64, offset: 512)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "ai_fifo", scope: !4196, file: !3, line: 634, baseType: !4214, size: 64, offset: 576)
!4214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4215)
!4215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4216, size: 64)
!4216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4217)
!4217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hw_fifo_info", file: !3, line: 584, size: 128, elements: !4218)
!4218 = !{!4219, !4220, !4221, !4222}
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "num_segments", scope: !4217, file: !3, line: 585, baseType: !7, size: 32)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_length", scope: !4217, file: !3, line: 586, baseType: !7, size: 32, offset: 32)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "sample_packing_ratio", scope: !4217, file: !3, line: 587, baseType: !7, size: 32, offset: 64)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_size_reg_mask", scope: !4217, file: !3, line: 588, baseType: !1025, size: 16, offset: 96)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !4196, file: !3, line: 636, baseType: !100, size: 32, offset: 640)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "has_8255", scope: !4196, file: !3, line: 637, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!4225 = !{!4226}
!4226 = !DISubrange(count: 21)
!4227 = !DIGlobalVariableExpression(var: !4228, expr: !DIExpression())
!4228 = distinct !DIGlobalVariable(name: "ai_ranges_64xx", scope: !2, file: !3, line: 424, type: !4075, isLocal: true, isDefinition: true)
!4229 = !DIGlobalVariableExpression(var: !4230, expr: !DIExpression())
!4230 = distinct !DIGlobalVariable(name: "ai_range_code_64xx", scope: !2, file: !3, line: 437, type: !4231, isLocal: true, isDefinition: true)
!4231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4205, size: 64, elements: !1496)
!4232 = !DIGlobalVariableExpression(var: !4233, expr: !DIExpression())
!4233 = distinct !DIGlobalVariable(name: "ao_ranges_64xx", scope: !2, file: !3, line: 534, type: !4075, isLocal: true, isDefinition: true)
!4234 = !DIGlobalVariableExpression(var: !4235, expr: !DIExpression())
!4235 = distinct !DIGlobalVariable(name: "ao_range_code_64xx", scope: !2, file: !3, line: 543, type: !4236, isLocal: true, isDefinition: true)
!4236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4212, size: 128, elements: !1321)
!4237 = !DIGlobalVariableExpression(var: !4238, expr: !DIExpression())
!4238 = distinct !DIGlobalVariable(name: "ai_fifo_64xx", scope: !2, file: !3, line: 647, type: !4216, isLocal: true, isDefinition: true)
!4239 = !DIGlobalVariableExpression(var: !4240, expr: !DIExpression())
!4240 = distinct !DIGlobalVariable(name: "ai_ranges_64_mx", scope: !2, file: !3, line: 443, type: !4075, isLocal: true, isDefinition: true)
!4241 = !DIGlobalVariableExpression(var: !4242, expr: !DIExpression())
!4242 = distinct !DIGlobalVariable(name: "ai_range_code_64_mx", scope: !2, file: !3, line: 455, type: !4243, isLocal: true, isDefinition: true)
!4243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4205, size: 56, elements: !4244)
!4244 = !{!4245}
!4245 = !DISubrange(count: 7)
!4246 = !DIGlobalVariableExpression(var: !4247, expr: !DIExpression())
!4247 = distinct !DIGlobalVariable(name: "ai_ranges_60xx", scope: !2, file: !3, line: 461, type: !4075, isLocal: true, isDefinition: true)
!4248 = !DIGlobalVariableExpression(var: !4249, expr: !DIExpression())
!4249 = distinct !DIGlobalVariable(name: "ai_range_code_60xx", scope: !2, file: !3, line: 470, type: !4250, isLocal: true, isDefinition: true)
!4250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4205, size: 32, elements: !1321)
!4251 = !DIGlobalVariableExpression(var: !4252, expr: !DIExpression())
!4252 = distinct !DIGlobalVariable(name: "ao_range_code_60xx", scope: !2, file: !3, line: 550, type: !4253, isLocal: true, isDefinition: true)
!4253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4212, size: 32, elements: !1537)
!4254 = !DIGlobalVariableExpression(var: !4255, expr: !DIExpression())
!4255 = distinct !DIGlobalVariable(name: "ai_fifo_60xx", scope: !2, file: !3, line: 654, type: !4216, isLocal: true, isDefinition: true)
!4256 = !DIGlobalVariableExpression(var: !4257, expr: !DIExpression())
!4257 = distinct !DIGlobalVariable(name: "ai_ranges_6030", scope: !2, file: !3, line: 475, type: !4075, isLocal: true, isDefinition: true)
!4258 = !DIGlobalVariableExpression(var: !4259, expr: !DIExpression())
!4259 = distinct !DIGlobalVariable(name: "ai_range_code_6030", scope: !2, file: !3, line: 494, type: !4260, isLocal: true, isDefinition: true)
!4260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4205, size: 112, elements: !4261)
!4261 = !{!4262}
!4262 = !DISubrange(count: 14)
!4263 = !DIGlobalVariableExpression(var: !4264, expr: !DIExpression())
!4264 = distinct !DIGlobalVariable(name: "ao_ranges_6030", scope: !2, file: !3, line: 554, type: !4075, isLocal: true, isDefinition: true)
!4265 = !DIGlobalVariableExpression(var: !4266, expr: !DIExpression())
!4266 = distinct !DIGlobalVariable(name: "ao_range_code_6030", scope: !2, file: !3, line: 561, type: !4267, isLocal: true, isDefinition: true)
!4267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4212, size: 64, elements: !1735)
!4268 = !DIGlobalVariableExpression(var: !4269, expr: !DIExpression())
!4269 = distinct !DIGlobalVariable(name: "ai_ranges_6052", scope: !2, file: !3, line: 500, type: !4075, isLocal: true, isDefinition: true)
!4270 = !DIGlobalVariableExpression(var: !4271, expr: !DIExpression())
!4271 = distinct !DIGlobalVariable(name: "ai_range_code_6052", scope: !2, file: !3, line: 520, type: !4272, isLocal: true, isDefinition: true)
!4272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4205, size: 120, elements: !4273)
!4273 = !{!4274}
!4274 = !DISubrange(count: 15)
!4275 = !DIGlobalVariableExpression(var: !4276, expr: !DIExpression())
!4276 = distinct !DIGlobalVariable(name: "ai_ranges_4020", scope: !2, file: !3, line: 526, type: !4075, isLocal: true, isDefinition: true)
!4277 = !DIGlobalVariableExpression(var: !4278, expr: !DIExpression())
!4278 = distinct !DIGlobalVariable(name: "ao_ranges_4020", scope: !2, file: !3, line: 566, type: !4075, isLocal: true, isDefinition: true)
!4279 = !DIGlobalVariableExpression(var: !4280, expr: !DIExpression())
!4280 = distinct !DIGlobalVariable(name: "ao_range_code_4020", scope: !2, file: !3, line: 573, type: !4267, isLocal: true, isDefinition: true)
!4281 = !DIGlobalVariableExpression(var: !4282, expr: !DIExpression())
!4282 = distinct !DIGlobalVariable(name: "ai_fifo_4020", scope: !2, file: !3, line: 640, type: !4216, isLocal: true, isDefinition: true)
!4283 = !DIGlobalVariableExpression(var: !4284, expr: !DIExpression())
!4284 = distinct !DIGlobalVariable(name: "increment_size", scope: !4285, file: !3, line: 1369, type: !4212, isLocal: true, isDefinition: true)
!4285 = distinct !DISubprogram(name: "set_ai_fifo_segment_length", scope: !3, file: !3, line: 1364, type: !4286, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!323, !324, !7}
!4288 = !DIGlobalVariableExpression(var: !4289, expr: !DIExpression(DW_OP_constu, 2, DW_OP_stack_value))
!4289 = distinct !DIGlobalVariable(name: "bytes_in_sample", scope: !2, file: !3, line: 676, type: !4212, isLocal: true, isDefinition: true)
!4290 = !DIGlobalVariableExpression(var: !4291, expr: !DIExpression())
!4291 = distinct !DIGlobalVariable(name: "min_convert_divisor", scope: !4292, file: !3, line: 2022, type: !4212, isLocal: true, isDefinition: true)
!4292 = distinct !DISubprogram(name: "check_adc_timing", scope: !3, file: !3, line: 2017, type: !4293, scopeLine: 2018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{null, !324, !4115}
!4295 = !DIGlobalVariableExpression(var: !4296, expr: !DIExpression())
!4296 = distinct !DIGlobalVariable(name: "max_convert_divisor", scope: !4292, file: !3, line: 2023, type: !4212, isLocal: true, isDefinition: true)
!4297 = !DIGlobalVariableExpression(var: !4298, expr: !DIExpression())
!4298 = distinct !DIGlobalVariable(name: "min_scan_divisor_4020", scope: !4292, file: !3, line: 2025, type: !4212, isLocal: true, isDefinition: true)
!4299 = !DIGlobalVariableExpression(var: !4300, expr: !DIExpression(DW_OP_constu, 16777215, DW_OP_stack_value))
!4300 = distinct !DIGlobalVariable(name: "max_counter_value", scope: !2, file: !3, line: 92, type: !4212, isLocal: true, isDefinition: true)
!4301 = !DIGlobalVariableExpression(var: !4302, expr: !DIExpression())
!4302 = distinct !DIGlobalVariable(name: "read_bit", scope: !4303, file: !3, line: 1696, type: !4212, isLocal: true, isDefinition: true)
!4303 = distinct !DISubprogram(name: "i2c_write", scope: !3, file: !3, line: 1690, type: !4304, scopeLine: 1692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{null, !324, !7, !4204, !7}
!4306 = !DIGlobalVariableExpression(var: !4307, expr: !DIExpression())
!4307 = distinct !DIGlobalVariable(name: "clock_bit", scope: !4308, file: !3, line: 1633, type: !4212, isLocal: true, isDefinition: true)
!4308 = distinct !DISubprogram(name: "i2c_set_scl", scope: !3, file: !3, line: 1630, type: !4309, scopeLine: 1631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{null, !324, !323}
!4311 = !DIGlobalVariableExpression(var: !4312, expr: !DIExpression(DW_OP_constu, 1000, DW_OP_stack_value))
!4312 = distinct !DIGlobalVariable(name: "i2c_high_udelay", scope: !2, file: !3, line: 1607, type: !4212, isLocal: true, isDefinition: true)
!4313 = !DIGlobalVariableExpression(var: !4314, expr: !DIExpression(DW_OP_constu, 10, DW_OP_stack_value))
!4314 = distinct !DIGlobalVariable(name: "i2c_low_udelay", scope: !2, file: !3, line: 1608, type: !4212, isLocal: true, isDefinition: true)
!4315 = !DIGlobalVariableExpression(var: !4316, expr: !DIExpression())
!4316 = distinct !DIGlobalVariable(name: "data_bit", scope: !4317, file: !3, line: 1614, type: !4212, isLocal: true, isDefinition: true)
!4317 = distinct !DISubprogram(name: "i2c_set_sda", scope: !3, file: !3, line: 1611, type: !4309, scopeLine: 1612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4318 = !DIGlobalVariableExpression(var: !4319, expr: !DIExpression())
!4319 = distinct !DIGlobalVariable(name: "num_caldac_channels", scope: !4320, file: !3, line: 3522, type: !4212, isLocal: true, isDefinition: true)
!4320 = distinct !DISubprogram(name: "caldac_8800_write", scope: !3, file: !3, line: 3518, type: !4321, scopeLine: 3520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4321 = !DISubroutineType(types: !4322)
!4322 = !{!323, !324, !7, !1518}
!4323 = !DIGlobalVariableExpression(var: !4324, expr: !DIExpression())
!4324 = distinct !DIGlobalVariable(name: "bitstream_length", scope: !4320, file: !3, line: 3523, type: !4212, isLocal: true, isDefinition: true)
!4325 = !DIGlobalVariableExpression(var: !4326, expr: !DIExpression())
!4326 = distinct !DIGlobalVariable(name: "caldac_8800_udelay", scope: !4320, file: !3, line: 3526, type: !4212, isLocal: true, isDefinition: true)
!4327 = !DIGlobalVariableExpression(var: !4328, expr: !DIExpression())
!4328 = distinct !DIGlobalVariable(name: "bitstream_length", scope: !4329, file: !3, line: 3655, type: !4212, isLocal: true, isDefinition: true)
!4329 = distinct !DISubprogram(name: "ad8402_write", scope: !3, file: !3, line: 3651, type: !4330, scopeLine: 3653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{null, !324, !7, !7}
!4332 = !DIGlobalVariableExpression(var: !4333, expr: !DIExpression())
!4333 = distinct !DIGlobalVariable(name: "ad8402_udelay", scope: !4329, file: !3, line: 3658, type: !4212, isLocal: true, isDefinition: true)
!4334 = !DIGlobalVariableExpression(var: !4335, expr: !DIExpression())
!4335 = distinct !DIGlobalVariable(name: "bitstream_length", scope: !4336, file: !3, line: 3707, type: !4212, isLocal: true, isDefinition: true)
!4336 = distinct !DISubprogram(name: "read_eeprom", scope: !3, file: !3, line: 3704, type: !4337, scopeLine: 3705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4337 = !DISubroutineType(types: !4338)
!4338 = !{!1025, !324, !1518}
!4339 = !DIGlobalVariableExpression(var: !4340, expr: !DIExpression())
!4340 = distinct !DIGlobalVariable(name: "read_command", scope: !4336, file: !3, line: 3708, type: !4212, isLocal: true, isDefinition: true)
!4341 = !DIGlobalVariableExpression(var: !4342, expr: !DIExpression())
!4342 = distinct !DIGlobalVariable(name: "value_length", scope: !4336, file: !3, line: 3714, type: !4212, isLocal: true, isDefinition: true)
!4343 = !DIGlobalVariableExpression(var: !4344, expr: !DIExpression())
!4344 = distinct !DIGlobalVariable(name: "eeprom_udelay", scope: !4336, file: !3, line: 3715, type: !4212, isLocal: true, isDefinition: true)
!4345 = !DIGlobalVariableExpression(var: !4346, expr: !DIExpression())
!4346 = distinct !DIGlobalVariable(name: "cb_pcidas64_pci_driver", scope: !2, file: !3, line: 4114, type: !4347, isLocal: true, isDefinition: true)
!4347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !4348, line: 858, size: 2048, elements: !4349)
!4348 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!4349 = !{!4350, !4351, !4352, !4364, !4582, !4586, !4590, !4594, !4595, !4599, !4617, !4618, !4619}
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4347, file: !4348, line: 859, baseType: !385, size: 128)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4347, file: !4348, line: 860, baseType: !334, size: 64, offset: 128)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4347, file: !4348, line: 861, baseType: !4353, size: 64, offset: 192)
!4353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4354, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4355)
!4355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3620, line: 38, size: 256, elements: !4356)
!4356 = !{!4357, !4358, !4359, !4360, !4361, !4362, !4363}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4355, file: !3620, line: 39, baseType: !582, size: 32)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4355, file: !3620, line: 39, baseType: !582, size: 32, offset: 32)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4355, file: !3620, line: 40, baseType: !582, size: 32, offset: 64)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4355, file: !3620, line: 40, baseType: !582, size: 32, offset: 96)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4355, file: !3620, line: 41, baseType: !582, size: 32, offset: 128)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4355, file: !3620, line: 41, baseType: !582, size: 32, offset: 160)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4355, file: !3620, line: 42, baseType: !3639, size: 64, offset: 192)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4347, file: !4348, line: 862, baseType: !4365, size: 64, offset: 256)
!4365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4366, size: 64)
!4366 = !DISubroutineType(types: !4367)
!4367 = !{!323, !4368, !4353}
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !4348, line: 309, size: 19264, elements: !4370)
!4370 = !{!4371, !4372, !4445, !4446, !4447, !4448, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4476, !4478, !4479, !4480, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4504, !4505, !4506, !4507, !4509, !4510, !4511, !4512, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4555, !4556, !4558, !4559, !4560, !4561, !4563, !4564, !4565, !4568, !4575, !4576, !4577, !4578, !4579, !4580, !4581}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !4369, file: !4348, line: 310, baseType: !385, size: 128)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4369, file: !4348, line: 311, baseType: !4373, size: 64, offset: 128)
!4373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4374, size: 64)
!4374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !4348, line: 605, size: 8064, elements: !4375)
!4375 = !{!4376, !4377, !4378, !4379, !4380, !4381, !4382, !4397, !4398, !4399, !4423, !4426, !4427, !4431, !4432, !4433, !4434, !4435, !4437, !4438, !4440, !4441, !4442, !4443, !4444}
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4374, file: !4348, line: 606, baseType: !385, size: 128)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4374, file: !4348, line: 607, baseType: !4373, size: 64, offset: 128)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4374, file: !4348, line: 608, baseType: !385, size: 128, offset: 192)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4374, file: !4348, line: 609, baseType: !385, size: 128, offset: 320)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4374, file: !4348, line: 610, baseType: !4368, size: 64, offset: 448)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !4374, file: !4348, line: 611, baseType: !385, size: 128, offset: 512)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4374, file: !4348, line: 613, baseType: !4383, size: 256, offset: 640)
!4383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4384, size: 256, elements: !1321)
!4384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4385, size: 64)
!4385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4386, line: 20, size: 512, elements: !4387)
!4386 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4387 = !{!4388, !4390, !4391, !4392, !4393, !4394, !4395, !4396}
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4385, file: !4386, line: 21, baseType: !4389, size: 64)
!4389 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !386, line: 158, baseType: !2293)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4385, file: !4386, line: 22, baseType: !4389, size: 64, offset: 64)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4385, file: !4386, line: 23, baseType: !334, size: 64, offset: 128)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4385, file: !4386, line: 24, baseType: !364, size: 64, offset: 192)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4385, file: !4386, line: 25, baseType: !364, size: 64, offset: 256)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4385, file: !4386, line: 26, baseType: !4384, size: 64, offset: 320)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4385, file: !4386, line: 26, baseType: !4384, size: 64, offset: 384)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4385, file: !4386, line: 26, baseType: !4384, size: 64, offset: 448)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4374, file: !4348, line: 614, baseType: !385, size: 128, offset: 896)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !4374, file: !4348, line: 615, baseType: !4385, size: 512, offset: 1024)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4374, file: !4348, line: 617, baseType: !4400, size: 64, offset: 1536)
!4400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4401, size: 64)
!4401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !4348, line: 731, size: 320, elements: !4402)
!4402 = !{!4403, !4407, !4411, !4415, !4419}
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !4401, file: !4348, line: 732, baseType: !4404, size: 64)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{!323, !4373}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !4401, file: !4348, line: 733, baseType: !4408, size: 64, offset: 64)
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 64)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{null, !4373}
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !4401, file: !4348, line: 734, baseType: !4412, size: 64, offset: 128)
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4413, size: 64)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{!374, !4373, !7, !323}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4401, file: !4348, line: 735, baseType: !4416, size: 64, offset: 192)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4417 = !DISubroutineType(types: !4418)
!4418 = !{!323, !4373, !7, !323, !323, !1581}
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4401, file: !4348, line: 736, baseType: !4420, size: 64, offset: 256)
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 64)
!4421 = !DISubroutineType(types: !4422)
!4422 = !{!323, !4373, !7, !323, !323, !580}
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4374, file: !4348, line: 618, baseType: !4424, size: 64, offset: 1600)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 64)
!4425 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !4348, line: 537, flags: DIFlagFwdDecl)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4374, file: !4348, line: 619, baseType: !374, size: 64, offset: 1664)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !4374, file: !4348, line: 620, baseType: !4428, size: 64, offset: 1728)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !4430, line: 123, flags: DIFlagFwdDecl)
!4430 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4374, file: !4348, line: 622, baseType: !592, size: 8, offset: 1792)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !4374, file: !4348, line: 623, baseType: !592, size: 8, offset: 1800)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !4374, file: !4348, line: 624, baseType: !592, size: 8, offset: 1808)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !4374, file: !4348, line: 625, baseType: !592, size: 8, offset: 1816)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4374, file: !4348, line: 630, baseType: !4436, size: 384, offset: 1824)
!4436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 384, elements: !4178)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !4374, file: !4348, line: 632, baseType: !482, size: 16, offset: 2208)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !4374, file: !4348, line: 633, baseType: !4439, size: 16, offset: 2224)
!4439 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !4348, line: 237, baseType: !482)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !4374, file: !4348, line: 634, baseType: !376, size: 64, offset: 2240)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4374, file: !4348, line: 635, baseType: !377, size: 5568, offset: 2304)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !4374, file: !4348, line: 636, baseType: !507, size: 64, offset: 7872)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !4374, file: !4348, line: 637, baseType: !507, size: 64, offset: 7936)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !4374, file: !4348, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !4369, file: !4348, line: 312, baseType: !4373, size: 64, offset: 192)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4369, file: !4348, line: 314, baseType: !374, size: 64, offset: 256)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !4369, file: !4348, line: 315, baseType: !4428, size: 64, offset: 320)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4369, file: !4348, line: 316, baseType: !4449, size: 64, offset: 384)
!4449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 64)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !4348, line: 69, size: 832, elements: !4451)
!4451 = !{!4452, !4453, !4454, !4457, !4458}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4450, file: !4348, line: 70, baseType: !4373, size: 64)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4450, file: !4348, line: 71, baseType: !385, size: 128, offset: 64)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4450, file: !4348, line: 72, baseType: !4455, size: 64, offset: 192)
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !4348, line: 72, flags: DIFlagFwdDecl)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4450, file: !4348, line: 73, baseType: !592, size: 8, offset: 256)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4450, file: !4348, line: 74, baseType: !380, size: 512, offset: 320)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !4369, file: !4348, line: 318, baseType: !7, size: 32, offset: 448)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4369, file: !4348, line: 319, baseType: !482, size: 16, offset: 480)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4369, file: !4348, line: 320, baseType: !482, size: 16, offset: 496)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4369, file: !4348, line: 321, baseType: !482, size: 16, offset: 512)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4369, file: !4348, line: 322, baseType: !482, size: 16, offset: 528)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4369, file: !4348, line: 323, baseType: !7, size: 32, offset: 544)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4369, file: !4348, line: 324, baseType: !1518, size: 8, offset: 576)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4369, file: !4348, line: 325, baseType: !1518, size: 8, offset: 584)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !4369, file: !4348, line: 330, baseType: !1518, size: 8, offset: 592)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !4369, file: !4348, line: 331, baseType: !1518, size: 8, offset: 600)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !4369, file: !4348, line: 332, baseType: !1518, size: 8, offset: 608)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !4369, file: !4348, line: 333, baseType: !1518, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !4369, file: !4348, line: 334, baseType: !1518, size: 8, offset: 624)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4369, file: !4348, line: 335, baseType: !1518, size: 8, offset: 632)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !4369, file: !4348, line: 336, baseType: !1025, size: 16, offset: 640)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !4369, file: !4348, line: 337, baseType: !4475, size: 64, offset: 704)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4369, file: !4348, line: 339, baseType: !4477, size: 64, offset: 768)
!4477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4347, size: 64)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4369, file: !4348, line: 340, baseType: !586, size: 64, offset: 832)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4369, file: !4348, line: 346, baseType: !3832, size: 128, offset: 896)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !4369, file: !4348, line: 348, baseType: !4481, size: 32, offset: 1024)
!4481 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !4348, line: 155, baseType: !323)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !4369, file: !4348, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !4369, file: !4348, line: 352, baseType: !1518, size: 8, offset: 1064)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !4369, file: !4348, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !4369, file: !4348, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !4369, file: !4348, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !4369, file: !4348, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !4369, file: !4348, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !4369, file: !4348, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !4369, file: !4348, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !4369, file: !4348, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !4369, file: !4348, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !4369, file: !4348, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !4369, file: !4348, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !4369, file: !4348, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !4369, file: !4348, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !4369, file: !4348, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !4369, file: !4348, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !4369, file: !4348, line: 376, baseType: !7, size: 32, offset: 1120)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !4369, file: !4348, line: 377, baseType: !7, size: 32, offset: 1152)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !4369, file: !4348, line: 380, baseType: !4502, size: 64, offset: 1216)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4503, size: 64)
!4503 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !4348, line: 303, flags: DIFlagFwdDecl)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !4369, file: !4348, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !4369, file: !4348, line: 383, baseType: !323, size: 32, offset: 1312)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !4369, file: !4348, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !4369, file: !4348, line: 387, baseType: !4508, size: 32, offset: 1376)
!4508 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !4348, line: 180, baseType: !7)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4369, file: !4348, line: 388, baseType: !377, size: 5568, offset: 1408)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !4369, file: !4348, line: 390, baseType: !323, size: 32, offset: 6976)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4369, file: !4348, line: 396, baseType: !7, size: 32, offset: 7008)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4369, file: !4348, line: 397, baseType: !4513, size: 8704, offset: 7040)
!4513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4385, size: 8704, elements: !4514)
!4514 = !{!4515}
!4515 = !DISubrange(count: 17)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4369, file: !4348, line: 399, baseType: !655, size: 8, offset: 15744)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !4369, file: !4348, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !4369, file: !4348, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !4369, file: !4348, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !4369, file: !4348, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !4369, file: !4348, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !4369, file: !4348, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !4369, file: !4348, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !4369, file: !4348, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !4369, file: !4348, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !4369, file: !4348, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !4369, file: !4348, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !4369, file: !4348, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !4369, file: !4348, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !4369, file: !4348, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !4369, file: !4348, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !4369, file: !4348, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !4369, file: !4348, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4369, file: !4348, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !4369, file: !4348, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !4369, file: !4348, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !4369, file: !4348, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !4369, file: !4348, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !4369, file: !4348, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !4369, file: !4348, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !4369, file: !4348, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !4369, file: !4348, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !4369, file: !4348, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !4369, file: !4348, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !4369, file: !4348, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !4369, file: !4348, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !4369, file: !4348, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !4369, file: !4348, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !4369, file: !4348, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !4369, file: !4348, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !4369, file: !4348, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !4369, file: !4348, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !4369, file: !4348, line: 450, baseType: !4554, size: 16, offset: 15792)
!4554 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !4348, line: 206, baseType: !482)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !4369, file: !4348, line: 451, baseType: !913, size: 32, offset: 15808)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !4369, file: !4348, line: 453, baseType: !4557, size: 512, offset: 15840)
!4557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !580, size: 512, elements: !1901)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !4369, file: !4348, line: 454, baseType: !800, size: 64, offset: 16384)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !4369, file: !4348, line: 455, baseType: !507, size: 64, offset: 16448)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !4369, file: !4348, line: 456, baseType: !323, size: 32, offset: 16512)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !4369, file: !4348, line: 457, baseType: !4562, size: 1088, offset: 16576)
!4562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 1088, elements: !4514)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !4369, file: !4348, line: 458, baseType: !4562, size: 1088, offset: 17664)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !4369, file: !4348, line: 469, baseType: !493, size: 64, offset: 18752)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !4369, file: !4348, line: 471, baseType: !4566, size: 64, offset: 18816)
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4567, size: 64)
!4567 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !4348, line: 304, flags: DIFlagFwdDecl)
!4568 = !DIDerivedType(tag: DW_TAG_member, scope: !4369, file: !4348, line: 478, baseType: !4569, size: 64, offset: 18880)
!4569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4369, file: !4348, line: 478, size: 64, elements: !4570)
!4570 = !{!4571, !4574}
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4569, file: !4348, line: 479, baseType: !4572, size: 64)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 64)
!4573 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4348, line: 305, flags: DIFlagFwdDecl)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4569, file: !4348, line: 480, baseType: !4368, size: 64)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !4369, file: !4348, line: 482, baseType: !1025, size: 16, offset: 18944)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !4369, file: !4348, line: 483, baseType: !1518, size: 8, offset: 18960)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !4369, file: !4348, line: 497, baseType: !1025, size: 16, offset: 18976)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !4369, file: !4348, line: 498, baseType: !2293, size: 64, offset: 19008)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !4369, file: !4348, line: 499, baseType: !487, size: 64, offset: 19072)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4369, file: !4348, line: 500, baseType: !440, size: 64, offset: 19136)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !4369, file: !4348, line: 502, baseType: !364, size: 64, offset: 19200)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4347, file: !4348, line: 863, baseType: !4583, size: 64, offset: 320)
!4583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4584, size: 64)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{null, !4368}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4347, file: !4348, line: 864, baseType: !4587, size: 64, offset: 384)
!4587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4588, size: 64)
!4588 = !DISubroutineType(types: !4589)
!4589 = !{!323, !4368, !3650}
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4347, file: !4348, line: 865, baseType: !4591, size: 64, offset: 448)
!4591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4592, size: 64)
!4592 = !DISubroutineType(types: !4593)
!4593 = !{!323, !4368}
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4347, file: !4348, line: 866, baseType: !4583, size: 64, offset: 512)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4347, file: !4348, line: 867, baseType: !4596, size: 64, offset: 576)
!4596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4597, size: 64)
!4597 = !DISubroutineType(types: !4598)
!4598 = !{!323, !4368, !323}
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4347, file: !4348, line: 868, baseType: !4600, size: 64, offset: 640)
!4600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4601, size: 64)
!4601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4602)
!4602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !4348, line: 795, size: 384, elements: !4603)
!4603 = !{!4604, !4609, !4613, !4614, !4615, !4616}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4602, file: !4348, line: 797, baseType: !4605, size: 64)
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4606, size: 64)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{!4608, !4368, !4508}
!4608 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !4348, line: 772, baseType: !7)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4602, file: !4348, line: 801, baseType: !4610, size: 64, offset: 64)
!4610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4611, size: 64)
!4611 = !DISubroutineType(types: !4612)
!4612 = !{!4608, !4368}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4602, file: !4348, line: 804, baseType: !4610, size: 64, offset: 128)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4602, file: !4348, line: 807, baseType: !4583, size: 64, offset: 192)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4602, file: !4348, line: 808, baseType: !4583, size: 64, offset: 256)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4602, file: !4348, line: 811, baseType: !4583, size: 64, offset: 320)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4347, file: !4348, line: 869, baseType: !493, size: 64, offset: 704)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4347, file: !4348, line: 870, baseType: !3608, size: 1152, offset: 768)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4347, file: !4348, line: 871, baseType: !4620, size: 128, offset: 1920)
!4620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !4348, line: 759, size: 128, elements: !4621)
!4621 = !{!4622, !4623}
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4620, file: !4348, line: 760, baseType: !399)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4620, file: !4348, line: 761, baseType: !385, size: 128)
!4624 = !DIGlobalVariableExpression(var: !4625, expr: !DIExpression())
!4625 = distinct !DIGlobalVariable(name: "cb_pcidas64_pci_table", scope: !2, file: !3, line: 4088, type: !4626, isLocal: true, isDefinition: true)
!4626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4354, size: 5632, elements: !4627)
!4627 = !{!4628}
!4628 = !DISubrange(count: 22)
!4629 = !{!"rsp"}
!4630 = !{i32 7, !"Dwarf Version", i32 4}
!4631 = !{i32 2, !"Debug Info Version", i32 3}
!4632 = !{i32 1, !"wchar_size", i32 2}
!4633 = !{i32 1, !"Code Model", i32 2}
!4634 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4635 = distinct !DISubprogram(name: "cb_pcidas64_driver_init", scope: !3, file: !3, line: 4120, type: !4636, scopeLine: 4120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!323}
!4638 = !DILocation(line: 4120, column: 1, scope: !4635)
!4639 = distinct !DISubprogram(name: "cb_pcidas64_driver_exit", scope: !3, file: !3, line: 4120, type: !2046, scopeLine: 4120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4640 = !DILocation(line: 4120, column: 1, scope: !4639)
!4641 = distinct !DISubprogram(name: "detach", scope: !3, file: !3, line: 4054, type: !358, scopeLine: 4055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4642 = !DILocalVariable(name: "dev", arg: 1, scope: !4641, file: !3, line: 4054, type: !324)
!4643 = !DILocation(line: 4054, column: 42, scope: !4641)
!4644 = !DILocalVariable(name: "devpriv", scope: !4641, file: !3, line: 4056, type: !4645)
!4645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4646, size: 64)
!4646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcidas64_private", file: !3, line: 1118, size: 150592, elements: !4647)
!4647 = !{!4648, !4649, !4650, !4651, !4652, !4653, !4654, !4657, !4659, !4668, !4669, !4670, !4672, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4695}
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "main_phys_iobase", scope: !4646, file: !3, line: 1120, baseType: !4389, size: 64)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "dio_counter_phys_iobase", scope: !4646, file: !3, line: 1121, baseType: !4389, size: 64, offset: 64)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "plx9080_iobase", scope: !4646, file: !3, line: 1123, baseType: !374, size: 64, offset: 128)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "main_iobase", scope: !4646, file: !3, line: 1124, baseType: !374, size: 64, offset: 192)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "local0_iobase", scope: !4646, file: !3, line: 1126, baseType: !580, size: 32, offset: 256)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "local1_iobase", scope: !4646, file: !3, line: 1127, baseType: !580, size: 32, offset: 288)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "ai_buffer", scope: !4646, file: !3, line: 1129, baseType: !4655, size: 8192, offset: 320)
!4655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4656, size: 8192, elements: !3626)
!4656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "ai_buffer_bus_addr", scope: !4646, file: !3, line: 1131, baseType: !4658, size: 8192, offset: 8512)
!4658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1086, size: 8192, elements: !3626)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "ai_dma_desc", scope: !4646, file: !3, line: 1136, baseType: !4660, size: 64, offset: 16704)
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 64)
!4661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plx_dma_desc", file: !4662, line: 42, size: 128, elements: !4663)
!4662 = !DIFile(filename: "drivers/staging/comedi/drivers/plx9080.h", directory: "/home/lizy2001/genbc/linux")
!4663 = !{!4664, !4665, !4666, !4667}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "pci_start_addr", scope: !4661, file: !4662, line: 43, baseType: !4159, size: 32)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "local_start_addr", scope: !4661, file: !4662, line: 44, baseType: !4159, size: 32, offset: 32)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_size", scope: !4661, file: !4662, line: 45, baseType: !4159, size: 32, offset: 64)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4661, file: !4662, line: 46, baseType: !4159, size: 32, offset: 96)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "ai_dma_desc_bus_addr", scope: !4646, file: !3, line: 1138, baseType: !1086, size: 64, offset: 16768)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "ai_dma_index", scope: !4646, file: !3, line: 1143, baseType: !7, size: 32, offset: 16832)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "ao_buffer", scope: !4646, file: !3, line: 1145, baseType: !4671, size: 1024, offset: 16896)
!4671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4656, size: 1024, elements: !1901)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "ao_buffer_bus_addr", scope: !4646, file: !3, line: 1147, baseType: !4673, size: 1024, offset: 17920)
!4673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1086, size: 1024, elements: !1901)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "ao_dma_desc", scope: !4646, file: !3, line: 1148, baseType: !4660, size: 64, offset: 18944)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "ao_dma_desc_bus_addr", scope: !4646, file: !3, line: 1149, baseType: !1086, size: 64, offset: 19008)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "ao_dma_index", scope: !4646, file: !3, line: 1151, baseType: !7, size: 32, offset: 19072)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "hw_revision", scope: !4646, file: !3, line: 1152, baseType: !7, size: 32, offset: 19104)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "intr_enable_bits", scope: !4646, file: !3, line: 1154, baseType: !7, size: 32, offset: 19136)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "adc_control1_bits", scope: !4646, file: !3, line: 1156, baseType: !1025, size: 16, offset: 19168)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_size_bits", scope: !4646, file: !3, line: 1158, baseType: !1025, size: 16, offset: 19184)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "hw_config_bits", scope: !4646, file: !3, line: 1160, baseType: !1025, size: 16, offset: 19200)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "dac_control1_bits", scope: !4646, file: !3, line: 1161, baseType: !1025, size: 16, offset: 19216)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "plx_control_bits", scope: !4646, file: !3, line: 1163, baseType: !580, size: 32, offset: 19232)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "plx_intcsr_bits", scope: !4646, file: !3, line: 1165, baseType: !580, size: 32, offset: 19264)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "calibration_source", scope: !4646, file: !3, line: 1167, baseType: !323, size: 32, offset: 19296)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_cal_range_bits", scope: !4646, file: !3, line: 1169, baseType: !1518, size: 8, offset: 19328)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "ext_trig_falling", scope: !4646, file: !3, line: 1171, baseType: !7, size: 32, offset: 19360)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "ai_cmd_running", scope: !4646, file: !3, line: 1172, baseType: !1371, size: 16, offset: 19392)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "ai_fifo_segment_length", scope: !4646, file: !3, line: 1173, baseType: !7, size: 32, offset: 19424)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "ext_clock", scope: !4646, file: !3, line: 1174, baseType: !4691, size: 64, offset: 19456)
!4691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ext_clock_info", file: !3, line: 1110, size: 64, elements: !4692)
!4692 = !{!4693, !4694}
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "divisor", scope: !4691, file: !3, line: 1112, baseType: !7, size: 32)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "chanspec", scope: !4691, file: !3, line: 1114, baseType: !7, size: 32, offset: 32)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "ao_bounce_buffer", scope: !4646, file: !3, line: 1175, baseType: !4696, size: 131072, offset: 19520)
!4696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 131072, elements: !4697)
!4697 = !{!4698}
!4698 = !DISubrange(count: 8192)
!4699 = !DILocation(line: 4056, column: 27, scope: !4641)
!4700 = !DILocation(line: 4056, column: 37, scope: !4641)
!4701 = !DILocation(line: 4056, column: 42, scope: !4641)
!4702 = !DILocation(line: 4058, column: 6, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 4058, column: 6)
!4704 = !DILocation(line: 4058, column: 11, scope: !4703)
!4705 = !DILocation(line: 4058, column: 6, scope: !4641)
!4706 = !DILocation(line: 4059, column: 12, scope: !4703)
!4707 = !DILocation(line: 4059, column: 17, scope: !4703)
!4708 = !DILocation(line: 4059, column: 22, scope: !4703)
!4709 = !DILocation(line: 4059, column: 3, scope: !4703)
!4710 = !DILocation(line: 4060, column: 6, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 4060, column: 6)
!4712 = !DILocation(line: 4060, column: 6, scope: !4641)
!4713 = !DILocation(line: 4061, column: 7, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 4061, column: 7)
!4715 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 4060, column: 15)
!4716 = !DILocation(line: 4061, column: 16, scope: !4714)
!4717 = !DILocation(line: 4061, column: 7, scope: !4715)
!4718 = !DILocation(line: 4062, column: 27, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 4061, column: 32)
!4720 = !DILocation(line: 4062, column: 4, scope: !4719)
!4721 = !DILocation(line: 4063, column: 12, scope: !4719)
!4722 = !DILocation(line: 4063, column: 21, scope: !4719)
!4723 = !DILocation(line: 4063, column: 4, scope: !4719)
!4724 = !DILocation(line: 4064, column: 3, scope: !4719)
!4725 = !DILocation(line: 4065, column: 7, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 4065, column: 7)
!4727 = !DILocation(line: 4065, column: 16, scope: !4726)
!4728 = !DILocation(line: 4065, column: 7, scope: !4715)
!4729 = !DILocation(line: 4066, column: 12, scope: !4726)
!4730 = !DILocation(line: 4066, column: 21, scope: !4726)
!4731 = !DILocation(line: 4066, column: 4, scope: !4726)
!4732 = !DILocation(line: 4067, column: 7, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 4067, column: 7)
!4734 = !DILocation(line: 4067, column: 12, scope: !4733)
!4735 = !DILocation(line: 4067, column: 7, scope: !4715)
!4736 = !DILocation(line: 4068, column: 12, scope: !4733)
!4737 = !DILocation(line: 4068, column: 17, scope: !4733)
!4738 = !DILocation(line: 4068, column: 4, scope: !4733)
!4739 = !DILocation(line: 4069, column: 2, scope: !4715)
!4740 = !DILocation(line: 4070, column: 21, scope: !4641)
!4741 = !DILocation(line: 4070, column: 2, scope: !4641)
!4742 = !DILocation(line: 4071, column: 23, scope: !4641)
!4743 = !DILocation(line: 4071, column: 2, scope: !4641)
!4744 = !DILocation(line: 4072, column: 1, scope: !4641)
!4745 = distinct !DISubprogram(name: "auto_attach", scope: !3, file: !3, line: 3973, type: !362, scopeLine: 3975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4746 = !DILocalVariable(name: "dev", arg: 1, scope: !4745, file: !3, line: 3973, type: !324)
!4747 = !DILocation(line: 3973, column: 46, scope: !4745)
!4748 = !DILocalVariable(name: "context", arg: 2, scope: !4745, file: !3, line: 3974, type: !364)
!4749 = !DILocation(line: 3974, column: 24, scope: !4745)
!4750 = !DILocalVariable(name: "pcidev", scope: !4745, file: !3, line: 3976, type: !4368)
!4751 = !DILocation(line: 3976, column: 18, scope: !4745)
!4752 = !DILocation(line: 3976, column: 45, scope: !4745)
!4753 = !DILocation(line: 3976, column: 27, scope: !4745)
!4754 = !DILocalVariable(name: "board", scope: !4745, file: !3, line: 3977, type: !4755)
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4756 = !DILocation(line: 3977, column: 31, scope: !4745)
!4757 = !DILocalVariable(name: "devpriv", scope: !4745, file: !3, line: 3978, type: !4645)
!4758 = !DILocation(line: 3978, column: 27, scope: !4745)
!4759 = !DILocalVariable(name: "local_range", scope: !4745, file: !3, line: 3979, type: !580)
!4760 = !DILocation(line: 3979, column: 6, scope: !4745)
!4761 = !DILocalVariable(name: "local_decode", scope: !4745, file: !3, line: 3979, type: !580)
!4762 = !DILocation(line: 3979, column: 19, scope: !4745)
!4763 = !DILocalVariable(name: "retval", scope: !4745, file: !3, line: 3980, type: !323)
!4764 = !DILocation(line: 3980, column: 6, scope: !4745)
!4765 = !DILocation(line: 3982, column: 6, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4745, file: !3, line: 3982, column: 6)
!4767 = !DILocation(line: 3982, column: 14, scope: !4766)
!4768 = !DILocation(line: 3982, column: 6, scope: !4745)
!4769 = !DILocation(line: 3983, column: 28, scope: !4766)
!4770 = !DILocation(line: 3983, column: 12, scope: !4766)
!4771 = !DILocation(line: 3983, column: 9, scope: !4766)
!4772 = !DILocation(line: 3983, column: 3, scope: !4766)
!4773 = !DILocation(line: 3984, column: 7, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4745, file: !3, line: 3984, column: 6)
!4775 = !DILocation(line: 3984, column: 6, scope: !4745)
!4776 = !DILocation(line: 3985, column: 3, scope: !4774)
!4777 = !DILocation(line: 3986, column: 19, scope: !4745)
!4778 = !DILocation(line: 3986, column: 2, scope: !4745)
!4779 = !DILocation(line: 3986, column: 7, scope: !4745)
!4780 = !DILocation(line: 3986, column: 17, scope: !4745)
!4781 = !DILocation(line: 3988, column: 33, scope: !4745)
!4782 = !DILocation(line: 3988, column: 12, scope: !4745)
!4783 = !DILocation(line: 3988, column: 10, scope: !4745)
!4784 = !DILocation(line: 3989, column: 7, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4745, file: !3, line: 3989, column: 6)
!4786 = !DILocation(line: 3989, column: 6, scope: !4745)
!4787 = !DILocation(line: 3990, column: 3, scope: !4785)
!4788 = !DILocation(line: 3992, column: 29, scope: !4745)
!4789 = !DILocation(line: 3992, column: 11, scope: !4745)
!4790 = !DILocation(line: 3992, column: 9, scope: !4745)
!4791 = !DILocation(line: 3993, column: 6, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4745, file: !3, line: 3993, column: 6)
!4793 = !DILocation(line: 3993, column: 6, scope: !4745)
!4794 = !DILocation(line: 3994, column: 10, scope: !4792)
!4795 = !DILocation(line: 3994, column: 3, scope: !4792)
!4796 = !DILocation(line: 3995, column: 17, scope: !4745)
!4797 = !DILocation(line: 3995, column: 2, scope: !4745)
!4798 = !DILocation(line: 3998, column: 20, scope: !4745)
!4799 = !DILocation(line: 3998, column: 27, scope: !4745)
!4800 = !DILocation(line: 3998, column: 2, scope: !4745)
!4801 = !DILocation(line: 3998, column: 7, scope: !4745)
!4802 = !DILocation(line: 3998, column: 18, scope: !4745)
!4803 = !DILocation(line: 4000, column: 30, scope: !4745)
!4804 = !DILocation(line: 4000, column: 2, scope: !4745)
!4805 = !DILocation(line: 4000, column: 11, scope: !4745)
!4806 = !DILocation(line: 4000, column: 28, scope: !4745)
!4807 = !DILocation(line: 4001, column: 37, scope: !4745)
!4808 = !DILocation(line: 4001, column: 2, scope: !4745)
!4809 = !DILocation(line: 4001, column: 11, scope: !4745)
!4810 = !DILocation(line: 4001, column: 35, scope: !4745)
!4811 = !DILocation(line: 4003, column: 44, scope: !4745)
!4812 = !DILocation(line: 4003, column: 28, scope: !4745)
!4813 = !DILocation(line: 4003, column: 2, scope: !4745)
!4814 = !DILocation(line: 4003, column: 11, scope: !4745)
!4815 = !DILocation(line: 4003, column: 26, scope: !4745)
!4816 = !DILocation(line: 4004, column: 41, scope: !4745)
!4817 = !DILocation(line: 4004, column: 25, scope: !4745)
!4818 = !DILocation(line: 4004, column: 2, scope: !4745)
!4819 = !DILocation(line: 4004, column: 11, scope: !4745)
!4820 = !DILocation(line: 4004, column: 23, scope: !4745)
!4821 = !DILocation(line: 4005, column: 30, scope: !4745)
!4822 = !DILocation(line: 4005, column: 14, scope: !4745)
!4823 = !DILocation(line: 4005, column: 2, scope: !4745)
!4824 = !DILocation(line: 4005, column: 7, scope: !4745)
!4825 = !DILocation(line: 4005, column: 12, scope: !4745)
!4826 = !DILocation(line: 4007, column: 7, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4745, file: !3, line: 4007, column: 6)
!4828 = !DILocation(line: 4007, column: 16, scope: !4827)
!4829 = !DILocation(line: 4007, column: 31, scope: !4827)
!4830 = !DILocation(line: 4007, column: 35, scope: !4827)
!4831 = !DILocation(line: 4007, column: 44, scope: !4827)
!4832 = !DILocation(line: 4007, column: 56, scope: !4827)
!4833 = !DILocation(line: 4007, column: 60, scope: !4827)
!4834 = !DILocation(line: 4007, column: 65, scope: !4827)
!4835 = !DILocation(line: 4007, column: 6, scope: !4745)
!4836 = !DILocation(line: 4008, column: 3, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 4007, column: 71)
!4838 = !DILocation(line: 4009, column: 3, scope: !4837)
!4839 = !DILocation(line: 4013, column: 22, scope: !4745)
!4840 = !DILocation(line: 4013, column: 31, scope: !4745)
!4841 = !DILocation(line: 4013, column: 46, scope: !4745)
!4842 = !DILocation(line: 4013, column: 16, scope: !4745)
!4843 = !DILocation(line: 4013, column: 64, scope: !4745)
!4844 = !DILocation(line: 4013, column: 14, scope: !4745)
!4845 = !DILocation(line: 4015, column: 23, scope: !4745)
!4846 = !DILocation(line: 4015, column: 32, scope: !4745)
!4847 = !DILocation(line: 4015, column: 47, scope: !4745)
!4848 = !DILocation(line: 4015, column: 17, scope: !4745)
!4849 = !DILocation(line: 4016, column: 10, scope: !4745)
!4850 = !DILocation(line: 4015, column: 65, scope: !4745)
!4851 = !DILocation(line: 4016, column: 22, scope: !4745)
!4852 = !DILocation(line: 4015, column: 15, scope: !4745)
!4853 = !DILocation(line: 4017, column: 33, scope: !4745)
!4854 = !DILocation(line: 4017, column: 42, scope: !4745)
!4855 = !DILocation(line: 4017, column: 28, scope: !4745)
!4856 = !DILocation(line: 4018, column: 8, scope: !4745)
!4857 = !DILocation(line: 4018, column: 7, scope: !4745)
!4858 = !DILocation(line: 4017, column: 59, scope: !4745)
!4859 = !DILocation(line: 4018, column: 23, scope: !4745)
!4860 = !DILocation(line: 4018, column: 21, scope: !4745)
!4861 = !DILocation(line: 4017, column: 2, scope: !4745)
!4862 = !DILocation(line: 4017, column: 11, scope: !4745)
!4863 = !DILocation(line: 4017, column: 25, scope: !4745)
!4864 = !DILocation(line: 4019, column: 22, scope: !4745)
!4865 = !DILocation(line: 4019, column: 31, scope: !4745)
!4866 = !DILocation(line: 4019, column: 46, scope: !4745)
!4867 = !DILocation(line: 4019, column: 16, scope: !4745)
!4868 = !DILocation(line: 4019, column: 64, scope: !4745)
!4869 = !DILocation(line: 4019, column: 14, scope: !4745)
!4870 = !DILocation(line: 4021, column: 23, scope: !4745)
!4871 = !DILocation(line: 4021, column: 32, scope: !4745)
!4872 = !DILocation(line: 4021, column: 47, scope: !4745)
!4873 = !DILocation(line: 4021, column: 17, scope: !4745)
!4874 = !DILocation(line: 4022, column: 10, scope: !4745)
!4875 = !DILocation(line: 4021, column: 65, scope: !4745)
!4876 = !DILocation(line: 4022, column: 22, scope: !4745)
!4877 = !DILocation(line: 4021, column: 15, scope: !4745)
!4878 = !DILocation(line: 4023, column: 33, scope: !4745)
!4879 = !DILocation(line: 4023, column: 42, scope: !4745)
!4880 = !DILocation(line: 4023, column: 28, scope: !4745)
!4881 = !DILocation(line: 4024, column: 8, scope: !4745)
!4882 = !DILocation(line: 4024, column: 7, scope: !4745)
!4883 = !DILocation(line: 4023, column: 66, scope: !4745)
!4884 = !DILocation(line: 4024, column: 23, scope: !4745)
!4885 = !DILocation(line: 4024, column: 21, scope: !4745)
!4886 = !DILocation(line: 4023, column: 2, scope: !4745)
!4887 = !DILocation(line: 4023, column: 11, scope: !4745)
!4888 = !DILocation(line: 4023, column: 25, scope: !4745)
!4889 = !DILocation(line: 4026, column: 38, scope: !4745)
!4890 = !DILocation(line: 4026, column: 11, scope: !4745)
!4891 = !DILocation(line: 4026, column: 9, scope: !4745)
!4892 = !DILocation(line: 4027, column: 6, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4745, file: !3, line: 4027, column: 6)
!4894 = !DILocation(line: 4027, column: 13, scope: !4893)
!4895 = !DILocation(line: 4027, column: 6, scope: !4745)
!4896 = !DILocation(line: 4028, column: 10, scope: !4893)
!4897 = !DILocation(line: 4028, column: 3, scope: !4893)
!4898 = !DILocation(line: 4031, column: 15, scope: !4745)
!4899 = !DILocation(line: 4031, column: 26, scope: !4745)
!4900 = !DILocation(line: 4031, column: 35, scope: !4745)
!4901 = !DILocation(line: 4031, column: 47, scope: !4745)
!4902 = !DILocation(line: 4031, column: 20, scope: !4745)
!4903 = !DILocation(line: 4031, column: 3, scope: !4745)
!4904 = !DILocation(line: 4030, column: 2, scope: !4745)
!4905 = !DILocation(line: 4030, column: 11, scope: !4745)
!4906 = !DILocation(line: 4030, column: 23, scope: !4745)
!4907 = !DILocation(line: 4034, column: 15, scope: !4745)
!4908 = !DILocation(line: 4034, column: 2, scope: !4745)
!4909 = !DILocation(line: 4035, column: 21, scope: !4745)
!4910 = !DILocation(line: 4035, column: 2, scope: !4745)
!4911 = !DILocation(line: 4037, column: 23, scope: !4745)
!4912 = !DILocation(line: 4037, column: 31, scope: !4745)
!4913 = !DILocation(line: 4038, column: 9, scope: !4745)
!4914 = !DILocation(line: 4038, column: 14, scope: !4745)
!4915 = !DILocation(line: 4038, column: 26, scope: !4745)
!4916 = !DILocation(line: 4037, column: 11, scope: !4745)
!4917 = !DILocation(line: 4037, column: 9, scope: !4745)
!4918 = !DILocation(line: 4039, column: 6, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4745, file: !3, line: 4039, column: 6)
!4920 = !DILocation(line: 4039, column: 6, scope: !4745)
!4921 = !DILocation(line: 4042, column: 10, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 4039, column: 14)
!4923 = !DILocation(line: 4042, column: 3, scope: !4922)
!4924 = !DILocation(line: 4044, column: 13, scope: !4745)
!4925 = !DILocation(line: 4044, column: 21, scope: !4745)
!4926 = !DILocation(line: 4044, column: 2, scope: !4745)
!4927 = !DILocation(line: 4044, column: 7, scope: !4745)
!4928 = !DILocation(line: 4044, column: 11, scope: !4745)
!4929 = !DILocation(line: 4047, column: 28, scope: !4745)
!4930 = !DILocation(line: 4047, column: 11, scope: !4745)
!4931 = !DILocation(line: 4047, column: 9, scope: !4745)
!4932 = !DILocation(line: 4048, column: 6, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4745, file: !3, line: 4048, column: 6)
!4934 = !DILocation(line: 4048, column: 13, scope: !4933)
!4935 = !DILocation(line: 4048, column: 6, scope: !4745)
!4936 = !DILocation(line: 4049, column: 10, scope: !4933)
!4937 = !DILocation(line: 4049, column: 3, scope: !4933)
!4938 = !DILocation(line: 4051, column: 2, scope: !4745)
!4939 = !DILocation(line: 4052, column: 1, scope: !4745)
!4940 = distinct !DISubprogram(name: "disable_plx_interrupts", scope: !3, file: !3, line: 1231, type: !358, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4941 = !DILocalVariable(name: "dev", arg: 1, scope: !4940, file: !3, line: 1231, type: !324)
!4942 = !DILocation(line: 1231, column: 58, scope: !4940)
!4943 = !DILocalVariable(name: "devpriv", scope: !4940, file: !3, line: 1233, type: !4645)
!4944 = !DILocation(line: 1233, column: 27, scope: !4940)
!4945 = !DILocation(line: 1233, column: 37, scope: !4940)
!4946 = !DILocation(line: 1233, column: 42, scope: !4940)
!4947 = !DILocation(line: 1235, column: 2, scope: !4940)
!4948 = !DILocation(line: 1235, column: 11, scope: !4940)
!4949 = !DILocation(line: 1235, column: 27, scope: !4940)
!4950 = !DILocation(line: 1236, column: 9, scope: !4940)
!4951 = !DILocation(line: 1236, column: 18, scope: !4940)
!4952 = !DILocation(line: 1237, column: 9, scope: !4940)
!4953 = !DILocation(line: 1237, column: 18, scope: !4940)
!4954 = !DILocation(line: 1237, column: 33, scope: !4940)
!4955 = !DILocation(line: 1236, column: 2, scope: !4940)
!4956 = !DILocation(line: 1238, column: 1, scope: !4940)
!4957 = distinct !DISubprogram(name: "cb_pcidas64_free_dma", scope: !3, file: !3, line: 1556, type: !358, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!4958 = !DILocalVariable(name: "dev", arg: 1, scope: !4957, file: !3, line: 1556, type: !324)
!4959 = !DILocation(line: 1556, column: 56, scope: !4957)
!4960 = !DILocalVariable(name: "board", scope: !4957, file: !3, line: 1558, type: !4755)
!4961 = !DILocation(line: 1558, column: 31, scope: !4957)
!4962 = !DILocation(line: 1558, column: 39, scope: !4957)
!4963 = !DILocation(line: 1558, column: 44, scope: !4957)
!4964 = !DILocalVariable(name: "pcidev", scope: !4957, file: !3, line: 1559, type: !4368)
!4965 = !DILocation(line: 1559, column: 18, scope: !4957)
!4966 = !DILocation(line: 1559, column: 45, scope: !4957)
!4967 = !DILocation(line: 1559, column: 27, scope: !4957)
!4968 = !DILocalVariable(name: "devpriv", scope: !4957, file: !3, line: 1560, type: !4645)
!4969 = !DILocation(line: 1560, column: 27, scope: !4957)
!4970 = !DILocation(line: 1560, column: 37, scope: !4957)
!4971 = !DILocation(line: 1560, column: 42, scope: !4957)
!4972 = !DILocalVariable(name: "i", scope: !4957, file: !3, line: 1561, type: !323)
!4973 = !DILocation(line: 1561, column: 6, scope: !4957)
!4974 = !DILocation(line: 1563, column: 7, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 1563, column: 6)
!4976 = !DILocation(line: 1563, column: 6, scope: !4957)
!4977 = !DILocation(line: 1564, column: 3, scope: !4975)
!4978 = !DILocation(line: 1567, column: 9, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 1567, column: 2)
!4980 = !DILocation(line: 1567, column: 7, scope: !4979)
!4981 = !DILocation(line: 1567, column: 14, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 1567, column: 2)
!4983 = !DILocation(line: 1567, column: 36, scope: !4982)
!4984 = !DILocation(line: 1567, column: 18, scope: !4982)
!4985 = !DILocation(line: 1567, column: 16, scope: !4982)
!4986 = !DILocation(line: 1567, column: 2, scope: !4979)
!4987 = !DILocation(line: 1568, column: 7, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 1568, column: 7)
!4989 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 1567, column: 49)
!4990 = !DILocation(line: 1568, column: 16, scope: !4988)
!4991 = !DILocation(line: 1568, column: 26, scope: !4988)
!4992 = !DILocation(line: 1568, column: 7, scope: !4989)
!4993 = !DILocation(line: 1569, column: 23, scope: !4988)
!4994 = !DILocation(line: 1569, column: 31, scope: !4988)
!4995 = !DILocation(line: 1571, column: 8, scope: !4988)
!4996 = !DILocation(line: 1571, column: 17, scope: !4988)
!4997 = !DILocation(line: 1571, column: 27, scope: !4988)
!4998 = !DILocation(line: 1572, column: 8, scope: !4988)
!4999 = !DILocation(line: 1572, column: 17, scope: !4988)
!5000 = !DILocation(line: 1572, column: 36, scope: !4988)
!5001 = !DILocation(line: 1569, column: 4, scope: !4988)
!5002 = !DILocation(line: 1573, column: 2, scope: !4989)
!5003 = !DILocation(line: 1567, column: 45, scope: !4982)
!5004 = !DILocation(line: 1567, column: 2, scope: !4982)
!5005 = distinct !{!5005, !4986, !5006}
!5006 = !DILocation(line: 1573, column: 2, scope: !4979)
!5007 = !DILocation(line: 1574, column: 9, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 1574, column: 2)
!5009 = !DILocation(line: 1574, column: 7, scope: !5008)
!5010 = !DILocation(line: 1574, column: 14, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 1574, column: 2)
!5012 = !DILocation(line: 1574, column: 16, scope: !5011)
!5013 = !DILocation(line: 1574, column: 2, scope: !5008)
!5014 = !DILocation(line: 1575, column: 7, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 1575, column: 7)
!5016 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 1574, column: 42)
!5017 = !DILocation(line: 1575, column: 16, scope: !5015)
!5018 = !DILocation(line: 1575, column: 26, scope: !5015)
!5019 = !DILocation(line: 1575, column: 7, scope: !5016)
!5020 = !DILocation(line: 1576, column: 23, scope: !5015)
!5021 = !DILocation(line: 1576, column: 31, scope: !5015)
!5022 = !DILocation(line: 1578, column: 8, scope: !5015)
!5023 = !DILocation(line: 1578, column: 17, scope: !5015)
!5024 = !DILocation(line: 1578, column: 27, scope: !5015)
!5025 = !DILocation(line: 1579, column: 8, scope: !5015)
!5026 = !DILocation(line: 1579, column: 17, scope: !5015)
!5027 = !DILocation(line: 1579, column: 36, scope: !5015)
!5028 = !DILocation(line: 1576, column: 4, scope: !5015)
!5029 = !DILocation(line: 1580, column: 2, scope: !5016)
!5030 = !DILocation(line: 1574, column: 38, scope: !5011)
!5031 = !DILocation(line: 1574, column: 2, scope: !5011)
!5032 = distinct !{!5032, !5013, !5033}
!5033 = !DILocation(line: 1580, column: 2, scope: !5008)
!5034 = !DILocation(line: 1582, column: 6, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 1582, column: 6)
!5036 = !DILocation(line: 1582, column: 15, scope: !5035)
!5037 = !DILocation(line: 1582, column: 6, scope: !4957)
!5038 = !DILocation(line: 1583, column: 22, scope: !5035)
!5039 = !DILocation(line: 1583, column: 30, scope: !5035)
!5040 = !DILocation(line: 1585, column: 25, scope: !5035)
!5041 = !DILocation(line: 1585, column: 7, scope: !5035)
!5042 = !DILocation(line: 1584, column: 35, scope: !5035)
!5043 = !DILocation(line: 1586, column: 7, scope: !5035)
!5044 = !DILocation(line: 1586, column: 16, scope: !5035)
!5045 = !DILocation(line: 1587, column: 7, scope: !5035)
!5046 = !DILocation(line: 1587, column: 16, scope: !5035)
!5047 = !DILocation(line: 1583, column: 3, scope: !5035)
!5048 = !DILocation(line: 1588, column: 6, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 1588, column: 6)
!5050 = !DILocation(line: 1588, column: 15, scope: !5049)
!5051 = !DILocation(line: 1588, column: 6, scope: !4957)
!5052 = !DILocation(line: 1589, column: 22, scope: !5049)
!5053 = !DILocation(line: 1589, column: 30, scope: !5049)
!5054 = !DILocation(line: 1592, column: 7, scope: !5049)
!5055 = !DILocation(line: 1592, column: 16, scope: !5049)
!5056 = !DILocation(line: 1593, column: 7, scope: !5049)
!5057 = !DILocation(line: 1593, column: 16, scope: !5049)
!5058 = !DILocation(line: 1589, column: 3, scope: !5049)
!5059 = !DILocation(line: 1594, column: 1, scope: !4957)
!5060 = distinct !DISubprogram(name: "writel", scope: !5061, file: !5061, line: 67, type: !5062, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5061 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!5062 = !DISubroutineType(types: !5063)
!5063 = !{null, !7, !5064}
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5065, size: 64)
!5065 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5066 = !DILocalVariable(name: "val", arg: 1, scope: !5060, file: !5061, line: 67, type: !7)
!5067 = !DILocation(line: 67, column: 1, scope: !5060)
!5068 = !DILocalVariable(name: "addr", arg: 2, scope: !5060, file: !5061, line: 67, type: !5064)
!5069 = !{i32 -2143313362}
!5070 = distinct !DISubprogram(name: "ai_dma_ring_count", scope: !3, file: !3, line: 668, type: !5071, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!7, !4755}
!5073 = !DILocalVariable(name: "board", arg: 1, scope: !5070, file: !3, line: 668, type: !4755)
!5074 = !DILocation(line: 668, column: 75, scope: !5070)
!5075 = !DILocation(line: 670, column: 6, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 670, column: 6)
!5077 = !DILocation(line: 670, column: 13, scope: !5076)
!5078 = !DILocation(line: 670, column: 20, scope: !5076)
!5079 = !DILocation(line: 670, column: 6, scope: !5070)
!5080 = !DILocation(line: 671, column: 3, scope: !5076)
!5081 = !DILocation(line: 673, column: 2, scope: !5070)
!5082 = !DILocation(line: 674, column: 1, scope: !5070)
!5083 = distinct !DISubprogram(name: "dma_free_coherent", scope: !5084, file: !5084, line: 400, type: !5085, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5084 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!5085 = !DISubroutineType(types: !5086)
!5086 = !{null, !376, !487, !374, !1086}
!5087 = !DILocalVariable(name: "dev", arg: 1, scope: !5083, file: !5084, line: 400, type: !376)
!5088 = !DILocation(line: 400, column: 53, scope: !5083)
!5089 = !DILocalVariable(name: "size", arg: 2, scope: !5083, file: !5084, line: 400, type: !487)
!5090 = !DILocation(line: 400, column: 65, scope: !5083)
!5091 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !5083, file: !5084, line: 401, type: !374)
!5092 = !DILocation(line: 401, column: 9, scope: !5083)
!5093 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !5083, file: !5084, line: 401, type: !1086)
!5094 = !DILocation(line: 401, column: 30, scope: !5083)
!5095 = !DILocation(line: 403, column: 24, scope: !5083)
!5096 = !DILocation(line: 403, column: 29, scope: !5083)
!5097 = !DILocation(line: 403, column: 35, scope: !5083)
!5098 = !DILocation(line: 403, column: 45, scope: !5083)
!5099 = !DILocation(line: 403, column: 9, scope: !5083)
!5100 = !DILocation(line: 403, column: 2, scope: !5083)
!5101 = distinct !DISubprogram(name: "readl", scope: !5061, file: !5061, line: 59, type: !5102, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{!7, !5104}
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5105, size: 64)
!5105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5065)
!5106 = !DILocalVariable(name: "addr", arg: 1, scope: !5101, file: !5061, line: 59, type: !5104)
!5107 = !DILocation(line: 59, column: 1, scope: !5101)
!5108 = !DILocalVariable(name: "ret", scope: !5101, file: !5061, line: 59, type: !7)
!5109 = !{i32 -2143315755}
!5110 = distinct !DISubprogram(name: "alloc_and_init_dma_members", scope: !3, file: !3, line: 1472, type: !4137, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5111 = !DILocalVariable(name: "dev", arg: 1, scope: !5110, file: !3, line: 1472, type: !324)
!5112 = !DILocation(line: 1472, column: 61, scope: !5110)
!5113 = !DILocalVariable(name: "board", scope: !5110, file: !3, line: 1474, type: !4755)
!5114 = !DILocation(line: 1474, column: 31, scope: !5110)
!5115 = !DILocation(line: 1474, column: 39, scope: !5110)
!5116 = !DILocation(line: 1474, column: 44, scope: !5110)
!5117 = !DILocalVariable(name: "pcidev", scope: !5110, file: !3, line: 1475, type: !4368)
!5118 = !DILocation(line: 1475, column: 18, scope: !5110)
!5119 = !DILocation(line: 1475, column: 45, scope: !5110)
!5120 = !DILocation(line: 1475, column: 27, scope: !5110)
!5121 = !DILocalVariable(name: "devpriv", scope: !5110, file: !3, line: 1476, type: !4645)
!5122 = !DILocation(line: 1476, column: 27, scope: !5110)
!5123 = !DILocation(line: 1476, column: 37, scope: !5110)
!5124 = !DILocation(line: 1476, column: 42, scope: !5110)
!5125 = !DILocalVariable(name: "i", scope: !5110, file: !3, line: 1477, type: !323)
!5126 = !DILocation(line: 1477, column: 6, scope: !5110)
!5127 = !DILocation(line: 1480, column: 9, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1480, column: 2)
!5129 = !DILocation(line: 1480, column: 7, scope: !5128)
!5130 = !DILocation(line: 1480, column: 14, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 1480, column: 2)
!5132 = !DILocation(line: 1480, column: 36, scope: !5131)
!5133 = !DILocation(line: 1480, column: 18, scope: !5131)
!5134 = !DILocation(line: 1480, column: 16, scope: !5131)
!5135 = !DILocation(line: 1480, column: 2, scope: !5128)
!5136 = !DILocation(line: 1482, column: 24, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 1480, column: 49)
!5138 = !DILocation(line: 1482, column: 32, scope: !5137)
!5139 = !DILocation(line: 1483, column: 10, scope: !5137)
!5140 = !DILocation(line: 1483, column: 19, scope: !5137)
!5141 = !DILocation(line: 1483, column: 38, scope: !5137)
!5142 = !DILocation(line: 1482, column: 4, scope: !5137)
!5143 = !DILocation(line: 1481, column: 3, scope: !5137)
!5144 = !DILocation(line: 1481, column: 12, scope: !5137)
!5145 = !DILocation(line: 1481, column: 22, scope: !5137)
!5146 = !DILocation(line: 1481, column: 25, scope: !5137)
!5147 = !DILocation(line: 1485, column: 8, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1485, column: 7)
!5149 = !DILocation(line: 1485, column: 17, scope: !5148)
!5150 = !DILocation(line: 1485, column: 27, scope: !5148)
!5151 = !DILocation(line: 1485, column: 7, scope: !5137)
!5152 = !DILocation(line: 1486, column: 4, scope: !5148)
!5153 = !DILocation(line: 1487, column: 2, scope: !5137)
!5154 = !DILocation(line: 1480, column: 45, scope: !5131)
!5155 = !DILocation(line: 1480, column: 2, scope: !5131)
!5156 = distinct !{!5156, !5135, !5157}
!5157 = !DILocation(line: 1487, column: 2, scope: !5128)
!5158 = !DILocation(line: 1488, column: 9, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1488, column: 2)
!5160 = !DILocation(line: 1488, column: 7, scope: !5159)
!5161 = !DILocation(line: 1488, column: 14, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 1488, column: 2)
!5163 = !DILocation(line: 1488, column: 16, scope: !5162)
!5164 = !DILocation(line: 1488, column: 2, scope: !5159)
!5165 = !DILocation(line: 1489, column: 27, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 1489, column: 7)
!5167 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 1488, column: 42)
!5168 = !DILocation(line: 1489, column: 7, scope: !5166)
!5169 = !DILocation(line: 1489, column: 7, scope: !5167)
!5170 = !DILocation(line: 1491, column: 28, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 1489, column: 35)
!5172 = !DILocation(line: 1491, column: 36, scope: !5171)
!5173 = !DILocation(line: 1493, column: 14, scope: !5171)
!5174 = !DILocation(line: 1493, column: 23, scope: !5171)
!5175 = !DILocation(line: 1493, column: 42, scope: !5171)
!5176 = !DILocation(line: 1491, column: 8, scope: !5171)
!5177 = !DILocation(line: 1490, column: 4, scope: !5171)
!5178 = !DILocation(line: 1490, column: 13, scope: !5171)
!5179 = !DILocation(line: 1490, column: 23, scope: !5171)
!5180 = !DILocation(line: 1490, column: 26, scope: !5171)
!5181 = !DILocation(line: 1495, column: 9, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5171, file: !3, line: 1495, column: 8)
!5183 = !DILocation(line: 1495, column: 18, scope: !5182)
!5184 = !DILocation(line: 1495, column: 28, scope: !5182)
!5185 = !DILocation(line: 1495, column: 8, scope: !5171)
!5186 = !DILocation(line: 1496, column: 5, scope: !5182)
!5187 = !DILocation(line: 1497, column: 3, scope: !5171)
!5188 = !DILocation(line: 1498, column: 2, scope: !5167)
!5189 = !DILocation(line: 1488, column: 38, scope: !5162)
!5190 = !DILocation(line: 1488, column: 2, scope: !5162)
!5191 = distinct !{!5191, !5164, !5192}
!5192 = !DILocation(line: 1498, column: 2, scope: !5159)
!5193 = !DILocation(line: 1501, column: 23, scope: !5110)
!5194 = !DILocation(line: 1501, column: 31, scope: !5110)
!5195 = !DILocation(line: 1502, column: 26, scope: !5110)
!5196 = !DILocation(line: 1502, column: 8, scope: !5110)
!5197 = !DILocation(line: 1501, column: 64, scope: !5110)
!5198 = !DILocation(line: 1503, column: 9, scope: !5110)
!5199 = !DILocation(line: 1503, column: 18, scope: !5110)
!5200 = !DILocation(line: 1501, column: 3, scope: !5110)
!5201 = !DILocation(line: 1500, column: 2, scope: !5110)
!5202 = !DILocation(line: 1500, column: 11, scope: !5110)
!5203 = !DILocation(line: 1500, column: 23, scope: !5110)
!5204 = !DILocation(line: 1504, column: 7, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1504, column: 6)
!5206 = !DILocation(line: 1504, column: 16, scope: !5205)
!5207 = !DILocation(line: 1504, column: 6, scope: !5110)
!5208 = !DILocation(line: 1505, column: 3, scope: !5205)
!5209 = !DILocation(line: 1507, column: 26, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1507, column: 6)
!5211 = !DILocation(line: 1507, column: 6, scope: !5210)
!5212 = !DILocation(line: 1507, column: 6, scope: !5110)
!5213 = !DILocation(line: 1509, column: 24, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 1507, column: 34)
!5215 = !DILocation(line: 1509, column: 32, scope: !5214)
!5216 = !DILocation(line: 1512, column: 10, scope: !5214)
!5217 = !DILocation(line: 1512, column: 19, scope: !5214)
!5218 = !DILocation(line: 1509, column: 4, scope: !5214)
!5219 = !DILocation(line: 1508, column: 3, scope: !5214)
!5220 = !DILocation(line: 1508, column: 12, scope: !5214)
!5221 = !DILocation(line: 1508, column: 24, scope: !5214)
!5222 = !DILocation(line: 1514, column: 8, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 1514, column: 7)
!5224 = !DILocation(line: 1514, column: 17, scope: !5223)
!5225 = !DILocation(line: 1514, column: 7, scope: !5214)
!5226 = !DILocation(line: 1515, column: 4, scope: !5223)
!5227 = !DILocation(line: 1516, column: 2, scope: !5214)
!5228 = !DILocation(line: 1518, column: 9, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1518, column: 2)
!5230 = !DILocation(line: 1518, column: 7, scope: !5229)
!5231 = !DILocation(line: 1518, column: 14, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 1518, column: 2)
!5233 = !DILocation(line: 1518, column: 36, scope: !5232)
!5234 = !DILocation(line: 1518, column: 18, scope: !5232)
!5235 = !DILocation(line: 1518, column: 16, scope: !5232)
!5236 = !DILocation(line: 1518, column: 2, scope: !5229)
!5237 = !DILocation(line: 1520, column: 4, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 1518, column: 49)
!5239 = !DILocation(line: 1519, column: 3, scope: !5238)
!5240 = !DILocation(line: 1519, column: 12, scope: !5238)
!5241 = !DILocation(line: 1519, column: 24, scope: !5238)
!5242 = !DILocation(line: 1519, column: 27, scope: !5238)
!5243 = !DILocation(line: 1519, column: 42, scope: !5238)
!5244 = !DILocation(line: 1521, column: 7, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 1521, column: 7)
!5246 = !DILocation(line: 1521, column: 14, scope: !5245)
!5247 = !DILocation(line: 1521, column: 21, scope: !5245)
!5248 = !DILocation(line: 1521, column: 7, scope: !5238)
!5249 = !DILocation(line: 1523, column: 5, scope: !5245)
!5250 = !DILocation(line: 1522, column: 4, scope: !5245)
!5251 = !DILocation(line: 1522, column: 13, scope: !5245)
!5252 = !DILocation(line: 1522, column: 25, scope: !5245)
!5253 = !DILocation(line: 1522, column: 28, scope: !5245)
!5254 = !DILocation(line: 1522, column: 45, scope: !5245)
!5255 = !DILocation(line: 1527, column: 5, scope: !5245)
!5256 = !DILocation(line: 1526, column: 4, scope: !5245)
!5257 = !DILocation(line: 1526, column: 13, scope: !5245)
!5258 = !DILocation(line: 1526, column: 25, scope: !5245)
!5259 = !DILocation(line: 1526, column: 28, scope: !5245)
!5260 = !DILocation(line: 1526, column: 45, scope: !5245)
!5261 = !DILocation(line: 1529, column: 3, scope: !5238)
!5262 = !DILocation(line: 1529, column: 12, scope: !5238)
!5263 = !DILocation(line: 1529, column: 24, scope: !5238)
!5264 = !DILocation(line: 1529, column: 27, scope: !5238)
!5265 = !DILocation(line: 1529, column: 41, scope: !5238)
!5266 = !DILocation(line: 1531, column: 4, scope: !5238)
!5267 = !DILocation(line: 1530, column: 3, scope: !5238)
!5268 = !DILocation(line: 1530, column: 12, scope: !5238)
!5269 = !DILocation(line: 1530, column: 24, scope: !5238)
!5270 = !DILocation(line: 1530, column: 27, scope: !5238)
!5271 = !DILocation(line: 1530, column: 32, scope: !5238)
!5272 = !DILocation(line: 1536, column: 2, scope: !5238)
!5273 = !DILocation(line: 1518, column: 45, scope: !5232)
!5274 = !DILocation(line: 1518, column: 2, scope: !5232)
!5275 = distinct !{!5275, !5236, !5276}
!5276 = !DILocation(line: 1536, column: 2, scope: !5229)
!5277 = !DILocation(line: 1537, column: 26, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1537, column: 6)
!5279 = !DILocation(line: 1537, column: 6, scope: !5278)
!5280 = !DILocation(line: 1537, column: 6, scope: !5110)
!5281 = !DILocation(line: 1538, column: 10, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 1538, column: 3)
!5283 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 1537, column: 34)
!5284 = !DILocation(line: 1538, column: 8, scope: !5282)
!5285 = !DILocation(line: 1538, column: 15, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 1538, column: 3)
!5287 = !DILocation(line: 1538, column: 17, scope: !5286)
!5288 = !DILocation(line: 1538, column: 3, scope: !5282)
!5289 = !DILocation(line: 1540, column: 5, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 1538, column: 43)
!5291 = !DILocation(line: 1539, column: 4, scope: !5290)
!5292 = !DILocation(line: 1539, column: 13, scope: !5290)
!5293 = !DILocation(line: 1539, column: 25, scope: !5290)
!5294 = !DILocation(line: 1539, column: 28, scope: !5290)
!5295 = !DILocation(line: 1539, column: 43, scope: !5290)
!5296 = !DILocation(line: 1542, column: 5, scope: !5290)
!5297 = !DILocation(line: 1541, column: 4, scope: !5290)
!5298 = !DILocation(line: 1541, column: 13, scope: !5290)
!5299 = !DILocation(line: 1541, column: 25, scope: !5290)
!5300 = !DILocation(line: 1541, column: 28, scope: !5290)
!5301 = !DILocation(line: 1541, column: 45, scope: !5290)
!5302 = !DILocation(line: 1544, column: 4, scope: !5290)
!5303 = !DILocation(line: 1544, column: 13, scope: !5290)
!5304 = !DILocation(line: 1544, column: 25, scope: !5290)
!5305 = !DILocation(line: 1544, column: 28, scope: !5290)
!5306 = !DILocation(line: 1544, column: 42, scope: !5290)
!5307 = !DILocation(line: 1546, column: 5, scope: !5290)
!5308 = !DILocation(line: 1545, column: 4, scope: !5290)
!5309 = !DILocation(line: 1545, column: 13, scope: !5290)
!5310 = !DILocation(line: 1545, column: 25, scope: !5290)
!5311 = !DILocation(line: 1545, column: 28, scope: !5290)
!5312 = !DILocation(line: 1545, column: 33, scope: !5290)
!5313 = !DILocation(line: 1551, column: 3, scope: !5290)
!5314 = !DILocation(line: 1538, column: 39, scope: !5286)
!5315 = !DILocation(line: 1538, column: 3, scope: !5286)
!5316 = distinct !{!5316, !5288, !5317}
!5317 = !DILocation(line: 1551, column: 3, scope: !5282)
!5318 = !DILocation(line: 1552, column: 2, scope: !5283)
!5319 = !DILocation(line: 1553, column: 2, scope: !5110)
!5320 = !DILocation(line: 1554, column: 1, scope: !5110)
!5321 = distinct !DISubprogram(name: "hw_revision", scope: !3, file: !3, line: 1186, type: !5322, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5322 = !DISubroutineType(types: !5323)
!5323 = !{!7, !5324, !1025}
!5324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5325, size: 64)
!5325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !325)
!5326 = !DILocalVariable(name: "dev", arg: 1, scope: !5321, file: !3, line: 1186, type: !5324)
!5327 = !DILocation(line: 1186, column: 61, scope: !5321)
!5328 = !DILocalVariable(name: "hw_status_bits", arg: 2, scope: !5321, file: !3, line: 1187, type: !1025)
!5329 = !DILocation(line: 1187, column: 9, scope: !5321)
!5330 = !DILocalVariable(name: "board", scope: !5321, file: !3, line: 1189, type: !4755)
!5331 = !DILocation(line: 1189, column: 31, scope: !5321)
!5332 = !DILocation(line: 1189, column: 39, scope: !5321)
!5333 = !DILocation(line: 1189, column: 44, scope: !5321)
!5334 = !DILocation(line: 1191, column: 6, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 1191, column: 6)
!5336 = !DILocation(line: 1191, column: 13, scope: !5335)
!5337 = !DILocation(line: 1191, column: 20, scope: !5335)
!5338 = !DILocation(line: 1191, column: 6, scope: !5321)
!5339 = !DILocation(line: 1192, column: 11, scope: !5335)
!5340 = !DILocation(line: 1192, column: 26, scope: !5335)
!5341 = !DILocation(line: 1192, column: 33, scope: !5335)
!5342 = !DILocation(line: 1192, column: 3, scope: !5335)
!5343 = !DILocation(line: 1194, column: 10, scope: !5321)
!5344 = !DILocation(line: 1194, column: 25, scope: !5321)
!5345 = !DILocation(line: 1194, column: 32, scope: !5321)
!5346 = !DILocation(line: 1194, column: 2, scope: !5321)
!5347 = !DILocation(line: 1195, column: 1, scope: !5321)
!5348 = distinct !DISubprogram(name: "readw", scope: !5061, file: !5061, line: 58, type: !5349, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5349 = !DISubroutineType(types: !5350)
!5350 = !{!482, !5104}
!5351 = !DILocalVariable(name: "addr", arg: 1, scope: !5348, file: !5061, line: 58, type: !5104)
!5352 = !DILocation(line: 58, column: 1, scope: !5348)
!5353 = !DILocalVariable(name: "ret", scope: !5348, file: !5061, line: 58, type: !482)
!5354 = !{i32 -2143316172}
!5355 = distinct !DISubprogram(name: "init_plx9080", scope: !3, file: !3, line: 1282, type: !358, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5356 = !DILocalVariable(name: "dev", arg: 1, scope: !5355, file: !3, line: 1282, type: !324)
!5357 = !DILocation(line: 1282, column: 48, scope: !5355)
!5358 = !DILocalVariable(name: "board", scope: !5355, file: !3, line: 1284, type: !4755)
!5359 = !DILocation(line: 1284, column: 31, scope: !5355)
!5360 = !DILocation(line: 1284, column: 39, scope: !5355)
!5361 = !DILocation(line: 1284, column: 44, scope: !5355)
!5362 = !DILocalVariable(name: "devpriv", scope: !5355, file: !3, line: 1285, type: !4645)
!5363 = !DILocation(line: 1285, column: 27, scope: !5355)
!5364 = !DILocation(line: 1285, column: 37, scope: !5355)
!5365 = !DILocation(line: 1285, column: 42, scope: !5355)
!5366 = !DILocalVariable(name: "bits", scope: !5355, file: !3, line: 1286, type: !580)
!5367 = !DILocation(line: 1286, column: 6, scope: !5355)
!5368 = !DILocalVariable(name: "plx_iobase", scope: !5355, file: !3, line: 1287, type: !374)
!5369 = !DILocation(line: 1287, column: 16, scope: !5355)
!5370 = !DILocation(line: 1287, column: 29, scope: !5355)
!5371 = !DILocation(line: 1287, column: 38, scope: !5355)
!5372 = !DILocation(line: 1290, column: 9, scope: !5355)
!5373 = !DILocation(line: 1290, column: 18, scope: !5355)
!5374 = !DILocation(line: 1290, column: 33, scope: !5355)
!5375 = !DILocation(line: 1290, column: 3, scope: !5355)
!5376 = !DILocation(line: 1289, column: 2, scope: !5355)
!5377 = !DILocation(line: 1289, column: 11, scope: !5355)
!5378 = !DILocation(line: 1289, column: 28, scope: !5355)
!5379 = !DILocation(line: 1295, column: 7, scope: !5355)
!5380 = !DILocation(line: 1297, column: 9, scope: !5355)
!5381 = !DILocation(line: 1297, column: 15, scope: !5355)
!5382 = !DILocation(line: 1297, column: 24, scope: !5355)
!5383 = !DILocation(line: 1297, column: 39, scope: !5355)
!5384 = !DILocation(line: 1297, column: 2, scope: !5355)
!5385 = !DILocation(line: 1299, column: 25, scope: !5355)
!5386 = !DILocation(line: 1299, column: 2, scope: !5355)
!5387 = !DILocation(line: 1301, column: 12, scope: !5355)
!5388 = !DILocation(line: 1301, column: 2, scope: !5355)
!5389 = !DILocation(line: 1302, column: 12, scope: !5355)
!5390 = !DILocation(line: 1302, column: 2, scope: !5355)
!5391 = !DILocation(line: 1305, column: 7, scope: !5355)
!5392 = !DILocation(line: 1307, column: 7, scope: !5355)
!5393 = !DILocation(line: 1309, column: 7, scope: !5355)
!5394 = !DILocation(line: 1311, column: 7, scope: !5355)
!5395 = !DILocation(line: 1316, column: 7, scope: !5355)
!5396 = !DILocation(line: 1321, column: 7, scope: !5355)
!5397 = !DILocation(line: 1323, column: 7, scope: !5355)
!5398 = !DILocation(line: 1325, column: 7, scope: !5355)
!5399 = !DILocation(line: 1327, column: 7, scope: !5355)
!5400 = !DILocation(line: 1329, column: 6, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 1329, column: 6)
!5402 = !DILocation(line: 1329, column: 13, scope: !5401)
!5403 = !DILocation(line: 1329, column: 20, scope: !5401)
!5404 = !DILocation(line: 1329, column: 6, scope: !5355)
!5405 = !DILocation(line: 1330, column: 8, scope: !5401)
!5406 = !DILocation(line: 1330, column: 3, scope: !5401)
!5407 = !DILocation(line: 1332, column: 8, scope: !5401)
!5408 = !DILocation(line: 1333, column: 9, scope: !5355)
!5409 = !DILocation(line: 1333, column: 15, scope: !5355)
!5410 = !DILocation(line: 1333, column: 26, scope: !5355)
!5411 = !DILocation(line: 1333, column: 2, scope: !5355)
!5412 = !DILocation(line: 1334, column: 26, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 1334, column: 6)
!5414 = !DILocation(line: 1334, column: 6, scope: !5413)
!5415 = !DILocation(line: 1334, column: 6, scope: !5355)
!5416 = !DILocation(line: 1335, column: 10, scope: !5413)
!5417 = !DILocation(line: 1335, column: 16, scope: !5413)
!5418 = !DILocation(line: 1335, column: 27, scope: !5413)
!5419 = !DILocation(line: 1335, column: 3, scope: !5413)
!5420 = !DILocation(line: 1338, column: 2, scope: !5355)
!5421 = !DILocation(line: 1338, column: 11, scope: !5355)
!5422 = !DILocation(line: 1338, column: 27, scope: !5355)
!5423 = !DILocation(line: 1342, column: 9, scope: !5355)
!5424 = !DILocation(line: 1342, column: 18, scope: !5355)
!5425 = !DILocation(line: 1343, column: 9, scope: !5355)
!5426 = !DILocation(line: 1343, column: 18, scope: !5355)
!5427 = !DILocation(line: 1343, column: 33, scope: !5355)
!5428 = !DILocation(line: 1342, column: 2, scope: !5355)
!5429 = !DILocation(line: 1344, column: 1, scope: !5355)
!5430 = distinct !DISubprogram(name: "init_stc_registers", scope: !3, file: !3, line: 1425, type: !358, scopeLine: 1426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5431 = !DILocalVariable(name: "lock", arg: 1, scope: !5432, file: !5433, line: 407, type: !1230)
!5432 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5433, file: !5433, line: 407, type: !5434, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5433 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5434 = !DISubroutineType(types: !5435)
!5435 = !{null, !1230, !364}
!5436 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !5437)
!5437 = distinct !DILocation(line: 1456, column: 2, scope: !5430)
!5438 = !DILocalVariable(name: "flags", arg: 2, scope: !5432, file: !5433, line: 407, type: !364)
!5439 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !5437)
!5440 = !DILocalVariable(name: "lock", arg: 1, scope: !5441, file: !5433, line: 327, type: !1230)
!5441 = distinct !DISubprogram(name: "spinlock_check", scope: !5433, file: !5433, line: 327, type: !5442, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5442 = !DISubroutineType(types: !5443)
!5443 = !{!5444, !1230}
!5444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!5445 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !5446)
!5446 = distinct !DILocation(line: 1432, column: 2, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 1432, column: 2)
!5448 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 1432, column: 2)
!5449 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 1432, column: 2)
!5450 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 1432, column: 2)
!5451 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 1432, column: 2)
!5452 = !DILocalVariable(name: "dev", arg: 1, scope: !5430, file: !3, line: 1425, type: !324)
!5453 = !DILocation(line: 1425, column: 54, scope: !5430)
!5454 = !DILocalVariable(name: "board", scope: !5430, file: !3, line: 1427, type: !4755)
!5455 = !DILocation(line: 1427, column: 31, scope: !5430)
!5456 = !DILocation(line: 1427, column: 39, scope: !5430)
!5457 = !DILocation(line: 1427, column: 44, scope: !5430)
!5458 = !DILocalVariable(name: "devpriv", scope: !5430, file: !3, line: 1428, type: !4645)
!5459 = !DILocation(line: 1428, column: 27, scope: !5430)
!5460 = !DILocation(line: 1428, column: 37, scope: !5430)
!5461 = !DILocation(line: 1428, column: 42, scope: !5430)
!5462 = !DILocalVariable(name: "bits", scope: !5430, file: !3, line: 1429, type: !1025)
!5463 = !DILocation(line: 1429, column: 6, scope: !5430)
!5464 = !DILocalVariable(name: "flags", scope: !5430, file: !3, line: 1430, type: !364)
!5465 = !DILocation(line: 1430, column: 16, scope: !5430)
!5466 = !DILocation(line: 1432, column: 2, scope: !5430)
!5467 = !DILocation(line: 1432, column: 2, scope: !5451)
!5468 = !DILocalVariable(name: "__dummy", scope: !5469, file: !3, line: 1432, type: !364)
!5469 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 1432, column: 2)
!5470 = !DILocation(line: 1432, column: 2, scope: !5469)
!5471 = !DILocalVariable(name: "__dummy2", scope: !5469, file: !3, line: 1432, type: !364)
!5472 = !DILocation(line: 1432, column: 2, scope: !5450)
!5473 = !DILocation(line: 1432, column: 2, scope: !5449)
!5474 = !DILocation(line: 1432, column: 2, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 1432, column: 2)
!5476 = !DILocalVariable(name: "__dummy", scope: !5477, file: !3, line: 1432, type: !364)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 1432, column: 2)
!5478 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 1432, column: 2)
!5479 = !DILocation(line: 1432, column: 2, scope: !5477)
!5480 = !DILocalVariable(name: "__dummy2", scope: !5477, file: !3, line: 1432, type: !364)
!5481 = !DILocation(line: 1432, column: 2, scope: !5478)
!5482 = !DILocation(line: 1432, column: 2, scope: !5448)
!5483 = !{i32 -2141491466}
!5484 = !DILocation(line: 1432, column: 2, scope: !5447)
!5485 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !5446)
!5486 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !5446)
!5487 = !DILocation(line: 1439, column: 3, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 1438, column: 6)
!5489 = !DILocation(line: 1439, column: 12, scope: !5488)
!5490 = !DILocation(line: 1439, column: 30, scope: !5488)
!5491 = !DILocation(line: 1440, column: 9, scope: !5430)
!5492 = !DILocation(line: 1440, column: 18, scope: !5430)
!5493 = !DILocation(line: 1441, column: 9, scope: !5430)
!5494 = !DILocation(line: 1441, column: 18, scope: !5430)
!5495 = !DILocation(line: 1441, column: 30, scope: !5430)
!5496 = !DILocation(line: 1440, column: 2, scope: !5430)
!5497 = !DILocation(line: 1444, column: 15, scope: !5430)
!5498 = !DILocation(line: 1444, column: 24, scope: !5430)
!5499 = !DILocation(line: 1444, column: 36, scope: !5430)
!5500 = !DILocation(line: 1444, column: 2, scope: !5430)
!5501 = !DILocation(line: 1446, column: 7, scope: !5430)
!5502 = !DILocation(line: 1447, column: 6, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 1447, column: 6)
!5504 = !DILocation(line: 1447, column: 13, scope: !5503)
!5505 = !DILocation(line: 1447, column: 20, scope: !5503)
!5506 = !DILocation(line: 1447, column: 6, scope: !5430)
!5507 = !DILocation(line: 1448, column: 8, scope: !5503)
!5508 = !DILocation(line: 1448, column: 3, scope: !5503)
!5509 = !DILocation(line: 1449, column: 29, scope: !5430)
!5510 = !DILocation(line: 1449, column: 2, scope: !5430)
!5511 = !DILocation(line: 1449, column: 11, scope: !5430)
!5512 = !DILocation(line: 1449, column: 26, scope: !5430)
!5513 = !DILocation(line: 1450, column: 9, scope: !5430)
!5514 = !DILocation(line: 1450, column: 18, scope: !5430)
!5515 = !DILocation(line: 1451, column: 9, scope: !5430)
!5516 = !DILocation(line: 1451, column: 18, scope: !5430)
!5517 = !DILocation(line: 1451, column: 30, scope: !5430)
!5518 = !DILocation(line: 1450, column: 2, scope: !5430)
!5519 = !DILocation(line: 1453, column: 12, scope: !5430)
!5520 = !DILocation(line: 1453, column: 21, scope: !5430)
!5521 = !DILocation(line: 1453, column: 33, scope: !5430)
!5522 = !DILocation(line: 1453, column: 2, scope: !5430)
!5523 = !DILocation(line: 1454, column: 12, scope: !5430)
!5524 = !DILocation(line: 1454, column: 21, scope: !5430)
!5525 = !DILocation(line: 1454, column: 33, scope: !5430)
!5526 = !DILocation(line: 1454, column: 2, scope: !5430)
!5527 = !DILocation(line: 1456, column: 26, scope: !5430)
!5528 = !DILocation(line: 1456, column: 31, scope: !5430)
!5529 = !DILocation(line: 1456, column: 41, scope: !5430)
!5530 = !DILocalVariable(name: "__dummy", scope: !5531, file: !5433, line: 409, type: !364)
!5531 = distinct !DILexicalBlock(scope: !5532, file: !5433, line: 409, column: 2)
!5532 = distinct !DILexicalBlock(scope: !5432, file: !5433, line: 409, column: 2)
!5533 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !5437)
!5534 = !DILocalVariable(name: "__dummy2", scope: !5531, file: !5433, line: 409, type: !364)
!5535 = !DILocalVariable(name: "__dummy", scope: !5536, file: !5433, line: 409, type: !364)
!5536 = distinct !DILexicalBlock(scope: !5537, file: !5433, line: 409, column: 2)
!5537 = distinct !DILexicalBlock(scope: !5538, file: !5433, line: 409, column: 2)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !5433, line: 409, column: 2)
!5539 = distinct !DILexicalBlock(scope: !5532, file: !5433, line: 409, column: 2)
!5540 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !5437)
!5541 = !DILocalVariable(name: "__dummy2", scope: !5536, file: !5433, line: 409, type: !364)
!5542 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !5437)
!5543 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !5437)
!5544 = distinct !DILexicalBlock(scope: !5539, file: !5433, line: 409, column: 2)
!5545 = !{i32 -2145363315}
!5546 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !5437)
!5547 = distinct !DILexicalBlock(scope: !5544, file: !5433, line: 409, column: 2)
!5548 = !DILocation(line: 1459, column: 2, scope: !5430)
!5549 = !DILocation(line: 1459, column: 11, scope: !5430)
!5550 = !DILocation(line: 1459, column: 26, scope: !5430)
!5551 = !DILocation(line: 1460, column: 29, scope: !5430)
!5552 = !DILocation(line: 1460, column: 34, scope: !5430)
!5553 = !DILocation(line: 1460, column: 41, scope: !5430)
!5554 = !DILocation(line: 1460, column: 50, scope: !5430)
!5555 = !DILocation(line: 1460, column: 2, scope: !5430)
!5556 = !DILocation(line: 1462, column: 2, scope: !5430)
!5557 = !DILocation(line: 1462, column: 11, scope: !5430)
!5558 = !DILocation(line: 1462, column: 29, scope: !5430)
!5559 = !DILocation(line: 1463, column: 2, scope: !5430)
!5560 = !DILocation(line: 1463, column: 11, scope: !5430)
!5561 = !DILocation(line: 1463, column: 28, scope: !5430)
!5562 = !DILocation(line: 1466, column: 9, scope: !5430)
!5563 = !DILocation(line: 1466, column: 18, scope: !5430)
!5564 = !DILocation(line: 1467, column: 9, scope: !5430)
!5565 = !DILocation(line: 1467, column: 18, scope: !5430)
!5566 = !DILocation(line: 1467, column: 30, scope: !5430)
!5567 = !DILocation(line: 1466, column: 2, scope: !5430)
!5568 = !DILocation(line: 1469, column: 20, scope: !5430)
!5569 = !DILocation(line: 1469, column: 2, scope: !5430)
!5570 = !DILocation(line: 1470, column: 1, scope: !5430)
!5571 = distinct !DISubprogram(name: "request_irq", scope: !4430, file: !4430, line: 157, type: !5572, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5572 = !DISubroutineType(types: !5573)
!5573 = !{!323, !7, !5574, !364, !334, !374}
!5574 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !4430, line: 92, baseType: !5575)
!5575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5576, size: 64)
!5576 = !DISubroutineType(types: !5577)
!5577 = !{!5578, !323, !374}
!5578 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !221, line: 17, baseType: !220)
!5579 = !DILocalVariable(name: "irq", arg: 1, scope: !5571, file: !4430, line: 157, type: !7)
!5580 = !DILocation(line: 157, column: 26, scope: !5571)
!5581 = !DILocalVariable(name: "handler", arg: 2, scope: !5571, file: !4430, line: 157, type: !5574)
!5582 = !DILocation(line: 157, column: 45, scope: !5571)
!5583 = !DILocalVariable(name: "flags", arg: 3, scope: !5571, file: !4430, line: 157, type: !364)
!5584 = !DILocation(line: 157, column: 68, scope: !5571)
!5585 = !DILocalVariable(name: "name", arg: 4, scope: !5571, file: !4430, line: 158, type: !334)
!5586 = !DILocation(line: 158, column: 18, scope: !5571)
!5587 = !DILocalVariable(name: "dev", arg: 5, scope: !5571, file: !4430, line: 158, type: !374)
!5588 = !DILocation(line: 158, column: 30, scope: !5571)
!5589 = !DILocation(line: 160, column: 30, scope: !5571)
!5590 = !DILocation(line: 160, column: 35, scope: !5571)
!5591 = !DILocation(line: 160, column: 50, scope: !5571)
!5592 = !DILocation(line: 160, column: 57, scope: !5571)
!5593 = !DILocation(line: 160, column: 63, scope: !5571)
!5594 = !DILocation(line: 160, column: 9, scope: !5571)
!5595 = !DILocation(line: 160, column: 2, scope: !5571)
!5596 = distinct !DISubprogram(name: "handle_interrupt", scope: !3, file: !3, line: 3043, type: !5576, scopeLine: 3044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5597 = !DILocalVariable(name: "irq", arg: 1, scope: !5596, file: !3, line: 3043, type: !323)
!5598 = !DILocation(line: 3043, column: 41, scope: !5596)
!5599 = !DILocalVariable(name: "d", arg: 2, scope: !5596, file: !3, line: 3043, type: !374)
!5600 = !DILocation(line: 3043, column: 52, scope: !5596)
!5601 = !DILocalVariable(name: "dev", scope: !5596, file: !3, line: 3045, type: !324)
!5602 = !DILocation(line: 3045, column: 24, scope: !5596)
!5603 = !DILocation(line: 3045, column: 30, scope: !5596)
!5604 = !DILocalVariable(name: "devpriv", scope: !5596, file: !3, line: 3046, type: !4645)
!5605 = !DILocation(line: 3046, column: 27, scope: !5596)
!5606 = !DILocation(line: 3046, column: 37, scope: !5596)
!5607 = !DILocation(line: 3046, column: 42, scope: !5596)
!5608 = !DILocalVariable(name: "status", scope: !5596, file: !3, line: 3047, type: !482)
!5609 = !DILocation(line: 3047, column: 17, scope: !5596)
!5610 = !DILocalVariable(name: "plx_status", scope: !5596, file: !3, line: 3048, type: !580)
!5611 = !DILocation(line: 3048, column: 6, scope: !5596)
!5612 = !DILocalVariable(name: "plx_bits", scope: !5596, file: !3, line: 3049, type: !580)
!5613 = !DILocation(line: 3049, column: 6, scope: !5596)
!5614 = !DILocation(line: 3051, column: 21, scope: !5596)
!5615 = !DILocation(line: 3051, column: 30, scope: !5596)
!5616 = !DILocation(line: 3051, column: 45, scope: !5596)
!5617 = !DILocation(line: 3051, column: 15, scope: !5596)
!5618 = !DILocation(line: 3051, column: 13, scope: !5596)
!5619 = !DILocation(line: 3052, column: 17, scope: !5596)
!5620 = !DILocation(line: 3052, column: 26, scope: !5596)
!5621 = !DILocation(line: 3052, column: 38, scope: !5596)
!5622 = !DILocation(line: 3052, column: 11, scope: !5596)
!5623 = !DILocation(line: 3052, column: 9, scope: !5596)
!5624 = !DILocation(line: 3059, column: 7, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 3059, column: 6)
!5626 = !DILocation(line: 3059, column: 12, scope: !5625)
!5627 = !DILocation(line: 3059, column: 6, scope: !5596)
!5628 = !DILocation(line: 3060, column: 3, scope: !5625)
!5629 = !DILocation(line: 3062, column: 22, scope: !5596)
!5630 = !DILocation(line: 3062, column: 27, scope: !5596)
!5631 = !DILocation(line: 3062, column: 35, scope: !5596)
!5632 = !DILocation(line: 3062, column: 2, scope: !5596)
!5633 = !DILocation(line: 3063, column: 22, scope: !5596)
!5634 = !DILocation(line: 3063, column: 27, scope: !5596)
!5635 = !DILocation(line: 3063, column: 35, scope: !5596)
!5636 = !DILocation(line: 3063, column: 2, scope: !5596)
!5637 = !DILocation(line: 3066, column: 6, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 3066, column: 6)
!5639 = !DILocation(line: 3066, column: 17, scope: !5638)
!5640 = !DILocation(line: 3066, column: 6, scope: !5596)
!5641 = !DILocation(line: 3068, column: 20, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 3066, column: 37)
!5643 = !DILocation(line: 3068, column: 29, scope: !5642)
!5644 = !DILocation(line: 3068, column: 44, scope: !5642)
!5645 = !DILocation(line: 3068, column: 14, scope: !5642)
!5646 = !DILocation(line: 3068, column: 12, scope: !5642)
!5647 = !DILocation(line: 3069, column: 10, scope: !5642)
!5648 = !DILocation(line: 3069, column: 20, scope: !5642)
!5649 = !DILocation(line: 3069, column: 29, scope: !5642)
!5650 = !DILocation(line: 3069, column: 44, scope: !5642)
!5651 = !DILocation(line: 3069, column: 3, scope: !5642)
!5652 = !DILocation(line: 3070, column: 2, scope: !5642)
!5653 = !DILocation(line: 3072, column: 2, scope: !5596)
!5654 = !DILocation(line: 3073, column: 1, scope: !5596)
!5655 = distinct !DISubprogram(name: "setup_subdevices", scope: !3, file: !3, line: 3785, type: !4137, scopeLine: 3786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!5656 = !DILocalVariable(name: "dev", arg: 1, scope: !5655, file: !3, line: 3785, type: !324)
!5657 = !DILocation(line: 3785, column: 51, scope: !5655)
!5658 = !DILocalVariable(name: "board", scope: !5655, file: !3, line: 3787, type: !4755)
!5659 = !DILocation(line: 3787, column: 31, scope: !5655)
!5660 = !DILocation(line: 3787, column: 39, scope: !5655)
!5661 = !DILocation(line: 3787, column: 44, scope: !5655)
!5662 = !DILocalVariable(name: "devpriv", scope: !5655, file: !3, line: 3788, type: !4645)
!5663 = !DILocation(line: 3788, column: 27, scope: !5655)
!5664 = !DILocation(line: 3788, column: 37, scope: !5655)
!5665 = !DILocation(line: 3788, column: 42, scope: !5655)
!5666 = !DILocalVariable(name: "s", scope: !5655, file: !3, line: 3789, type: !3995)
!5667 = !DILocation(line: 3789, column: 27, scope: !5655)
!5668 = !DILocalVariable(name: "i", scope: !5655, file: !3, line: 3790, type: !323)
!5669 = !DILocation(line: 3790, column: 6, scope: !5655)
!5670 = !DILocalVariable(name: "ret", scope: !5655, file: !3, line: 3791, type: !323)
!5671 = !DILocation(line: 3791, column: 6, scope: !5655)
!5672 = !DILocation(line: 3793, column: 32, scope: !5655)
!5673 = !DILocation(line: 3793, column: 8, scope: !5655)
!5674 = !DILocation(line: 3793, column: 6, scope: !5655)
!5675 = !DILocation(line: 3794, column: 6, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3794, column: 6)
!5677 = !DILocation(line: 3794, column: 6, scope: !5655)
!5678 = !DILocation(line: 3795, column: 10, scope: !5676)
!5679 = !DILocation(line: 3795, column: 3, scope: !5676)
!5680 = !DILocation(line: 3797, column: 7, scope: !5655)
!5681 = !DILocation(line: 3797, column: 12, scope: !5655)
!5682 = !DILocation(line: 3797, column: 4, scope: !5655)
!5683 = !DILocation(line: 3799, column: 21, scope: !5655)
!5684 = !DILocation(line: 3799, column: 2, scope: !5655)
!5685 = !DILocation(line: 3799, column: 7, scope: !5655)
!5686 = !DILocation(line: 3799, column: 19, scope: !5655)
!5687 = !DILocation(line: 3800, column: 2, scope: !5655)
!5688 = !DILocation(line: 3800, column: 5, scope: !5655)
!5689 = !DILocation(line: 3800, column: 10, scope: !5655)
!5690 = !DILocation(line: 3801, column: 2, scope: !5655)
!5691 = !DILocation(line: 3801, column: 5, scope: !5655)
!5692 = !DILocation(line: 3801, column: 18, scope: !5655)
!5693 = !DILocation(line: 3802, column: 6, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3802, column: 6)
!5695 = !DILocation(line: 3802, column: 13, scope: !5694)
!5696 = !DILocation(line: 3802, column: 20, scope: !5694)
!5697 = !DILocation(line: 3802, column: 6, scope: !5655)
!5698 = !DILocation(line: 3803, column: 3, scope: !5694)
!5699 = !DILocation(line: 3803, column: 6, scope: !5694)
!5700 = !DILocation(line: 3803, column: 19, scope: !5694)
!5701 = !DILocation(line: 3804, column: 11, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5694, file: !3, line: 3804, column: 11)
!5703 = !DILocation(line: 3804, column: 18, scope: !5702)
!5704 = !DILocation(line: 3804, column: 25, scope: !5702)
!5705 = !DILocation(line: 3804, column: 11, scope: !5694)
!5706 = !DILocation(line: 3805, column: 3, scope: !5702)
!5707 = !DILocation(line: 3805, column: 6, scope: !5702)
!5708 = !DILocation(line: 3805, column: 19, scope: !5702)
!5709 = !DILocation(line: 3807, column: 14, scope: !5655)
!5710 = !DILocation(line: 3807, column: 21, scope: !5655)
!5711 = !DILocation(line: 3807, column: 2, scope: !5655)
!5712 = !DILocation(line: 3807, column: 5, scope: !5655)
!5713 = !DILocation(line: 3807, column: 12, scope: !5655)
!5714 = !DILocation(line: 3808, column: 2, scope: !5655)
!5715 = !DILocation(line: 3808, column: 5, scope: !5655)
!5716 = !DILocation(line: 3808, column: 18, scope: !5655)
!5717 = !DILocation(line: 3809, column: 21, scope: !5655)
!5718 = !DILocation(line: 3809, column: 28, scope: !5655)
!5719 = !DILocation(line: 3809, column: 18, scope: !5655)
!5720 = !DILocation(line: 3809, column: 37, scope: !5655)
!5721 = !DILocation(line: 3809, column: 2, scope: !5655)
!5722 = !DILocation(line: 3809, column: 5, scope: !5655)
!5723 = !DILocation(line: 3809, column: 13, scope: !5655)
!5724 = !DILocation(line: 3810, column: 19, scope: !5655)
!5725 = !DILocation(line: 3810, column: 26, scope: !5655)
!5726 = !DILocation(line: 3810, column: 2, scope: !5655)
!5727 = !DILocation(line: 3810, column: 5, scope: !5655)
!5728 = !DILocation(line: 3810, column: 17, scope: !5655)
!5729 = !DILocation(line: 3811, column: 2, scope: !5655)
!5730 = !DILocation(line: 3811, column: 5, scope: !5655)
!5731 = !DILocation(line: 3811, column: 15, scope: !5655)
!5732 = !DILocation(line: 3812, column: 2, scope: !5655)
!5733 = !DILocation(line: 3812, column: 5, scope: !5655)
!5734 = !DILocation(line: 3812, column: 17, scope: !5655)
!5735 = !DILocation(line: 3813, column: 2, scope: !5655)
!5736 = !DILocation(line: 3813, column: 5, scope: !5655)
!5737 = !DILocation(line: 3813, column: 12, scope: !5655)
!5738 = !DILocation(line: 3814, column: 2, scope: !5655)
!5739 = !DILocation(line: 3814, column: 5, scope: !5655)
!5740 = !DILocation(line: 3814, column: 16, scope: !5655)
!5741 = !DILocation(line: 3815, column: 2, scope: !5655)
!5742 = !DILocation(line: 3815, column: 5, scope: !5655)
!5743 = !DILocation(line: 3815, column: 12, scope: !5655)
!5744 = !DILocation(line: 3816, column: 6, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3816, column: 6)
!5746 = !DILocation(line: 3816, column: 13, scope: !5745)
!5747 = !DILocation(line: 3816, column: 20, scope: !5745)
!5748 = !DILocation(line: 3816, column: 6, scope: !5655)
!5749 = !DILocalVariable(name: "data", scope: !5750, file: !3, line: 3817, type: !1518)
!5750 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 3816, column: 36)
!5751 = !DILocation(line: 3817, column: 6, scope: !5750)
!5752 = !DILocation(line: 3822, column: 33, scope: !5750)
!5753 = !DILocation(line: 3822, column: 3, scope: !5750)
!5754 = !DILocation(line: 3822, column: 12, scope: !5750)
!5755 = !DILocation(line: 3822, column: 31, scope: !5750)
!5756 = !DILocation(line: 3824, column: 10, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 3824, column: 3)
!5758 = !DILocation(line: 3824, column: 8, scope: !5757)
!5759 = !DILocation(line: 3824, column: 15, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 3824, column: 3)
!5761 = !DILocation(line: 3824, column: 19, scope: !5760)
!5762 = !DILocation(line: 3824, column: 22, scope: !5760)
!5763 = !DILocation(line: 3824, column: 17, scope: !5760)
!5764 = !DILocation(line: 3824, column: 3, scope: !5757)
!5765 = !DILocation(line: 3825, column: 49, scope: !5760)
!5766 = !DILocation(line: 3825, column: 35, scope: !5760)
!5767 = !DILocation(line: 3825, column: 4, scope: !5760)
!5768 = !DILocation(line: 3825, column: 13, scope: !5760)
!5769 = !DILocation(line: 3825, column: 32, scope: !5760)
!5770 = !DILocation(line: 3824, column: 31, scope: !5760)
!5771 = !DILocation(line: 3824, column: 3, scope: !5760)
!5772 = distinct !{!5772, !5764, !5773}
!5773 = !DILocation(line: 3825, column: 50, scope: !5757)
!5774 = !DILocation(line: 3826, column: 10, scope: !5750)
!5775 = !DILocation(line: 3826, column: 19, scope: !5750)
!5776 = !DILocation(line: 3826, column: 8, scope: !5750)
!5777 = !DILocation(line: 3827, column: 13, scope: !5750)
!5778 = !DILocation(line: 3827, column: 3, scope: !5750)
!5779 = !DILocation(line: 3828, column: 2, scope: !5750)
!5780 = !DILocation(line: 3831, column: 7, scope: !5655)
!5781 = !DILocation(line: 3831, column: 12, scope: !5655)
!5782 = !DILocation(line: 3831, column: 4, scope: !5655)
!5783 = !DILocation(line: 3832, column: 6, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3832, column: 6)
!5785 = !DILocation(line: 3832, column: 13, scope: !5784)
!5786 = !DILocation(line: 3832, column: 6, scope: !5655)
!5787 = !DILocation(line: 3833, column: 3, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 3832, column: 23)
!5789 = !DILocation(line: 3833, column: 6, scope: !5788)
!5790 = !DILocation(line: 3833, column: 11, scope: !5788)
!5791 = !DILocation(line: 3834, column: 3, scope: !5788)
!5792 = !DILocation(line: 3834, column: 6, scope: !5788)
!5793 = !DILocation(line: 3834, column: 19, scope: !5788)
!5794 = !DILocation(line: 3836, column: 15, scope: !5788)
!5795 = !DILocation(line: 3836, column: 22, scope: !5788)
!5796 = !DILocation(line: 3836, column: 3, scope: !5788)
!5797 = !DILocation(line: 3836, column: 6, scope: !5788)
!5798 = !DILocation(line: 3836, column: 13, scope: !5788)
!5799 = !DILocation(line: 3837, column: 22, scope: !5788)
!5800 = !DILocation(line: 3837, column: 29, scope: !5788)
!5801 = !DILocation(line: 3837, column: 19, scope: !5788)
!5802 = !DILocation(line: 3837, column: 38, scope: !5788)
!5803 = !DILocation(line: 3837, column: 3, scope: !5788)
!5804 = !DILocation(line: 3837, column: 6, scope: !5788)
!5805 = !DILocation(line: 3837, column: 14, scope: !5788)
!5806 = !DILocation(line: 3838, column: 20, scope: !5788)
!5807 = !DILocation(line: 3838, column: 27, scope: !5788)
!5808 = !DILocation(line: 3838, column: 3, scope: !5788)
!5809 = !DILocation(line: 3838, column: 6, scope: !5788)
!5810 = !DILocation(line: 3838, column: 18, scope: !5788)
!5811 = !DILocation(line: 3839, column: 3, scope: !5788)
!5812 = !DILocation(line: 3839, column: 6, scope: !5788)
!5813 = !DILocation(line: 3839, column: 17, scope: !5788)
!5814 = !DILocation(line: 3841, column: 38, scope: !5788)
!5815 = !DILocation(line: 3841, column: 9, scope: !5788)
!5816 = !DILocation(line: 3841, column: 7, scope: !5788)
!5817 = !DILocation(line: 3842, column: 7, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 3842, column: 7)
!5819 = !DILocation(line: 3842, column: 7, scope: !5788)
!5820 = !DILocation(line: 3843, column: 11, scope: !5818)
!5821 = !DILocation(line: 3843, column: 4, scope: !5818)
!5822 = !DILocation(line: 3845, column: 27, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 3845, column: 7)
!5824 = !DILocation(line: 3845, column: 7, scope: !5823)
!5825 = !DILocation(line: 3845, column: 7, scope: !5788)
!5826 = !DILocation(line: 3846, column: 24, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3845, column: 35)
!5828 = !DILocation(line: 3846, column: 4, scope: !5827)
!5829 = !DILocation(line: 3846, column: 9, scope: !5827)
!5830 = !DILocation(line: 3846, column: 22, scope: !5827)
!5831 = !DILocation(line: 3847, column: 4, scope: !5827)
!5832 = !DILocation(line: 3847, column: 7, scope: !5827)
!5833 = !DILocation(line: 3847, column: 18, scope: !5827)
!5834 = !DILocation(line: 3848, column: 4, scope: !5827)
!5835 = !DILocation(line: 3848, column: 7, scope: !5827)
!5836 = !DILocation(line: 3848, column: 14, scope: !5827)
!5837 = !DILocation(line: 3849, column: 22, scope: !5827)
!5838 = !DILocation(line: 3849, column: 29, scope: !5827)
!5839 = !DILocation(line: 3849, column: 4, scope: !5827)
!5840 = !DILocation(line: 3849, column: 7, scope: !5827)
!5841 = !DILocation(line: 3849, column: 20, scope: !5827)
!5842 = !DILocation(line: 3850, column: 4, scope: !5827)
!5843 = !DILocation(line: 3850, column: 7, scope: !5827)
!5844 = !DILocation(line: 3850, column: 14, scope: !5827)
!5845 = !DILocation(line: 3851, column: 3, scope: !5827)
!5846 = !DILocation(line: 3852, column: 2, scope: !5788)
!5847 = !DILocation(line: 3853, column: 3, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 3852, column: 9)
!5849 = !DILocation(line: 3853, column: 6, scope: !5848)
!5850 = !DILocation(line: 3853, column: 11, scope: !5848)
!5851 = !DILocation(line: 3857, column: 7, scope: !5655)
!5852 = !DILocation(line: 3857, column: 12, scope: !5655)
!5853 = !DILocation(line: 3857, column: 4, scope: !5655)
!5854 = !DILocation(line: 3858, column: 6, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3858, column: 6)
!5856 = !DILocation(line: 3858, column: 13, scope: !5855)
!5857 = !DILocation(line: 3858, column: 20, scope: !5855)
!5858 = !DILocation(line: 3858, column: 6, scope: !5655)
!5859 = !DILocation(line: 3859, column: 3, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 3858, column: 36)
!5861 = !DILocation(line: 3859, column: 6, scope: !5860)
!5862 = !DILocation(line: 3859, column: 11, scope: !5860)
!5863 = !DILocation(line: 3860, column: 3, scope: !5860)
!5864 = !DILocation(line: 3860, column: 6, scope: !5860)
!5865 = !DILocation(line: 3860, column: 19, scope: !5860)
!5866 = !DILocation(line: 3861, column: 3, scope: !5860)
!5867 = !DILocation(line: 3861, column: 6, scope: !5860)
!5868 = !DILocation(line: 3861, column: 13, scope: !5860)
!5869 = !DILocation(line: 3862, column: 3, scope: !5860)
!5870 = !DILocation(line: 3862, column: 6, scope: !5860)
!5871 = !DILocation(line: 3862, column: 14, scope: !5860)
!5872 = !DILocation(line: 3863, column: 3, scope: !5860)
!5873 = !DILocation(line: 3863, column: 6, scope: !5860)
!5874 = !DILocation(line: 3863, column: 18, scope: !5860)
!5875 = !DILocation(line: 3864, column: 3, scope: !5860)
!5876 = !DILocation(line: 3864, column: 6, scope: !5860)
!5877 = !DILocation(line: 3864, column: 16, scope: !5860)
!5878 = !DILocation(line: 3865, column: 2, scope: !5860)
!5879 = !DILocation(line: 3866, column: 3, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 3865, column: 9)
!5881 = !DILocation(line: 3866, column: 6, scope: !5880)
!5882 = !DILocation(line: 3866, column: 11, scope: !5880)
!5883 = !DILocation(line: 3870, column: 6, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3870, column: 6)
!5885 = !DILocation(line: 3870, column: 13, scope: !5884)
!5886 = !DILocation(line: 3870, column: 20, scope: !5884)
!5887 = !DILocation(line: 3870, column: 6, scope: !5655)
!5888 = !DILocation(line: 3871, column: 8, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 3870, column: 36)
!5890 = !DILocation(line: 3871, column: 13, scope: !5889)
!5891 = !DILocation(line: 3871, column: 5, scope: !5889)
!5892 = !DILocation(line: 3872, column: 3, scope: !5889)
!5893 = !DILocation(line: 3872, column: 6, scope: !5889)
!5894 = !DILocation(line: 3872, column: 11, scope: !5889)
!5895 = !DILocation(line: 3873, column: 3, scope: !5889)
!5896 = !DILocation(line: 3873, column: 6, scope: !5889)
!5897 = !DILocation(line: 3873, column: 19, scope: !5889)
!5898 = !DILocation(line: 3874, column: 3, scope: !5889)
!5899 = !DILocation(line: 3874, column: 6, scope: !5889)
!5900 = !DILocation(line: 3874, column: 13, scope: !5889)
!5901 = !DILocation(line: 3875, column: 3, scope: !5889)
!5902 = !DILocation(line: 3875, column: 6, scope: !5889)
!5903 = !DILocation(line: 3875, column: 14, scope: !5889)
!5904 = !DILocation(line: 3876, column: 3, scope: !5889)
!5905 = !DILocation(line: 3876, column: 6, scope: !5889)
!5906 = !DILocation(line: 3876, column: 18, scope: !5889)
!5907 = !DILocation(line: 3877, column: 3, scope: !5889)
!5908 = !DILocation(line: 3877, column: 6, scope: !5889)
!5909 = !DILocation(line: 3877, column: 16, scope: !5889)
!5910 = !DILocation(line: 3878, column: 2, scope: !5889)
!5911 = !DILocation(line: 3879, column: 3, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 3878, column: 9)
!5913 = !DILocation(line: 3879, column: 6, scope: !5912)
!5914 = !DILocation(line: 3879, column: 11, scope: !5912)
!5915 = !DILocation(line: 3883, column: 7, scope: !5655)
!5916 = !DILocation(line: 3883, column: 12, scope: !5655)
!5917 = !DILocation(line: 3883, column: 4, scope: !5655)
!5918 = !DILocation(line: 3884, column: 6, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3884, column: 6)
!5920 = !DILocation(line: 3884, column: 13, scope: !5919)
!5921 = !DILocation(line: 3884, column: 6, scope: !5655)
!5922 = !DILocation(line: 3885, column: 7, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 3885, column: 7)
!5924 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 3884, column: 23)
!5925 = !DILocation(line: 3885, column: 14, scope: !5923)
!5926 = !DILocation(line: 3885, column: 21, scope: !5923)
!5927 = !DILocation(line: 3885, column: 7, scope: !5924)
!5928 = !DILocation(line: 3886, column: 27, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 3885, column: 37)
!5930 = !DILocation(line: 3886, column: 32, scope: !5929)
!5931 = !DILocation(line: 3886, column: 10, scope: !5929)
!5932 = !DILocation(line: 3886, column: 8, scope: !5929)
!5933 = !DILocation(line: 3888, column: 3, scope: !5929)
!5934 = !DILocation(line: 3889, column: 30, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 3888, column: 10)
!5936 = !DILocation(line: 3889, column: 35, scope: !5935)
!5937 = !DILocation(line: 3889, column: 10, scope: !5935)
!5938 = !DILocation(line: 3889, column: 8, scope: !5935)
!5939 = !DILocation(line: 3892, column: 7, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 3892, column: 7)
!5941 = !DILocation(line: 3892, column: 7, scope: !5924)
!5942 = !DILocation(line: 3893, column: 11, scope: !5940)
!5943 = !DILocation(line: 3893, column: 4, scope: !5940)
!5944 = !DILocation(line: 3894, column: 2, scope: !5924)
!5945 = !DILocation(line: 3895, column: 3, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 3894, column: 9)
!5947 = !DILocation(line: 3895, column: 6, scope: !5946)
!5948 = !DILocation(line: 3895, column: 11, scope: !5946)
!5949 = !DILocation(line: 3899, column: 7, scope: !5655)
!5950 = !DILocation(line: 3899, column: 12, scope: !5655)
!5951 = !DILocation(line: 3899, column: 4, scope: !5655)
!5952 = !DILocation(line: 3900, column: 6, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3900, column: 6)
!5954 = !DILocation(line: 3900, column: 13, scope: !5953)
!5955 = !DILocation(line: 3900, column: 20, scope: !5953)
!5956 = !DILocation(line: 3900, column: 6, scope: !5655)
!5957 = !DILocation(line: 3901, column: 3, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 3900, column: 36)
!5959 = !DILocation(line: 3901, column: 6, scope: !5958)
!5960 = !DILocation(line: 3901, column: 11, scope: !5958)
!5961 = !DILocation(line: 3902, column: 3, scope: !5958)
!5962 = !DILocation(line: 3902, column: 6, scope: !5958)
!5963 = !DILocation(line: 3902, column: 19, scope: !5958)
!5964 = !DILocation(line: 3903, column: 3, scope: !5958)
!5965 = !DILocation(line: 3903, column: 6, scope: !5958)
!5966 = !DILocation(line: 3903, column: 13, scope: !5958)
!5967 = !DILocation(line: 3904, column: 3, scope: !5958)
!5968 = !DILocation(line: 3904, column: 6, scope: !5958)
!5969 = !DILocation(line: 3904, column: 14, scope: !5958)
!5970 = !DILocation(line: 3905, column: 3, scope: !5958)
!5971 = !DILocation(line: 3905, column: 6, scope: !5958)
!5972 = !DILocation(line: 3905, column: 18, scope: !5958)
!5973 = !DILocation(line: 3906, column: 3, scope: !5958)
!5974 = !DILocation(line: 3906, column: 6, scope: !5958)
!5975 = !DILocation(line: 3906, column: 18, scope: !5958)
!5976 = !DILocation(line: 3907, column: 3, scope: !5958)
!5977 = !DILocation(line: 3907, column: 6, scope: !5958)
!5978 = !DILocation(line: 3907, column: 16, scope: !5958)
!5979 = !DILocation(line: 3908, column: 2, scope: !5958)
!5980 = !DILocation(line: 3909, column: 3, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 3908, column: 9)
!5982 = !DILocation(line: 3909, column: 6, scope: !5981)
!5983 = !DILocation(line: 3909, column: 11, scope: !5981)
!5984 = !DILocation(line: 3913, column: 7, scope: !5655)
!5985 = !DILocation(line: 3913, column: 12, scope: !5655)
!5986 = !DILocation(line: 3913, column: 4, scope: !5655)
!5987 = !DILocation(line: 3914, column: 2, scope: !5655)
!5988 = !DILocation(line: 3914, column: 5, scope: !5655)
!5989 = !DILocation(line: 3914, column: 10, scope: !5655)
!5990 = !DILocation(line: 3915, column: 2, scope: !5655)
!5991 = !DILocation(line: 3915, column: 5, scope: !5655)
!5992 = !DILocation(line: 3915, column: 18, scope: !5655)
!5993 = !DILocation(line: 3916, column: 2, scope: !5655)
!5994 = !DILocation(line: 3916, column: 5, scope: !5655)
!5995 = !DILocation(line: 3916, column: 12, scope: !5655)
!5996 = !DILocation(line: 3917, column: 6, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3917, column: 6)
!5998 = !DILocation(line: 3917, column: 13, scope: !5997)
!5999 = !DILocation(line: 3917, column: 20, scope: !5997)
!6000 = !DILocation(line: 3917, column: 6, scope: !5655)
!6001 = !DILocation(line: 3918, column: 3, scope: !5997)
!6002 = !DILocation(line: 3918, column: 6, scope: !5997)
!6003 = !DILocation(line: 3918, column: 14, scope: !5997)
!6004 = !DILocation(line: 3920, column: 3, scope: !5997)
!6005 = !DILocation(line: 3920, column: 6, scope: !5997)
!6006 = !DILocation(line: 3920, column: 14, scope: !5997)
!6007 = !DILocation(line: 3921, column: 2, scope: !5655)
!6008 = !DILocation(line: 3921, column: 5, scope: !5655)
!6009 = !DILocation(line: 3921, column: 16, scope: !5655)
!6010 = !DILocation(line: 3923, column: 37, scope: !5655)
!6011 = !DILocation(line: 3923, column: 8, scope: !5655)
!6012 = !DILocation(line: 3923, column: 6, scope: !5655)
!6013 = !DILocation(line: 3924, column: 6, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3924, column: 6)
!6015 = !DILocation(line: 3924, column: 6, scope: !5655)
!6016 = !DILocation(line: 3925, column: 10, scope: !6014)
!6017 = !DILocation(line: 3925, column: 3, scope: !6014)
!6018 = !DILocation(line: 3927, column: 9, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3927, column: 2)
!6020 = !DILocation(line: 3927, column: 7, scope: !6019)
!6021 = !DILocation(line: 3927, column: 14, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 3927, column: 2)
!6023 = !DILocation(line: 3927, column: 18, scope: !6022)
!6024 = !DILocation(line: 3927, column: 21, scope: !6022)
!6025 = !DILocation(line: 3927, column: 16, scope: !6022)
!6026 = !DILocation(line: 3927, column: 2, scope: !6019)
!6027 = !DILocation(line: 3928, column: 16, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 3927, column: 34)
!6029 = !DILocation(line: 3928, column: 21, scope: !6028)
!6030 = !DILocation(line: 3928, column: 24, scope: !6028)
!6031 = !DILocation(line: 3928, column: 27, scope: !6028)
!6032 = !DILocation(line: 3928, column: 35, scope: !6028)
!6033 = !DILocation(line: 3928, column: 3, scope: !6028)
!6034 = !DILocation(line: 3929, column: 20, scope: !6028)
!6035 = !DILocation(line: 3929, column: 23, scope: !6028)
!6036 = !DILocation(line: 3929, column: 31, scope: !6028)
!6037 = !DILocation(line: 3929, column: 3, scope: !6028)
!6038 = !DILocation(line: 3929, column: 6, scope: !6028)
!6039 = !DILocation(line: 3929, column: 15, scope: !6028)
!6040 = !DILocation(line: 3929, column: 18, scope: !6028)
!6041 = !DILocation(line: 3930, column: 2, scope: !6028)
!6042 = !DILocation(line: 3927, column: 30, scope: !6022)
!6043 = !DILocation(line: 3927, column: 2, scope: !6022)
!6044 = distinct !{!6044, !6026, !6045}
!6045 = !DILocation(line: 3930, column: 2, scope: !6019)
!6046 = !DILocation(line: 3933, column: 7, scope: !5655)
!6047 = !DILocation(line: 3933, column: 12, scope: !5655)
!6048 = !DILocation(line: 3933, column: 4, scope: !5655)
!6049 = !DILocation(line: 3934, column: 6, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3934, column: 6)
!6051 = !DILocation(line: 3934, column: 13, scope: !6050)
!6052 = !DILocation(line: 3934, column: 20, scope: !6050)
!6053 = !DILocation(line: 3934, column: 6, scope: !5655)
!6054 = !DILocation(line: 3935, column: 3, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 3934, column: 36)
!6056 = !DILocation(line: 3935, column: 6, scope: !6055)
!6057 = !DILocation(line: 3935, column: 11, scope: !6055)
!6058 = !DILocation(line: 3936, column: 3, scope: !6055)
!6059 = !DILocation(line: 3936, column: 6, scope: !6055)
!6060 = !DILocation(line: 3936, column: 19, scope: !6055)
!6061 = !DILocation(line: 3937, column: 3, scope: !6055)
!6062 = !DILocation(line: 3937, column: 6, scope: !6055)
!6063 = !DILocation(line: 3937, column: 13, scope: !6055)
!6064 = !DILocation(line: 3938, column: 3, scope: !6055)
!6065 = !DILocation(line: 3938, column: 6, scope: !6055)
!6066 = !DILocation(line: 3938, column: 14, scope: !6055)
!6067 = !DILocation(line: 3939, column: 3, scope: !6055)
!6068 = !DILocation(line: 3939, column: 6, scope: !6055)
!6069 = !DILocation(line: 3939, column: 17, scope: !6055)
!6070 = !DILocation(line: 3941, column: 38, scope: !6055)
!6071 = !DILocation(line: 3941, column: 9, scope: !6055)
!6072 = !DILocation(line: 3941, column: 7, scope: !6055)
!6073 = !DILocation(line: 3942, column: 7, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 3942, column: 7)
!6075 = !DILocation(line: 3942, column: 7, scope: !6055)
!6076 = !DILocation(line: 3943, column: 11, scope: !6074)
!6077 = !DILocation(line: 3943, column: 4, scope: !6074)
!6078 = !DILocation(line: 3945, column: 10, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 3945, column: 3)
!6080 = !DILocation(line: 3945, column: 8, scope: !6079)
!6081 = !DILocation(line: 3945, column: 15, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 3945, column: 3)
!6083 = !DILocation(line: 3945, column: 19, scope: !6082)
!6084 = !DILocation(line: 3945, column: 22, scope: !6082)
!6085 = !DILocation(line: 3945, column: 17, scope: !6082)
!6086 = !DILocation(line: 3945, column: 3, scope: !6079)
!6087 = !DILocation(line: 3946, column: 17, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6082, file: !3, line: 3945, column: 35)
!6089 = !DILocation(line: 3946, column: 22, scope: !6088)
!6090 = !DILocation(line: 3946, column: 25, scope: !6088)
!6091 = !DILocation(line: 3946, column: 28, scope: !6088)
!6092 = !DILocation(line: 3946, column: 36, scope: !6088)
!6093 = !DILocation(line: 3946, column: 4, scope: !6088)
!6094 = !DILocation(line: 3947, column: 21, scope: !6088)
!6095 = !DILocation(line: 3947, column: 24, scope: !6088)
!6096 = !DILocation(line: 3947, column: 32, scope: !6088)
!6097 = !DILocation(line: 3947, column: 4, scope: !6088)
!6098 = !DILocation(line: 3947, column: 7, scope: !6088)
!6099 = !DILocation(line: 3947, column: 16, scope: !6088)
!6100 = !DILocation(line: 3947, column: 19, scope: !6088)
!6101 = !DILocation(line: 3948, column: 3, scope: !6088)
!6102 = !DILocation(line: 3945, column: 31, scope: !6082)
!6103 = !DILocation(line: 3945, column: 3, scope: !6082)
!6104 = distinct !{!6104, !6086, !6105}
!6105 = !DILocation(line: 3948, column: 3, scope: !6079)
!6106 = !DILocation(line: 3949, column: 2, scope: !6055)
!6107 = !DILocation(line: 3950, column: 3, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 3949, column: 9)
!6109 = !DILocation(line: 3950, column: 6, scope: !6108)
!6110 = !DILocation(line: 3950, column: 11, scope: !6108)
!6111 = !DILocation(line: 3954, column: 7, scope: !5655)
!6112 = !DILocation(line: 3954, column: 12, scope: !5655)
!6113 = !DILocation(line: 3954, column: 4, scope: !5655)
!6114 = !DILocation(line: 3955, column: 12, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3955, column: 6)
!6116 = !DILocation(line: 3955, column: 21, scope: !6115)
!6117 = !DILocation(line: 3955, column: 36, scope: !6115)
!6118 = !DILocation(line: 3955, column: 6, scope: !6115)
!6119 = !DILocation(line: 3955, column: 53, scope: !6115)
!6120 = !DILocation(line: 3955, column: 6, scope: !5655)
!6121 = !DILocation(line: 3957, column: 3, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 3956, column: 27)
!6123 = !DILocation(line: 3957, column: 6, scope: !6122)
!6124 = !DILocation(line: 3957, column: 11, scope: !6122)
!6125 = !DILocation(line: 3958, column: 3, scope: !6122)
!6126 = !DILocation(line: 3958, column: 6, scope: !6122)
!6127 = !DILocation(line: 3958, column: 19, scope: !6122)
!6128 = !DILocation(line: 3959, column: 3, scope: !6122)
!6129 = !DILocation(line: 3959, column: 6, scope: !6122)
!6130 = !DILocation(line: 3959, column: 13, scope: !6122)
!6131 = !DILocation(line: 3960, column: 3, scope: !6122)
!6132 = !DILocation(line: 3960, column: 6, scope: !6122)
!6133 = !DILocation(line: 3960, column: 14, scope: !6122)
!6134 = !DILocation(line: 3961, column: 3, scope: !6122)
!6135 = !DILocation(line: 3961, column: 6, scope: !6122)
!6136 = !DILocation(line: 3961, column: 16, scope: !6122)
!6137 = !DILocation(line: 3962, column: 2, scope: !6122)
!6138 = !DILocation(line: 3963, column: 3, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 3962, column: 9)
!6140 = !DILocation(line: 3963, column: 6, scope: !6139)
!6141 = !DILocation(line: 3963, column: 11, scope: !6139)
!6142 = !DILocation(line: 3967, column: 7, scope: !5655)
!6143 = !DILocation(line: 3967, column: 12, scope: !5655)
!6144 = !DILocation(line: 3967, column: 4, scope: !5655)
!6145 = !DILocation(line: 3968, column: 2, scope: !5655)
!6146 = !DILocation(line: 3968, column: 5, scope: !5655)
!6147 = !DILocation(line: 3968, column: 10, scope: !5655)
!6148 = !DILocation(line: 3970, column: 2, scope: !5655)
!6149 = !DILocation(line: 3971, column: 1, scope: !5655)
!6150 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !5084, file: !5084, line: 392, type: !6151, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{!374, !376, !487, !6153, !909}
!6153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!6154 = !DILocalVariable(name: "dev", arg: 1, scope: !6150, file: !5084, line: 392, type: !376)
!6155 = !DILocation(line: 392, column: 55, scope: !6150)
!6156 = !DILocalVariable(name: "size", arg: 2, scope: !6150, file: !5084, line: 392, type: !487)
!6157 = !DILocation(line: 392, column: 67, scope: !6150)
!6158 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !6150, file: !5084, line: 393, type: !6153)
!6159 = !DILocation(line: 393, column: 15, scope: !6150)
!6160 = !DILocalVariable(name: "gfp", arg: 4, scope: !6150, file: !5084, line: 393, type: !909)
!6161 = !DILocation(line: 393, column: 33, scope: !6150)
!6162 = !DILocation(line: 396, column: 25, scope: !6150)
!6163 = !DILocation(line: 396, column: 30, scope: !6150)
!6164 = !DILocation(line: 396, column: 36, scope: !6150)
!6165 = !DILocation(line: 396, column: 48, scope: !6150)
!6166 = !DILocation(line: 397, column: 5, scope: !6150)
!6167 = !DILocation(line: 397, column: 9, scope: !6150)
!6168 = !DILocation(line: 397, column: 4, scope: !6150)
!6169 = !DILocation(line: 396, column: 9, scope: !6150)
!6170 = !DILocation(line: 396, column: 2, scope: !6150)
!6171 = distinct !DISubprogram(name: "ao_cmd_is_supported", scope: !3, file: !3, line: 1213, type: !6172, scopeLine: 1214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{!323, !4755}
!6174 = !DILocalVariable(name: "board", arg: 1, scope: !6171, file: !3, line: 1213, type: !4755)
!6175 = !DILocation(line: 1213, column: 68, scope: !6171)
!6176 = !DILocation(line: 1215, column: 9, scope: !6171)
!6177 = !DILocation(line: 1215, column: 16, scope: !6171)
!6178 = !DILocation(line: 1215, column: 25, scope: !6171)
!6179 = !DILocation(line: 1215, column: 28, scope: !6171)
!6180 = !DILocation(line: 1215, column: 35, scope: !6171)
!6181 = !DILocation(line: 1215, column: 42, scope: !6171)
!6182 = !DILocation(line: 0, scope: !6171)
!6183 = !DILocation(line: 1215, column: 2, scope: !6171)
!6184 = distinct !DISubprogram(name: "abort_dma", scope: !3, file: !3, line: 1218, type: !6185, scopeLine: 1219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6185 = !DISubroutineType(types: !6186)
!6186 = !{null, !324, !7}
!6187 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !6188)
!6188 = distinct !DILocation(line: 1228, column: 2, scope: !6184)
!6189 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !6188)
!6190 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !6191)
!6191 = distinct !DILocation(line: 1224, column: 2, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 1224, column: 2)
!6193 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 1224, column: 2)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 1224, column: 2)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 1224, column: 2)
!6196 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 1224, column: 2)
!6197 = !DILocalVariable(name: "dev", arg: 1, scope: !6184, file: !3, line: 1218, type: !324)
!6198 = !DILocation(line: 1218, column: 45, scope: !6184)
!6199 = !DILocalVariable(name: "channel", arg: 2, scope: !6184, file: !3, line: 1218, type: !7)
!6200 = !DILocation(line: 1218, column: 63, scope: !6184)
!6201 = !DILocalVariable(name: "devpriv", scope: !6184, file: !3, line: 1220, type: !4645)
!6202 = !DILocation(line: 1220, column: 27, scope: !6184)
!6203 = !DILocation(line: 1220, column: 37, scope: !6184)
!6204 = !DILocation(line: 1220, column: 42, scope: !6184)
!6205 = !DILocalVariable(name: "flags", scope: !6184, file: !3, line: 1221, type: !364)
!6206 = !DILocation(line: 1221, column: 16, scope: !6184)
!6207 = !DILocation(line: 1224, column: 2, scope: !6184)
!6208 = !DILocation(line: 1224, column: 2, scope: !6196)
!6209 = !DILocalVariable(name: "__dummy", scope: !6210, file: !3, line: 1224, type: !364)
!6210 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 1224, column: 2)
!6211 = !DILocation(line: 1224, column: 2, scope: !6210)
!6212 = !DILocalVariable(name: "__dummy2", scope: !6210, file: !3, line: 1224, type: !364)
!6213 = !DILocation(line: 1224, column: 2, scope: !6195)
!6214 = !DILocation(line: 1224, column: 2, scope: !6194)
!6215 = !DILocation(line: 1224, column: 2, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 1224, column: 2)
!6217 = !DILocalVariable(name: "__dummy", scope: !6218, file: !3, line: 1224, type: !364)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 1224, column: 2)
!6219 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 1224, column: 2)
!6220 = !DILocation(line: 1224, column: 2, scope: !6218)
!6221 = !DILocalVariable(name: "__dummy2", scope: !6218, file: !3, line: 1224, type: !364)
!6222 = !DILocation(line: 1224, column: 2, scope: !6219)
!6223 = !DILocation(line: 1224, column: 2, scope: !6193)
!6224 = !{i32 -2141497608}
!6225 = !DILocation(line: 1224, column: 2, scope: !6192)
!6226 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !6191)
!6227 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !6191)
!6228 = !DILocation(line: 1226, column: 20, scope: !6184)
!6229 = !DILocation(line: 1226, column: 29, scope: !6184)
!6230 = !DILocation(line: 1226, column: 45, scope: !6184)
!6231 = !DILocation(line: 1226, column: 2, scope: !6184)
!6232 = !DILocation(line: 1228, column: 26, scope: !6184)
!6233 = !DILocation(line: 1228, column: 31, scope: !6184)
!6234 = !DILocation(line: 1228, column: 41, scope: !6184)
!6235 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !6188)
!6236 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !6188)
!6237 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !6188)
!6238 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !6188)
!6239 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !6188)
!6240 = !DILocation(line: 1229, column: 1, scope: !6184)
!6241 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6242, file: !6242, line: 666, type: !6243, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6242 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6243 = !DISubroutineType(types: !6244)
!6244 = !{!364}
!6245 = !DILocalVariable(name: "f", scope: !6241, file: !6242, line: 668, type: !364)
!6246 = !DILocation(line: 668, column: 16, scope: !6241)
!6247 = !DILocation(line: 670, column: 6, scope: !6241)
!6248 = !DILocation(line: 670, column: 4, scope: !6241)
!6249 = !DILocation(line: 671, column: 2, scope: !6241)
!6250 = !DILocation(line: 672, column: 9, scope: !6241)
!6251 = !DILocation(line: 672, column: 2, scope: !6241)
!6252 = distinct !DISubprogram(name: "plx9080_abort_dma", scope: !4662, file: !4662, line: 620, type: !6253, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6253 = !DISubroutineType(types: !6254)
!6254 = !{!323, !374, !7}
!6255 = !DILocalVariable(name: "iobase", arg: 1, scope: !6252, file: !4662, line: 620, type: !374)
!6256 = !DILocation(line: 620, column: 51, scope: !6252)
!6257 = !DILocalVariable(name: "channel", arg: 2, scope: !6252, file: !4662, line: 620, type: !7)
!6258 = !DILocation(line: 620, column: 72, scope: !6252)
!6259 = !DILocalVariable(name: "dma_cs_addr", scope: !6252, file: !4662, line: 622, type: !374)
!6260 = !DILocation(line: 622, column: 16, scope: !6252)
!6261 = !DILocalVariable(name: "dma_status", scope: !6252, file: !4662, line: 623, type: !1518)
!6262 = !DILocation(line: 623, column: 5, scope: !6252)
!6263 = !DILocalVariable(name: "timeout", scope: !6252, file: !4662, line: 624, type: !4212)
!6264 = !DILocation(line: 624, column: 12, scope: !6252)
!6265 = !DILocalVariable(name: "i", scope: !6252, file: !4662, line: 625, type: !7)
!6266 = !DILocation(line: 625, column: 15, scope: !6252)
!6267 = !DILocation(line: 627, column: 16, scope: !6252)
!6268 = !DILocation(line: 627, column: 25, scope: !6252)
!6269 = !DILocation(line: 627, column: 23, scope: !6252)
!6270 = !DILocation(line: 627, column: 14, scope: !6252)
!6271 = !DILocation(line: 630, column: 21, scope: !6252)
!6272 = !DILocation(line: 630, column: 15, scope: !6252)
!6273 = !DILocation(line: 630, column: 13, scope: !6252)
!6274 = !DILocation(line: 631, column: 7, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6252, file: !4662, line: 631, column: 6)
!6276 = !DILocation(line: 631, column: 18, scope: !6275)
!6277 = !DILocation(line: 631, column: 39, scope: !6275)
!6278 = !DILocation(line: 631, column: 6, scope: !6252)
!6279 = !DILocation(line: 632, column: 3, scope: !6275)
!6280 = !DILocation(line: 635, column: 9, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6252, file: !4662, line: 635, column: 2)
!6282 = !DILocation(line: 635, column: 7, scope: !6281)
!6283 = !DILocation(line: 635, column: 15, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6281, file: !4662, line: 635, column: 2)
!6285 = !DILocation(line: 635, column: 26, scope: !6284)
!6286 = !DILocation(line: 635, column: 45, scope: !6284)
!6287 = !DILocation(line: 635, column: 48, scope: !6284)
!6288 = !DILocation(line: 635, column: 50, scope: !6284)
!6289 = !DILocation(line: 0, scope: !6284)
!6290 = !DILocation(line: 635, column: 2, scope: !6281)
!6291 = !DILocation(line: 636, column: 3, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !4662, line: 636, column: 3)
!6293 = distinct !DILexicalBlock(scope: !6294, file: !4662, line: 636, column: 3)
!6294 = distinct !DILexicalBlock(scope: !6295, file: !4662, line: 636, column: 3)
!6295 = distinct !DILexicalBlock(scope: !6296, file: !4662, line: 636, column: 3)
!6296 = distinct !DILexicalBlock(scope: !6284, file: !4662, line: 635, column: 66)
!6297 = !DILocation(line: 637, column: 22, scope: !6296)
!6298 = !DILocation(line: 637, column: 16, scope: !6296)
!6299 = !DILocation(line: 637, column: 14, scope: !6296)
!6300 = !DILocation(line: 638, column: 2, scope: !6296)
!6301 = !DILocation(line: 635, column: 62, scope: !6284)
!6302 = !DILocation(line: 635, column: 2, scope: !6284)
!6303 = distinct !{!6303, !6290, !6304}
!6304 = !DILocation(line: 638, column: 2, scope: !6281)
!6305 = !DILocation(line: 639, column: 6, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6252, file: !4662, line: 639, column: 6)
!6307 = !DILocation(line: 639, column: 8, scope: !6306)
!6308 = !DILocation(line: 639, column: 6, scope: !6252)
!6309 = !DILocation(line: 640, column: 3, scope: !6306)
!6310 = !DILocation(line: 643, column: 27, scope: !6252)
!6311 = !DILocation(line: 643, column: 2, scope: !6252)
!6312 = !DILocation(line: 645, column: 21, scope: !6252)
!6313 = !DILocation(line: 645, column: 15, scope: !6252)
!6314 = !DILocation(line: 645, column: 13, scope: !6252)
!6315 = !DILocation(line: 646, column: 9, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6252, file: !4662, line: 646, column: 2)
!6317 = !DILocation(line: 646, column: 7, scope: !6316)
!6318 = !DILocation(line: 646, column: 15, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6316, file: !4662, line: 646, column: 2)
!6320 = !DILocation(line: 646, column: 26, scope: !6319)
!6321 = !DILocation(line: 646, column: 45, scope: !6319)
!6322 = !DILocation(line: 646, column: 50, scope: !6319)
!6323 = !DILocation(line: 646, column: 53, scope: !6319)
!6324 = !DILocation(line: 646, column: 55, scope: !6319)
!6325 = !DILocation(line: 0, scope: !6319)
!6326 = !DILocation(line: 646, column: 2, scope: !6316)
!6327 = !DILocation(line: 647, column: 3, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6329, file: !4662, line: 647, column: 3)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !4662, line: 647, column: 3)
!6330 = distinct !DILexicalBlock(scope: !6331, file: !4662, line: 647, column: 3)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !4662, line: 647, column: 3)
!6332 = distinct !DILexicalBlock(scope: !6319, file: !4662, line: 646, column: 71)
!6333 = !DILocation(line: 648, column: 22, scope: !6332)
!6334 = !DILocation(line: 648, column: 16, scope: !6332)
!6335 = !DILocation(line: 648, column: 14, scope: !6332)
!6336 = !DILocation(line: 649, column: 2, scope: !6332)
!6337 = !DILocation(line: 646, column: 67, scope: !6319)
!6338 = !DILocation(line: 646, column: 2, scope: !6319)
!6339 = distinct !{!6339, !6326, !6340}
!6340 = !DILocation(line: 649, column: 2, scope: !6316)
!6341 = !DILocation(line: 650, column: 6, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6252, file: !4662, line: 650, column: 6)
!6343 = !DILocation(line: 650, column: 8, scope: !6342)
!6344 = !DILocation(line: 650, column: 6, scope: !6252)
!6345 = !DILocation(line: 651, column: 3, scope: !6342)
!6346 = !DILocation(line: 653, column: 2, scope: !6252)
!6347 = !DILocation(line: 654, column: 1, scope: !6252)
!6348 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6242, file: !6242, line: 646, type: !6243, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6349 = !DILocalVariable(name: "__ret", scope: !6350, file: !6242, line: 648, type: !364)
!6350 = distinct !DILexicalBlock(scope: !6348, file: !6242, line: 648, column: 9)
!6351 = !DILocation(line: 648, column: 9, scope: !6350)
!6352 = !DILocalVariable(name: "__edi", scope: !6350, file: !6242, line: 648, type: !364)
!6353 = !DILocalVariable(name: "__esi", scope: !6350, file: !6242, line: 648, type: !364)
!6354 = !DILocalVariable(name: "__edx", scope: !6350, file: !6242, line: 648, type: !364)
!6355 = !DILocalVariable(name: "__ecx", scope: !6350, file: !6242, line: 648, type: !364)
!6356 = !DILocalVariable(name: "__eax", scope: !6350, file: !6242, line: 648, type: !364)
!6357 = !DILocation(line: 648, column: 9, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6359, file: !6242, line: 648, column: 9)
!6359 = distinct !DILexicalBlock(scope: !6350, file: !6242, line: 648, column: 9)
!6360 = !{i32 -2145676884, i32 -2145674569, i32 -2145674335, i32 -2145674284, i32 -2145674256, i32 -2145674231, i32 -2145674547, i32 -2145674534, i32 -2145674096, i32 -2145673977, i32 -2145674442, i32 -2145674415, i32 -2145674387, i32 -2145674357}
!6361 = !DILocalVariable(name: "__mask", scope: !6362, file: !6242, line: 648, type: !364)
!6362 = distinct !DILexicalBlock(scope: !6358, file: !6242, line: 648, column: 9)
!6363 = !DILocation(line: 648, column: 9, scope: !6362)
!6364 = !DILocation(line: 648, column: 9, scope: !6359)
!6365 = !DILocation(line: 648, column: 2, scope: !6348)
!6366 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6242, file: !6242, line: 656, type: !2046, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6367 = !DILocalVariable(name: "__edi", scope: !6368, file: !6242, line: 658, type: !364)
!6368 = distinct !DILexicalBlock(scope: !6366, file: !6242, line: 658, column: 2)
!6369 = !DILocation(line: 658, column: 2, scope: !6368)
!6370 = !DILocalVariable(name: "__esi", scope: !6368, file: !6242, line: 658, type: !364)
!6371 = !DILocalVariable(name: "__edx", scope: !6368, file: !6242, line: 658, type: !364)
!6372 = !DILocalVariable(name: "__ecx", scope: !6368, file: !6242, line: 658, type: !364)
!6373 = !DILocalVariable(name: "__eax", scope: !6368, file: !6242, line: 658, type: !364)
!6374 = !{i32 -2145669790, i32 -2145669058, i32 -2145668824, i32 -2145668773, i32 -2145668745, i32 -2145668720, i32 -2145669036, i32 -2145669023, i32 -2145668585, i32 -2145668466, i32 -2145668931, i32 -2145668904, i32 -2145668876, i32 -2145668846}
!6375 = !DILocation(line: 659, column: 1, scope: !6366)
!6376 = distinct !DISubprogram(name: "readb", scope: !5061, file: !5061, line: 57, type: !6377, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!592, !5104}
!6379 = !DILocalVariable(name: "addr", arg: 1, scope: !6376, file: !5061, line: 57, type: !5104)
!6380 = !DILocation(line: 57, column: 1, scope: !6376)
!6381 = !DILocalVariable(name: "ret", scope: !6376, file: !5061, line: 57, type: !592)
!6382 = !{i32 -2143316586}
!6383 = distinct !DISubprogram(name: "writeb", scope: !5061, file: !5061, line: 65, type: !6384, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6384 = !DISubroutineType(types: !6385)
!6385 = !{null, !592, !5064}
!6386 = !DILocalVariable(name: "val", arg: 1, scope: !6383, file: !5061, line: 65, type: !592)
!6387 = !DILocation(line: 65, column: 1, scope: !6383)
!6388 = !DILocalVariable(name: "addr", arg: 2, scope: !6383, file: !5061, line: 65, type: !5064)
!6389 = !{i32 -2143314132}
!6390 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6242, file: !6242, line: 651, type: !6391, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6391 = !DISubroutineType(types: !6392)
!6392 = !{null, !364}
!6393 = !DILocalVariable(name: "f", arg: 1, scope: !6390, file: !6242, line: 651, type: !364)
!6394 = !DILocation(line: 651, column: 65, scope: !6390)
!6395 = !DILocalVariable(name: "__edi", scope: !6396, file: !6242, line: 653, type: !364)
!6396 = distinct !DILexicalBlock(scope: !6390, file: !6242, line: 653, column: 2)
!6397 = !DILocation(line: 653, column: 2, scope: !6396)
!6398 = !DILocalVariable(name: "__esi", scope: !6396, file: !6242, line: 653, type: !364)
!6399 = !DILocalVariable(name: "__edx", scope: !6396, file: !6242, line: 653, type: !364)
!6400 = !DILocalVariable(name: "__ecx", scope: !6396, file: !6242, line: 653, type: !364)
!6401 = !DILocalVariable(name: "__eax", scope: !6396, file: !6242, line: 653, type: !364)
!6402 = !{i32 -2145672417, i32 -2145671667, i32 -2145671433, i32 -2145671382, i32 -2145671354, i32 -2145671329, i32 -2145671645, i32 -2145671632, i32 -2145671194, i32 -2145671075, i32 -2145671540, i32 -2145671513, i32 -2145671485, i32 -2145671455}
!6403 = !DILocation(line: 654, column: 1, scope: !6390)
!6404 = distinct !DISubprogram(name: "writew", scope: !5061, file: !5061, line: 66, type: !6405, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6405 = !DISubroutineType(types: !6406)
!6406 = !{null, !482, !5064}
!6407 = !DILocalVariable(name: "val", arg: 1, scope: !6404, file: !5061, line: 66, type: !482)
!6408 = !DILocation(line: 66, column: 1, scope: !6404)
!6409 = !DILocalVariable(name: "addr", arg: 2, scope: !6404, file: !5061, line: 66, type: !5064)
!6410 = !{i32 -2143313748}
!6411 = !DILocalVariable(name: "dev", arg: 1, scope: !4285, file: !3, line: 1364, type: !324)
!6412 = !DILocation(line: 1364, column: 61, scope: !4285)
!6413 = !DILocalVariable(name: "num_entries", arg: 2, scope: !4285, file: !3, line: 1365, type: !7)
!6414 = !DILocation(line: 1365, column: 24, scope: !4285)
!6415 = !DILocalVariable(name: "board", scope: !4285, file: !3, line: 1367, type: !4755)
!6416 = !DILocation(line: 1367, column: 31, scope: !4285)
!6417 = !DILocation(line: 1367, column: 39, scope: !4285)
!6418 = !DILocation(line: 1367, column: 44, scope: !4285)
!6419 = !DILocalVariable(name: "devpriv", scope: !4285, file: !3, line: 1368, type: !4645)
!6420 = !DILocation(line: 1368, column: 27, scope: !4285)
!6421 = !DILocation(line: 1368, column: 37, scope: !4285)
!6422 = !DILocation(line: 1368, column: 42, scope: !4285)
!6423 = !DILocalVariable(name: "fifo", scope: !4285, file: !3, line: 1370, type: !4214)
!6424 = !DILocation(line: 1370, column: 35, scope: !4285)
!6425 = !DILocation(line: 1370, column: 42, scope: !4285)
!6426 = !DILocation(line: 1370, column: 49, scope: !4285)
!6427 = !DILocalVariable(name: "num_increments", scope: !4285, file: !3, line: 1371, type: !7)
!6428 = !DILocation(line: 1371, column: 15, scope: !4285)
!6429 = !DILocalVariable(name: "bits", scope: !4285, file: !3, line: 1372, type: !1025)
!6430 = !DILocation(line: 1372, column: 6, scope: !4285)
!6431 = !DILocation(line: 1374, column: 6, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 1374, column: 6)
!6433 = !DILocation(line: 1374, column: 18, scope: !6432)
!6434 = !DILocation(line: 1374, column: 6, scope: !4285)
!6435 = !DILocation(line: 1375, column: 15, scope: !6432)
!6436 = !DILocation(line: 1375, column: 3, scope: !6432)
!6437 = !DILocation(line: 1376, column: 6, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 1376, column: 6)
!6439 = !DILocation(line: 1376, column: 20, scope: !6438)
!6440 = !DILocation(line: 1376, column: 26, scope: !6438)
!6441 = !DILocation(line: 1376, column: 18, scope: !6438)
!6442 = !DILocation(line: 1376, column: 6, scope: !4285)
!6443 = !DILocation(line: 1377, column: 17, scope: !6438)
!6444 = !DILocation(line: 1377, column: 23, scope: !6438)
!6445 = !DILocation(line: 1377, column: 15, scope: !6438)
!6446 = !DILocation(line: 1377, column: 3, scope: !6438)
!6447 = !DILocalVariable(name: "__x", scope: !6448, file: !3, line: 1380, type: !7)
!6448 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 1380, column: 19)
!6449 = !DILocation(line: 1380, column: 19, scope: !6448)
!6450 = !DILocalVariable(name: "__d", scope: !6448, file: !3, line: 1380, type: !4212)
!6451 = !DILocation(line: 1380, column: 17, scope: !4285)
!6452 = !DILocation(line: 1382, column: 12, scope: !4285)
!6453 = !DILocation(line: 1382, column: 27, scope: !4285)
!6454 = !DILocation(line: 1382, column: 10, scope: !4285)
!6455 = !DILocation(line: 1382, column: 35, scope: !4285)
!6456 = !DILocation(line: 1382, column: 41, scope: !4285)
!6457 = !DILocation(line: 1382, column: 33, scope: !4285)
!6458 = !DILocation(line: 1382, column: 9, scope: !4285)
!6459 = !DILocation(line: 1382, column: 7, scope: !4285)
!6460 = !DILocation(line: 1383, column: 30, scope: !4285)
!6461 = !DILocation(line: 1383, column: 36, scope: !4285)
!6462 = !DILocation(line: 1383, column: 29, scope: !4285)
!6463 = !DILocation(line: 1383, column: 2, scope: !4285)
!6464 = !DILocation(line: 1383, column: 11, scope: !4285)
!6465 = !DILocation(line: 1383, column: 26, scope: !4285)
!6466 = !DILocation(line: 1384, column: 29, scope: !4285)
!6467 = !DILocation(line: 1384, column: 2, scope: !4285)
!6468 = !DILocation(line: 1384, column: 11, scope: !4285)
!6469 = !DILocation(line: 1384, column: 26, scope: !4285)
!6470 = !DILocation(line: 1385, column: 9, scope: !4285)
!6471 = !DILocation(line: 1385, column: 18, scope: !4285)
!6472 = !DILocation(line: 1386, column: 9, scope: !4285)
!6473 = !DILocation(line: 1386, column: 18, scope: !4285)
!6474 = !DILocation(line: 1386, column: 30, scope: !4285)
!6475 = !DILocation(line: 1385, column: 2, scope: !4285)
!6476 = !DILocation(line: 1388, column: 36, scope: !4285)
!6477 = !DILocation(line: 1388, column: 51, scope: !4285)
!6478 = !DILocation(line: 1388, column: 2, scope: !4285)
!6479 = !DILocation(line: 1388, column: 11, scope: !4285)
!6480 = !DILocation(line: 1388, column: 34, scope: !4285)
!6481 = !DILocation(line: 1390, column: 9, scope: !4285)
!6482 = !DILocation(line: 1390, column: 18, scope: !4285)
!6483 = !DILocation(line: 1390, column: 2, scope: !4285)
!6484 = distinct !DISubprogram(name: "disable_ai_pacing", scope: !3, file: !3, line: 1346, type: !358, scopeLine: 1347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6485 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !6486)
!6486 = distinct !DILocation(line: 1357, column: 2, scope: !6484)
!6487 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !6486)
!6488 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !6489)
!6489 = distinct !DILocation(line: 1353, column: 2, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1353, column: 2)
!6491 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 1353, column: 2)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 1353, column: 2)
!6493 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 1353, column: 2)
!6494 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 1353, column: 2)
!6495 = !DILocalVariable(name: "dev", arg: 1, scope: !6484, file: !3, line: 1346, type: !324)
!6496 = !DILocation(line: 1346, column: 53, scope: !6484)
!6497 = !DILocalVariable(name: "devpriv", scope: !6484, file: !3, line: 1348, type: !4645)
!6498 = !DILocation(line: 1348, column: 27, scope: !6484)
!6499 = !DILocation(line: 1348, column: 37, scope: !6484)
!6500 = !DILocation(line: 1348, column: 42, scope: !6484)
!6501 = !DILocalVariable(name: "flags", scope: !6484, file: !3, line: 1349, type: !364)
!6502 = !DILocation(line: 1349, column: 16, scope: !6484)
!6503 = !DILocation(line: 1351, column: 24, scope: !6484)
!6504 = !DILocation(line: 1351, column: 2, scope: !6484)
!6505 = !DILocation(line: 1353, column: 2, scope: !6484)
!6506 = !DILocation(line: 1353, column: 2, scope: !6494)
!6507 = !DILocalVariable(name: "__dummy", scope: !6508, file: !3, line: 1353, type: !364)
!6508 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 1353, column: 2)
!6509 = !DILocation(line: 1353, column: 2, scope: !6508)
!6510 = !DILocalVariable(name: "__dummy2", scope: !6508, file: !3, line: 1353, type: !364)
!6511 = !DILocation(line: 1353, column: 2, scope: !6493)
!6512 = !DILocation(line: 1353, column: 2, scope: !6492)
!6513 = !DILocation(line: 1353, column: 2, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 1353, column: 2)
!6515 = !DILocalVariable(name: "__dummy", scope: !6516, file: !3, line: 1353, type: !364)
!6516 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 1353, column: 2)
!6517 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 1353, column: 2)
!6518 = !DILocation(line: 1353, column: 2, scope: !6516)
!6519 = !DILocalVariable(name: "__dummy2", scope: !6516, file: !3, line: 1353, type: !364)
!6520 = !DILocation(line: 1353, column: 2, scope: !6517)
!6521 = !DILocation(line: 1353, column: 2, scope: !6491)
!6522 = !{i32 -2141492874}
!6523 = !DILocation(line: 1353, column: 2, scope: !6490)
!6524 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !6489)
!6525 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !6489)
!6526 = !DILocation(line: 1354, column: 2, scope: !6484)
!6527 = !DILocation(line: 1354, column: 11, scope: !6484)
!6528 = !DILocation(line: 1354, column: 29, scope: !6484)
!6529 = !DILocation(line: 1355, column: 9, scope: !6484)
!6530 = !DILocation(line: 1355, column: 18, scope: !6484)
!6531 = !DILocation(line: 1356, column: 9, scope: !6484)
!6532 = !DILocation(line: 1356, column: 18, scope: !6484)
!6533 = !DILocation(line: 1356, column: 30, scope: !6484)
!6534 = !DILocation(line: 1355, column: 2, scope: !6484)
!6535 = !DILocation(line: 1357, column: 26, scope: !6484)
!6536 = !DILocation(line: 1357, column: 31, scope: !6484)
!6537 = !DILocation(line: 1357, column: 41, scope: !6484)
!6538 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !6486)
!6539 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !6486)
!6540 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !6486)
!6541 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !6486)
!6542 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !6486)
!6543 = !DILocation(line: 1361, column: 9, scope: !6484)
!6544 = !DILocation(line: 1361, column: 18, scope: !6484)
!6545 = !DILocation(line: 1361, column: 30, scope: !6484)
!6546 = !DILocation(line: 1360, column: 2, scope: !6484)
!6547 = !DILocation(line: 1362, column: 1, scope: !6484)
!6548 = distinct !DISubprogram(name: "disable_ai_interrupts", scope: !3, file: !3, line: 1240, type: !358, scopeLine: 1241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6549 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !6550)
!6550 = distinct !DILocation(line: 1252, column: 2, scope: !6548)
!6551 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !6550)
!6552 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !6553)
!6553 = distinct !DILocation(line: 1245, column: 2, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6555, file: !3, line: 1245, column: 2)
!6555 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 1245, column: 2)
!6556 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 1245, column: 2)
!6557 = distinct !DILexicalBlock(scope: !6558, file: !3, line: 1245, column: 2)
!6558 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 1245, column: 2)
!6559 = !DILocalVariable(name: "dev", arg: 1, scope: !6548, file: !3, line: 1240, type: !324)
!6560 = !DILocation(line: 1240, column: 57, scope: !6548)
!6561 = !DILocalVariable(name: "devpriv", scope: !6548, file: !3, line: 1242, type: !4645)
!6562 = !DILocation(line: 1242, column: 27, scope: !6548)
!6563 = !DILocation(line: 1242, column: 37, scope: !6548)
!6564 = !DILocation(line: 1242, column: 42, scope: !6548)
!6565 = !DILocalVariable(name: "flags", scope: !6548, file: !3, line: 1243, type: !364)
!6566 = !DILocation(line: 1243, column: 16, scope: !6548)
!6567 = !DILocation(line: 1245, column: 2, scope: !6548)
!6568 = !DILocation(line: 1245, column: 2, scope: !6558)
!6569 = !DILocalVariable(name: "__dummy", scope: !6570, file: !3, line: 1245, type: !364)
!6570 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 1245, column: 2)
!6571 = !DILocation(line: 1245, column: 2, scope: !6570)
!6572 = !DILocalVariable(name: "__dummy2", scope: !6570, file: !3, line: 1245, type: !364)
!6573 = !DILocation(line: 1245, column: 2, scope: !6557)
!6574 = !DILocation(line: 1245, column: 2, scope: !6556)
!6575 = !DILocation(line: 1245, column: 2, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 1245, column: 2)
!6577 = !DILocalVariable(name: "__dummy", scope: !6578, file: !3, line: 1245, type: !364)
!6578 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 1245, column: 2)
!6579 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 1245, column: 2)
!6580 = !DILocation(line: 1245, column: 2, scope: !6578)
!6581 = !DILocalVariable(name: "__dummy2", scope: !6578, file: !3, line: 1245, type: !364)
!6582 = !DILocation(line: 1245, column: 2, scope: !6579)
!6583 = !DILocation(line: 1245, column: 2, scope: !6555)
!6584 = !{i32 -2141496554}
!6585 = !DILocation(line: 1245, column: 2, scope: !6554)
!6586 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !6553)
!6587 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !6553)
!6588 = !DILocation(line: 1246, column: 2, scope: !6548)
!6589 = !DILocation(line: 1246, column: 11, scope: !6548)
!6590 = !DILocation(line: 1246, column: 28, scope: !6548)
!6591 = !DILocation(line: 1250, column: 9, scope: !6548)
!6592 = !DILocation(line: 1250, column: 18, scope: !6548)
!6593 = !DILocation(line: 1251, column: 9, scope: !6548)
!6594 = !DILocation(line: 1251, column: 18, scope: !6548)
!6595 = !DILocation(line: 1251, column: 30, scope: !6548)
!6596 = !DILocation(line: 1250, column: 2, scope: !6548)
!6597 = !DILocation(line: 1252, column: 26, scope: !6548)
!6598 = !DILocation(line: 1252, column: 31, scope: !6548)
!6599 = !DILocation(line: 1252, column: 41, scope: !6548)
!6600 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !6550)
!6601 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !6550)
!6602 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !6550)
!6603 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !6550)
!6604 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !6550)
!6605 = !DILocation(line: 1253, column: 1, scope: !6548)
!6606 = distinct !DISubprogram(name: "handle_ai_interrupt", scope: !3, file: !3, line: 2814, type: !6607, scopeLine: 2817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{null, !324, !482, !7}
!6609 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !6610)
!6610 = distinct !DILocation(line: 2850, column: 4, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 2849, column: 32)
!6612 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 2849, column: 7)
!6613 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2847, column: 40)
!6614 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 2844, column: 6)
!6615 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !6610)
!6616 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !6617)
!6617 = distinct !DILocation(line: 2848, column: 3, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 2848, column: 3)
!6619 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 2848, column: 3)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 2848, column: 3)
!6621 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 2848, column: 3)
!6622 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 2848, column: 3)
!6623 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !6624)
!6624 = distinct !DILocation(line: 2841, column: 2, scope: !6606)
!6625 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !6624)
!6626 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !6627)
!6627 = distinct !DILocation(line: 2853, column: 4, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 2852, column: 10)
!6629 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !6627)
!6630 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !6631)
!6631 = distinct !DILocation(line: 2832, column: 2, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6633, file: !3, line: 2832, column: 2)
!6633 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2832, column: 2)
!6634 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 2832, column: 2)
!6635 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 2832, column: 2)
!6636 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 2832, column: 2)
!6637 = !DILocalVariable(name: "dev", arg: 1, scope: !6606, file: !3, line: 2814, type: !324)
!6638 = !DILocation(line: 2814, column: 55, scope: !6606)
!6639 = !DILocalVariable(name: "status", arg: 2, scope: !6606, file: !3, line: 2815, type: !482)
!6640 = !DILocation(line: 2815, column: 20, scope: !6606)
!6641 = !DILocalVariable(name: "plx_status", arg: 3, scope: !6606, file: !3, line: 2816, type: !7)
!6642 = !DILocation(line: 2816, column: 18, scope: !6606)
!6643 = !DILocalVariable(name: "board", scope: !6606, file: !3, line: 2818, type: !4755)
!6644 = !DILocation(line: 2818, column: 31, scope: !6606)
!6645 = !DILocation(line: 2818, column: 39, scope: !6606)
!6646 = !DILocation(line: 2818, column: 44, scope: !6606)
!6647 = !DILocalVariable(name: "devpriv", scope: !6606, file: !3, line: 2819, type: !4645)
!6648 = !DILocation(line: 2819, column: 27, scope: !6606)
!6649 = !DILocation(line: 2819, column: 37, scope: !6606)
!6650 = !DILocation(line: 2819, column: 42, scope: !6606)
!6651 = !DILocalVariable(name: "s", scope: !6606, file: !3, line: 2820, type: !3995)
!6652 = !DILocation(line: 2820, column: 27, scope: !6606)
!6653 = !DILocation(line: 2820, column: 31, scope: !6606)
!6654 = !DILocation(line: 2820, column: 36, scope: !6606)
!6655 = !DILocalVariable(name: "async", scope: !6606, file: !3, line: 2821, type: !4006)
!6656 = !DILocation(line: 2821, column: 23, scope: !6606)
!6657 = !DILocation(line: 2821, column: 31, scope: !6606)
!6658 = !DILocation(line: 2821, column: 34, scope: !6606)
!6659 = !DILocalVariable(name: "cmd", scope: !6606, file: !3, line: 2822, type: !4115)
!6660 = !DILocation(line: 2822, column: 21, scope: !6606)
!6661 = !DILocation(line: 2822, column: 28, scope: !6606)
!6662 = !DILocation(line: 2822, column: 35, scope: !6606)
!6663 = !DILocalVariable(name: "dma1_status", scope: !6606, file: !3, line: 2823, type: !1518)
!6664 = !DILocation(line: 2823, column: 5, scope: !6606)
!6665 = !DILocalVariable(name: "flags", scope: !6606, file: !3, line: 2824, type: !364)
!6666 = !DILocation(line: 2824, column: 16, scope: !6606)
!6667 = !DILocation(line: 2827, column: 6, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 2827, column: 6)
!6669 = !DILocation(line: 2827, column: 13, scope: !6668)
!6670 = !DILocation(line: 2827, column: 6, scope: !6606)
!6671 = !DILocation(line: 2828, column: 3, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 2827, column: 32)
!6673 = !DILocation(line: 2829, column: 3, scope: !6672)
!6674 = !DILocation(line: 2829, column: 10, scope: !6672)
!6675 = !DILocation(line: 2829, column: 17, scope: !6672)
!6676 = !DILocation(line: 2830, column: 2, scope: !6672)
!6677 = !DILocation(line: 2832, column: 2, scope: !6606)
!6678 = !DILocation(line: 2832, column: 2, scope: !6636)
!6679 = !DILocalVariable(name: "__dummy", scope: !6680, file: !3, line: 2832, type: !364)
!6680 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 2832, column: 2)
!6681 = !DILocation(line: 2832, column: 2, scope: !6680)
!6682 = !DILocalVariable(name: "__dummy2", scope: !6680, file: !3, line: 2832, type: !364)
!6683 = !DILocation(line: 2832, column: 2, scope: !6635)
!6684 = !DILocation(line: 2832, column: 2, scope: !6634)
!6685 = !DILocation(line: 2832, column: 2, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2832, column: 2)
!6687 = !DILocalVariable(name: "__dummy", scope: !6688, file: !3, line: 2832, type: !364)
!6688 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 2832, column: 2)
!6689 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 2832, column: 2)
!6690 = !DILocation(line: 2832, column: 2, scope: !6688)
!6691 = !DILocalVariable(name: "__dummy2", scope: !6688, file: !3, line: 2832, type: !364)
!6692 = !DILocation(line: 2832, column: 2, scope: !6689)
!6693 = !DILocation(line: 2832, column: 2, scope: !6633)
!6694 = !{i32 -2141476536}
!6695 = !DILocation(line: 2832, column: 2, scope: !6632)
!6696 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !6631)
!6697 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !6631)
!6698 = !DILocation(line: 2833, column: 22, scope: !6606)
!6699 = !DILocation(line: 2833, column: 31, scope: !6606)
!6700 = !DILocation(line: 2833, column: 46, scope: !6606)
!6701 = !DILocation(line: 2833, column: 16, scope: !6606)
!6702 = !DILocation(line: 2833, column: 14, scope: !6606)
!6703 = !DILocation(line: 2834, column: 6, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 2834, column: 6)
!6705 = !DILocation(line: 2834, column: 17, scope: !6704)
!6706 = !DILocation(line: 2834, column: 6, scope: !6606)
!6707 = !DILocation(line: 2835, column: 11, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 2834, column: 38)
!6709 = !DILocation(line: 2835, column: 23, scope: !6708)
!6710 = !DILocation(line: 2835, column: 44, scope: !6708)
!6711 = !DILocation(line: 2835, column: 10, scope: !6708)
!6712 = !DILocation(line: 2836, column: 10, scope: !6708)
!6713 = !DILocation(line: 2836, column: 19, scope: !6708)
!6714 = !DILocation(line: 2836, column: 34, scope: !6708)
!6715 = !DILocation(line: 2835, column: 3, scope: !6708)
!6716 = !DILocation(line: 2838, column: 7, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 2838, column: 7)
!6718 = !DILocation(line: 2838, column: 19, scope: !6717)
!6719 = !DILocation(line: 2838, column: 7, scope: !6708)
!6720 = !DILocation(line: 2839, column: 22, scope: !6717)
!6721 = !DILocation(line: 2839, column: 4, scope: !6717)
!6722 = !DILocation(line: 2840, column: 2, scope: !6708)
!6723 = !DILocation(line: 2841, column: 26, scope: !6606)
!6724 = !DILocation(line: 2841, column: 31, scope: !6606)
!6725 = !DILocation(line: 2841, column: 41, scope: !6606)
!6726 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !6624)
!6727 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !6624)
!6728 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !6624)
!6729 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !6624)
!6730 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !6624)
!6731 = !DILocation(line: 2844, column: 7, scope: !6614)
!6732 = !DILocation(line: 2844, column: 14, scope: !6614)
!6733 = !DILocation(line: 2844, column: 30, scope: !6614)
!6734 = !DILocation(line: 2845, column: 8, scope: !6614)
!6735 = !DILocation(line: 2845, column: 13, scope: !6614)
!6736 = !DILocation(line: 2845, column: 19, scope: !6614)
!6737 = !DILocation(line: 2845, column: 36, scope: !6614)
!6738 = !DILocation(line: 2846, column: 8, scope: !6614)
!6739 = !DILocation(line: 2846, column: 15, scope: !6614)
!6740 = !DILocation(line: 2846, column: 39, scope: !6614)
!6741 = !DILocation(line: 2847, column: 8, scope: !6614)
!6742 = !DILocation(line: 2847, column: 15, scope: !6614)
!6743 = !DILocation(line: 2847, column: 22, scope: !6614)
!6744 = !DILocation(line: 2844, column: 6, scope: !6606)
!6745 = !DILocation(line: 2848, column: 3, scope: !6613)
!6746 = !DILocation(line: 2848, column: 3, scope: !6622)
!6747 = !DILocalVariable(name: "__dummy", scope: !6748, file: !3, line: 2848, type: !364)
!6748 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 2848, column: 3)
!6749 = !DILocation(line: 2848, column: 3, scope: !6748)
!6750 = !DILocalVariable(name: "__dummy2", scope: !6748, file: !3, line: 2848, type: !364)
!6751 = !DILocation(line: 2848, column: 3, scope: !6621)
!6752 = !DILocation(line: 2848, column: 3, scope: !6620)
!6753 = !DILocation(line: 2848, column: 3, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 2848, column: 3)
!6755 = !DILocalVariable(name: "__dummy", scope: !6756, file: !3, line: 2848, type: !364)
!6756 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 2848, column: 3)
!6757 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 2848, column: 3)
!6758 = !DILocation(line: 2848, column: 3, scope: !6756)
!6759 = !DILocalVariable(name: "__dummy2", scope: !6756, file: !3, line: 2848, type: !364)
!6760 = !DILocation(line: 2848, column: 3, scope: !6757)
!6761 = !DILocation(line: 2848, column: 3, scope: !6619)
!6762 = !{i32 -2141475128}
!6763 = !DILocation(line: 2848, column: 3, scope: !6618)
!6764 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !6617)
!6765 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !6617)
!6766 = !DILocation(line: 2849, column: 7, scope: !6612)
!6767 = !DILocation(line: 2849, column: 16, scope: !6612)
!6768 = !DILocation(line: 2849, column: 7, scope: !6613)
!6769 = !DILocation(line: 2850, column: 28, scope: !6611)
!6770 = !DILocation(line: 2850, column: 33, scope: !6611)
!6771 = !DILocation(line: 2850, column: 43, scope: !6611)
!6772 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !6610)
!6773 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !6610)
!6774 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !6610)
!6775 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !6610)
!6776 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !6610)
!6777 = !DILocation(line: 2851, column: 22, scope: !6611)
!6778 = !DILocation(line: 2851, column: 4, scope: !6611)
!6779 = !DILocation(line: 2852, column: 3, scope: !6611)
!6780 = !DILocation(line: 2853, column: 28, scope: !6628)
!6781 = !DILocation(line: 2853, column: 33, scope: !6628)
!6782 = !DILocation(line: 2853, column: 43, scope: !6628)
!6783 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !6627)
!6784 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !6627)
!6785 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !6627)
!6786 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !6627)
!6787 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !6627)
!6788 = !DILocation(line: 2855, column: 2, scope: !6613)
!6789 = !DILocation(line: 2857, column: 7, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 2857, column: 6)
!6791 = !DILocation(line: 2857, column: 12, scope: !6790)
!6792 = !DILocation(line: 2857, column: 21, scope: !6790)
!6793 = !DILocation(line: 2857, column: 35, scope: !6790)
!6794 = !DILocation(line: 2858, column: 7, scope: !6790)
!6795 = !DILocation(line: 2858, column: 14, scope: !6790)
!6796 = !DILocation(line: 2858, column: 28, scope: !6790)
!6797 = !DILocation(line: 2858, column: 33, scope: !6790)
!6798 = !DILocation(line: 2858, column: 25, scope: !6790)
!6799 = !DILocation(line: 2858, column: 43, scope: !6790)
!6800 = !DILocation(line: 2859, column: 7, scope: !6790)
!6801 = !DILocation(line: 2859, column: 12, scope: !6790)
!6802 = !DILocation(line: 2859, column: 21, scope: !6790)
!6803 = !DILocation(line: 2859, column: 33, scope: !6790)
!6804 = !DILocation(line: 2859, column: 37, scope: !6790)
!6805 = !DILocation(line: 2859, column: 44, scope: !6790)
!6806 = !DILocation(line: 2857, column: 6, scope: !6606)
!6807 = !DILocation(line: 2860, column: 3, scope: !6790)
!6808 = !DILocation(line: 2860, column: 10, scope: !6790)
!6809 = !DILocation(line: 2860, column: 17, scope: !6790)
!6810 = !DILocation(line: 2862, column: 23, scope: !6606)
!6811 = !DILocation(line: 2862, column: 28, scope: !6606)
!6812 = !DILocation(line: 2862, column: 2, scope: !6606)
!6813 = !DILocation(line: 2863, column: 1, scope: !6606)
!6814 = distinct !DISubprogram(name: "handle_ao_interrupt", scope: !3, file: !3, line: 2993, type: !6607, scopeLine: 2995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6815 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !6816)
!6816 = distinct !DILocation(line: 3029, column: 3, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 3028, column: 9)
!6818 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3012, column: 6)
!6819 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !6816)
!6820 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !6821)
!6821 = distinct !DILocation(line: 3021, column: 3, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 3012, column: 38)
!6823 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !6821)
!6824 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !6825)
!6825 = distinct !DILocation(line: 3010, column: 2, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 3010, column: 2)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !3, line: 3010, column: 2)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 3010, column: 2)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 3010, column: 2)
!6830 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3010, column: 2)
!6831 = !DILocalVariable(name: "dev", arg: 1, scope: !6814, file: !3, line: 2993, type: !324)
!6832 = !DILocation(line: 2993, column: 55, scope: !6814)
!6833 = !DILocalVariable(name: "status", arg: 2, scope: !6814, file: !3, line: 2994, type: !482)
!6834 = !DILocation(line: 2994, column: 20, scope: !6814)
!6835 = !DILocalVariable(name: "plx_status", arg: 3, scope: !6814, file: !3, line: 2994, type: !7)
!6836 = !DILocation(line: 2994, column: 41, scope: !6814)
!6837 = !DILocalVariable(name: "devpriv", scope: !6814, file: !3, line: 2996, type: !4645)
!6838 = !DILocation(line: 2996, column: 27, scope: !6814)
!6839 = !DILocation(line: 2996, column: 37, scope: !6814)
!6840 = !DILocation(line: 2996, column: 42, scope: !6814)
!6841 = !DILocalVariable(name: "s", scope: !6814, file: !3, line: 2997, type: !3995)
!6842 = !DILocation(line: 2997, column: 27, scope: !6814)
!6843 = !DILocation(line: 2997, column: 31, scope: !6814)
!6844 = !DILocation(line: 2997, column: 36, scope: !6814)
!6845 = !DILocalVariable(name: "async", scope: !6814, file: !3, line: 2998, type: !4006)
!6846 = !DILocation(line: 2998, column: 23, scope: !6814)
!6847 = !DILocalVariable(name: "cmd", scope: !6814, file: !3, line: 2999, type: !4115)
!6848 = !DILocation(line: 2999, column: 21, scope: !6814)
!6849 = !DILocalVariable(name: "dma0_status", scope: !6814, file: !3, line: 3000, type: !1518)
!6850 = !DILocation(line: 3000, column: 5, scope: !6814)
!6851 = !DILocalVariable(name: "flags", scope: !6814, file: !3, line: 3001, type: !364)
!6852 = !DILocation(line: 3001, column: 16, scope: !6814)
!6853 = !DILocation(line: 3004, column: 7, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3004, column: 6)
!6855 = !DILocation(line: 3004, column: 6, scope: !6814)
!6856 = !DILocation(line: 3005, column: 3, scope: !6854)
!6857 = !DILocation(line: 3006, column: 10, scope: !6814)
!6858 = !DILocation(line: 3006, column: 13, scope: !6814)
!6859 = !DILocation(line: 3006, column: 8, scope: !6814)
!6860 = !DILocation(line: 3007, column: 9, scope: !6814)
!6861 = !DILocation(line: 3007, column: 16, scope: !6814)
!6862 = !DILocation(line: 3007, column: 6, scope: !6814)
!6863 = !DILocation(line: 3010, column: 2, scope: !6814)
!6864 = !DILocation(line: 3010, column: 2, scope: !6830)
!6865 = !DILocalVariable(name: "__dummy", scope: !6866, file: !3, line: 3010, type: !364)
!6866 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 3010, column: 2)
!6867 = !DILocation(line: 3010, column: 2, scope: !6866)
!6868 = !DILocalVariable(name: "__dummy2", scope: !6866, file: !3, line: 3010, type: !364)
!6869 = !DILocation(line: 3010, column: 2, scope: !6829)
!6870 = !DILocation(line: 3010, column: 2, scope: !6828)
!6871 = !DILocation(line: 3010, column: 2, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6828, file: !3, line: 3010, column: 2)
!6873 = !DILocalVariable(name: "__dummy", scope: !6874, file: !3, line: 3010, type: !364)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 3010, column: 2)
!6875 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 3010, column: 2)
!6876 = !DILocation(line: 3010, column: 2, scope: !6874)
!6877 = !DILocalVariable(name: "__dummy2", scope: !6874, file: !3, line: 3010, type: !364)
!6878 = !DILocation(line: 3010, column: 2, scope: !6875)
!6879 = !DILocation(line: 3010, column: 2, scope: !6827)
!6880 = !{i32 -2141472774}
!6881 = !DILocation(line: 3010, column: 2, scope: !6826)
!6882 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !6825)
!6883 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !6825)
!6884 = !DILocation(line: 3011, column: 22, scope: !6814)
!6885 = !DILocation(line: 3011, column: 31, scope: !6814)
!6886 = !DILocation(line: 3011, column: 46, scope: !6814)
!6887 = !DILocation(line: 3011, column: 16, scope: !6814)
!6888 = !DILocation(line: 3011, column: 14, scope: !6814)
!6889 = !DILocation(line: 3012, column: 6, scope: !6818)
!6890 = !DILocation(line: 3012, column: 17, scope: !6818)
!6891 = !DILocation(line: 3012, column: 6, scope: !6814)
!6892 = !DILocation(line: 3013, column: 8, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 3013, column: 7)
!6894 = !DILocation(line: 3013, column: 20, scope: !6893)
!6895 = !DILocation(line: 3013, column: 41, scope: !6893)
!6896 = !DILocation(line: 3014, column: 9, scope: !6893)
!6897 = !DILocation(line: 3014, column: 21, scope: !6893)
!6898 = !DILocation(line: 3013, column: 7, scope: !6822)
!6899 = !DILocation(line: 3016, column: 11, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 3014, column: 41)
!6901 = !DILocation(line: 3016, column: 20, scope: !6900)
!6902 = !DILocation(line: 3016, column: 35, scope: !6900)
!6903 = !DILocation(line: 3015, column: 4, scope: !6900)
!6904 = !DILocation(line: 3017, column: 3, scope: !6900)
!6905 = !DILocation(line: 3019, column: 11, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 3017, column: 10)
!6907 = !DILocation(line: 3019, column: 20, scope: !6906)
!6908 = !DILocation(line: 3019, column: 35, scope: !6906)
!6909 = !DILocation(line: 3018, column: 4, scope: !6906)
!6910 = !DILocation(line: 3021, column: 27, scope: !6822)
!6911 = !DILocation(line: 3021, column: 32, scope: !6822)
!6912 = !DILocation(line: 3021, column: 42, scope: !6822)
!6913 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !6821)
!6914 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !6821)
!6915 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !6821)
!6916 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !6821)
!6917 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !6821)
!6918 = !DILocation(line: 3022, column: 7, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 3022, column: 7)
!6920 = !DILocation(line: 3022, column: 19, scope: !6919)
!6921 = !DILocation(line: 3022, column: 7, scope: !6822)
!6922 = !DILocation(line: 3023, column: 16, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 3022, column: 40)
!6924 = !DILocation(line: 3023, column: 21, scope: !6923)
!6925 = !DILocation(line: 3023, column: 4, scope: !6923)
!6926 = !DILocation(line: 3025, column: 29, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 3025, column: 8)
!6928 = !DILocation(line: 3025, column: 34, scope: !6927)
!6929 = !DILocation(line: 3025, column: 8, scope: !6927)
!6930 = !DILocation(line: 3025, column: 8, scope: !6923)
!6931 = !DILocation(line: 3026, column: 20, scope: !6927)
!6932 = !DILocation(line: 3026, column: 5, scope: !6927)
!6933 = !DILocation(line: 3027, column: 3, scope: !6923)
!6934 = !DILocation(line: 3028, column: 2, scope: !6822)
!6935 = !DILocation(line: 3029, column: 27, scope: !6817)
!6936 = !DILocation(line: 3029, column: 32, scope: !6817)
!6937 = !DILocation(line: 3029, column: 42, scope: !6817)
!6938 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !6816)
!6939 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !6816)
!6940 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !6816)
!6941 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !6816)
!6942 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !6816)
!6943 = !DILocation(line: 3032, column: 7, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3032, column: 6)
!6945 = !DILocation(line: 3032, column: 14, scope: !6944)
!6946 = !DILocation(line: 3032, column: 6, scope: !6814)
!6947 = !DILocation(line: 3033, column: 8, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3033, column: 7)
!6949 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 3032, column: 31)
!6950 = !DILocation(line: 3033, column: 13, scope: !6948)
!6951 = !DILocation(line: 3033, column: 22, scope: !6948)
!6952 = !DILocation(line: 3033, column: 36, scope: !6948)
!6953 = !DILocation(line: 3034, column: 8, scope: !6948)
!6954 = !DILocation(line: 3034, column: 15, scope: !6948)
!6955 = !DILocation(line: 3034, column: 29, scope: !6948)
!6956 = !DILocation(line: 3034, column: 34, scope: !6948)
!6957 = !DILocation(line: 3034, column: 26, scope: !6948)
!6958 = !DILocation(line: 3034, column: 44, scope: !6948)
!6959 = !DILocation(line: 3035, column: 34, scope: !6948)
!6960 = !DILocation(line: 3035, column: 7, scope: !6948)
!6961 = !DILocation(line: 3033, column: 7, scope: !6949)
!6962 = !DILocation(line: 3036, column: 4, scope: !6948)
!6963 = !DILocation(line: 3036, column: 11, scope: !6948)
!6964 = !DILocation(line: 3036, column: 18, scope: !6948)
!6965 = !DILocation(line: 3038, column: 4, scope: !6948)
!6966 = !DILocation(line: 3038, column: 11, scope: !6948)
!6967 = !DILocation(line: 3038, column: 18, scope: !6948)
!6968 = !DILocation(line: 3039, column: 2, scope: !6949)
!6969 = !DILocation(line: 3040, column: 23, scope: !6814)
!6970 = !DILocation(line: 3040, column: 28, scope: !6814)
!6971 = !DILocation(line: 3040, column: 2, scope: !6814)
!6972 = !DILocation(line: 3041, column: 1, scope: !6814)
!6973 = distinct !DISubprogram(name: "drain_dma_buffers", scope: !3, file: !3, line: 2781, type: !6185, scopeLine: 2782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!6974 = !DILocalVariable(name: "dev", arg: 1, scope: !6973, file: !3, line: 2781, type: !324)
!6975 = !DILocation(line: 2781, column: 53, scope: !6973)
!6976 = !DILocalVariable(name: "channel", arg: 2, scope: !6973, file: !3, line: 2781, type: !7)
!6977 = !DILocation(line: 2781, column: 71, scope: !6973)
!6978 = !DILocalVariable(name: "board", scope: !6973, file: !3, line: 2783, type: !4755)
!6979 = !DILocation(line: 2783, column: 31, scope: !6973)
!6980 = !DILocation(line: 2783, column: 39, scope: !6973)
!6981 = !DILocation(line: 2783, column: 44, scope: !6973)
!6982 = !DILocalVariable(name: "devpriv", scope: !6973, file: !3, line: 2784, type: !4645)
!6983 = !DILocation(line: 2784, column: 27, scope: !6973)
!6984 = !DILocation(line: 2784, column: 37, scope: !6973)
!6985 = !DILocation(line: 2784, column: 42, scope: !6973)
!6986 = !DILocalVariable(name: "s", scope: !6973, file: !3, line: 2785, type: !3995)
!6987 = !DILocation(line: 2785, column: 27, scope: !6973)
!6988 = !DILocation(line: 2785, column: 31, scope: !6973)
!6989 = !DILocation(line: 2785, column: 36, scope: !6973)
!6990 = !DILocalVariable(name: "next_transfer_addr", scope: !6973, file: !3, line: 2786, type: !580)
!6991 = !DILocation(line: 2786, column: 6, scope: !6973)
!6992 = !DILocalVariable(name: "j", scope: !6973, file: !3, line: 2787, type: !323)
!6993 = !DILocation(line: 2787, column: 6, scope: !6973)
!6994 = !DILocalVariable(name: "num_samples", scope: !6973, file: !3, line: 2788, type: !323)
!6995 = !DILocation(line: 2788, column: 6, scope: !6973)
!6996 = !DILocalVariable(name: "pci_addr_reg", scope: !6973, file: !3, line: 2789, type: !374)
!6997 = !DILocation(line: 2789, column: 16, scope: !6973)
!6998 = !DILocation(line: 2791, column: 17, scope: !6973)
!6999 = !DILocation(line: 2791, column: 26, scope: !6973)
!7000 = !DILocation(line: 2791, column: 43, scope: !6973)
!7001 = !DILocation(line: 2791, column: 41, scope: !6973)
!7002 = !DILocation(line: 2791, column: 15, scope: !6973)
!7003 = !DILocation(line: 2794, column: 9, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 2794, column: 2)
!7005 = !DILocation(line: 2794, column: 41, scope: !7004)
!7006 = !DILocation(line: 2794, column: 35, scope: !7004)
!7007 = !DILocation(line: 2794, column: 33, scope: !7004)
!7008 = !DILocation(line: 2794, column: 7, scope: !7004)
!7009 = !DILocation(line: 2795, column: 8, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 2794, column: 2)
!7011 = !DILocation(line: 2796, column: 8, scope: !7010)
!7012 = !DILocation(line: 2796, column: 17, scope: !7010)
!7013 = !DILocation(line: 2796, column: 36, scope: !7010)
!7014 = !DILocation(line: 2796, column: 45, scope: !7010)
!7015 = !DILocation(line: 2795, column: 27, scope: !7010)
!7016 = !DILocation(line: 2796, column: 59, scope: !7010)
!7017 = !DILocation(line: 2797, column: 8, scope: !7010)
!7018 = !DILocation(line: 2798, column: 8, scope: !7010)
!7019 = !DILocation(line: 2798, column: 17, scope: !7010)
!7020 = !DILocation(line: 2798, column: 36, scope: !7010)
!7021 = !DILocation(line: 2798, column: 45, scope: !7010)
!7022 = !DILocation(line: 2798, column: 59, scope: !7010)
!7023 = !DILocation(line: 2797, column: 27, scope: !7010)
!7024 = !DILocation(line: 2799, column: 25, scope: !7010)
!7025 = !DILocation(line: 2799, column: 28, scope: !7010)
!7026 = !DILocation(line: 2799, column: 50, scope: !7010)
!7027 = !DILocation(line: 2799, column: 32, scope: !7010)
!7028 = !DILocation(line: 2799, column: 30, scope: !7010)
!7029 = !DILocation(line: 0, scope: !7010)
!7030 = !DILocation(line: 2794, column: 2, scope: !7004)
!7031 = !DILocation(line: 2801, column: 38, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 2799, column: 63)
!7033 = !DILocation(line: 2801, column: 59, scope: !7032)
!7034 = !DILocation(line: 2801, column: 41, scope: !7032)
!7035 = !DILocation(line: 2801, column: 17, scope: !7032)
!7036 = !DILocation(line: 2801, column: 15, scope: !7032)
!7037 = !DILocation(line: 2802, column: 28, scope: !7032)
!7038 = !DILocation(line: 2803, column: 5, scope: !7032)
!7039 = !DILocation(line: 2803, column: 14, scope: !7032)
!7040 = !DILocation(line: 2803, column: 24, scope: !7032)
!7041 = !DILocation(line: 2803, column: 33, scope: !7032)
!7042 = !DILocation(line: 2804, column: 5, scope: !7032)
!7043 = !DILocation(line: 2802, column: 3, scope: !7032)
!7044 = !DILocation(line: 2805, column: 28, scope: !7032)
!7045 = !DILocation(line: 2805, column: 37, scope: !7032)
!7046 = !DILocation(line: 2805, column: 50, scope: !7032)
!7047 = !DILocation(line: 2806, column: 24, scope: !7032)
!7048 = !DILocation(line: 2806, column: 6, scope: !7032)
!7049 = !DILocation(line: 2805, column: 55, scope: !7032)
!7050 = !DILocation(line: 2805, column: 3, scope: !7032)
!7051 = !DILocation(line: 2805, column: 12, scope: !7032)
!7052 = !DILocation(line: 2805, column: 25, scope: !7032)
!7053 = !DILocation(line: 2807, column: 2, scope: !7032)
!7054 = !DILocation(line: 2799, column: 59, scope: !7010)
!7055 = !DILocation(line: 2794, column: 2, scope: !7010)
!7056 = distinct !{!7056, !7030, !7057}
!7057 = !DILocation(line: 2807, column: 2, scope: !7004)
!7058 = !DILocation(line: 2812, column: 1, scope: !6973)
!7059 = distinct !DISubprogram(name: "pio_drain_ai_fifo", scope: !3, file: !3, line: 2771, type: !358, scopeLine: 2772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7060 = !DILocalVariable(name: "dev", arg: 1, scope: !7059, file: !3, line: 2771, type: !324)
!7061 = !DILocation(line: 2771, column: 53, scope: !7059)
!7062 = !DILocalVariable(name: "board", scope: !7059, file: !3, line: 2773, type: !4755)
!7063 = !DILocation(line: 2773, column: 31, scope: !7059)
!7064 = !DILocation(line: 2773, column: 39, scope: !7059)
!7065 = !DILocation(line: 2773, column: 44, scope: !7059)
!7066 = !DILocation(line: 2775, column: 6, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 2775, column: 6)
!7068 = !DILocation(line: 2775, column: 13, scope: !7067)
!7069 = !DILocation(line: 2775, column: 20, scope: !7067)
!7070 = !DILocation(line: 2775, column: 6, scope: !7059)
!7071 = !DILocation(line: 2776, column: 24, scope: !7067)
!7072 = !DILocation(line: 2776, column: 3, scope: !7067)
!7073 = !DILocation(line: 2778, column: 24, scope: !7067)
!7074 = !DILocation(line: 2778, column: 3, scope: !7067)
!7075 = !DILocation(line: 2779, column: 1, scope: !7059)
!7076 = distinct !DISubprogram(name: "dma_transfer_size", scope: !3, file: !3, line: 2256, type: !7077, scopeLine: 2257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7077 = !DISubroutineType(types: !7078)
!7078 = !{!7, !324}
!7079 = !DILocalVariable(name: "dev", arg: 1, scope: !7076, file: !3, line: 2256, type: !324)
!7080 = !DILocation(line: 2256, column: 68, scope: !7076)
!7081 = !DILocalVariable(name: "board", scope: !7076, file: !3, line: 2258, type: !4755)
!7082 = !DILocation(line: 2258, column: 31, scope: !7076)
!7083 = !DILocation(line: 2258, column: 39, scope: !7076)
!7084 = !DILocation(line: 2258, column: 44, scope: !7076)
!7085 = !DILocalVariable(name: "devpriv", scope: !7076, file: !3, line: 2259, type: !4645)
!7086 = !DILocation(line: 2259, column: 27, scope: !7076)
!7087 = !DILocation(line: 2259, column: 37, scope: !7076)
!7088 = !DILocation(line: 2259, column: 42, scope: !7076)
!7089 = !DILocalVariable(name: "num_samples", scope: !7076, file: !3, line: 2260, type: !7)
!7090 = !DILocation(line: 2260, column: 15, scope: !7076)
!7091 = !DILocation(line: 2262, column: 16, scope: !7076)
!7092 = !DILocation(line: 2262, column: 25, scope: !7076)
!7093 = !DILocation(line: 2263, column: 9, scope: !7076)
!7094 = !DILocation(line: 2263, column: 16, scope: !7076)
!7095 = !DILocation(line: 2263, column: 25, scope: !7076)
!7096 = !DILocation(line: 2262, column: 48, scope: !7076)
!7097 = !DILocation(line: 2262, column: 14, scope: !7076)
!7098 = !DILocation(line: 2264, column: 6, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 2264, column: 6)
!7100 = !DILocation(line: 2264, column: 18, scope: !7099)
!7101 = !DILocation(line: 2264, column: 6, scope: !7076)
!7102 = !DILocation(line: 2265, column: 15, scope: !7099)
!7103 = !DILocation(line: 2265, column: 3, scope: !7099)
!7104 = !DILocation(line: 2267, column: 9, scope: !7076)
!7105 = !DILocation(line: 2267, column: 2, scope: !7076)
!7106 = distinct !DISubprogram(name: "pio_drain_ai_fifo_32", scope: !3, file: !3, line: 2740, type: !358, scopeLine: 2741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7107 = !DILocalVariable(name: "dev", arg: 1, scope: !7106, file: !3, line: 2740, type: !324)
!7108 = !DILocation(line: 2740, column: 56, scope: !7106)
!7109 = !DILocalVariable(name: "devpriv", scope: !7106, file: !3, line: 2742, type: !4645)
!7110 = !DILocation(line: 2742, column: 27, scope: !7106)
!7111 = !DILocation(line: 2742, column: 37, scope: !7106)
!7112 = !DILocation(line: 2742, column: 42, scope: !7106)
!7113 = !DILocalVariable(name: "s", scope: !7106, file: !3, line: 2743, type: !3995)
!7114 = !DILocation(line: 2743, column: 27, scope: !7106)
!7115 = !DILocation(line: 2743, column: 31, scope: !7106)
!7116 = !DILocation(line: 2743, column: 36, scope: !7106)
!7117 = !DILocalVariable(name: "nsamples", scope: !7106, file: !3, line: 2744, type: !7)
!7118 = !DILocation(line: 2744, column: 15, scope: !7106)
!7119 = !DILocalVariable(name: "i", scope: !7106, file: !3, line: 2745, type: !7)
!7120 = !DILocation(line: 2745, column: 15, scope: !7106)
!7121 = !DILocalVariable(name: "fifo_data", scope: !7106, file: !3, line: 2746, type: !580)
!7122 = !DILocation(line: 2746, column: 6, scope: !7106)
!7123 = !DILocalVariable(name: "write_code", scope: !7106, file: !3, line: 2747, type: !323)
!7124 = !DILocation(line: 2747, column: 6, scope: !7106)
!7125 = !DILocation(line: 2748, column: 9, scope: !7106)
!7126 = !DILocation(line: 2748, column: 18, scope: !7106)
!7127 = !DILocation(line: 2748, column: 30, scope: !7106)
!7128 = !DILocation(line: 2748, column: 3, scope: !7106)
!7129 = !DILocation(line: 2748, column: 52, scope: !7106)
!7130 = !DILocalVariable(name: "read_code", scope: !7106, file: !3, line: 2749, type: !323)
!7131 = !DILocation(line: 2749, column: 6, scope: !7106)
!7132 = !DILocation(line: 2750, column: 9, scope: !7106)
!7133 = !DILocation(line: 2750, column: 18, scope: !7106)
!7134 = !DILocation(line: 2750, column: 30, scope: !7106)
!7135 = !DILocation(line: 2750, column: 3, scope: !7106)
!7136 = !DILocation(line: 2750, column: 51, scope: !7106)
!7137 = !DILocation(line: 2752, column: 34, scope: !7106)
!7138 = !DILocation(line: 2752, column: 13, scope: !7106)
!7139 = !DILocation(line: 2752, column: 11, scope: !7106)
!7140 = !DILocation(line: 2753, column: 9, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 2753, column: 2)
!7142 = !DILocation(line: 2753, column: 7, scope: !7141)
!7143 = !DILocation(line: 2753, column: 14, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 2753, column: 2)
!7145 = !DILocation(line: 2753, column: 27, scope: !7144)
!7146 = !DILocation(line: 2753, column: 24, scope: !7144)
!7147 = !DILocation(line: 2753, column: 38, scope: !7144)
!7148 = !DILocation(line: 2753, column: 41, scope: !7144)
!7149 = !DILocation(line: 2753, column: 45, scope: !7144)
!7150 = !DILocation(line: 2753, column: 43, scope: !7144)
!7151 = !DILocation(line: 0, scope: !7144)
!7152 = !DILocation(line: 2753, column: 2, scope: !7141)
!7153 = !DILocalVariable(name: "val", scope: !7154, file: !3, line: 2754, type: !482)
!7154 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 2753, column: 56)
!7155 = !DILocation(line: 2754, column: 18, scope: !7154)
!7156 = !DILocation(line: 2756, column: 21, scope: !7154)
!7157 = !DILocation(line: 2756, column: 26, scope: !7154)
!7158 = !DILocation(line: 2756, column: 31, scope: !7154)
!7159 = !DILocation(line: 2756, column: 15, scope: !7154)
!7160 = !DILocation(line: 2756, column: 13, scope: !7154)
!7161 = !DILocation(line: 2757, column: 9, scope: !7154)
!7162 = !DILocation(line: 2757, column: 19, scope: !7154)
!7163 = !DILocation(line: 2757, column: 7, scope: !7154)
!7164 = !DILocation(line: 2758, column: 28, scope: !7154)
!7165 = !DILocation(line: 2758, column: 31, scope: !7154)
!7166 = !DILocation(line: 2758, column: 3, scope: !7154)
!7167 = !DILocation(line: 2759, column: 4, scope: !7154)
!7168 = !DILocation(line: 2760, column: 7, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 2760, column: 7)
!7170 = !DILocation(line: 2760, column: 11, scope: !7169)
!7171 = !DILocation(line: 2760, column: 9, scope: !7169)
!7172 = !DILocation(line: 2760, column: 7, scope: !7154)
!7173 = !DILocation(line: 2761, column: 11, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 2760, column: 21)
!7175 = !DILocation(line: 2761, column: 21, scope: !7174)
!7176 = !DILocation(line: 2761, column: 28, scope: !7174)
!7177 = !DILocation(line: 2761, column: 10, scope: !7174)
!7178 = !DILocation(line: 2761, column: 8, scope: !7174)
!7179 = !DILocation(line: 2762, column: 29, scope: !7174)
!7180 = !DILocation(line: 2762, column: 32, scope: !7174)
!7181 = !DILocation(line: 2762, column: 4, scope: !7174)
!7182 = !DILocation(line: 2763, column: 5, scope: !7174)
!7183 = !DILocation(line: 2764, column: 3, scope: !7174)
!7184 = !DILocation(line: 2765, column: 21, scope: !7154)
!7185 = !DILocation(line: 2765, column: 30, scope: !7154)
!7186 = !DILocation(line: 2765, column: 42, scope: !7154)
!7187 = !DILocation(line: 2765, column: 15, scope: !7154)
!7188 = !DILocation(line: 2765, column: 63, scope: !7154)
!7189 = !DILocation(line: 2765, column: 13, scope: !7154)
!7190 = !DILocation(line: 2753, column: 2, scope: !7144)
!7191 = distinct !{!7191, !7152, !7192}
!7192 = !DILocation(line: 2767, column: 2, scope: !7141)
!7193 = !DILocation(line: 2768, column: 1, scope: !7106)
!7194 = distinct !DISubprogram(name: "pio_drain_ai_fifo_16", scope: !3, file: !3, line: 2678, type: !358, scopeLine: 2679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7195 = !DILocalVariable(name: "dev", arg: 1, scope: !7194, file: !3, line: 2678, type: !324)
!7196 = !DILocation(line: 2678, column: 56, scope: !7194)
!7197 = !DILocalVariable(name: "devpriv", scope: !7194, file: !3, line: 2680, type: !4645)
!7198 = !DILocation(line: 2680, column: 27, scope: !7194)
!7199 = !DILocation(line: 2680, column: 37, scope: !7194)
!7200 = !DILocation(line: 2680, column: 42, scope: !7194)
!7201 = !DILocalVariable(name: "s", scope: !7194, file: !3, line: 2681, type: !3995)
!7202 = !DILocation(line: 2681, column: 27, scope: !7194)
!7203 = !DILocation(line: 2681, column: 31, scope: !7194)
!7204 = !DILocation(line: 2681, column: 36, scope: !7194)
!7205 = !DILocalVariable(name: "i", scope: !7194, file: !3, line: 2682, type: !7)
!7206 = !DILocation(line: 2682, column: 15, scope: !7194)
!7207 = !DILocalVariable(name: "prepost_bits", scope: !7194, file: !3, line: 2683, type: !1025)
!7208 = !DILocation(line: 2683, column: 6, scope: !7194)
!7209 = !DILocalVariable(name: "read_segment", scope: !7194, file: !3, line: 2684, type: !323)
!7210 = !DILocation(line: 2684, column: 6, scope: !7194)
!7211 = !DILocalVariable(name: "read_index", scope: !7194, file: !3, line: 2684, type: !323)
!7212 = !DILocation(line: 2684, column: 20, scope: !7194)
!7213 = !DILocalVariable(name: "write_segment", scope: !7194, file: !3, line: 2684, type: !323)
!7214 = !DILocation(line: 2684, column: 32, scope: !7194)
!7215 = !DILocalVariable(name: "write_index", scope: !7194, file: !3, line: 2684, type: !323)
!7216 = !DILocation(line: 2684, column: 47, scope: !7194)
!7217 = !DILocalVariable(name: "num_samples", scope: !7194, file: !3, line: 2685, type: !323)
!7218 = !DILocation(line: 2685, column: 6, scope: !7194)
!7219 = !DILocation(line: 2687, column: 2, scope: !7194)
!7220 = !DILocation(line: 2689, column: 22, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 2687, column: 5)
!7222 = !DILocation(line: 2689, column: 31, scope: !7221)
!7223 = !DILocation(line: 2689, column: 43, scope: !7221)
!7224 = !DILocation(line: 2689, column: 16, scope: !7221)
!7225 = !DILocation(line: 2689, column: 64, scope: !7221)
!7226 = !DILocation(line: 2689, column: 14, scope: !7221)
!7227 = !DILocation(line: 2691, column: 23, scope: !7221)
!7228 = !DILocation(line: 2691, column: 32, scope: !7221)
!7229 = !DILocation(line: 2691, column: 44, scope: !7221)
!7230 = !DILocation(line: 2691, column: 17, scope: !7221)
!7231 = !DILocation(line: 2691, column: 66, scope: !7221)
!7232 = !DILocation(line: 2691, column: 15, scope: !7221)
!7233 = !DILocation(line: 2700, column: 24, scope: !7221)
!7234 = !DILocation(line: 2700, column: 33, scope: !7221)
!7235 = !DILocation(line: 2700, column: 45, scope: !7221)
!7236 = !DILocation(line: 2700, column: 18, scope: !7221)
!7237 = !DILocation(line: 2700, column: 16, scope: !7221)
!7238 = !DILocation(line: 2706, column: 42, scope: !7221)
!7239 = !DILocation(line: 2706, column: 18, scope: !7221)
!7240 = !DILocation(line: 2706, column: 16, scope: !7221)
!7241 = !DILocation(line: 2707, column: 44, scope: !7221)
!7242 = !DILocation(line: 2707, column: 19, scope: !7221)
!7243 = !DILocation(line: 2707, column: 17, scope: !7221)
!7244 = !DILocation(line: 2709, column: 7, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 2709, column: 7)
!7246 = !DILocation(line: 2709, column: 23, scope: !7245)
!7247 = !DILocation(line: 2709, column: 20, scope: !7245)
!7248 = !DILocation(line: 2709, column: 7, scope: !7221)
!7249 = !DILocation(line: 2711, column: 5, scope: !7245)
!7250 = !DILocation(line: 2711, column: 14, scope: !7245)
!7251 = !DILocation(line: 2711, column: 39, scope: !7245)
!7252 = !DILocation(line: 2711, column: 37, scope: !7245)
!7253 = !DILocation(line: 2710, column: 16, scope: !7245)
!7254 = !DILocation(line: 2710, column: 4, scope: !7245)
!7255 = !DILocation(line: 2713, column: 18, scope: !7245)
!7256 = !DILocation(line: 2713, column: 32, scope: !7245)
!7257 = !DILocation(line: 2713, column: 30, scope: !7245)
!7258 = !DILocation(line: 2713, column: 16, scope: !7245)
!7259 = !DILocation(line: 2714, column: 7, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 2714, column: 7)
!7261 = !DILocation(line: 2714, column: 19, scope: !7260)
!7262 = !DILocation(line: 2714, column: 7, scope: !7221)
!7263 = !DILocation(line: 2715, column: 4, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 2714, column: 24)
!7265 = !DILocation(line: 2717, column: 4, scope: !7264)
!7266 = !DILocation(line: 2720, column: 38, scope: !7221)
!7267 = !DILocation(line: 2720, column: 41, scope: !7221)
!7268 = !DILocation(line: 2720, column: 17, scope: !7221)
!7269 = !DILocation(line: 2720, column: 15, scope: !7221)
!7270 = !DILocation(line: 2721, column: 7, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 2721, column: 7)
!7272 = !DILocation(line: 2721, column: 19, scope: !7271)
!7273 = !DILocation(line: 2721, column: 7, scope: !7221)
!7274 = !DILocation(line: 2722, column: 4, scope: !7271)
!7275 = !DILocation(line: 2724, column: 10, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 2724, column: 3)
!7277 = !DILocation(line: 2724, column: 8, scope: !7276)
!7278 = !DILocation(line: 2724, column: 15, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 2724, column: 3)
!7280 = !DILocation(line: 2724, column: 19, scope: !7279)
!7281 = !DILocation(line: 2724, column: 17, scope: !7279)
!7282 = !DILocation(line: 2724, column: 3, scope: !7276)
!7283 = !DILocalVariable(name: "val", scope: !7284, file: !3, line: 2725, type: !482)
!7284 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 2724, column: 37)
!7285 = !DILocation(line: 2725, column: 19, scope: !7284)
!7286 = !DILocation(line: 2727, column: 16, scope: !7284)
!7287 = !DILocation(line: 2727, column: 25, scope: !7284)
!7288 = !DILocation(line: 2727, column: 37, scope: !7284)
!7289 = !DILocation(line: 2727, column: 10, scope: !7284)
!7290 = !DILocation(line: 2727, column: 8, scope: !7284)
!7291 = !DILocation(line: 2728, column: 29, scope: !7284)
!7292 = !DILocation(line: 2728, column: 32, scope: !7284)
!7293 = !DILocation(line: 2728, column: 4, scope: !7284)
!7294 = !DILocation(line: 2729, column: 3, scope: !7284)
!7295 = !DILocation(line: 2724, column: 33, scope: !7279)
!7296 = !DILocation(line: 2724, column: 3, scope: !7279)
!7297 = distinct !{!7297, !7282, !7298}
!7298 = !DILocation(line: 2729, column: 3, scope: !7276)
!7299 = !DILocation(line: 2731, column: 2, scope: !7221)
!7300 = !DILocation(line: 2731, column: 11, scope: !7194)
!7301 = !DILocation(line: 2731, column: 27, scope: !7194)
!7302 = !DILocation(line: 2731, column: 24, scope: !7194)
!7303 = distinct !{!7303, !7219, !7304}
!7304 = !DILocation(line: 2731, column: 40, scope: !7194)
!7305 = !DILocation(line: 2732, column: 1, scope: !7194)
!7306 = distinct !DISubprogram(name: "adc_upper_read_ptr_code", scope: !3, file: !3, line: 388, type: !7307, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7307 = !DISubroutineType(types: !7308)
!7308 = !{!7, !1025}
!7309 = !DILocalVariable(name: "prepost_bits", arg: 1, scope: !7306, file: !3, line: 388, type: !1025)
!7310 = !DILocation(line: 388, column: 56, scope: !7306)
!7311 = !DILocation(line: 390, column: 10, scope: !7306)
!7312 = !DILocation(line: 390, column: 23, scope: !7306)
!7313 = !DILocation(line: 390, column: 30, scope: !7306)
!7314 = !DILocation(line: 390, column: 2, scope: !7306)
!7315 = distinct !DISubprogram(name: "adc_upper_write_ptr_code", scope: !3, file: !3, line: 393, type: !7307, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7316 = !DILocalVariable(name: "prepost_bits", arg: 1, scope: !7315, file: !3, line: 393, type: !1025)
!7317 = !DILocation(line: 393, column: 57, scope: !7315)
!7318 = !DILocation(line: 395, column: 10, scope: !7315)
!7319 = !DILocation(line: 395, column: 23, scope: !7315)
!7320 = !DILocation(line: 395, column: 30, scope: !7315)
!7321 = !DILocation(line: 395, column: 2, scope: !7315)
!7322 = distinct !DISubprogram(name: "load_ao_dma", scope: !3, file: !3, line: 2971, type: !7323, scopeLine: 2972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7323 = !DISubroutineType(types: !7324)
!7324 = !{null, !324, !7325}
!7325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7326, size: 64)
!7326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4040)
!7327 = !DILocalVariable(name: "dev", arg: 1, scope: !7322, file: !3, line: 2971, type: !324)
!7328 = !DILocation(line: 2971, column: 47, scope: !7322)
!7329 = !DILocalVariable(name: "cmd", arg: 2, scope: !7322, file: !3, line: 2971, type: !7325)
!7330 = !DILocation(line: 2971, column: 77, scope: !7322)
!7331 = !DILocalVariable(name: "devpriv", scope: !7322, file: !3, line: 2973, type: !4645)
!7332 = !DILocation(line: 2973, column: 27, scope: !7322)
!7333 = !DILocation(line: 2973, column: 37, scope: !7322)
!7334 = !DILocation(line: 2973, column: 42, scope: !7322)
!7335 = !DILocalVariable(name: "num_bytes", scope: !7322, file: !3, line: 2974, type: !7)
!7336 = !DILocation(line: 2974, column: 15, scope: !7322)
!7337 = !DILocalVariable(name: "next_transfer_addr", scope: !7322, file: !3, line: 2975, type: !7)
!7338 = !DILocation(line: 2975, column: 15, scope: !7322)
!7339 = !DILocalVariable(name: "pci_addr_reg", scope: !7322, file: !3, line: 2976, type: !374)
!7340 = !DILocation(line: 2976, column: 16, scope: !7322)
!7341 = !DILocation(line: 2976, column: 31, scope: !7322)
!7342 = !DILocation(line: 2976, column: 40, scope: !7322)
!7343 = !DILocation(line: 2976, column: 55, scope: !7322)
!7344 = !DILocalVariable(name: "buffer_index", scope: !7322, file: !3, line: 2977, type: !7)
!7345 = !DILocation(line: 2977, column: 15, scope: !7322)
!7346 = !DILocation(line: 2979, column: 2, scope: !7322)
!7347 = !DILocation(line: 2980, column: 18, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 2979, column: 5)
!7349 = !DILocation(line: 2980, column: 27, scope: !7348)
!7350 = !DILocation(line: 2980, column: 16, scope: !7348)
!7351 = !DILocation(line: 2982, column: 30, scope: !7348)
!7352 = !DILocation(line: 2982, column: 24, scope: !7348)
!7353 = !DILocation(line: 2982, column: 22, scope: !7348)
!7354 = !DILocation(line: 2983, column: 7, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 2983, column: 7)
!7356 = !DILocation(line: 2984, column: 7, scope: !7355)
!7357 = !DILocation(line: 2984, column: 16, scope: !7355)
!7358 = !DILocation(line: 2984, column: 35, scope: !7355)
!7359 = !DILocation(line: 2983, column: 26, scope: !7355)
!7360 = !DILocation(line: 2984, column: 49, scope: !7355)
!7361 = !DILocation(line: 2985, column: 7, scope: !7355)
!7362 = !DILocation(line: 2986, column: 7, scope: !7355)
!7363 = !DILocation(line: 2986, column: 16, scope: !7355)
!7364 = !DILocation(line: 2986, column: 35, scope: !7355)
!7365 = !DILocation(line: 2986, column: 49, scope: !7355)
!7366 = !DILocation(line: 2985, column: 26, scope: !7355)
!7367 = !DILocation(line: 2983, column: 7, scope: !7348)
!7368 = !DILocation(line: 2988, column: 4, scope: !7355)
!7369 = !DILocation(line: 2989, column: 34, scope: !7348)
!7370 = !DILocation(line: 2989, column: 39, scope: !7348)
!7371 = !DILocation(line: 2989, column: 15, scope: !7348)
!7372 = !DILocation(line: 2989, column: 13, scope: !7348)
!7373 = !DILocation(line: 2990, column: 2, scope: !7348)
!7374 = !DILocation(line: 2990, column: 11, scope: !7322)
!7375 = !DILocation(line: 2990, column: 21, scope: !7322)
!7376 = distinct !{!7376, !7346, !7377}
!7377 = !DILocation(line: 2990, column: 39, scope: !7322)
!7378 = !DILocation(line: 2991, column: 1, scope: !7322)
!7379 = distinct !DISubprogram(name: "ao_dma_needs_restart", scope: !3, file: !3, line: 2897, type: !7380, scopeLine: 2899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7380 = !DISubroutineType(types: !7381)
!7381 = !{!323, !324, !482}
!7382 = !DILocalVariable(name: "dev", arg: 1, scope: !7379, file: !3, line: 2897, type: !324)
!7383 = !DILocation(line: 2897, column: 62, scope: !7379)
!7384 = !DILocalVariable(name: "dma_status", arg: 2, scope: !7379, file: !3, line: 2898, type: !482)
!7385 = !DILocation(line: 2898, column: 27, scope: !7379)
!7386 = !DILocation(line: 2900, column: 7, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 2900, column: 6)
!7388 = !DILocation(line: 2900, column: 18, scope: !7387)
!7389 = !DILocation(line: 2900, column: 37, scope: !7387)
!7390 = !DILocation(line: 2900, column: 42, scope: !7387)
!7391 = !DILocation(line: 2901, column: 7, scope: !7387)
!7392 = !DILocation(line: 2901, column: 18, scope: !7387)
!7393 = !DILocation(line: 2901, column: 39, scope: !7387)
!7394 = !DILocation(line: 2900, column: 6, scope: !7379)
!7395 = !DILocation(line: 2902, column: 3, scope: !7387)
!7396 = !DILocation(line: 2903, column: 33, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 2903, column: 6)
!7398 = !DILocation(line: 2903, column: 6, scope: !7397)
!7399 = !DILocation(line: 2903, column: 6, scope: !7379)
!7400 = !DILocation(line: 2904, column: 3, scope: !7397)
!7401 = !DILocation(line: 2906, column: 2, scope: !7379)
!7402 = !DILocation(line: 2907, column: 1, scope: !7379)
!7403 = distinct !DISubprogram(name: "restart_ao_dma", scope: !3, file: !3, line: 2909, type: !358, scopeLine: 2910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7404 = !DILocalVariable(name: "dev", arg: 1, scope: !7403, file: !3, line: 2909, type: !324)
!7405 = !DILocation(line: 2909, column: 50, scope: !7403)
!7406 = !DILocalVariable(name: "devpriv", scope: !7403, file: !3, line: 2911, type: !4645)
!7407 = !DILocation(line: 2911, column: 27, scope: !7403)
!7408 = !DILocation(line: 2911, column: 37, scope: !7403)
!7409 = !DILocation(line: 2911, column: 42, scope: !7403)
!7410 = !DILocalVariable(name: "dma_desc_bits", scope: !7403, file: !3, line: 2912, type: !7)
!7411 = !DILocation(line: 2912, column: 15, scope: !7403)
!7412 = !DILocation(line: 2914, column: 24, scope: !7403)
!7413 = !DILocation(line: 2914, column: 33, scope: !7403)
!7414 = !DILocation(line: 2914, column: 48, scope: !7403)
!7415 = !DILocation(line: 2914, column: 18, scope: !7403)
!7416 = !DILocation(line: 2914, column: 16, scope: !7403)
!7417 = !DILocation(line: 2915, column: 16, scope: !7403)
!7418 = !DILocation(line: 2916, column: 28, scope: !7403)
!7419 = !DILocation(line: 2916, column: 36, scope: !7403)
!7420 = !DILocation(line: 2916, column: 2, scope: !7403)
!7421 = !DILocation(line: 2918, column: 17, scope: !7403)
!7422 = !DILocation(line: 2918, column: 2, scope: !7403)
!7423 = !DILocation(line: 2919, column: 1, scope: !7403)
!7424 = distinct !DISubprogram(name: "last_ao_dma_load_completed", scope: !3, file: !3, line: 2877, type: !4137, scopeLine: 2878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7425 = !DILocalVariable(name: "dev", arg: 1, scope: !7424, file: !3, line: 2877, type: !324)
!7426 = !DILocation(line: 2877, column: 61, scope: !7424)
!7427 = !DILocalVariable(name: "devpriv", scope: !7424, file: !3, line: 2879, type: !4645)
!7428 = !DILocation(line: 2879, column: 27, scope: !7424)
!7429 = !DILocation(line: 2879, column: 37, scope: !7424)
!7430 = !DILocation(line: 2879, column: 42, scope: !7424)
!7431 = !DILocalVariable(name: "buffer_index", scope: !7424, file: !3, line: 2880, type: !7)
!7432 = !DILocation(line: 2880, column: 15, scope: !7424)
!7433 = !DILocalVariable(name: "transfer_address", scope: !7424, file: !3, line: 2881, type: !7)
!7434 = !DILocation(line: 2881, column: 15, scope: !7424)
!7435 = !DILocalVariable(name: "dma_status", scope: !7424, file: !3, line: 2882, type: !482)
!7436 = !DILocation(line: 2882, column: 17, scope: !7424)
!7437 = !DILocation(line: 2884, column: 35, scope: !7424)
!7438 = !DILocation(line: 2884, column: 17, scope: !7424)
!7439 = !DILocation(line: 2884, column: 15, scope: !7424)
!7440 = !DILocation(line: 2885, column: 21, scope: !7424)
!7441 = !DILocation(line: 2885, column: 30, scope: !7424)
!7442 = !DILocation(line: 2885, column: 45, scope: !7424)
!7443 = !DILocation(line: 2885, column: 15, scope: !7424)
!7444 = !DILocation(line: 2885, column: 13, scope: !7424)
!7445 = !DILocation(line: 2886, column: 7, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 2886, column: 6)
!7447 = !DILocation(line: 2886, column: 18, scope: !7446)
!7448 = !DILocation(line: 2886, column: 37, scope: !7446)
!7449 = !DILocation(line: 2886, column: 6, scope: !7424)
!7450 = !DILocation(line: 2887, column: 3, scope: !7446)
!7451 = !DILocation(line: 2890, column: 9, scope: !7424)
!7452 = !DILocation(line: 2890, column: 18, scope: !7424)
!7453 = !DILocation(line: 2890, column: 33, scope: !7424)
!7454 = !DILocation(line: 2890, column: 3, scope: !7424)
!7455 = !DILocation(line: 2889, column: 19, scope: !7424)
!7456 = !DILocation(line: 2891, column: 6, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 2891, column: 6)
!7458 = !DILocation(line: 2891, column: 26, scope: !7457)
!7459 = !DILocation(line: 2891, column: 35, scope: !7457)
!7460 = !DILocation(line: 2891, column: 54, scope: !7457)
!7461 = !DILocation(line: 2891, column: 23, scope: !7457)
!7462 = !DILocation(line: 2891, column: 6, scope: !7424)
!7463 = !DILocation(line: 2892, column: 3, scope: !7457)
!7464 = !DILocation(line: 2894, column: 2, scope: !7424)
!7465 = !DILocation(line: 2895, column: 1, scope: !7424)
!7466 = distinct !DISubprogram(name: "load_ao_dma_buffer", scope: !3, file: !3, line: 2935, type: !7467, scopeLine: 2937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7467 = !DISubroutineType(types: !7468)
!7468 = !{!7, !324, !7325}
!7469 = !DILocalVariable(name: "dev", arg: 1, scope: !7466, file: !3, line: 2935, type: !324)
!7470 = !DILocation(line: 2935, column: 62, scope: !7466)
!7471 = !DILocalVariable(name: "cmd", arg: 2, scope: !7466, file: !3, line: 2936, type: !7325)
!7472 = !DILocation(line: 2936, column: 37, scope: !7466)
!7473 = !DILocalVariable(name: "devpriv", scope: !7466, file: !3, line: 2938, type: !4645)
!7474 = !DILocation(line: 2938, column: 27, scope: !7466)
!7475 = !DILocation(line: 2938, column: 37, scope: !7466)
!7476 = !DILocation(line: 2938, column: 42, scope: !7466)
!7477 = !DILocalVariable(name: "s", scope: !7466, file: !3, line: 2939, type: !3995)
!7478 = !DILocation(line: 2939, column: 27, scope: !7466)
!7479 = !DILocation(line: 2939, column: 31, scope: !7466)
!7480 = !DILocation(line: 2939, column: 36, scope: !7466)
!7481 = !DILocalVariable(name: "buffer_index", scope: !7466, file: !3, line: 2940, type: !7)
!7482 = !DILocation(line: 2940, column: 15, scope: !7466)
!7483 = !DILocation(line: 2940, column: 30, scope: !7466)
!7484 = !DILocation(line: 2940, column: 39, scope: !7466)
!7485 = !DILocalVariable(name: "prev_buffer_index", scope: !7466, file: !3, line: 2941, type: !7)
!7486 = !DILocation(line: 2941, column: 15, scope: !7466)
!7487 = !DILocation(line: 2941, column: 53, scope: !7466)
!7488 = !DILocation(line: 2941, column: 35, scope: !7466)
!7489 = !DILocalVariable(name: "nsamples", scope: !7466, file: !3, line: 2942, type: !7)
!7490 = !DILocation(line: 2942, column: 15, scope: !7466)
!7491 = !DILocalVariable(name: "nbytes", scope: !7466, file: !3, line: 2943, type: !7)
!7492 = !DILocation(line: 2943, column: 15, scope: !7466)
!7493 = !DILocalVariable(name: "next_bits", scope: !7466, file: !3, line: 2944, type: !7)
!7494 = !DILocation(line: 2944, column: 15, scope: !7466)
!7495 = !DILocation(line: 2946, column: 40, scope: !7466)
!7496 = !DILocation(line: 2946, column: 45, scope: !7466)
!7497 = !DILocation(line: 2947, column: 12, scope: !7466)
!7498 = !DILocation(line: 2947, column: 21, scope: !7466)
!7499 = !DILocation(line: 2947, column: 31, scope: !7466)
!7500 = !DILocation(line: 2946, column: 13, scope: !7466)
!7501 = !DILocation(line: 2946, column: 11, scope: !7466)
!7502 = !DILocation(line: 2949, column: 6, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 2949, column: 6)
!7504 = !DILocation(line: 2949, column: 15, scope: !7503)
!7505 = !DILocation(line: 2949, column: 6, scope: !7466)
!7506 = !DILocation(line: 2950, column: 3, scope: !7503)
!7507 = !DILocation(line: 2952, column: 35, scope: !7466)
!7508 = !DILocation(line: 2952, column: 38, scope: !7466)
!7509 = !DILocation(line: 2952, column: 11, scope: !7466)
!7510 = !DILocation(line: 2952, column: 9, scope: !7466)
!7511 = !DILocation(line: 2953, column: 53, scope: !7466)
!7512 = !DILocation(line: 2953, column: 2, scope: !7466)
!7513 = !DILocation(line: 2953, column: 11, scope: !7466)
!7514 = !DILocation(line: 2953, column: 23, scope: !7466)
!7515 = !DILocation(line: 2953, column: 37, scope: !7466)
!7516 = !DILocation(line: 2953, column: 51, scope: !7466)
!7517 = !DILocation(line: 2955, column: 14, scope: !7466)
!7518 = !DILocation(line: 2955, column: 12, scope: !7466)
!7519 = !DILocation(line: 2956, column: 12, scope: !7466)
!7520 = !DILocation(line: 2957, column: 44, scope: !7466)
!7521 = !DILocation(line: 2957, column: 2, scope: !7466)
!7522 = !DILocation(line: 2957, column: 11, scope: !7466)
!7523 = !DILocation(line: 2957, column: 23, scope: !7466)
!7524 = !DILocation(line: 2957, column: 37, scope: !7466)
!7525 = !DILocation(line: 2957, column: 42, scope: !7466)
!7526 = !DILocation(line: 2962, column: 14, scope: !7466)
!7527 = !DILocation(line: 2962, column: 12, scope: !7466)
!7528 = !DILocation(line: 2963, column: 12, scope: !7466)
!7529 = !DILocation(line: 2964, column: 49, scope: !7466)
!7530 = !DILocation(line: 2964, column: 2, scope: !7466)
!7531 = !DILocation(line: 2964, column: 11, scope: !7466)
!7532 = !DILocation(line: 2964, column: 23, scope: !7466)
!7533 = !DILocation(line: 2964, column: 42, scope: !7466)
!7534 = !DILocation(line: 2964, column: 47, scope: !7466)
!7535 = !DILocation(line: 2966, column: 27, scope: !7466)
!7536 = !DILocation(line: 2966, column: 40, scope: !7466)
!7537 = !DILocation(line: 2966, column: 45, scope: !7466)
!7538 = !DILocation(line: 2966, column: 2, scope: !7466)
!7539 = !DILocation(line: 2966, column: 11, scope: !7466)
!7540 = !DILocation(line: 2966, column: 24, scope: !7466)
!7541 = !DILocation(line: 2968, column: 9, scope: !7466)
!7542 = !DILocation(line: 2968, column: 2, scope: !7466)
!7543 = !DILocation(line: 2969, column: 1, scope: !7466)
!7544 = distinct !DISubprogram(name: "prev_ao_dma_index", scope: !3, file: !3, line: 2865, type: !7077, scopeLine: 2866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7545 = !DILocalVariable(name: "dev", arg: 1, scope: !7544, file: !3, line: 2865, type: !324)
!7546 = !DILocation(line: 2865, column: 68, scope: !7544)
!7547 = !DILocalVariable(name: "devpriv", scope: !7544, file: !3, line: 2867, type: !4645)
!7548 = !DILocation(line: 2867, column: 27, scope: !7544)
!7549 = !DILocation(line: 2867, column: 37, scope: !7544)
!7550 = !DILocation(line: 2867, column: 42, scope: !7544)
!7551 = !DILocalVariable(name: "buffer_index", scope: !7544, file: !3, line: 2868, type: !7)
!7552 = !DILocation(line: 2868, column: 15, scope: !7544)
!7553 = !DILocation(line: 2870, column: 6, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7544, file: !3, line: 2870, column: 6)
!7555 = !DILocation(line: 2870, column: 15, scope: !7554)
!7556 = !DILocation(line: 2870, column: 28, scope: !7554)
!7557 = !DILocation(line: 2870, column: 6, scope: !7544)
!7558 = !DILocation(line: 2871, column: 16, scope: !7554)
!7559 = !DILocation(line: 2871, column: 3, scope: !7554)
!7560 = !DILocation(line: 2873, column: 18, scope: !7554)
!7561 = !DILocation(line: 2873, column: 27, scope: !7554)
!7562 = !DILocation(line: 2873, column: 40, scope: !7554)
!7563 = !DILocation(line: 2873, column: 16, scope: !7554)
!7564 = !DILocation(line: 2874, column: 9, scope: !7544)
!7565 = !DILocation(line: 2874, column: 2, scope: !7544)
!7566 = distinct !DISubprogram(name: "cb_pcidas64_ao_fill_buffer", scope: !3, file: !3, line: 2921, type: !7567, scopeLine: 2925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7567 = !DISubroutineType(types: !7568)
!7568 = !{!7, !324, !3995, !7569, !7}
!7569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!7570 = !DILocalVariable(name: "dev", arg: 1, scope: !7566, file: !3, line: 2921, type: !324)
!7571 = !DILocation(line: 2921, column: 70, scope: !7566)
!7572 = !DILocalVariable(name: "s", arg: 2, scope: !7566, file: !3, line: 2922, type: !3995)
!7573 = !DILocation(line: 2922, column: 38, scope: !7566)
!7574 = !DILocalVariable(name: "dest", arg: 3, scope: !7566, file: !3, line: 2923, type: !7569)
!7575 = !DILocation(line: 2923, column: 29, scope: !7566)
!7576 = !DILocalVariable(name: "max_bytes", arg: 4, scope: !7566, file: !3, line: 2924, type: !7)
!7577 = !DILocation(line: 2924, column: 26, scope: !7566)
!7578 = !DILocalVariable(name: "nsamples", scope: !7566, file: !3, line: 2926, type: !7)
!7579 = !DILocation(line: 2926, column: 15, scope: !7566)
!7580 = !DILocation(line: 2926, column: 50, scope: !7566)
!7581 = !DILocation(line: 2926, column: 53, scope: !7566)
!7582 = !DILocation(line: 2926, column: 26, scope: !7566)
!7583 = !DILocalVariable(name: "actual_bytes", scope: !7566, file: !3, line: 2927, type: !7)
!7584 = !DILocation(line: 2927, column: 15, scope: !7566)
!7585 = !DILocation(line: 2929, column: 34, scope: !7566)
!7586 = !DILocation(line: 2929, column: 37, scope: !7566)
!7587 = !DILocation(line: 2929, column: 13, scope: !7566)
!7588 = !DILocation(line: 2929, column: 11, scope: !7566)
!7589 = !DILocation(line: 2930, column: 41, scope: !7566)
!7590 = !DILocation(line: 2930, column: 44, scope: !7566)
!7591 = !DILocation(line: 2930, column: 50, scope: !7566)
!7592 = !DILocation(line: 2930, column: 17, scope: !7566)
!7593 = !DILocation(line: 2930, column: 15, scope: !7566)
!7594 = !DILocation(line: 2932, column: 33, scope: !7566)
!7595 = !DILocation(line: 2932, column: 36, scope: !7566)
!7596 = !DILocation(line: 2932, column: 9, scope: !7566)
!7597 = !DILocation(line: 2932, column: 2, scope: !7566)
!7598 = distinct !DISubprogram(name: "comedi_samples_to_bytes", scope: !239, file: !239, line: 839, type: !7599, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7599 = !DISubroutineType(types: !7600)
!7600 = !{!7, !3995, !7}
!7601 = !DILocalVariable(name: "s", arg: 1, scope: !7598, file: !239, line: 839, type: !3995)
!7602 = !DILocation(line: 839, column: 77, scope: !7598)
!7603 = !DILocalVariable(name: "nsamples", arg: 2, scope: !7598, file: !239, line: 840, type: !7)
!7604 = !DILocation(line: 840, column: 23, scope: !7598)
!7605 = !DILocation(line: 842, column: 9, scope: !7598)
!7606 = !DILocation(line: 842, column: 41, scope: !7598)
!7607 = !DILocation(line: 842, column: 21, scope: !7598)
!7608 = !DILocation(line: 842, column: 18, scope: !7598)
!7609 = !DILocation(line: 842, column: 2, scope: !7598)
!7610 = distinct !DISubprogram(name: "comedi_bytes_to_samples", scope: !239, file: !239, line: 825, type: !7599, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7611 = !DILocalVariable(name: "s", arg: 1, scope: !7610, file: !239, line: 825, type: !3995)
!7612 = !DILocation(line: 825, column: 77, scope: !7610)
!7613 = !DILocalVariable(name: "nbytes", arg: 2, scope: !7610, file: !239, line: 826, type: !7)
!7614 = !DILocation(line: 826, column: 23, scope: !7610)
!7615 = !DILocation(line: 828, column: 9, scope: !7610)
!7616 = !DILocation(line: 828, column: 39, scope: !7610)
!7617 = !DILocation(line: 828, column: 19, scope: !7610)
!7618 = !DILocation(line: 828, column: 16, scope: !7610)
!7619 = !DILocation(line: 828, column: 2, scope: !7610)
!7620 = distinct !DISubprogram(name: "comedi_sample_shift", scope: !239, file: !239, line: 813, type: !7621, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7621 = !DISubroutineType(types: !7622)
!7622 = !{!7, !3995}
!7623 = !DILocalVariable(name: "s", arg: 1, scope: !7620, file: !239, line: 813, type: !3995)
!7624 = !DILocation(line: 813, column: 73, scope: !7620)
!7625 = !DILocation(line: 815, column: 9, scope: !7620)
!7626 = !DILocation(line: 815, column: 12, scope: !7620)
!7627 = !DILocation(line: 815, column: 25, scope: !7620)
!7628 = !DILocation(line: 815, column: 2, scope: !7620)
!7629 = distinct !DISubprogram(name: "load_first_dma_descriptor", scope: !3, file: !3, line: 2530, type: !4330, scopeLine: 2533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7630 = !DILocalVariable(name: "dev", arg: 1, scope: !7629, file: !3, line: 2530, type: !324)
!7631 = !DILocation(line: 2530, column: 68, scope: !7629)
!7632 = !DILocalVariable(name: "dma_channel", arg: 2, scope: !7629, file: !3, line: 2531, type: !7)
!7633 = !DILocation(line: 2531, column: 24, scope: !7629)
!7634 = !DILocalVariable(name: "descriptor_bits", arg: 3, scope: !7629, file: !3, line: 2532, type: !7)
!7635 = !DILocation(line: 2532, column: 24, scope: !7629)
!7636 = !DILocalVariable(name: "devpriv", scope: !7629, file: !3, line: 2534, type: !4645)
!7637 = !DILocation(line: 2534, column: 27, scope: !7629)
!7638 = !DILocation(line: 2534, column: 37, scope: !7629)
!7639 = !DILocation(line: 2534, column: 42, scope: !7629)
!7640 = !DILocation(line: 2543, column: 6, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 2543, column: 6)
!7642 = !DILocation(line: 2543, column: 6, scope: !7629)
!7643 = !DILocation(line: 2544, column: 13, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 2543, column: 19)
!7645 = !DILocation(line: 2544, column: 22, scope: !7644)
!7646 = !DILocation(line: 2544, column: 37, scope: !7644)
!7647 = !DILocation(line: 2544, column: 3, scope: !7644)
!7648 = !DILocation(line: 2545, column: 13, scope: !7644)
!7649 = !DILocation(line: 2545, column: 22, scope: !7644)
!7650 = !DILocation(line: 2545, column: 37, scope: !7644)
!7651 = !DILocation(line: 2545, column: 3, scope: !7644)
!7652 = !DILocation(line: 2546, column: 13, scope: !7644)
!7653 = !DILocation(line: 2546, column: 22, scope: !7644)
!7654 = !DILocation(line: 2546, column: 37, scope: !7644)
!7655 = !DILocation(line: 2546, column: 3, scope: !7644)
!7656 = !DILocation(line: 2547, column: 10, scope: !7644)
!7657 = !DILocation(line: 2548, column: 10, scope: !7644)
!7658 = !DILocation(line: 2548, column: 19, scope: !7644)
!7659 = !DILocation(line: 2548, column: 34, scope: !7644)
!7660 = !DILocation(line: 2547, column: 3, scope: !7644)
!7661 = !DILocation(line: 2549, column: 2, scope: !7644)
!7662 = !DILocation(line: 2550, column: 13, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 2549, column: 9)
!7664 = !DILocation(line: 2550, column: 22, scope: !7663)
!7665 = !DILocation(line: 2550, column: 37, scope: !7663)
!7666 = !DILocation(line: 2550, column: 3, scope: !7663)
!7667 = !DILocation(line: 2551, column: 13, scope: !7663)
!7668 = !DILocation(line: 2551, column: 22, scope: !7663)
!7669 = !DILocation(line: 2551, column: 37, scope: !7663)
!7670 = !DILocation(line: 2551, column: 3, scope: !7663)
!7671 = !DILocation(line: 2552, column: 13, scope: !7663)
!7672 = !DILocation(line: 2552, column: 22, scope: !7663)
!7673 = !DILocation(line: 2552, column: 37, scope: !7663)
!7674 = !DILocation(line: 2552, column: 3, scope: !7663)
!7675 = !DILocation(line: 2553, column: 10, scope: !7663)
!7676 = !DILocation(line: 2554, column: 10, scope: !7663)
!7677 = !DILocation(line: 2554, column: 19, scope: !7663)
!7678 = !DILocation(line: 2554, column: 34, scope: !7663)
!7679 = !DILocation(line: 2553, column: 3, scope: !7663)
!7680 = !DILocation(line: 2556, column: 1, scope: !7629)
!7681 = distinct !DISubprogram(name: "dma_start_sync", scope: !3, file: !3, line: 2356, type: !6185, scopeLine: 2358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7682 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !7683)
!7683 = distinct !DILocation(line: 2366, column: 2, scope: !7681)
!7684 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !7683)
!7685 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !7686)
!7686 = distinct !DILocation(line: 2363, column: 2, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 2363, column: 2)
!7688 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 2363, column: 2)
!7689 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 2363, column: 2)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 2363, column: 2)
!7691 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 2363, column: 2)
!7692 = !DILocalVariable(name: "dev", arg: 1, scope: !7681, file: !3, line: 2356, type: !324)
!7693 = !DILocation(line: 2356, column: 57, scope: !7681)
!7694 = !DILocalVariable(name: "channel", arg: 2, scope: !7681, file: !3, line: 2357, type: !7)
!7695 = !DILocation(line: 2357, column: 20, scope: !7681)
!7696 = !DILocalVariable(name: "devpriv", scope: !7681, file: !3, line: 2359, type: !4645)
!7697 = !DILocation(line: 2359, column: 27, scope: !7681)
!7698 = !DILocation(line: 2359, column: 37, scope: !7681)
!7699 = !DILocation(line: 2359, column: 42, scope: !7681)
!7700 = !DILocalVariable(name: "flags", scope: !7681, file: !3, line: 2360, type: !364)
!7701 = !DILocation(line: 2360, column: 16, scope: !7681)
!7702 = !DILocation(line: 2363, column: 2, scope: !7681)
!7703 = !DILocation(line: 2363, column: 2, scope: !7691)
!7704 = !DILocalVariable(name: "__dummy", scope: !7705, file: !3, line: 2363, type: !364)
!7705 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 2363, column: 2)
!7706 = !DILocation(line: 2363, column: 2, scope: !7705)
!7707 = !DILocalVariable(name: "__dummy2", scope: !7705, file: !3, line: 2363, type: !364)
!7708 = !DILocation(line: 2363, column: 2, scope: !7690)
!7709 = !DILocation(line: 2363, column: 2, scope: !7689)
!7710 = !DILocation(line: 2363, column: 2, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 2363, column: 2)
!7712 = !DILocalVariable(name: "__dummy", scope: !7713, file: !3, line: 2363, type: !364)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 2363, column: 2)
!7714 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 2363, column: 2)
!7715 = !DILocation(line: 2363, column: 2, scope: !7713)
!7716 = !DILocalVariable(name: "__dummy2", scope: !7713, file: !3, line: 2363, type: !364)
!7717 = !DILocation(line: 2363, column: 2, scope: !7714)
!7718 = !DILocation(line: 2363, column: 2, scope: !7688)
!7719 = !{i32 -2141481975}
!7720 = !DILocation(line: 2363, column: 2, scope: !7687)
!7721 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !7686)
!7722 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !7686)
!7723 = !DILocation(line: 2365, column: 9, scope: !7681)
!7724 = !DILocation(line: 2365, column: 18, scope: !7681)
!7725 = !DILocation(line: 2365, column: 35, scope: !7681)
!7726 = !DILocation(line: 2365, column: 33, scope: !7681)
!7727 = !DILocation(line: 2364, column: 2, scope: !7681)
!7728 = !DILocation(line: 2366, column: 26, scope: !7681)
!7729 = !DILocation(line: 2366, column: 31, scope: !7681)
!7730 = !DILocation(line: 2366, column: 41, scope: !7681)
!7731 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !7683)
!7732 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !7683)
!7733 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !7683)
!7734 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !7683)
!7735 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !7683)
!7736 = !DILocation(line: 2367, column: 1, scope: !7681)
!7737 = distinct !DISubprogram(name: "ai_rinsn", scope: !3, file: !3, line: 1752, type: !4092, scopeLine: 1754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!7738 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !7739)
!7739 = distinct !DILocation(line: 1777, column: 2, scope: !7737)
!7740 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !7739)
!7741 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !7742)
!7742 = distinct !DILocation(line: 1770, column: 2, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 1770, column: 2)
!7744 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 1770, column: 2)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 1770, column: 2)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 1770, column: 2)
!7747 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 1770, column: 2)
!7748 = !DILocalVariable(name: "dev", arg: 1, scope: !7737, file: !3, line: 1752, type: !324)
!7749 = !DILocation(line: 1752, column: 43, scope: !7737)
!7750 = !DILocalVariable(name: "s", arg: 2, scope: !7737, file: !3, line: 1752, type: !3995)
!7751 = !DILocation(line: 1752, column: 73, scope: !7737)
!7752 = !DILocalVariable(name: "insn", arg: 3, scope: !7737, file: !3, line: 1753, type: !4094)
!7753 = !DILocation(line: 1753, column: 27, scope: !7737)
!7754 = !DILocalVariable(name: "data", arg: 4, scope: !7737, file: !3, line: 1753, type: !2847)
!7755 = !DILocation(line: 1753, column: 47, scope: !7737)
!7756 = !DILocalVariable(name: "board", scope: !7737, file: !3, line: 1755, type: !4755)
!7757 = !DILocation(line: 1755, column: 31, scope: !7737)
!7758 = !DILocation(line: 1755, column: 39, scope: !7737)
!7759 = !DILocation(line: 1755, column: 44, scope: !7737)
!7760 = !DILocalVariable(name: "devpriv", scope: !7737, file: !3, line: 1756, type: !4645)
!7761 = !DILocation(line: 1756, column: 27, scope: !7737)
!7762 = !DILocation(line: 1756, column: 37, scope: !7737)
!7763 = !DILocation(line: 1756, column: 42, scope: !7737)
!7764 = !DILocalVariable(name: "bits", scope: !7737, file: !3, line: 1757, type: !7)
!7765 = !DILocation(line: 1757, column: 15, scope: !7737)
!7766 = !DILocalVariable(name: "n", scope: !7737, file: !3, line: 1757, type: !7)
!7767 = !DILocation(line: 1757, column: 25, scope: !7737)
!7768 = !DILocalVariable(name: "channel", scope: !7737, file: !3, line: 1758, type: !7)
!7769 = !DILocation(line: 1758, column: 15, scope: !7737)
!7770 = !DILocalVariable(name: "range", scope: !7737, file: !3, line: 1758, type: !7)
!7771 = !DILocation(line: 1758, column: 24, scope: !7737)
!7772 = !DILocalVariable(name: "aref", scope: !7737, file: !3, line: 1758, type: !7)
!7773 = !DILocation(line: 1758, column: 31, scope: !7737)
!7774 = !DILocalVariable(name: "flags", scope: !7737, file: !3, line: 1759, type: !364)
!7775 = !DILocation(line: 1759, column: 16, scope: !7737)
!7776 = !DILocalVariable(name: "ret", scope: !7737, file: !3, line: 1760, type: !323)
!7777 = !DILocation(line: 1760, column: 6, scope: !7737)
!7778 = !DILocation(line: 1762, column: 12, scope: !7737)
!7779 = !DILocation(line: 1762, column: 10, scope: !7737)
!7780 = !DILocation(line: 1763, column: 10, scope: !7737)
!7781 = !DILocation(line: 1763, column: 8, scope: !7737)
!7782 = !DILocation(line: 1764, column: 9, scope: !7737)
!7783 = !DILocation(line: 1764, column: 7, scope: !7737)
!7784 = !DILocation(line: 1768, column: 20, scope: !7737)
!7785 = !DILocation(line: 1768, column: 2, scope: !7737)
!7786 = !DILocation(line: 1770, column: 2, scope: !7737)
!7787 = !DILocation(line: 1770, column: 2, scope: !7747)
!7788 = !DILocalVariable(name: "__dummy", scope: !7789, file: !3, line: 1770, type: !364)
!7789 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 1770, column: 2)
!7790 = !DILocation(line: 1770, column: 2, scope: !7789)
!7791 = !DILocalVariable(name: "__dummy2", scope: !7789, file: !3, line: 1770, type: !364)
!7792 = !DILocation(line: 1770, column: 2, scope: !7746)
!7793 = !DILocation(line: 1770, column: 2, scope: !7745)
!7794 = !DILocation(line: 1770, column: 2, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 1770, column: 2)
!7796 = !DILocalVariable(name: "__dummy", scope: !7797, file: !3, line: 1770, type: !364)
!7797 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 1770, column: 2)
!7798 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 1770, column: 2)
!7799 = !DILocation(line: 1770, column: 2, scope: !7797)
!7800 = !DILocalVariable(name: "__dummy2", scope: !7797, file: !3, line: 1770, type: !364)
!7801 = !DILocation(line: 1770, column: 2, scope: !7798)
!7802 = !DILocation(line: 1770, column: 2, scope: !7744)
!7803 = !{i32 -2141485641}
!7804 = !DILocation(line: 1770, column: 2, scope: !7743)
!7805 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !7742)
!7806 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !7742)
!7807 = !DILocation(line: 1771, column: 6, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 1771, column: 6)
!7809 = !DILocation(line: 1771, column: 12, scope: !7808)
!7810 = !DILocation(line: 1771, column: 21, scope: !7808)
!7811 = !DILocation(line: 1771, column: 6, scope: !7737)
!7812 = !DILocation(line: 1772, column: 3, scope: !7808)
!7813 = !DILocation(line: 1772, column: 12, scope: !7808)
!7814 = !DILocation(line: 1772, column: 30, scope: !7808)
!7815 = !DILocation(line: 1774, column: 3, scope: !7808)
!7816 = !DILocation(line: 1774, column: 12, scope: !7808)
!7817 = !DILocation(line: 1774, column: 30, scope: !7808)
!7818 = !DILocation(line: 1775, column: 9, scope: !7737)
!7819 = !DILocation(line: 1775, column: 18, scope: !7737)
!7820 = !DILocation(line: 1776, column: 9, scope: !7737)
!7821 = !DILocation(line: 1776, column: 18, scope: !7737)
!7822 = !DILocation(line: 1776, column: 30, scope: !7737)
!7823 = !DILocation(line: 1775, column: 2, scope: !7737)
!7824 = !DILocation(line: 1777, column: 26, scope: !7737)
!7825 = !DILocation(line: 1777, column: 31, scope: !7737)
!7826 = !DILocation(line: 1777, column: 41, scope: !7737)
!7827 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !7739)
!7828 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !7739)
!7829 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !7739)
!7830 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !7739)
!7831 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !7739)
!7832 = !DILocation(line: 1779, column: 6, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 1779, column: 6)
!7834 = !DILocation(line: 1779, column: 13, scope: !7833)
!7835 = !DILocation(line: 1779, column: 20, scope: !7833)
!7836 = !DILocation(line: 1779, column: 6, scope: !7737)
!7837 = !DILocation(line: 1781, column: 3, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7833, file: !3, line: 1779, column: 36)
!7839 = !DILocation(line: 1781, column: 12, scope: !7838)
!7840 = !DILocation(line: 1781, column: 27, scope: !7838)
!7841 = !DILocation(line: 1782, column: 10, scope: !7838)
!7842 = !DILocation(line: 1782, column: 19, scope: !7838)
!7843 = !DILocation(line: 1783, column: 10, scope: !7838)
!7844 = !DILocation(line: 1783, column: 19, scope: !7838)
!7845 = !DILocation(line: 1783, column: 31, scope: !7838)
!7846 = !DILocation(line: 1782, column: 3, scope: !7838)
!7847 = !DILocation(line: 1786, column: 7, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 1786, column: 7)
!7849 = !DILocation(line: 1786, column: 13, scope: !7848)
!7850 = !DILocation(line: 1786, column: 22, scope: !7848)
!7851 = !DILocation(line: 1786, column: 7, scope: !7838)
!7852 = !DILocalVariable(name: "cal_en_bit", scope: !7853, file: !3, line: 1787, type: !7)
!7853 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 1786, column: 39)
!7854 = !DILocation(line: 1787, column: 17, scope: !7853)
!7855 = !DILocation(line: 1789, column: 8, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 1789, column: 8)
!7857 = !DILocation(line: 1789, column: 15, scope: !7856)
!7858 = !DILocation(line: 1789, column: 22, scope: !7856)
!7859 = !DILocation(line: 1789, column: 8, scope: !7853)
!7860 = !DILocation(line: 1790, column: 16, scope: !7856)
!7861 = !DILocation(line: 1790, column: 5, scope: !7856)
!7862 = !DILocation(line: 1792, column: 16, scope: !7856)
!7863 = !DILocation(line: 1797, column: 11, scope: !7853)
!7864 = !DILocation(line: 1798, column: 24, scope: !7853)
!7865 = !DILocation(line: 1798, column: 33, scope: !7853)
!7866 = !DILocation(line: 1798, column: 11, scope: !7853)
!7867 = !DILocation(line: 1797, column: 22, scope: !7853)
!7868 = !DILocation(line: 1799, column: 11, scope: !7853)
!7869 = !DILocation(line: 1799, column: 20, scope: !7853)
!7870 = !DILocation(line: 1799, column: 32, scope: !7853)
!7871 = !DILocation(line: 1797, column: 4, scope: !7853)
!7872 = !DILocation(line: 1800, column: 3, scope: !7853)
!7873 = !DILocation(line: 1805, column: 14, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 1800, column: 10)
!7875 = !DILocation(line: 1805, column: 23, scope: !7874)
!7876 = !DILocation(line: 1805, column: 35, scope: !7874)
!7877 = !DILocation(line: 1805, column: 4, scope: !7874)
!7878 = !DILocation(line: 1808, column: 8, scope: !7838)
!7879 = !DILocation(line: 1810, column: 30, scope: !7838)
!7880 = !DILocation(line: 1810, column: 35, scope: !7838)
!7881 = !DILocation(line: 1810, column: 11, scope: !7838)
!7882 = !DILocation(line: 1810, column: 8, scope: !7838)
!7883 = !DILocation(line: 1812, column: 28, scope: !7838)
!7884 = !DILocation(line: 1812, column: 33, scope: !7838)
!7885 = !DILocation(line: 1812, column: 38, scope: !7838)
!7886 = !DILocation(line: 1812, column: 11, scope: !7838)
!7887 = !DILocation(line: 1812, column: 8, scope: !7838)
!7888 = !DILocation(line: 1813, column: 7, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 1813, column: 7)
!7890 = !DILocation(line: 1813, column: 12, scope: !7889)
!7891 = !DILocation(line: 1813, column: 7, scope: !7838)
!7892 = !DILocation(line: 1814, column: 9, scope: !7889)
!7893 = !DILocation(line: 1814, column: 4, scope: !7889)
!7894 = !DILocation(line: 1815, column: 25, scope: !7838)
!7895 = !DILocation(line: 1815, column: 11, scope: !7838)
!7896 = !DILocation(line: 1815, column: 8, scope: !7838)
!7897 = !DILocation(line: 1817, column: 24, scope: !7838)
!7898 = !DILocation(line: 1817, column: 10, scope: !7838)
!7899 = !DILocation(line: 1818, column: 10, scope: !7838)
!7900 = !DILocation(line: 1818, column: 19, scope: !7838)
!7901 = !DILocation(line: 1818, column: 31, scope: !7838)
!7902 = !DILocation(line: 1817, column: 3, scope: !7838)
!7903 = !DILocation(line: 1820, column: 10, scope: !7838)
!7904 = !DILocation(line: 1820, column: 16, scope: !7838)
!7905 = !DILocation(line: 1820, column: 25, scope: !7838)
!7906 = !DILocation(line: 1820, column: 37, scope: !7838)
!7907 = !DILocation(line: 1820, column: 3, scope: !7838)
!7908 = !DILocation(line: 1821, column: 2, scope: !7838)
!7909 = !DILocalVariable(name: "old_cal_range_bits", scope: !7910, file: !3, line: 1822, type: !1518)
!7910 = distinct !DILexicalBlock(scope: !7833, file: !3, line: 1821, column: 9)
!7911 = !DILocation(line: 1822, column: 6, scope: !7910)
!7912 = !DILocation(line: 1822, column: 27, scope: !7910)
!7913 = !DILocation(line: 1822, column: 36, scope: !7910)
!7914 = !DILocation(line: 1824, column: 3, scope: !7910)
!7915 = !DILocation(line: 1824, column: 12, scope: !7910)
!7916 = !DILocation(line: 1824, column: 31, scope: !7910)
!7917 = !DILocation(line: 1825, column: 7, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 1825, column: 7)
!7919 = !DILocation(line: 1825, column: 13, scope: !7918)
!7920 = !DILocation(line: 1825, column: 22, scope: !7918)
!7921 = !DILocation(line: 1825, column: 7, scope: !7910)
!7922 = !DILocation(line: 1827, column: 23, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 1825, column: 39)
!7924 = !DILocation(line: 1827, column: 32, scope: !7923)
!7925 = !DILocation(line: 1827, column: 5, scope: !7923)
!7926 = !DILocation(line: 1826, column: 4, scope: !7923)
!7927 = !DILocation(line: 1826, column: 13, scope: !7923)
!7928 = !DILocation(line: 1826, column: 32, scope: !7923)
!7929 = !DILocation(line: 1828, column: 3, scope: !7923)
!7930 = !DILocation(line: 1829, column: 35, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 1828, column: 10)
!7932 = !DILocation(line: 1829, column: 4, scope: !7931)
!7933 = !DILocation(line: 1829, column: 13, scope: !7931)
!7934 = !DILocation(line: 1829, column: 32, scope: !7931)
!7935 = !DILocation(line: 1832, column: 7, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 1832, column: 7)
!7937 = !DILocation(line: 1832, column: 13, scope: !7936)
!7938 = !DILocation(line: 1832, column: 7, scope: !7910)
!7939 = !DILocation(line: 1833, column: 49, scope: !7936)
!7940 = !DILocation(line: 1833, column: 35, scope: !7936)
!7941 = !DILocation(line: 1833, column: 4, scope: !7936)
!7942 = !DILocation(line: 1833, column: 13, scope: !7936)
!7943 = !DILocation(line: 1833, column: 32, scope: !7936)
!7944 = !DILocation(line: 1835, column: 50, scope: !7936)
!7945 = !DILocation(line: 1835, column: 36, scope: !7936)
!7946 = !DILocation(line: 1835, column: 35, scope: !7936)
!7947 = !DILocation(line: 1835, column: 4, scope: !7936)
!7948 = !DILocation(line: 1835, column: 13, scope: !7936)
!7949 = !DILocation(line: 1835, column: 32, scope: !7936)
!7950 = !DILocation(line: 1840, column: 7, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 1840, column: 7)
!7952 = !DILocation(line: 1840, column: 29, scope: !7951)
!7953 = !DILocation(line: 1840, column: 38, scope: !7951)
!7954 = !DILocation(line: 1840, column: 26, scope: !7951)
!7955 = !DILocation(line: 1840, column: 7, scope: !7910)
!7956 = !DILocalVariable(name: "i2c_data", scope: !7957, file: !3, line: 1841, type: !1518)
!7957 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 1840, column: 58)
!7958 = !DILocation(line: 1841, column: 7, scope: !7957)
!7959 = !DILocation(line: 1841, column: 18, scope: !7957)
!7960 = !DILocation(line: 1841, column: 27, scope: !7957)
!7961 = !DILocation(line: 1843, column: 14, scope: !7957)
!7962 = !DILocation(line: 1843, column: 4, scope: !7957)
!7963 = !DILocation(line: 1845, column: 3, scope: !7957)
!7964 = !DILocation(line: 1853, column: 13, scope: !7910)
!7965 = !DILocation(line: 1853, column: 22, scope: !7910)
!7966 = !DILocation(line: 1853, column: 34, scope: !7910)
!7967 = !DILocation(line: 1853, column: 3, scope: !7910)
!7968 = !DILocation(line: 1854, column: 13, scope: !7910)
!7969 = !DILocation(line: 1854, column: 22, scope: !7910)
!7970 = !DILocation(line: 1854, column: 34, scope: !7910)
!7971 = !DILocation(line: 1854, column: 3, scope: !7910)
!7972 = !DILocation(line: 1857, column: 9, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 1857, column: 2)
!7974 = !DILocation(line: 1857, column: 7, scope: !7973)
!7975 = !DILocation(line: 1857, column: 14, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7973, file: !3, line: 1857, column: 2)
!7977 = !DILocation(line: 1857, column: 18, scope: !7976)
!7978 = !DILocation(line: 1857, column: 24, scope: !7976)
!7979 = !DILocation(line: 1857, column: 16, scope: !7976)
!7980 = !DILocation(line: 1857, column: 2, scope: !7973)
!7981 = !DILocation(line: 1859, column: 13, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 1857, column: 32)
!7983 = !DILocation(line: 1859, column: 22, scope: !7982)
!7984 = !DILocation(line: 1859, column: 34, scope: !7982)
!7985 = !DILocation(line: 1859, column: 3, scope: !7982)
!7986 = !DILocation(line: 1862, column: 37, scope: !7982)
!7987 = !DILocation(line: 1862, column: 10, scope: !7982)
!7988 = !DILocation(line: 1863, column: 10, scope: !7982)
!7989 = !DILocation(line: 1863, column: 19, scope: !7982)
!7990 = !DILocation(line: 1863, column: 31, scope: !7982)
!7991 = !DILocation(line: 1862, column: 3, scope: !7982)
!7992 = !DILocation(line: 1866, column: 24, scope: !7982)
!7993 = !DILocation(line: 1866, column: 29, scope: !7982)
!7994 = !DILocation(line: 1866, column: 32, scope: !7982)
!7995 = !DILocation(line: 1866, column: 9, scope: !7982)
!7996 = !DILocation(line: 1866, column: 7, scope: !7982)
!7997 = !DILocation(line: 1867, column: 7, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 1867, column: 7)
!7999 = !DILocation(line: 1867, column: 7, scope: !7982)
!8000 = !DILocation(line: 1868, column: 11, scope: !7998)
!8001 = !DILocation(line: 1868, column: 4, scope: !7998)
!8002 = !DILocation(line: 1870, column: 7, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 1870, column: 7)
!8004 = !DILocation(line: 1870, column: 14, scope: !8003)
!8005 = !DILocation(line: 1870, column: 21, scope: !8003)
!8006 = !DILocation(line: 1870, column: 7, scope: !7982)
!8007 = !DILocation(line: 1871, column: 20, scope: !8003)
!8008 = !DILocation(line: 1871, column: 25, scope: !8003)
!8009 = !DILocation(line: 1871, column: 30, scope: !8003)
!8010 = !DILocation(line: 1871, column: 14, scope: !8003)
!8011 = !DILocation(line: 1871, column: 46, scope: !8003)
!8012 = !DILocation(line: 1871, column: 4, scope: !8003)
!8013 = !DILocation(line: 1871, column: 9, scope: !8003)
!8014 = !DILocation(line: 1871, column: 12, scope: !8003)
!8015 = !DILocation(line: 1873, column: 20, scope: !8003)
!8016 = !DILocation(line: 1873, column: 29, scope: !8003)
!8017 = !DILocation(line: 1873, column: 41, scope: !8003)
!8018 = !DILocation(line: 1873, column: 14, scope: !8003)
!8019 = !DILocation(line: 1873, column: 4, scope: !8003)
!8020 = !DILocation(line: 1873, column: 9, scope: !8003)
!8021 = !DILocation(line: 1873, column: 12, scope: !8003)
!8022 = !DILocation(line: 1874, column: 2, scope: !7982)
!8023 = !DILocation(line: 1857, column: 28, scope: !7976)
!8024 = !DILocation(line: 1857, column: 2, scope: !7976)
!8025 = distinct !{!8025, !7980, !8026}
!8026 = !DILocation(line: 1874, column: 2, scope: !7973)
!8027 = !DILocation(line: 1876, column: 9, scope: !7737)
!8028 = !DILocation(line: 1876, column: 2, scope: !7737)
!8029 = !DILocation(line: 1877, column: 1, scope: !7737)
!8030 = distinct !DISubprogram(name: "ai_config_insn", scope: !3, file: !3, line: 1969, type: !4092, scopeLine: 1971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!8031 = !DILocalVariable(name: "dev", arg: 1, scope: !8030, file: !3, line: 1969, type: !324)
!8032 = !DILocation(line: 1969, column: 49, scope: !8030)
!8033 = !DILocalVariable(name: "s", arg: 2, scope: !8030, file: !3, line: 1969, type: !3995)
!8034 = !DILocation(line: 1969, column: 79, scope: !8030)
!8035 = !DILocalVariable(name: "insn", arg: 3, scope: !8030, file: !3, line: 1970, type: !4094)
!8036 = !DILocation(line: 1970, column: 26, scope: !8030)
!8037 = !DILocalVariable(name: "data", arg: 4, scope: !8030, file: !3, line: 1970, type: !2847)
!8038 = !DILocation(line: 1970, column: 46, scope: !8030)
!8039 = !DILocalVariable(name: "id", scope: !8030, file: !3, line: 1972, type: !323)
!8040 = !DILocation(line: 1972, column: 6, scope: !8030)
!8041 = !DILocation(line: 1972, column: 11, scope: !8030)
!8042 = !DILocation(line: 1974, column: 10, scope: !8030)
!8043 = !DILocation(line: 1974, column: 2, scope: !8030)
!8044 = !DILocation(line: 1976, column: 39, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 1974, column: 14)
!8046 = !DILocation(line: 1976, column: 44, scope: !8045)
!8047 = !DILocation(line: 1976, column: 10, scope: !8045)
!8048 = !DILocation(line: 1976, column: 3, scope: !8045)
!8049 = !DILocation(line: 1978, column: 31, scope: !8045)
!8050 = !DILocation(line: 1978, column: 36, scope: !8045)
!8051 = !DILocation(line: 1978, column: 10, scope: !8045)
!8052 = !DILocation(line: 1978, column: 3, scope: !8045)
!8053 = !DILocation(line: 1980, column: 33, scope: !8045)
!8054 = !DILocation(line: 1980, column: 38, scope: !8045)
!8055 = !DILocation(line: 1980, column: 10, scope: !8045)
!8056 = !DILocation(line: 1980, column: 3, scope: !8045)
!8057 = !DILocation(line: 1982, column: 3, scope: !8045)
!8058 = !DILocation(line: 1985, column: 1, scope: !8030)
!8059 = distinct !DISubprogram(name: "ai_cmd", scope: !3, file: !3, line: 2558, type: !4109, scopeLine: 2559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!8060 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !8061)
!8061 = distinct !DILocation(line: 2668, column: 2, scope: !8059)
!8062 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !8061)
!8063 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !8064)
!8064 = distinct !DILocation(line: 2648, column: 2, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 2648, column: 2)
!8066 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 2648, column: 2)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2648, column: 2)
!8068 = distinct !DILexicalBlock(scope: !8069, file: !3, line: 2648, column: 2)
!8069 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2648, column: 2)
!8070 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !8071)
!8071 = distinct !DILocation(line: 2613, column: 2, scope: !8059)
!8072 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !8071)
!8073 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !8074)
!8074 = distinct !DILocation(line: 2585, column: 2, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 2585, column: 2)
!8076 = distinct !DILexicalBlock(scope: !8077, file: !3, line: 2585, column: 2)
!8077 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 2585, column: 2)
!8078 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 2585, column: 2)
!8079 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2585, column: 2)
!8080 = !DILocalVariable(name: "dev", arg: 1, scope: !8059, file: !3, line: 2558, type: !324)
!8081 = !DILocation(line: 2558, column: 41, scope: !8059)
!8082 = !DILocalVariable(name: "s", arg: 2, scope: !8059, file: !3, line: 2558, type: !3995)
!8083 = !DILocation(line: 2558, column: 71, scope: !8059)
!8084 = !DILocalVariable(name: "board", scope: !8059, file: !3, line: 2560, type: !4755)
!8085 = !DILocation(line: 2560, column: 31, scope: !8059)
!8086 = !DILocation(line: 2560, column: 39, scope: !8059)
!8087 = !DILocation(line: 2560, column: 44, scope: !8059)
!8088 = !DILocalVariable(name: "devpriv", scope: !8059, file: !3, line: 2561, type: !4645)
!8089 = !DILocation(line: 2561, column: 27, scope: !8059)
!8090 = !DILocation(line: 2561, column: 37, scope: !8059)
!8091 = !DILocation(line: 2561, column: 42, scope: !8059)
!8092 = !DILocalVariable(name: "async", scope: !8059, file: !3, line: 2562, type: !4006)
!8093 = !DILocation(line: 2562, column: 23, scope: !8059)
!8094 = !DILocation(line: 2562, column: 31, scope: !8059)
!8095 = !DILocation(line: 2562, column: 34, scope: !8059)
!8096 = !DILocalVariable(name: "cmd", scope: !8059, file: !3, line: 2563, type: !4115)
!8097 = !DILocation(line: 2563, column: 21, scope: !8059)
!8098 = !DILocation(line: 2563, column: 28, scope: !8059)
!8099 = !DILocation(line: 2563, column: 35, scope: !8059)
!8100 = !DILocalVariable(name: "bits", scope: !8059, file: !3, line: 2564, type: !580)
!8101 = !DILocation(line: 2564, column: 6, scope: !8059)
!8102 = !DILocalVariable(name: "i", scope: !8059, file: !3, line: 2565, type: !7)
!8103 = !DILocation(line: 2565, column: 15, scope: !8059)
!8104 = !DILocalVariable(name: "flags", scope: !8059, file: !3, line: 2566, type: !364)
!8105 = !DILocation(line: 2566, column: 16, scope: !8059)
!8106 = !DILocalVariable(name: "retval", scope: !8059, file: !3, line: 2567, type: !323)
!8107 = !DILocation(line: 2567, column: 6, scope: !8059)
!8108 = !DILocation(line: 2569, column: 20, scope: !8059)
!8109 = !DILocation(line: 2569, column: 2, scope: !8059)
!8110 = !DILocation(line: 2570, column: 12, scope: !8059)
!8111 = !DILocation(line: 2570, column: 2, scope: !8059)
!8112 = !DILocation(line: 2572, column: 31, scope: !8059)
!8113 = !DILocation(line: 2572, column: 36, scope: !8059)
!8114 = !DILocation(line: 2572, column: 11, scope: !8059)
!8115 = !DILocation(line: 2572, column: 9, scope: !8059)
!8116 = !DILocation(line: 2573, column: 6, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2573, column: 6)
!8118 = !DILocation(line: 2573, column: 13, scope: !8117)
!8119 = !DILocation(line: 2573, column: 6, scope: !8059)
!8120 = !DILocation(line: 2574, column: 10, scope: !8117)
!8121 = !DILocation(line: 2574, column: 3, scope: !8117)
!8122 = !DILocation(line: 2577, column: 12, scope: !8059)
!8123 = !DILocation(line: 2577, column: 21, scope: !8059)
!8124 = !DILocation(line: 2577, column: 33, scope: !8059)
!8125 = !DILocation(line: 2577, column: 2, scope: !8059)
!8126 = !DILocation(line: 2579, column: 16, scope: !8059)
!8127 = !DILocation(line: 2579, column: 21, scope: !8059)
!8128 = !DILocation(line: 2579, column: 2, scope: !8059)
!8129 = !DILocation(line: 2581, column: 24, scope: !8059)
!8130 = !DILocation(line: 2581, column: 29, scope: !8059)
!8131 = !DILocation(line: 2581, column: 2, scope: !8059)
!8132 = !DILocation(line: 2583, column: 23, scope: !8059)
!8133 = !DILocation(line: 2583, column: 28, scope: !8059)
!8134 = !DILocation(line: 2583, column: 2, scope: !8059)
!8135 = !DILocation(line: 2585, column: 2, scope: !8059)
!8136 = !DILocation(line: 2585, column: 2, scope: !8079)
!8137 = !DILocalVariable(name: "__dummy", scope: !8138, file: !3, line: 2585, type: !364)
!8138 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 2585, column: 2)
!8139 = !DILocation(line: 2585, column: 2, scope: !8138)
!8140 = !DILocalVariable(name: "__dummy2", scope: !8138, file: !3, line: 2585, type: !364)
!8141 = !DILocation(line: 2585, column: 2, scope: !8078)
!8142 = !DILocation(line: 2585, column: 2, scope: !8077)
!8143 = !DILocation(line: 2585, column: 2, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8077, file: !3, line: 2585, column: 2)
!8145 = !DILocalVariable(name: "__dummy", scope: !8146, file: !3, line: 2585, type: !364)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2585, column: 2)
!8147 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 2585, column: 2)
!8148 = !DILocation(line: 2585, column: 2, scope: !8146)
!8149 = !DILocalVariable(name: "__dummy2", scope: !8146, file: !3, line: 2585, type: !364)
!8150 = !DILocation(line: 2585, column: 2, scope: !8147)
!8151 = !DILocation(line: 2585, column: 2, scope: !8076)
!8152 = !{i32 -2141479602}
!8153 = !DILocation(line: 2585, column: 2, scope: !8075)
!8154 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !8074)
!8155 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !8074)
!8156 = !DILocation(line: 2587, column: 2, scope: !8059)
!8157 = !DILocation(line: 2587, column: 11, scope: !8059)
!8158 = !DILocation(line: 2587, column: 29, scope: !8059)
!8159 = !DILocation(line: 2588, column: 2, scope: !8059)
!8160 = !DILocation(line: 2588, column: 11, scope: !8059)
!8161 = !DILocation(line: 2588, column: 29, scope: !8059)
!8162 = !DILocation(line: 2589, column: 6, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2589, column: 6)
!8164 = !DILocation(line: 2589, column: 13, scope: !8163)
!8165 = !DILocation(line: 2589, column: 20, scope: !8163)
!8166 = !DILocation(line: 2589, column: 6, scope: !8059)
!8167 = !DILocation(line: 2590, column: 3, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 2589, column: 36)
!8169 = !DILocation(line: 2590, column: 12, scope: !8168)
!8170 = !DILocation(line: 2590, column: 30, scope: !8168)
!8171 = !DILocation(line: 2591, column: 7, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 2591, column: 7)
!8173 = !DILocation(line: 2591, column: 12, scope: !8172)
!8174 = !DILocation(line: 2591, column: 24, scope: !8172)
!8175 = !DILocation(line: 2591, column: 7, scope: !8168)
!8176 = !DILocation(line: 2593, column: 34, scope: !8172)
!8177 = !DILocation(line: 2593, column: 4, scope: !8172)
!8178 = !DILocation(line: 2593, column: 13, scope: !8172)
!8179 = !DILocation(line: 2593, column: 31, scope: !8172)
!8180 = !DILocation(line: 2596, column: 34, scope: !8172)
!8181 = !DILocation(line: 2596, column: 4, scope: !8172)
!8182 = !DILocation(line: 2596, column: 13, scope: !8172)
!8183 = !DILocation(line: 2596, column: 31, scope: !8172)
!8184 = !DILocation(line: 2597, column: 2, scope: !8168)
!8185 = !DILocation(line: 2598, column: 3, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 2597, column: 9)
!8187 = !DILocation(line: 2598, column: 12, scope: !8186)
!8188 = !DILocation(line: 2598, column: 30, scope: !8186)
!8189 = !DILocation(line: 2599, column: 7, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8186, file: !3, line: 2599, column: 7)
!8191 = !DILocation(line: 2599, column: 12, scope: !8190)
!8192 = !DILocation(line: 2599, column: 25, scope: !8190)
!8193 = !DILocation(line: 2599, column: 7, scope: !8186)
!8194 = !DILocation(line: 2600, column: 4, scope: !8190)
!8195 = !DILocation(line: 2600, column: 13, scope: !8190)
!8196 = !DILocation(line: 2600, column: 31, scope: !8190)
!8197 = !DILocation(line: 2601, column: 12, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 2601, column: 12)
!8199 = !DILocation(line: 2601, column: 17, scope: !8198)
!8200 = !DILocation(line: 2601, column: 30, scope: !8198)
!8201 = !DILocation(line: 2601, column: 12, scope: !8190)
!8202 = !DILocation(line: 2602, column: 4, scope: !8198)
!8203 = !DILocation(line: 2602, column: 13, scope: !8198)
!8204 = !DILocation(line: 2602, column: 31, scope: !8198)
!8205 = !DILocation(line: 2603, column: 3, scope: !8186)
!8206 = !DILocation(line: 2603, column: 12, scope: !8186)
!8207 = !DILocation(line: 2603, column: 30, scope: !8186)
!8208 = !DILocation(line: 2605, column: 26, scope: !8186)
!8209 = !DILocation(line: 2605, column: 4, scope: !8186)
!8210 = !DILocation(line: 2604, column: 3, scope: !8186)
!8211 = !DILocation(line: 2604, column: 12, scope: !8186)
!8212 = !DILocation(line: 2604, column: 30, scope: !8186)
!8213 = !DILocation(line: 2606, column: 3, scope: !8186)
!8214 = !DILocation(line: 2606, column: 12, scope: !8186)
!8215 = !DILocation(line: 2606, column: 30, scope: !8186)
!8216 = !DILocation(line: 2608, column: 26, scope: !8186)
!8217 = !DILocation(line: 2608, column: 4, scope: !8186)
!8218 = !DILocation(line: 2607, column: 3, scope: !8186)
!8219 = !DILocation(line: 2607, column: 12, scope: !8186)
!8220 = !DILocation(line: 2607, column: 30, scope: !8186)
!8221 = !DILocation(line: 2611, column: 9, scope: !8059)
!8222 = !DILocation(line: 2611, column: 18, scope: !8059)
!8223 = !DILocation(line: 2612, column: 9, scope: !8059)
!8224 = !DILocation(line: 2612, column: 18, scope: !8059)
!8225 = !DILocation(line: 2612, column: 30, scope: !8059)
!8226 = !DILocation(line: 2611, column: 2, scope: !8059)
!8227 = !DILocation(line: 2613, column: 26, scope: !8059)
!8228 = !DILocation(line: 2613, column: 31, scope: !8059)
!8229 = !DILocation(line: 2613, column: 41, scope: !8059)
!8230 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !8071)
!8231 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !8071)
!8232 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !8071)
!8233 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !8071)
!8234 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !8071)
!8235 = !DILocation(line: 2616, column: 12, scope: !8059)
!8236 = !DILocation(line: 2616, column: 21, scope: !8059)
!8237 = !DILocation(line: 2616, column: 33, scope: !8059)
!8238 = !DILocation(line: 2616, column: 2, scope: !8059)
!8239 = !DILocation(line: 2618, column: 7, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2618, column: 6)
!8241 = !DILocation(line: 2618, column: 12, scope: !8240)
!8242 = !DILocation(line: 2618, column: 18, scope: !8240)
!8243 = !DILocation(line: 2618, column: 35, scope: !8240)
!8244 = !DILocation(line: 2618, column: 40, scope: !8240)
!8245 = !DILocation(line: 2619, column: 6, scope: !8240)
!8246 = !DILocation(line: 2619, column: 13, scope: !8240)
!8247 = !DILocation(line: 2619, column: 20, scope: !8240)
!8248 = !DILocation(line: 2618, column: 6, scope: !8059)
!8249 = !DILocation(line: 2620, column: 3, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8240, file: !3, line: 2619, column: 36)
!8251 = !DILocation(line: 2620, column: 12, scope: !8250)
!8252 = !DILocation(line: 2620, column: 25, scope: !8250)
!8253 = !DILocation(line: 2623, column: 10, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 2623, column: 3)
!8255 = !DILocation(line: 2623, column: 8, scope: !8254)
!8256 = !DILocation(line: 2623, column: 15, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8254, file: !3, line: 2623, column: 3)
!8258 = !DILocation(line: 2623, column: 37, scope: !8257)
!8259 = !DILocation(line: 2623, column: 19, scope: !8257)
!8260 = !DILocation(line: 2623, column: 17, scope: !8257)
!8261 = !DILocation(line: 2623, column: 3, scope: !8254)
!8262 = !DILocation(line: 2625, column: 5, scope: !8257)
!8263 = !DILocation(line: 2624, column: 4, scope: !8257)
!8264 = !DILocation(line: 2624, column: 13, scope: !8257)
!8265 = !DILocation(line: 2624, column: 25, scope: !8257)
!8266 = !DILocation(line: 2624, column: 28, scope: !8257)
!8267 = !DILocation(line: 2624, column: 42, scope: !8257)
!8268 = !DILocation(line: 2623, column: 46, scope: !8257)
!8269 = !DILocation(line: 2623, column: 3, scope: !8257)
!8270 = distinct !{!8270, !8261, !8271}
!8271 = !DILocation(line: 2625, column: 5, scope: !8254)
!8272 = !DILocation(line: 2629, column: 29, scope: !8250)
!8273 = !DILocation(line: 2630, column: 8, scope: !8250)
!8274 = !DILocation(line: 2630, column: 17, scope: !8250)
!8275 = !DILocation(line: 2630, column: 38, scope: !8250)
!8276 = !DILocation(line: 2631, column: 27, scope: !8250)
!8277 = !DILocation(line: 2632, column: 26, scope: !8250)
!8278 = !DILocation(line: 2629, column: 3, scope: !8250)
!8279 = !DILocation(line: 2635, column: 18, scope: !8250)
!8280 = !DILocation(line: 2635, column: 3, scope: !8250)
!8281 = !DILocation(line: 2636, column: 2, scope: !8250)
!8282 = !DILocation(line: 2638, column: 6, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2638, column: 6)
!8284 = !DILocation(line: 2638, column: 13, scope: !8283)
!8285 = !DILocation(line: 2638, column: 20, scope: !8283)
!8286 = !DILocation(line: 2638, column: 6, scope: !8059)
!8287 = !DILocation(line: 2640, column: 8, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 2638, column: 36)
!8289 = !DILocation(line: 2641, column: 7, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 2641, column: 7)
!8291 = !DILocation(line: 2641, column: 12, scope: !8290)
!8292 = !DILocation(line: 2641, column: 22, scope: !8290)
!8293 = !DILocation(line: 2641, column: 34, scope: !8290)
!8294 = !DILocation(line: 2641, column: 37, scope: !8290)
!8295 = !DILocation(line: 2641, column: 7, scope: !8288)
!8296 = !DILocation(line: 2642, column: 9, scope: !8290)
!8297 = !DILocation(line: 2642, column: 4, scope: !8290)
!8298 = !DILocation(line: 2643, column: 7, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 2643, column: 7)
!8300 = !DILocation(line: 2643, column: 12, scope: !8299)
!8301 = !DILocation(line: 2643, column: 21, scope: !8299)
!8302 = !DILocation(line: 2643, column: 33, scope: !8299)
!8303 = !DILocation(line: 2643, column: 36, scope: !8299)
!8304 = !DILocation(line: 2643, column: 7, scope: !8288)
!8305 = !DILocation(line: 2644, column: 9, scope: !8299)
!8306 = !DILocation(line: 2644, column: 4, scope: !8299)
!8307 = !DILocation(line: 2645, column: 10, scope: !8288)
!8308 = !DILocation(line: 2645, column: 16, scope: !8288)
!8309 = !DILocation(line: 2645, column: 25, scope: !8288)
!8310 = !DILocation(line: 2645, column: 37, scope: !8288)
!8311 = !DILocation(line: 2645, column: 3, scope: !8288)
!8312 = !DILocation(line: 2646, column: 2, scope: !8288)
!8313 = !DILocation(line: 2648, column: 2, scope: !8059)
!8314 = !DILocation(line: 2648, column: 2, scope: !8069)
!8315 = !DILocalVariable(name: "__dummy", scope: !8316, file: !3, line: 2648, type: !364)
!8316 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2648, column: 2)
!8317 = !DILocation(line: 2648, column: 2, scope: !8316)
!8318 = !DILocalVariable(name: "__dummy2", scope: !8316, file: !3, line: 2648, type: !364)
!8319 = !DILocation(line: 2648, column: 2, scope: !8068)
!8320 = !DILocation(line: 2648, column: 2, scope: !8067)
!8321 = !DILocation(line: 2648, column: 2, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 2648, column: 2)
!8323 = !DILocalVariable(name: "__dummy", scope: !8324, file: !3, line: 2648, type: !364)
!8324 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 2648, column: 2)
!8325 = distinct !DILexicalBlock(scope: !8322, file: !3, line: 2648, column: 2)
!8326 = !DILocation(line: 2648, column: 2, scope: !8324)
!8327 = !DILocalVariable(name: "__dummy2", scope: !8324, file: !3, line: 2648, type: !364)
!8328 = !DILocation(line: 2648, column: 2, scope: !8325)
!8329 = !DILocation(line: 2648, column: 2, scope: !8066)
!8330 = !{i32 -2141478006}
!8331 = !DILocation(line: 2648, column: 2, scope: !8065)
!8332 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !8064)
!8333 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !8064)
!8334 = !DILocation(line: 2651, column: 7, scope: !8059)
!8335 = !DILocation(line: 2652, column: 6, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2652, column: 6)
!8337 = !DILocation(line: 2652, column: 11, scope: !8336)
!8338 = !DILocation(line: 2652, column: 17, scope: !8336)
!8339 = !DILocation(line: 2652, column: 6, scope: !8059)
!8340 = !DILocation(line: 2653, column: 8, scope: !8336)
!8341 = !DILocation(line: 2653, column: 3, scope: !8336)
!8342 = !DILocation(line: 2655, column: 6, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2655, column: 6)
!8344 = !DILocation(line: 2655, column: 11, scope: !8343)
!8345 = !DILocation(line: 2655, column: 21, scope: !8343)
!8346 = !DILocation(line: 2655, column: 6, scope: !8059)
!8347 = !DILocation(line: 2656, column: 8, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 2655, column: 34)
!8349 = !DILocation(line: 2657, column: 7, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8348, file: !3, line: 2657, column: 7)
!8351 = !DILocation(line: 2657, column: 12, scope: !8350)
!8352 = !DILocation(line: 2657, column: 22, scope: !8350)
!8353 = !DILocation(line: 2657, column: 7, scope: !8348)
!8354 = !DILocation(line: 2658, column: 9, scope: !8350)
!8355 = !DILocation(line: 2658, column: 4, scope: !8350)
!8356 = !DILocation(line: 2659, column: 2, scope: !8348)
!8357 = !DILocation(line: 2659, column: 13, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 2659, column: 13)
!8359 = !DILocation(line: 2659, column: 18, scope: !8358)
!8360 = !DILocation(line: 2659, column: 28, scope: !8358)
!8361 = !DILocation(line: 2659, column: 13, scope: !8343)
!8362 = !DILocation(line: 2660, column: 8, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 2659, column: 41)
!8364 = !DILocation(line: 2661, column: 2, scope: !8363)
!8365 = !DILocation(line: 2662, column: 28, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2662, column: 6)
!8367 = !DILocation(line: 2662, column: 6, scope: !8366)
!8368 = !DILocation(line: 2662, column: 6, scope: !8059)
!8369 = !DILocation(line: 2663, column: 8, scope: !8366)
!8370 = !DILocation(line: 2663, column: 3, scope: !8366)
!8371 = !DILocation(line: 2664, column: 9, scope: !8059)
!8372 = !DILocation(line: 2664, column: 15, scope: !8059)
!8373 = !DILocation(line: 2664, column: 24, scope: !8059)
!8374 = !DILocation(line: 2664, column: 36, scope: !8059)
!8375 = !DILocation(line: 2664, column: 2, scope: !8059)
!8376 = !DILocation(line: 2666, column: 2, scope: !8059)
!8377 = !DILocation(line: 2666, column: 11, scope: !8059)
!8378 = !DILocation(line: 2666, column: 26, scope: !8059)
!8379 = !DILocation(line: 2668, column: 26, scope: !8059)
!8380 = !DILocation(line: 2668, column: 31, scope: !8059)
!8381 = !DILocation(line: 2668, column: 41, scope: !8059)
!8382 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !8061)
!8383 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !8061)
!8384 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !8061)
!8385 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !8061)
!8386 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !8061)
!8387 = !DILocation(line: 2671, column: 6, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2671, column: 6)
!8389 = !DILocation(line: 2671, column: 11, scope: !8388)
!8390 = !DILocation(line: 2671, column: 21, scope: !8388)
!8391 = !DILocation(line: 2671, column: 6, scope: !8059)
!8392 = !DILocation(line: 2672, column: 13, scope: !8388)
!8393 = !DILocation(line: 2672, column: 22, scope: !8388)
!8394 = !DILocation(line: 2672, column: 34, scope: !8388)
!8395 = !DILocation(line: 2672, column: 3, scope: !8388)
!8396 = !DILocation(line: 2674, column: 2, scope: !8059)
!8397 = !DILocation(line: 2675, column: 1, scope: !8059)
!8398 = distinct !DISubprogram(name: "ai_cmdtest", scope: !3, file: !3, line: 2103, type: !4113, scopeLine: 2105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!8399 = !DILocalVariable(name: "dev", arg: 1, scope: !8398, file: !3, line: 2103, type: !324)
!8400 = !DILocation(line: 2103, column: 45, scope: !8398)
!8401 = !DILocalVariable(name: "s", arg: 2, scope: !8398, file: !3, line: 2103, type: !3995)
!8402 = !DILocation(line: 2103, column: 75, scope: !8398)
!8403 = !DILocalVariable(name: "cmd", arg: 3, scope: !8398, file: !3, line: 2104, type: !4115)
!8404 = !DILocation(line: 2104, column: 28, scope: !8398)
!8405 = !DILocalVariable(name: "board", scope: !8398, file: !3, line: 2106, type: !4755)
!8406 = !DILocation(line: 2106, column: 31, scope: !8398)
!8407 = !DILocation(line: 2106, column: 39, scope: !8398)
!8408 = !DILocation(line: 2106, column: 44, scope: !8398)
!8409 = !DILocalVariable(name: "err", scope: !8398, file: !3, line: 2107, type: !323)
!8410 = !DILocation(line: 2107, column: 6, scope: !8398)
!8411 = !DILocalVariable(name: "tmp_arg", scope: !8398, file: !3, line: 2108, type: !7)
!8412 = !DILocation(line: 2108, column: 15, scope: !8398)
!8413 = !DILocalVariable(name: "tmp_arg2", scope: !8398, file: !3, line: 2108, type: !7)
!8414 = !DILocation(line: 2108, column: 24, scope: !8398)
!8415 = !DILocalVariable(name: "triggers", scope: !8398, file: !3, line: 2109, type: !7)
!8416 = !DILocation(line: 2109, column: 15, scope: !8398)
!8417 = !DILocation(line: 2113, column: 35, scope: !8398)
!8418 = !DILocation(line: 2113, column: 40, scope: !8398)
!8419 = !DILocation(line: 2113, column: 9, scope: !8398)
!8420 = !DILocation(line: 2113, column: 6, scope: !8398)
!8421 = !DILocation(line: 2115, column: 11, scope: !8398)
!8422 = !DILocation(line: 2116, column: 6, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2116, column: 6)
!8424 = !DILocation(line: 2116, column: 13, scope: !8423)
!8425 = !DILocation(line: 2116, column: 20, scope: !8423)
!8426 = !DILocation(line: 2116, column: 6, scope: !8398)
!8427 = !DILocation(line: 2117, column: 12, scope: !8423)
!8428 = !DILocation(line: 2117, column: 3, scope: !8423)
!8429 = !DILocation(line: 2119, column: 12, scope: !8423)
!8430 = !DILocation(line: 2120, column: 35, scope: !8398)
!8431 = !DILocation(line: 2120, column: 40, scope: !8398)
!8432 = !DILocation(line: 2120, column: 56, scope: !8398)
!8433 = !DILocation(line: 2120, column: 9, scope: !8398)
!8434 = !DILocation(line: 2120, column: 6, scope: !8398)
!8435 = !DILocation(line: 2122, column: 11, scope: !8398)
!8436 = !DILocation(line: 2123, column: 6, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2123, column: 6)
!8438 = !DILocation(line: 2123, column: 13, scope: !8437)
!8439 = !DILocation(line: 2123, column: 20, scope: !8437)
!8440 = !DILocation(line: 2123, column: 6, scope: !8398)
!8441 = !DILocation(line: 2124, column: 12, scope: !8437)
!8442 = !DILocation(line: 2124, column: 3, scope: !8437)
!8443 = !DILocation(line: 2126, column: 12, scope: !8437)
!8444 = !DILocation(line: 2127, column: 35, scope: !8398)
!8445 = !DILocation(line: 2127, column: 40, scope: !8398)
!8446 = !DILocation(line: 2127, column: 53, scope: !8398)
!8447 = !DILocation(line: 2127, column: 9, scope: !8398)
!8448 = !DILocation(line: 2127, column: 6, scope: !8398)
!8449 = !DILocation(line: 2128, column: 35, scope: !8398)
!8450 = !DILocation(line: 2128, column: 40, scope: !8398)
!8451 = !DILocation(line: 2128, column: 9, scope: !8398)
!8452 = !DILocation(line: 2128, column: 6, scope: !8398)
!8453 = !DILocation(line: 2129, column: 35, scope: !8398)
!8454 = !DILocation(line: 2129, column: 40, scope: !8398)
!8455 = !DILocation(line: 2129, column: 9, scope: !8398)
!8456 = !DILocation(line: 2129, column: 6, scope: !8398)
!8457 = !DILocation(line: 2132, column: 6, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2132, column: 6)
!8459 = !DILocation(line: 2132, column: 6, scope: !8398)
!8460 = !DILocation(line: 2133, column: 3, scope: !8458)
!8461 = !DILocation(line: 2137, column: 40, scope: !8398)
!8462 = !DILocation(line: 2137, column: 45, scope: !8398)
!8463 = !DILocation(line: 2137, column: 9, scope: !8398)
!8464 = !DILocation(line: 2137, column: 6, scope: !8398)
!8465 = !DILocation(line: 2138, column: 40, scope: !8398)
!8466 = !DILocation(line: 2138, column: 45, scope: !8398)
!8467 = !DILocation(line: 2138, column: 9, scope: !8398)
!8468 = !DILocation(line: 2138, column: 6, scope: !8398)
!8469 = !DILocation(line: 2139, column: 40, scope: !8398)
!8470 = !DILocation(line: 2139, column: 45, scope: !8398)
!8471 = !DILocation(line: 2139, column: 9, scope: !8398)
!8472 = !DILocation(line: 2139, column: 6, scope: !8398)
!8473 = !DILocation(line: 2140, column: 40, scope: !8398)
!8474 = !DILocation(line: 2140, column: 45, scope: !8398)
!8475 = !DILocation(line: 2140, column: 9, scope: !8398)
!8476 = !DILocation(line: 2140, column: 6, scope: !8398)
!8477 = !DILocation(line: 2144, column: 6, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2144, column: 6)
!8479 = !DILocation(line: 2144, column: 11, scope: !8478)
!8480 = !DILocation(line: 2144, column: 23, scope: !8478)
!8481 = !DILocation(line: 2144, column: 35, scope: !8478)
!8482 = !DILocation(line: 2144, column: 38, scope: !8478)
!8483 = !DILocation(line: 2144, column: 43, scope: !8478)
!8484 = !DILocation(line: 2144, column: 58, scope: !8478)
!8485 = !DILocation(line: 2144, column: 6, scope: !8398)
!8486 = !DILocation(line: 2145, column: 7, scope: !8478)
!8487 = !DILocation(line: 2145, column: 3, scope: !8478)
!8488 = !DILocation(line: 2147, column: 6, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2147, column: 6)
!8490 = !DILocation(line: 2147, column: 6, scope: !8398)
!8491 = !DILocation(line: 2148, column: 3, scope: !8489)
!8492 = !DILocation(line: 2152, column: 10, scope: !8398)
!8493 = !DILocation(line: 2152, column: 15, scope: !8398)
!8494 = !DILocation(line: 2152, column: 2, scope: !8398)
!8495 = !DILocation(line: 2154, column: 39, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2152, column: 26)
!8497 = !DILocation(line: 2154, column: 44, scope: !8496)
!8498 = !DILocation(line: 2154, column: 10, scope: !8496)
!8499 = !DILocation(line: 2154, column: 7, scope: !8496)
!8500 = !DILocation(line: 2155, column: 3, scope: !8496)
!8501 = !DILocation(line: 2161, column: 3, scope: !8496)
!8502 = !DILocation(line: 2164, column: 6, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2164, column: 6)
!8504 = !DILocation(line: 2164, column: 11, scope: !8503)
!8505 = !DILocation(line: 2164, column: 23, scope: !8503)
!8506 = !DILocation(line: 2164, column: 6, scope: !8398)
!8507 = !DILocation(line: 2165, column: 7, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 2165, column: 7)
!8509 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 2164, column: 38)
!8510 = !DILocation(line: 2165, column: 14, scope: !8508)
!8511 = !DILocation(line: 2165, column: 21, scope: !8508)
!8512 = !DILocation(line: 2165, column: 7, scope: !8509)
!8513 = !DILocation(line: 2166, column: 40, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8508, file: !3, line: 2165, column: 37)
!8515 = !DILocation(line: 2166, column: 45, scope: !8514)
!8516 = !DILocation(line: 2166, column: 11, scope: !8514)
!8517 = !DILocation(line: 2166, column: 8, scope: !8514)
!8518 = !DILocation(line: 2168, column: 3, scope: !8514)
!8519 = !DILocation(line: 2169, column: 41, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8508, file: !3, line: 2168, column: 10)
!8521 = !DILocation(line: 2169, column: 46, scope: !8520)
!8522 = !DILocation(line: 2170, column: 12, scope: !8520)
!8523 = !DILocation(line: 2170, column: 19, scope: !8520)
!8524 = !DILocation(line: 2169, column: 11, scope: !8520)
!8525 = !DILocation(line: 2169, column: 8, scope: !8520)
!8526 = !DILocation(line: 2175, column: 8, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 2175, column: 8)
!8528 = !DILocation(line: 2175, column: 13, scope: !8527)
!8529 = !DILocation(line: 2175, column: 28, scope: !8527)
!8530 = !DILocation(line: 2175, column: 8, scope: !8520)
!8531 = !DILocation(line: 2177, column: 8, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 2175, column: 43)
!8533 = !DILocation(line: 2177, column: 13, scope: !8532)
!8534 = !DILocation(line: 2178, column: 7, scope: !8532)
!8535 = !DILocation(line: 2178, column: 12, scope: !8532)
!8536 = !DILocation(line: 2179, column: 7, scope: !8532)
!8537 = !DILocation(line: 2179, column: 12, scope: !8532)
!8538 = !DILocation(line: 2178, column: 24, scope: !8532)
!8539 = !DILocation(line: 2176, column: 12, scope: !8532)
!8540 = !DILocation(line: 2176, column: 9, scope: !8532)
!8541 = !DILocation(line: 2180, column: 4, scope: !8532)
!8542 = !DILocation(line: 2182, column: 2, scope: !8509)
!8543 = !DILocation(line: 2184, column: 39, scope: !8398)
!8544 = !DILocation(line: 2184, column: 44, scope: !8398)
!8545 = !DILocation(line: 2184, column: 9, scope: !8398)
!8546 = !DILocation(line: 2184, column: 6, scope: !8398)
!8547 = !DILocation(line: 2185, column: 38, scope: !8398)
!8548 = !DILocation(line: 2185, column: 43, scope: !8398)
!8549 = !DILocation(line: 2186, column: 9, scope: !8398)
!8550 = !DILocation(line: 2186, column: 14, scope: !8398)
!8551 = !DILocation(line: 2185, column: 9, scope: !8398)
!8552 = !DILocation(line: 2185, column: 6, scope: !8398)
!8553 = !DILocation(line: 2188, column: 10, scope: !8398)
!8554 = !DILocation(line: 2188, column: 15, scope: !8398)
!8555 = !DILocation(line: 2188, column: 2, scope: !8398)
!8556 = !DILocation(line: 2190, column: 3, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2188, column: 25)
!8558 = !DILocation(line: 2192, column: 40, scope: !8557)
!8559 = !DILocation(line: 2192, column: 45, scope: !8557)
!8560 = !DILocation(line: 2192, column: 10, scope: !8557)
!8561 = !DILocation(line: 2192, column: 7, scope: !8557)
!8562 = !DILocation(line: 2193, column: 3, scope: !8557)
!8563 = !DILocation(line: 2195, column: 39, scope: !8557)
!8564 = !DILocation(line: 2195, column: 44, scope: !8557)
!8565 = !DILocation(line: 2195, column: 10, scope: !8557)
!8566 = !DILocation(line: 2195, column: 7, scope: !8557)
!8567 = !DILocation(line: 2196, column: 3, scope: !8557)
!8568 = !DILocation(line: 2198, column: 3, scope: !8557)
!8569 = !DILocation(line: 2201, column: 6, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2201, column: 6)
!8571 = !DILocation(line: 2201, column: 6, scope: !8398)
!8572 = !DILocation(line: 2202, column: 3, scope: !8570)
!8573 = !DILocation(line: 2206, column: 6, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2206, column: 6)
!8575 = !DILocation(line: 2206, column: 11, scope: !8574)
!8576 = !DILocation(line: 2206, column: 23, scope: !8574)
!8577 = !DILocation(line: 2206, column: 6, scope: !8398)
!8578 = !DILocation(line: 2207, column: 13, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 2206, column: 38)
!8580 = !DILocation(line: 2207, column: 18, scope: !8579)
!8581 = !DILocation(line: 2207, column: 11, scope: !8579)
!8582 = !DILocation(line: 2208, column: 14, scope: !8579)
!8583 = !DILocation(line: 2208, column: 19, scope: !8579)
!8584 = !DILocation(line: 2208, column: 12, scope: !8579)
!8585 = !DILocation(line: 2209, column: 20, scope: !8579)
!8586 = !DILocation(line: 2209, column: 25, scope: !8579)
!8587 = !DILocation(line: 2209, column: 3, scope: !8579)
!8588 = !DILocation(line: 2210, column: 7, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 2210, column: 7)
!8590 = !DILocation(line: 2210, column: 18, scope: !8589)
!8591 = !DILocation(line: 2210, column: 23, scope: !8589)
!8592 = !DILocation(line: 2210, column: 15, scope: !8589)
!8593 = !DILocation(line: 2210, column: 7, scope: !8579)
!8594 = !DILocation(line: 2211, column: 7, scope: !8589)
!8595 = !DILocation(line: 2211, column: 4, scope: !8589)
!8596 = !DILocation(line: 2212, column: 7, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 2212, column: 7)
!8598 = !DILocation(line: 2212, column: 19, scope: !8597)
!8599 = !DILocation(line: 2212, column: 24, scope: !8597)
!8600 = !DILocation(line: 2212, column: 16, scope: !8597)
!8601 = !DILocation(line: 2212, column: 7, scope: !8579)
!8602 = !DILocation(line: 2213, column: 7, scope: !8597)
!8603 = !DILocation(line: 2213, column: 4, scope: !8597)
!8604 = !DILocation(line: 2214, column: 2, scope: !8579)
!8605 = !DILocation(line: 2216, column: 6, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2216, column: 6)
!8607 = !DILocation(line: 2216, column: 6, scope: !8398)
!8608 = !DILocation(line: 2217, column: 3, scope: !8606)
!8609 = !DILocation(line: 2220, column: 6, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2220, column: 6)
!8611 = !DILocation(line: 2220, column: 11, scope: !8610)
!8612 = !DILocation(line: 2220, column: 20, scope: !8610)
!8613 = !DILocation(line: 2220, column: 23, scope: !8610)
!8614 = !DILocation(line: 2220, column: 28, scope: !8610)
!8615 = !DILocation(line: 2220, column: 41, scope: !8610)
!8616 = !DILocation(line: 2220, column: 6, scope: !8398)
!8617 = !DILocation(line: 2221, column: 40, scope: !8610)
!8618 = !DILocation(line: 2221, column: 45, scope: !8610)
!8619 = !DILocation(line: 2221, column: 48, scope: !8610)
!8620 = !DILocation(line: 2221, column: 10, scope: !8610)
!8621 = !DILocation(line: 2221, column: 7, scope: !8610)
!8622 = !DILocation(line: 2221, column: 3, scope: !8610)
!8623 = !DILocation(line: 2223, column: 6, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2223, column: 6)
!8625 = !DILocation(line: 2223, column: 6, scope: !8398)
!8626 = !DILocation(line: 2224, column: 3, scope: !8624)
!8627 = !DILocation(line: 2226, column: 2, scope: !8398)
!8628 = !DILocation(line: 2227, column: 1, scope: !8398)
!8629 = distinct !DISubprogram(name: "ai_cancel", scope: !3, file: !3, line: 3075, type: !4109, scopeLine: 3076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!8630 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !8631)
!8631 = distinct !DILocation(line: 3086, column: 2, scope: !8629)
!8632 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !8631)
!8633 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !8634)
!8634 = distinct !DILocation(line: 3082, column: 3, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 3081, column: 36)
!8636 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 3081, column: 6)
!8637 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !8634)
!8638 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !8639)
!8639 = distinct !DILocation(line: 3080, column: 2, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 3080, column: 2)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 3080, column: 2)
!8642 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 3080, column: 2)
!8643 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 3080, column: 2)
!8644 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 3080, column: 2)
!8645 = !DILocalVariable(name: "dev", arg: 1, scope: !8629, file: !3, line: 3075, type: !324)
!8646 = !DILocation(line: 3075, column: 44, scope: !8629)
!8647 = !DILocalVariable(name: "s", arg: 2, scope: !8629, file: !3, line: 3075, type: !3995)
!8648 = !DILocation(line: 3075, column: 74, scope: !8629)
!8649 = !DILocalVariable(name: "devpriv", scope: !8629, file: !3, line: 3077, type: !4645)
!8650 = !DILocation(line: 3077, column: 27, scope: !8629)
!8651 = !DILocation(line: 3077, column: 37, scope: !8629)
!8652 = !DILocation(line: 3077, column: 42, scope: !8629)
!8653 = !DILocalVariable(name: "flags", scope: !8629, file: !3, line: 3078, type: !364)
!8654 = !DILocation(line: 3078, column: 16, scope: !8629)
!8655 = !DILocation(line: 3080, column: 2, scope: !8629)
!8656 = !DILocation(line: 3080, column: 2, scope: !8644)
!8657 = !DILocalVariable(name: "__dummy", scope: !8658, file: !3, line: 3080, type: !364)
!8658 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 3080, column: 2)
!8659 = !DILocation(line: 3080, column: 2, scope: !8658)
!8660 = !DILocalVariable(name: "__dummy2", scope: !8658, file: !3, line: 3080, type: !364)
!8661 = !DILocation(line: 3080, column: 2, scope: !8643)
!8662 = !DILocation(line: 3080, column: 2, scope: !8642)
!8663 = !DILocation(line: 3080, column: 2, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 3080, column: 2)
!8665 = !DILocalVariable(name: "__dummy", scope: !8666, file: !3, line: 3080, type: !364)
!8666 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 3080, column: 2)
!8667 = distinct !DILexicalBlock(scope: !8664, file: !3, line: 3080, column: 2)
!8668 = !DILocation(line: 3080, column: 2, scope: !8666)
!8669 = !DILocalVariable(name: "__dummy2", scope: !8666, file: !3, line: 3080, type: !364)
!8670 = !DILocation(line: 3080, column: 2, scope: !8667)
!8671 = !DILocation(line: 3080, column: 2, scope: !8641)
!8672 = !{i32 -2141470976}
!8673 = !DILocation(line: 3080, column: 2, scope: !8640)
!8674 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !8639)
!8675 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !8639)
!8676 = !DILocation(line: 3081, column: 6, scope: !8636)
!8677 = !DILocation(line: 3081, column: 15, scope: !8636)
!8678 = !DILocation(line: 3081, column: 30, scope: !8636)
!8679 = !DILocation(line: 3081, column: 6, scope: !8629)
!8680 = !DILocation(line: 3082, column: 27, scope: !8635)
!8681 = !DILocation(line: 3082, column: 32, scope: !8635)
!8682 = !DILocation(line: 3082, column: 42, scope: !8635)
!8683 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !8634)
!8684 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !8634)
!8685 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !8634)
!8686 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !8634)
!8687 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !8634)
!8688 = !DILocation(line: 3083, column: 3, scope: !8635)
!8689 = !DILocation(line: 3085, column: 2, scope: !8629)
!8690 = !DILocation(line: 3085, column: 11, scope: !8629)
!8691 = !DILocation(line: 3085, column: 26, scope: !8629)
!8692 = !DILocation(line: 3086, column: 26, scope: !8629)
!8693 = !DILocation(line: 3086, column: 31, scope: !8629)
!8694 = !DILocation(line: 3086, column: 41, scope: !8629)
!8695 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !8631)
!8696 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !8631)
!8697 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !8631)
!8698 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !8631)
!8699 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !8631)
!8700 = !DILocation(line: 3088, column: 20, scope: !8629)
!8701 = !DILocation(line: 3088, column: 2, scope: !8629)
!8702 = !DILocation(line: 3090, column: 12, scope: !8629)
!8703 = !DILocation(line: 3090, column: 2, scope: !8629)
!8704 = !DILocation(line: 3092, column: 2, scope: !8629)
!8705 = !DILocation(line: 3093, column: 1, scope: !8629)
!8706 = distinct !DISubprogram(name: "adc_src_4020_bits", scope: !3, file: !3, line: 412, type: !8707, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!8707 = !DISubroutineType(types: !8708)
!8708 = !{!1518, !7}
!8709 = !DILocalVariable(name: "source", arg: 1, scope: !8706, file: !3, line: 412, type: !7)
!8710 = !DILocation(line: 412, column: 49, scope: !8706)
!8711 = !DILocation(line: 414, column: 10, scope: !8706)
!8712 = !DILocation(line: 414, column: 17, scope: !8706)
!8713 = !DILocation(line: 414, column: 23, scope: !8706)
!8714 = !DILocation(line: 414, column: 9, scope: !8706)
!8715 = !DILocation(line: 414, column: 2, scope: !8706)
!8716 = distinct !DISubprogram(name: "attenuate_bit", scope: !3, file: !3, line: 417, type: !8707, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!8717 = !DILocalVariable(name: "channel", arg: 1, scope: !8716, file: !3, line: 417, type: !7)
!8718 = !DILocation(line: 417, column: 45, scope: !8716)
!8719 = !DILocation(line: 420, column: 15, scope: !8716)
!8720 = !DILocation(line: 420, column: 23, scope: !8716)
!8721 = !DILocation(line: 420, column: 11, scope: !8716)
!8722 = !DILocation(line: 420, column: 9, scope: !8716)
!8723 = !DILocation(line: 420, column: 2, scope: !8716)
!8724 = !DILocalVariable(name: "dev", arg: 1, scope: !4303, file: !3, line: 1690, type: !324)
!8725 = !DILocation(line: 1690, column: 45, scope: !4303)
!8726 = !DILocalVariable(name: "address", arg: 2, scope: !4303, file: !3, line: 1690, type: !7)
!8727 = !DILocation(line: 1690, column: 63, scope: !4303)
!8728 = !DILocalVariable(name: "data", arg: 3, scope: !4303, file: !3, line: 1691, type: !4204)
!8729 = !DILocation(line: 1691, column: 19, scope: !4303)
!8730 = !DILocalVariable(name: "length", arg: 4, scope: !4303, file: !3, line: 1691, type: !7)
!8731 = !DILocation(line: 1691, column: 38, scope: !4303)
!8732 = !DILocalVariable(name: "devpriv", scope: !4303, file: !3, line: 1693, type: !4645)
!8733 = !DILocation(line: 1693, column: 27, scope: !4303)
!8734 = !DILocation(line: 1693, column: 37, scope: !4303)
!8735 = !DILocation(line: 1693, column: 42, scope: !4303)
!8736 = !DILocalVariable(name: "i", scope: !4303, file: !3, line: 1694, type: !7)
!8737 = !DILocation(line: 1694, column: 15, scope: !4303)
!8738 = !DILocalVariable(name: "bitstream", scope: !4303, file: !3, line: 1695, type: !1518)
!8739 = !DILocation(line: 1695, column: 5, scope: !4303)
!8740 = !DILocation(line: 1704, column: 2, scope: !4303)
!8741 = !DILocation(line: 1704, column: 11, scope: !4303)
!8742 = !DILocation(line: 1704, column: 28, scope: !4303)
!8743 = !DILocation(line: 1706, column: 11, scope: !4303)
!8744 = !DILocation(line: 1706, column: 2, scope: !4303)
!8745 = !DILocation(line: 1707, column: 12, scope: !4303)
!8746 = !DILocation(line: 1707, column: 2, scope: !4303)
!8747 = !DILocation(line: 1710, column: 15, scope: !4303)
!8748 = !DILocation(line: 1710, column: 23, scope: !4303)
!8749 = !DILocation(line: 1710, column: 29, scope: !4303)
!8750 = !DILocation(line: 1710, column: 14, scope: !4303)
!8751 = !DILocation(line: 1710, column: 12, scope: !4303)
!8752 = !DILocation(line: 1711, column: 17, scope: !4303)
!8753 = !DILocation(line: 1711, column: 22, scope: !4303)
!8754 = !DILocation(line: 1711, column: 2, scope: !4303)
!8755 = !DILocation(line: 1714, column: 19, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1714, column: 6)
!8757 = !DILocation(line: 1714, column: 6, scope: !8756)
!8758 = !DILocation(line: 1714, column: 24, scope: !8756)
!8759 = !DILocation(line: 1714, column: 6, scope: !4303)
!8760 = !DILocation(line: 1715, column: 3, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8756, file: !3, line: 1714, column: 30)
!8762 = !DILocation(line: 1716, column: 12, scope: !8761)
!8763 = !DILocation(line: 1716, column: 3, scope: !8761)
!8764 = !DILocation(line: 1717, column: 3, scope: !8761)
!8765 = !DILocation(line: 1720, column: 9, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1720, column: 2)
!8767 = !DILocation(line: 1720, column: 7, scope: !8766)
!8768 = !DILocation(line: 1720, column: 14, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 1720, column: 2)
!8770 = !DILocation(line: 1720, column: 18, scope: !8769)
!8771 = !DILocation(line: 1720, column: 16, scope: !8769)
!8772 = !DILocation(line: 1720, column: 2, scope: !8766)
!8773 = !DILocation(line: 1721, column: 18, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 1720, column: 31)
!8775 = !DILocation(line: 1721, column: 23, scope: !8774)
!8776 = !DILocation(line: 1721, column: 28, scope: !8774)
!8777 = !DILocation(line: 1721, column: 3, scope: !8774)
!8778 = !DILocation(line: 1722, column: 20, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8774, file: !3, line: 1722, column: 7)
!8780 = !DILocation(line: 1722, column: 7, scope: !8779)
!8781 = !DILocation(line: 1722, column: 25, scope: !8779)
!8782 = !DILocation(line: 1722, column: 7, scope: !8774)
!8783 = !DILocation(line: 1723, column: 4, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 1722, column: 31)
!8785 = !DILocation(line: 1724, column: 13, scope: !8784)
!8786 = !DILocation(line: 1724, column: 4, scope: !8784)
!8787 = !DILocation(line: 1725, column: 4, scope: !8784)
!8788 = !DILocation(line: 1727, column: 2, scope: !8774)
!8789 = !DILocation(line: 1720, column: 27, scope: !8769)
!8790 = !DILocation(line: 1720, column: 2, scope: !8769)
!8791 = distinct !{!8791, !8772, !8792}
!8792 = !DILocation(line: 1727, column: 2, scope: !8766)
!8793 = !DILocation(line: 1728, column: 11, scope: !4303)
!8794 = !DILocation(line: 1728, column: 2, scope: !4303)
!8795 = !DILocation(line: 1729, column: 1, scope: !4303)
!8796 = distinct !DISubprogram(name: "ao_winsn", scope: !3, file: !3, line: 3095, type: !4092, scopeLine: 3097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!8797 = !DILocalVariable(name: "dev", arg: 1, scope: !8796, file: !3, line: 3095, type: !324)
!8798 = !DILocation(line: 3095, column: 43, scope: !8796)
!8799 = !DILocalVariable(name: "s", arg: 2, scope: !8796, file: !3, line: 3095, type: !3995)
!8800 = !DILocation(line: 3095, column: 73, scope: !8796)
!8801 = !DILocalVariable(name: "insn", arg: 3, scope: !8796, file: !3, line: 3096, type: !4094)
!8802 = !DILocation(line: 3096, column: 27, scope: !8796)
!8803 = !DILocalVariable(name: "data", arg: 4, scope: !8796, file: !3, line: 3096, type: !2847)
!8804 = !DILocation(line: 3096, column: 47, scope: !8796)
!8805 = !DILocalVariable(name: "board", scope: !8796, file: !3, line: 3098, type: !4755)
!8806 = !DILocation(line: 3098, column: 31, scope: !8796)
!8807 = !DILocation(line: 3098, column: 39, scope: !8796)
!8808 = !DILocation(line: 3098, column: 44, scope: !8796)
!8809 = !DILocalVariable(name: "devpriv", scope: !8796, file: !3, line: 3099, type: !4645)
!8810 = !DILocation(line: 3099, column: 27, scope: !8796)
!8811 = !DILocation(line: 3099, column: 37, scope: !8796)
!8812 = !DILocation(line: 3099, column: 42, scope: !8796)
!8813 = !DILocalVariable(name: "chan", scope: !8796, file: !3, line: 3100, type: !7)
!8814 = !DILocation(line: 3100, column: 15, scope: !8796)
!8815 = !DILocation(line: 3100, column: 22, scope: !8796)
!8816 = !DILocalVariable(name: "range", scope: !8796, file: !3, line: 3101, type: !7)
!8817 = !DILocation(line: 3101, column: 15, scope: !8796)
!8818 = !DILocation(line: 3101, column: 23, scope: !8796)
!8819 = !DILocalVariable(name: "val", scope: !8796, file: !3, line: 3102, type: !7)
!8820 = !DILocation(line: 3102, column: 15, scope: !8796)
!8821 = !DILocation(line: 3102, column: 21, scope: !8796)
!8822 = !DILocation(line: 3102, column: 24, scope: !8796)
!8823 = !DILocation(line: 3102, column: 33, scope: !8796)
!8824 = !DILocalVariable(name: "i", scope: !8796, file: !3, line: 3103, type: !7)
!8825 = !DILocation(line: 3103, column: 15, scope: !8796)
!8826 = !DILocation(line: 3106, column: 12, scope: !8796)
!8827 = !DILocation(line: 3106, column: 21, scope: !8796)
!8828 = !DILocation(line: 3106, column: 33, scope: !8796)
!8829 = !DILocation(line: 3106, column: 2, scope: !8796)
!8830 = !DILocation(line: 3109, column: 21, scope: !8796)
!8831 = !DILocation(line: 3109, column: 27, scope: !8796)
!8832 = !DILocation(line: 3109, column: 36, scope: !8796)
!8833 = !DILocation(line: 3109, column: 55, scope: !8796)
!8834 = !DILocation(line: 3109, column: 61, scope: !8796)
!8835 = !DILocation(line: 3109, column: 2, scope: !8796)
!8836 = !DILocation(line: 3110, column: 9, scope: !8796)
!8837 = !DILocation(line: 3110, column: 18, scope: !8796)
!8838 = !DILocation(line: 3111, column: 9, scope: !8796)
!8839 = !DILocation(line: 3111, column: 18, scope: !8796)
!8840 = !DILocation(line: 3111, column: 30, scope: !8796)
!8841 = !DILocation(line: 3110, column: 2, scope: !8796)
!8842 = !DILocation(line: 3113, column: 9, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 3113, column: 2)
!8844 = !DILocation(line: 3113, column: 7, scope: !8843)
!8845 = !DILocation(line: 3113, column: 14, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 3113, column: 2)
!8847 = !DILocation(line: 3113, column: 18, scope: !8846)
!8848 = !DILocation(line: 3113, column: 24, scope: !8846)
!8849 = !DILocation(line: 3113, column: 16, scope: !8846)
!8850 = !DILocation(line: 3113, column: 2, scope: !8843)
!8851 = !DILocation(line: 3115, column: 9, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 3113, column: 32)
!8853 = !DILocation(line: 3115, column: 14, scope: !8852)
!8854 = !DILocation(line: 3115, column: 7, scope: !8852)
!8855 = !DILocation(line: 3116, column: 7, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 3116, column: 7)
!8857 = !DILocation(line: 3116, column: 14, scope: !8856)
!8858 = !DILocation(line: 3116, column: 21, scope: !8856)
!8859 = !DILocation(line: 3116, column: 7, scope: !8852)
!8860 = !DILocation(line: 3117, column: 11, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 3116, column: 37)
!8862 = !DILocation(line: 3117, column: 15, scope: !8861)
!8863 = !DILocation(line: 3118, column: 11, scope: !8861)
!8864 = !DILocation(line: 3118, column: 20, scope: !8861)
!8865 = !DILocation(line: 3118, column: 51, scope: !8861)
!8866 = !DILocation(line: 3118, column: 34, scope: !8861)
!8867 = !DILocation(line: 3118, column: 32, scope: !8861)
!8868 = !DILocation(line: 3117, column: 4, scope: !8861)
!8869 = !DILocation(line: 3119, column: 12, scope: !8861)
!8870 = !DILocation(line: 3119, column: 16, scope: !8861)
!8871 = !DILocation(line: 3119, column: 22, scope: !8861)
!8872 = !DILocation(line: 3119, column: 11, scope: !8861)
!8873 = !DILocation(line: 3120, column: 11, scope: !8861)
!8874 = !DILocation(line: 3120, column: 20, scope: !8861)
!8875 = !DILocation(line: 3120, column: 51, scope: !8861)
!8876 = !DILocation(line: 3120, column: 34, scope: !8861)
!8877 = !DILocation(line: 3120, column: 32, scope: !8861)
!8878 = !DILocation(line: 3119, column: 4, scope: !8861)
!8879 = !DILocation(line: 3121, column: 3, scope: !8861)
!8880 = !DILocation(line: 3122, column: 11, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 3121, column: 10)
!8882 = !DILocation(line: 3123, column: 11, scope: !8881)
!8883 = !DILocation(line: 3123, column: 20, scope: !8881)
!8884 = !DILocation(line: 3123, column: 50, scope: !8881)
!8885 = !DILocation(line: 3123, column: 34, scope: !8881)
!8886 = !DILocation(line: 3123, column: 32, scope: !8881)
!8887 = !DILocation(line: 3122, column: 4, scope: !8881)
!8888 = !DILocation(line: 3125, column: 2, scope: !8852)
!8889 = !DILocation(line: 3113, column: 28, scope: !8846)
!8890 = !DILocation(line: 3113, column: 2, scope: !8846)
!8891 = distinct !{!8891, !8850, !8892}
!8892 = !DILocation(line: 3125, column: 2, scope: !8843)
!8893 = !DILocation(line: 3128, column: 22, scope: !8796)
!8894 = !DILocation(line: 3128, column: 2, scope: !8796)
!8895 = !DILocation(line: 3128, column: 5, scope: !8796)
!8896 = !DILocation(line: 3128, column: 14, scope: !8796)
!8897 = !DILocation(line: 3128, column: 20, scope: !8796)
!8898 = !DILocation(line: 3130, column: 9, scope: !8796)
!8899 = !DILocation(line: 3130, column: 15, scope: !8796)
!8900 = !DILocation(line: 3130, column: 2, scope: !8796)
!8901 = distinct !DISubprogram(name: "ao_cmdtest", scope: !3, file: !3, line: 3339, type: !4113, scopeLine: 3341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!8902 = !DILocalVariable(name: "dev", arg: 1, scope: !8901, file: !3, line: 3339, type: !324)
!8903 = !DILocation(line: 3339, column: 45, scope: !8901)
!8904 = !DILocalVariable(name: "s", arg: 2, scope: !8901, file: !3, line: 3339, type: !3995)
!8905 = !DILocation(line: 3339, column: 75, scope: !8901)
!8906 = !DILocalVariable(name: "cmd", arg: 3, scope: !8901, file: !3, line: 3340, type: !4115)
!8907 = !DILocation(line: 3340, column: 28, scope: !8901)
!8908 = !DILocalVariable(name: "board", scope: !8901, file: !3, line: 3342, type: !4755)
!8909 = !DILocation(line: 3342, column: 31, scope: !8901)
!8910 = !DILocation(line: 3342, column: 39, scope: !8901)
!8911 = !DILocation(line: 3342, column: 44, scope: !8901)
!8912 = !DILocalVariable(name: "err", scope: !8901, file: !3, line: 3343, type: !323)
!8913 = !DILocation(line: 3343, column: 6, scope: !8901)
!8914 = !DILocalVariable(name: "tmp_arg", scope: !8901, file: !3, line: 3344, type: !7)
!8915 = !DILocation(line: 3344, column: 15, scope: !8901)
!8916 = !DILocation(line: 3348, column: 35, scope: !8901)
!8917 = !DILocation(line: 3348, column: 40, scope: !8901)
!8918 = !DILocation(line: 3348, column: 9, scope: !8901)
!8919 = !DILocation(line: 3348, column: 6, scope: !8901)
!8920 = !DILocation(line: 3349, column: 35, scope: !8901)
!8921 = !DILocation(line: 3349, column: 40, scope: !8901)
!8922 = !DILocation(line: 3349, column: 9, scope: !8901)
!8923 = !DILocation(line: 3349, column: 6, scope: !8901)
!8924 = !DILocation(line: 3351, column: 35, scope: !8901)
!8925 = !DILocation(line: 3351, column: 40, scope: !8901)
!8926 = !DILocation(line: 3351, column: 9, scope: !8901)
!8927 = !DILocation(line: 3351, column: 6, scope: !8901)
!8928 = !DILocation(line: 3352, column: 35, scope: !8901)
!8929 = !DILocation(line: 3352, column: 40, scope: !8901)
!8930 = !DILocation(line: 3352, column: 9, scope: !8901)
!8931 = !DILocation(line: 3352, column: 6, scope: !8901)
!8932 = !DILocation(line: 3353, column: 35, scope: !8901)
!8933 = !DILocation(line: 3353, column: 40, scope: !8901)
!8934 = !DILocation(line: 3353, column: 9, scope: !8901)
!8935 = !DILocation(line: 3353, column: 6, scope: !8901)
!8936 = !DILocation(line: 3355, column: 6, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 3355, column: 6)
!8938 = !DILocation(line: 3355, column: 6, scope: !8901)
!8939 = !DILocation(line: 3356, column: 3, scope: !8937)
!8940 = !DILocation(line: 3360, column: 40, scope: !8901)
!8941 = !DILocation(line: 3360, column: 45, scope: !8901)
!8942 = !DILocation(line: 3360, column: 9, scope: !8901)
!8943 = !DILocation(line: 3360, column: 6, scope: !8901)
!8944 = !DILocation(line: 3361, column: 40, scope: !8901)
!8945 = !DILocation(line: 3361, column: 45, scope: !8901)
!8946 = !DILocation(line: 3361, column: 9, scope: !8901)
!8947 = !DILocation(line: 3361, column: 6, scope: !8901)
!8948 = !DILocation(line: 3365, column: 6, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 3365, column: 6)
!8950 = !DILocation(line: 3365, column: 11, scope: !8949)
!8951 = !DILocation(line: 3365, column: 23, scope: !8949)
!8952 = !DILocation(line: 3365, column: 35, scope: !8949)
!8953 = !DILocation(line: 3365, column: 38, scope: !8949)
!8954 = !DILocation(line: 3365, column: 43, scope: !8949)
!8955 = !DILocation(line: 3365, column: 58, scope: !8949)
!8956 = !DILocation(line: 3365, column: 6, scope: !8901)
!8957 = !DILocation(line: 3366, column: 7, scope: !8949)
!8958 = !DILocation(line: 3366, column: 3, scope: !8949)
!8959 = !DILocation(line: 3367, column: 6, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 3367, column: 6)
!8961 = !DILocation(line: 3367, column: 11, scope: !8960)
!8962 = !DILocation(line: 3367, column: 20, scope: !8960)
!8963 = !DILocation(line: 3367, column: 34, scope: !8960)
!8964 = !DILocation(line: 3368, column: 6, scope: !8960)
!8965 = !DILocation(line: 3368, column: 11, scope: !8960)
!8966 = !DILocation(line: 3368, column: 20, scope: !8960)
!8967 = !DILocation(line: 3368, column: 33, scope: !8960)
!8968 = !DILocation(line: 3368, column: 36, scope: !8960)
!8969 = !DILocation(line: 3368, column: 41, scope: !8960)
!8970 = !DILocation(line: 3368, column: 50, scope: !8960)
!8971 = !DILocation(line: 3367, column: 6, scope: !8901)
!8972 = !DILocation(line: 3369, column: 7, scope: !8960)
!8973 = !DILocation(line: 3369, column: 3, scope: !8960)
!8974 = !DILocation(line: 3371, column: 6, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 3371, column: 6)
!8976 = !DILocation(line: 3371, column: 6, scope: !8901)
!8977 = !DILocation(line: 3372, column: 3, scope: !8975)
!8978 = !DILocation(line: 3376, column: 38, scope: !8901)
!8979 = !DILocation(line: 3376, column: 43, scope: !8901)
!8980 = !DILocation(line: 3376, column: 9, scope: !8901)
!8981 = !DILocation(line: 3376, column: 6, scope: !8901)
!8982 = !DILocation(line: 3378, column: 6, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 3378, column: 6)
!8984 = !DILocation(line: 3378, column: 11, scope: !8983)
!8985 = !DILocation(line: 3378, column: 26, scope: !8983)
!8986 = !DILocation(line: 3378, column: 6, scope: !8901)
!8987 = !DILocation(line: 3379, column: 40, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 3378, column: 41)
!8989 = !DILocation(line: 3379, column: 45, scope: !8988)
!8990 = !DILocation(line: 3380, column: 11, scope: !8988)
!8991 = !DILocation(line: 3380, column: 18, scope: !8988)
!8992 = !DILocation(line: 3379, column: 10, scope: !8988)
!8993 = !DILocation(line: 3379, column: 7, scope: !8988)
!8994 = !DILocation(line: 3381, column: 22, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 3381, column: 7)
!8996 = !DILocation(line: 3381, column: 27, scope: !8995)
!8997 = !DILocation(line: 3381, column: 43, scope: !8995)
!8998 = !DILocation(line: 3381, column: 48, scope: !8995)
!8999 = !DILocation(line: 3381, column: 7, scope: !8995)
!9000 = !DILocation(line: 3381, column: 55, scope: !8995)
!9001 = !DILocation(line: 3381, column: 7, scope: !8988)
!9002 = !DILocation(line: 3383, column: 4, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 3382, column: 26)
!9004 = !DILocation(line: 3383, column: 9, scope: !9003)
!9005 = !DILocation(line: 3383, column: 24, scope: !9003)
!9006 = !DILocation(line: 3385, column: 8, scope: !9003)
!9007 = !DILocation(line: 3386, column: 3, scope: !9003)
!9008 = !DILocation(line: 3387, column: 2, scope: !8988)
!9009 = !DILocation(line: 3389, column: 39, scope: !8901)
!9010 = !DILocation(line: 3389, column: 44, scope: !8901)
!9011 = !DILocation(line: 3389, column: 9, scope: !8901)
!9012 = !DILocation(line: 3389, column: 6, scope: !8901)
!9013 = !DILocation(line: 3390, column: 38, scope: !8901)
!9014 = !DILocation(line: 3390, column: 43, scope: !8901)
!9015 = !DILocation(line: 3391, column: 9, scope: !8901)
!9016 = !DILocation(line: 3391, column: 14, scope: !8901)
!9017 = !DILocation(line: 3390, column: 9, scope: !8901)
!9018 = !DILocation(line: 3390, column: 6, scope: !8901)
!9019 = !DILocation(line: 3393, column: 6, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 3393, column: 6)
!9021 = !DILocation(line: 3393, column: 6, scope: !8901)
!9022 = !DILocation(line: 3394, column: 3, scope: !9020)
!9023 = !DILocation(line: 3398, column: 6, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 3398, column: 6)
!9025 = !DILocation(line: 3398, column: 11, scope: !9024)
!9026 = !DILocation(line: 3398, column: 26, scope: !9024)
!9027 = !DILocation(line: 3398, column: 6, scope: !8901)
!9028 = !DILocation(line: 3399, column: 13, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 3398, column: 41)
!9030 = !DILocation(line: 3399, column: 18, scope: !9029)
!9031 = !DILocation(line: 3399, column: 11, scope: !9029)
!9032 = !DILocation(line: 3400, column: 37, scope: !9029)
!9033 = !DILocation(line: 3400, column: 42, scope: !9029)
!9034 = !DILocation(line: 3401, column: 9, scope: !9029)
!9035 = !DILocation(line: 3401, column: 14, scope: !9029)
!9036 = !DILocation(line: 3400, column: 25, scope: !9029)
!9037 = !DILocation(line: 3401, column: 21, scope: !9029)
!9038 = !DILocation(line: 3400, column: 3, scope: !9029)
!9039 = !DILocation(line: 3400, column: 8, scope: !9029)
!9040 = !DILocation(line: 3400, column: 23, scope: !9029)
!9041 = !DILocation(line: 3402, column: 7, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 3402, column: 7)
!9043 = !DILocation(line: 3402, column: 18, scope: !9042)
!9044 = !DILocation(line: 3402, column: 23, scope: !9042)
!9045 = !DILocation(line: 3402, column: 15, scope: !9042)
!9046 = !DILocation(line: 3402, column: 7, scope: !9029)
!9047 = !DILocation(line: 3403, column: 7, scope: !9042)
!9048 = !DILocation(line: 3403, column: 4, scope: !9042)
!9049 = !DILocation(line: 3404, column: 2, scope: !9029)
!9050 = !DILocation(line: 3406, column: 6, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 3406, column: 6)
!9052 = !DILocation(line: 3406, column: 6, scope: !8901)
!9053 = !DILocation(line: 3407, column: 3, scope: !9051)
!9054 = !DILocation(line: 3410, column: 6, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 3410, column: 6)
!9056 = !DILocation(line: 3410, column: 11, scope: !9055)
!9057 = !DILocation(line: 3410, column: 20, scope: !9055)
!9058 = !DILocation(line: 3410, column: 23, scope: !9055)
!9059 = !DILocation(line: 3410, column: 28, scope: !9055)
!9060 = !DILocation(line: 3410, column: 41, scope: !9055)
!9061 = !DILocation(line: 3410, column: 6, scope: !8901)
!9062 = !DILocation(line: 3411, column: 40, scope: !9055)
!9063 = !DILocation(line: 3411, column: 45, scope: !9055)
!9064 = !DILocation(line: 3411, column: 48, scope: !9055)
!9065 = !DILocation(line: 3411, column: 10, scope: !9055)
!9066 = !DILocation(line: 3411, column: 7, scope: !9055)
!9067 = !DILocation(line: 3411, column: 3, scope: !9055)
!9068 = !DILocation(line: 3413, column: 6, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 3413, column: 6)
!9070 = !DILocation(line: 3413, column: 6, scope: !8901)
!9071 = !DILocation(line: 3414, column: 3, scope: !9069)
!9072 = !DILocation(line: 3416, column: 2, scope: !8901)
!9073 = !DILocation(line: 3417, column: 1, scope: !8901)
!9074 = distinct !DISubprogram(name: "ao_cmd", scope: !3, file: !3, line: 3294, type: !4109, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9075 = !DILocalVariable(name: "dev", arg: 1, scope: !9074, file: !3, line: 3294, type: !324)
!9076 = !DILocation(line: 3294, column: 41, scope: !9074)
!9077 = !DILocalVariable(name: "s", arg: 2, scope: !9074, file: !3, line: 3294, type: !3995)
!9078 = !DILocation(line: 3294, column: 71, scope: !9074)
!9079 = !DILocalVariable(name: "devpriv", scope: !9074, file: !3, line: 3296, type: !4645)
!9080 = !DILocation(line: 3296, column: 27, scope: !9074)
!9081 = !DILocation(line: 3296, column: 37, scope: !9074)
!9082 = !DILocation(line: 3296, column: 42, scope: !9074)
!9083 = !DILocalVariable(name: "cmd", scope: !9074, file: !3, line: 3297, type: !4115)
!9084 = !DILocation(line: 3297, column: 21, scope: !9074)
!9085 = !DILocation(line: 3297, column: 28, scope: !9074)
!9086 = !DILocation(line: 3297, column: 31, scope: !9074)
!9087 = !DILocation(line: 3297, column: 38, scope: !9074)
!9088 = !DILocation(line: 3299, column: 31, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9074, file: !3, line: 3299, column: 6)
!9090 = !DILocation(line: 3299, column: 6, scope: !9089)
!9091 = !DILocation(line: 3299, column: 6, scope: !9074)
!9092 = !DILocation(line: 3300, column: 23, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9089, file: !3, line: 3299, column: 37)
!9094 = !DILocation(line: 3300, column: 3, scope: !9093)
!9095 = !DILocation(line: 3301, column: 3, scope: !9093)
!9096 = !DILocation(line: 3304, column: 14, scope: !9074)
!9097 = !DILocation(line: 3304, column: 23, scope: !9074)
!9098 = !DILocation(line: 3304, column: 35, scope: !9074)
!9099 = !DILocation(line: 3304, column: 2, scope: !9074)
!9100 = !DILocation(line: 3306, column: 2, scope: !9074)
!9101 = !DILocation(line: 3306, column: 11, scope: !9074)
!9102 = !DILocation(line: 3306, column: 24, scope: !9074)
!9103 = !DILocation(line: 3308, column: 21, scope: !9074)
!9104 = !DILocation(line: 3308, column: 26, scope: !9074)
!9105 = !DILocation(line: 3308, column: 2, scope: !9074)
!9106 = !DILocation(line: 3309, column: 24, scope: !9074)
!9107 = !DILocation(line: 3309, column: 29, scope: !9074)
!9108 = !DILocation(line: 3309, column: 2, scope: !9074)
!9109 = !DILocation(line: 3310, column: 28, scope: !9074)
!9110 = !DILocation(line: 3310, column: 36, scope: !9074)
!9111 = !DILocation(line: 3310, column: 45, scope: !9074)
!9112 = !DILocation(line: 3310, column: 66, scope: !9074)
!9113 = !DILocation(line: 3311, column: 26, scope: !9074)
!9114 = !DILocation(line: 3310, column: 2, scope: !9074)
!9115 = !DILocation(line: 3313, column: 23, scope: !9074)
!9116 = !DILocation(line: 3313, column: 28, scope: !9074)
!9117 = !DILocation(line: 3313, column: 2, scope: !9074)
!9118 = !DILocation(line: 3314, column: 2, scope: !9074)
!9119 = !DILocation(line: 3314, column: 5, scope: !9074)
!9120 = !DILocation(line: 3314, column: 12, scope: !9074)
!9121 = !DILocation(line: 3314, column: 20, scope: !9074)
!9122 = !DILocation(line: 3316, column: 2, scope: !9074)
!9123 = !DILocation(line: 3317, column: 1, scope: !9074)
!9124 = distinct !DISubprogram(name: "ao_cancel", scope: !3, file: !3, line: 3419, type: !4109, scopeLine: 3420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9125 = !DILocalVariable(name: "dev", arg: 1, scope: !9124, file: !3, line: 3419, type: !324)
!9126 = !DILocation(line: 3419, column: 44, scope: !9124)
!9127 = !DILocalVariable(name: "s", arg: 2, scope: !9124, file: !3, line: 3419, type: !3995)
!9128 = !DILocation(line: 3419, column: 74, scope: !9124)
!9129 = !DILocalVariable(name: "devpriv", scope: !9124, file: !3, line: 3421, type: !4645)
!9130 = !DILocation(line: 3421, column: 27, scope: !9124)
!9131 = !DILocation(line: 3421, column: 37, scope: !9124)
!9132 = !DILocation(line: 3421, column: 42, scope: !9124)
!9133 = !DILocation(line: 3423, column: 14, scope: !9124)
!9134 = !DILocation(line: 3423, column: 23, scope: !9124)
!9135 = !DILocation(line: 3423, column: 35, scope: !9124)
!9136 = !DILocation(line: 3423, column: 2, scope: !9124)
!9137 = !DILocation(line: 3424, column: 12, scope: !9124)
!9138 = !DILocation(line: 3424, column: 2, scope: !9124)
!9139 = !DILocation(line: 3425, column: 2, scope: !9124)
!9140 = distinct !DISubprogram(name: "di_rbits", scope: !3, file: !3, line: 3440, type: !4092, scopeLine: 3442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9141 = !DILocalVariable(name: "dev", arg: 1, scope: !9140, file: !3, line: 3440, type: !324)
!9142 = !DILocation(line: 3440, column: 43, scope: !9140)
!9143 = !DILocalVariable(name: "s", arg: 2, scope: !9140, file: !3, line: 3440, type: !3995)
!9144 = !DILocation(line: 3440, column: 73, scope: !9140)
!9145 = !DILocalVariable(name: "insn", arg: 3, scope: !9140, file: !3, line: 3441, type: !4094)
!9146 = !DILocation(line: 3441, column: 27, scope: !9140)
!9147 = !DILocalVariable(name: "data", arg: 4, scope: !9140, file: !3, line: 3441, type: !2847)
!9148 = !DILocation(line: 3441, column: 47, scope: !9140)
!9149 = !DILocalVariable(name: "bits", scope: !9140, file: !3, line: 3443, type: !7)
!9150 = !DILocation(line: 3443, column: 15, scope: !9140)
!9151 = !DILocation(line: 3445, column: 15, scope: !9140)
!9152 = !DILocation(line: 3445, column: 20, scope: !9140)
!9153 = !DILocation(line: 3445, column: 25, scope: !9140)
!9154 = !DILocation(line: 3445, column: 9, scope: !9140)
!9155 = !DILocation(line: 3445, column: 7, scope: !9140)
!9156 = !DILocation(line: 3446, column: 7, scope: !9140)
!9157 = !DILocation(line: 3447, column: 12, scope: !9140)
!9158 = !DILocation(line: 3447, column: 2, scope: !9140)
!9159 = !DILocation(line: 3447, column: 10, scope: !9140)
!9160 = !DILocation(line: 3448, column: 2, scope: !9140)
!9161 = !DILocation(line: 3448, column: 10, scope: !9140)
!9162 = !DILocation(line: 3450, column: 9, scope: !9140)
!9163 = !DILocation(line: 3450, column: 15, scope: !9140)
!9164 = !DILocation(line: 3450, column: 2, scope: !9140)
!9165 = distinct !DISubprogram(name: "do_wbits", scope: !3, file: !3, line: 3453, type: !4092, scopeLine: 3457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9166 = !DILocalVariable(name: "dev", arg: 1, scope: !9165, file: !3, line: 3453, type: !324)
!9167 = !DILocation(line: 3453, column: 43, scope: !9165)
!9168 = !DILocalVariable(name: "s", arg: 2, scope: !9165, file: !3, line: 3454, type: !3995)
!9169 = !DILocation(line: 3454, column: 32, scope: !9165)
!9170 = !DILocalVariable(name: "insn", arg: 3, scope: !9165, file: !3, line: 3455, type: !4094)
!9171 = !DILocation(line: 3455, column: 27, scope: !9165)
!9172 = !DILocalVariable(name: "data", arg: 4, scope: !9165, file: !3, line: 3456, type: !2847)
!9173 = !DILocation(line: 3456, column: 21, scope: !9165)
!9174 = !DILocation(line: 3458, column: 30, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 3458, column: 6)
!9176 = !DILocation(line: 3458, column: 33, scope: !9175)
!9177 = !DILocation(line: 3458, column: 6, scope: !9175)
!9178 = !DILocation(line: 3458, column: 6, scope: !9165)
!9179 = !DILocation(line: 3459, column: 10, scope: !9175)
!9180 = !DILocation(line: 3459, column: 13, scope: !9175)
!9181 = !DILocation(line: 3459, column: 20, scope: !9175)
!9182 = !DILocation(line: 3459, column: 25, scope: !9175)
!9183 = !DILocation(line: 3459, column: 30, scope: !9175)
!9184 = !DILocation(line: 3459, column: 3, scope: !9175)
!9185 = !DILocation(line: 3461, column: 12, scope: !9165)
!9186 = !DILocation(line: 3461, column: 15, scope: !9165)
!9187 = !DILocation(line: 3461, column: 2, scope: !9165)
!9188 = !DILocation(line: 3461, column: 10, scope: !9165)
!9189 = !DILocation(line: 3463, column: 9, scope: !9165)
!9190 = !DILocation(line: 3463, column: 15, scope: !9165)
!9191 = !DILocation(line: 3463, column: 2, scope: !9165)
!9192 = distinct !DISubprogram(name: "dio_callback_4020", scope: !3, file: !3, line: 3428, type: !9193, scopeLine: 3430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9193 = !DISubroutineType(types: !9194)
!9194 = !{!323, !324, !323, !323, !323, !364}
!9195 = !DILocalVariable(name: "dev", arg: 1, scope: !9192, file: !3, line: 3428, type: !324)
!9196 = !DILocation(line: 3428, column: 52, scope: !9192)
!9197 = !DILocalVariable(name: "dir", arg: 2, scope: !9192, file: !3, line: 3429, type: !323)
!9198 = !DILocation(line: 3429, column: 13, scope: !9192)
!9199 = !DILocalVariable(name: "port", arg: 3, scope: !9192, file: !3, line: 3429, type: !323)
!9200 = !DILocation(line: 3429, column: 22, scope: !9192)
!9201 = !DILocalVariable(name: "data", arg: 4, scope: !9192, file: !3, line: 3429, type: !323)
!9202 = !DILocation(line: 3429, column: 32, scope: !9192)
!9203 = !DILocalVariable(name: "iobase", arg: 5, scope: !9192, file: !3, line: 3429, type: !364)
!9204 = !DILocation(line: 3429, column: 52, scope: !9192)
!9205 = !DILocalVariable(name: "devpriv", scope: !9192, file: !3, line: 3431, type: !4645)
!9206 = !DILocation(line: 3431, column: 27, scope: !9192)
!9207 = !DILocation(line: 3431, column: 37, scope: !9192)
!9208 = !DILocation(line: 3431, column: 42, scope: !9192)
!9209 = !DILocation(line: 3433, column: 6, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9192, file: !3, line: 3433, column: 6)
!9211 = !DILocation(line: 3433, column: 6, scope: !9192)
!9212 = !DILocation(line: 3434, column: 10, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9210, file: !3, line: 3433, column: 11)
!9214 = !DILocation(line: 3434, column: 16, scope: !9213)
!9215 = !DILocation(line: 3434, column: 25, scope: !9213)
!9216 = !DILocation(line: 3434, column: 39, scope: !9213)
!9217 = !DILocation(line: 3434, column: 37, scope: !9213)
!9218 = !DILocation(line: 3434, column: 52, scope: !9213)
!9219 = !DILocation(line: 3434, column: 50, scope: !9213)
!9220 = !DILocation(line: 3434, column: 46, scope: !9213)
!9221 = !DILocation(line: 3434, column: 3, scope: !9213)
!9222 = !DILocation(line: 3435, column: 3, scope: !9213)
!9223 = !DILocation(line: 3437, column: 15, scope: !9192)
!9224 = !DILocation(line: 3437, column: 24, scope: !9192)
!9225 = !DILocation(line: 3437, column: 38, scope: !9192)
!9226 = !DILocation(line: 3437, column: 36, scope: !9192)
!9227 = !DILocation(line: 3437, column: 51, scope: !9192)
!9228 = !DILocation(line: 3437, column: 49, scope: !9192)
!9229 = !DILocation(line: 3437, column: 45, scope: !9192)
!9230 = !DILocation(line: 3437, column: 9, scope: !9192)
!9231 = !DILocation(line: 3437, column: 2, scope: !9192)
!9232 = !DILocation(line: 3438, column: 1, scope: !9192)
!9233 = distinct !DISubprogram(name: "dio_60xx_config_insn", scope: !3, file: !3, line: 3466, type: !4092, scopeLine: 3470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9234 = !DILocalVariable(name: "dev", arg: 1, scope: !9233, file: !3, line: 3466, type: !324)
!9235 = !DILocation(line: 3466, column: 55, scope: !9233)
!9236 = !DILocalVariable(name: "s", arg: 2, scope: !9233, file: !3, line: 3467, type: !3995)
!9237 = !DILocation(line: 3467, column: 30, scope: !9233)
!9238 = !DILocalVariable(name: "insn", arg: 3, scope: !9233, file: !3, line: 3468, type: !4094)
!9239 = !DILocation(line: 3468, column: 25, scope: !9233)
!9240 = !DILocalVariable(name: "data", arg: 4, scope: !9233, file: !3, line: 3469, type: !2847)
!9241 = !DILocation(line: 3469, column: 19, scope: !9233)
!9242 = !DILocalVariable(name: "ret", scope: !9233, file: !3, line: 3471, type: !323)
!9243 = !DILocation(line: 3471, column: 6, scope: !9233)
!9244 = !DILocation(line: 3473, column: 31, scope: !9233)
!9245 = !DILocation(line: 3473, column: 36, scope: !9233)
!9246 = !DILocation(line: 3473, column: 39, scope: !9233)
!9247 = !DILocation(line: 3473, column: 45, scope: !9233)
!9248 = !DILocation(line: 3473, column: 8, scope: !9233)
!9249 = !DILocation(line: 3473, column: 6, scope: !9233)
!9250 = !DILocation(line: 3474, column: 6, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9233, file: !3, line: 3474, column: 6)
!9252 = !DILocation(line: 3474, column: 6, scope: !9233)
!9253 = !DILocation(line: 3475, column: 10, scope: !9251)
!9254 = !DILocation(line: 3475, column: 3, scope: !9251)
!9255 = !DILocation(line: 3477, column: 9, scope: !9233)
!9256 = !DILocation(line: 3477, column: 12, scope: !9233)
!9257 = !DILocation(line: 3477, column: 21, scope: !9233)
!9258 = !DILocation(line: 3477, column: 26, scope: !9233)
!9259 = !DILocation(line: 3477, column: 31, scope: !9233)
!9260 = !DILocation(line: 3477, column: 2, scope: !9233)
!9261 = !DILocation(line: 3479, column: 9, scope: !9233)
!9262 = !DILocation(line: 3479, column: 15, scope: !9233)
!9263 = !DILocation(line: 3479, column: 2, scope: !9233)
!9264 = !DILocation(line: 3480, column: 1, scope: !9233)
!9265 = distinct !DISubprogram(name: "dio_60xx_wbits", scope: !3, file: !3, line: 3482, type: !4092, scopeLine: 3486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9266 = !DILocalVariable(name: "dev", arg: 1, scope: !9265, file: !3, line: 3482, type: !324)
!9267 = !DILocation(line: 3482, column: 49, scope: !9265)
!9268 = !DILocalVariable(name: "s", arg: 2, scope: !9265, file: !3, line: 3483, type: !3995)
!9269 = !DILocation(line: 3483, column: 31, scope: !9265)
!9270 = !DILocalVariable(name: "insn", arg: 3, scope: !9265, file: !3, line: 3484, type: !4094)
!9271 = !DILocation(line: 3484, column: 26, scope: !9265)
!9272 = !DILocalVariable(name: "data", arg: 4, scope: !9265, file: !3, line: 3485, type: !2847)
!9273 = !DILocation(line: 3485, column: 20, scope: !9265)
!9274 = !DILocation(line: 3487, column: 30, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 3487, column: 6)
!9276 = !DILocation(line: 3487, column: 33, scope: !9275)
!9277 = !DILocation(line: 3487, column: 6, scope: !9275)
!9278 = !DILocation(line: 3487, column: 6, scope: !9265)
!9279 = !DILocation(line: 3488, column: 10, scope: !9275)
!9280 = !DILocation(line: 3488, column: 13, scope: !9275)
!9281 = !DILocation(line: 3488, column: 20, scope: !9275)
!9282 = !DILocation(line: 3488, column: 25, scope: !9275)
!9283 = !DILocation(line: 3488, column: 30, scope: !9275)
!9284 = !DILocation(line: 3488, column: 3, scope: !9275)
!9285 = !DILocation(line: 3490, column: 18, scope: !9265)
!9286 = !DILocation(line: 3490, column: 23, scope: !9265)
!9287 = !DILocation(line: 3490, column: 28, scope: !9265)
!9288 = !DILocation(line: 3490, column: 12, scope: !9265)
!9289 = !DILocation(line: 3490, column: 2, scope: !9265)
!9290 = !DILocation(line: 3490, column: 10, scope: !9265)
!9291 = !DILocation(line: 3492, column: 9, scope: !9265)
!9292 = !DILocation(line: 3492, column: 15, scope: !9265)
!9293 = !DILocation(line: 3492, column: 2, scope: !9265)
!9294 = distinct !DISubprogram(name: "cb_pcidas64_calib_insn_write", scope: !3, file: !3, line: 3628, type: !4092, scopeLine: 3632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9295 = !DILocalVariable(name: "dev", arg: 1, scope: !9294, file: !3, line: 3628, type: !324)
!9296 = !DILocation(line: 3628, column: 63, scope: !9294)
!9297 = !DILocalVariable(name: "s", arg: 2, scope: !9294, file: !3, line: 3629, type: !3995)
!9298 = !DILocation(line: 3629, column: 31, scope: !9294)
!9299 = !DILocalVariable(name: "insn", arg: 3, scope: !9294, file: !3, line: 3630, type: !4094)
!9300 = !DILocation(line: 3630, column: 26, scope: !9294)
!9301 = !DILocalVariable(name: "data", arg: 4, scope: !9294, file: !3, line: 3631, type: !2847)
!9302 = !DILocation(line: 3631, column: 20, scope: !9294)
!9303 = !DILocalVariable(name: "chan", scope: !9294, file: !3, line: 3633, type: !7)
!9304 = !DILocation(line: 3633, column: 15, scope: !9294)
!9305 = !DILocation(line: 3633, column: 22, scope: !9294)
!9306 = !DILocation(line: 3639, column: 6, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 3639, column: 6)
!9308 = !DILocation(line: 3639, column: 12, scope: !9307)
!9309 = !DILocation(line: 3639, column: 6, scope: !9294)
!9310 = !DILocalVariable(name: "val", scope: !9311, file: !3, line: 3640, type: !7)
!9311 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 3639, column: 15)
!9312 = !DILocation(line: 3640, column: 16, scope: !9311)
!9313 = !DILocation(line: 3640, column: 22, scope: !9311)
!9314 = !DILocation(line: 3640, column: 27, scope: !9311)
!9315 = !DILocation(line: 3640, column: 33, scope: !9311)
!9316 = !DILocation(line: 3640, column: 35, scope: !9311)
!9317 = !DILocation(line: 3642, column: 7, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 3642, column: 7)
!9319 = !DILocation(line: 3642, column: 10, scope: !9318)
!9320 = !DILocation(line: 3642, column: 19, scope: !9318)
!9321 = !DILocation(line: 3642, column: 28, scope: !9318)
!9322 = !DILocation(line: 3642, column: 25, scope: !9318)
!9323 = !DILocation(line: 3642, column: 7, scope: !9311)
!9324 = !DILocation(line: 3643, column: 17, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 3642, column: 33)
!9326 = !DILocation(line: 3643, column: 22, scope: !9325)
!9327 = !DILocation(line: 3643, column: 28, scope: !9325)
!9328 = !DILocation(line: 3643, column: 4, scope: !9325)
!9329 = !DILocation(line: 3644, column: 24, scope: !9325)
!9330 = !DILocation(line: 3644, column: 4, scope: !9325)
!9331 = !DILocation(line: 3644, column: 7, scope: !9325)
!9332 = !DILocation(line: 3644, column: 16, scope: !9325)
!9333 = !DILocation(line: 3644, column: 22, scope: !9325)
!9334 = !DILocation(line: 3645, column: 3, scope: !9325)
!9335 = !DILocation(line: 3646, column: 2, scope: !9311)
!9336 = !DILocation(line: 3648, column: 9, scope: !9294)
!9337 = !DILocation(line: 3648, column: 15, scope: !9294)
!9338 = !DILocation(line: 3648, column: 2, scope: !9294)
!9339 = distinct !DISubprogram(name: "caldac_write", scope: !3, file: !3, line: 3610, type: !4330, scopeLine: 3612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9340 = !DILocalVariable(name: "dev", arg: 1, scope: !9339, file: !3, line: 3610, type: !324)
!9341 = !DILocation(line: 3610, column: 48, scope: !9339)
!9342 = !DILocalVariable(name: "channel", arg: 2, scope: !9339, file: !3, line: 3610, type: !7)
!9343 = !DILocation(line: 3610, column: 66, scope: !9339)
!9344 = !DILocalVariable(name: "value", arg: 3, scope: !9339, file: !3, line: 3611, type: !7)
!9345 = !DILocation(line: 3611, column: 18, scope: !9339)
!9346 = !DILocalVariable(name: "board", scope: !9339, file: !3, line: 3613, type: !4755)
!9347 = !DILocation(line: 3613, column: 31, scope: !9339)
!9348 = !DILocation(line: 3613, column: 39, scope: !9339)
!9349 = !DILocation(line: 3613, column: 44, scope: !9339)
!9350 = !DILocation(line: 3615, column: 10, scope: !9339)
!9351 = !DILocation(line: 3615, column: 17, scope: !9339)
!9352 = !DILocation(line: 3615, column: 2, scope: !9339)
!9353 = !DILocation(line: 3618, column: 21, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9339, file: !3, line: 3615, column: 25)
!9355 = !DILocation(line: 3618, column: 26, scope: !9354)
!9356 = !DILocation(line: 3618, column: 35, scope: !9354)
!9357 = !DILocation(line: 3618, column: 3, scope: !9354)
!9358 = !DILocation(line: 3619, column: 3, scope: !9354)
!9359 = !DILocation(line: 3621, column: 20, scope: !9354)
!9360 = !DILocation(line: 3621, column: 25, scope: !9354)
!9361 = !DILocation(line: 3621, column: 34, scope: !9354)
!9362 = !DILocation(line: 3621, column: 3, scope: !9354)
!9363 = !DILocation(line: 3622, column: 3, scope: !9354)
!9364 = !DILocation(line: 3624, column: 3, scope: !9354)
!9365 = !DILocation(line: 3626, column: 1, scope: !9339)
!9366 = distinct !DISubprogram(name: "cb_pcidas64_ad8402_insn_write", scope: !3, file: !3, line: 3681, type: !4092, scopeLine: 3685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9367 = !DILocalVariable(name: "dev", arg: 1, scope: !9366, file: !3, line: 3681, type: !324)
!9368 = !DILocation(line: 3681, column: 64, scope: !9366)
!9369 = !DILocalVariable(name: "s", arg: 2, scope: !9366, file: !3, line: 3682, type: !3995)
!9370 = !DILocation(line: 3682, column: 32, scope: !9366)
!9371 = !DILocalVariable(name: "insn", arg: 3, scope: !9366, file: !3, line: 3683, type: !4094)
!9372 = !DILocation(line: 3683, column: 27, scope: !9366)
!9373 = !DILocalVariable(name: "data", arg: 4, scope: !9366, file: !3, line: 3684, type: !2847)
!9374 = !DILocation(line: 3684, column: 21, scope: !9366)
!9375 = !DILocalVariable(name: "chan", scope: !9366, file: !3, line: 3686, type: !7)
!9376 = !DILocation(line: 3686, column: 15, scope: !9366)
!9377 = !DILocation(line: 3686, column: 22, scope: !9366)
!9378 = !DILocation(line: 3692, column: 6, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 3692, column: 6)
!9380 = !DILocation(line: 3692, column: 12, scope: !9379)
!9381 = !DILocation(line: 3692, column: 6, scope: !9366)
!9382 = !DILocalVariable(name: "val", scope: !9383, file: !3, line: 3693, type: !7)
!9383 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 3692, column: 15)
!9384 = !DILocation(line: 3693, column: 16, scope: !9383)
!9385 = !DILocation(line: 3693, column: 22, scope: !9383)
!9386 = !DILocation(line: 3693, column: 27, scope: !9383)
!9387 = !DILocation(line: 3693, column: 33, scope: !9383)
!9388 = !DILocation(line: 3693, column: 35, scope: !9383)
!9389 = !DILocation(line: 3695, column: 7, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 3695, column: 7)
!9391 = !DILocation(line: 3695, column: 10, scope: !9390)
!9392 = !DILocation(line: 3695, column: 19, scope: !9390)
!9393 = !DILocation(line: 3695, column: 28, scope: !9390)
!9394 = !DILocation(line: 3695, column: 25, scope: !9390)
!9395 = !DILocation(line: 3695, column: 7, scope: !9383)
!9396 = !DILocation(line: 3696, column: 17, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 3695, column: 33)
!9398 = !DILocation(line: 3696, column: 22, scope: !9397)
!9399 = !DILocation(line: 3696, column: 28, scope: !9397)
!9400 = !DILocation(line: 3696, column: 4, scope: !9397)
!9401 = !DILocation(line: 3697, column: 24, scope: !9397)
!9402 = !DILocation(line: 3697, column: 4, scope: !9397)
!9403 = !DILocation(line: 3697, column: 7, scope: !9397)
!9404 = !DILocation(line: 3697, column: 16, scope: !9397)
!9405 = !DILocation(line: 3697, column: 22, scope: !9397)
!9406 = !DILocation(line: 3698, column: 3, scope: !9397)
!9407 = !DILocation(line: 3699, column: 2, scope: !9383)
!9408 = !DILocation(line: 3701, column: 9, scope: !9366)
!9409 = !DILocation(line: 3701, column: 15, scope: !9366)
!9410 = !DILocation(line: 3701, column: 2, scope: !9366)
!9411 = !DILocalVariable(name: "dev", arg: 1, scope: !4329, file: !3, line: 3651, type: !324)
!9412 = !DILocation(line: 3651, column: 48, scope: !4329)
!9413 = !DILocalVariable(name: "channel", arg: 2, scope: !4329, file: !3, line: 3651, type: !7)
!9414 = !DILocation(line: 3651, column: 66, scope: !4329)
!9415 = !DILocalVariable(name: "value", arg: 3, scope: !4329, file: !3, line: 3652, type: !7)
!9416 = !DILocation(line: 3652, column: 18, scope: !4329)
!9417 = !DILocalVariable(name: "devpriv", scope: !4329, file: !3, line: 3654, type: !4645)
!9418 = !DILocation(line: 3654, column: 27, scope: !4329)
!9419 = !DILocation(line: 3654, column: 37, scope: !4329)
!9420 = !DILocation(line: 3654, column: 42, scope: !4329)
!9421 = !DILocalVariable(name: "bit", scope: !4329, file: !3, line: 3656, type: !7)
!9422 = !DILocation(line: 3656, column: 15, scope: !4329)
!9423 = !DILocalVariable(name: "register_bits", scope: !4329, file: !3, line: 3656, type: !7)
!9424 = !DILocation(line: 3656, column: 20, scope: !4329)
!9425 = !DILocalVariable(name: "bitstream", scope: !4329, file: !3, line: 3657, type: !7)
!9426 = !DILocation(line: 3657, column: 15, scope: !4329)
!9427 = !DILocation(line: 3657, column: 29, scope: !4329)
!9428 = !DILocation(line: 3657, column: 37, scope: !4329)
!9429 = !DILocation(line: 3657, column: 44, scope: !4329)
!9430 = !DILocation(line: 3657, column: 53, scope: !4329)
!9431 = !DILocation(line: 3657, column: 59, scope: !4329)
!9432 = !DILocation(line: 3657, column: 50, scope: !4329)
!9433 = !DILocation(line: 3660, column: 16, scope: !4329)
!9434 = !DILocation(line: 3661, column: 2, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9436, file: !3, line: 3661, column: 2)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 3661, column: 2)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 3661, column: 2)
!9438 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 3661, column: 2)
!9439 = !DILocation(line: 3662, column: 9, scope: !4329)
!9440 = !DILocation(line: 3662, column: 24, scope: !4329)
!9441 = !DILocation(line: 3662, column: 33, scope: !4329)
!9442 = !DILocation(line: 3662, column: 45, scope: !4329)
!9443 = !DILocation(line: 3662, column: 2, scope: !4329)
!9444 = !DILocation(line: 3664, column: 11, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 3664, column: 2)
!9446 = !DILocation(line: 3664, column: 7, scope: !9445)
!9447 = !DILocation(line: 3664, column: 42, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 3664, column: 2)
!9449 = !DILocation(line: 3664, column: 2, scope: !9445)
!9450 = !DILocation(line: 3665, column: 7, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 3665, column: 7)
!9452 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 3664, column: 58)
!9453 = !DILocation(line: 3665, column: 19, scope: !9451)
!9454 = !DILocation(line: 3665, column: 17, scope: !9451)
!9455 = !DILocation(line: 3665, column: 7, scope: !9452)
!9456 = !DILocation(line: 3666, column: 18, scope: !9451)
!9457 = !DILocation(line: 3666, column: 4, scope: !9451)
!9458 = !DILocation(line: 3668, column: 18, scope: !9451)
!9459 = !DILocation(line: 3669, column: 3, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9461, file: !3, line: 3669, column: 3)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 3669, column: 3)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !3, line: 3669, column: 3)
!9463 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 3669, column: 3)
!9464 = !DILocation(line: 3670, column: 10, scope: !9452)
!9465 = !DILocation(line: 3670, column: 25, scope: !9452)
!9466 = !DILocation(line: 3670, column: 34, scope: !9452)
!9467 = !DILocation(line: 3670, column: 46, scope: !9452)
!9468 = !DILocation(line: 3670, column: 3, scope: !9452)
!9469 = !DILocation(line: 3671, column: 3, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9471, file: !3, line: 3671, column: 3)
!9471 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 3671, column: 3)
!9472 = distinct !DILexicalBlock(scope: !9473, file: !3, line: 3671, column: 3)
!9473 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 3671, column: 3)
!9474 = !DILocation(line: 3672, column: 10, scope: !9452)
!9475 = !DILocation(line: 3672, column: 24, scope: !9452)
!9476 = !DILocation(line: 3673, column: 10, scope: !9452)
!9477 = !DILocation(line: 3673, column: 19, scope: !9452)
!9478 = !DILocation(line: 3673, column: 31, scope: !9452)
!9479 = !DILocation(line: 3672, column: 3, scope: !9452)
!9480 = !DILocation(line: 3674, column: 2, scope: !9452)
!9481 = !DILocation(line: 3664, column: 51, scope: !9448)
!9482 = !DILocation(line: 3664, column: 2, scope: !9448)
!9483 = distinct !{!9483, !9449, !9484}
!9484 = !DILocation(line: 3674, column: 2, scope: !9445)
!9485 = !DILocation(line: 3676, column: 2, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 3676, column: 2)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 3676, column: 2)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 3676, column: 2)
!9489 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 3676, column: 2)
!9490 = !DILocation(line: 3677, column: 12, scope: !4329)
!9491 = !DILocation(line: 3677, column: 21, scope: !4329)
!9492 = !DILocation(line: 3677, column: 33, scope: !4329)
!9493 = !DILocation(line: 3677, column: 2, scope: !4329)
!9494 = !DILocation(line: 3678, column: 1, scope: !4329)
!9495 = distinct !DISubprogram(name: "eeprom_read_insn", scope: !3, file: !3, line: 3767, type: !4092, scopeLine: 3770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9496 = !DILocalVariable(name: "dev", arg: 1, scope: !9495, file: !3, line: 3767, type: !324)
!9497 = !DILocation(line: 3767, column: 51, scope: !9495)
!9498 = !DILocalVariable(name: "s", arg: 2, scope: !9495, file: !3, line: 3768, type: !3995)
!9499 = !DILocation(line: 3768, column: 33, scope: !9495)
!9500 = !DILocalVariable(name: "insn", arg: 3, scope: !9495, file: !3, line: 3769, type: !4094)
!9501 = !DILocation(line: 3769, column: 28, scope: !9495)
!9502 = !DILocalVariable(name: "data", arg: 4, scope: !9495, file: !3, line: 3769, type: !2847)
!9503 = !DILocation(line: 3769, column: 48, scope: !9495)
!9504 = !DILocalVariable(name: "val", scope: !9495, file: !3, line: 3771, type: !7)
!9505 = !DILocation(line: 3771, column: 15, scope: !9495)
!9506 = !DILocalVariable(name: "i", scope: !9495, file: !3, line: 3772, type: !7)
!9507 = !DILocation(line: 3772, column: 15, scope: !9495)
!9508 = !DILocation(line: 3774, column: 6, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 3774, column: 6)
!9510 = !DILocation(line: 3774, column: 12, scope: !9509)
!9511 = !DILocation(line: 3774, column: 6, scope: !9495)
!9512 = !DILocation(line: 3776, column: 21, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 3774, column: 15)
!9514 = !DILocation(line: 3776, column: 26, scope: !9513)
!9515 = !DILocation(line: 3776, column: 9, scope: !9513)
!9516 = !DILocation(line: 3776, column: 7, scope: !9513)
!9517 = !DILocation(line: 3777, column: 10, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9513, file: !3, line: 3777, column: 3)
!9519 = !DILocation(line: 3777, column: 8, scope: !9518)
!9520 = !DILocation(line: 3777, column: 15, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 3777, column: 3)
!9522 = !DILocation(line: 3777, column: 19, scope: !9521)
!9523 = !DILocation(line: 3777, column: 25, scope: !9521)
!9524 = !DILocation(line: 3777, column: 17, scope: !9521)
!9525 = !DILocation(line: 3777, column: 3, scope: !9518)
!9526 = !DILocation(line: 3778, column: 14, scope: !9521)
!9527 = !DILocation(line: 3778, column: 4, scope: !9521)
!9528 = !DILocation(line: 3778, column: 9, scope: !9521)
!9529 = !DILocation(line: 3778, column: 12, scope: !9521)
!9530 = !DILocation(line: 3777, column: 29, scope: !9521)
!9531 = !DILocation(line: 3777, column: 3, scope: !9521)
!9532 = distinct !{!9532, !9525, !9533}
!9533 = !DILocation(line: 3778, column: 14, scope: !9518)
!9534 = !DILocation(line: 3779, column: 2, scope: !9513)
!9535 = !DILocation(line: 3781, column: 9, scope: !9495)
!9536 = !DILocation(line: 3781, column: 15, scope: !9495)
!9537 = !DILocation(line: 3781, column: 2, scope: !9495)
!9538 = distinct !DISubprogram(name: "adc_src_bits", scope: !3, file: !3, line: 312, type: !9539, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9539 = !DISubroutineType(types: !9540)
!9540 = !{!1025, !7}
!9541 = !DILocalVariable(name: "source", arg: 1, scope: !9538, file: !3, line: 312, type: !7)
!9542 = !DILocation(line: 312, column: 45, scope: !9538)
!9543 = !DILocation(line: 314, column: 10, scope: !9538)
!9544 = !DILocation(line: 314, column: 17, scope: !9538)
!9545 = !DILocation(line: 314, column: 24, scope: !9538)
!9546 = !DILocation(line: 314, column: 9, scope: !9538)
!9547 = !DILocation(line: 314, column: 2, scope: !9538)
!9548 = distinct !DISubprogram(name: "ai_range_bits_6xxx", scope: !3, file: !3, line: 1178, type: !9549, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9549 = !DISubroutineType(types: !9550)
!9550 = !{!7, !5324, !7}
!9551 = !DILocalVariable(name: "dev", arg: 1, scope: !9548, file: !3, line: 1178, type: !5324)
!9552 = !DILocation(line: 1178, column: 68, scope: !9548)
!9553 = !DILocalVariable(name: "range_index", arg: 2, scope: !9548, file: !3, line: 1179, type: !7)
!9554 = !DILocation(line: 1179, column: 25, scope: !9548)
!9555 = !DILocalVariable(name: "board", scope: !9548, file: !3, line: 1181, type: !4755)
!9556 = !DILocation(line: 1181, column: 31, scope: !9548)
!9557 = !DILocation(line: 1181, column: 39, scope: !9548)
!9558 = !DILocation(line: 1181, column: 44, scope: !9548)
!9559 = !DILocation(line: 1183, column: 9, scope: !9548)
!9560 = !DILocation(line: 1183, column: 16, scope: !9548)
!9561 = !DILocation(line: 1183, column: 30, scope: !9548)
!9562 = !DILocation(line: 1183, column: 43, scope: !9548)
!9563 = !DILocation(line: 1183, column: 2, scope: !9548)
!9564 = distinct !DISubprogram(name: "se_diff_bit_6xxx", scope: !3, file: !3, line: 1098, type: !9565, scopeLine: 1100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9565 = !DISubroutineType(types: !9566)
!9566 = !{!482, !324, !323}
!9567 = !DILocalVariable(name: "dev", arg: 1, scope: !9564, file: !3, line: 1098, type: !324)
!9568 = !DILocation(line: 1098, column: 69, scope: !9564)
!9569 = !DILocalVariable(name: "use_differential", arg: 2, scope: !9564, file: !3, line: 1099, type: !323)
!9570 = !DILocation(line: 1099, column: 16, scope: !9564)
!9571 = !DILocalVariable(name: "board", scope: !9564, file: !3, line: 1101, type: !4755)
!9572 = !DILocation(line: 1101, column: 31, scope: !9564)
!9573 = !DILocation(line: 1101, column: 39, scope: !9564)
!9574 = !DILocation(line: 1101, column: 44, scope: !9564)
!9575 = !DILocation(line: 1103, column: 7, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 1103, column: 6)
!9577 = !DILocation(line: 1103, column: 14, scope: !9576)
!9578 = !DILocation(line: 1103, column: 21, scope: !9576)
!9579 = !DILocation(line: 1103, column: 36, scope: !9576)
!9580 = !DILocation(line: 1103, column: 40, scope: !9576)
!9581 = !DILocation(line: 1103, column: 58, scope: !9576)
!9582 = !DILocation(line: 1104, column: 7, scope: !9576)
!9583 = !DILocation(line: 1104, column: 14, scope: !9576)
!9584 = !DILocation(line: 1104, column: 21, scope: !9576)
!9585 = !DILocation(line: 1104, column: 36, scope: !9576)
!9586 = !DILocation(line: 1104, column: 39, scope: !9576)
!9587 = !DILocation(line: 1103, column: 6, scope: !9564)
!9588 = !DILocation(line: 1105, column: 3, scope: !9576)
!9589 = !DILocation(line: 1107, column: 2, scope: !9564)
!9590 = !DILocation(line: 1108, column: 1, scope: !9564)
!9591 = distinct !DISubprogram(name: "adc_chan_bits", scope: !3, file: !3, line: 331, type: !9539, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9592 = !DILocalVariable(name: "channel", arg: 1, scope: !9591, file: !3, line: 331, type: !7)
!9593 = !DILocation(line: 331, column: 46, scope: !9591)
!9594 = !DILocation(line: 333, column: 9, scope: !9591)
!9595 = !DILocation(line: 333, column: 17, scope: !9591)
!9596 = !DILocation(line: 333, column: 2, scope: !9591)
!9597 = distinct !DISubprogram(name: "adc_convert_chan_4020_bits", scope: !3, file: !3, line: 317, type: !9539, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9598 = !DILocalVariable(name: "channel", arg: 1, scope: !9597, file: !3, line: 317, type: !7)
!9599 = !DILocation(line: 317, column: 59, scope: !9597)
!9600 = !DILocation(line: 319, column: 10, scope: !9597)
!9601 = !DILocation(line: 319, column: 18, scope: !9597)
!9602 = !DILocation(line: 319, column: 25, scope: !9597)
!9603 = !DILocation(line: 319, column: 9, scope: !9597)
!9604 = !DILocation(line: 319, column: 2, scope: !9597)
!9605 = distinct !DISubprogram(name: "cb_pcidas64_ai_eoc", scope: !3, file: !3, line: 1731, type: !9606, scopeLine: 1735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9606 = !DISubroutineType(types: !9607)
!9607 = !{!323, !324, !3995, !4094, !364}
!9608 = !DILocalVariable(name: "dev", arg: 1, scope: !9605, file: !3, line: 1731, type: !324)
!9609 = !DILocation(line: 1731, column: 53, scope: !9605)
!9610 = !DILocalVariable(name: "s", arg: 2, scope: !9605, file: !3, line: 1732, type: !3995)
!9611 = !DILocation(line: 1732, column: 35, scope: !9605)
!9612 = !DILocalVariable(name: "insn", arg: 3, scope: !9605, file: !3, line: 1733, type: !4094)
!9613 = !DILocation(line: 1733, column: 30, scope: !9605)
!9614 = !DILocalVariable(name: "context", arg: 4, scope: !9605, file: !3, line: 1734, type: !364)
!9615 = !DILocation(line: 1734, column: 24, scope: !9605)
!9616 = !DILocalVariable(name: "board", scope: !9605, file: !3, line: 1736, type: !4755)
!9617 = !DILocation(line: 1736, column: 31, scope: !9605)
!9618 = !DILocation(line: 1736, column: 39, scope: !9605)
!9619 = !DILocation(line: 1736, column: 44, scope: !9605)
!9620 = !DILocalVariable(name: "devpriv", scope: !9605, file: !3, line: 1737, type: !4645)
!9621 = !DILocation(line: 1737, column: 27, scope: !9605)
!9622 = !DILocation(line: 1737, column: 37, scope: !9605)
!9623 = !DILocation(line: 1737, column: 42, scope: !9605)
!9624 = !DILocalVariable(name: "status", scope: !9605, file: !3, line: 1738, type: !7)
!9625 = !DILocation(line: 1738, column: 15, scope: !9605)
!9626 = !DILocation(line: 1740, column: 17, scope: !9605)
!9627 = !DILocation(line: 1740, column: 26, scope: !9605)
!9628 = !DILocation(line: 1740, column: 38, scope: !9605)
!9629 = !DILocation(line: 1740, column: 11, scope: !9605)
!9630 = !DILocation(line: 1740, column: 9, scope: !9605)
!9631 = !DILocation(line: 1741, column: 6, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 1741, column: 6)
!9633 = !DILocation(line: 1741, column: 13, scope: !9632)
!9634 = !DILocation(line: 1741, column: 20, scope: !9632)
!9635 = !DILocation(line: 1741, column: 6, scope: !9605)
!9636 = !DILocation(line: 1742, column: 18, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 1741, column: 36)
!9638 = !DILocation(line: 1742, column: 27, scope: !9637)
!9639 = !DILocation(line: 1742, column: 39, scope: !9637)
!9640 = !DILocation(line: 1742, column: 12, scope: !9637)
!9641 = !DILocation(line: 1742, column: 10, scope: !9637)
!9642 = !DILocation(line: 1743, column: 7, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 1743, column: 7)
!9644 = !DILocation(line: 1743, column: 7, scope: !9637)
!9645 = !DILocation(line: 1744, column: 4, scope: !9643)
!9646 = !DILocation(line: 1745, column: 2, scope: !9637)
!9647 = !DILocation(line: 1746, column: 22, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9649, file: !3, line: 1746, column: 7)
!9649 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 1745, column: 9)
!9650 = !DILocation(line: 1746, column: 7, scope: !9648)
!9651 = !DILocation(line: 1746, column: 7, scope: !9649)
!9652 = !DILocation(line: 1747, column: 4, scope: !9648)
!9653 = !DILocation(line: 1749, column: 2, scope: !9605)
!9654 = !DILocation(line: 1750, column: 1, scope: !9605)
!9655 = distinct !DISubprogram(name: "pipe_full_bits", scope: !3, file: !3, line: 378, type: !9656, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9656 = !DISubroutineType(types: !9657)
!9657 = !{!1025, !1025}
!9658 = !DILocalVariable(name: "hw_status_bits", arg: 1, scope: !9655, file: !3, line: 378, type: !1025)
!9659 = !DILocation(line: 378, column: 38, scope: !9655)
!9660 = !DILocation(line: 380, column: 10, scope: !9655)
!9661 = !DILocation(line: 380, column: 25, scope: !9655)
!9662 = !DILocation(line: 380, column: 32, scope: !9655)
!9663 = !DILocation(line: 380, column: 9, scope: !9655)
!9664 = !DILocation(line: 380, column: 2, scope: !9655)
!9665 = distinct !DISubprogram(name: "ai_config_calibration_source", scope: !3, file: !3, line: 1879, type: !9666, scopeLine: 1881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9666 = !DISubroutineType(types: !9667)
!9667 = !{!323, !324, !2847}
!9668 = !DILocalVariable(name: "dev", arg: 1, scope: !9665, file: !3, line: 1879, type: !324)
!9669 = !DILocation(line: 1879, column: 63, scope: !9665)
!9670 = !DILocalVariable(name: "data", arg: 2, scope: !9665, file: !3, line: 1880, type: !2847)
!9671 = !DILocation(line: 1880, column: 20, scope: !9665)
!9672 = !DILocalVariable(name: "board", scope: !9665, file: !3, line: 1882, type: !4755)
!9673 = !DILocation(line: 1882, column: 31, scope: !9665)
!9674 = !DILocation(line: 1882, column: 39, scope: !9665)
!9675 = !DILocation(line: 1882, column: 44, scope: !9665)
!9676 = !DILocalVariable(name: "devpriv", scope: !9665, file: !3, line: 1883, type: !4645)
!9677 = !DILocation(line: 1883, column: 27, scope: !9665)
!9678 = !DILocation(line: 1883, column: 37, scope: !9665)
!9679 = !DILocation(line: 1883, column: 42, scope: !9665)
!9680 = !DILocalVariable(name: "source", scope: !9665, file: !3, line: 1884, type: !7)
!9681 = !DILocation(line: 1884, column: 15, scope: !9665)
!9682 = !DILocation(line: 1884, column: 24, scope: !9665)
!9683 = !DILocalVariable(name: "num_calibration_sources", scope: !9665, file: !3, line: 1885, type: !323)
!9684 = !DILocation(line: 1885, column: 6, scope: !9665)
!9685 = !DILocation(line: 1887, column: 6, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9665, file: !3, line: 1887, column: 6)
!9687 = !DILocation(line: 1887, column: 13, scope: !9686)
!9688 = !DILocation(line: 1887, column: 20, scope: !9686)
!9689 = !DILocation(line: 1887, column: 6, scope: !9665)
!9690 = !DILocation(line: 1888, column: 27, scope: !9686)
!9691 = !DILocation(line: 1888, column: 3, scope: !9686)
!9692 = !DILocation(line: 1890, column: 27, scope: !9686)
!9693 = !DILocation(line: 1891, column: 6, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9665, file: !3, line: 1891, column: 6)
!9695 = !DILocation(line: 1891, column: 16, scope: !9694)
!9696 = !DILocation(line: 1891, column: 13, scope: !9694)
!9697 = !DILocation(line: 1891, column: 6, scope: !9665)
!9698 = !DILocation(line: 1894, column: 3, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9694, file: !3, line: 1891, column: 41)
!9700 = !DILocation(line: 1897, column: 32, scope: !9665)
!9701 = !DILocation(line: 1897, column: 2, scope: !9665)
!9702 = !DILocation(line: 1897, column: 11, scope: !9665)
!9703 = !DILocation(line: 1897, column: 30, scope: !9665)
!9704 = !DILocation(line: 1899, column: 2, scope: !9665)
!9705 = !DILocation(line: 1900, column: 1, scope: !9665)
!9706 = distinct !DISubprogram(name: "ai_config_block_size", scope: !3, file: !3, line: 1902, type: !9666, scopeLine: 1903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9707 = !DILocalVariable(name: "dev", arg: 1, scope: !9706, file: !3, line: 1902, type: !324)
!9708 = !DILocation(line: 1902, column: 55, scope: !9706)
!9709 = !DILocalVariable(name: "data", arg: 2, scope: !9706, file: !3, line: 1902, type: !2847)
!9710 = !DILocation(line: 1902, column: 74, scope: !9706)
!9711 = !DILocalVariable(name: "board", scope: !9706, file: !3, line: 1904, type: !4755)
!9712 = !DILocation(line: 1904, column: 31, scope: !9706)
!9713 = !DILocation(line: 1904, column: 39, scope: !9706)
!9714 = !DILocation(line: 1904, column: 44, scope: !9706)
!9715 = !DILocalVariable(name: "fifo_size", scope: !9706, file: !3, line: 1905, type: !323)
!9716 = !DILocation(line: 1905, column: 6, scope: !9706)
!9717 = !DILocalVariable(name: "fifo", scope: !9706, file: !3, line: 1906, type: !4214)
!9718 = !DILocation(line: 1906, column: 35, scope: !9706)
!9719 = !DILocation(line: 1906, column: 42, scope: !9706)
!9720 = !DILocation(line: 1906, column: 49, scope: !9706)
!9721 = !DILocalVariable(name: "block_size", scope: !9706, file: !3, line: 1907, type: !7)
!9722 = !DILocation(line: 1907, column: 15, scope: !9706)
!9723 = !DILocalVariable(name: "requested_block_size", scope: !9706, file: !3, line: 1907, type: !7)
!9724 = !DILocation(line: 1907, column: 27, scope: !9706)
!9725 = !DILocalVariable(name: "retval", scope: !9706, file: !3, line: 1908, type: !323)
!9726 = !DILocation(line: 1908, column: 6, scope: !9706)
!9727 = !DILocation(line: 1910, column: 25, scope: !9706)
!9728 = !DILocation(line: 1910, column: 23, scope: !9706)
!9729 = !DILocation(line: 1912, column: 6, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 1912, column: 6)
!9731 = !DILocation(line: 1912, column: 6, scope: !9706)
!9732 = !DILocation(line: 1913, column: 15, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9730, file: !3, line: 1912, column: 28)
!9734 = !DILocation(line: 1913, column: 38, scope: !9733)
!9735 = !DILocation(line: 1913, column: 44, scope: !9733)
!9736 = !DILocation(line: 1913, column: 36, scope: !9733)
!9737 = !DILocation(line: 1913, column: 57, scope: !9733)
!9738 = !DILocation(line: 1913, column: 13, scope: !9733)
!9739 = !DILocation(line: 1916, column: 29, scope: !9733)
!9740 = !DILocation(line: 1916, column: 34, scope: !9733)
!9741 = !DILocation(line: 1916, column: 12, scope: !9733)
!9742 = !DILocation(line: 1916, column: 10, scope: !9733)
!9743 = !DILocation(line: 1917, column: 7, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9733, file: !3, line: 1917, column: 7)
!9745 = !DILocation(line: 1917, column: 14, scope: !9744)
!9746 = !DILocation(line: 1917, column: 7, scope: !9733)
!9747 = !DILocation(line: 1918, column: 11, scope: !9744)
!9748 = !DILocation(line: 1918, column: 4, scope: !9744)
!9749 = !DILocation(line: 1919, column: 2, scope: !9733)
!9750 = !DILocation(line: 1921, column: 28, scope: !9706)
!9751 = !DILocation(line: 1921, column: 15, scope: !9706)
!9752 = !DILocation(line: 1921, column: 35, scope: !9706)
!9753 = !DILocation(line: 1921, column: 41, scope: !9706)
!9754 = !DILocation(line: 1921, column: 33, scope: !9706)
!9755 = !DILocation(line: 1921, column: 54, scope: !9706)
!9756 = !DILocation(line: 1921, column: 13, scope: !9706)
!9757 = !DILocation(line: 1923, column: 12, scope: !9706)
!9758 = !DILocation(line: 1923, column: 2, scope: !9706)
!9759 = !DILocation(line: 1923, column: 10, scope: !9706)
!9760 = !DILocation(line: 1925, column: 2, scope: !9706)
!9761 = !DILocation(line: 1926, column: 1, scope: !9706)
!9762 = distinct !DISubprogram(name: "ai_config_master_clock", scope: !3, file: !3, line: 1955, type: !9666, scopeLine: 1956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9763 = !DILocalVariable(name: "dev", arg: 1, scope: !9762, file: !3, line: 1955, type: !324)
!9764 = !DILocation(line: 1955, column: 57, scope: !9762)
!9765 = !DILocalVariable(name: "data", arg: 2, scope: !9762, file: !3, line: 1955, type: !2847)
!9766 = !DILocation(line: 1955, column: 76, scope: !9762)
!9767 = !DILocalVariable(name: "board", scope: !9762, file: !3, line: 1957, type: !4755)
!9768 = !DILocation(line: 1957, column: 31, scope: !9762)
!9769 = !DILocation(line: 1957, column: 39, scope: !9762)
!9770 = !DILocation(line: 1957, column: 44, scope: !9762)
!9771 = !DILocation(line: 1959, column: 10, scope: !9762)
!9772 = !DILocation(line: 1959, column: 17, scope: !9762)
!9773 = !DILocation(line: 1959, column: 2, scope: !9762)
!9774 = !DILocation(line: 1961, column: 38, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9762, file: !3, line: 1959, column: 25)
!9776 = !DILocation(line: 1961, column: 43, scope: !9775)
!9777 = !DILocation(line: 1961, column: 10, scope: !9775)
!9778 = !DILocation(line: 1961, column: 3, scope: !9775)
!9779 = !DILocation(line: 1963, column: 3, scope: !9775)
!9780 = !DILocation(line: 1967, column: 1, scope: !9762)
!9781 = distinct !DISubprogram(name: "set_ai_fifo_size", scope: !3, file: !3, line: 1396, type: !4286, scopeLine: 1397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9782 = !DILocalVariable(name: "dev", arg: 1, scope: !9781, file: !3, line: 1396, type: !324)
!9783 = !DILocation(line: 1396, column: 51, scope: !9781)
!9784 = !DILocalVariable(name: "num_samples", arg: 2, scope: !9781, file: !3, line: 1396, type: !7)
!9785 = !DILocation(line: 1396, column: 69, scope: !9781)
!9786 = !DILocalVariable(name: "board", scope: !9781, file: !3, line: 1398, type: !4755)
!9787 = !DILocation(line: 1398, column: 31, scope: !9781)
!9788 = !DILocation(line: 1398, column: 39, scope: !9781)
!9789 = !DILocation(line: 1398, column: 44, scope: !9781)
!9790 = !DILocalVariable(name: "num_fifo_entries", scope: !9781, file: !3, line: 1399, type: !7)
!9791 = !DILocation(line: 1399, column: 15, scope: !9781)
!9792 = !DILocalVariable(name: "retval", scope: !9781, file: !3, line: 1400, type: !323)
!9793 = !DILocation(line: 1400, column: 6, scope: !9781)
!9794 = !DILocalVariable(name: "fifo", scope: !9781, file: !3, line: 1401, type: !4214)
!9795 = !DILocation(line: 1401, column: 35, scope: !9781)
!9796 = !DILocation(line: 1401, column: 42, scope: !9781)
!9797 = !DILocation(line: 1401, column: 49, scope: !9781)
!9798 = !DILocation(line: 1403, column: 21, scope: !9781)
!9799 = !DILocation(line: 1403, column: 35, scope: !9781)
!9800 = !DILocation(line: 1403, column: 41, scope: !9781)
!9801 = !DILocation(line: 1403, column: 33, scope: !9781)
!9802 = !DILocation(line: 1403, column: 19, scope: !9781)
!9803 = !DILocation(line: 1405, column: 38, scope: !9781)
!9804 = !DILocation(line: 1406, column: 10, scope: !9781)
!9805 = !DILocation(line: 1407, column: 10, scope: !9781)
!9806 = !DILocation(line: 1407, column: 16, scope: !9781)
!9807 = !DILocation(line: 1406, column: 27, scope: !9781)
!9808 = !DILocation(line: 1405, column: 11, scope: !9781)
!9809 = !DILocation(line: 1405, column: 9, scope: !9781)
!9810 = !DILocation(line: 1408, column: 6, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9781, file: !3, line: 1408, column: 6)
!9812 = !DILocation(line: 1408, column: 13, scope: !9811)
!9813 = !DILocation(line: 1408, column: 6, scope: !9781)
!9814 = !DILocation(line: 1409, column: 10, scope: !9811)
!9815 = !DILocation(line: 1409, column: 3, scope: !9811)
!9816 = !DILocation(line: 1411, column: 9, scope: !9781)
!9817 = !DILocation(line: 1411, column: 18, scope: !9781)
!9818 = !DILocation(line: 1411, column: 24, scope: !9781)
!9819 = !DILocation(line: 1411, column: 16, scope: !9781)
!9820 = !DILocation(line: 1411, column: 39, scope: !9781)
!9821 = !DILocation(line: 1411, column: 45, scope: !9781)
!9822 = !DILocation(line: 1411, column: 37, scope: !9781)
!9823 = !DILocation(line: 1411, column: 2, scope: !9781)
!9824 = !DILocation(line: 1412, column: 1, scope: !9781)
!9825 = distinct !DISubprogram(name: "ai_fifo_size", scope: !3, file: !3, line: 1415, type: !7077, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9826 = !DILocalVariable(name: "dev", arg: 1, scope: !9825, file: !3, line: 1415, type: !324)
!9827 = !DILocation(line: 1415, column: 56, scope: !9825)
!9828 = !DILocalVariable(name: "board", scope: !9825, file: !3, line: 1417, type: !4755)
!9829 = !DILocation(line: 1417, column: 31, scope: !9825)
!9830 = !DILocation(line: 1417, column: 39, scope: !9825)
!9831 = !DILocation(line: 1417, column: 44, scope: !9825)
!9832 = !DILocalVariable(name: "devpriv", scope: !9825, file: !3, line: 1418, type: !4645)
!9833 = !DILocation(line: 1418, column: 27, scope: !9825)
!9834 = !DILocation(line: 1418, column: 37, scope: !9825)
!9835 = !DILocation(line: 1418, column: 42, scope: !9825)
!9836 = !DILocation(line: 1420, column: 9, scope: !9825)
!9837 = !DILocation(line: 1420, column: 18, scope: !9825)
!9838 = !DILocation(line: 1421, column: 9, scope: !9825)
!9839 = !DILocation(line: 1421, column: 16, scope: !9825)
!9840 = !DILocation(line: 1421, column: 25, scope: !9825)
!9841 = !DILocation(line: 1420, column: 41, scope: !9825)
!9842 = !DILocation(line: 1422, column: 9, scope: !9825)
!9843 = !DILocation(line: 1422, column: 16, scope: !9825)
!9844 = !DILocation(line: 1422, column: 25, scope: !9825)
!9845 = !DILocation(line: 1421, column: 38, scope: !9825)
!9846 = !DILocation(line: 1420, column: 2, scope: !9825)
!9847 = distinct !DISubprogram(name: "ai_config_master_clock_4020", scope: !3, file: !3, line: 1928, type: !9666, scopeLine: 1930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9848 = !DILocalVariable(name: "dev", arg: 1, scope: !9847, file: !3, line: 1928, type: !324)
!9849 = !DILocation(line: 1928, column: 62, scope: !9847)
!9850 = !DILocalVariable(name: "data", arg: 2, scope: !9847, file: !3, line: 1929, type: !2847)
!9851 = !DILocation(line: 1929, column: 26, scope: !9847)
!9852 = !DILocalVariable(name: "devpriv", scope: !9847, file: !3, line: 1931, type: !4645)
!9853 = !DILocation(line: 1931, column: 27, scope: !9847)
!9854 = !DILocation(line: 1931, column: 37, scope: !9847)
!9855 = !DILocation(line: 1931, column: 42, scope: !9847)
!9856 = !DILocalVariable(name: "divisor", scope: !9847, file: !3, line: 1932, type: !7)
!9857 = !DILocation(line: 1932, column: 15, scope: !9847)
!9858 = !DILocation(line: 1932, column: 25, scope: !9847)
!9859 = !DILocalVariable(name: "retval", scope: !9847, file: !3, line: 1933, type: !323)
!9860 = !DILocation(line: 1933, column: 6, scope: !9847)
!9861 = !DILocation(line: 1935, column: 6, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1935, column: 6)
!9863 = !DILocation(line: 1935, column: 14, scope: !9862)
!9864 = !DILocation(line: 1935, column: 6, scope: !9847)
!9865 = !DILocation(line: 1936, column: 11, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9862, file: !3, line: 1935, column: 19)
!9867 = !DILocation(line: 1937, column: 10, scope: !9866)
!9868 = !DILocation(line: 1938, column: 2, scope: !9866)
!9869 = !DILocation(line: 1940, column: 10, scope: !9847)
!9870 = !DILocation(line: 1940, column: 2, scope: !9847)
!9871 = !DILocation(line: 1942, column: 32, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1940, column: 19)
!9873 = !DILocation(line: 1942, column: 3, scope: !9872)
!9874 = !DILocation(line: 1942, column: 12, scope: !9872)
!9875 = !DILocation(line: 1942, column: 22, scope: !9872)
!9876 = !DILocation(line: 1942, column: 30, scope: !9872)
!9877 = !DILocation(line: 1943, column: 33, scope: !9872)
!9878 = !DILocation(line: 1943, column: 3, scope: !9872)
!9879 = !DILocation(line: 1943, column: 12, scope: !9872)
!9880 = !DILocation(line: 1943, column: 22, scope: !9872)
!9881 = !DILocation(line: 1943, column: 31, scope: !9872)
!9882 = !DILocation(line: 1944, column: 3, scope: !9872)
!9883 = !DILocation(line: 1946, column: 3, scope: !9872)
!9884 = !DILocation(line: 1949, column: 12, scope: !9847)
!9885 = !DILocation(line: 1949, column: 2, scope: !9847)
!9886 = !DILocation(line: 1949, column: 10, scope: !9847)
!9887 = !DILocation(line: 1951, column: 9, scope: !9847)
!9888 = !DILocation(line: 1951, column: 18, scope: !9847)
!9889 = !DILocation(line: 1951, column: 2, scope: !9847)
!9890 = !DILocation(line: 1952, column: 1, scope: !9847)
!9891 = distinct !DISubprogram(name: "setup_channel_queue", scope: !3, file: !3, line: 2417, type: !9892, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!9892 = !DISubroutineType(types: !9893)
!9893 = !{!323, !324, !7325}
!9894 = !DILocalVariable(name: "dev", arg: 1, scope: !9891, file: !3, line: 2417, type: !324)
!9895 = !DILocation(line: 2417, column: 54, scope: !9891)
!9896 = !DILocalVariable(name: "cmd", arg: 2, scope: !9891, file: !3, line: 2418, type: !7325)
!9897 = !DILocation(line: 2418, column: 36, scope: !9891)
!9898 = !DILocalVariable(name: "board", scope: !9891, file: !3, line: 2420, type: !4755)
!9899 = !DILocation(line: 2420, column: 31, scope: !9891)
!9900 = !DILocation(line: 2420, column: 39, scope: !9891)
!9901 = !DILocation(line: 2420, column: 44, scope: !9891)
!9902 = !DILocalVariable(name: "devpriv", scope: !9891, file: !3, line: 2421, type: !4645)
!9903 = !DILocation(line: 2421, column: 27, scope: !9891)
!9904 = !DILocation(line: 2421, column: 37, scope: !9891)
!9905 = !DILocation(line: 2421, column: 42, scope: !9891)
!9906 = !DILocalVariable(name: "bits", scope: !9891, file: !3, line: 2422, type: !482)
!9907 = !DILocation(line: 2422, column: 17, scope: !9891)
!9908 = !DILocalVariable(name: "i", scope: !9891, file: !3, line: 2423, type: !323)
!9909 = !DILocation(line: 2423, column: 6, scope: !9891)
!9910 = !DILocation(line: 2425, column: 6, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9891, file: !3, line: 2425, column: 6)
!9912 = !DILocation(line: 2425, column: 13, scope: !9911)
!9913 = !DILocation(line: 2425, column: 20, scope: !9911)
!9914 = !DILocation(line: 2425, column: 6, scope: !9891)
!9915 = !DILocation(line: 2426, column: 31, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9917, file: !3, line: 2426, column: 7)
!9917 = distinct !DILexicalBlock(scope: !9911, file: !3, line: 2425, column: 36)
!9918 = !DILocation(line: 2426, column: 7, scope: !9916)
!9919 = !DILocation(line: 2426, column: 7, scope: !9917)
!9920 = !DILocation(line: 2427, column: 4, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9916, file: !3, line: 2426, column: 37)
!9922 = !DILocation(line: 2427, column: 13, scope: !9921)
!9923 = !DILocation(line: 2427, column: 28, scope: !9921)
!9924 = !DILocation(line: 2428, column: 11, scope: !9921)
!9925 = !DILocation(line: 2428, column: 20, scope: !9921)
!9926 = !DILocation(line: 2429, column: 11, scope: !9921)
!9927 = !DILocation(line: 2429, column: 20, scope: !9921)
!9928 = !DILocation(line: 2429, column: 32, scope: !9921)
!9929 = !DILocation(line: 2428, column: 4, scope: !9921)
!9930 = !DILocation(line: 2430, column: 9, scope: !9921)
!9931 = !DILocation(line: 2432, column: 26, scope: !9921)
!9932 = !DILocation(line: 2432, column: 12, scope: !9921)
!9933 = !DILocation(line: 2432, column: 9, scope: !9921)
!9934 = !DILocation(line: 2434, column: 31, scope: !9921)
!9935 = !DILocation(line: 2435, column: 10, scope: !9921)
!9936 = !DILocation(line: 2434, column: 12, scope: !9921)
!9937 = !DILocation(line: 2434, column: 9, scope: !9921)
!9938 = !DILocation(line: 2437, column: 29, scope: !9921)
!9939 = !DILocation(line: 2438, column: 8, scope: !9921)
!9940 = !DILocation(line: 2438, column: 34, scope: !9921)
!9941 = !DILocation(line: 2437, column: 12, scope: !9921)
!9942 = !DILocation(line: 2437, column: 9, scope: !9921)
!9943 = !DILocation(line: 2440, column: 8, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9921, file: !3, line: 2440, column: 8)
!9945 = !DILocation(line: 2440, column: 34, scope: !9944)
!9946 = !DILocation(line: 2440, column: 8, scope: !9921)
!9947 = !DILocation(line: 2441, column: 10, scope: !9944)
!9948 = !DILocation(line: 2441, column: 5, scope: !9944)
!9949 = !DILocation(line: 2444, column: 12, scope: !9921)
!9950 = !DILocation(line: 2443, column: 11, scope: !9921)
!9951 = !DILocation(line: 2445, column: 11, scope: !9921)
!9952 = !DILocation(line: 2445, column: 20, scope: !9921)
!9953 = !DILocation(line: 2445, column: 32, scope: !9921)
!9954 = !DILocation(line: 2443, column: 4, scope: !9921)
!9955 = !DILocation(line: 2447, column: 11, scope: !9921)
!9956 = !DILocation(line: 2448, column: 11, scope: !9921)
!9957 = !DILocation(line: 2448, column: 20, scope: !9921)
!9958 = !DILocation(line: 2448, column: 32, scope: !9921)
!9959 = !DILocation(line: 2447, column: 4, scope: !9921)
!9960 = !DILocation(line: 2449, column: 3, scope: !9921)
!9961 = !DILocation(line: 2451, column: 8, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 2451, column: 8)
!9963 = distinct !DILexicalBlock(scope: !9916, file: !3, line: 2449, column: 10)
!9964 = !DILocation(line: 2451, column: 13, scope: !9962)
!9965 = !DILocation(line: 2451, column: 26, scope: !9962)
!9966 = !DILocation(line: 2451, column: 29, scope: !9962)
!9967 = !DILocation(line: 2451, column: 34, scope: !9962)
!9968 = !DILocation(line: 2451, column: 48, scope: !9962)
!9969 = !DILocation(line: 2451, column: 8, scope: !9963)
!9970 = !DILocation(line: 2452, column: 25, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9962, file: !3, line: 2451, column: 54)
!9972 = !DILocation(line: 2452, column: 5, scope: !9971)
!9973 = !DILocation(line: 2453, column: 5, scope: !9971)
!9974 = !DILocation(line: 2455, column: 4, scope: !9963)
!9975 = !DILocation(line: 2455, column: 13, scope: !9963)
!9976 = !DILocation(line: 2455, column: 28, scope: !9963)
!9977 = !DILocation(line: 2456, column: 11, scope: !9963)
!9978 = !DILocation(line: 2456, column: 20, scope: !9963)
!9979 = !DILocation(line: 2457, column: 11, scope: !9963)
!9980 = !DILocation(line: 2457, column: 20, scope: !9963)
!9981 = !DILocation(line: 2457, column: 32, scope: !9963)
!9982 = !DILocation(line: 2456, column: 4, scope: !9963)
!9983 = !DILocation(line: 2460, column: 11, scope: !9963)
!9984 = !DILocation(line: 2460, column: 20, scope: !9963)
!9985 = !DILocation(line: 2460, column: 32, scope: !9963)
!9986 = !DILocation(line: 2459, column: 4, scope: !9963)
!9987 = !DILocation(line: 2462, column: 14, scope: !9963)
!9988 = !DILocation(line: 2462, column: 23, scope: !9963)
!9989 = !DILocation(line: 2462, column: 35, scope: !9963)
!9990 = !DILocation(line: 2462, column: 4, scope: !9963)
!9991 = !DILocation(line: 2464, column: 11, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 2464, column: 4)
!9993 = !DILocation(line: 2464, column: 9, scope: !9992)
!9994 = !DILocation(line: 2464, column: 16, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9992, file: !3, line: 2464, column: 4)
!9996 = !DILocation(line: 2464, column: 20, scope: !9995)
!9997 = !DILocation(line: 2464, column: 25, scope: !9995)
!9998 = !DILocation(line: 2464, column: 18, scope: !9995)
!9999 = !DILocation(line: 2464, column: 4, scope: !9992)
!10000 = !DILocalVariable(name: "chanspec", scope: !10001, file: !3, line: 2465, type: !7)
!10001 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 2464, column: 44)
!10002 = !DILocation(line: 2465, column: 18, scope: !10001)
!10003 = !DILocation(line: 2465, column: 29, scope: !10001)
!10004 = !DILocation(line: 2465, column: 34, scope: !10001)
!10005 = !DILocation(line: 2465, column: 43, scope: !10001)
!10006 = !DILocalVariable(name: "use_differential", scope: !10001, file: !3, line: 2466, type: !323)
!10007 = !DILocation(line: 2466, column: 9, scope: !10001)
!10008 = !DILocation(line: 2468, column: 10, scope: !10001)
!10009 = !DILocation(line: 2470, column: 27, scope: !10001)
!10010 = !DILocation(line: 2470, column: 13, scope: !10001)
!10011 = !DILocation(line: 2470, column: 10, scope: !10001)
!10012 = !DILocation(line: 2472, column: 32, scope: !10001)
!10013 = !DILocation(line: 2473, column: 11, scope: !10001)
!10014 = !DILocation(line: 2472, column: 13, scope: !10001)
!10015 = !DILocation(line: 2472, column: 10, scope: !10001)
!10016 = !DILocation(line: 2475, column: 22, scope: !10001)
!10017 = !DILocation(line: 2476, column: 9, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10001, file: !3, line: 2476, column: 9)
!10019 = !DILocation(line: 2476, column: 27, scope: !10018)
!10020 = !DILocation(line: 2476, column: 9, scope: !10001)
!10021 = !DILocation(line: 2477, column: 23, scope: !10018)
!10022 = !DILocation(line: 2477, column: 6, scope: !10018)
!10023 = !DILocation(line: 2478, column: 30, scope: !10001)
!10024 = !DILocation(line: 2478, column: 35, scope: !10001)
!10025 = !DILocation(line: 2478, column: 13, scope: !10001)
!10026 = !DILocation(line: 2478, column: 10, scope: !10001)
!10027 = !DILocation(line: 2480, column: 9, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10001, file: !3, line: 2480, column: 9)
!10029 = !DILocation(line: 2480, column: 35, scope: !10028)
!10030 = !DILocation(line: 2480, column: 9, scope: !10001)
!10031 = !DILocation(line: 2481, column: 11, scope: !10028)
!10032 = !DILocation(line: 2481, column: 6, scope: !10028)
!10033 = !DILocation(line: 2483, column: 9, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10001, file: !3, line: 2483, column: 9)
!10035 = !DILocation(line: 2483, column: 14, scope: !10034)
!10036 = !DILocation(line: 2483, column: 19, scope: !10034)
!10037 = !DILocation(line: 2483, column: 32, scope: !10034)
!10038 = !DILocation(line: 2483, column: 11, scope: !10034)
!10039 = !DILocation(line: 2483, column: 9, scope: !10001)
!10040 = !DILocation(line: 2484, column: 11, scope: !10034)
!10041 = !DILocation(line: 2484, column: 6, scope: !10034)
!10042 = !DILocation(line: 2486, column: 12, scope: !10001)
!10043 = !DILocation(line: 2487, column: 12, scope: !10001)
!10044 = !DILocation(line: 2487, column: 21, scope: !10001)
!10045 = !DILocation(line: 2487, column: 33, scope: !10001)
!10046 = !DILocation(line: 2486, column: 5, scope: !10001)
!10047 = !DILocation(line: 2489, column: 4, scope: !10001)
!10048 = !DILocation(line: 2464, column: 40, scope: !9995)
!10049 = !DILocation(line: 2464, column: 4, scope: !9995)
!10050 = distinct !{!10050, !9999, !10051}
!10051 = !DILocation(line: 2489, column: 4, scope: !9992)
!10052 = !DILocation(line: 2494, column: 14, scope: !9963)
!10053 = !DILocation(line: 2494, column: 23, scope: !9963)
!10054 = !DILocation(line: 2494, column: 35, scope: !9963)
!10055 = !DILocation(line: 2494, column: 4, scope: !9963)
!10056 = !DILocation(line: 2496, column: 14, scope: !9963)
!10057 = !DILocation(line: 2496, column: 23, scope: !9963)
!10058 = !DILocation(line: 2496, column: 35, scope: !9963)
!10059 = !DILocation(line: 2496, column: 4, scope: !9963)
!10060 = !DILocation(line: 2498, column: 2, scope: !9917)
!10061 = !DILocalVariable(name: "old_cal_range_bits", scope: !10062, file: !3, line: 2499, type: !482)
!10062 = distinct !DILexicalBlock(scope: !9911, file: !3, line: 2498, column: 9)
!10063 = !DILocation(line: 2499, column: 18, scope: !10062)
!10064 = !DILocation(line: 2499, column: 39, scope: !10062)
!10065 = !DILocation(line: 2499, column: 48, scope: !10062)
!10066 = !DILocation(line: 2501, column: 3, scope: !10062)
!10067 = !DILocation(line: 2501, column: 12, scope: !10062)
!10068 = !DILocation(line: 2501, column: 31, scope: !10062)
!10069 = !DILocation(line: 2503, column: 34, scope: !10062)
!10070 = !DILocation(line: 2503, column: 3, scope: !10062)
!10071 = !DILocation(line: 2503, column: 12, scope: !10062)
!10072 = !DILocation(line: 2503, column: 31, scope: !10062)
!10073 = !DILocation(line: 2505, column: 10, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 2505, column: 3)
!10075 = !DILocation(line: 2505, column: 8, scope: !10074)
!10076 = !DILocation(line: 2505, column: 15, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 2505, column: 3)
!10078 = !DILocation(line: 2505, column: 19, scope: !10077)
!10079 = !DILocation(line: 2505, column: 24, scope: !10077)
!10080 = !DILocation(line: 2505, column: 17, scope: !10077)
!10081 = !DILocation(line: 2505, column: 3, scope: !10074)
!10082 = !DILocalVariable(name: "channel", scope: !10083, file: !3, line: 2506, type: !7)
!10083 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 2505, column: 43)
!10084 = !DILocation(line: 2506, column: 17, scope: !10083)
!10085 = !DILocation(line: 2506, column: 27, scope: !10083)
!10086 = !DILocalVariable(name: "range", scope: !10083, file: !3, line: 2507, type: !7)
!10087 = !DILocation(line: 2507, column: 17, scope: !10083)
!10088 = !DILocation(line: 2507, column: 25, scope: !10083)
!10089 = !DILocation(line: 2509, column: 8, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 2509, column: 8)
!10091 = !DILocation(line: 2509, column: 14, scope: !10090)
!10092 = !DILocation(line: 2509, column: 8, scope: !10083)
!10093 = !DILocation(line: 2511, column: 20, scope: !10090)
!10094 = !DILocation(line: 2511, column: 6, scope: !10090)
!10095 = !DILocation(line: 2510, column: 5, scope: !10090)
!10096 = !DILocation(line: 2510, column: 14, scope: !10090)
!10097 = !DILocation(line: 2510, column: 33, scope: !10090)
!10098 = !DILocation(line: 2514, column: 21, scope: !10090)
!10099 = !DILocation(line: 2514, column: 7, scope: !10090)
!10100 = !DILocation(line: 2514, column: 6, scope: !10090)
!10101 = !DILocation(line: 2513, column: 5, scope: !10090)
!10102 = !DILocation(line: 2513, column: 14, scope: !10090)
!10103 = !DILocation(line: 2513, column: 33, scope: !10090)
!10104 = !DILocation(line: 2515, column: 3, scope: !10083)
!10105 = !DILocation(line: 2505, column: 39, scope: !10077)
!10106 = !DILocation(line: 2505, column: 3, scope: !10077)
!10107 = distinct !{!10107, !10081, !10108}
!10108 = !DILocation(line: 2515, column: 3, scope: !10074)
!10109 = !DILocation(line: 2520, column: 7, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 2520, column: 7)
!10111 = !DILocation(line: 2520, column: 29, scope: !10110)
!10112 = !DILocation(line: 2520, column: 38, scope: !10110)
!10113 = !DILocation(line: 2520, column: 26, scope: !10110)
!10114 = !DILocation(line: 2520, column: 7, scope: !10062)
!10115 = !DILocalVariable(name: "i2c_data", scope: !10116, file: !3, line: 2521, type: !1518)
!10116 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 2520, column: 58)
!10117 = !DILocation(line: 2521, column: 7, scope: !10116)
!10118 = !DILocation(line: 2521, column: 18, scope: !10116)
!10119 = !DILocation(line: 2521, column: 27, scope: !10116)
!10120 = !DILocation(line: 2523, column: 14, scope: !10116)
!10121 = !DILocation(line: 2523, column: 4, scope: !10116)
!10122 = !DILocation(line: 2525, column: 3, scope: !10116)
!10123 = !DILocation(line: 2527, column: 2, scope: !9891)
!10124 = !DILocation(line: 2528, column: 1, scope: !9891)
!10125 = distinct !DISubprogram(name: "set_ai_pacing", scope: !3, file: !3, line: 2369, type: !4293, scopeLine: 2370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10126 = !DILocalVariable(name: "dev", arg: 1, scope: !10125, file: !3, line: 2369, type: !324)
!10127 = !DILocation(line: 2369, column: 49, scope: !10125)
!10128 = !DILocalVariable(name: "cmd", arg: 2, scope: !10125, file: !3, line: 2369, type: !4115)
!10129 = !DILocation(line: 2369, column: 73, scope: !10125)
!10130 = !DILocalVariable(name: "board", scope: !10125, file: !3, line: 2371, type: !4755)
!10131 = !DILocation(line: 2371, column: 31, scope: !10125)
!10132 = !DILocation(line: 2371, column: 39, scope: !10125)
!10133 = !DILocation(line: 2371, column: 44, scope: !10125)
!10134 = !DILocalVariable(name: "devpriv", scope: !10125, file: !3, line: 2372, type: !4645)
!10135 = !DILocation(line: 2372, column: 27, scope: !10125)
!10136 = !DILocation(line: 2372, column: 37, scope: !10125)
!10137 = !DILocation(line: 2372, column: 42, scope: !10125)
!10138 = !DILocalVariable(name: "convert_counter", scope: !10125, file: !3, line: 2373, type: !580)
!10139 = !DILocation(line: 2373, column: 6, scope: !10125)
!10140 = !DILocalVariable(name: "scan_counter", scope: !10125, file: !3, line: 2373, type: !580)
!10141 = !DILocation(line: 2373, column: 27, scope: !10125)
!10142 = !DILocation(line: 2375, column: 19, scope: !10125)
!10143 = !DILocation(line: 2375, column: 24, scope: !10125)
!10144 = !DILocation(line: 2375, column: 2, scope: !10125)
!10145 = !DILocation(line: 2377, column: 22, scope: !10125)
!10146 = !DILocation(line: 2377, column: 27, scope: !10125)
!10147 = !DILocation(line: 2377, column: 2, scope: !10125)
!10148 = !DILocation(line: 2379, column: 6, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10125, file: !3, line: 2379, column: 6)
!10150 = !DILocation(line: 2379, column: 13, scope: !10149)
!10151 = !DILocation(line: 2379, column: 20, scope: !10149)
!10152 = !DILocation(line: 2379, column: 6, scope: !10125)
!10153 = !DILocation(line: 2380, column: 45, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10149, file: !3, line: 2379, column: 36)
!10155 = !DILocation(line: 2380, column: 50, scope: !10154)
!10156 = !DILocation(line: 2380, column: 21, scope: !10154)
!10157 = !DILocation(line: 2380, column: 19, scope: !10154)
!10158 = !DILocation(line: 2381, column: 2, scope: !10154)
!10159 = !DILocation(line: 2382, column: 45, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10149, file: !3, line: 2381, column: 9)
!10161 = !DILocation(line: 2382, column: 50, scope: !10160)
!10162 = !DILocation(line: 2382, column: 21, scope: !10160)
!10163 = !DILocation(line: 2382, column: 19, scope: !10160)
!10164 = !DILocation(line: 2383, column: 39, scope: !10160)
!10165 = !DILocation(line: 2383, column: 44, scope: !10160)
!10166 = !DILocation(line: 2383, column: 18, scope: !10160)
!10167 = !DILocation(line: 2383, column: 16, scope: !10160)
!10168 = !DILocation(line: 2387, column: 9, scope: !10125)
!10169 = !DILocation(line: 2387, column: 25, scope: !10125)
!10170 = !DILocation(line: 2388, column: 9, scope: !10125)
!10171 = !DILocation(line: 2388, column: 18, scope: !10125)
!10172 = !DILocation(line: 2388, column: 30, scope: !10125)
!10173 = !DILocation(line: 2387, column: 2, scope: !10125)
!10174 = !DILocation(line: 2390, column: 10, scope: !10125)
!10175 = !DILocation(line: 2390, column: 26, scope: !10125)
!10176 = !DILocation(line: 2390, column: 33, scope: !10125)
!10177 = !DILocation(line: 2390, column: 9, scope: !10125)
!10178 = !DILocation(line: 2391, column: 9, scope: !10125)
!10179 = !DILocation(line: 2391, column: 18, scope: !10125)
!10180 = !DILocation(line: 2391, column: 30, scope: !10125)
!10181 = !DILocation(line: 2390, column: 2, scope: !10125)
!10182 = !DILocation(line: 2393, column: 9, scope: !10125)
!10183 = !DILocation(line: 2393, column: 22, scope: !10125)
!10184 = !DILocation(line: 2394, column: 9, scope: !10125)
!10185 = !DILocation(line: 2394, column: 18, scope: !10125)
!10186 = !DILocation(line: 2394, column: 30, scope: !10125)
!10187 = !DILocation(line: 2393, column: 2, scope: !10125)
!10188 = !DILocation(line: 2396, column: 10, scope: !10125)
!10189 = !DILocation(line: 2396, column: 23, scope: !10125)
!10190 = !DILocation(line: 2396, column: 30, scope: !10125)
!10191 = !DILocation(line: 2396, column: 9, scope: !10125)
!10192 = !DILocation(line: 2397, column: 9, scope: !10125)
!10193 = !DILocation(line: 2397, column: 18, scope: !10125)
!10194 = !DILocation(line: 2397, column: 30, scope: !10125)
!10195 = !DILocation(line: 2396, column: 2, scope: !10125)
!10196 = !DILocation(line: 2398, column: 1, scope: !10125)
!10197 = distinct !DISubprogram(name: "setup_sample_counters", scope: !3, file: !3, line: 2240, type: !4293, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10198 = !DILocalVariable(name: "dev", arg: 1, scope: !10197, file: !3, line: 2240, type: !324)
!10199 = !DILocation(line: 2240, column: 57, scope: !10197)
!10200 = !DILocalVariable(name: "cmd", arg: 2, scope: !10197, file: !3, line: 2241, type: !4115)
!10201 = !DILocation(line: 2241, column: 26, scope: !10197)
!10202 = !DILocalVariable(name: "devpriv", scope: !10197, file: !3, line: 2243, type: !4645)
!10203 = !DILocation(line: 2243, column: 27, scope: !10197)
!10204 = !DILocation(line: 2243, column: 37, scope: !10197)
!10205 = !DILocation(line: 2243, column: 42, scope: !10197)
!10206 = !DILocation(line: 2246, column: 28, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 2246, column: 6)
!10208 = !DILocation(line: 2246, column: 6, scope: !10207)
!10209 = !DILocation(line: 2246, column: 6, scope: !10197)
!10210 = !DILocation(line: 2247, column: 10, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 2246, column: 34)
!10212 = !DILocation(line: 2247, column: 15, scope: !10211)
!10213 = !DILocation(line: 2247, column: 24, scope: !10211)
!10214 = !DILocation(line: 2248, column: 10, scope: !10211)
!10215 = !DILocation(line: 2248, column: 19, scope: !10211)
!10216 = !DILocation(line: 2248, column: 31, scope: !10211)
!10217 = !DILocation(line: 2247, column: 3, scope: !10211)
!10218 = !DILocation(line: 2249, column: 11, scope: !10211)
!10219 = !DILocation(line: 2249, column: 16, scope: !10211)
!10220 = !DILocation(line: 2249, column: 25, scope: !10211)
!10221 = !DILocation(line: 2249, column: 32, scope: !10211)
!10222 = !DILocation(line: 2249, column: 10, scope: !10211)
!10223 = !DILocation(line: 2250, column: 10, scope: !10211)
!10224 = !DILocation(line: 2250, column: 19, scope: !10211)
!10225 = !DILocation(line: 2250, column: 31, scope: !10211)
!10226 = !DILocation(line: 2249, column: 3, scope: !10211)
!10227 = !DILocation(line: 2251, column: 2, scope: !10211)
!10228 = !DILocation(line: 2252, column: 13, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 2251, column: 9)
!10230 = !DILocation(line: 2252, column: 22, scope: !10229)
!10231 = !DILocation(line: 2252, column: 34, scope: !10229)
!10232 = !DILocation(line: 2252, column: 3, scope: !10229)
!10233 = !DILocation(line: 2254, column: 1, scope: !10197)
!10234 = distinct !DISubprogram(name: "enable_ai_interrupts", scope: !3, file: !3, line: 1255, type: !7323, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10235 = !DILocation(line: 407, column: 64, scope: !5432, inlinedAt: !10236)
!10236 = distinct !DILocation(line: 1278, column: 2, scope: !10234)
!10237 = !DILocation(line: 407, column: 84, scope: !5432, inlinedAt: !10236)
!10238 = !DILocation(line: 327, column: 67, scope: !5441, inlinedAt: !10239)
!10239 = distinct !DILocation(line: 1274, column: 2, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10241, file: !3, line: 1274, column: 2)
!10241 = distinct !DILexicalBlock(scope: !10242, file: !3, line: 1274, column: 2)
!10242 = distinct !DILexicalBlock(scope: !10243, file: !3, line: 1274, column: 2)
!10243 = distinct !DILexicalBlock(scope: !10244, file: !3, line: 1274, column: 2)
!10244 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 1274, column: 2)
!10245 = !DILocalVariable(name: "dev", arg: 1, scope: !10234, file: !3, line: 1255, type: !324)
!10246 = !DILocation(line: 1255, column: 56, scope: !10234)
!10247 = !DILocalVariable(name: "cmd", arg: 2, scope: !10234, file: !3, line: 1256, type: !7325)
!10248 = !DILocation(line: 1256, column: 31, scope: !10234)
!10249 = !DILocalVariable(name: "board", scope: !10234, file: !3, line: 1258, type: !4755)
!10250 = !DILocation(line: 1258, column: 31, scope: !10234)
!10251 = !DILocation(line: 1258, column: 39, scope: !10234)
!10252 = !DILocation(line: 1258, column: 44, scope: !10234)
!10253 = !DILocalVariable(name: "devpriv", scope: !10234, file: !3, line: 1259, type: !4645)
!10254 = !DILocation(line: 1259, column: 27, scope: !10234)
!10255 = !DILocation(line: 1259, column: 37, scope: !10234)
!10256 = !DILocation(line: 1259, column: 42, scope: !10234)
!10257 = !DILocalVariable(name: "bits", scope: !10234, file: !3, line: 1260, type: !580)
!10258 = !DILocation(line: 1260, column: 6, scope: !10234)
!10259 = !DILocalVariable(name: "flags", scope: !10234, file: !3, line: 1261, type: !364)
!10260 = !DILocation(line: 1261, column: 16, scope: !10234)
!10261 = !DILocation(line: 1263, column: 7, scope: !10234)
!10262 = !DILocation(line: 1269, column: 6, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 1269, column: 6)
!10264 = !DILocation(line: 1269, column: 11, scope: !10263)
!10265 = !DILocation(line: 1269, column: 17, scope: !10263)
!10266 = !DILocation(line: 1269, column: 6, scope: !10234)
!10267 = !DILocation(line: 1271, column: 7, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10269, file: !3, line: 1271, column: 7)
!10269 = distinct !DILexicalBlock(scope: !10263, file: !3, line: 1269, column: 34)
!10270 = !DILocation(line: 1271, column: 14, scope: !10268)
!10271 = !DILocation(line: 1271, column: 21, scope: !10268)
!10272 = !DILocation(line: 1271, column: 7, scope: !10269)
!10273 = !DILocation(line: 1272, column: 9, scope: !10268)
!10274 = !DILocation(line: 1272, column: 4, scope: !10268)
!10275 = !DILocation(line: 1273, column: 2, scope: !10269)
!10276 = !DILocation(line: 1274, column: 2, scope: !10234)
!10277 = !DILocation(line: 1274, column: 2, scope: !10244)
!10278 = !DILocalVariable(name: "__dummy", scope: !10279, file: !3, line: 1274, type: !364)
!10279 = distinct !DILexicalBlock(scope: !10243, file: !3, line: 1274, column: 2)
!10280 = !DILocation(line: 1274, column: 2, scope: !10279)
!10281 = !DILocalVariable(name: "__dummy2", scope: !10279, file: !3, line: 1274, type: !364)
!10282 = !DILocation(line: 1274, column: 2, scope: !10243)
!10283 = !DILocation(line: 1274, column: 2, scope: !10242)
!10284 = !DILocation(line: 1274, column: 2, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10242, file: !3, line: 1274, column: 2)
!10286 = !DILocalVariable(name: "__dummy", scope: !10287, file: !3, line: 1274, type: !364)
!10287 = distinct !DILexicalBlock(scope: !10288, file: !3, line: 1274, column: 2)
!10288 = distinct !DILexicalBlock(scope: !10285, file: !3, line: 1274, column: 2)
!10289 = !DILocation(line: 1274, column: 2, scope: !10287)
!10290 = !DILocalVariable(name: "__dummy2", scope: !10287, file: !3, line: 1274, type: !364)
!10291 = !DILocation(line: 1274, column: 2, scope: !10288)
!10292 = !DILocation(line: 1274, column: 2, scope: !10241)
!10293 = !{i32 -2141495496}
!10294 = !DILocation(line: 1274, column: 2, scope: !10240)
!10295 = !DILocation(line: 329, column: 10, scope: !5441, inlinedAt: !10239)
!10296 = !DILocation(line: 329, column: 16, scope: !5441, inlinedAt: !10239)
!10297 = !DILocation(line: 1275, column: 31, scope: !10234)
!10298 = !DILocation(line: 1275, column: 2, scope: !10234)
!10299 = !DILocation(line: 1275, column: 11, scope: !10234)
!10300 = !DILocation(line: 1275, column: 28, scope: !10234)
!10301 = !DILocation(line: 1276, column: 9, scope: !10234)
!10302 = !DILocation(line: 1276, column: 18, scope: !10234)
!10303 = !DILocation(line: 1277, column: 9, scope: !10234)
!10304 = !DILocation(line: 1277, column: 18, scope: !10234)
!10305 = !DILocation(line: 1277, column: 30, scope: !10234)
!10306 = !DILocation(line: 1276, column: 2, scope: !10234)
!10307 = !DILocation(line: 1278, column: 26, scope: !10234)
!10308 = !DILocation(line: 1278, column: 31, scope: !10234)
!10309 = !DILocation(line: 1278, column: 41, scope: !10234)
!10310 = !DILocation(line: 409, column: 2, scope: !5531, inlinedAt: !10236)
!10311 = !DILocation(line: 409, column: 2, scope: !5536, inlinedAt: !10236)
!10312 = !DILocation(line: 409, column: 2, scope: !5537, inlinedAt: !10236)
!10313 = !DILocation(line: 409, column: 2, scope: !5544, inlinedAt: !10236)
!10314 = !DILocation(line: 409, column: 2, scope: !5547, inlinedAt: !10236)
!10315 = !DILocation(line: 1279, column: 1, scope: !10234)
!10316 = distinct !DISubprogram(name: "adc_mode_bits", scope: !3, file: !3, line: 284, type: !9539, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10317 = !DILocalVariable(name: "mode", arg: 1, scope: !10316, file: !3, line: 284, type: !7)
!10318 = !DILocation(line: 284, column: 46, scope: !10316)
!10319 = !DILocation(line: 286, column: 10, scope: !10316)
!10320 = !DILocation(line: 286, column: 15, scope: !10316)
!10321 = !DILocation(line: 286, column: 22, scope: !10316)
!10322 = !DILocation(line: 286, column: 9, scope: !10316)
!10323 = !DILocation(line: 286, column: 2, scope: !10316)
!10324 = distinct !DISubprogram(name: "adc_lo_chan_4020_bits", scope: !3, file: !3, line: 274, type: !9539, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10325 = !DILocalVariable(name: "channel", arg: 1, scope: !10324, file: !3, line: 274, type: !7)
!10326 = !DILocation(line: 274, column: 54, scope: !10324)
!10327 = !DILocation(line: 276, column: 10, scope: !10324)
!10328 = !DILocation(line: 276, column: 18, scope: !10324)
!10329 = !DILocation(line: 276, column: 25, scope: !10324)
!10330 = !DILocation(line: 276, column: 9, scope: !10324)
!10331 = !DILocation(line: 276, column: 2, scope: !10324)
!10332 = distinct !DISubprogram(name: "adc_hi_chan_4020_bits", scope: !3, file: !3, line: 279, type: !9539, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10333 = !DILocalVariable(name: "channel", arg: 1, scope: !10332, file: !3, line: 279, type: !7)
!10334 = !DILocation(line: 279, column: 54, scope: !10332)
!10335 = !DILocation(line: 281, column: 10, scope: !10332)
!10336 = !DILocation(line: 281, column: 18, scope: !10332)
!10337 = !DILocation(line: 281, column: 25, scope: !10332)
!10338 = !DILocation(line: 281, column: 9, scope: !10332)
!10339 = !DILocation(line: 281, column: 2, scope: !10332)
!10340 = distinct !DISubprogram(name: "use_hw_sample_counter", scope: !3, file: !3, line: 2229, type: !10341, scopeLine: 2230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10341 = !DISubroutineType(types: !10342)
!10342 = !{!323, !4115}
!10343 = !DILocalVariable(name: "cmd", arg: 1, scope: !10340, file: !3, line: 2229, type: !4115)
!10344 = !DILocation(line: 2229, column: 53, scope: !10340)
!10345 = !DILocation(line: 2232, column: 2, scope: !10340)
!10346 = distinct !DISubprogram(name: "use_internal_queue_6xxx", scope: !3, file: !3, line: 2400, type: !10347, scopeLine: 2401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10347 = !DISubroutineType(types: !10348)
!10348 = !{!323, !7325}
!10349 = !DILocalVariable(name: "cmd", arg: 1, scope: !10346, file: !3, line: 2400, type: !7325)
!10350 = !DILocation(line: 2400, column: 61, scope: !10346)
!10351 = !DILocalVariable(name: "i", scope: !10346, file: !3, line: 2402, type: !323)
!10352 = !DILocation(line: 2402, column: 6, scope: !10346)
!10353 = !DILocation(line: 2404, column: 9, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 2404, column: 2)
!10355 = !DILocation(line: 2404, column: 7, scope: !10354)
!10356 = !DILocation(line: 2404, column: 14, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 2404, column: 2)
!10358 = !DILocation(line: 2404, column: 16, scope: !10357)
!10359 = !DILocation(line: 2404, column: 22, scope: !10357)
!10360 = !DILocation(line: 2404, column: 27, scope: !10357)
!10361 = !DILocation(line: 2404, column: 20, scope: !10357)
!10362 = !DILocation(line: 2404, column: 2, scope: !10354)
!10363 = !DILocation(line: 2405, column: 7, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 2405, column: 7)
!10365 = distinct !DILexicalBlock(scope: !10357, file: !3, line: 2404, column: 46)
!10366 = !DILocation(line: 2406, column: 7, scope: !10364)
!10367 = !DILocation(line: 2406, column: 33, scope: !10364)
!10368 = !DILocation(line: 2405, column: 37, scope: !10364)
!10369 = !DILocation(line: 2405, column: 7, scope: !10365)
!10370 = !DILocation(line: 2407, column: 4, scope: !10364)
!10371 = !DILocation(line: 2408, column: 7, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 2408, column: 7)
!10373 = !DILocation(line: 2409, column: 7, scope: !10372)
!10374 = !DILocation(line: 2408, column: 38, scope: !10372)
!10375 = !DILocation(line: 2408, column: 7, scope: !10365)
!10376 = !DILocation(line: 2410, column: 4, scope: !10372)
!10377 = !DILocation(line: 2411, column: 7, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 2411, column: 7)
!10379 = !DILocation(line: 2411, column: 40, scope: !10378)
!10380 = !DILocation(line: 2411, column: 37, scope: !10378)
!10381 = !DILocation(line: 2411, column: 7, scope: !10365)
!10382 = !DILocation(line: 2412, column: 4, scope: !10378)
!10383 = !DILocation(line: 2413, column: 2, scope: !10365)
!10384 = !DILocation(line: 2404, column: 42, scope: !10357)
!10385 = !DILocation(line: 2404, column: 2, scope: !10357)
!10386 = distinct !{!10386, !10362, !10387}
!10387 = !DILocation(line: 2413, column: 2, scope: !10354)
!10388 = !DILocation(line: 2414, column: 2, scope: !10346)
!10389 = !DILocation(line: 2415, column: 1, scope: !10346)
!10390 = distinct !DISubprogram(name: "warn_external_queue", scope: !3, file: !3, line: 1596, type: !358, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10391 = !DILocalVariable(name: "dev", arg: 1, scope: !10390, file: !3, line: 1596, type: !324)
!10392 = !DILocation(line: 1596, column: 62, scope: !10390)
!10393 = !DILocation(line: 1598, column: 2, scope: !10390)
!10394 = !DILocation(line: 1600, column: 2, scope: !10390)
!10395 = !DILocation(line: 1602, column: 1, scope: !10390)
!10396 = !DILocalVariable(name: "dev", arg: 1, scope: !4292, file: !3, line: 2017, type: !324)
!10397 = !DILocation(line: 2017, column: 52, scope: !4292)
!10398 = !DILocalVariable(name: "cmd", arg: 2, scope: !4292, file: !3, line: 2017, type: !4115)
!10399 = !DILocation(line: 2017, column: 76, scope: !4292)
!10400 = !DILocalVariable(name: "board", scope: !4292, file: !3, line: 2019, type: !4755)
!10401 = !DILocation(line: 2019, column: 31, scope: !4292)
!10402 = !DILocation(line: 2019, column: 39, scope: !4292)
!10403 = !DILocation(line: 2019, column: 44, scope: !4292)
!10404 = !DILocalVariable(name: "convert_divisor", scope: !4292, file: !3, line: 2020, type: !588)
!10405 = !DILocation(line: 2020, column: 21, scope: !4292)
!10406 = !DILocalVariable(name: "scan_divisor", scope: !4292, file: !3, line: 2021, type: !7)
!10407 = !DILocation(line: 2021, column: 15, scope: !4292)
!10408 = !DILocalVariable(name: "max_scan_divisor", scope: !4292, file: !3, line: 2026, type: !588)
!10409 = !DILocation(line: 2026, column: 21, scope: !4292)
!10410 = !DILocalVariable(name: "min_scan_divisor", scope: !4292, file: !3, line: 2026, type: !588)
!10411 = !DILocation(line: 2026, column: 39, scope: !4292)
!10412 = !DILocation(line: 2028, column: 6, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !4292, file: !3, line: 2028, column: 6)
!10414 = !DILocation(line: 2028, column: 11, scope: !10413)
!10415 = !DILocation(line: 2028, column: 23, scope: !10413)
!10416 = !DILocation(line: 2028, column: 6, scope: !4292)
!10417 = !DILocation(line: 2029, column: 7, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 2029, column: 7)
!10419 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 2028, column: 38)
!10420 = !DILocation(line: 2029, column: 14, scope: !10418)
!10421 = !DILocation(line: 2029, column: 21, scope: !10418)
!10422 = !DILocation(line: 2029, column: 7, scope: !10419)
!10423 = !DILocation(line: 2030, column: 4, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 2029, column: 37)
!10425 = !DILocation(line: 2030, column: 9, scope: !10424)
!10426 = !DILocation(line: 2030, column: 21, scope: !10424)
!10427 = !DILocation(line: 2031, column: 3, scope: !10424)
!10428 = !DILocation(line: 2032, column: 34, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 2031, column: 10)
!10430 = !DILocation(line: 2032, column: 39, scope: !10429)
!10431 = !DILocation(line: 2033, column: 13, scope: !10429)
!10432 = !DILocation(line: 2033, column: 18, scope: !10429)
!10433 = !DILocation(line: 2032, column: 22, scope: !10429)
!10434 = !DILocation(line: 2032, column: 20, scope: !10429)
!10435 = !DILocation(line: 2034, column: 8, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 2034, column: 8)
!10437 = !DILocation(line: 2034, column: 24, scope: !10436)
!10438 = !DILocation(line: 2034, column: 8, scope: !10429)
!10439 = !DILocation(line: 2035, column: 21, scope: !10436)
!10440 = !DILocation(line: 2035, column: 5, scope: !10436)
!10441 = !DILocation(line: 2036, column: 8, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 2036, column: 8)
!10443 = !DILocation(line: 2036, column: 24, scope: !10442)
!10444 = !DILocation(line: 2036, column: 8, scope: !10429)
!10445 = !DILocation(line: 2037, column: 21, scope: !10442)
!10446 = !DILocation(line: 2037, column: 5, scope: !10442)
!10447 = !DILocation(line: 2038, column: 23, scope: !10429)
!10448 = !DILocation(line: 2038, column: 39, scope: !10429)
!10449 = !DILocation(line: 2038, column: 4, scope: !10429)
!10450 = !DILocation(line: 2038, column: 9, scope: !10429)
!10451 = !DILocation(line: 2038, column: 21, scope: !10429)
!10452 = !DILocation(line: 2040, column: 2, scope: !10419)
!10453 = !DILocation(line: 2040, column: 13, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 2040, column: 13)
!10455 = !DILocation(line: 2040, column: 18, scope: !10454)
!10456 = !DILocation(line: 2040, column: 30, scope: !10454)
!10457 = !DILocation(line: 2040, column: 13, scope: !10413)
!10458 = !DILocation(line: 2041, column: 3, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10454, file: !3, line: 2040, column: 43)
!10460 = !DILocation(line: 2041, column: 8, scope: !10459)
!10461 = !DILocation(line: 2041, column: 20, scope: !10459)
!10462 = !DILocation(line: 2042, column: 2, scope: !10459)
!10463 = !DILocation(line: 2044, column: 6, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !4292, file: !3, line: 2044, column: 6)
!10465 = !DILocation(line: 2044, column: 11, scope: !10464)
!10466 = !DILocation(line: 2044, column: 26, scope: !10464)
!10467 = !DILocation(line: 2044, column: 6, scope: !4292)
!10468 = !DILocation(line: 2045, column: 30, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 2044, column: 41)
!10470 = !DILocation(line: 2045, column: 35, scope: !10469)
!10471 = !DILocation(line: 2045, column: 51, scope: !10469)
!10472 = !DILocation(line: 2045, column: 56, scope: !10469)
!10473 = !DILocation(line: 2045, column: 18, scope: !10469)
!10474 = !DILocation(line: 2045, column: 16, scope: !10469)
!10475 = !DILocation(line: 2046, column: 7, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 2046, column: 7)
!10477 = !DILocation(line: 2046, column: 12, scope: !10476)
!10478 = !DILocation(line: 2046, column: 24, scope: !10476)
!10479 = !DILocation(line: 2046, column: 7, scope: !10469)
!10480 = !DILocation(line: 2047, column: 23, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 2046, column: 39)
!10482 = !DILocation(line: 2047, column: 41, scope: !10481)
!10483 = !DILocation(line: 2047, column: 46, scope: !10481)
!10484 = !DILocation(line: 2047, column: 39, scope: !10481)
!10485 = !DILocation(line: 2047, column: 21, scope: !10481)
!10486 = !DILocation(line: 2049, column: 6, scope: !10481)
!10487 = !DILocation(line: 2049, column: 24, scope: !10481)
!10488 = !DILocation(line: 2049, column: 29, scope: !10481)
!10489 = !DILocation(line: 2049, column: 22, scope: !10481)
!10490 = !DILocation(line: 2049, column: 42, scope: !10481)
!10491 = !DILocation(line: 2049, column: 47, scope: !10481)
!10492 = !DILocation(line: 2048, column: 21, scope: !10481)
!10493 = !DILocation(line: 2051, column: 3, scope: !10481)
!10494 = !DILocation(line: 2052, column: 21, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 2051, column: 10)
!10496 = !DILocation(line: 2053, column: 43, scope: !10495)
!10497 = !DILocation(line: 2053, column: 41, scope: !10495)
!10498 = !DILocation(line: 2053, column: 21, scope: !10495)
!10499 = !DILocation(line: 2055, column: 7, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 2055, column: 7)
!10501 = !DILocation(line: 2055, column: 22, scope: !10500)
!10502 = !DILocation(line: 2055, column: 20, scope: !10500)
!10503 = !DILocation(line: 2055, column: 7, scope: !10469)
!10504 = !DILocation(line: 2056, column: 19, scope: !10500)
!10505 = !DILocation(line: 2056, column: 17, scope: !10500)
!10506 = !DILocation(line: 2056, column: 4, scope: !10500)
!10507 = !DILocation(line: 2057, column: 7, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 2057, column: 7)
!10509 = !DILocation(line: 2057, column: 22, scope: !10508)
!10510 = !DILocation(line: 2057, column: 20, scope: !10508)
!10511 = !DILocation(line: 2057, column: 7, scope: !10469)
!10512 = !DILocation(line: 2058, column: 19, scope: !10508)
!10513 = !DILocation(line: 2058, column: 17, scope: !10508)
!10514 = !DILocation(line: 2058, column: 4, scope: !10508)
!10515 = !DILocation(line: 2059, column: 25, scope: !10469)
!10516 = !DILocation(line: 2059, column: 38, scope: !10469)
!10517 = !DILocation(line: 2059, column: 3, scope: !10469)
!10518 = !DILocation(line: 2059, column: 8, scope: !10469)
!10519 = !DILocation(line: 2059, column: 23, scope: !10469)
!10520 = !DILocation(line: 2060, column: 2, scope: !10469)
!10521 = !DILocation(line: 2061, column: 1, scope: !4292)
!10522 = distinct !DISubprogram(name: "select_master_clock", scope: !3, file: !3, line: 2342, type: !7323, scopeLine: 2344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10523 = !DILocalVariable(name: "dev", arg: 1, scope: !10522, file: !3, line: 2342, type: !324)
!10524 = !DILocation(line: 2342, column: 55, scope: !10522)
!10525 = !DILocalVariable(name: "cmd", arg: 2, scope: !10522, file: !3, line: 2343, type: !7325)
!10526 = !DILocation(line: 2343, column: 30, scope: !10522)
!10527 = !DILocalVariable(name: "board", scope: !10522, file: !3, line: 2345, type: !4755)
!10528 = !DILocation(line: 2345, column: 31, scope: !10522)
!10529 = !DILocation(line: 2345, column: 39, scope: !10522)
!10530 = !DILocation(line: 2345, column: 44, scope: !10522)
!10531 = !DILocation(line: 2347, column: 10, scope: !10522)
!10532 = !DILocation(line: 2347, column: 17, scope: !10522)
!10533 = !DILocation(line: 2347, column: 2, scope: !10522)
!10534 = !DILocation(line: 2349, column: 28, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 2347, column: 25)
!10536 = !DILocation(line: 2349, column: 33, scope: !10535)
!10537 = !DILocation(line: 2349, column: 3, scope: !10535)
!10538 = !DILocation(line: 2350, column: 3, scope: !10535)
!10539 = !DILocation(line: 2352, column: 3, scope: !10535)
!10540 = !DILocation(line: 2354, column: 1, scope: !10522)
!10541 = distinct !DISubprogram(name: "ai_convert_counter_4020", scope: !3, file: !3, line: 2298, type: !10542, scopeLine: 2300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10542 = !DISubroutineType(types: !10543)
!10543 = !{!580, !324, !4115}
!10544 = !DILocalVariable(name: "dev", arg: 1, scope: !10541, file: !3, line: 2298, type: !324)
!10545 = !DILocation(line: 2298, column: 58, scope: !10541)
!10546 = !DILocalVariable(name: "cmd", arg: 2, scope: !10541, file: !3, line: 2299, type: !4115)
!10547 = !DILocation(line: 2299, column: 27, scope: !10541)
!10548 = !DILocalVariable(name: "devpriv", scope: !10541, file: !3, line: 2301, type: !4645)
!10549 = !DILocation(line: 2301, column: 27, scope: !10541)
!10550 = !DILocation(line: 2301, column: 37, scope: !10541)
!10551 = !DILocation(line: 2301, column: 42, scope: !10541)
!10552 = !DILocalVariable(name: "divisor", scope: !10541, file: !3, line: 2302, type: !7)
!10553 = !DILocation(line: 2302, column: 15, scope: !10541)
!10554 = !DILocation(line: 2304, column: 10, scope: !10541)
!10555 = !DILocation(line: 2304, column: 15, scope: !10541)
!10556 = !DILocation(line: 2304, column: 2, scope: !10541)
!10557 = !DILocation(line: 2306, column: 13, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 2304, column: 31)
!10559 = !DILocation(line: 2306, column: 18, scope: !10558)
!10560 = !DILocation(line: 2306, column: 33, scope: !10558)
!10561 = !DILocation(line: 2306, column: 11, scope: !10558)
!10562 = !DILocation(line: 2307, column: 3, scope: !10558)
!10563 = !DILocation(line: 2309, column: 13, scope: !10558)
!10564 = !DILocation(line: 2309, column: 22, scope: !10558)
!10565 = !DILocation(line: 2309, column: 32, scope: !10558)
!10566 = !DILocation(line: 2309, column: 11, scope: !10558)
!10567 = !DILocation(line: 2310, column: 3, scope: !10558)
!10568 = !DILocation(line: 2312, column: 3, scope: !10558)
!10569 = !DILocation(line: 2313, column: 11, scope: !10558)
!10570 = !DILocation(line: 2314, column: 3, scope: !10558)
!10571 = !DILocation(line: 2318, column: 9, scope: !10541)
!10572 = !DILocation(line: 2318, column: 17, scope: !10541)
!10573 = !DILocation(line: 2318, column: 2, scope: !10541)
!10574 = distinct !DISubprogram(name: "ai_convert_counter_6xxx", scope: !3, file: !3, line: 2270, type: !10575, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10575 = !DISubroutineType(types: !10576)
!10576 = !{!580, !5324, !7325}
!10577 = !DILocalVariable(name: "dev", arg: 1, scope: !10574, file: !3, line: 2270, type: !5324)
!10578 = !DILocation(line: 2270, column: 64, scope: !10574)
!10579 = !DILocalVariable(name: "cmd", arg: 2, scope: !10574, file: !3, line: 2271, type: !7325)
!10580 = !DILocation(line: 2271, column: 33, scope: !10574)
!10581 = !DILocation(line: 2274, column: 9, scope: !10574)
!10582 = !DILocation(line: 2274, column: 14, scope: !10574)
!10583 = !DILocation(line: 2274, column: 26, scope: !10574)
!10584 = !DILocation(line: 2274, column: 39, scope: !10574)
!10585 = !DILocation(line: 2274, column: 2, scope: !10574)
!10586 = distinct !DISubprogram(name: "ai_scan_counter_6xxx", scope: !3, file: !3, line: 2277, type: !10542, scopeLine: 2279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10587 = !DILocalVariable(name: "dev", arg: 1, scope: !10586, file: !3, line: 2277, type: !324)
!10588 = !DILocation(line: 2277, column: 55, scope: !10586)
!10589 = !DILocalVariable(name: "cmd", arg: 2, scope: !10586, file: !3, line: 2278, type: !4115)
!10590 = !DILocation(line: 2278, column: 24, scope: !10586)
!10591 = !DILocalVariable(name: "count", scope: !10586, file: !3, line: 2280, type: !580)
!10592 = !DILocation(line: 2280, column: 6, scope: !10586)
!10593 = !DILocation(line: 2283, column: 10, scope: !10586)
!10594 = !DILocation(line: 2283, column: 15, scope: !10586)
!10595 = !DILocation(line: 2283, column: 2, scope: !10586)
!10596 = !DILocation(line: 2285, column: 12, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10586, file: !3, line: 2283, column: 31)
!10598 = !DILocation(line: 2285, column: 17, scope: !10597)
!10599 = !DILocation(line: 2286, column: 6, scope: !10597)
!10600 = !DILocation(line: 2286, column: 11, scope: !10597)
!10601 = !DILocation(line: 2286, column: 26, scope: !10597)
!10602 = !DILocation(line: 2286, column: 31, scope: !10597)
!10603 = !DILocation(line: 2286, column: 44, scope: !10597)
!10604 = !DILocation(line: 2286, column: 23, scope: !10597)
!10605 = !DILocation(line: 2285, column: 32, scope: !10597)
!10606 = !DILocation(line: 2286, column: 51, scope: !10597)
!10607 = !DILocation(line: 2285, column: 9, scope: !10597)
!10608 = !DILocation(line: 2288, column: 3, scope: !10597)
!10609 = !DILocation(line: 2290, column: 11, scope: !10597)
!10610 = !DILocation(line: 2290, column: 16, scope: !10597)
!10611 = !DILocation(line: 2290, column: 28, scope: !10597)
!10612 = !DILocation(line: 2290, column: 9, scope: !10597)
!10613 = !DILocation(line: 2291, column: 3, scope: !10597)
!10614 = !DILocation(line: 2293, column: 3, scope: !10597)
!10615 = !DILocation(line: 2295, column: 9, scope: !10586)
!10616 = !DILocation(line: 2295, column: 15, scope: !10586)
!10617 = !DILocation(line: 2295, column: 2, scope: !10586)
!10618 = !DILocation(line: 2296, column: 1, scope: !10586)
!10619 = distinct !DISubprogram(name: "get_divisor", scope: !3, file: !3, line: 1992, type: !10620, scopeLine: 1993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10620 = !DISubroutineType(types: !10621)
!10621 = !{!7, !7, !7}
!10622 = !DILocalVariable(name: "ns", arg: 1, scope: !10619, file: !3, line: 1992, type: !7)
!10623 = !DILocation(line: 1992, column: 46, scope: !10619)
!10624 = !DILocalVariable(name: "flags", arg: 2, scope: !10619, file: !3, line: 1992, type: !7)
!10625 = !DILocation(line: 1992, column: 63, scope: !10619)
!10626 = !DILocalVariable(name: "divisor", scope: !10619, file: !3, line: 1994, type: !7)
!10627 = !DILocation(line: 1994, column: 15, scope: !10619)
!10628 = !DILocation(line: 1996, column: 10, scope: !10619)
!10629 = !DILocation(line: 1996, column: 16, scope: !10619)
!10630 = !DILocation(line: 1996, column: 2, scope: !10619)
!10631 = !DILocation(line: 1998, column: 13, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 1996, column: 35)
!10633 = !DILocation(line: 1998, column: 11, scope: !10632)
!10634 = !DILocation(line: 1999, column: 3, scope: !10632)
!10635 = !DILocation(line: 2001, column: 13, scope: !10632)
!10636 = !DILocation(line: 2001, column: 16, scope: !10632)
!10637 = !DILocation(line: 2001, column: 11, scope: !10632)
!10638 = !DILocation(line: 2002, column: 3, scope: !10632)
!10639 = !DILocalVariable(name: "__x", scope: !10640, file: !3, line: 2005, type: !7)
!10640 = distinct !DILexicalBlock(scope: !10632, file: !3, line: 2005, column: 13)
!10641 = !DILocation(line: 2005, column: 13, scope: !10640)
!10642 = !DILocalVariable(name: "__d", scope: !10640, file: !3, line: 2005, type: !323)
!10643 = !DILocation(line: 2005, column: 11, scope: !10632)
!10644 = !DILocation(line: 2006, column: 3, scope: !10632)
!10645 = !DILocation(line: 2008, column: 9, scope: !10619)
!10646 = !DILocation(line: 2008, column: 2, scope: !10619)
!10647 = distinct !DISubprogram(name: "select_master_clock_4020", scope: !3, file: !3, line: 2321, type: !7323, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10648 = !DILocalVariable(name: "dev", arg: 1, scope: !10647, file: !3, line: 2321, type: !324)
!10649 = !DILocation(line: 2321, column: 60, scope: !10647)
!10650 = !DILocalVariable(name: "cmd", arg: 2, scope: !10647, file: !3, line: 2322, type: !7325)
!10651 = !DILocation(line: 2322, column: 35, scope: !10647)
!10652 = !DILocalVariable(name: "devpriv", scope: !10647, file: !3, line: 2324, type: !4645)
!10653 = !DILocation(line: 2324, column: 27, scope: !10647)
!10654 = !DILocation(line: 2324, column: 37, scope: !10647)
!10655 = !DILocation(line: 2324, column: 42, scope: !10647)
!10656 = !DILocation(line: 2327, column: 2, scope: !10647)
!10657 = !DILocation(line: 2327, column: 11, scope: !10647)
!10658 = !DILocation(line: 2327, column: 26, scope: !10647)
!10659 = !DILocation(line: 2328, column: 6, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10647, file: !3, line: 2328, column: 6)
!10661 = !DILocation(line: 2328, column: 11, scope: !10660)
!10662 = !DILocation(line: 2328, column: 26, scope: !10660)
!10663 = !DILocation(line: 2328, column: 6, scope: !10647)
!10664 = !DILocalVariable(name: "chanspec", scope: !10665, file: !3, line: 2329, type: !323)
!10665 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 2328, column: 41)
!10666 = !DILocation(line: 2329, column: 7, scope: !10665)
!10667 = !DILocation(line: 2329, column: 18, scope: !10665)
!10668 = !DILocation(line: 2329, column: 27, scope: !10665)
!10669 = !DILocation(line: 2329, column: 37, scope: !10665)
!10670 = !DILocation(line: 2331, column: 7, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 2331, column: 7)
!10672 = !DILocation(line: 2331, column: 7, scope: !10665)
!10673 = !DILocation(line: 2332, column: 4, scope: !10671)
!10674 = !DILocation(line: 2332, column: 13, scope: !10671)
!10675 = !DILocation(line: 2332, column: 28, scope: !10671)
!10676 = !DILocation(line: 2334, column: 4, scope: !10671)
!10677 = !DILocation(line: 2334, column: 13, scope: !10671)
!10678 = !DILocation(line: 2334, column: 28, scope: !10671)
!10679 = !DILocation(line: 2335, column: 2, scope: !10665)
!10680 = !DILocation(line: 2336, column: 3, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 2335, column: 9)
!10682 = !DILocation(line: 2336, column: 12, scope: !10681)
!10683 = !DILocation(line: 2336, column: 27, scope: !10681)
!10684 = !DILocation(line: 2338, column: 9, scope: !10647)
!10685 = !DILocation(line: 2338, column: 18, scope: !10647)
!10686 = !DILocation(line: 2339, column: 9, scope: !10647)
!10687 = !DILocation(line: 2339, column: 18, scope: !10647)
!10688 = !DILocation(line: 2339, column: 30, scope: !10647)
!10689 = !DILocation(line: 2338, column: 2, scope: !10647)
!10690 = !DILocation(line: 2340, column: 1, scope: !10647)
!10691 = distinct !DISubprogram(name: "comedi_check_trigger_src", scope: !239, file: !239, line: 859, type: !10692, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10692 = !DISubroutineType(types: !10693)
!10693 = !{!323, !2847, !7}
!10694 = !DILocalVariable(name: "src", arg: 1, scope: !10691, file: !239, line: 859, type: !2847)
!10695 = !DILocation(line: 859, column: 58, scope: !10691)
!10696 = !DILocalVariable(name: "flags", arg: 2, scope: !10691, file: !239, line: 860, type: !7)
!10697 = !DILocation(line: 860, column: 22, scope: !10691)
!10698 = !DILocalVariable(name: "orig_src", scope: !10691, file: !239, line: 862, type: !7)
!10699 = !DILocation(line: 862, column: 15, scope: !10691)
!10700 = !DILocation(line: 862, column: 27, scope: !10691)
!10701 = !DILocation(line: 862, column: 26, scope: !10691)
!10702 = !DILocation(line: 864, column: 9, scope: !10691)
!10703 = !DILocation(line: 864, column: 20, scope: !10691)
!10704 = !DILocation(line: 864, column: 18, scope: !10691)
!10705 = !DILocation(line: 864, column: 3, scope: !10691)
!10706 = !DILocation(line: 864, column: 7, scope: !10691)
!10707 = !DILocation(line: 865, column: 7, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10691, file: !239, line: 865, column: 6)
!10709 = !DILocation(line: 865, column: 6, scope: !10708)
!10710 = !DILocation(line: 865, column: 11, scope: !10708)
!10711 = !DILocation(line: 865, column: 27, scope: !10708)
!10712 = !DILocation(line: 865, column: 31, scope: !10708)
!10713 = !DILocation(line: 865, column: 30, scope: !10708)
!10714 = !DILocation(line: 865, column: 38, scope: !10708)
!10715 = !DILocation(line: 865, column: 35, scope: !10708)
!10716 = !DILocation(line: 865, column: 6, scope: !10691)
!10717 = !DILocation(line: 866, column: 3, scope: !10708)
!10718 = !DILocation(line: 867, column: 2, scope: !10691)
!10719 = !DILocation(line: 868, column: 1, scope: !10691)
!10720 = distinct !DISubprogram(name: "comedi_check_trigger_is_unique", scope: !239, file: !239, line: 878, type: !10721, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10721 = !DISubroutineType(types: !10722)
!10722 = !{!323, !7}
!10723 = !DILocalVariable(name: "src", arg: 1, scope: !10720, file: !239, line: 878, type: !7)
!10724 = !DILocation(line: 878, column: 63, scope: !10720)
!10725 = !DILocation(line: 881, column: 7, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10720, file: !239, line: 881, column: 6)
!10727 = !DILocation(line: 881, column: 14, scope: !10726)
!10728 = !DILocation(line: 881, column: 18, scope: !10726)
!10729 = !DILocation(line: 881, column: 11, scope: !10726)
!10730 = !DILocation(line: 881, column: 24, scope: !10726)
!10731 = !DILocation(line: 881, column: 6, scope: !10720)
!10732 = !DILocation(line: 882, column: 3, scope: !10726)
!10733 = !DILocation(line: 883, column: 2, scope: !10720)
!10734 = !DILocation(line: 884, column: 1, scope: !10720)
!10735 = distinct !DISubprogram(name: "comedi_check_trigger_arg_is", scope: !239, file: !239, line: 897, type: !10692, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10736 = !DILocalVariable(name: "arg", arg: 1, scope: !10735, file: !239, line: 897, type: !2847)
!10737 = !DILocation(line: 897, column: 61, scope: !10735)
!10738 = !DILocalVariable(name: "val", arg: 2, scope: !10735, file: !239, line: 898, type: !7)
!10739 = !DILocation(line: 898, column: 25, scope: !10735)
!10740 = !DILocation(line: 900, column: 7, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10735, file: !239, line: 900, column: 6)
!10742 = !DILocation(line: 900, column: 6, scope: !10741)
!10743 = !DILocation(line: 900, column: 14, scope: !10741)
!10744 = !DILocation(line: 900, column: 11, scope: !10741)
!10745 = !DILocation(line: 900, column: 6, scope: !10735)
!10746 = !DILocation(line: 901, column: 10, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10741, file: !239, line: 900, column: 19)
!10748 = !DILocation(line: 901, column: 4, scope: !10747)
!10749 = !DILocation(line: 901, column: 8, scope: !10747)
!10750 = !DILocation(line: 902, column: 3, scope: !10747)
!10751 = !DILocation(line: 904, column: 2, scope: !10735)
!10752 = !DILocation(line: 905, column: 1, scope: !10735)
!10753 = distinct !DISubprogram(name: "comedi_check_trigger_arg_min", scope: !239, file: !239, line: 918, type: !10692, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10754 = !DILocalVariable(name: "arg", arg: 1, scope: !10753, file: !239, line: 918, type: !2847)
!10755 = !DILocation(line: 918, column: 62, scope: !10753)
!10756 = !DILocalVariable(name: "val", arg: 2, scope: !10753, file: !239, line: 919, type: !7)
!10757 = !DILocation(line: 919, column: 26, scope: !10753)
!10758 = !DILocation(line: 921, column: 7, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10753, file: !239, line: 921, column: 6)
!10760 = !DILocation(line: 921, column: 6, scope: !10759)
!10761 = !DILocation(line: 921, column: 13, scope: !10759)
!10762 = !DILocation(line: 921, column: 11, scope: !10759)
!10763 = !DILocation(line: 921, column: 6, scope: !10753)
!10764 = !DILocation(line: 922, column: 10, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10759, file: !239, line: 921, column: 18)
!10766 = !DILocation(line: 922, column: 4, scope: !10765)
!10767 = !DILocation(line: 922, column: 8, scope: !10765)
!10768 = !DILocation(line: 923, column: 3, scope: !10765)
!10769 = !DILocation(line: 925, column: 2, scope: !10753)
!10770 = !DILocation(line: 926, column: 1, scope: !10753)
!10771 = distinct !DISubprogram(name: "cb_pcidas64_ai_check_chanlist", scope: !3, file: !3, line: 2063, type: !4113, scopeLine: 2066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10772 = !DILocalVariable(name: "dev", arg: 1, scope: !10771, file: !3, line: 2063, type: !324)
!10773 = !DILocation(line: 2063, column: 64, scope: !10771)
!10774 = !DILocalVariable(name: "s", arg: 2, scope: !10771, file: !3, line: 2064, type: !3995)
!10775 = !DILocation(line: 2064, column: 32, scope: !10771)
!10776 = !DILocalVariable(name: "cmd", arg: 3, scope: !10771, file: !3, line: 2065, type: !4115)
!10777 = !DILocation(line: 2065, column: 26, scope: !10771)
!10778 = !DILocalVariable(name: "board", scope: !10771, file: !3, line: 2067, type: !4755)
!10779 = !DILocation(line: 2067, column: 31, scope: !10771)
!10780 = !DILocation(line: 2067, column: 39, scope: !10771)
!10781 = !DILocation(line: 2067, column: 44, scope: !10771)
!10782 = !DILocalVariable(name: "aref0", scope: !10771, file: !3, line: 2068, type: !7)
!10783 = !DILocation(line: 2068, column: 15, scope: !10771)
!10784 = !DILocation(line: 2068, column: 23, scope: !10771)
!10785 = !DILocalVariable(name: "i", scope: !10771, file: !3, line: 2069, type: !323)
!10786 = !DILocation(line: 2069, column: 6, scope: !10771)
!10787 = !DILocation(line: 2071, column: 9, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10771, file: !3, line: 2071, column: 2)
!10789 = !DILocation(line: 2071, column: 7, scope: !10788)
!10790 = !DILocation(line: 2071, column: 14, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10788, file: !3, line: 2071, column: 2)
!10792 = !DILocation(line: 2071, column: 18, scope: !10791)
!10793 = !DILocation(line: 2071, column: 23, scope: !10791)
!10794 = !DILocation(line: 2071, column: 16, scope: !10791)
!10795 = !DILocation(line: 2071, column: 2, scope: !10788)
!10796 = !DILocalVariable(name: "aref", scope: !10797, file: !3, line: 2072, type: !7)
!10797 = distinct !DILexicalBlock(scope: !10791, file: !3, line: 2071, column: 42)
!10798 = !DILocation(line: 2072, column: 16, scope: !10797)
!10799 = !DILocation(line: 2072, column: 23, scope: !10797)
!10800 = !DILocation(line: 2074, column: 7, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10797, file: !3, line: 2074, column: 7)
!10802 = !DILocation(line: 2074, column: 15, scope: !10801)
!10803 = !DILocation(line: 2074, column: 12, scope: !10801)
!10804 = !DILocation(line: 2074, column: 7, scope: !10797)
!10805 = !DILocation(line: 2077, column: 4, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10801, file: !3, line: 2074, column: 22)
!10807 = !DILocation(line: 2079, column: 2, scope: !10797)
!10808 = !DILocation(line: 2071, column: 38, scope: !10791)
!10809 = !DILocation(line: 2071, column: 2, scope: !10791)
!10810 = distinct !{!10810, !10795, !10811}
!10811 = !DILocation(line: 2079, column: 2, scope: !10788)
!10812 = !DILocation(line: 2081, column: 6, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10771, file: !3, line: 2081, column: 6)
!10814 = !DILocation(line: 2081, column: 13, scope: !10813)
!10815 = !DILocation(line: 2081, column: 20, scope: !10813)
!10816 = !DILocation(line: 2081, column: 6, scope: !10771)
!10817 = !DILocalVariable(name: "chan0", scope: !10818, file: !3, line: 2082, type: !7)
!10818 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2081, column: 36)
!10819 = !DILocation(line: 2082, column: 16, scope: !10818)
!10820 = !DILocation(line: 2082, column: 24, scope: !10818)
!10821 = !DILocation(line: 2084, column: 10, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 2084, column: 3)
!10823 = !DILocation(line: 2084, column: 8, scope: !10822)
!10824 = !DILocation(line: 2084, column: 15, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10822, file: !3, line: 2084, column: 3)
!10826 = !DILocation(line: 2084, column: 19, scope: !10825)
!10827 = !DILocation(line: 2084, column: 24, scope: !10825)
!10828 = !DILocation(line: 2084, column: 17, scope: !10825)
!10829 = !DILocation(line: 2084, column: 3, scope: !10822)
!10830 = !DILocalVariable(name: "chan", scope: !10831, file: !3, line: 2085, type: !7)
!10831 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 2084, column: 43)
!10832 = !DILocation(line: 2085, column: 17, scope: !10831)
!10833 = !DILocation(line: 2085, column: 24, scope: !10831)
!10834 = !DILocation(line: 2087, column: 8, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10831, file: !3, line: 2087, column: 8)
!10836 = !DILocation(line: 2087, column: 17, scope: !10835)
!10837 = !DILocation(line: 2087, column: 25, scope: !10835)
!10838 = !DILocation(line: 2087, column: 23, scope: !10835)
!10839 = !DILocation(line: 2087, column: 13, scope: !10835)
!10840 = !DILocation(line: 2087, column: 8, scope: !10831)
!10841 = !DILocation(line: 2090, column: 5, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10835, file: !3, line: 2087, column: 29)
!10843 = !DILocation(line: 2092, column: 3, scope: !10831)
!10844 = !DILocation(line: 2084, column: 39, scope: !10825)
!10845 = !DILocation(line: 2084, column: 3, scope: !10825)
!10846 = distinct !{!10846, !10829, !10847}
!10847 = !DILocation(line: 2092, column: 3, scope: !10822)
!10848 = !DILocation(line: 2093, column: 7, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 2093, column: 7)
!10850 = !DILocation(line: 2093, column: 12, scope: !10849)
!10851 = !DILocation(line: 2093, column: 25, scope: !10849)
!10852 = !DILocation(line: 2093, column: 7, scope: !10818)
!10853 = !DILocation(line: 2096, column: 4, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 2093, column: 31)
!10855 = !DILocation(line: 2098, column: 2, scope: !10818)
!10856 = !DILocation(line: 2100, column: 2, scope: !10771)
!10857 = !DILocation(line: 2101, column: 1, scope: !10771)
!10858 = distinct !DISubprogram(name: "i2c_stop", scope: !3, file: !3, line: 1682, type: !358, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10859 = !DILocalVariable(name: "dev", arg: 1, scope: !10858, file: !3, line: 1682, type: !324)
!10860 = !DILocation(line: 1682, column: 44, scope: !10858)
!10861 = !DILocation(line: 1684, column: 14, scope: !10858)
!10862 = !DILocation(line: 1684, column: 2, scope: !10858)
!10863 = !DILocation(line: 1685, column: 14, scope: !10858)
!10864 = !DILocation(line: 1685, column: 2, scope: !10858)
!10865 = !DILocation(line: 1686, column: 14, scope: !10858)
!10866 = !DILocation(line: 1686, column: 2, scope: !10858)
!10867 = !DILocation(line: 1687, column: 14, scope: !10858)
!10868 = !DILocation(line: 1687, column: 2, scope: !10858)
!10869 = !DILocation(line: 1688, column: 1, scope: !10858)
!10870 = distinct !DISubprogram(name: "i2c_start", scope: !3, file: !3, line: 1674, type: !358, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10871 = !DILocalVariable(name: "dev", arg: 1, scope: !10870, file: !3, line: 1674, type: !324)
!10872 = !DILocation(line: 1674, column: 45, scope: !10870)
!10873 = !DILocation(line: 1676, column: 14, scope: !10870)
!10874 = !DILocation(line: 1676, column: 2, scope: !10870)
!10875 = !DILocation(line: 1677, column: 14, scope: !10870)
!10876 = !DILocation(line: 1677, column: 2, scope: !10870)
!10877 = !DILocation(line: 1678, column: 14, scope: !10870)
!10878 = !DILocation(line: 1678, column: 2, scope: !10870)
!10879 = !DILocation(line: 1679, column: 1, scope: !10870)
!10880 = distinct !DISubprogram(name: "i2c_write_byte", scope: !3, file: !3, line: 1648, type: !10881, scopeLine: 1649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10881 = !DISubroutineType(types: !10882)
!10882 = !{null, !324, !1518}
!10883 = !DILocalVariable(name: "dev", arg: 1, scope: !10880, file: !3, line: 1648, type: !324)
!10884 = !DILocation(line: 1648, column: 50, scope: !10880)
!10885 = !DILocalVariable(name: "byte", arg: 2, scope: !10880, file: !3, line: 1648, type: !1518)
!10886 = !DILocation(line: 1648, column: 58, scope: !10880)
!10887 = !DILocalVariable(name: "bit", scope: !10880, file: !3, line: 1650, type: !1518)
!10888 = !DILocation(line: 1650, column: 5, scope: !10880)
!10889 = !DILocalVariable(name: "num_bits", scope: !10880, file: !3, line: 1651, type: !7)
!10890 = !DILocation(line: 1651, column: 15, scope: !10880)
!10891 = !DILocation(line: 1653, column: 19, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 1653, column: 2)
!10893 = !DILocation(line: 1653, column: 28, scope: !10892)
!10894 = !DILocation(line: 1653, column: 15, scope: !10892)
!10895 = !DILocation(line: 1653, column: 13, scope: !10892)
!10896 = !DILocation(line: 1653, column: 11, scope: !10892)
!10897 = !DILocation(line: 1653, column: 7, scope: !10892)
!10898 = !DILocation(line: 1653, column: 34, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10892, file: !3, line: 1653, column: 2)
!10900 = !DILocation(line: 1653, column: 2, scope: !10892)
!10901 = !DILocation(line: 1654, column: 15, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10899, file: !3, line: 1653, column: 50)
!10903 = !DILocation(line: 1654, column: 3, scope: !10902)
!10904 = !DILocation(line: 1655, column: 8, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10902, file: !3, line: 1655, column: 7)
!10906 = !DILocation(line: 1655, column: 15, scope: !10905)
!10907 = !DILocation(line: 1655, column: 13, scope: !10905)
!10908 = !DILocation(line: 1655, column: 7, scope: !10902)
!10909 = !DILocation(line: 1656, column: 16, scope: !10905)
!10910 = !DILocation(line: 1656, column: 4, scope: !10905)
!10911 = !DILocation(line: 1658, column: 16, scope: !10905)
!10912 = !DILocation(line: 1658, column: 4, scope: !10905)
!10913 = !DILocation(line: 1659, column: 15, scope: !10902)
!10914 = !DILocation(line: 1659, column: 3, scope: !10902)
!10915 = !DILocation(line: 1660, column: 2, scope: !10902)
!10916 = !DILocation(line: 1653, column: 43, scope: !10899)
!10917 = !DILocation(line: 1653, column: 2, scope: !10899)
!10918 = distinct !{!10918, !10900, !10919}
!10919 = !DILocation(line: 1660, column: 2, scope: !10892)
!10920 = !DILocation(line: 1661, column: 1, scope: !10880)
!10921 = distinct !DISubprogram(name: "i2c_read_ack", scope: !3, file: !3, line: 1664, type: !4137, scopeLine: 1665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!10922 = !DILocalVariable(name: "dev", arg: 1, scope: !10921, file: !3, line: 1664, type: !324)
!10923 = !DILocation(line: 1664, column: 47, scope: !10921)
!10924 = !DILocation(line: 1666, column: 14, scope: !10921)
!10925 = !DILocation(line: 1666, column: 2, scope: !10921)
!10926 = !DILocation(line: 1667, column: 14, scope: !10921)
!10927 = !DILocation(line: 1667, column: 2, scope: !10921)
!10928 = !DILocation(line: 1668, column: 14, scope: !10921)
!10929 = !DILocation(line: 1668, column: 2, scope: !10921)
!10930 = !DILocation(line: 1670, column: 2, scope: !10921)
!10931 = !DILocalVariable(name: "dev", arg: 1, scope: !4308, file: !3, line: 1630, type: !324)
!10932 = !DILocation(line: 1630, column: 47, scope: !4308)
!10933 = !DILocalVariable(name: "state", arg: 2, scope: !4308, file: !3, line: 1630, type: !323)
!10934 = !DILocation(line: 1630, column: 56, scope: !4308)
!10935 = !DILocalVariable(name: "devpriv", scope: !4308, file: !3, line: 1632, type: !4645)
!10936 = !DILocation(line: 1632, column: 27, scope: !4308)
!10937 = !DILocation(line: 1632, column: 37, scope: !4308)
!10938 = !DILocation(line: 1632, column: 42, scope: !4308)
!10939 = !DILocalVariable(name: "plx_control_addr", scope: !4308, file: !3, line: 1634, type: !374)
!10940 = !DILocation(line: 1634, column: 16, scope: !4308)
!10941 = !DILocation(line: 1634, column: 35, scope: !4308)
!10942 = !DILocation(line: 1634, column: 44, scope: !4308)
!10943 = !DILocation(line: 1634, column: 59, scope: !4308)
!10944 = !DILocation(line: 1637, column: 6, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 1637, column: 6)
!10946 = !DILocation(line: 1637, column: 6, scope: !4308)
!10947 = !DILocation(line: 1638, column: 3, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 1637, column: 13)
!10949 = !DILocation(line: 1638, column: 12, scope: !10948)
!10950 = !DILocation(line: 1638, column: 29, scope: !10948)
!10951 = !DILocation(line: 1639, column: 10, scope: !10948)
!10952 = !DILocation(line: 1639, column: 19, scope: !10948)
!10953 = !DILocation(line: 1639, column: 37, scope: !10948)
!10954 = !DILocation(line: 1639, column: 3, scope: !10948)
!10955 = !DILocation(line: 1640, column: 3, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 1640, column: 3)
!10957 = distinct !DILexicalBlock(scope: !10958, file: !3, line: 1640, column: 3)
!10958 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 1640, column: 3)
!10959 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 1640, column: 3)
!10960 = !DILocation(line: 1641, column: 2, scope: !10948)
!10961 = !DILocation(line: 1642, column: 3, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 1641, column: 9)
!10963 = !DILocation(line: 1642, column: 12, scope: !10962)
!10964 = !DILocation(line: 1642, column: 29, scope: !10962)
!10965 = !DILocation(line: 1643, column: 10, scope: !10962)
!10966 = !DILocation(line: 1643, column: 19, scope: !10962)
!10967 = !DILocation(line: 1643, column: 37, scope: !10962)
!10968 = !DILocation(line: 1643, column: 3, scope: !10962)
!10969 = !DILocation(line: 1644, column: 3, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10971, file: !3, line: 1644, column: 3)
!10971 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 1644, column: 3)
!10972 = distinct !DILexicalBlock(scope: !10973, file: !3, line: 1644, column: 3)
!10973 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 1644, column: 3)
!10974 = !DILocation(line: 1646, column: 1, scope: !4308)
!10975 = !DILocalVariable(name: "dev", arg: 1, scope: !4317, file: !3, line: 1611, type: !324)
!10976 = !DILocation(line: 1611, column: 47, scope: !4317)
!10977 = !DILocalVariable(name: "state", arg: 2, scope: !4317, file: !3, line: 1611, type: !323)
!10978 = !DILocation(line: 1611, column: 56, scope: !4317)
!10979 = !DILocalVariable(name: "devpriv", scope: !4317, file: !3, line: 1613, type: !4645)
!10980 = !DILocation(line: 1613, column: 27, scope: !4317)
!10981 = !DILocation(line: 1613, column: 37, scope: !4317)
!10982 = !DILocation(line: 1613, column: 42, scope: !4317)
!10983 = !DILocalVariable(name: "plx_control_addr", scope: !4317, file: !3, line: 1615, type: !374)
!10984 = !DILocation(line: 1615, column: 16, scope: !4317)
!10985 = !DILocation(line: 1615, column: 35, scope: !4317)
!10986 = !DILocation(line: 1615, column: 44, scope: !4317)
!10987 = !DILocation(line: 1615, column: 59, scope: !4317)
!10988 = !DILocation(line: 1618, column: 6, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 1618, column: 6)
!10990 = !DILocation(line: 1618, column: 6, scope: !4317)
!10991 = !DILocation(line: 1619, column: 3, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 1618, column: 13)
!10993 = !DILocation(line: 1619, column: 12, scope: !10992)
!10994 = !DILocation(line: 1619, column: 29, scope: !10992)
!10995 = !DILocation(line: 1620, column: 10, scope: !10992)
!10996 = !DILocation(line: 1620, column: 19, scope: !10992)
!10997 = !DILocation(line: 1620, column: 37, scope: !10992)
!10998 = !DILocation(line: 1620, column: 3, scope: !10992)
!10999 = !DILocation(line: 1621, column: 3, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 1621, column: 3)
!11001 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 1621, column: 3)
!11002 = distinct !DILexicalBlock(scope: !11003, file: !3, line: 1621, column: 3)
!11003 = distinct !DILexicalBlock(scope: !10992, file: !3, line: 1621, column: 3)
!11004 = !DILocation(line: 1622, column: 2, scope: !10992)
!11005 = !DILocation(line: 1623, column: 3, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 1622, column: 9)
!11007 = !DILocation(line: 1623, column: 12, scope: !11006)
!11008 = !DILocation(line: 1623, column: 29, scope: !11006)
!11009 = !DILocation(line: 1624, column: 10, scope: !11006)
!11010 = !DILocation(line: 1624, column: 19, scope: !11006)
!11011 = !DILocation(line: 1624, column: 37, scope: !11006)
!11012 = !DILocation(line: 1624, column: 3, scope: !11006)
!11013 = !DILocation(line: 1625, column: 3, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !3, line: 1625, column: 3)
!11015 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 1625, column: 3)
!11016 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 1625, column: 3)
!11017 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 1625, column: 3)
!11018 = !DILocation(line: 1627, column: 1, scope: !4317)
!11019 = distinct !DISubprogram(name: "set_dac_range_bits", scope: !3, file: !3, line: 1197, type: !11020, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11020 = !DISubroutineType(types: !11021)
!11021 = !{null, !324, !4656, !7, !7}
!11022 = !DILocalVariable(name: "dev", arg: 1, scope: !11019, file: !3, line: 1197, type: !324)
!11023 = !DILocation(line: 1197, column: 54, scope: !11019)
!11024 = !DILocalVariable(name: "bits", arg: 2, scope: !11019, file: !3, line: 1198, type: !4656)
!11025 = !DILocation(line: 1198, column: 16, scope: !11019)
!11026 = !DILocalVariable(name: "channel", arg: 3, scope: !11019, file: !3, line: 1198, type: !7)
!11027 = !DILocation(line: 1198, column: 35, scope: !11019)
!11028 = !DILocalVariable(name: "range", arg: 4, scope: !11019, file: !3, line: 1199, type: !7)
!11029 = !DILocation(line: 1199, column: 24, scope: !11019)
!11030 = !DILocalVariable(name: "board", scope: !11019, file: !3, line: 1201, type: !4755)
!11031 = !DILocation(line: 1201, column: 31, scope: !11019)
!11032 = !DILocation(line: 1201, column: 39, scope: !11019)
!11033 = !DILocation(line: 1201, column: 44, scope: !11019)
!11034 = !DILocalVariable(name: "code", scope: !11019, file: !3, line: 1202, type: !7)
!11035 = !DILocation(line: 1202, column: 15, scope: !11019)
!11036 = !DILocation(line: 1202, column: 22, scope: !11019)
!11037 = !DILocation(line: 1202, column: 29, scope: !11019)
!11038 = !DILocation(line: 1202, column: 43, scope: !11019)
!11039 = !DILocation(line: 1204, column: 6, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 1204, column: 6)
!11041 = !DILocation(line: 1204, column: 14, scope: !11040)
!11042 = !DILocation(line: 1204, column: 6, scope: !11019)
!11043 = !DILocation(line: 1205, column: 3, scope: !11040)
!11044 = !DILocation(line: 1206, column: 6, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 1206, column: 6)
!11046 = !DILocation(line: 1206, column: 11, scope: !11045)
!11047 = !DILocation(line: 1206, column: 6, scope: !11019)
!11048 = !DILocation(line: 1207, column: 3, scope: !11045)
!11049 = !DILocation(line: 1209, column: 25, scope: !11019)
!11050 = !DILocation(line: 1209, column: 23, scope: !11019)
!11051 = !DILocation(line: 1209, column: 17, scope: !11019)
!11052 = !DILocation(line: 1209, column: 11, scope: !11019)
!11053 = !DILocation(line: 1209, column: 3, scope: !11019)
!11054 = !DILocation(line: 1209, column: 8, scope: !11019)
!11055 = !DILocation(line: 1210, column: 11, scope: !11019)
!11056 = !DILocation(line: 1210, column: 24, scope: !11019)
!11057 = !DILocation(line: 1210, column: 22, scope: !11019)
!11058 = !DILocation(line: 1210, column: 16, scope: !11019)
!11059 = !DILocation(line: 1210, column: 3, scope: !11019)
!11060 = !DILocation(line: 1210, column: 8, scope: !11019)
!11061 = !DILocation(line: 1211, column: 1, scope: !11019)
!11062 = distinct !DISubprogram(name: "dac_lsb_4020_reg", scope: !3, file: !3, line: 140, type: !11063, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11063 = !DISubroutineType(types: !11064)
!11064 = !{!7, !7}
!11065 = !DILocalVariable(name: "channel", arg: 1, scope: !11062, file: !3, line: 140, type: !7)
!11066 = !DILocation(line: 140, column: 58, scope: !11062)
!11067 = !DILocation(line: 142, column: 22, scope: !11062)
!11068 = !DILocation(line: 142, column: 30, scope: !11062)
!11069 = !DILocation(line: 142, column: 19, scope: !11062)
!11070 = !DILocation(line: 142, column: 14, scope: !11062)
!11071 = !DILocation(line: 142, column: 2, scope: !11062)
!11072 = distinct !DISubprogram(name: "dac_msb_4020_reg", scope: !3, file: !3, line: 145, type: !11063, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11073 = !DILocalVariable(name: "channel", arg: 1, scope: !11072, file: !3, line: 145, type: !7)
!11074 = !DILocation(line: 145, column: 58, scope: !11072)
!11075 = !DILocation(line: 147, column: 22, scope: !11072)
!11076 = !DILocation(line: 147, column: 30, scope: !11072)
!11077 = !DILocation(line: 147, column: 19, scope: !11072)
!11078 = !DILocation(line: 147, column: 14, scope: !11072)
!11079 = !DILocation(line: 147, column: 2, scope: !11072)
!11080 = distinct !DISubprogram(name: "dac_convert_reg", scope: !3, file: !3, line: 135, type: !11063, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11081 = !DILocalVariable(name: "channel", arg: 1, scope: !11080, file: !3, line: 135, type: !7)
!11082 = !DILocation(line: 135, column: 57, scope: !11080)
!11083 = !DILocation(line: 137, column: 22, scope: !11080)
!11084 = !DILocation(line: 137, column: 30, scope: !11080)
!11085 = !DILocation(line: 137, column: 19, scope: !11080)
!11086 = !DILocation(line: 137, column: 14, scope: !11080)
!11087 = !DILocation(line: 137, column: 2, scope: !11080)
!11088 = distinct !DISubprogram(name: "get_ao_divisor", scope: !3, file: !3, line: 3192, type: !10620, scopeLine: 3193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11089 = !DILocalVariable(name: "ns", arg: 1, scope: !11088, file: !3, line: 3192, type: !7)
!11090 = !DILocation(line: 3192, column: 49, scope: !11088)
!11091 = !DILocalVariable(name: "flags", arg: 2, scope: !11088, file: !3, line: 3192, type: !7)
!11092 = !DILocation(line: 3192, column: 66, scope: !11088)
!11093 = !DILocation(line: 3194, column: 21, scope: !11088)
!11094 = !DILocation(line: 3194, column: 25, scope: !11088)
!11095 = !DILocation(line: 3194, column: 9, scope: !11088)
!11096 = !DILocation(line: 3194, column: 32, scope: !11088)
!11097 = !DILocation(line: 3194, column: 2, scope: !11088)
!11098 = distinct !DISubprogram(name: "cb_pcidas64_ao_check_chanlist", scope: !3, file: !3, line: 3319, type: !4113, scopeLine: 3322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11099 = !DILocalVariable(name: "dev", arg: 1, scope: !11098, file: !3, line: 3319, type: !324)
!11100 = !DILocation(line: 3319, column: 64, scope: !11098)
!11101 = !DILocalVariable(name: "s", arg: 2, scope: !11098, file: !3, line: 3320, type: !3995)
!11102 = !DILocation(line: 3320, column: 32, scope: !11098)
!11103 = !DILocalVariable(name: "cmd", arg: 3, scope: !11098, file: !3, line: 3321, type: !4115)
!11104 = !DILocation(line: 3321, column: 26, scope: !11098)
!11105 = !DILocalVariable(name: "chan0", scope: !11098, file: !3, line: 3323, type: !7)
!11106 = !DILocation(line: 3323, column: 15, scope: !11098)
!11107 = !DILocation(line: 3323, column: 23, scope: !11098)
!11108 = !DILocalVariable(name: "i", scope: !11098, file: !3, line: 3324, type: !323)
!11109 = !DILocation(line: 3324, column: 6, scope: !11098)
!11110 = !DILocation(line: 3326, column: 9, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 3326, column: 2)
!11112 = !DILocation(line: 3326, column: 7, scope: !11111)
!11113 = !DILocation(line: 3326, column: 14, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11111, file: !3, line: 3326, column: 2)
!11115 = !DILocation(line: 3326, column: 18, scope: !11114)
!11116 = !DILocation(line: 3326, column: 23, scope: !11114)
!11117 = !DILocation(line: 3326, column: 16, scope: !11114)
!11118 = !DILocation(line: 3326, column: 2, scope: !11111)
!11119 = !DILocalVariable(name: "chan", scope: !11120, file: !3, line: 3327, type: !7)
!11120 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 3326, column: 42)
!11121 = !DILocation(line: 3327, column: 16, scope: !11120)
!11122 = !DILocation(line: 3327, column: 23, scope: !11120)
!11123 = !DILocation(line: 3329, column: 7, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 3329, column: 7)
!11125 = !DILocation(line: 3329, column: 16, scope: !11124)
!11126 = !DILocation(line: 3329, column: 24, scope: !11124)
!11127 = !DILocation(line: 3329, column: 22, scope: !11124)
!11128 = !DILocation(line: 3329, column: 12, scope: !11124)
!11129 = !DILocation(line: 3329, column: 7, scope: !11120)
!11130 = !DILocation(line: 3332, column: 4, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11124, file: !3, line: 3329, column: 28)
!11132 = !DILocation(line: 3334, column: 2, scope: !11120)
!11133 = !DILocation(line: 3326, column: 38, scope: !11114)
!11134 = !DILocation(line: 3326, column: 2, scope: !11114)
!11135 = distinct !{!11135, !11118, !11136}
!11136 = !DILocation(line: 3334, column: 2, scope: !11111)
!11137 = !DILocation(line: 3336, column: 2, scope: !11098)
!11138 = !DILocation(line: 3337, column: 1, scope: !11098)
!11139 = distinct !DISubprogram(name: "external_ai_queue_in_use", scope: !3, file: !3, line: 3257, type: !4137, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11140 = !DILocalVariable(name: "dev", arg: 1, scope: !11139, file: !3, line: 3257, type: !324)
!11141 = !DILocation(line: 3257, column: 66, scope: !11139)
!11142 = !DILocalVariable(name: "board", scope: !11139, file: !3, line: 3259, type: !4755)
!11143 = !DILocation(line: 3259, column: 31, scope: !11139)
!11144 = !DILocation(line: 3259, column: 39, scope: !11139)
!11145 = !DILocation(line: 3259, column: 44, scope: !11139)
!11146 = !DILocation(line: 3261, column: 7, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 3261, column: 6)
!11148 = !DILocation(line: 3261, column: 12, scope: !11147)
!11149 = !DILocation(line: 3261, column: 25, scope: !11147)
!11150 = !DILocation(line: 3261, column: 6, scope: !11139)
!11151 = !DILocation(line: 3262, column: 3, scope: !11147)
!11152 = !DILocation(line: 3263, column: 6, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 3263, column: 6)
!11154 = !DILocation(line: 3263, column: 13, scope: !11153)
!11155 = !DILocation(line: 3263, column: 20, scope: !11153)
!11156 = !DILocation(line: 3263, column: 6, scope: !11139)
!11157 = !DILocation(line: 3264, column: 3, scope: !11153)
!11158 = !DILocation(line: 3265, column: 36, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11153, file: !3, line: 3265, column: 11)
!11160 = !DILocation(line: 3265, column: 41, scope: !11159)
!11161 = !DILocation(line: 3265, column: 54, scope: !11159)
!11162 = !DILocation(line: 3265, column: 61, scope: !11159)
!11163 = !DILocation(line: 3265, column: 11, scope: !11159)
!11164 = !DILocation(line: 3265, column: 11, scope: !11153)
!11165 = !DILocation(line: 3266, column: 3, scope: !11159)
!11166 = !DILocation(line: 3267, column: 2, scope: !11139)
!11167 = !DILocation(line: 3268, column: 1, scope: !11139)
!11168 = distinct !DISubprogram(name: "set_dac_select_reg", scope: !3, file: !3, line: 3174, type: !7323, scopeLine: 3176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11169 = !DILocalVariable(name: "dev", arg: 1, scope: !11168, file: !3, line: 3174, type: !324)
!11170 = !DILocation(line: 3174, column: 54, scope: !11168)
!11171 = !DILocalVariable(name: "cmd", arg: 2, scope: !11168, file: !3, line: 3175, type: !7325)
!11172 = !DILocation(line: 3175, column: 36, scope: !11168)
!11173 = !DILocalVariable(name: "devpriv", scope: !11168, file: !3, line: 3177, type: !4645)
!11174 = !DILocation(line: 3177, column: 27, scope: !11168)
!11175 = !DILocation(line: 3177, column: 37, scope: !11168)
!11176 = !DILocation(line: 3177, column: 42, scope: !11168)
!11177 = !DILocalVariable(name: "bits", scope: !11168, file: !3, line: 3178, type: !1025)
!11178 = !DILocation(line: 3178, column: 6, scope: !11168)
!11179 = !DILocalVariable(name: "first_channel", scope: !11168, file: !3, line: 3179, type: !7)
!11180 = !DILocation(line: 3179, column: 15, scope: !11168)
!11181 = !DILocalVariable(name: "last_channel", scope: !11168, file: !3, line: 3179, type: !7)
!11182 = !DILocation(line: 3179, column: 30, scope: !11168)
!11183 = !DILocation(line: 3181, column: 18, scope: !11168)
!11184 = !DILocation(line: 3181, column: 16, scope: !11168)
!11185 = !DILocation(line: 3182, column: 17, scope: !11168)
!11186 = !DILocation(line: 3182, column: 15, scope: !11168)
!11187 = !DILocation(line: 3183, column: 6, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 3183, column: 6)
!11189 = !DILocation(line: 3183, column: 21, scope: !11188)
!11190 = !DILocation(line: 3183, column: 19, scope: !11188)
!11191 = !DILocation(line: 3183, column: 6, scope: !11168)
!11192 = !DILocation(line: 3184, column: 3, scope: !11188)
!11193 = !DILocation(line: 3187, column: 10, scope: !11168)
!11194 = !DILocation(line: 3187, column: 24, scope: !11168)
!11195 = !DILocation(line: 3187, column: 34, scope: !11168)
!11196 = !DILocation(line: 3187, column: 47, scope: !11168)
!11197 = !DILocation(line: 3187, column: 54, scope: !11168)
!11198 = !DILocation(line: 3187, column: 31, scope: !11168)
!11199 = !DILocation(line: 3187, column: 9, scope: !11168)
!11200 = !DILocation(line: 3187, column: 7, scope: !11168)
!11201 = !DILocation(line: 3189, column: 9, scope: !11168)
!11202 = !DILocation(line: 3189, column: 15, scope: !11168)
!11203 = !DILocation(line: 3189, column: 24, scope: !11168)
!11204 = !DILocation(line: 3189, column: 36, scope: !11168)
!11205 = !DILocation(line: 3189, column: 2, scope: !11168)
!11206 = !DILocation(line: 3190, column: 1, scope: !11168)
!11207 = distinct !DISubprogram(name: "set_dac_interval_regs", scope: !3, file: !3, line: 3197, type: !7323, scopeLine: 3199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11208 = !DILocalVariable(name: "dev", arg: 1, scope: !11207, file: !3, line: 3197, type: !324)
!11209 = !DILocation(line: 3197, column: 57, scope: !11207)
!11210 = !DILocalVariable(name: "cmd", arg: 2, scope: !11207, file: !3, line: 3198, type: !7325)
!11211 = !DILocation(line: 3198, column: 32, scope: !11207)
!11212 = !DILocalVariable(name: "devpriv", scope: !11207, file: !3, line: 3200, type: !4645)
!11213 = !DILocation(line: 3200, column: 27, scope: !11207)
!11214 = !DILocation(line: 3200, column: 37, scope: !11207)
!11215 = !DILocation(line: 3200, column: 42, scope: !11207)
!11216 = !DILocalVariable(name: "divisor", scope: !11207, file: !3, line: 3201, type: !7)
!11217 = !DILocation(line: 3201, column: 15, scope: !11207)
!11218 = !DILocation(line: 3203, column: 6, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11207, file: !3, line: 3203, column: 6)
!11220 = !DILocation(line: 3203, column: 11, scope: !11219)
!11221 = !DILocation(line: 3203, column: 26, scope: !11219)
!11222 = !DILocation(line: 3203, column: 6, scope: !11207)
!11223 = !DILocation(line: 3204, column: 3, scope: !11219)
!11224 = !DILocation(line: 3206, column: 27, scope: !11207)
!11225 = !DILocation(line: 3206, column: 32, scope: !11207)
!11226 = !DILocation(line: 3206, column: 48, scope: !11207)
!11227 = !DILocation(line: 3206, column: 53, scope: !11207)
!11228 = !DILocation(line: 3206, column: 12, scope: !11207)
!11229 = !DILocation(line: 3206, column: 10, scope: !11207)
!11230 = !DILocation(line: 3207, column: 6, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11207, file: !3, line: 3207, column: 6)
!11232 = !DILocation(line: 3207, column: 14, scope: !11231)
!11233 = !DILocation(line: 3207, column: 6, scope: !11207)
!11234 = !DILocation(line: 3208, column: 3, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11231, file: !3, line: 3207, column: 35)
!11236 = !DILocation(line: 3209, column: 11, scope: !11235)
!11237 = !DILocation(line: 3210, column: 2, scope: !11235)
!11238 = !DILocation(line: 3211, column: 9, scope: !11207)
!11239 = !DILocation(line: 3211, column: 17, scope: !11207)
!11240 = !DILocation(line: 3212, column: 9, scope: !11207)
!11241 = !DILocation(line: 3212, column: 18, scope: !11207)
!11242 = !DILocation(line: 3212, column: 30, scope: !11207)
!11243 = !DILocation(line: 3211, column: 2, scope: !11207)
!11244 = !DILocation(line: 3213, column: 10, scope: !11207)
!11245 = !DILocation(line: 3213, column: 18, scope: !11207)
!11246 = !DILocation(line: 3213, column: 25, scope: !11207)
!11247 = !DILocation(line: 3213, column: 9, scope: !11207)
!11248 = !DILocation(line: 3214, column: 9, scope: !11207)
!11249 = !DILocation(line: 3214, column: 18, scope: !11207)
!11250 = !DILocation(line: 3214, column: 30, scope: !11207)
!11251 = !DILocation(line: 3213, column: 2, scope: !11207)
!11252 = !DILocation(line: 3215, column: 1, scope: !11207)
!11253 = distinct !DISubprogram(name: "set_dac_control1_reg", scope: !3, file: !3, line: 3155, type: !7323, scopeLine: 3157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11254 = !DILocalVariable(name: "dev", arg: 1, scope: !11253, file: !3, line: 3155, type: !324)
!11255 = !DILocation(line: 3155, column: 56, scope: !11253)
!11256 = !DILocalVariable(name: "cmd", arg: 2, scope: !11253, file: !3, line: 3156, type: !7325)
!11257 = !DILocation(line: 3156, column: 31, scope: !11253)
!11258 = !DILocalVariable(name: "devpriv", scope: !11253, file: !3, line: 3158, type: !4645)
!11259 = !DILocation(line: 3158, column: 27, scope: !11253)
!11260 = !DILocation(line: 3158, column: 37, scope: !11253)
!11261 = !DILocation(line: 3158, column: 42, scope: !11253)
!11262 = !DILocalVariable(name: "i", scope: !11253, file: !3, line: 3159, type: !323)
!11263 = !DILocation(line: 3159, column: 6, scope: !11253)
!11264 = !DILocation(line: 3161, column: 9, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11253, file: !3, line: 3161, column: 2)
!11266 = !DILocation(line: 3161, column: 7, scope: !11265)
!11267 = !DILocation(line: 3161, column: 14, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11265, file: !3, line: 3161, column: 2)
!11269 = !DILocation(line: 3161, column: 18, scope: !11268)
!11270 = !DILocation(line: 3161, column: 23, scope: !11268)
!11271 = !DILocation(line: 3161, column: 16, scope: !11268)
!11272 = !DILocation(line: 3161, column: 2, scope: !11265)
!11273 = !DILocalVariable(name: "channel", scope: !11274, file: !3, line: 3162, type: !323)
!11274 = distinct !DILexicalBlock(scope: !11268, file: !3, line: 3161, column: 42)
!11275 = !DILocation(line: 3162, column: 7, scope: !11274)
!11276 = !DILocalVariable(name: "range", scope: !11274, file: !3, line: 3162, type: !323)
!11277 = !DILocation(line: 3162, column: 16, scope: !11274)
!11278 = !DILocation(line: 3164, column: 13, scope: !11274)
!11279 = !DILocation(line: 3164, column: 11, scope: !11274)
!11280 = !DILocation(line: 3165, column: 11, scope: !11274)
!11281 = !DILocation(line: 3165, column: 9, scope: !11274)
!11282 = !DILocation(line: 3166, column: 22, scope: !11274)
!11283 = !DILocation(line: 3166, column: 28, scope: !11274)
!11284 = !DILocation(line: 3166, column: 37, scope: !11274)
!11285 = !DILocation(line: 3166, column: 56, scope: !11274)
!11286 = !DILocation(line: 3167, column: 8, scope: !11274)
!11287 = !DILocation(line: 3166, column: 3, scope: !11274)
!11288 = !DILocation(line: 3168, column: 2, scope: !11274)
!11289 = !DILocation(line: 3161, column: 38, scope: !11268)
!11290 = !DILocation(line: 3161, column: 2, scope: !11268)
!11291 = distinct !{!11291, !11272, !11292}
!11292 = !DILocation(line: 3168, column: 2, scope: !11265)
!11293 = !DILocation(line: 3169, column: 2, scope: !11253)
!11294 = !DILocation(line: 3169, column: 11, scope: !11253)
!11295 = !DILocation(line: 3169, column: 29, scope: !11253)
!11296 = !DILocation(line: 3170, column: 9, scope: !11253)
!11297 = !DILocation(line: 3170, column: 18, scope: !11253)
!11298 = !DILocation(line: 3171, column: 9, scope: !11253)
!11299 = !DILocation(line: 3171, column: 18, scope: !11253)
!11300 = !DILocation(line: 3171, column: 30, scope: !11253)
!11301 = !DILocation(line: 3170, column: 2, scope: !11253)
!11302 = !DILocation(line: 3172, column: 1, scope: !11253)
!11303 = distinct !DISubprogram(name: "ao_inttrig", scope: !3, file: !3, line: 3270, type: !4063, scopeLine: 3272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11304 = !DILocalVariable(name: "dev", arg: 1, scope: !11303, file: !3, line: 3270, type: !324)
!11305 = !DILocation(line: 3270, column: 45, scope: !11303)
!11306 = !DILocalVariable(name: "s", arg: 2, scope: !11303, file: !3, line: 3270, type: !3995)
!11307 = !DILocation(line: 3270, column: 75, scope: !11303)
!11308 = !DILocalVariable(name: "trig_num", arg: 3, scope: !11303, file: !3, line: 3271, type: !7)
!11309 = !DILocation(line: 3271, column: 22, scope: !11303)
!11310 = !DILocalVariable(name: "devpriv", scope: !11303, file: !3, line: 3273, type: !4645)
!11311 = !DILocation(line: 3273, column: 27, scope: !11303)
!11312 = !DILocation(line: 3273, column: 37, scope: !11303)
!11313 = !DILocation(line: 3273, column: 42, scope: !11303)
!11314 = !DILocalVariable(name: "cmd", scope: !11303, file: !3, line: 3274, type: !4115)
!11315 = !DILocation(line: 3274, column: 21, scope: !11303)
!11316 = !DILocation(line: 3274, column: 28, scope: !11303)
!11317 = !DILocation(line: 3274, column: 31, scope: !11303)
!11318 = !DILocation(line: 3274, column: 38, scope: !11303)
!11319 = !DILocalVariable(name: "retval", scope: !11303, file: !3, line: 3275, type: !323)
!11320 = !DILocation(line: 3275, column: 6, scope: !11303)
!11321 = !DILocation(line: 3277, column: 6, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 3277, column: 6)
!11323 = !DILocation(line: 3277, column: 18, scope: !11322)
!11324 = !DILocation(line: 3277, column: 23, scope: !11322)
!11325 = !DILocation(line: 3277, column: 15, scope: !11322)
!11326 = !DILocation(line: 3277, column: 6, scope: !11303)
!11327 = !DILocation(line: 3278, column: 3, scope: !11322)
!11328 = !DILocation(line: 3280, column: 23, scope: !11303)
!11329 = !DILocation(line: 3280, column: 28, scope: !11303)
!11330 = !DILocation(line: 3280, column: 11, scope: !11303)
!11331 = !DILocation(line: 3280, column: 9, scope: !11303)
!11332 = !DILocation(line: 3281, column: 6, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 3281, column: 6)
!11334 = !DILocation(line: 3281, column: 13, scope: !11333)
!11335 = !DILocation(line: 3281, column: 6, scope: !11303)
!11336 = !DILocation(line: 3282, column: 3, scope: !11333)
!11337 = !DILocation(line: 3284, column: 23, scope: !11303)
!11338 = !DILocation(line: 3284, column: 28, scope: !11303)
!11339 = !DILocation(line: 3284, column: 2, scope: !11303)
!11340 = !DILocation(line: 3286, column: 6, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 3286, column: 6)
!11342 = !DILocation(line: 3286, column: 11, scope: !11341)
!11343 = !DILocation(line: 3286, column: 21, scope: !11341)
!11344 = !DILocation(line: 3286, column: 6, scope: !11303)
!11345 = !DILocation(line: 3287, column: 13, scope: !11341)
!11346 = !DILocation(line: 3287, column: 22, scope: !11341)
!11347 = !DILocation(line: 3287, column: 34, scope: !11341)
!11348 = !DILocation(line: 3287, column: 3, scope: !11341)
!11349 = !DILocation(line: 3289, column: 2, scope: !11303)
!11350 = !DILocation(line: 3289, column: 5, scope: !11303)
!11351 = !DILocation(line: 3289, column: 12, scope: !11303)
!11352 = !DILocation(line: 3289, column: 20, scope: !11303)
!11353 = !DILocation(line: 3291, column: 2, scope: !11303)
!11354 = !DILocation(line: 3292, column: 1, scope: !11303)
!11355 = distinct !DISubprogram(name: "prep_ao_dma", scope: !3, file: !3, line: 3217, type: !9892, scopeLine: 3218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11356 = !DILocalVariable(name: "dev", arg: 1, scope: !11355, file: !3, line: 3217, type: !324)
!11357 = !DILocation(line: 3217, column: 46, scope: !11355)
!11358 = !DILocalVariable(name: "cmd", arg: 2, scope: !11355, file: !3, line: 3217, type: !7325)
!11359 = !DILocation(line: 3217, column: 76, scope: !11355)
!11360 = !DILocalVariable(name: "devpriv", scope: !11355, file: !3, line: 3219, type: !4645)
!11361 = !DILocation(line: 3219, column: 27, scope: !11355)
!11362 = !DILocation(line: 3219, column: 37, scope: !11355)
!11363 = !DILocation(line: 3219, column: 42, scope: !11355)
!11364 = !DILocalVariable(name: "s", scope: !11355, file: !3, line: 3220, type: !3995)
!11365 = !DILocation(line: 3220, column: 27, scope: !11355)
!11366 = !DILocation(line: 3220, column: 31, scope: !11355)
!11367 = !DILocation(line: 3220, column: 36, scope: !11355)
!11368 = !DILocalVariable(name: "nsamples", scope: !11355, file: !3, line: 3221, type: !7)
!11369 = !DILocation(line: 3221, column: 15, scope: !11355)
!11370 = !DILocalVariable(name: "nbytes", scope: !11355, file: !3, line: 3222, type: !7)
!11371 = !DILocation(line: 3222, column: 15, scope: !11355)
!11372 = !DILocalVariable(name: "i", scope: !11355, file: !3, line: 3223, type: !323)
!11373 = !DILocation(line: 3223, column: 6, scope: !11355)
!11374 = !DILocation(line: 3229, column: 12, scope: !11355)
!11375 = !DILocation(line: 3229, column: 21, scope: !11355)
!11376 = !DILocation(line: 3229, column: 33, scope: !11355)
!11377 = !DILocation(line: 3229, column: 2, scope: !11355)
!11378 = !DILocation(line: 3230, column: 12, scope: !11355)
!11379 = !DILocation(line: 3230, column: 21, scope: !11355)
!11380 = !DILocation(line: 3230, column: 33, scope: !11355)
!11381 = !DILocation(line: 3230, column: 2, scope: !11355)
!11382 = !DILocation(line: 3232, column: 40, scope: !11355)
!11383 = !DILocation(line: 3232, column: 45, scope: !11355)
!11384 = !DILocation(line: 3233, column: 12, scope: !11355)
!11385 = !DILocation(line: 3233, column: 21, scope: !11355)
!11386 = !DILocation(line: 3232, column: 13, scope: !11355)
!11387 = !DILocation(line: 3232, column: 11, scope: !11355)
!11388 = !DILocation(line: 3235, column: 6, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 3235, column: 6)
!11390 = !DILocation(line: 3235, column: 15, scope: !11389)
!11391 = !DILocation(line: 3235, column: 6, scope: !11355)
!11392 = !DILocation(line: 3236, column: 3, scope: !11389)
!11393 = !DILocation(line: 3238, column: 9, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 3238, column: 2)
!11395 = !DILocation(line: 3238, column: 7, scope: !11394)
!11396 = !DILocation(line: 3238, column: 14, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11394, file: !3, line: 3238, column: 2)
!11398 = !DILocation(line: 3238, column: 18, scope: !11397)
!11399 = !DILocation(line: 3238, column: 16, scope: !11397)
!11400 = !DILocation(line: 3238, column: 2, scope: !11394)
!11401 = !DILocation(line: 3239, column: 10, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 3238, column: 33)
!11403 = !DILocation(line: 3239, column: 19, scope: !11402)
!11404 = !DILocation(line: 3239, column: 36, scope: !11402)
!11405 = !DILocation(line: 3240, column: 10, scope: !11402)
!11406 = !DILocation(line: 3240, column: 19, scope: !11402)
!11407 = !DILocation(line: 3240, column: 31, scope: !11402)
!11408 = !DILocation(line: 3239, column: 3, scope: !11402)
!11409 = !DILocation(line: 3241, column: 2, scope: !11402)
!11410 = !DILocation(line: 3238, column: 29, scope: !11397)
!11411 = !DILocation(line: 3238, column: 2, scope: !11397)
!11412 = distinct !{!11412, !11400, !11413}
!11413 = !DILocation(line: 3241, column: 2, scope: !11394)
!11414 = !DILocation(line: 3243, column: 6, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 3243, column: 6)
!11416 = !DILocation(line: 3243, column: 11, scope: !11415)
!11417 = !DILocation(line: 3243, column: 20, scope: !11415)
!11418 = !DILocation(line: 3243, column: 34, scope: !11415)
!11419 = !DILocation(line: 3244, column: 6, scope: !11415)
!11420 = !DILocation(line: 3244, column: 9, scope: !11415)
!11421 = !DILocation(line: 3244, column: 16, scope: !11415)
!11422 = !DILocation(line: 3244, column: 30, scope: !11415)
!11423 = !DILocation(line: 3244, column: 35, scope: !11415)
!11424 = !DILocation(line: 3244, column: 27, scope: !11415)
!11425 = !DILocation(line: 3243, column: 6, scope: !11355)
!11426 = !DILocation(line: 3245, column: 3, scope: !11415)
!11427 = !DILocation(line: 3247, column: 30, scope: !11355)
!11428 = !DILocation(line: 3247, column: 35, scope: !11355)
!11429 = !DILocation(line: 3247, column: 11, scope: !11355)
!11430 = !DILocation(line: 3247, column: 9, scope: !11355)
!11431 = !DILocation(line: 3248, column: 6, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11355, file: !3, line: 3248, column: 6)
!11433 = !DILocation(line: 3248, column: 13, scope: !11432)
!11434 = !DILocation(line: 3248, column: 6, scope: !11355)
!11435 = !DILocation(line: 3249, column: 3, scope: !11432)
!11436 = !DILocation(line: 3250, column: 14, scope: !11355)
!11437 = !DILocation(line: 3250, column: 19, scope: !11355)
!11438 = !DILocation(line: 3250, column: 2, scope: !11355)
!11439 = !DILocation(line: 3252, column: 17, scope: !11355)
!11440 = !DILocation(line: 3252, column: 2, scope: !11355)
!11441 = !DILocation(line: 3254, column: 2, scope: !11355)
!11442 = !DILocation(line: 3255, column: 1, scope: !11355)
!11443 = distinct !DISubprogram(name: "set_dac_control0_reg", scope: !3, file: !3, line: 3133, type: !7323, scopeLine: 3135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11444 = !DILocalVariable(name: "dev", arg: 1, scope: !11443, file: !3, line: 3133, type: !324)
!11445 = !DILocation(line: 3133, column: 56, scope: !11443)
!11446 = !DILocalVariable(name: "cmd", arg: 2, scope: !11443, file: !3, line: 3134, type: !7325)
!11447 = !DILocation(line: 3134, column: 31, scope: !11443)
!11448 = !DILocalVariable(name: "devpriv", scope: !11443, file: !3, line: 3136, type: !4645)
!11449 = !DILocation(line: 3136, column: 27, scope: !11443)
!11450 = !DILocation(line: 3136, column: 37, scope: !11443)
!11451 = !DILocation(line: 3136, column: 42, scope: !11443)
!11452 = !DILocalVariable(name: "bits", scope: !11443, file: !3, line: 3137, type: !7)
!11453 = !DILocation(line: 3137, column: 15, scope: !11443)
!11454 = !DILocation(line: 3140, column: 6, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11443, file: !3, line: 3140, column: 6)
!11456 = !DILocation(line: 3140, column: 11, scope: !11455)
!11457 = !DILocation(line: 3140, column: 21, scope: !11455)
!11458 = !DILocation(line: 3140, column: 6, scope: !11443)
!11459 = !DILocation(line: 3141, column: 8, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11455, file: !3, line: 3140, column: 34)
!11461 = !DILocation(line: 3142, column: 7, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 3142, column: 7)
!11463 = !DILocation(line: 3142, column: 12, scope: !11462)
!11464 = !DILocation(line: 3142, column: 22, scope: !11462)
!11465 = !DILocation(line: 3142, column: 7, scope: !11460)
!11466 = !DILocation(line: 3143, column: 9, scope: !11462)
!11467 = !DILocation(line: 3143, column: 4, scope: !11462)
!11468 = !DILocation(line: 3144, column: 2, scope: !11460)
!11469 = !DILocation(line: 3145, column: 8, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11455, file: !3, line: 3144, column: 9)
!11471 = !DILocation(line: 3147, column: 6, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11443, file: !3, line: 3147, column: 6)
!11473 = !DILocation(line: 3147, column: 11, scope: !11472)
!11474 = !DILocation(line: 3147, column: 26, scope: !11472)
!11475 = !DILocation(line: 3147, column: 6, scope: !11443)
!11476 = !DILocation(line: 3148, column: 8, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11472, file: !3, line: 3147, column: 39)
!11478 = !DILocation(line: 3149, column: 7, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11477, file: !3, line: 3149, column: 7)
!11480 = !DILocation(line: 3149, column: 12, scope: !11479)
!11481 = !DILocation(line: 3149, column: 27, scope: !11479)
!11482 = !DILocation(line: 3149, column: 7, scope: !11477)
!11483 = !DILocation(line: 3150, column: 9, scope: !11479)
!11484 = !DILocation(line: 3150, column: 4, scope: !11479)
!11485 = !DILocation(line: 3151, column: 2, scope: !11477)
!11486 = !DILocation(line: 3152, column: 9, scope: !11443)
!11487 = !DILocation(line: 3152, column: 15, scope: !11443)
!11488 = !DILocation(line: 3152, column: 24, scope: !11443)
!11489 = !DILocation(line: 3152, column: 36, scope: !11443)
!11490 = !DILocation(line: 3152, column: 2, scope: !11443)
!11491 = !DILocation(line: 3153, column: 1, scope: !11443)
!11492 = !DILocalVariable(name: "dev", arg: 1, scope: !4320, file: !3, line: 3518, type: !324)
!11493 = !DILocation(line: 3518, column: 52, scope: !4320)
!11494 = !DILocalVariable(name: "address", arg: 2, scope: !4320, file: !3, line: 3518, type: !7)
!11495 = !DILocation(line: 3518, column: 70, scope: !4320)
!11496 = !DILocalVariable(name: "value", arg: 3, scope: !4320, file: !3, line: 3519, type: !1518)
!11497 = !DILocation(line: 3519, column: 12, scope: !4320)
!11498 = !DILocalVariable(name: "devpriv", scope: !4320, file: !3, line: 3521, type: !4645)
!11499 = !DILocation(line: 3521, column: 27, scope: !4320)
!11500 = !DILocation(line: 3521, column: 37, scope: !4320)
!11501 = !DILocation(line: 3521, column: 42, scope: !4320)
!11502 = !DILocalVariable(name: "bitstream", scope: !4320, file: !3, line: 3524, type: !7)
!11503 = !DILocation(line: 3524, column: 15, scope: !4320)
!11504 = !DILocation(line: 3524, column: 29, scope: !4320)
!11505 = !DILocation(line: 3524, column: 37, scope: !4320)
!11506 = !DILocation(line: 3524, column: 44, scope: !4320)
!11507 = !DILocation(line: 3524, column: 52, scope: !4320)
!11508 = !DILocation(line: 3524, column: 50, scope: !4320)
!11509 = !DILocalVariable(name: "bit", scope: !4320, file: !3, line: 3525, type: !7)
!11510 = !DILocation(line: 3525, column: 15, scope: !4320)
!11511 = !DILocalVariable(name: "register_bits", scope: !4320, file: !3, line: 3525, type: !7)
!11512 = !DILocation(line: 3525, column: 20, scope: !4320)
!11513 = !DILocation(line: 3528, column: 6, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 3528, column: 6)
!11515 = !DILocation(line: 3528, column: 14, scope: !11514)
!11516 = !DILocation(line: 3528, column: 6, scope: !4320)
!11517 = !DILocation(line: 3529, column: 3, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11514, file: !3, line: 3528, column: 38)
!11519 = !DILocation(line: 3530, column: 3, scope: !11518)
!11520 = !DILocation(line: 3532, column: 11, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 3532, column: 2)
!11522 = !DILocation(line: 3532, column: 7, scope: !11521)
!11523 = !DILocation(line: 3532, column: 42, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11521, file: !3, line: 3532, column: 2)
!11525 = !DILocation(line: 3532, column: 2, scope: !11521)
!11526 = !DILocation(line: 3533, column: 17, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 3532, column: 58)
!11528 = !DILocation(line: 3534, column: 7, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 3534, column: 7)
!11530 = !DILocation(line: 3534, column: 19, scope: !11529)
!11531 = !DILocation(line: 3534, column: 17, scope: !11529)
!11532 = !DILocation(line: 3534, column: 7, scope: !11527)
!11533 = !DILocation(line: 3535, column: 18, scope: !11529)
!11534 = !DILocation(line: 3535, column: 4, scope: !11529)
!11535 = !DILocation(line: 3536, column: 3, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 3536, column: 3)
!11537 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 3536, column: 3)
!11538 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 3536, column: 3)
!11539 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 3536, column: 3)
!11540 = !DILocation(line: 3537, column: 10, scope: !11527)
!11541 = !DILocation(line: 3537, column: 25, scope: !11527)
!11542 = !DILocation(line: 3537, column: 34, scope: !11527)
!11543 = !DILocation(line: 3537, column: 46, scope: !11527)
!11544 = !DILocation(line: 3537, column: 3, scope: !11527)
!11545 = !DILocation(line: 3538, column: 17, scope: !11527)
!11546 = !DILocation(line: 3539, column: 3, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 3539, column: 3)
!11548 = distinct !DILexicalBlock(scope: !11549, file: !3, line: 3539, column: 3)
!11549 = distinct !DILexicalBlock(scope: !11550, file: !3, line: 3539, column: 3)
!11550 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 3539, column: 3)
!11551 = !DILocation(line: 3540, column: 10, scope: !11527)
!11552 = !DILocation(line: 3540, column: 25, scope: !11527)
!11553 = !DILocation(line: 3540, column: 34, scope: !11527)
!11554 = !DILocation(line: 3540, column: 46, scope: !11527)
!11555 = !DILocation(line: 3540, column: 3, scope: !11527)
!11556 = !DILocation(line: 3541, column: 2, scope: !11527)
!11557 = !DILocation(line: 3532, column: 51, scope: !11524)
!11558 = !DILocation(line: 3532, column: 2, scope: !11524)
!11559 = distinct !{!11559, !11525, !11560}
!11560 = !DILocation(line: 3541, column: 2, scope: !11521)
!11561 = !DILocation(line: 3542, column: 2, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 3542, column: 2)
!11563 = distinct !DILexicalBlock(scope: !11564, file: !3, line: 3542, column: 2)
!11564 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 3542, column: 2)
!11565 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 3542, column: 2)
!11566 = !DILocation(line: 3543, column: 26, scope: !4320)
!11567 = !DILocation(line: 3543, column: 35, scope: !4320)
!11568 = !DILocation(line: 3543, column: 47, scope: !4320)
!11569 = !DILocation(line: 3543, column: 2, scope: !4320)
!11570 = !DILocation(line: 3544, column: 2, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 3544, column: 2)
!11572 = distinct !DILexicalBlock(scope: !11573, file: !3, line: 3544, column: 2)
!11573 = distinct !DILexicalBlock(scope: !11574, file: !3, line: 3544, column: 2)
!11574 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 3544, column: 2)
!11575 = !DILocation(line: 3545, column: 12, scope: !4320)
!11576 = !DILocation(line: 3545, column: 21, scope: !4320)
!11577 = !DILocation(line: 3545, column: 33, scope: !4320)
!11578 = !DILocation(line: 3545, column: 2, scope: !4320)
!11579 = !DILocation(line: 3546, column: 2, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11581, file: !3, line: 3546, column: 2)
!11581 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 3546, column: 2)
!11582 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 3546, column: 2)
!11583 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 3546, column: 2)
!11584 = !DILocation(line: 3547, column: 2, scope: !4320)
!11585 = !DILocation(line: 3548, column: 1, scope: !4320)
!11586 = !DILocalVariable(name: "dev", arg: 1, scope: !320, file: !3, line: 3551, type: !324)
!11587 = !DILocation(line: 3551, column: 51, scope: !320)
!11588 = !DILocalVariable(name: "caldac_channel", arg: 2, scope: !320, file: !3, line: 3552, type: !7)
!11589 = !DILocation(line: 3552, column: 21, scope: !320)
!11590 = !DILocalVariable(name: "value", arg: 3, scope: !320, file: !3, line: 3552, type: !7)
!11591 = !DILocation(line: 3552, column: 50, scope: !320)
!11592 = !DILocalVariable(name: "serial_bytes", scope: !320, file: !3, line: 3554, type: !11593)
!11593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1518, size: 24, elements: !441)
!11594 = !DILocation(line: 3554, column: 5, scope: !320)
!11595 = !DILocalVariable(name: "i2c_addr", scope: !320, file: !3, line: 3555, type: !1518)
!11596 = !DILocation(line: 3555, column: 5, scope: !320)
!11597 = !DILocation(line: 3567, column: 10, scope: !320)
!11598 = !DILocation(line: 3567, column: 2, scope: !320)
!11599 = !DILocation(line: 3569, column: 12, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !320, file: !3, line: 3567, column: 26)
!11601 = !DILocation(line: 3570, column: 3, scope: !11600)
!11602 = !DILocation(line: 3570, column: 19, scope: !11600)
!11603 = !DILocation(line: 3571, column: 3, scope: !11600)
!11604 = !DILocation(line: 3573, column: 12, scope: !11600)
!11605 = !DILocation(line: 3574, column: 3, scope: !11600)
!11606 = !DILocation(line: 3574, column: 19, scope: !11600)
!11607 = !DILocation(line: 3575, column: 3, scope: !11600)
!11608 = !DILocation(line: 3577, column: 12, scope: !11600)
!11609 = !DILocation(line: 3578, column: 3, scope: !11600)
!11610 = !DILocation(line: 3578, column: 19, scope: !11600)
!11611 = !DILocation(line: 3579, column: 3, scope: !11600)
!11612 = !DILocation(line: 3581, column: 12, scope: !11600)
!11613 = !DILocation(line: 3582, column: 3, scope: !11600)
!11614 = !DILocation(line: 3582, column: 19, scope: !11600)
!11615 = !DILocation(line: 3583, column: 3, scope: !11600)
!11616 = !DILocation(line: 3585, column: 12, scope: !11600)
!11617 = !DILocation(line: 3586, column: 3, scope: !11600)
!11618 = !DILocation(line: 3586, column: 19, scope: !11600)
!11619 = !DILocation(line: 3587, column: 3, scope: !11600)
!11620 = !DILocation(line: 3589, column: 12, scope: !11600)
!11621 = !DILocation(line: 3590, column: 3, scope: !11600)
!11622 = !DILocation(line: 3590, column: 19, scope: !11600)
!11623 = !DILocation(line: 3591, column: 3, scope: !11600)
!11624 = !DILocation(line: 3593, column: 12, scope: !11600)
!11625 = !DILocation(line: 3594, column: 3, scope: !11600)
!11626 = !DILocation(line: 3594, column: 19, scope: !11600)
!11627 = !DILocation(line: 3595, column: 3, scope: !11600)
!11628 = !DILocation(line: 3597, column: 12, scope: !11600)
!11629 = !DILocation(line: 3598, column: 3, scope: !11600)
!11630 = !DILocation(line: 3598, column: 19, scope: !11600)
!11631 = !DILocation(line: 3599, column: 3, scope: !11600)
!11632 = !DILocation(line: 3601, column: 3, scope: !11600)
!11633 = !DILocation(line: 3602, column: 3, scope: !11600)
!11634 = !DILocation(line: 3604, column: 44, scope: !320)
!11635 = !DILocation(line: 3604, column: 50, scope: !320)
!11636 = !DILocation(line: 3604, column: 56, scope: !320)
!11637 = !DILocation(line: 3604, column: 40, scope: !320)
!11638 = !DILocation(line: 3604, column: 20, scope: !320)
!11639 = !DILocation(line: 3604, column: 2, scope: !320)
!11640 = !DILocation(line: 3604, column: 18, scope: !320)
!11641 = !DILocation(line: 3605, column: 20, scope: !320)
!11642 = !DILocation(line: 3605, column: 26, scope: !320)
!11643 = !DILocation(line: 3605, column: 2, scope: !320)
!11644 = !DILocation(line: 3605, column: 18, scope: !320)
!11645 = !DILocation(line: 3606, column: 12, scope: !320)
!11646 = !DILocation(line: 3606, column: 17, scope: !320)
!11647 = !DILocation(line: 3606, column: 27, scope: !320)
!11648 = !DILocation(line: 3606, column: 2, scope: !320)
!11649 = !DILocation(line: 3607, column: 2, scope: !320)
!11650 = !DILocation(line: 3608, column: 1, scope: !320)
!11651 = !DILocalVariable(name: "dev", arg: 1, scope: !4336, file: !3, line: 3704, type: !324)
!11652 = !DILocation(line: 3704, column: 46, scope: !4336)
!11653 = !DILocalVariable(name: "address", arg: 2, scope: !4336, file: !3, line: 3704, type: !1518)
!11654 = !DILocation(line: 3704, column: 54, scope: !4336)
!11655 = !DILocalVariable(name: "devpriv", scope: !4336, file: !3, line: 3706, type: !4645)
!11656 = !DILocation(line: 3706, column: 27, scope: !4336)
!11657 = !DILocation(line: 3706, column: 37, scope: !4336)
!11658 = !DILocation(line: 3706, column: 42, scope: !4336)
!11659 = !DILocalVariable(name: "bitstream", scope: !4336, file: !3, line: 3709, type: !7)
!11660 = !DILocation(line: 3709, column: 15, scope: !4336)
!11661 = !DILocation(line: 3709, column: 49, scope: !4336)
!11662 = !DILocation(line: 3709, column: 47, scope: !4336)
!11663 = !DILocalVariable(name: "bit", scope: !4336, file: !3, line: 3710, type: !7)
!11664 = !DILocation(line: 3710, column: 15, scope: !4336)
!11665 = !DILocalVariable(name: "plx_control_addr", scope: !4336, file: !3, line: 3711, type: !11666)
!11666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !374)
!11667 = !DILocation(line: 3711, column: 23, scope: !4336)
!11668 = !DILocation(line: 3712, column: 3, scope: !4336)
!11669 = !DILocation(line: 3712, column: 12, scope: !4336)
!11670 = !DILocation(line: 3712, column: 27, scope: !4336)
!11671 = !DILocalVariable(name: "value", scope: !4336, file: !3, line: 3713, type: !1025)
!11672 = !DILocation(line: 3713, column: 6, scope: !4336)
!11673 = !DILocation(line: 3717, column: 2, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !3, line: 3717, column: 2)
!11675 = distinct !DILexicalBlock(scope: !11676, file: !3, line: 3717, column: 2)
!11676 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 3717, column: 2)
!11677 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 3717, column: 2)
!11678 = !DILocation(line: 3718, column: 2, scope: !4336)
!11679 = !DILocation(line: 3718, column: 11, scope: !4336)
!11680 = !DILocation(line: 3718, column: 28, scope: !4336)
!11681 = !DILocation(line: 3720, column: 2, scope: !4336)
!11682 = !DILocation(line: 3720, column: 11, scope: !4336)
!11683 = !DILocation(line: 3720, column: 28, scope: !4336)
!11684 = !DILocation(line: 3721, column: 9, scope: !4336)
!11685 = !DILocation(line: 3721, column: 18, scope: !4336)
!11686 = !DILocation(line: 3721, column: 36, scope: !4336)
!11687 = !DILocation(line: 3721, column: 2, scope: !4336)
!11688 = !DILocation(line: 3723, column: 2, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 3723, column: 2)
!11690 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 3723, column: 2)
!11691 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 3723, column: 2)
!11692 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 3723, column: 2)
!11693 = !DILocation(line: 3724, column: 2, scope: !4336)
!11694 = !DILocation(line: 3724, column: 11, scope: !4336)
!11695 = !DILocation(line: 3724, column: 28, scope: !4336)
!11696 = !DILocation(line: 3725, column: 9, scope: !4336)
!11697 = !DILocation(line: 3725, column: 18, scope: !4336)
!11698 = !DILocation(line: 3725, column: 36, scope: !4336)
!11699 = !DILocation(line: 3725, column: 2, scope: !4336)
!11700 = !DILocation(line: 3728, column: 11, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 3728, column: 2)
!11702 = !DILocation(line: 3728, column: 7, scope: !11701)
!11703 = !DILocation(line: 3728, column: 42, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11701, file: !3, line: 3728, column: 2)
!11705 = !DILocation(line: 3728, column: 2, scope: !11701)
!11706 = !DILocation(line: 3730, column: 3, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11708, file: !3, line: 3730, column: 3)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !3, line: 3730, column: 3)
!11709 = distinct !DILexicalBlock(scope: !11710, file: !3, line: 3730, column: 3)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 3730, column: 3)
!11711 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 3728, column: 58)
!11712 = !DILocation(line: 3731, column: 7, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 3731, column: 7)
!11714 = !DILocation(line: 3731, column: 19, scope: !11713)
!11715 = !DILocation(line: 3731, column: 17, scope: !11713)
!11716 = !DILocation(line: 3731, column: 7, scope: !11711)
!11717 = !DILocation(line: 3732, column: 4, scope: !11713)
!11718 = !DILocation(line: 3732, column: 13, scope: !11713)
!11719 = !DILocation(line: 3732, column: 30, scope: !11713)
!11720 = !DILocation(line: 3734, column: 4, scope: !11713)
!11721 = !DILocation(line: 3734, column: 13, scope: !11713)
!11722 = !DILocation(line: 3734, column: 30, scope: !11713)
!11723 = !DILocation(line: 3735, column: 10, scope: !11711)
!11724 = !DILocation(line: 3735, column: 19, scope: !11711)
!11725 = !DILocation(line: 3735, column: 37, scope: !11711)
!11726 = !DILocation(line: 3735, column: 3, scope: !11711)
!11727 = !DILocation(line: 3737, column: 3, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 3737, column: 3)
!11729 = distinct !DILexicalBlock(scope: !11730, file: !3, line: 3737, column: 3)
!11730 = distinct !DILexicalBlock(scope: !11731, file: !3, line: 3737, column: 3)
!11731 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 3737, column: 3)
!11732 = !DILocation(line: 3738, column: 3, scope: !11711)
!11733 = !DILocation(line: 3738, column: 12, scope: !11711)
!11734 = !DILocation(line: 3738, column: 29, scope: !11711)
!11735 = !DILocation(line: 3739, column: 10, scope: !11711)
!11736 = !DILocation(line: 3739, column: 19, scope: !11711)
!11737 = !DILocation(line: 3739, column: 37, scope: !11711)
!11738 = !DILocation(line: 3739, column: 3, scope: !11711)
!11739 = !DILocation(line: 3740, column: 3, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11741, file: !3, line: 3740, column: 3)
!11741 = distinct !DILexicalBlock(scope: !11742, file: !3, line: 3740, column: 3)
!11742 = distinct !DILexicalBlock(scope: !11743, file: !3, line: 3740, column: 3)
!11743 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 3740, column: 3)
!11744 = !DILocation(line: 3741, column: 3, scope: !11711)
!11745 = !DILocation(line: 3741, column: 12, scope: !11711)
!11746 = !DILocation(line: 3741, column: 29, scope: !11711)
!11747 = !DILocation(line: 3742, column: 10, scope: !11711)
!11748 = !DILocation(line: 3742, column: 19, scope: !11711)
!11749 = !DILocation(line: 3742, column: 37, scope: !11711)
!11750 = !DILocation(line: 3742, column: 3, scope: !11711)
!11751 = !DILocation(line: 3743, column: 2, scope: !11711)
!11752 = !DILocation(line: 3728, column: 51, scope: !11704)
!11753 = !DILocation(line: 3728, column: 2, scope: !11704)
!11754 = distinct !{!11754, !11705, !11755}
!11755 = !DILocation(line: 3743, column: 2, scope: !11701)
!11756 = !DILocation(line: 3745, column: 8, scope: !4336)
!11757 = !DILocation(line: 3746, column: 11, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 3746, column: 2)
!11759 = !DILocation(line: 3746, column: 7, scope: !11758)
!11760 = !DILocation(line: 3746, column: 38, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11758, file: !3, line: 3746, column: 2)
!11762 = !DILocation(line: 3746, column: 2, scope: !11758)
!11763 = !DILocation(line: 3748, column: 3, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11765, file: !3, line: 3748, column: 3)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 3748, column: 3)
!11766 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 3748, column: 3)
!11767 = distinct !DILexicalBlock(scope: !11768, file: !3, line: 3748, column: 3)
!11768 = distinct !DILexicalBlock(scope: !11761, file: !3, line: 3746, column: 54)
!11769 = !DILocation(line: 3749, column: 3, scope: !11768)
!11770 = !DILocation(line: 3749, column: 12, scope: !11768)
!11771 = !DILocation(line: 3749, column: 29, scope: !11768)
!11772 = !DILocation(line: 3750, column: 10, scope: !11768)
!11773 = !DILocation(line: 3750, column: 19, scope: !11768)
!11774 = !DILocation(line: 3750, column: 37, scope: !11768)
!11775 = !DILocation(line: 3750, column: 3, scope: !11768)
!11776 = !DILocation(line: 3751, column: 3, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11778, file: !3, line: 3751, column: 3)
!11778 = distinct !DILexicalBlock(scope: !11779, file: !3, line: 3751, column: 3)
!11779 = distinct !DILexicalBlock(scope: !11780, file: !3, line: 3751, column: 3)
!11780 = distinct !DILexicalBlock(scope: !11768, file: !3, line: 3751, column: 3)
!11781 = !DILocation(line: 3752, column: 3, scope: !11768)
!11782 = !DILocation(line: 3752, column: 12, scope: !11768)
!11783 = !DILocation(line: 3752, column: 29, scope: !11768)
!11784 = !DILocation(line: 3753, column: 10, scope: !11768)
!11785 = !DILocation(line: 3753, column: 19, scope: !11768)
!11786 = !DILocation(line: 3753, column: 37, scope: !11768)
!11787 = !DILocation(line: 3753, column: 3, scope: !11768)
!11788 = !DILocation(line: 3754, column: 3, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11790, file: !3, line: 3754, column: 3)
!11790 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 3754, column: 3)
!11791 = distinct !DILexicalBlock(scope: !11792, file: !3, line: 3754, column: 3)
!11792 = distinct !DILexicalBlock(scope: !11768, file: !3, line: 3754, column: 3)
!11793 = !DILocation(line: 3755, column: 13, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11768, file: !3, line: 3755, column: 7)
!11795 = !DILocation(line: 3755, column: 7, scope: !11794)
!11796 = !DILocation(line: 3755, column: 31, scope: !11794)
!11797 = !DILocation(line: 3755, column: 7, scope: !11768)
!11798 = !DILocation(line: 3756, column: 13, scope: !11794)
!11799 = !DILocation(line: 3756, column: 10, scope: !11794)
!11800 = !DILocation(line: 3756, column: 4, scope: !11794)
!11801 = !DILocation(line: 3757, column: 2, scope: !11768)
!11802 = !DILocation(line: 3746, column: 47, scope: !11761)
!11803 = !DILocation(line: 3746, column: 2, scope: !11761)
!11804 = distinct !{!11804, !11762, !11805}
!11805 = !DILocation(line: 3757, column: 2, scope: !11758)
!11806 = !DILocation(line: 3760, column: 2, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 3760, column: 2)
!11808 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 3760, column: 2)
!11809 = distinct !DILexicalBlock(scope: !11810, file: !3, line: 3760, column: 2)
!11810 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 3760, column: 2)
!11811 = !DILocation(line: 3761, column: 2, scope: !4336)
!11812 = !DILocation(line: 3761, column: 11, scope: !4336)
!11813 = !DILocation(line: 3761, column: 28, scope: !4336)
!11814 = !DILocation(line: 3762, column: 9, scope: !4336)
!11815 = !DILocation(line: 3762, column: 18, scope: !4336)
!11816 = !DILocation(line: 3762, column: 36, scope: !4336)
!11817 = !DILocation(line: 3762, column: 2, scope: !4336)
!11818 = !DILocation(line: 3764, column: 9, scope: !4336)
!11819 = !DILocation(line: 3764, column: 2, scope: !4336)
!11820 = distinct !DISubprogram(name: "cb_pcidas64_pci_probe", scope: !3, file: !3, line: 4081, type: !4366, scopeLine: 4083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !413)
!11821 = !DILocalVariable(name: "dev", arg: 1, scope: !11820, file: !3, line: 4081, type: !4368)
!11822 = !DILocation(line: 4081, column: 50, scope: !11820)
!11823 = !DILocalVariable(name: "id", arg: 2, scope: !11820, file: !3, line: 4082, type: !4353)
!11824 = !DILocation(line: 4082, column: 34, scope: !11820)
!11825 = !DILocation(line: 4084, column: 32, scope: !11820)
!11826 = !DILocation(line: 4085, column: 11, scope: !11820)
!11827 = !DILocation(line: 4085, column: 15, scope: !11820)
!11828 = !DILocation(line: 4084, column: 9, scope: !11820)
!11829 = !DILocation(line: 4084, column: 2, scope: !11820)
